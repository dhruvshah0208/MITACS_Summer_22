(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    753129,      14400]
NotebookOptionsPosition[    750855,      14361]
NotebookOutlinePosition[    751289,      14378]
CellTagsIndexPosition[    751246,      14375]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Remove", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
  RowBox[{"(*", 
   RowBox[{"ICs", " ", "-", " ", 
    RowBox[{"Initial", " ", "Conditions"}]}], " ", "*)"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Error", " ", "while", " ", "cosntraining", " ", "u"}], " ", 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ffCartPendulum", "[", 
    RowBox[{
    "ICs_", ",", "n_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "A_", ",", 
     "order_", ",", "maxIter_", ",", "InitGuess_"}], "]"}], ":=", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x", ",", "dist", ",", "xdot", ",", "f", ",", "\[Theta]", ",", 
       "\[Theta]dot", ",", "\[Lambda]1", ",", "\[Lambda]2", ",", "\[Lambda]3",
        ",", "\[Lambda]4", ",", "\[CapitalDelta]t", ",", "bcs", ",", "eqns", 
       ",", "sv", ",", "froot", ",", "xff", ",", "xdotff", ",", "xff0", ",", 
       "xdotff0", ",", "\[Theta]ff0", ",", "\[Theta]dotff0", ",", "uff0", ",",
        "\[Theta]ff", ",", "\[Theta]dotff", ",", "uff", ",", "\[Lambda]1ff0", 
       ",", "\[Lambda]2ff0", ",", "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", 
       "uMax", ",", "uMin", ",", "expr", ",", 
       RowBox[{"xGuess", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          SubscriptBox["xGuess", "i"], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}]}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"\[CapitalDelta]t", "=", 
       RowBox[{"\[Tau]", "/", "n"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"{", 
         RowBox[{
         "x_", ",", "xdot_", ",", "\[Theta]_", ",", "\[Theta]dot_", ",", 
          "\[Lambda]1_", ",", "\[Lambda]2_", ",", "\[Lambda]3_", ",", 
          "\[Lambda]4_"}], "}"}], "]"}], ":=", 
       RowBox[{"{", "\n", "\t", 
        RowBox[{"xdot", ",", "\n", "\t", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}],
           " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
               ")"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", "\[Lambda]2"}], 
              ")"}]}], "+", 
            RowBox[{"A", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", "\n", 
         "\t", "\[Theta]dot", ",", "\n", "\t", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}],
           " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{"1", "/", 
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"A", " ", 
                   RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
                 ")"}]}], ")"}]}], 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[Lambda]2"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
              ")"}]}], "-", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "-", 
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", "\n", 
         "\t", "0", ",", "\n", "\t", 
         RowBox[{"-", "\[Lambda]1"}], ",", "\n", "\t", 
         RowBox[{
          RowBox[{"2", "/", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"A", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A", "-", "2"}],
              ")"}], "^", "3"}]}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"4", " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"A", " ", 
                   RowBox[{"\[Lambda]4", "^", "2"}], " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
                  RowBox[{"4", " ", "A", " ", 
                   RowBox[{"\[Lambda]2", "^", "2"}]}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"A", "+", "2"}], ")"}], " ", 
                   RowBox[{"\[Lambda]4", "^", "2"}]}]}], ")"}]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"A", " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "-", 
                  RowBox[{"3", " ", "A"}], "+", "2"}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"A", " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A", "-", 
                  "2"}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"A", " ", 
                   RowBox[{"\[Theta]dot", "^", "2"}], " ", "\[Lambda]2"}], 
                  "-", "\[Lambda]4"}], ")"}]}]}], ")"}]}], "+", 
            RowBox[{"A", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"A", "-", "2"}], ")"}], " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A"}], ")"}], 
             " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"A", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A", "-", 
               "2"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{
                RowBox[{"\[Theta]dot", "^", "2"}], " ", "\[Lambda]4"}]}], 
              ")"}]}], "-", 
            RowBox[{"4", " ", "\[Lambda]2", " ", "\[Lambda]4", " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"3", " ", "A", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
               RowBox[{"3", " ", "A"}], "+", "2"}], ")"}]}]}], ")"}]}], ",", 
         "\n", "\t", 
         RowBox[{
          RowBox[{
           RowBox[{"4", " ", "/", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"A", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A", "-", "2"}],
              ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{"A", " ", "\[Theta]dot", " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}]}], ")"}]}], 
          "-", "\[Lambda]3"}]}], "\n", "}"}]}], ";", 
      StyleBox["\[IndentingNewLine]",
       FontWeight->"Plain"], 
      RowBox[{
       StyleBox["xGuess",
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       StyleBox["=",
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       RowBox[{
        StyleBox["Table",
         FontWeight->"Plain"], 
        StyleBox["[",
         FontWeight->"Plain"], 
        RowBox[{
         RowBox[{
          StyleBox["If",
           FontWeight->"Plain"], 
          StyleBox["[",
           FontWeight->"Plain"], 
          RowBox[{
           StyleBox[
            RowBox[{"i", " ", "!=", " ", 
             RowBox[{"-", "1"}]}],
            FontWeight->"Plain"], 
           StyleBox[",",
            FontWeight->"Plain"], 
           RowBox[{
            StyleBox[
             SubscriptBox["xGuess", 
              RowBox[{"i", "+", "1"}]],
             FontWeight->"Plain"], 
            StyleBox[" ",
             FontWeight->"Plain"], 
            StyleBox["=",
             FontWeight->"Plain"], 
            StyleBox[" ",
             FontWeight->"Plain"], 
            RowBox[{
             SubscriptBox[
              StyleBox["xGuess",
               FontWeight->"Plain"], "i"], 
             StyleBox[" ",
              FontWeight->"Plain"], 
             StyleBox["+",
              FontWeight->"Plain"], 
             StyleBox[
              RowBox[{"\[CapitalDelta]t", "*", 
               RowBox[{"f", "[", 
                SubscriptBox["xGuess", "i"], "]"}]}],
              FontWeight->"Plain"]}]}], 
           StyleBox[",",
            FontWeight->"Plain"], 
           RowBox[{
            SubscriptBox[
             StyleBox["xGuess",
              FontWeight->"Plain"], "0"], " ", "=", " ", 
            RowBox[{"{", 
             StyleBox[
              RowBox[{
               RowBox[{"ICs", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "3", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "4", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "3", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "4", "]"}], "]"}]}],
              FontWeight->"Plain"], 
             StyleBox["}",
              FontWeight->"Plain"]}]}]}], 
          StyleBox["]",
           FontWeight->"Plain"]}], 
         StyleBox[",",
          FontWeight->"Plain"], 
         StyleBox[
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"-", "1"}], ",", 
            RowBox[{"n", "-", "1"}]}], "}"}],
          FontWeight->"Plain"]}], 
        StyleBox["]",
         FontWeight->"Plain"]}]}], 
      StyleBox[";",
       FontWeight->"Plain"], "\[IndentingNewLine]", 
      RowBox[{"bcs", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"x", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"xdot", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"x", ",", " ", "n"}], "]"}], "==", 
          RowBox[{"Subscript", "[", 
           RowBox[{"xdot", ",", " ", "n"}], "]"}], "==", "0"}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]dot", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]dot", ",", " ", "n"}], "]"}], "==", "0"}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]", ",", " ", "n"}], "]"}], "==", "\[Pi]"}]}], 
        "}"}]}], ";", "\n", 
      RowBox[{"eqns", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Join", "[", 
         RowBox[{"bcs", ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Thread", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], "==", 
              "\n", 
              RowBox[{
               RowBox[{
                RowBox[{"1", "/", "2"}], " ", "\[CapitalDelta]t", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"f", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}], "]"}], "+", 
                  "\n", 
                  RowBox[{"f", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], 
                   "]"}]}], ")"}]}], "+", "\n", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Subscript", "[", 
                  RowBox[{"x", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"xdot", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]dot", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]1", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]2", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]3", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]4", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}]}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
        "]"}]}], ";", "\n", 
      RowBox[{"sv", " ", "=", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", "\n", 
             "\t\t\t\t\t", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "7", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "8", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", "1"}], 
        "]"}]}], ";", " ", "\n", 
      RowBox[{"froot", "=", 
       RowBox[{"FindRoot", "[", 
        RowBox[{"eqns", ",", "sv", ",", 
         RowBox[{"MaxIterations", "->", "maxIter"}]}], "]"}]}], ";", "\n", 
      RowBox[{"xff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"xdotff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Theta]ff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Theta]dotff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]1ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]2ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]3ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]4ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"expr", " ", "=", " ", 
       RowBox[{
        RowBox[{"1", "/", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"A", " ", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"Subscript", "[", 
               RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}], "^", 
             "2"}]}]}], ")"}]}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], 
           RowBox[{"Cos", "[", 
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}]}], "-", 
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}]}], ")"}]}]}], ";", 
      "\n", "\n", 
      RowBox[{"uMax", " ", "=", " ", "2"}], ";", "\n", 
      RowBox[{"uMin", " ", "=", " ", 
       RowBox[{"-", "2"}]}], ";", "\n", 
      RowBox[{"uff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Piecewise", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"expr", ",", 
                 RowBox[{
                 "uMin", " ", "<=", " ", "expr", " ", "<=", " ", "uMax"}]}], 
                "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"uMin", ",", 
                 RowBox[{"expr", " ", "<", "uMin"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"uMax", ",", 
                 RowBox[{"expr", " ", ">", " ", "uMax"}]}], "}"}]}], "}"}], 
             "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      "\n", 
      RowBox[{
       RowBox[{"xff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xdotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "\[Pi]"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"uff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"uff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", "\n", 
      RowBox[{"{", 
       RowBox[{
       "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
        "uff", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
        "\[Lambda]3ff0", ",", "\[Lambda]4ff0"}], "}"}]}]}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"testSwingUp", "[", 
    RowBox[{
    "ICs_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "uff0_", ",", "A_"}], "]"}],
    ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eq", ",", "init", ",", "x", ",", "xdot", ",", "\[Theta]", ",", 
       "\[Theta]dot", ",", "xs", ",", "xdots", ",", "\[Theta]s", ",", 
       "\[Theta]dots", ",", "t", ",", "J"}], "}"}], ",", "\n", 
     RowBox[{
      RowBox[{"eq", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"x", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"xdot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"xdot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"uff0", "[", "t", "]"}], "+", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
             RowBox[{"A", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]dot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"uff0", "[", "t", "]"}], "+", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
            ")"}]}]}]}], "}"}]}], ";", "\n", 
      RowBox[{"init", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"xdot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]dot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
        "}"}], "=", 
       RowBox[{"NDSolveValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"eq", ",", "init"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
         RowBox[{"Method", "->", 
          RowBox[{"{", 
           RowBox[{"\"\<DiscontinuityProcessing\>\"", "->", "None"}], 
           "}"}]}]}], "]"}]}], ";", "\n", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"{", 
       RowBox[{
       "xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots", ",", "uff0",
         ",", "J"}], "}"}]}]}], "]"}]}], "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{"CalculateSMatrix", "[", 
   RowBox[{
   "x1a_", ",", "xdot1a_", ",", "\[Theta]1a_", ",", "\[Theta]dot1a_", ",", 
    "u1a_", ",", "\[Tau]_", ",", "A_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x", ",", "L", ",", "RHS", ",", "xdot", ",", "\[Theta]", ",", 
      "\[Theta]dot", ",", "u", ",", "K", ",", "S", ",", "soltn", ",", "Af", 
      ",", "Bf", ",", "Q", ",", "fx", ",", "xState", ",", "R", ",", "Mf", ",",
       "x2dot", ",", "\[Theta]2dot", ",", "S0", ",", "sol2", ",", "t"}], 
     "}"}], ",", "\n", "\n", 
    RowBox[{
     RowBox[{"xState", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
       "}"}]}], ";", "\n", 
     RowBox[{"x2dot", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{"u", "+", 
         RowBox[{"A", " ", 
          RowBox[{"\[Theta]dot", "^", "2"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"A", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ";", "\n", 
     RowBox[{"\[Theta]2dot", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{"u", "+", 
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ")"}]}]}], 
     ";", "\n", 
     RowBox[{"fx", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
       "xdot", ",", "x2dot", ",", "\[Theta]dot", ",", "\[Theta]2dot"}], 
       "}"}]}], ";", "\n", 
     RowBox[{"L", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", "2"}], "*", 
       RowBox[{"u", "^", "2"}]}]}], ";", "\n", 
     RowBox[{"Af", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{"fx", ",", "xState"}], "]"}]}], ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{"For", " ", "nD", " ", "stuff", " ", "use", " ", "Grad"}], 
      "*)"}], "\n", 
     RowBox[{"Bf", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"fx", ",", "u"}], "]"}]}], " ", ";", 
     RowBox[{"(*", 
      RowBox[{"For", " ", "1", "D", " ", "stuff", " ", "use", " ", "D"}], 
      "*)"}], "\n", 
     RowBox[{"Q", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{
        RowBox[{"Grad", "[", 
         RowBox[{"L", ",", "xState"}], "]"}], ",", "xState"}], "]"}]}], ";", 
     " ", 
     RowBox[{"(*", " ", 
      RowBox[{"Fix", " ", "this"}], " ", "*)"}], "\n", 
     RowBox[{"Q", " ", "=", " ", 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"1", "0", "0", "0"},
         {"0", "1", "0", "0"},
         {"0", "0", "1", "0"},
         {"0", "0", "0", "1"}
        },
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}}], "\[NoBreak]", ")"}]}], ";", "\n", 
     RowBox[{"Mf", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{"L", ",", "u"}], "]"}], ",", "xState"}], "]"}]}], ";", "\n", 
     RowBox[{"R", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"L", ",", 
        RowBox[{"{", 
         RowBox[{"u", ",", "2"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"S0", " ", "=", " ", 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]]}], ";", "\n", 
     RowBox[{
      RowBox[{"RHS", "[", "t_", "]"}], " ", ":=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"IdentityMatrix", "[", "4", "]"}], " ", "+", " ", 
         RowBox[{
          RowBox[{"Af", "\[Transpose]"}], ".", 
          RowBox[{"S", "[", "t", "]"}]}], " ", "+", " ", 
         RowBox[{
          RowBox[{"S", "[", "t", "]"}], ".", "Af"}], " ", "-", " ", 
         RowBox[{"KroneckerProduct", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"S", "[", "t", "]"}], ".", "Bf"}], ",", 
           RowBox[{
            RowBox[{"Bf", "\[Transpose]"}], ".", 
            RowBox[{"S", "[", "t", "]"}]}]}], "]"}]}], ")"}], " ", "/.", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "->", " ", 
          RowBox[{"x1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"xdot", " ", "->", " ", 
          RowBox[{"xdot1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"\[Theta]", " ", "->", 
          RowBox[{"\[Theta]1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"\[Theta]dot", " ", "->", " ", 
          RowBox[{"\[Theta]dot1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"u", " ", "->", " ", 
          RowBox[{"u1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}]}], "}"}]}]}], ";", 
     "\n", 
     RowBox[{"sol2", " ", "=", " ", 
      RowBox[{"S", " ", "/.", " ", 
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"S", "'"}], "[", "t", "]"}], "==", " ", 
            RowBox[{"RHS", "[", "t", "]"}]}], ",", 
           RowBox[{
            RowBox[{"S", "[", "0", "]"}], "==", "S0"}]}], "}"}], ",", "S", 
         ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], " ", "}"}]}], "]"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"S", " ", "=", " ", 
      RowBox[{"sol2", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}]}], "\n", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CalculateGains", "[", 
   RowBox[{
   "x1a_", ",", "xdot1a_", ",", "\[Theta]1a_", ",", "\[Theta]dot1a_", ",", 
    "u1a_", ",", "time_", ",", "A_", ",", "\[Tau]_", ",", "S_"}], "]"}], ":=",
   " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x", ",", "L", ",", "RHS", ",", "xdot", ",", "\[Theta]", ",", 
      "\[Theta]dot", ",", "u", ",", "K", ",", "Af", ",", "Bf", ",", "Q", ",", 
      "fx", ",", "xState", ",", "R", ",", "Mf", ",", "x2dot", ",", 
      "\[Theta]2dot", ",", "S0", ",", "sol2", ",", "t"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"xState", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
       "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"x2dot", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{"u", "+", 
         RowBox[{"A", " ", 
          RowBox[{"\[Theta]dot", "^", "2"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"A", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Theta]2dot", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{"u", "+", 
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ")"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"fx", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
       "xdot", ",", "x2dot", ",", "\[Theta]dot", ",", "\[Theta]2dot"}], 
       "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Bf", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"fx", ",", "u"}], "]"}]}], " ", ";", 
     RowBox[{"(*", 
      RowBox[{"For", " ", "1", "D", " ", "stuff", " ", "use", " ", "D"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"K", " ", "=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Bf", "\[Transpose]"}], ".", 
         RowBox[{"S", "[", 
          RowBox[{"\[Tau]", " ", "-", " ", "time"}], "]"}]}], ")"}], "/.", 
       " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "->", " ", 
          RowBox[{"x1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"xdot", " ", "->", " ", 
          RowBox[{"xdot1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"\[Theta]", " ", "->", 
          RowBox[{"\[Theta]1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"\[Theta]dot", " ", "->", " ", 
          RowBox[{"\[Theta]dot1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"u", " ", "->", " ", 
          RowBox[{"u1a", "[", "time", "]"}]}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", "K"}]}], "\n", "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"testWithFB", "[", 
    RowBox[{
    "ICs_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "xff0_", ",", "xdotff0_", 
     ",", "\[Theta]ff0_", ",", "\[Theta]dotff0_", ",", "uff0_", ",", "A_"}], 
    "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eq", ",", "init", ",", "\[Theta]", ",", "\[Theta]dot", ",", 
       "\[Theta]ff", ",", "\[Theta]dotff", ",", "x", ",", "xdot", ",", "xff", 
       ",", "xdotff", ",", "uff", ",", "t", ",", "\[Kappa]1", ",", 
       "\[Kappa]2", ",", "\[Kappa]3", ",", "\[Kappa]4", ",", "ufb", ",", "u", 
       ",", "\[Theta]s", ",", "\[Theta]dots", ",", "xs", ",", "xdots", ",", 
       "us", ",", "J", ",", "S", ",", "K"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Kappa]1", "=", 
       RowBox[{"\[Kappa]2", "=", "3"}]}], ";", "  ", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"lqr", " ", "for", " ", "q"}], "=", 
        RowBox[{"r", " ", "for", " ", "balancing", " ", "pendulum"}]}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"\[Kappa]3", " ", "=", " ", 
       RowBox[{"-", "0.1"}]}], ";", 
      RowBox[{"\[Kappa]4", " ", "=", " ", 
       RowBox[{"-", "0.65"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"xff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xdotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "\[Pi]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"uff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"uff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"S", " ", "=", " ", 
       RowBox[{"CalculateSMatrix", "[", 
        RowBox[{
        "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
         "uff", ",", "\[Tau]", ",", "A"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"K", "[", "t_", "]"}], " ", ":=", " ", 
       RowBox[{"CalculateGains", "[", 
        RowBox[{
        "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
         "uff", ",", "t", ",", "A", ",", "\[Tau]", ",", "S"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ufb", "[", "t_", "]"}], " ", ":=", " ", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"K", "[", "t", "]"}], ".", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"xff", "[", "t", "]"}], "-", 
                RowBox[{"x", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"xdotff", "[", "t", "]"}], "-", 
                RowBox[{"xdot", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]dot", "[", "t", "]"}]}]}], "}"}]}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         RowBox[{
          RowBox[{"\[Kappa]1", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]3", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"xff", "[", "t", "]"}], "-", 
             RowBox[{"x", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"xdotff", "[", "t", "]"}], "-", 
             RowBox[{"xdot", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"u", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{"uff", "[", "t", "]"}], "+", 
        RowBox[{"ufb", "[", "t", "]"}]}]}], ";", "\n", "\n", 
      RowBox[{"eq", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"x", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"xdot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"xdot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"u", "[", "t", "]"}], "+", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
             RowBox[{"A", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]dot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"u", "[", "t", "]"}], "+", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
            ")"}]}]}]}], "}"}]}], ";", "\n", "\n", 
      RowBox[{"init", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"xdot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]dot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}], ";", "\n", "\n", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
        "}"}], "=", 
       RowBox[{"NDSolveValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"eq", ",", "init"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
         RowBox[{"Method", "->", 
          RowBox[{"{", 
           RowBox[{"\"\<DiscontinuityProcessing\>\"", "->", "None"}], 
           "}"}]}]}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"us", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{"uff", "[", "t", "]"}], "+", 
        RowBox[{"Piecewise", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"K", "[", "t", "]"}], ".", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"xff", "[", "t", "]"}], "-", 
                 RowBox[{"xs", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"xdotff", "[", "t", "]"}], "-", 
                 RowBox[{"xdots", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                 RowBox[{"\[Theta]s", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                 RowBox[{"\[Theta]dots", "[", "t", "]"}]}]}], "}"}]}], ",", 
             RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
          RowBox[{
           RowBox[{"\[Kappa]1", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]s", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]dots", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]3", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"xff", "[", "t", "]"}], "-", 
              RowBox[{"xs", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]4", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"xdotff", "[", "t", "]"}], "-", 
              RowBox[{"xdots", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"us", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"{", 
       RowBox[{
       "xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots", ",", "us", 
        ",", "J"}], "}"}]}]}], "]"}]}], "\n"}], "\n"}], "Code",
 CellChangeTimes->{{3.862753343189165*^9, 3.862753411389415*^9}, {
   3.8627553611496043`*^9, 3.8627553647834463`*^9}, {3.862755542386807*^9, 
   3.862755582254092*^9}, {3.862756179429644*^9, 3.8627562078485813`*^9}, 
   3.8627563320549693`*^9, {3.8627564690202875`*^9, 3.8627565488258357`*^9}, {
   3.8627568793814173`*^9, 3.8627568873778677`*^9}, 3.8627585165043135`*^9, {
   3.8627585965107956`*^9, 3.862758689290209*^9}, {3.862758834699833*^9, 
   3.8627588555911727`*^9}, {3.8627590963373947`*^9, 
   3.8627590998392787`*^9}, {3.8627594410134716`*^9, 
   3.8627594626865597`*^9}, {3.862759635094576*^9, 3.8627596377257366`*^9}, {
   3.862759669455618*^9, 3.8627597448635693`*^9}, 3.862759795914287*^9, {
   3.8627603319473376`*^9, 3.862760490473783*^9}, {3.8627605307139487`*^9, 
   3.862760536806006*^9}, {3.8627610047197795`*^9, 3.8627610478400292`*^9}, {
   3.8627611285982723`*^9, 3.862761147921111*^9}, {3.8631982964294224`*^9, 
   3.8631982970332265`*^9}, 3.8631983363504767`*^9, {3.863208693665881*^9, 
   3.8632086943846474`*^9}, 3.863210007245922*^9, 3.863271804426487*^9, {
   3.8632718412836447`*^9, 3.8632718583741503`*^9}, {3.8632719591337743`*^9, 
   3.863271959351703*^9}, {3.863272049174841*^9, 3.863272070205083*^9}, {
   3.863272113471178*^9, 3.863272123024109*^9}, 3.8632747752128673`*^9, {
   3.863274857845314*^9, 3.863274901443305*^9}, 3.863274985905165*^9, {
   3.86327502591031*^9, 3.8632751590365314`*^9}, {3.8632751952308993`*^9, 
   3.863275233662552*^9}, {3.8632753992893295`*^9, 3.863275415841012*^9}, 
   3.8632757933676972`*^9, 3.863276112914017*^9, {3.8632763683199444`*^9, 
   3.8632763983313017`*^9}, {3.8632764721665745`*^9, 3.863276525061578*^9}, {
   3.863278235705888*^9, 3.8632782777863655`*^9}, {3.863278324944213*^9, 
   3.8632783286160316`*^9}, {3.863552728717914*^9, 3.8635527298355513`*^9}, {
   3.863613419658352*^9, 3.863613423534114*^9}, {3.8636150904008484`*^9, 
   3.86361513154671*^9}, {3.8636152078133564`*^9, 3.8636152525520706`*^9}, {
   3.8636152893383236`*^9, 3.863615479516596*^9}, 3.8636157247782784`*^9, {
   3.863615879717803*^9, 3.8636159617646036`*^9}, {3.8636160220243616`*^9, 
   3.8636160299278383`*^9}, {3.863616069486206*^9, 3.86361607601912*^9}, {
   3.863699007217822*^9, 3.8636991515617003`*^9}, {3.8636996033223495`*^9, 
   3.8636996129842625`*^9}, {3.8636997844214835`*^9, 3.863699805489752*^9}, {
   3.863699907217247*^9, 3.863699944316393*^9}, {3.863700788168758*^9, 
   3.8637008845809517`*^9}, {3.863702046275758*^9, 3.8637020830100203`*^9}, {
   3.863702595245346*^9, 3.863702645292355*^9}, {3.863884194660141*^9, 
   3.8638842031804175`*^9}, {3.8638909914788537`*^9, 3.863891009810995*^9}, {
   3.863891113237941*^9, 3.8638911537729845`*^9}, {3.863891279619763*^9, 
   3.8638912855948534`*^9}, {3.863891344230113*^9, 3.863891351574766*^9}, {
   3.8638925953132634`*^9, 3.8638925989880886`*^9}, 3.8641412354391413`*^9, {
   3.864141550931038*^9, 3.8641416655529428`*^9}, {3.8642361939817247`*^9, 
   3.864236202546955*^9}, {3.864236595072028*^9, 3.8642366322340117`*^9}, 
   3.864236674617306*^9},
 FontWeight->"Plain",
 CellLabel->"In[76]:=",ExpressionUUID->"b098c715-9c30-421d-bfce-eae26b7e4e91"],

Cell["\<\
Check the performance of the new initial guess mechanism for the case where n \
= 40 and greater was required.
We see that n = 6 is only required here which is excellent!\
\>", "Text",
 CellChangeTimes->{{3.863702780704089*^9, 3.8637028585982*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"9be2365f-c4bb-4396-8de9-0c9df9f460d6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  StyleBox[
   RowBox[{"n", "=", "6"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Tau]", "=", "2.5"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Tau]1", "=", 
    RowBox[{"\[Tau]", "*", "1.25"}]}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"A", "=", "0.2"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"order", " ", "=", " ", "4"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"maxIter", " ", "=", " ", "100"}],
   FontWeight->"Plain"], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.048555026816794494`"}], ",", 
      RowBox[{"-", "1.560065966757075`"}], ",", "0.7613152376955525`", ",", 
      "1.9382391342292873`"}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"InitGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}]}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
       "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
       "\[Lambda]3ff0", ",", "\[Lambda]4ff0"}], "}"}], "=", 
     RowBox[{"ffCartPendulum", "[", 
      RowBox[{
      "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", "order", 
       ",", "maxIter", ",", "InitGuess"}], "]"}]}], ";"}], " "}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1b", ",", "xdot1b", ",", "\[Theta]1b", ",", "\[Theta]dot1b", ",", 
       "u1b", ",", "J1"}], "}"}], "=", 
     RowBox[{"testSwingUp", "[", 
      RowBox[{"ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "u1a", ",", "A"}], 
      "]"}]}], ";"}], " "}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x1c", ",", "xdot1c", ",", "\[Theta]1c", ",", "\[Theta]dot1c", ",", 
      "u1c", ",", "J"}], "}"}], "=", 
    RowBox[{"testWithFB", "[", 
     RowBox[{
     "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
      "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A"}], "]"}]}], 
   ";", 
   RowBox[{"p1a", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1a", "[", "t", "]"}], ",", 
        RowBox[{"u1a", "[", "t", "]"}], ",", 
        RowBox[{"x1a", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1a", "[", "t", "]"}], ",", 
        RowBox[{"xdot1a", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1a\>\"", ",", "\"\<u1a\>\"", ",", "\"\<x1a\>\"", ",", 
         "\"\<\[Theta]dot1a\>\"", ",", "\"\<xdot1a\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Feedforward solution\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}]}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{"p1b", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Theta]1b", "[", "t", "]"}], ",", 
       RowBox[{"u1a", "[", "t", "]"}], ",", 
       RowBox[{"x1b", "[", "t", "]"}], ",", 
       RowBox[{"\[Theta]dot1b", "[", "t", "]"}], ",", 
       RowBox[{"xdot1b", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
     RowBox[{"Filling", "->", 
      RowBox[{"{", 
       RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Theta]1b\>\"", ",", "\"\<u1b\>\"", ",", "\"\<x1b\>\"", ",", 
        "\"\<\[Theta]dot1b\>\"", ",", "\"\<xdot1b\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<Test on dynamics\>\""}], ",", 
     RowBox[{"AspectRatio", "->", 
      RowBox[{"1", "/", "3"}]}], ",", 
     RowBox[{"ImageSize", "->", "400"}], ",", 
     RowBox[{"GridLines", "->", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], "]"}]}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"p1c", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1c", "[", "t", "]"}], ",", 
        RowBox[{"u1c", "[", "t", "]"}], ",", 
        RowBox[{"x1c", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1c", "[", "t", "]"}], ",", 
        RowBox[{"xdot1c", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1c\>\"", ",", "\"\<u1c\>\"", ",", "\"\<x1c\>\"", ",", 
         "\"\<\[Theta]dot1c\>\"", ",", "\"\<xdot1c\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<LQR feedback solution\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], "\[IndentingNewLine]"}],
  FontWeight->"Plain"], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.863699832878002*^9, 3.8636998879424076`*^9}, {
   3.8636999587037973`*^9, 3.863699966845196*^9}, {3.86370068689312*^9, 
   3.863700742439372*^9}, {3.863700775571786*^9, 3.8637007771342835`*^9}, 
   3.863700945211579*^9, {3.863700998427576*^9, 3.8637010107976217`*^9}, {
   3.8637016473912125`*^9, 3.863701669091281*^9}, 3.863702035899074*^9, {
   3.863702126179226*^9, 3.863702160529252*^9}, 3.86370251869481*^9, {
   3.8637025705572357`*^9, 3.8637025888983755`*^9}, {3.8637026681560507`*^9, 
   3.8637026692896886`*^9}, {3.8637027081322765`*^9, 3.863702762285972*^9}, 
   3.8637029838601737`*^9, 3.8637033230088053`*^9, {3.863884225388322*^9, 
   3.8638842448491*^9}, {3.8638842916161537`*^9, 3.863884295082047*^9}, {
   3.863891061309538*^9, 3.863891063069975*^9}, {3.863891163269951*^9, 
   3.863891163428899*^9}, {3.8638912925906177`*^9, 3.8638912940581484`*^9}, {
   3.8638913677266035`*^9, 3.8638913686183195`*^9}, {3.8638926039804945`*^9, 
   3.8638926063767295`*^9}},
 CellLabel->"In[83]:=",ExpressionUUID->"53d64360-9130-4d93-aa11-669324ba78f7"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
kggBUUHFDjJi/afUbMvE+gKbfyPN+zmw7wurbeh2XWZCTqv4EEqx9Sa9LuO0
4t2/5puzCi/Wf7yRO7OaVAmIvOCpe05Y/yHPxTJbigmI+hutnAXs+wk7TtE0
HQnIvlAh42xsfmulmOTumCYgIwx5I87Y53l5386NZ2Lzs1676iVWfjuzKk0w
AmtPcUGZPNZ/3+7eZf9WT0Cia1DJ1Vj/vWhzmNAZISD5DHGdGdjzrkfWK9xO
ISAJ+S3HzLCyva/p3dcBBKThQsnjJKx+3ty1bXo/sPFhXje4Cvv+6HXd2/w0
ArJkrFcqhT1P23bNzzoP2897OxN+YWX2CXkllTZsvNg/nFzEyh/YZTZfttWD
/gBzh9MOA6DUqFG36RwjUuvrdsLahx2JEC96RfnFiFh+0aS+xvY55CpRUdic
CTElvGSiYOfJJs1bV093MCHtd3NaTLDxqszkMAJjbHzcNk53YudJnZAa9XIP
Nj/92quIf9UnNm1eWBAbb7n9UX3YflxS1nr8SywTstHNmPQG2495Hj/QyBYi
IMb7rW5kYftx736PDwOx2HrVDrOawPrrkWNAi88iE/IrvemVPTZeza5f2fk8
CIjH5kmRQWz+BqMv0vv2E5CiVL3U7dh4jTHstflSSEAOlub4TmK/f+qBTaaM
AzYezjoavth4ieSK+u2dJCAKpGsPfbDP7URauOszsPVzU0n1r/3J9JyoxVIY
AVktYVq0Gvv9a71RX5JqsfPivOSVv/YLt8EdhaeGCIheyNeCz9jzUm+29Zom
EZCQGcKjo1h508BVpSA/bH9R/ODjg43XTuf++zu/ExDvZzqT7Nj3S7x5jgpR
sPNmuV91P/Z8+r1AFe2PBESksAt+/DU++uqDQi3Y+3Qzu5mw5yUJn0wtMJ3S
zpSUXI99HqHMTZsrISDHSMtNy1iZ0yAzcXU2AdnelKGfiZUFhOxP9zRi72fQ
+8GJfb8+9fPWy5XYeRBnW/PXfBOwC0znXiIgFbcUjHix54+Vm9d4fyYgGXIx
1C6sbBi28a5BBwFhKhPImMXKuB792HPVr8S7g65HX4x7TrbFD9H16AmNytFP
2pN0PcqqZR56YHiGrkeVpm3e3k2cp+tR9w91wQNfKXQ9OvvgiULgGhpdj6aq
mvvurKXR9ejH58edXyzT6HrU7lDIc8MCGl2PHjTn+1jGR6Pr0ZTKSC4VWSpd
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
OzMBMl4mUjlPiWiiDWXcyWoSerhF44/2Ynro73xWGmttxX2uLBTPZ8npq4c8
kU9B8XwW7yj/fF3hMxTPZy3zNVx/axGI4rzXuCxLSR21pvPejLkXbw7Y7IE/
8V6ct25+m81hG9ePmn7+SXK61Q9iI5JVXbeI6MOTm7cZOpHg6mJKrygfCS0p
mbNmdRuErgYFE5+bJNRogovVwHMYcmOs8ksw/W3EyjqyPXwUHu58zuT8gIRS
fl/qCEkdg6Fky08N2H45qXrBzr9pHKIPqNq87iSieH6sy1FcfVwqAcXzY0uv
PewV1aJQPD+WjJ4xeFN/C8V5sH/sg/KGX7J/5MG2TLENUhMDgEg138+5QEKr
3J53eTANw0HHNTf8sfUQLNiX8Y1lFF4SuESdsPWiTVnaGy8xBj+83mfGW5NQ
PJ9We2zxbp2/N4rn0wjW7GRKzGn0n3xYNODkXP/SIDje3ePqHUxCiXbu23Ys
DYNgt4n+ADa/ZSe2SkcLkOEAu3k7O6Yn8XxblyTl1BUhZxTnxes2eD2ytFGC
f/LiwM/9x+5/HYJR5Zfpyth+JCZVfz+iaASYNyvve4ntV3gerr7x88OcGDMU
58fxJR/JmcHSMPkqUcE1fxAe84spuGPna/ybkica6DA8czq85RNWv2KqAKd1
3SiwoTnNKeHYfP87P8d21N/nBSoMfLvPuFxSGwZIV0vlwOb/JM9MJeXIKMSc
WrYzf0pC8XzdNj9/OSXOw6iclFKBkOoIPNj+reo09n48b/dTk6xWbaH8L95s
3RHELJg4BI9870UqYnrDMa2CyTVuBFy/V28nYXoE589f9lQx3FPZCe7VtnqV
ccPwew2kG2Dvx/N6AzfWPivjY0DHzy7ITG8ZhrdiWnLdWP+wazdfey08AjuK
pp1ysefx/J7nwV3K4X176Tw69C2z7wTPWigOEe351IHpt5eRRwax5/E8H4+K
kfnFOnnYsy7zc5fFMBwLzdzMgM3/48wRbFEmI/Dp6unnhVgZz/v5dyh2qzbv
+09eHb83yfx5XAqK82SRX2fW0y70oDhPDv1m2MjZ34viPJk1XMS0nqcfxXly
puamd2z8RBTnyUqTgRl5P4koMUHh6O/zA7BTXELc+ig2nuxN0mXuWP/6PFaa
f0RCV69lqGm4NgJfm002KGD1jTGRazrziAwq39xumGHr2/IZN0ve2XGoZiwS
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
5VTQUBUpTn0wBAqllYynmmmQPyA9sN5vkJ4n1gvaOWje/xn+t/cFOP8vPRW9
Oc1hHHD+byskvuEJxzjg/D9WqtPeyn0McP7vPMLD28c+BrxftG6m7pqFDsal
g25Ro/Bz8yoe94Nz4D0+rbDp0Cg9H1xgL/fo/kj6/5jvnxuoYpCpXaLnbztT
uE3PGEwAzudvpZZ9liseB5zPhzs1Dq5GxgHn87cKEN7qpjHA+bz+XJ7cpO4Y
4Hx+l2Ja6XoiGXA+71O07UteNBkoil+Pc4VOA/faqcPDE6PgPqTvWf1oBq5f
8mca+TQKlgc/5dk/mIXymRvMM25Ye7Va1Q69nINQ3tikX6KjgFTmEDPj5iHx
oMtsWu4I1Bof1LF5tgBSHajKT8UR6I/zpZ1NooCKq6itmtcwmN19niv6mgpu
ifJqp7B2sEswZpXn0sANEn4fSRmk540fNpWFvNtdCDjfv3U++belWugf+T7O
60UKQ8Rb3ccB5/VX7m6Vb1o3DjivP3kl7fGVsDHAeX31QK3OA/4xkCp9d0uH
bxbaU/V0HjwbhROhZT/chOZgotilw0xvlJ4fZlMiDwtufv9HHv9PXv5ffFsp
dIFHYGiJnod9W83k43h+AnA+vdqJ66DJj3HA+fT383VTSZrjgPNpnYtfI391
jwHOp9vsPjvZ648Bzqdp3e721sNkwPl03prsdQfjyKBzmcJ44PY05HVb0+Rn
RoH1CgejaMAMqKc0GHp+GYXEa483XPKZBU90r3IFti9rl+25bBU5BzaRd7Le
SI2CKHd5n2jEPNzylHOf+DICtsdvSfkEL0Ax+eCOlP0jkNuq+urBYwrEB2ZX
5YUOA8nB8wDXQyqU7qysNysegum66FXMr2kgQDrasD5/kJ7/7TfYEh3OXwQ4
376m88pYTebhH/k2zqsTqSGxIn7jgPPqHzJmfXwbxwHn1QsHbFi3PxoDnFev
t4hvF8B8VeZRa+oz5llgPxS/FIo9F1n8SubGqjkgPlLT7dAfped5J/xJYerj
WfAnHv1PXvxPvovz2s35y5tPqrv/Jx+t8O7hDJ9doudDe7+dnPe1mQCcb/4e
0di3jJ2LON/MubTurdjRccD5Zpm40ash4hjgfPPS64E7SoZjgPPNDE30DB+Z
DDjfbJL5Yer/ggzTnI9a652noe3NtsOVs6Ogm2mlpn13Btg19p3XREfh2z1/
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
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{249, 1412, 197, 198, 199, 200, 201, 202, 203, 204, 
            205, 206, 207, 208, 424, 364, 315, 276, 248, 232, 437, 377, 328, 
            289, 261, 449, 389, 340, 301, 209, 425, 365, 316, 462, 402, 277, 
            453, 393, 474, 344, 467, 407, 478}}]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwl0ldsT2EcBuDzLxK7xo09EitI7Hljc2FFJcQMtUnsdWGFCjEjRmioTWJv
XdrSxowYQYii9o1ZxQ3l+dKLJ+/ve8/3nZOccxomzkqYGRdFUYzXHGN1mShK
Is+cyzWukkM2WVwhkwzSSSOVy1ziI7+p7sZdmcFRLuo+8Itq1l2YzhEu6ErL
BvRjceh4r28mB7OCTH7qqsrOTOMw53Ut5VCSyKEUo9jATerTl0VhP++cGSM3
cZumDGI5GRS5vkM+ZDhryaMKW7hLJ54ylUOcc6ZAJvOEseSzmTu04AXbeUAC
z1hFNnG8YiePGMlz1nODemzlHn1YGJ7JW8/dJR8zmo3cognbuM9AlpHOD/uH
yTXkEk9HpnCQs643l0NYSRYxRrCO69SlNwvCft4401gOYClpFOoqyw5M5gBn
opKfrg69mB+6WMk/2Ej2ZwmpfNdVku2ZxH5O6/5R29yTeaGjQPeNiuZ2TGQf
p3TF1DL3YG7ownvWfaWCuS0T2MtJ3V9qmrszJ3S81H2hvLkNiaRwQveHGuZu
zA5d+M66z5Qzt2Y8eziuy+cTZa1bMY7d/Af+x3rE
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{1, 135, 108, 88, 72, 60, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10, 
           11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27,
            28, 29, 30, 31, 32, 33, 34, 35, 136, 109, 89, 73, 61, 52, 36, 137,
            110, 90, 74, 62, 53, 142, 115, 95, 79, 67, 37, 138, 111, 91, 75, 
           63, 54, 143, 116, 96, 80, 68, 38, 139, 112, 92, 76, 64, 146, 119, 
           99, 83, 55, 144, 117, 97, 81, 69, 148, 121, 101, 86, 39, 140, 113, 
           93, 77, 150, 123, 103, 65, 147, 120, 100, 157, 130, 84, 153, 126, 
           106, 56, 145, 118, 98, 156, 129, 82, 152, 125, 164, 105, 160, 133, 
           168, 70, 149, 122, 163, 102, 158, 131, 166, 87, 154, 127, 165, 107,
            161, 134, 169, 40, 141, 114, 162, 94, 155, 128, 78, 151, 124, 104,
            159, 132, 167, 66, 85, 57, 71, 41, 58, 42, 43, 44, 45, 46, 47, 48,
            49, 59, 50}]}, Annotation[#, "Charting`Private`Tag$38602#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1HmYTXUcBvA7akgLiUgqJhSKpBRa0CKtylpSpKKipkVKZR9RRLRQWmxZ
hjJbiBrbMGYsM5p9n2kjKiottvL5Pf743Pd73nt+z7lnuSdmcGzPZ6IikUhH
H/HyIzmIKziNX3SlLOdj24/Qlpr8qitjhflZOnMex0LHJ+bBXMnp/KYr53Pz
c3ShIcdDx6fmR2nHGRzQVfCF+Xm6cj7/hY555se4ijM5qKtkpfkFbqIR/4eO
+ebHuZqz+F23Rr7GnTSjSpcgR3AzF4SLQ4JYIIfQnlr8oftKjuYumvOdLlG+
yC1cyFbe5AGiSGUC99GKRGsWyqFcQ202M5m+/On7tXIMd5PNu1xCBm8xgDw+
4Hv7J8mR3EoW73AR6UylhP7kMocKqrGeiRTRk928RxmXsZ0ZlPIw+XxIJUmO
u0g+QSHXspOZnE0aU+jHt7zPIWvWybHcw6VkMp2H+MH3yfIlutGYbUzjQU5h
A3H04nKSrflMPkkH6vCX7ms5jh604EddinyZ22jCqaToF8unok7+L87hb91P
fMkS28PoRF3+0e1hFavDMxWei3DPwrmF4/INqaxnAxvZxGbSiIuORLbIraSz
jQwy2c4OdrKLLLJZ6tjDuY56/KvbG36jeRTdiSGajUyiN63DfbXfMvk017OL
WZzLFt6gmPvJYTblHA7nIsdzLy35OZy7fIXbuZjq4R7r42V4wdxAfY7o9pFD
LnnkU0AhRRSH9419Y7mRBhzV7Q/X1/wqd9CUGmzidfrQhh28zUAKmEsVJdaf
AM+1rg0=
           "]]}, Annotation[#, "Charting`Private`Tag$38602#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV02WAVVUUgNE3M3R3gwwoiiClIlLKSLeDKKggDKGIgIp0SVoobdJ2YCPS
EgZhY6AoSnd3r/1j8Z2z733vzQ1SM/ql901KJBJj/bONrCmJxJLkRGI4LalI
IbY7toOd7GI3e9hLNp9Z6pwRtOJ6CrPPseyOLbMeSWsqUYT9juVwbLn1KNpQ
maKUMv9Rp9CV+hxwfk7zFdZP0pYbKEZp8590KhncxkHn5zJfaT2aO6lCccqY
/6zT6MbtHHJ+bvOvrMeQTtW4FrN/dA79KMFVZr/odLpTx/6QfkwDqtvv0LcY
yGHfncdslfVYGlmf0XbcYr1PP6Ba3B/7f3Uuza0v6qNxTdbH9PO4dusUSlqX
1V+1vc7QpnpeO2kPrauHtYN+Es9Ak+hKmn0N3al369vaQi9pZx2kaXpS79VF
cR81E0dcU15dbTaOxtZn9S5qWe/XBXEv4rnab9V5PBb32/64LoxnTar9Jn2R
ntSL79dPuYMb7XfpOwzmqN/OZ7bGenxce1xHvA9m/+l8Ho/3gnJmv+lLPEhD
jvl8fvO11hPi2uM34r2gvPnv+jIPxbPiuPMLmH9t/RT3cFO8B5xwrKBj31g/
HfeZm+O5cNKxU5zmDGc5x3kucJFLXI7/gM5PIpkUMlHI936rz9CRmnGvyExh
x77TZ+PZxHsU18rV5n/oK/SK50IWipiv0+e4L55RXCvXmP+pr/IwTchKUfP1
OpH7uZUqZv/r6/SP36KC2WZ9jd7x/sW9Mdut7zKEbBQz26DPx7sZ32d/QD+k
NlXtt+kbPEED+xP6RfyNXGv/l86kmfUFfYT61kfj/uhn2kaTyaBZPAvdE89M
39OWelkf0KHxfumpuCf6paZrZrqR3b64boz3Wl+I+6Pn4p5o5/jb9aB+RCvr
BF2oY19Nt+ubDIh7xXVmf+ss+tCcHJQw/14nxd9G3bhmcpKL3OQhL/nITwFK
+twPOpku1IvfoKL5Fp1NX1rE+2O2V99nGA3tT+ti2llnoTsF7a8AVpu07g==

           "]]}, Annotation[#, "Charting`Private`Tag$38602#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwNy2NzmFEYBNA3TWrbSG3bNtP2D3Smtm3btm3btm27qd2eD2fu7j5zw5u0
j2gXEgRBJE1DgyB/WBDE4ZV8ijVMpxnNaUFLWtGaNrSlHe3pQAH/4/JaPs1a
ZtCRgvZ4vJHPsI6ZVLGF80++z0E6UcgWn7fyWdYzi6q2jAQ80A/RmcJ6At7J
59jAbKrZMhHCQ/0wXSiiJ+S9fJ6NzKG6LTNReKQfoStF9UR8kC+wibl0o5g9
MZHyRTYzj+70oCfF3ZPwUb7EFubTixL2pHySL7OVBdSwZSGUx/pRelNST8Zn
+QrbWEhNW1bCeKIfow+l9OR8ka+ynUX0pbQ9BV/la+xgMf0oY0/JN/k6O1lC
f8raU/FdvsEuljKAcvbU/JBvsptlDKS8PQ0/5VvsYTmDGMwQhjKM4YxgJKMY
TQV/0/JLvs1eVlDLlo2oPNWPM4aKejp+y3eoL+cmFhHkpRH73Op6cxKDF/pK
asvZicYz/QRjqaSn5498l/2sYhzjmcBEJjGZKUylsj8Z+Cvf4wCrqWPLQXSe
6yepJ+ciJi/1Bt48xKYh+WjMNLf/NgR/2w==
           "]]}, Annotation[#, "Charting`Private`Tag$38602#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV03eAznUcB/DnbBkJlZVCkXAys2d2ZlzGicged/bmjiiZZZeyEyWyUsiq
kK1spbL3Ktm8vn+87v3+fO658Xx/3ydXm7hG3aMikUi0LzHJIpEqySOR1BzV
VzGDD3iLpjSjOS2IpSVv04rWvEMb2vIu7WhPBzrSic50oaq/8wTH9NV8wmi6
8rp9Go7r3/EpH/KmXTYu6r+wmG5Us0vLH/oaZjKGxnbZuaRv5Su6U90uHX/q
3/MZY2lil4PL+ja+Jo4aduk5of/A5+F9m1/ilr6PccSYn+OKvj28V70ISVgS
zkW+wj39YPhf9BKkIN5cUz7JX3oPWYq14fxkNI/0WeG89bz8r/eWZdkfzk4W
YyjJ6E9FhjM+PEeZk0FcNfeSZRjGr+G5yKIMISn9qEAi34RnKgswmPvmPrIc
h8I5yZKkZACV6GFfS2bgb72nLM26cB9kYSLMDvdH5uO2/lt4rnpxkjMh3D/5
PNf0HSwN98tckAf64fD7qW1+in/09cwJ99L8Mnf035kY7rL5Ba7rO1kWzoM6
dhk5qf/IXD4K994uFzf0XXwbzp437DJxSt/APD4OZ0Nd+8yc1jcyn0n0pZ79
05zRN7GAyfSjPwMYyCAGU99rn+GsvpkvmBI+i3a5uanvZjlDaGD3LOf0LeGz
p79KFH0pTwILw2dW5ueufoCpxJrz8K++hxUMpaFdFs7rP/El0xhGAokMZwTv
MZJRNPIzWbmg/8wiptPS7kX+0/eykvbmQjzUjxCvv0YqBlKZEbzve48BxDKa
Hg==
           "]]}, Annotation[#, "Charting`Private`Tag$38602#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"Feedforward solution\"", TraditionalForm], 
     PlotRange -> {{0., 3.12499993622449}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1a\"", "\"u1a\"", "\"x1a\"", "\"\[Theta]dot1a\"", 
       "\"xdot1a\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.863702134579542*^9, 3.8637021627135525`*^9}, 
   3.8637025210160646`*^9, 3.863702578124817*^9, 3.8637026714539957`*^9, {
   3.8637027226726294`*^9, 3.8637027640764*^9}, 3.8637029884806967`*^9, {
   3.8637033266226506`*^9, 3.8637033354478307`*^9}, 3.863879327529692*^9, {
   3.863884217207935*^9, 3.8638842652235885`*^9}, 3.8638842967265196`*^9, 
   3.8638860360506268`*^9, 3.8638906095889077`*^9, 3.863890848019706*^9, 
   3.8638910663699183`*^9, 3.863891132659732*^9, 3.8638911691100826`*^9, {
   3.8638913595922036`*^9, 3.863891384033392*^9}, 3.8638926082491283`*^9, 
   3.864131525163704*^9, 3.8641416796563787`*^9, 3.864143125130576*^9, {
   3.8642366677575245`*^9, 3.864236679721656*^9}},
 CellLabel->"Out[88]=",ExpressionUUID->"26a460da-725b-4914-a686-35492cfe9fc2"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1:eJxEnHk8VN//x2cYS6U92iRpEYlUWiy9T7JFaZNkiZIlqZBKRWSvZG1DSEhF
2SXbtY8U2bIvYxnGvu+D3/08Hr97v/3T4zxm5s65557zXp6vl9l27c55Ew4K
hTLDRaH897+Iz3xEqJD1sZ/qOryJ+ixQz+LR7DKLg1Hhz6+2rO6H0uWHltAM
cuBY2mUmVjsEij7KOdFniuHyczOHY34jYCI1u1x6eTncd9jU17pmDE6LmYwI
qFZD2forB3e9G4fEaod7v47UgfK3p6t0eidAbo14HM2xCcbPyVw4gqbAbM4/
JEqHAbLmdlP5D6fhTlH3gbjT7XB0TQxj3GsGnuty75y37IQZxoUhjuhZMKY/
NpU274KUQ3Pyq8PnIJdn47mbl1mQmprd7faCDdKrnd702PaCXPcXwwjHeTAa
U5DQtOwHuafjkVv1FiA8tFBw6uUgpHnL7jt+fBGSvGUbK88Pg+pl0UXRFRRk
m65wNuTUCJxMVdweYE1BWEnU6DO9Ufg+vFIhpoGCbqgezbqhMwZqrCSGpiwV
vf8snXLTYhx0qRyJqmFU5DeW9dTqwQTIL6pfDF+koq6v9+6b20zCiiVJr5q0
OVCBiv87Z+cpyBiPlFNM5EDUMw3tPk7T4H9rUwiicSLK8VTqh4czsOrHjx/r
z3Eiz/VTpys9ZkExynLzcBgnstI1zptymQOpNUN34zs5UdvTg9fhNRs4x45V
7xejoXUBgQ3Pwudh0k822NuEhj6tEn9ID16AkLhDpl1vaCjXZquyaMwi5KzZ
4dqdT0Ohwh8EFbQoyM2GLr6USUNZ9rMU83IKOq3L7XmJTUPbNHjY2y9R0fPj
4tp6S7lQ8l+xF/XVVJQa71Pau4wLeRUt7BM24EDfvd9uXVykoYC7PRZGTRxI
btuFuq3dNGTPL7RS5DInOn8cu7KYQ0NfxLhKbBmcqPpS93oDDxriHqduzL1C
Q9emK9MjlWgoel/Ck1D8c5b6DY/vTnIisWtfNedvcSGjsI1POiI4UePJn4kX
+7hQsLkU2xlfn8qIR3vhLjeyTHV03znKgaaTzsmLjHKjQ/5G7ooBHGgxzSbF
/TYPunZV0ezNPg6ksU9F2X6CB5343DfMjVER3UDqxs27vOhBlujVEk0q+h5v
NbW4yItmPyaM7y6hoBK/RmuWWRisc/ygdluhF5Jzdxg+2L4IwUO7wv2+09Bi
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
v/cWDXcf88T3V/aQ5qX/6l3KyHb+pRxoNOLHfiq+v707/SzN1KjodbGa6S18
fHCJc9xGOhWdTMmbPYu///2Lth9hw7xIOHpTBl89BdnPy+yZNKIi3Sr2nk78
fudthFY5tlLRq7M9Js74fIqAPlqO92ETvuLBsfjnP4YueBs74fkgzbl6+3/z
YfhoH8Pr/tmWmyOP8LGOb0ykRxwVJYzJno7BxweH2tEmXyqKe0E57YiPn0jb
8k6UUZFYwST/Znz850Mh5cYML+qRS/F6ifdJH/ZoqnQEU5FPZnl4FP560R+B
r2czqHi9zHzw4r/r2e+fDoyhos61/lzx+HhF441XEl5U1H/YLNvyv/lcQGHZ
EVS0/3fe1/9et4/cce5eEhXxNnFFRvw3P079AZ5XVBT4cXzaGx9fizkcVTrP
i/gKiubU/+D10//372nt1m4Fzi1k/x4+7DTa9KGX7N/Pnigd+Kk2Svbv3KqG
XvJ9E2T/fnDc9Ltj5DTZv9v/qHzOyp8l+/fJV+8kPVeyyf79q4Kh6/4KNtm/
p4Vo2oQvssn+/YbSixCdbDbZvx8zXJdGX8cm+/cvpf58suL/699P7V95Lnvp
LNm/+/290yb/YZrs3z88OiXqITdF9u+pp4IvrQ6cIPv3Asnfkv3tY0D070Gb
5UcKDo8C0b9fK197qfXyMBD9e9dulLR75wAQ/XvCquTvyho9QPTvL1UzU/S8
mED079EOrfemae1A9O+7VZpqd1xoAqJ/py6ccDi/9h8Q/bvadwWbqy2/gejf
2VWPls58TAOif8+pq6ssqvLDiP7dixHvncmZhxH9+ybnnS1CeeUY0b/vOts9
EDFXixH9u9q3UyuNy1oxon9X7Zou633RgRH9+2PzD041m7sxon+P0fuyQWyy
FyP694O1jCMrXgxiRP9edOh6qefBEYzo35mMCcMKyhhG9O8SB1r6juaNY0T/
7jz0ghYZPYkR/Tvl//8R/TsxJvp3Ykz078SY6N+JMdG/E2OifyfGRP9OjIn+
nRgT/TsxJvr3J+01es+OMEF4/sf7+UNpIMN5N9u1cwg8y7I6L2oXwCHdr3SV
w+PAPSU4SJP5A7+uaVsOG03B5di4xe3ildDxlINPsmwGKI7WB4ahBjYYGpbc
dZiD+2MX1nTrNcCak75P9FzZ4ErbPSH6rgU6HwVez5tmQ59Rlrn4hTbYuLvv
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
AhZK65E=
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{332, 1528, 280, 281, 282, 283, 284, 285, 286, 287, 
            288, 289, 290, 291, 507, 447, 398, 359, 331, 315, 520, 460, 411, 
            372, 344, 532, 472, 423, 384, 292, 508, 448, 399, 545, 485, 360, 
            536, 476, 557, 427, 550, 490, 561}}]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwl00dsznEYwPH3LbX3asyYQYjS2hd7XlDrYNe4oDUOVpDY86I1D1aQEDP2
vNgcrCAhRkWMIDatxPg8cfjk+/s975O8b/t/3wbZuVk5KYlEIkkBvylKTSQK
STOsQXWqUZUqVKYSFalAecpRljKUpjP9mcRaLvCLUnSiHxNZw3mKKMlwZrKF
mzHz4TrqPHZyL97XrK9OYDXnKKQEC9nDw/i89obpQZ5R232GbuZG7Lt30MMU
UNd9ru7gbvxt7n30LU2c9+lj0pzH60vqO6/SFnpWf5JKpvsHba5HNF1faD1d
oK31jTbW3dpSH8T/V4dqhr7TpnpAW+lTraXT9RUNnTfp9XhP5/b6nmbOh/Q5
dZzn6GsaOW/XO/HMnHvrXh7Fc3bP1pWc4QfFmc8u7sdztzNE9/OEmu7TdCPX
Yt+9nc5mG7fje2HWS8exgtN8pxiDyWUDV2Nmt63OYiu34jtl1lPHspxTfCOF
LHJYz5WY2c3UHoxhGSf5SpJBTCWfyzGzn6HdGc1STvAl+f8HMZAp5HEpZvbb
aDdGsYTjfOavlwfoZNZxMWbxnOnKSBZzjE/8sZ+uXRjBIo7ykX/Iy2lU
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{1, 198, 151, 113, 84, 63, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10, 
           11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27,
            28, 29, 30, 31, 199, 152, 114, 85, 64, 52, 210, 163, 125, 96, 75, 
           32, 200, 153, 115, 86, 65, 53, 211, 164, 126, 97, 76, 33, 201, 154,
            116, 87, 66, 54, 212, 165, 127, 98, 77, 34, 202, 155, 117, 88, 67,
            219, 172, 134, 105, 55, 213, 166, 128, 99, 229, 182, 144, 78, 223,
            176, 138, 109, 233, 186, 148, 35, 203, 156, 118, 236, 189, 89, 
           227, 180, 142, 68, 220, 173, 135, 239, 192, 106, 231, 184, 248, 
           146, 242, 195, 251, 56, 214, 167, 245, 129, 238, 191, 249, 100, 
           230, 183, 247, 145, 241, 194, 250, 79, 224, 177, 246, 139, 240, 
           193, 110, 234, 187, 149, 243, 196, 36, 204, 157, 119, 237, 190, 90,
            228, 181, 143, 69, 221, 174, 136, 107, 232, 185, 147, 57, 215, 
           168, 130, 101, 80, 225, 178, 140, 111, 37, 205, 158, 120, 91, 70, 
           222, 175, 137, 108, 58, 216, 169, 131, 102, 81, 38, 206, 159, 121, 
           92, 71, 59, 217, 170, 132, 103, 82, 39, 207, 160, 122, 93, 72, 60, 
           40, 208, 161, 123, 94, 73, 61, 41, 42, 43, 44, 45, 46, 47, 48, 49, 
           209, 162, 124, 95, 74, 62, 218, 171, 133, 104, 83, 226, 179, 141, 
           112, 235, 188, 150, 244, 197, 252, 50}]}, 
         Annotation[#, "Charting`Private`Tag$38713#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl03e8l1McwPHfLbclWrSIknJxu7mVQqFFoaibCg11taNbZouSFqGFtIy0
aVrRoCVN7YV2GWU0KW68v6/+eN/Pec7vvH7P7znnuWUyszK6JSUSiVv9ydY/
9GMG0II7qch5n/2pn/ASLanJTfzHckbRlQdizvrj+ikDaUUt0uNmORKJFTqa
x2kUc5zgMwbRmtpUIsn6lfoGT9A45jjJ5wzmUepQmRzWf6NvEg+XEXOcYgFD
aENdLrb2O32H56hCTnOr9C2yaBJznOYLhtKWu8hv7UZ9l57czEXmvtUxdKeE
6x/1Ix6kkOttOpnnYz1n+JKXyaSoNbt1BndzietN+h5ljX/SXlxpvE/nkGJ8
TKuSbLxa3+Ya4yPag5LGezRNZ+l1ejT2WZtqYd2uqTpFr9Wf45z1Bb1KD8Q7
ofP0ev0t9l2T9S8WcqPrV7S0HtLHKGb8vc6knPEvWo9LjTfr+/SmlOv9Opdq
5HK9RsfyJFe43quzaUYR1zt0Kv1iPX+ziGG0oz4FrNuik+jDLeQ2t1bH8RTN
Y46zLOZV2nNP0oX/kTycYwmv0YF7uY285It3Kt6LOLN4trgvBePcY3/j93IZ
l8c5x77E701OJIrHuxJnFM8YZxt7EXvO1bGXlInzjHeAf/iK1+nIfVSP3+iZ
1ul4nuahuJ+5nTqN/nGu/MvXDI/v9flh7URx4x+0gn6o5fVXTdcG8Sy6VT+g
LzXi2c2t1wk8w8NxxmSzlBF0piG3x3fGu0dKvEPcEO8MqXFfzrOMkXThfu6I
/XWfDTqRZ3kk9tHcLp3Oi7FXrg/q/Phe49+1iqbp/5XYjDE=
           "]]}, Annotation[#, "Charting`Private`Tag$38713#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV03mATWUYB+CLlGgvIpUUSZTIvu/bMGaGmbEvYys0EyrapSxlqVRSGGUp
O9mJFkWLvbJXKrsipb3I8/7x3Pf3vve73znnnnNKZuWkZedJJBIjfVTJm0jc
ky+RuJFv5TkMoy9VqUZ1alCTWtxrbQkOyHN5KvagNv3Mb+I7eR7DY32sMavG
n/J6XqMO/c1K8r08n6djj/idWXX+kj/ideoywOxmfpAX8EzsEb8zq8Hf8sdM
ph73md3CQXkhI3hR34yL+CL2jH3kmvwjb2AK9ck2K8UheREjmaBvTgG+jGPE
vnIt/pU38oacQRGm6iepyVzGXn0DcuTSHJYXM1Vuy9WM0r+ktuBi5tGDr8xn
qB1YTjEW0ZvsOD+1Nkv4L+6P2p2VfKJ/U81kGdeykF6sJjfui9qGpVzOfLJY
xT7fz1I7sYLiLKYPDX13v3orR+TZalfekXPVdlzDaP3LaksKslM/U+3IdeTo
R6l1OCt/yrS4//oUrmC/vhED5TIclZfwLK/okyjErjgnRst1OSd/FveGxgwy
u41j8lKeiz1jH7N6/C9/Hv8ZTRhsVpbj8jLGxB405QHz2zkhL2dsrKcZzWlB
S5JoRWuSaUMKqaTRlnakk0EmD9q3HD/KKxgXx6M9D5mX5yd5JeNjfVyLWX0S
bNJPpwND9HdwUl7F87FHXItZA/KwOZ4xOjJUfyen5NW8EHvE9cU9Jy9b4h7S
iYf1FfhZXhPvGhP1rbiE3bFnXIPciHxsjfNT21OUWfH+qqlcydf6t9TOXB9V
/4h6F6flOWo33o1nRU2nMAvoyQTzV9XWXMqeOM/4r+TGXMC2OAZdeFRfkV/k
tfEexvHoymPmlfhVXhfPcqynG4+b380Z+b14FmM93XnCvDK/ye/HfxLr6UEW
PenFk9ZU4Xf5gzjv+G3cJ7Mm5Ge7/m16M0xflT/kD5kUe8R9MmvKhezQz2aK
nMZVfBN7qF24Id5T+rIm3mffnQfxD8QP
           "]]}, Annotation[#, "Charting`Private`Tag$38713#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwNzkN6REEUgNHX6Y5to2NuJkvIApJBlhfbtm3bOIPz3fpv1aCibR2t7aEg
CDrpCgdBWSQIMojwqR+5oZseeumjnwEGGWKYEUYZY5wJJplimhlmmWOeBRZZ
YpkVVlljnQ022WKbHXbZY58Dyv0zk1i+9BO3VOlcEvnTbxxSobOI41vXm0Wk
0UgJzTy7qzULSCGGO7tqM48kAt7tjog6ZxPPj37hnmNOOOWMcy645IpK73NI
4Fe/8kCNzieZEB92dWYhqYRpoJh0miilhWtv/wHROENK
           "]]}, Annotation[#, "Charting`Private`Tag$38713#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1HegjnUUB/DXLkk0VColpGnvdW3ZXHtzrax77b23hpFZyGinQRsNDeva
u5IZTUVDisjn/PFxvuc81zue33ne/ClpyakZEolEun+KZE4kpmdJJB7kqPw8
I+hMUWaYP8Qx+QVG0oViFKcEJSlFacpQlnKUpwIVqURlqpBEVapRnce9/sMc
l19kFCnU4AnzRzghv8RoulKTJ82LcFJ+mTF0Y4VZDS7IH/E0tXjKrCjfya8w
lu6sNKvJP/LHzKU2M82KcUp+lXG8rW/ONezQ94h7JtfiX/kT5rFe34HcHNTX
YZZcnNPya3whd+d2xuvfUVtwLTv1PeOey7W5KH/KVrkPdzM/vp/akRs5zBgO
me9WB3JffF+m8Kj5bLUE3wf9fnUoq+Qv1R6cIS9HGMcfTHD9XbUlP5OdrxjJ
OXa5vkNN4zcKxJkxifM8Fmer1uFHLukPqsPZIKerfbmHBXEOaiduivfR71EH
UZi6+jlqSX6QX2ej3JM7mKh/T23FdezW94r9iXvAf/JnLIzz0nfmZr7W14t9
kUvF55TfYBK9Y8fivbksf84i6se+mJXmJ/lNJtMndsysHlfirHmGBrEfZmXi
PspvMYW+NGS+eVl+kVczlX40ojFNaEoyzWjOAn9fLs5NXsM0UmNnzerzf5wt
z9IivrdZeX6NfWZTnA93xm9A7CJ/Mt2199XW5GCPPi12V25Ago36xbSM+6Gv
EOcfu8wM+tMqvrt5Rc7GHsUzzwBax+cyrxR7FOcWzzwDWWXWkAxs0i+hTbyf
vjK/x+eL3wEGxR6YNSIjm/VLaRv/T18l9lj+IH4HourbcD179YPjrOXGZGKL
/rl45uQu3MI3+nbxunJS3CP5QzbLvbiLmTFT25IzdopR7DPfqfanICeZzJDY
GbVJ7A+ZOcQItrq2Te0XZ0V+jsd+8xfLXN+gpsS+kIdvGRv3hsOu71UHx33n
fk4xlb9pH99RrRrPUbym/oA6jLXyFrU3+TjGBGaZr1XbcUPcE0az33yXOoBC
DI3dVpuShXT9djWVe1kez6DalVvjc+s7sEyuxnl5XfxeRY3PSi4O6IfFsyEn
k5Vt+hV0ZLm+enw/eX38TjA8nguzZmRju35lPMNyN27jiH5fnAcPcJppXKCT
a1cBas39uA==
           "]]}, Annotation[#, "Charting`Private`Tag$38713#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"Test on dynamics\"", TraditionalForm], 
     PlotRange -> {{0., 3.12499993622449}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1b\"", "\"u1b\"", "\"x1b\"", "\"\[Theta]dot1b\"", 
       "\"xdot1b\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.863702134579542*^9, 3.8637021627135525`*^9}, 
   3.8637025210160646`*^9, 3.863702578124817*^9, 3.8637026714539957`*^9, {
   3.8637027226726294`*^9, 3.8637027640764*^9}, 3.8637029884806967`*^9, {
   3.8637033266226506`*^9, 3.8637033354478307`*^9}, 3.863879327529692*^9, {
   3.863884217207935*^9, 3.8638842652235885`*^9}, 3.8638842967265196`*^9, 
   3.8638860360506268`*^9, 3.8638906095889077`*^9, 3.863890848019706*^9, 
   3.8638910663699183`*^9, 3.863891132659732*^9, 3.8638911691100826`*^9, {
   3.8638913595922036`*^9, 3.863891384033392*^9}, 3.8638926082491283`*^9, 
   3.864131525163704*^9, 3.8641416796563787`*^9, 3.864143125130576*^9, {
   3.8642366677575245`*^9, 3.8642366798526134`*^9}},
 CellLabel->"Out[89]=",ExpressionUUID->"9e1fe45f-1b33-419e-be97-6786b44dfcf4"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
nxx8d3zkmVAXlZ88djVdsUe6E0jv1Xzy7NTpox1Aeq9HZ3E9+sQH0nuFajLy
9uJ5gPTeqf5bFjkK84H03sCt1udeZLXD2aZ2T9WMAbDXnxFBSLbDnx9jE/YZ
g/DkyHW0u4QHv3SXtDPyh0BfuvzLJTseeOmF837lDEN0hb4Rd6wNHrsW3V6Z
PQLOT+l5s+3bQFt5elJd0Si8qPVRFqRyYW989YvdJQJ4Ky44taecA6pFZcIH
asZg2uRHd/EUNuXHAQvU63y2PaHyoBmBO1oSigsI0o+H7wgZXlnyniD/H4B2
V7LP+7UpQP4/gMR4Tl+k43sg/x/ApNbK0YVVBPy8azl3exgTDZUn+qXQPuF1
KJIanimGXs+Z0aSY8J8372PQo7+lFwPpxdv0ncKup3YA6cXvXitcbRHrANKL
z6f8lp3rxweZ7F1uL9YNQt1yTcegDh6ULhSXdt86BN+7e1FADA969+qGSWwb
BrdlcwcrNuD3t31yxHTzCKSsZXmtwt8dpB/XHF3WcSnkA5UffViusXb20VzC
avr62K6DYiibd1u3LL2I8uPHSakStCcllB/D29UF4j8mqPznV3eW/MbUHir/
6fR8bD/xo5vKf+bdqf0gpNhN5T9XPQ4vWrW4i8p/Li8cSg5b3gmkD3sm1dqh
8x1A+nDDiSMPH/3iA+nDLjTJM33m+Lj/+7Ck+fijA+J8IH1Yw9aCu6SgHdx5
Rl7f7w5A2YobDUdntcOprR8+2t4ehOcuC45b/MTvb1fdtu2PhyDVJv1b/CUe
oLJ0duqjYVjXfK1MRYIHP0y36p2NHoHFfwh95vU2aH3kM3b42SgoPeeI3/rC
heNXH2QoJAggVmReaWM3B8SWCKeVZIwBSJR9aKhgU96sqkOk+I3dpfKsLssc
azf/yqfyrOLjY5aO+z4S5P83oKeN6xpHJAH5/w3cP/v73rV7B+T/N1jWU6o8
czIHuMvOWZ65ykSewfMvLXicD6OHPqloMsSQsIn7Tw+z/3w6Z1nYUkOXYiB9
WeSw+evDJR1A+vJxAqKE5TqA9OXXBzK3m9/hg1LR68t6MwfhpquUC2uABwZB
xV8vyQ3B3kX3pwkn8oCnN8nes2gYwqWfdUbvwO+vaPHgJrkRyNou63i4tI3y
5iOMZ5uvXU+n8q9KXgdW/rDLI97z32WqbRdDGw5JRb9wLqK8WcPn5PZcmxLK
h1WnEYto8Z+o/CkY7mTq/S6hfDd4RTVNhTdB5UX/Hg5Wjc7tofKi7gvmFlY2
dFN50eC9El9bVnRTedEmaZ8TZepdVF7U696U6wkbOoH0WydvwW/nyx1A+q1W
UYQ8o54PpN9u3p0SwDuDv/P/77f3tNaHnJDmA+m3C6Z/yO7G61zR81OEFfwG
QONm9mzZue0Q73xP1ub6IOSulPpiVM0D3WKNc6dvDQFRZyx+z5MHClIlLIWw
YXip/Gjnoxk8sNK/rHQ9cARmtiWNage3QUad1tPb90ZBTin9dmwVFzh2Xlsk
7ggg/NTF0/VCXOj/eV9cJGEMOOrHOb0cNuXBQtf7zhwJD6Hyrz4GfwMGfudR
+ddieQ3B2rOZBPn/DWbWKp2V3PoCyP9vQHStf+fAyQDy/xs8nl31ODM8B5y7
z0sNujLRnA1s0yaHfFD85LPBdJyJMjlDhQ4b//PjFjG50u1GxUD6r2HQ1I3C
FR1A+q9KZ2vK96UdQPqv/VX9rtQYPqTuOSOIFhmEcvurT8ZGeHAr/6nKRfEh
SL/yMC/qJQ/OfjWZbiMzDOeF47oP78Xvj6nRnygxAq6owiuzoo3y4B87rBfy
rqVReVm++KZXccN5RONRt88HtoihpZ0b/KwPFlEePJp9wfTvvhLKb1VHNI4q
rS+g8qqsZRGyZ3JKqPxpd9Qj5YSyT5SHbkwX73rbV0J56KIpxMLYwQkq3ym/
JTHbtKSHynfmh3V4dbR0U/nOwI7Ddo1ruql851vZrDtvtbqofOcBTvSk9tZO
IL3z4aTBFwWvDiC982HQ2yc7GvlAeufsZVO0u6z4QHpn9sxG1a7peD7/v3dK
PaVdrf3cDntTT2/TvToAY/c0E/rwd2JhqO+utsuD8G3Dle7C3/g73I9Fcwoc
gvxvq874XeNBmOqP08b+w5BqJG2yfw4P3u6SvS3jPQK2vsk1hrfa4JHbfbe0
0FGYlSWVF1nPheSWC5PXggRwdmqpXZEYF2xecN7FPRiDpcd84qx62JSfJpvY
HVze6kvlVTtWH/pMmOVRedW26JDLz/oyCfL3/7PcZr0bD38O5O//TaYU2xyM
zwDy9/+0mpKsKJMc+GjUc/Lf/8WYZnqngmGcDxluZ3JsR5goKebgusyl/3nr
pQvCGYE6xUB6aWGgYjv7dweQXsoipmcVLe8A0ksF3Z/PWsbi9xtEbC4YG8Dr
Evs++hh+Hw23jQdpQyBxOuSG2WseLLkplug2BffvU288X+zH728ZODWKjMAT
Z7pRc00b5adVR6yPzfF+Q+VbxSrHBpmQTzhLmxic3iiG2lVuP4/RLqL81PC1
uN1WKKG8U8+0okXTs4DKl45sSd716XUJlRetk9Px2GvwifJDybTHNqHsEip/
KStayNLVK6B8z9p697tMoc+U77HjSu9Ujk1Qeci5IvXFUNpD5SFfLWdeG2N3
U3lIrt6zGyfXdVN5yMnmChlV7S4qD8nYevnZnW2dQPqdfn/LRoF3B5B+V7ZH
xdy6mQ+k35352NzhZMMH0u+STY0ubJzJB9LvfpyzMC3/0g72P8NOHrsyAFkP
z4Y1zm+Hwwsm/iS6DkLryf6isVoetJ7NLLvsOwQzhyPOjnvzoCTn0GJnn2EQ
ynXLWTKXBybbOV9qPEbg7nH/0MrbbXC7pKQl/+YorHvnMSv8LxekHvEat/gL
IHKl540MCS4ozZYKcYgag2v5p/XkB9mUB8ptWCgzKX2dyneeWsLamrswj8p3
mh3YqvJMM4sgf09ubUj8vr/5OZC/J+c9CaQ/9s4A8vfkf7mTqH1rDtSLvrn5
2IGJjknLxfrr5YNQZaWw8xATzZddFGUk958f7iw5E6uwuRhI/7t+IoHdUN8B
pP/xrunq7VzVAaT/ye9OX7vjMR/mpvBNa4YHYChY+7zoOA+220p0p08MgtPg
7t3ZqTyg2/51vMYYhneKLt8MDfH7e/dp7ZjQCHg7GVf21rZRHlgQo7LIjvaG
yoM+bGUXmJzKJ3Jsv0TYaogh+xc75q7QLKI8cMG9M0VNG0oovzvjy+lsfVxA
5TE38B5EsZ+XUPnKQq6ReKbMJ8rD1p+fnN3zt4TKKy55JG1hL1FAedXAxevK
W0ZLqDzgiftlSesDCyhP+noz49E65mfKkxiBWxKYg8NU/i+uzNY4LXqIyv8N
Jsn6v+kaoPJ/fOP3te56/VT+L9T8SKfE014q/5ctKzPb61s3lf9TWOGvnCzT
SeX/Fl6+M2WVLI/K/806PlzgM4NN5f9mRDxt0ddppvJ/sdn7o0U31VP5P50o
h30+Nyuo/N8SxfZVLSZfqPxf/ntZc+8v6VT+bxGtc+KD0T3KkwKPT/30WiGP
8qRFTwtfN2/4RnmSf7DoU6uvFZQn7Wv1VBZ2q6U8qe/lBom1e/5SnhTR6Ra6
TtBEedKPDQF3f0+0UJ6kKmzY/vPBf7+HzfryTXdoJofyJF+G4mT6ci7lSfcG
9R4vHuBSnnTE3/VTjlcb5UlvWEUOURltlCdZnwu0DY5pozypZbXIhrqVbZQn
vRg47OF8kUt5kuz2qzsuHudQnnTVckqd5hQ25Uldru8/SV5gUZ6UVQhovkUz
5UlHcmjS5asaKU8KyYlVnc+rpTzpjWmzrY5mJeVJdh3XVCVUv1H5vwsWTGu3
zQSV/9O9MzqjtOMTlf/rK3scqbHsG5X/uzDfhiHu/ovypLOHTpyWml9NeVLE
910ZHkG1lCf9cFY7OXK0gfKkC8obnDyJv5QnMaYMSGdNNFKe5DFLqUq/pYny
pIiFOt8qPzRTnvQ6bO4Ne8NhgvSauQHr7rlWsSivWa0pE6R7mk15zYWRKUs/
JHIoryEsz71OjuRSXlNv8knOacd/XtNRtv/LYHwb5TXy74LnRL9to7xmIjkj
8Oz5Nmj40fQ8UX4CZFsUsi/X4XVT3hLzi4snYQpDyr9tgAOT/Hvm3JlC6Mc9
++Om2WxI0S8LOXBLCGmpfBncvLOV8p6J105/dacVU3m+UP77A26e2VSery0p
pX9I/TPlMzF6lQopB5spn7mu5LpuX8IwQfqHsUPxrSTcT0n/MMjcuVGYzqb8
4915zwmJkxzKP1Zmn97y5zSX8g91fZsM7sL//OPvtJF7K+60Uf4RfZl/1+R9
G+UfoU30hqf+bXDpjZb23Mb/FW3n4VBufwDAR2nPUshNkRuVpXErFal7v5PI
Eiplv2myRSihlOqnIopyibpFJEuWEJIta1kitFh+Uk2Za5ZXsrVg3ndmfuc+
z29O/jvP+zzznv18z8f3FYLd9ll3wmYTQPdZ43f3owgUDEbd/LbwgXl/zYyz
Q2KI+9J02VKeB/fLy3rMgmiMNnX55TPyONhPZJos/pqf24bz7z4VteW/UKjA
+XdbCk11bO40Y+8wqYx43rGcjb3i1cUhxdRaLvaKbWUvxV8/87BXqGq2rlnW
ygfuALfK1EQAh7pXnK72RPcdC3PPERMS1lxPTlxeRIC0Yf2ZL3so0Jg2T3F4
QECLDe33EFchHG6qVOjcg/pn/NIiwwMiaN+dua/9AR+MVFba7j4shsr4rt7h
fB72kHitr9HdzGc4ny4xisNxZjZg/0iqZT6mXWZj/ygRLjzC6pyqk/jC4cLF
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
QngkFAXc0vm3P52mpNNEYB7ppVwTxAfB99G45Q/FMPR6ZH2FEw9ko9c/p9vT
GPf934T6zPzpK/uv3B9z+NGB861sY93s+1prcb5VSIvpcpeljdhDZkWZ1wi4
A9gzVDN+X6Lhw8WeEdT/2FC2gIc9o21XX0h3Mh9SH84ZH5dG83vOdZ27Zig+
GxKl9Mwj4YLmx7ntWSg+29BV/Emeggz23p3r0PyoS2W03lghhB3BFhpZ/gR0
K/yZFr9SBIJkRmd6Hx+2/b2fVbpGDD3aW9ovjvOwlyw0cCykuptx/pS1z9iJ
1q4a7CPb8lNMZzug+X568oBnwzT072u7772SAJu3/zDa2wRAKzu0eNdNFB/y
XVtj20m4Zd0xbIbmT5Bztm74ewr4l/REW6II7CtZuZTZA98KYHCUI/5jLgDP
AEfjxMMEPBUsJVnmJIRllLhmo/gs/axZ0gY7Cvoi3wQm5hE4H6rEQ+HKuhg2
jO2xv272QADEOvm7HVfRfH6m2eOZR0JgWoTBDvR+idd47zu1vtngCXgEXrVy
1kbxrjmkdaJ4sNRB5v48fQoinE4tVkDv65O5XVM+QsJnK13fYTR/1MKzc929
UX0457rsUP/G3bsQ6xKC6iMKX1aaQeDvYc2n7grsMtkQUTzHZe9tEg7uUB+q
Rutrm+mY7vdfKTDw7eu2RucnkzyzI+MDCRVHU7c0o+djtUzbe44knKUciQz0
PLB3++7QJyTMvLD9+nFUf4kn0d8la7r5ovNZvcygXUxC+Z6hoCq0/mzMRmir
T5FQ8m2eXA0qY2+qYOcWFLHBUmtatSWOhFDTvHZH9L7Vgf6zl/ageLijSWkx
+n1Da/3FYyUkPL0t7+GJyop/Zwu2T5JwQ+PcCVfU/nqjJbfe3SNB6rmN7AL0
/E5E9Hk6l4RscZa9B/q9woN7rko3kmCi4VV/GD2X+Nb8SWaCU0QF/r71V8Pg
d21l6DxeayxmofOc9v8/6sUfxqvFMxmSssS/JGXJ/V9S/h838taw
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{1598, 1597, 378, 379, 380, 381, 382, 383, 384, 385, 
            386, 387, 388, 597, 539, 491, 453, 426, 411, 610, 552, 504, 466, 
            439, 622, 564, 516, 478, 389, 598, 540, 492, 635, 577, 454, 627, 
            569, 648, 521, 640, 582, 652}}]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{1598, 1600, 399, 654, 585, 643, 527, 575, 633, 479, 
            517, 565, 623, 441, 468, 506, 554, 612, 414, 429, 456, 494, 542, 
            600, 398, 397, 396, 395, 394, 393, 392, 391, 413, 428, 455, 493, 
            541, 599, 390, 440, 467, 505, 553, 611, 412, 474, 512, 560, 618, 
            427}}], 
           PolygonBox[CompressedData["
1:eJwV0kdszQEcB/B/KymxghrlQs1DlSBBUEQJsfvaC6q0Nt26iJEKGkRir4u9
LmY52NTFKg5WSmLVuljFwajP//DJ9/v9vf/Le8l78Vl5kdzoIAiiqCFDGRYT
BEks0csopYRiilhMIQXkk0cuOWSzh+Pc5BMdfEAai/TzPOQXPdwy2a0fo4qP
tHdLZaF+jgf8pLvbTHbpz6int72Ao3ojOZBCbtgfiNMj4TN6czmUMl7YDWQ/
cqi0m8jBFHPfHiGX8UNfI7sxg532RjmacpqyjiGU8NTr62Uyy/lnr5W9mM8R
e4McxUoaUsEACrju9eFyKe/11bIdKeH77TFyFc1IopTn7iPlCqLpSzZn3RvL
QRRRbdfRVc9gh/6EvyTa8zisx8j+5HPNfkdbfXL4jF5DlN4n/F05Y9/jO13s
6WzXH/OHnvZcDulXqaWNPSm866e5yzc6u6WzTT/IFd7S2m0ic/RT3OEr8W7T
2Kof4DJviHWbwGx9FllksoX9XOI1rTwzPvxv6Se5zRc6uU1ls76Pi7yipdu4
8L+gn+AWn+noNoVN+iN+kxB+X/bqF3hJC3ss/wGoMm46
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1Hl8z3UcwPGdQtmwpcM2qaQsplELpSY6tLKtYW3rogPVViFKoRzl6KDS
oaL7cnfrEF2KLlcH5eigkCtKOXq+H/547vX5fPZ77Pf5fL+fx5r2qimtTkxI
SLjEj2gtP97XUVTRiTYkkUwKqfE5DqI2dajLwRxCPdJIpz4NaEgGmRxKIw7j
cI7gSBqTRTY5NOEomnJ0fJ+9zdPRsV/Ooi3HxD787gO9i0vpzMnxXda/0Ae5
lhKOjT1bn693cxldOCX2Zf1LfYjrKKVZnM/6Ah3D5Zwde7P2nU7hZgriTNa+
0klcz0Ucb22NvsBQjotnZe1DHcsV5Jmv1xmcE2c2/16nMohTzbfqmzGO52b+
tT5MofFurY53Zbwxvlfn6HnxXikzPkHXarG+GGfWvVquw/Q0/Uu76zt6viZT
SfN4t/qRXqjj9Az9W3tqL22tG+KZ6cw4h+7Xc+P9Gf+gT8V7M/5PB9POeJu+
FeO4C+bf6CPUxPs136Svxr5oYb5OX2J4PNu4b9Y+1vH0jjPHnbC2Up/mFtrH
HbO2RB/lBnrEMyHN+id6D1fSNe6ItVX6DLfSIe6ntaX6GDfG/TLfrK/FMyDX
/Gd9mTtir6Rb+1Tv5SpOMv9dZ8Xzjbtl/qM+G3fWeI8Oif0ab9e3472QZb5M
J9PJ+F+9Ke6s8Z9apq/H3jWJCsrNT9RftERfiXur+/RivVNP153xLPRdLdIU
qsg1r68LtZvep2fqP3o1+cZ/6Ox4x/HPg6K43/qTPsdt8ezMd+jc+D6yzZfr
4/SnwHyLvhH7oqX5rzqNEXEGGlj7TO/nGi6gubXV+jy305Ecayv0CQZQEX+P
htY/1wn0iTsc95dWZPjdIp1I3zhrnJM8Wsc7I9NnFusD9KOYQppY/1afZCCV
8Tet/abTGRn7Mt+l78W+jVMTD/y/zTf/H9YDkwM=
           "]]}, Annotation[#, "Charting`Private`Tag$38825#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV03e8jmUYB/D3nERUCJlRFMneo4gyK8Ihyc4mW7KPfY51jlEUpSK7jIhQ
dvbIlq3sbNkjvvcf3/f6Xdfzvp/3fu77ebI36xTTMSoSiRT10Zh3oyOR1JyQ
l/MdLfV5uS/vYwwf6V/kiryZeTThPbPn+Fv+je8ZS32zl7gqb2E+TalmloZ/
5N+Zwjg+phnNaUF130nLSXkFU/mcBmbZuSZvZUFYL++bpeOUvJIf+IKGZjm4
Lm/jZ1pRw+x5TsurmBbm+nw8kPcznkb6l/lP3s5CPtEXJorD+tbUlNNzRl5N
Z7kESZkevqPm56F8gAlh//WvcEPewafy66Rgkb69WoRoYqnIEfMealmeZRBV
aWNeS83AEM7qe6vlWSN3UUsSTzL6U4mRzHC9jVqAOP7X91MrMIK/9J+pZRjO
MwykCgl8GZ4FNSdDuanvq77Nn3J39Q2e5hd9B7UoT3BU31N9k5S01ceoGTkn
r6WrXIqnmKlvqxbkkXyQr8Kzpc/FLXkni2lHbbNMnJfXMYuJ4Xkze5Xb8i6W
hHOljllm/pX/YDaTwlmEdRNenk7hfMOehrXRLZxduM+wT+F8wj3Ri7JJnYPa
J+xJ2Fdi6c8ABjKIwQzhA/+dhQvyeubwdXg3zHJzR97Nr2Et+mIk4Zh+KHXl
F7gY/lN9iw1hjWpphpGcAVRmVNh7a/wx7JdciAiH9N+E91F+jbvyHpYSx4dm
Wbkkb+QnJhPPMIYzgpGMIoFE6vlNNi7Lm5jLt7Qwy8M9eS/Lwj7ri/Mkx8N+
quVIxWDeIZHRrj0Gdb+aRQ==
           "]]}, Annotation[#, "Charting`Private`Tag$38825#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1HmATlUUAPBvRqVNKalkKSUtqGghIYoWFVFKJi0KlcyobCEklN1sxhIz
lLSpLA2imtaxFbLNosXSJhRlF37nj993zj3vvvfuu995r3qntLapSYlEIsXP
uOREYkaZRKITV3LYeCNfMJ50Msgki2wm8Ia5T1CLI8ZFfEkOb6o9SW3+Ny7m
KyYyU60zdThqXMLXLDTuS1POYqfaJN6Sd+EqjhmX8g2LjF+kGWezS20ys+Rd
uZoEm9S+5RN5P26hAn+rTeFt+VNcQxI/xnxxOK24kEK1xWJ/buUc1pJJCv84
vlIczf1cyutq74hPU5dk1pDOQ/zkeKH4Kq1jnXEOF7GBCTzCz+Sy1Pwl4gC2
0JxSpvAbFVlHFtt4OO7BNP5gt/O/E8ewlXbxrEzld2pSxER+5TF+IS/mOPdd
8RnqUcJkyvADGXSItZq3VHyNe6nORnJ4lGWOfyq+RAvOZT3ZdGSP49+LY3mA
y2L9au+J3biWE2JdasvEEbThYparfSYO5DbO41+1XN6XP8t1nMhmtRV8Lh/E
7ZzPf2p5zJZ353pOiv2O/5fpfGCcyg2Ujb2MfY13KN6J6P3o8ejb6MXor+iD
2L94jlhLXD+uw4d8xBzmxtj10qjPyfE/xn4wL+YZ96ABp8R/pLaKAvlg7qAS
e9XmxzXlz3Ejp0aPqK2O91r+MndyAfvUPo77y5+nIadFT6gtF0fSlkuif+Md
F4fQksrsj3WI43iQy8mPNYsvcBOnRw/GnoujuI8a0TvxXRBf4S6qcEBtQTyD
vCeNKMefamvjWyEfyt1U5WB8O+IZ5L1ozBlsV1sX3wnyjXvThDP5S219fBPi
vY73Kvoy+id6Iu5vTh9upjw71DbEd0c+jHuoxqHYU3E87bmCYibxePQZ02Pt
FJh7HDS1yAQ=
           "]]}, Annotation[#, "Charting`Private`Tag$38825#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV0Xe8T3UYB/Bz3UtCCiFkZ2SlzJKRRMPq2qMUEcm9GYXIjEJWKhllVUb2
XmVUViErZGfPi2vLeH//eP8+55zP8/qd73k9eVsmxifERFFUwM+Z2Cg6HBdF
C/icFpTncc7qznGeCyRxkUtcJpkj5hYyiLd4lpxc0f0nFzGYt3mOXFzVHZWL
GUJLKpCba7pjcglf0IrnycN13XG5lKG8Q0Xy8j9b+YEe1OeG+RNyGcNoTSXy
cYe/+ZGeNOCm+ZNyOcNpQ2Xyc5dt/MQnNOSW+VNyBSN4lyo8wW3dabmSkbTl
BQqEs+rOyF/4knZUpWA4l+4u9zjr/ldG8R4vUoh7bGcqvWhExDlW8RXtqUbh
0KWMoh1yGr1pTAznWc3XvM9LPBk68zvldPrQhBRcYA3f0IHqFAmd+V1yBn1p
SixJrGU0CdSgKHFc5De+JZGXKUZKLvE7Y/iAVyhOKi7zB2PpyKuU4AFS8yBp
SEs6HiI9D/MIyaxjHJ14jafCeX3DP/Jn+tGMDFxhPePpHP7f3H45L7zD9cHw
DlkznEH+K+cwkJLhWz3bLWfSn+Zk5Cob+I4u1OJpMvEombnGRr7nQ2rzDFm4
ziYm8BF1KEVWbvAnE+lKXUrzGDf5i0l043XKkI1bbGYy3YmnbNiJb9gjZ/Ep
b5Cd22xhCh9Tj3JhT+b3ytkM4M2wG8/2ybl8Fnbk/oCcH/bk+lDYk8wh7wMb
OZtT
           "]]}, Annotation[#, "Charting`Private`Tag$38825#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV0neg1WMcwOHTHtJtl5Jc0lQaihRtpb2JBklLGlTKalDaFE1t2pOitAuh
lGgqTZEmLWkYz/eP537e93vPPefc9/0lt+vepFuKRCJR0o+kNInETb5kHN1p
QlWykJVsZCcHOclFbvJwG3nJx+3k5w4KcCfJ3MXdFOQfvmI8PWhKNe7hX7Yw
gZ40ozq3pk0k9ugcBvAshfiPr5nIizSnBpm9fq/OZSDtKUzC/BudxEu0oCZJ
5vt0HoN4jiKkMP9WJ9OLx+P/NTumnzCSR+OczPbrfN6kQ5yB2W+6kjEUJaXZ
Vv2A3nEu9qd1DU/EOdof1+WMolacv9lPuoC34pzsz+l6OsY525/UVZS0/kvH
xve3/lM3Ucb6uhYjlfU2vV+naHG9pA9qn7gnPaPlda3ep1f1IW0Z96y/aDld
oSX0ilbQ0XHO+oc+oBu1tF7T2vEcWR/QhdxrfVkHx11an9cNdIrnxv53/Zz3
4uzsL+jm+L6ktv9Op/IyT8azZ3ZCP+UdHiO72UFdxBA6x+eSxny7TqMvT1GH
HOY/62Lepkv8f6Q136HT6Ucr6pLT/JAuYSjPxx2Qzvx7ncErtKZenCXp/W6n
zuRV2lCfUnFWcVeUjfuJMyaD1/+gs3iNtjQgl/lhXcowusadkdH8R/2Q1ylo
f1bXxWdY/60V9WnNr7/qZ7xLQ3KbHdFlDOeFuEtuMd+lH/EGz9Aonpu4+3g+
4n2pxMM8QmUy+bvdOpv+tKMxecyP6seMoBvJZqd0Ne9TzP6ifhFnYn0j3l+r
6P+v7o5D
           "]]}, Annotation[#, "Charting`Private`Tag$38825#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"LQR feedback solution\"", TraditionalForm], 
     PlotRange -> {{0., 3.12499993622449}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1c\"", "\"u1c\"", "\"x1c\"", "\"\[Theta]dot1c\"", 
       "\"xdot1c\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.863702134579542*^9, 3.8637021627135525`*^9}, 
   3.8637025210160646`*^9, 3.863702578124817*^9, 3.8637026714539957`*^9, {
   3.8637027226726294`*^9, 3.8637027640764*^9}, 3.8637029884806967`*^9, {
   3.8637033266226506`*^9, 3.8637033354478307`*^9}, 3.863879327529692*^9, {
   3.863884217207935*^9, 3.8638842652235885`*^9}, 3.8638842967265196`*^9, 
   3.8638860360506268`*^9, 3.8638906095889077`*^9, 3.863890848019706*^9, 
   3.8638910663699183`*^9, 3.863891132659732*^9, 3.8638911691100826`*^9, {
   3.8638913595922036`*^9, 3.863891384033392*^9}, 3.8638926082491283`*^9, 
   3.864131525163704*^9, 3.8641416796563787`*^9, 3.864143125130576*^9, {
   3.8642366677575245`*^9, 3.864236680052549*^9}},
 CellLabel->"Out[90]=",ExpressionUUID->"74e20f43-63a2-4fe9-8948-4df62a1c358c"]
}, Open  ]],

Cell["\<\
Understand the performance of the functions wrt random initial conditions\
\>", "Text",
 CellChangeTimes->{{3.863702871824973*^9, 3.86370289295422*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"b6d5a503-f5ca-471f-9280-ef8cf6caad0d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ffCartPendulum", "[", 
   RowBox[{
   "ICs_", ",", "n_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "A_", ",", 
    "order_", ",", "maxIter_", ",", "InitGuess_"}], "]"}], ":=", "\n", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x", ",", "data", ",", "xdot", ",", "f", ",", "\[Theta]", ",", 
      "\[Theta]dot", ",", "\[Lambda]1", ",", "\[Lambda]2", ",", "\[Lambda]3", 
      ",", "\[Lambda]4", ",", "\[CapitalDelta]t", ",", "bcs", ",", "eqns", 
      ",", "sv", ",", "froot", ",", "xff", ",", "xdotff", ",", "xff0", ",", 
      "xdotff0", ",", "\[Theta]ff0", ",", "\[Theta]dotff0", ",", "uff0", ",", 
      "\[Theta]ff", ",", "\[Theta]dotff", ",", "uff", ",", "\[Lambda]1ff0", 
      ",", "\[Lambda]2ff0", ",", "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", 
      "expr", ",", "uMin", ",", "uMax", ",", 
      RowBox[{"xGuess", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         SubscriptBox["xGuess", "i"], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"\[CapitalDelta]t", "=", 
      RowBox[{"\[Tau]", "/", "n"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"{", 
        RowBox[{
        "x_", ",", "xdot_", ",", "\[Theta]_", ",", "\[Theta]dot_", ",", 
         "\[Lambda]1_", ",", "\[Lambda]2_", ",", "\[Lambda]3_", ",", 
         "\[Lambda]4_"}], "}"}], "]"}], ":=", 
      RowBox[{"{", "\n", "\t", 
       RowBox[{"xdot", ",", "\n", "\t", 
        RowBox[{
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"A", " ", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
         " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"A", " ", 
            RowBox[{"\[Theta]dot", "^", "2"}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
           RowBox[{
            RowBox[{"1", "/", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"A", " ", 
                RowBox[{
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
              ")"}]}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Lambda]4", " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", "\[Lambda]2"}], 
             ")"}]}], "+", 
           RowBox[{"A", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", "\n", 
        "\t", "\[Theta]dot", ",", "\n", "\t", 
        RowBox[{
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"A", " ", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
         " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{"1", "/", 
               RowBox[{"(", 
                RowBox[{"1", "-", 
                 RowBox[{"A", " ", 
                  RowBox[{
                   RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
                ")"}]}], ")"}]}], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "\[Lambda]2"}], " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
              RowBox[{"\[Lambda]4", " ", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
             ")"}]}], "-", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "-", 
           RowBox[{"A", " ", 
            RowBox[{"\[Theta]dot", "^", "2"}], " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", "\n", 
        "\t", "0", ",", "\n", "\t", 
        RowBox[{"-", "\[Lambda]1"}], ",", "\n", "\t", 
        RowBox[{
         RowBox[{"2", "/", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"A", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A", "-", "2"}], 
            ")"}], "^", "3"}]}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"4", " ", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"A", " ", 
                  RowBox[{"\[Lambda]4", "^", "2"}], " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
                 RowBox[{"4", " ", "A", " ", 
                  RowBox[{"\[Lambda]2", "^", "2"}]}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"A", "+", "2"}], ")"}], " ", 
                  RowBox[{"\[Lambda]4", "^", "2"}]}]}], ")"}]}], "-", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"A", " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "-", 
                 RowBox[{"3", " ", "A"}], "+", "2"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"A", " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A", "-", 
                 "2"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"A", " ", 
                  RowBox[{"\[Theta]dot", "^", "2"}], " ", "\[Lambda]2"}], "-",
                  "\[Lambda]4"}], ")"}]}]}], ")"}]}], "+", 
           RowBox[{"A", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"A", "-", "2"}], ")"}], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A"}], ")"}], 
            " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"A", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A", "-", "2"}],
              ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"\[Lambda]2", "-", 
              RowBox[{
               RowBox[{"\[Theta]dot", "^", "2"}], " ", "\[Lambda]4"}]}], 
             ")"}]}], "-", 
           RowBox[{"4", " ", "\[Lambda]2", " ", "\[Lambda]4", " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"3", " ", "A", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
              RowBox[{"3", " ", "A"}], "+", "2"}], ")"}]}]}], ")"}]}], ",", 
        "\n", "\t", 
        RowBox[{
         RowBox[{
          RowBox[{"4", " ", "/", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"A", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A", "-", "2"}], 
            ")"}]}], " ", 
          RowBox[{"(", 
           RowBox[{"A", " ", "\[Theta]dot", " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{"\[Lambda]2", "-", 
              RowBox[{"\[Lambda]4", " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}]}], ")"}]}], 
         "-", "\[Lambda]3"}]}], "\n", "}"}]}], ";", 
     StyleBox["\[IndentingNewLine]",
      FontWeight->"Plain"], 
     RowBox[{
      StyleBox["xGuess",
       FontWeight->"Plain"], 
      StyleBox[" ",
       FontWeight->"Plain"], 
      StyleBox["=",
       FontWeight->"Plain"], 
      StyleBox[" ",
       FontWeight->"Plain"], 
      RowBox[{
       StyleBox["Table",
        FontWeight->"Plain"], 
       StyleBox["[",
        FontWeight->"Plain"], 
       RowBox[{
        RowBox[{
         StyleBox["If",
          FontWeight->"Plain"], 
         StyleBox["[",
          FontWeight->"Plain"], 
         RowBox[{
          StyleBox[
           RowBox[{"i", " ", "!=", " ", 
            RowBox[{"-", "1"}]}],
           FontWeight->"Plain"], 
          StyleBox[",",
           FontWeight->"Plain"], 
          StyleBox[
           RowBox[{
            SubscriptBox["xGuess", 
             RowBox[{"i", "+", "1"}]], " ", "=", " ", 
            RowBox[{
             SubscriptBox[
              StyleBox[
               RowBox[{"x", 
                StyleBox["Guess",
                 FontWeight->"Plain"]}]], "i"], " ", "+", 
             RowBox[{"\[CapitalDelta]t", "*", 
              RowBox[{"f", "[", 
               SubscriptBox["xGuess", "i"], "]"}]}]}]}],
           FontWeight->"Plain"], 
          StyleBox[",",
           FontWeight->"Plain"], 
          RowBox[{
           SubscriptBox[
            StyleBox["xGuess",
             FontWeight->"Plain"], "0"], " ", "=", " ", 
           RowBox[{"{", 
            StyleBox[
             RowBox[{
              RowBox[{"ICs", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"ICs", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", 
              RowBox[{"ICs", "[", 
               RowBox[{"[", "3", "]"}], "]"}], ",", 
              RowBox[{"ICs", "[", 
               RowBox[{"[", "4", "]"}], "]"}], ",", 
              RowBox[{"InitGuess", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"InitGuess", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", 
              RowBox[{"InitGuess", "[", 
               RowBox[{"[", "3", "]"}], "]"}], ",", 
              RowBox[{"InitGuess", "[", 
               RowBox[{"[", "4", "]"}], "]"}]}],
             FontWeight->"Plain"], 
            StyleBox["}",
             FontWeight->"Plain"]}]}]}], 
         StyleBox["]",
          FontWeight->"Plain"]}], 
        StyleBox[",",
         FontWeight->"Plain"], 
        StyleBox[
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"-", "1"}], ",", 
           RowBox[{"n", "-", "1"}]}], "}"}],
         FontWeight->"Plain"]}], 
       StyleBox["]",
        FontWeight->"Plain"]}]}], 
     StyleBox[";",
      FontWeight->"Plain"], "\n", 
     RowBox[{"bcs", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"x", ",", " ", "0"}], "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"xdot", ",", " ", "0"}], "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"x", ",", " ", "n"}], "]"}], "==", 
         RowBox[{"Subscript", "[", 
          RowBox[{"xdot", ",", " ", "n"}], "]"}], "==", "0"}], ",", 
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"\[Theta]", ",", " ", "0"}], "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"\[Theta]dot", ",", " ", "0"}], "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "4", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"\[Theta]dot", ",", " ", "n"}], "]"}], "==", "0"}], ",", 
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"\[Theta]", ",", " ", "n"}], "]"}], "==", "\[Pi]"}]}], 
       "}"}]}], ";", "\n", 
     RowBox[{"eqns", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Join", "[", 
        RowBox[{"bcs", ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Thread", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
               RowBox[{"Subscript", "[", 
                RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], "==", 
             "\n", 
             RowBox[{
              RowBox[{
               RowBox[{"1", "/", "2"}], " ", "\[CapitalDelta]t", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"f", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}], "]"}], "+", 
                 "\n", 
                 RowBox[{"f", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], 
                  "]"}]}], ")"}]}], "+", "\n", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"x", ",", " ", 
                  RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"xdot", ",", " ", 
                  RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]", ",", " ", 
                  RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]dot", ",", " ", 
                  RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]1", ",", " ", 
                  RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]2", ",", " ", 
                  RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]3", ",", " ", 
                  RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]4", ",", " ", 
                  RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}]}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
       "]"}]}], ";", "\n", 
     RowBox[{"sv", " ", "=", " ", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", "\n", 
            "\t\t\t\t\t", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "7", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "8", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", "1"}], 
       "]"}]}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"froot", ",", "data"}], "}"}], "=", 
      RowBox[{"Reap", "[", 
       RowBox[{"FindRoot", "[", 
        RowBox[{"eqns", ",", "sv", ",", 
         RowBox[{"MaxIterations", "->", "maxIter"}], ",", 
         RowBox[{"EvaluationMonitor", ":>", 
          RowBox[{"Sow", "[", 
           RowBox[{"Norm", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               SubscriptBox["x", "n"], ",", 
               SubscriptBox["xdot", "n"], ",", 
               SubscriptBox["\[Theta]", "n"], ",", 
               SubscriptBox["\[Theta]dot", "n"]}], "}"}], " ", "-", " ", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], "]"}],
            "]"}]}]}], "]"}], "]"}]}], ";", 
     RowBox[{"xff0", "=", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", 
     RowBox[{"xdotff0", "=", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", 
     RowBox[{"\[Theta]ff0", "=", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", 
     RowBox[{"\[Theta]dotff0", "=", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", 
     RowBox[{"\[Lambda]1ff0", " ", "=", " ", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", 
     RowBox[{"\[Lambda]2ff0", " ", "=", " ", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", 
     RowBox[{"\[Lambda]3ff0", " ", "=", " ", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", 
     RowBox[{"\[Lambda]4ff0", " ", "=", " ", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", 
     RowBox[{"expr", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"Subscript", "[", 
              RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}], "^", 
            "2"}]}]}], ")"}]}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], 
          RowBox[{"Cos", "[", 
           RowBox[{"Subscript", "[", 
            RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}]}], "-", 
         RowBox[{"Subscript", "[", 
          RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}]}], ")"}]}]}], ";", 
     "\n", "\n", 
     RowBox[{"uMax", " ", "=", " ", "2"}], ";", "\n", 
     RowBox[{"uMin", " ", "=", " ", 
      RowBox[{"-", "2"}]}], ";", "\n", 
     RowBox[{"uff0", "=", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Piecewise", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"expr", ",", 
                RowBox[{
                "uMin", " ", "<=", " ", "expr", " ", "<=", " ", "uMax"}]}], 
               "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"uMin", ",", 
                RowBox[{"expr", " ", "<", "uMin"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"uMax", ",", 
                RowBox[{"expr", " ", ">", " ", "uMax"}]}], "}"}]}], "}"}], 
            "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
     "\n", 
     RowBox[{
      RowBox[{"xff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xdotff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "\[Pi]"}], "]"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"uff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"uff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\n", "\n", 
     RowBox[{"{", 
      RowBox[{
      "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
       "uff", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
       "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "data"}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.863893336562357*^9, 3.8638935104547806`*^9}, {
   3.863893544100028*^9, 3.863893549383339*^9}, 3.864135408269006*^9, {
   3.864142771556004*^9, 3.8641427819726334`*^9}, 3.8642366861025925`*^9},
 CellLabel->"In[91]:=",ExpressionUUID->"af3ea33d-8e3a-4566-b4c0-08bbf9c4fe8b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  StyleBox[
   RowBox[{"n", "=", "20"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  RowBox[{
   StyleBox["\[Tau]",
    FontWeight->"Plain"], 
   StyleBox["=",
    FontWeight->"Plain"], "5"}], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Tau]1", "=", 
    RowBox[{"\[Tau]", "*", "1.25"}]}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"A", "=", "0.2"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"order", " ", "=", " ", "4"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"maxIter", " ", "=", " ", "100"}],
   FontWeight->"Plain"], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotMin", " ", "=", " ", 
    RowBox[{"-", "1"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotMax", " ", "=", " ", "1"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Min", " ", "=", " ", 
    RowBox[{"-", "\[Pi]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Max", " ", "=", " ", "\[Pi]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]dotMin", " ", "=", " ", 
    RowBox[{"-", "1"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{"\[Theta]dotMax", " ", "=", " ", "1"}],
   FontWeight->"Plain"], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"xdotMin", ",", "xdotMax"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Init", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]Min", ",", "\[Theta]Max"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]dotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]dotMin", ",", "\[Theta]dotMax"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"ICs", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "xdotInit", ",", "\[Theta]Init", ",", "\[Theta]dotInit"}], 
    "}"}]}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"InitGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.1"}], ",", "0.1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.1"}], ",", "0.1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.1"}], ",", "0.1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.1"}], ",", "0.1"}], "}"}], "]"}]}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"InitGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
       "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
       "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "data"}], "}"}], "=", 
     RowBox[{"ffCartPendulum", "[", 
      RowBox[{
      "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", "order", 
       ",", "maxIter", ",", "InitGuess"}], "]"}]}], ";"}], " "}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1b", ",", "xdot1b", ",", "\[Theta]1b", ",", "\[Theta]dot1b", ",", 
       "u1b", ",", "J1"}], "}"}], "=", 
     RowBox[{"testSwingUp", "[", 
      RowBox[{"ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "u1a", ",", "A"}], 
      "]"}]}], ";"}], " "}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x1c", ",", "xdot1c", ",", "\[Theta]1c", ",", "\[Theta]dot1c", ",", 
      "u1c", ",", "J"}], "}"}], "=", 
    RowBox[{"testWithFB", "[", 
     RowBox[{
     "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
      "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A"}], "]"}]}], 
   ";", 
   RowBox[{"p1a", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1a", "[", "t", "]"}], ",", 
        RowBox[{"u1a", "[", "t", "]"}], ",", 
        RowBox[{"x1a", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1a", "[", "t", "]"}], ",", 
        RowBox[{"xdot1a", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1a\>\"", ",", "\"\<u1a\>\"", ",", "\"\<x1a\>\"", ",", 
         "\"\<\[Theta]dot1a\>\"", ",", "\"\<xdot1a\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Feedforward solution\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"p1b", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1b", "[", "t", "]"}], ",", 
        RowBox[{"u1a", "[", "t", "]"}], ",", 
        RowBox[{"x1b", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1b", "[", "t", "]"}], ",", 
        RowBox[{"xdot1b", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1b\>\"", ",", "\"\<u1b\>\"", ",", "\"\<x1b\>\"", ",", 
         "\"\<\[Theta]dot1b\>\"", ",", "\"\<xdot1b\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Test on dynamics\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"p1c", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1c", "[", "t", "]"}], ",", 
        RowBox[{"u1c", "[", "t", "]"}], ",", 
        RowBox[{"x1c", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1c", "[", "t", "]"}], ",", 
        RowBox[{"xdot1c", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1c\>\"", ",", "\"\<u1c\>\"", ",", "\"\<x1c\>\"", ",", 
         "\"\<\[Theta]dot1c\>\"", ",", "\"\<xdot1c\>\""}], "}"}]}], ",", 
      RowBox[{
      "PlotLabel", "->", "\"\<Backward Integrate feedback solution\>\""}], 
      ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"p1d", "=", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"data", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"AspectRatio", "->", 
        RowBox[{"1", "/", "3"}]}], ",", 
       RowBox[{"ImageSize", "->", "400"}]}], "]"}]}], ";"}],
   FontWeight->"Plain"], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"Grid", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"p1a", ",", "p1b"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"p1c", ",", "p1d"}], "}"}]}], "}"}], "]"}], 
   "\[IndentingNewLine]"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{"{", 
  StyleBox[
   RowBox[{
    RowBox[{"\[Lambda]1ff0", "[", "0", "]"}], ",", 
    RowBox[{"\[Lambda]2ff0", "[", "0", "]"}], ",", 
    RowBox[{"\[Lambda]3ff0", "[", "0", "]"}], ",", 
    RowBox[{"\[Lambda]4ff0", "[", "0", "]"}]}],
   FontWeight->"Plain"], 
  StyleBox["}",
   FontWeight->"Plain"]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.863702943662017*^9, 3.863703035828568*^9}, {
   3.8637035036430883`*^9, 3.8637035037600527`*^9}, {3.863703942891737*^9, 
   3.8637039537012815`*^9}, {3.8638793561155577`*^9, 
   3.8638793562315187`*^9}, {3.863890389284317*^9, 3.8638904368171277`*^9}, {
   3.863890551127593*^9, 3.863890597328827*^9}, 3.863890716823636*^9, 
   3.8638909523833485`*^9, {3.8638911861186466`*^9, 3.863891231675086*^9}, 
   3.8638912749332604`*^9, {3.863891409492258*^9, 3.8638914236697264`*^9}, {
   3.8638935298715763`*^9, 3.863893532749655*^9}, {3.8638935699717607`*^9, 
   3.8638935749001856`*^9}, {3.8638936191810327`*^9, 3.863893634085269*^9}, {
   3.863893921803315*^9, 3.86389396796556*^9}, {3.8638940391558075`*^9, 
   3.863894080084726*^9}, {3.8638941355729923`*^9, 3.8638941356839547`*^9}, {
   3.86389427077378*^9, 3.863894270855754*^9}, 3.864132937101755*^9, {
   3.8641329740867853`*^9, 3.864132993387539*^9}, {3.86413303407837*^9, 
   3.864133049119502*^9}, {3.8641330991942964`*^9, 3.8641331354165735`*^9}, {
   3.864133240558546*^9, 3.8641332475682774`*^9}, {3.8641337526108294`*^9, 
   3.8641337885471992`*^9}, {3.8641338280264225`*^9, 
   3.8641338296229057`*^9}, {3.8641417184758177`*^9, 
   3.8641417253026075`*^9}, {3.864141818165553*^9, 3.864141824729431*^9}, {
   3.8641420479491887`*^9, 3.864142073292987*^9}, {3.864142809081861*^9, 
   3.8641428223905535`*^9}, {3.8641428662393637`*^9, 3.864142907413038*^9}, {
   3.8641429688551536`*^9, 3.8641430039408007`*^9}, 3.8641430624478636`*^9},
 CellLabel->"In[92]:=",ExpressionUUID->"3024c605-13d1-4af1-8ddb-6b0488dd66d7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0.6522768012863955`", ",", "0.7596637956931751`", ",", 
   RowBox[{"-", "0.42740271152178844`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8641430640893307`*^9, {3.864143094166597*^9, 3.864143104412281*^9}, 
   3.8642366895364823`*^9},
 CellLabel->
  "Out[102]=",ExpressionUUID->"b16d838e-f9b3-400f-b194-76f021dc08df"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
/7//D1CPmtw=
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{446, 2748, 373, 374, 375, 376, 377, 833, 699, 587,
                 500, 445, 415, 859, 725, 613, 526, 471, 892, 758, 646, 559, 
                378, 834, 700, 588, 921, 787, 501, 902, 768, 946, 656, 934, 
                800, 954}}], 
               PolygonBox[CompressedData["
1:eJwV00WMVncUhvFvBgk0lATXkFDcoTgUCixwHdxhcGkHbbGiC9whSHAbbNAQ
CIQEd1njDoVCkVXx/s7imfM+7/9+yb1zzy2empbye3IikUhCZ39O/JBIHEdX
uVymRGKrw+q4y7djNprqT+na4yM/g24or9+mq4F7fAf66m7xYciNObpmutNy
B3ziZ5Gme8kn4id011XQbZdr4j5PRz/dbT4ceTBX11x3Rk7BZ34Oo3Sv+CSU
QA9dRd0OuRYe8Kn8v7gn7OT9+R15BPJinq6F7qzcEV/i+XkSlvLzfLT8j7zf
nGxuNAvhKEryZWYOrJN7ur6SnC7XxkM+jX+M58AunsrvyiORD/N1LXXn5E74
yi9gjO41n4JS6KWrrNsp18EjPp1/iufAbj6A35N/Q34s0LXSnZc74xu/iLG6
N/wvbJILo7S83PwR6+Xerqsi75Lr4jGfwT/HPWMPH8jvy7FgBbBQ11p3Qe6C
7/wSxun+5VNRBn10VXW75Xp4wvdikO4BT0NBLNK10V2Uu8YSx7vkyVgmX3Y+
Xn4rT8NmuQjKyn2dVZP3yPXxlGdgMdrqL+m6IQlXYu/ws34v/wXP+D4sQTv9
5dhZJOOq7g/dO3k6yqG/rrouQ26A53wm/xLvIfaHD+YP5VFYJ+ePXYrnNLNh
tbzUde3lK7HTWCvnRabYoZg4jOU83SyOE7jmd3+a7/UHzBnmFrMojqE8X2Hm
xBFsiJ2JHcZJpPp9DXOfPsNsaK4yc+GFs1nm13jH2CYXwwH9EPORbjTWywVi
n+TFZnasiW/EdR3kq/GNIHPsLM+MFfJ15xPkD/JMVMAAXU3dfvlX/M0PYqju
MR+DIrGzupR4/vhGkAU3YjdRK+6RN8JLfgjDdE/4WBSN/4muo+567Dyy4mbs
ImrrD/LGeMUPY2W8R9RxdkjfBP8DwV+vwg==
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{339, 2749, 2746, 342, 341, 390, 420, 475, 562, 
                674, 808, 340, 449, 504, 591, 703, 837, 389, 529, 616, 728, 
                862, 419, 474, 561, 673, 807}}], 
               PolygonBox[CompressedData["
1:eJwV0ElLVXEcBuCjYua1EISgjWmFO3NvgwqWQ8sohxaWA1SOOVMttVVaujBz
bCGCEQTikBN9hBzrE6QtGkytbfX8Fw+/932P93I9Z2tabjTHR1EUxyyrsSha
o8PQThutPKSFSdY44roPrlCQEEXN+gSrHFJqXybfsyb9Myf1Ona4bR+3rXBA
iW2JPHujniM/5Q9PbJ9sw3KS3M8JuZZtKvUxz8fkFHmQTLmbrzTpy55nuNO8
sP0L3y//sqe5ryi2vXPfu1fcBs8+uFm85bV90U1liAvhf3TTmaJXn3V/u4/d
nfCu3HPM8NI+7x6jjxT9VPjt1MhbVMijPnfefROyLeYOkCGfdifpkvdolJf8
/XP5L736vl4UfiuX9Xo9W+7hiEe2bduQnCg/IyZXs0m5PuL5GbmTXRrCe7H9
5Jq+wCXbA32LZP0uG5SF92lLlzv4Qr1t0faDq+E9cNF2X9/kuH6HdW7Zh20L
fKfQNkeu/Z6+QZJexUduhndrm+cb/wFvFV5n
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1Hl813McwPGtLR1G6dChdFiZtrGkaEWlVaYt29CJmEpUm6tDjnKEovug
HEWXDt2OXJ1CF3JFp7MoVMh9PN8Pfzz3+n7ev/2+v+/38/s+fg2KS4tKEhMS
Eor8iZ7gzyadSD86kWr2lS7lAZpR02ynzmYYPShDOfO3dBI3cAnnkUR5r72t
k+lPLs1Jpmx8dryfCv7vHZ3CjVxKC2qZf6pzuIOecU4qmm/WqdxEZ86ntvln
Opfh9Ipzc6L5Fp3GAPK4gNPMd+k87uSqODcp5lv1MQaSTyOzr3UZo2hJHbPd
Op+74r6tf9Y1XE269SF9kUfjOjjJbJs+ziCyrI/oq3ShsfU3upyLHP+jD8b9
Of5V19PecRLZjuvqnvje9Dm9UP+Oc+ndsd/6S+yprtWLtQyFXGOdoYfje9OX
tI3+q5fp2LhP/T32WDdqjiaT4vhk3a7TaeX4Ty2hqeOj+lqchzOtD+gKHoq9
t/5NN8T7ON16ry7gHnqTafa9vsy42Dcqmb2rMyilgDSzg7qSh2lNPbN9upAR
XBvXSmXz9/QJbqYw9ov65vt1ESO5Lj6LU8zf1ye5haL4TuI8VPHaDn2KW7k8
9i7eE69RlWpU51RqUJNa8ZzGsxfPT3x/cf9xzXEdNKAhZ5Aa5/E5H+jT3MYV
tI3nMc7vtQ91JrdzJe3iHOaf62LupTieq7gW8490FoPpyllm3+oqRsfzEZ9v
9oU+z31cz9lmP+hqxsd3Gvdl9rE+wxDOtT6mr9ONJtbf6QuMoX3cl9mXuoT7
aWF9XNfRh3Osf9RX4j7jB4oJkq1/aJ6+qR20bOL/v2Npsb/6iXbUZ+M50L80
X4dqM/1Jc/WN2Kf4/aOA7taPkEPf2JM4f1w/6WSQGXsQ10cWTeOz4p75D/w+
jyU=
               "]]}, Annotation[#, "Charting`Private`Tag$44902#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1nf8j1UYxvGvlUiRiIYyQlZkpsiWTVL23ptKRcjWTsPee++Zka0oO3sW
SkOFSqH0vl/98Xnd13Wd5/n+zvM89znnl61V97rdkiQSiR5JE4nniNzJEomp
9OM4zk9HM9lRvgPuxlBZJdlGujb+4jejHh6VT5MVxgl+BobhebyAtakTifpq
HtdNd00RnORnYjgqyzfJ6uBvfgsaIK98hqwoTvGz0Fx2jO+I9HhT9oxsM/0s
rvNb0V32A98b2dFQlk82ky6G0/xstJAd5zvhHrwlqyLbQtfFDX4besh+5Psg
BxrJ8stm0cVxhu/P/xVzwhy+JX+C7owMeFtWVbY13jtuxvPzSfAhv53vSf9E
L1ZfVyer92E1HuE/UtNgAt3Y9QXo2XQJnOXf4P+O58BcvhV/ku6CjHhHVk22
ja6Hf/gdeFH2M98XOdFE9phsDv0EvuEH8NfjOTCPb82forviXrwrqy7bTj+P
f/nP8ZLsEt8PU+j7kYv+WL0TE+mmritIz6VL4lt+IH8j5oz5fBv+NN0NmfCe
rIZsB/0CbvFf4GXZL3x/5EYzWSHZPPpJnOMXoK3sDN8dmfG+rKbsc7o+EvEt
+aT4iN5pvBf9K/0GptIP4FG6ubHH6fn0UzjPL8QHqCX/QtYASbAr+g6F5Qv4
UrjAL8II1JbvjJ5FUnwpe0X2Gz0AedBSVkS2kC6N7/hB/M34DtE/fDv+bNL/
1/kE+t7opXhO9XaMoT90XR16V/Q0xtEZkCx6KCqW42N+tpoN6/CV+15VL8uX
qAPVaeqDWIO8/CfqXViJSdEz0cPYgFbuL6ouki9Un1ZHq3fje2OD1X/iG2MG
/RCWyNur38h6YiKdKfqJ/kBNhbGxRlz3LP1lrBEkj57lk+MTerfx1+gr9CDk
Q2tZMdliugwu8kvRQfYt/yIeiJ6V1Y3njzWCFNgTvYniMUe+LH7gl6Gj7Bz/
Eh6MdyJ7TrY7eh63YW/0IkrIl/Ll8CO/HCPjO+IJY8vk5bHOfvqTbAVGxR5s
bE/0OVJiX7wnlIxvx1fAz/xKjI59Wb43eha3Y388J56Ur+Ar4hK/Cp1k5/mX
kQVjYk+X7aNbIBUOxHPiqfjWfCX8wq9GZ9kFvhcewlhZfdn+6GGkjvXNp8BI
+qDx3vRVejDyo5OslGwVXRm/8kP4f6OXsYbvwn9Hv4JJdGY8TI9QU2McPVfN
ETrOF/WArBXG0xlxR6wd9bZ4DxjFz1GzYz2+dl8f9Xf5UnWIOl3Ngk9RgB+p
po25YnLsW2pOfIbO7i8de7l8kfpMvE81faxtY0PVW9HLmBnzj9+Vd401IXsV
WWPNxlwxPuZuvCF9MHoYaWLN8Ckxmj5k/HX6D3ooHkMX2dOxTukquBxnNCag
UTynrA3uxOH4+ygTc+Gr4gq/DhMR/0iUNbZWXg1X+fWYFGdwnJtxpsX5EudA
7M0xrn97xZ4We0isxfjmKBd7i9+ojt/5DZiMxvJDsra4C0dkfWV/0sNQEH1k
5eM70TWiz+h74rnlw9RErB+MMDZLzRpzju8Sz6BelL+GbJgiayI7TLdDWhyN
94gKsX/xNfEnvxFTYz7oh/5xBsdZGedX7Mmxl6Fi/C331MI1fhOmoan8iKw9
0uFY/I7sGj0chTCKT4cp9AI1FzZG/7n2PybIQsY=
               "]]}, Annotation[#, "Charting`Private`Tag$44902#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1GW4FGUYBuClS7qkSxpJpZFupEu6Q6W7pBUFEbALg+7u7m6QRrpLkJD0
/n7c1/s878zu7NmdOZnadKvbNUokEskaNRLZGC0SaREjErkTPRKZQCUS88B+
iP0bLNDbk59N9i3t7soTqUwSHtpvZgtb2cZ2Wjn3nuOTqEJS/rXfQWvH7utf
U5VkPLL/xD4+C/UOFGCnfRu7f+RvqEZyHtsPtU/AIr0jBdll39bugfwt1UkR
rmWXmW3yIJ44b5iekMV6Jwqx276d3UP5O2qQMlzbLgvb5cE8dd5wPRFL9M7M
l0txXn6H3+S8HJI/Y5lcgWvyHq9vL/8rf88auRrvyzPNIhzllL7dbMCb4W8y
3+IwO/SNZi3OMkRfYpbjBFfCdcwmXOA/1xxhJuYgSx1fH67JGT7UF5jvcTy8
JnyfZmPelX8384Vry5vNOoyRl5sVuS7vdY0O8iP5B2oySy/KaTlV+F7lrOyU
P+GZ14zUk7BM/4jC/KHn54j8Ofuc11F/LP9ILVKH788uG7vkoTx33ig9Kcv1
jynCfvtOdk/kn6hNGl7Yj7ZPxgq9C0U5YN/Z7qn8M3VIy0v7g3wYvlP9F+qS
jlf2hzjMEY5yjI+c+8zxX6lHel7b/8XHjj3XJ1OfDET41D45K+WuFOO487vY
vQj3Fw3ISJRwj9mnYJXcjeKccH5Xu5fh96MhmYjKGPuUrJa7U4KTzu9m9yp8
/zQic/gt7bKzWx5GtPCbhHuSNXIPSvKnXiDcu/IXnPJ+3fXX4RiNyRJ+P7sc
7JGHEz2cr6dirdyThXJpLsqlmCIX5Ji8xazLWHmFWYkb8mnX6yFHmKKvNavz
gTzbLBZeH+53fYfZkL/DMxXuCTNnuN/Yq28ya3OOEfpSszwnuRrudbNp+HzE
0MeaqcPzzjp9g1mTXvIiswyX5N3h84TnTJ5qFuIveatZj3HySrMyN+Uz/qae
chSm6k2YIxcPz72cNdyfci72ySOJyTg9Devl3pTmrPfqZReVaXpTshGLL+3S
skHuQxnOOb+3XTSm683ITmz+dqyPfXRm6M3JQRzOO3aBi1yib/iOmOlYC3IS
l8uO9bOPySy9JbmIx3i7dGyU+1KWK87vbxeL2XorcodnUM/NfnkUb/CVnp5N
cj/KMU1/J/x/C38vV73fAD02c/TWzJVLhN9dzhOeWTkPB+TRxGeCnoHNcn8W
y2W5LJdnuvwuJ+RtZn3Gy6vMKpzilr7PbBbuC675LAPNOOFazHV8nVmD07TR
55klw/0S7lt9p9mI87ytTw6Tg+H/BwmYqGdkizyAClx3rUF2cZmntyUvCbnh
2E1ucZs73OUe9xnsNfGY79x25CMRk+wysVUeSEVm6IXDMxN+D1bLVbkt7zeb
h++Mf7zv/zJ7KH0=
               "]]}, Annotation[#, "Charting`Private`Tag$44902#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1HfcjmUYxvEH8dpEZnZ2pWHvvRVZiTRkley9995CVtGiFIooRHsQhRaV
UXb2Hg19zz9+n+P4nff1vO/z3Pd13QU79GzeI1kikViTPJE4mjKR+DMpkWiK
X1IlEkNQCTlwzLXD5s2wlw9FZeREytSJRB/zm/pLaI/j1h8xewT7+DBUQSFr
Z5rlwCaeC6nM+vK/9ZfxBE74/FGz5viVD0dV3GXtLLOc2MxzI8msH/9HX4r6
/H1eBU/y0nyZXhwd9d3yW/OW+qd6Q/TS98vZ8qT/fUxvgf78N2vbyq/5eDmC
V5fv8OGyjOwqf5LTZDXXC8vZfLDMJTvI7+Uk+ZHrD8vNfLSsLbvLX+WdrqXW
++v/xr3Qv9WX6Q309XpVPMXL8Ff0EtjBW/HP9Eb4y284Llvid9dGxndGEWvm
mOXGFp4HacwG8P/0V/A0Tvn8CbNW2M9HoQby4rRrJ81b4wAfjZrIhzOuncU5
nMcFXMQlXMZfPvMoDlo7BrWQH2l9h4Hmt/RX0QFXrD9l1gaH+FjURlFrX4h7
ha28ANKZDeIJvMafQVmzV3lJ7ORX/b3T+mP4g4+L32TNKl4WdXgxPlfPg495
03hecQ0FeXo+WE8We0vfIV83b6hv0EfG85fd5F45U3Z0vZx8jQ+Vd8tOco+c
Ir9zvbX8nI+VjWVveUDOkdd87zN6Wwzgf1rfTn4T+zHuvb5aL4e6vDifp+fF
J7wZ3xLXUIhn4EP05HiDd0J5s9f5PfieX4/nqLfDYT4B9VDCuvlm+fBpnEdk
NBvKU2A574wbsQf44zjCJ8a5jHOBm7E3zNvjKJ8Uezv2Jv6OPWP+BI7xyXFv
45kjk/8zzPw2rOBd8E/sr3gWOM6noFE8R2S2frh5SrzJu+Lf2ItxfnCCT0Xj
uGe4Pc62eSq8xZ/Ff7Fv+dM4yaehCUpa+6JZfnwW9wVZzEbyJKzkz+GWz1+J
8x9nkk/HQ7jb2gVmBfB5/D1kNRvFU+Nt3g0VzN7g92IXT8Q+1p/BKX1GnCFr
1vDyeJjfwxfGfsUX8b9wh9longbvxD3iH+jV8TyvyJfrpdBZ/0HuNn9U/0Jv
gj76wdj75tdkRww0O80fl9v4hHi/xzmV7/IRsoJ8Vv4sp8umrt8rF/EhslD8
HrlLTpZfuv6I3MrHyHqyR7yHY3+6lk0fo6eN56jvlKviOeof6jXQnVfiK/T7
sIcnj30dZw9n9FlxNuK7ILu1Y83TYTXvgRSxj+N+4Kw+O74XSiGH9ePM02MN
74nKZm/y+/EDvy32ut4F5/Q5qGPNe7wimsff4ov1u/AVb84/1uujp/57fH/z
nPp4fZDMEPsx3htyYtzn2JNyIx8la8YzlfvkLNnL9SryLT5MPhDfSf4op0a6
3ibuOx8nH5J95aE4O3EmZVec19ubb9df0Ovqa/VKaMHv40v0wviat+Cf6A3i
nvBcfIKeEe/FOeCb9FrozavylfqD+ImnivMdewcX9Lloifute8msCL7hDyC3
2USeCWt5HyTFeefP4aI+D61ivbUvmxXFNv4g7jSbxDNjHe+L1HH+eTdc0ufH
exqlkcf6yea3433eD2nivMe9x2X9xTg/KIO81k8xz4L1vD/Sxnk27252RV8Q
zwFlkc98qnlWbOADkA7JzHuYXdUX4jGUQ37zaeZ34AM+EOljz5v3NLumL0I9
vo5Xjvui/yJnyLZxH+RSXgzbeXkUMJvOs+FDPggZ4mzEvjK7ri9Gu3hXISMy
IXO8T+OdGO+1eP/EuY0z4XO9fe6GviTeG/HuQUHzGebZsZEPRjWzt3lp/By/
lX8V7zj00/+IfSizu/Y/nDlXnw==
               "]]}, Annotation[#, "Charting`Private`Tag$44902#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1GW4FWUYBdBDKCmNlHRLd4uggCIGJSFIN4IdKCoGKAYWoCLS3SgKgpLS
IS3dCEiXSOl6f6zn3d8+M/fMnZnv5O/Yt0mfJIlEokjSROKrlIlEqdSJxM+p
EolWZOKQbiUP6bdYv0gpbuqGUlo/37o1mTmsW8XD+q3WL1GaW7phlNEvsH6K
LBzRPa07IQ/mAVbrGuq2yS9Thtu6nrrL8jAeZ7iurO4XuQ1Z4/qsb5ujOerz
dtYn5Y94kAHWaZghr/H5I/J2+RU+lbNTVn7dvINJ8gizMP85vpd5RTfZHG4O
NfMylyesB5oZ4u9HF9dh3hv3lK+dX85cqB9nto3rMrMyi7vjfsX3mGP4Wi7A
Mee1N0/pPuYL+R7qye+YaZkpr3VcI3mH/CrleMP6TibLCXrLV+Nv05hvnFNe
t0h+mmwc13XQ/S1/Qn3W6R7V7ZRfozxJ+FZfQf+r3I7s/KVbzwi+YyTfM4rR
jGEs46jo3N+c054cnNBt4DH9n9b9qEBSxusr6RfLHcjJSd1GHtfviudGRZIx
QV9Zv0TuSC5O6TrqTsfzpgGbdE/odsf9Yoicg0pyfzMFU+TkPCP/E/eNJgyy
zsgP8kR/p4q8VO4UzyqeaTyreI/NBGPjXLNg3F/HdzLP6CaZQ8wvzdzM4SHr
d827mB7viPX3ZjF+4g/nNzb3xP9q9jc/M3Mym8rWb5opmRqsvzOLxLst9zGv
xTOMPSXno6n8gZmJH+O6fEdVeZncmdyxV6yTME4+7fPO8tn4bh5ms66Jbm98
P1W4k766f2M/0Sz2kOOq6ZbLXcjDGd0WplDdZyt0XcnLWd1WpjKN6cxgJrOY
zRxqOO93x3cjH+d025hLTZ+t1HUnP+d122mq32f9FlVJwQ/6WvpVcg8KcEG3
g2b6/dZvU42U/Ki/T79a7klBLuq66M7Jn9OQnbrmugPyAKqTimd11+MZ0Zx5
jqutWyP3olDsa+ukjJcv+byrfD5+E/hKzsMj8ntmungP5FFm8dhPjn/SPBjv
qvlOXJOZixrxv5upmBasR5pFmUdq6+fMG+YUc6Q53Mwf7z5PWn9oZo7fojjH
eoxZgvnxvvru+821sY/N3vHbYmajcPymmMmYIF92bDf5QuwHGvG+dfrYF/Iu
n7eQD8X+oGY8h7jG2CdyGp6Xb8Z+oQU/O6eObl3sYYpwRddddzHuHY+yW9dS
dzjuIbVIy3x9Xf362DcU5apuD630R+IauY+7WKB/QL8h3nuK8Y9uL631R60H
Upt0/KJ/UL8x3gOKc023j6f0x6wHcT/pWaivp98Uz4V76WednImxp81CsYdj
zzm2h3lJP5TH2K9rozse+506ZGCRvn78tsQ9pATXdQf4ld9YzBKWsozlrKCB
8zY7/gVKckN3kLb6v+L9oC4Z4xjdrXg3aclg6yzxnshjzZIsiH3s/P8BJr4t
Rg==
               "]]}, 
             Annotation[#, "Charting`Private`Tag$44902#5"]& ]}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"Feedforward solution\"", TraditionalForm], 
         PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1a\"", "\"u1a\"", "\"x1a\"", "\"\[Theta]dot1a\"", 
           "\"xdot1a\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
PcKz1/vJ9+mF0A6XqS4g5ibz3qGDTdR31d07XsoP+V8POZ+v4WHvuOvJ4NRi
Qyawk1wa7BdMhXHB5012kH8/VfnFsa7PHcA+5bGK4C82wR0Qaak3ocCyY8/V
w9g8IJKTIOJ2l1yvOog73Pi/f79/pF/R2IT8/iw9ElPEYOH+Uty3FTbdCzqB
rPrTun7QCXanHp4Tb2QTmTrFXb+TxaFRSdjTE3uYwP7pgo8lnfzQerT3zr9e
HqB87hp2XioO+annUlm6TMB3/2aEwmNyffdX3ZxCzifRYz7GJ0y6gNYHoXM3
yec5zXZuXOpFhcBL/qkO+bzc0l503VSgwKff125LIp9Pu+Dhhs/24tCm2csr
k3w+1g+oEQqlnSBwOvmzLvn9uvSi43rUWSrkl1Xe9oscDxxTjxg/o1AgW/zz
3jIOD4x2Lu+J1BKH6W99Z/aS39/fpkzRhD9dAPyznPtFjkfeYFIj8S4VnpZc
8fwtef+8XnIuH9OnwKAFnRZ+kzxQrhj+i35DHDolnzdeQt6v/O4mtTu3OkHD
5+prL9rJ9Xhyzqt/EV2gcoEJnwK5ns6PeXun1Y8KiWhu0Q7y81zeUPXKbSsF
GnRrqzqR63WLJR5mNa7i0K0t6WUq+Xmmd+8b+TK/C+ikpS7vJn9e02StotVF
8nmGNG/8Sl4P6kWVZB7Q9vUuBufW+ctESlEgJyxlxzLy951hb7d/cUAcTj2J
SdxOXp8OXavnRDgVtqZ8v5xI3g9fRVloYkWB4wenmFMj5HpjV4bebLg4/HfG
yHseeT+QD/3g/Ir1bVUn9qF6feM7L3X04vMQr1kHOjRFDeF+1FKzO6/8/cdx
P+rOUXrUglcTuB/1W/a7pqotB/ejHlfxlPOuTuB+1NH40Mmy4+O4H8V9cdRt
JGQY96OyMk7w7hf3434UQ1nqyX39LtyPenO1bVfUqTrcj3rRIOjwvTcf+9DF
oW4Voq4EPg9RboXi2JMFzfg8xFa1S9vItSmBfGioy27F8KFRAvnQxzPNngqL
JvF5iGrymrnTv/47D3FNmJrg1R4uPg9R3fiI1fsPXHweosi7BoGKzBkC+dDK
S61uevcmcT+qyKVx/LUwG/ejNN5e9u6eHcL9qOEhvhrN0324H6Uc+0J/nmk7
7keJXfZV2vC5Evejfhzd1HQ2KAX3oy63y32Ctt+xD12vklqnubwe+9ChfeJ7
Wac6sA890JXYatPSg31o3JGChXu+9WEfyndrvxIjmIF96FX/UxFWcgPYh1py
+Bbm7WRgH/qryN6Am0jHPpRxO4R3N6YL+9BrI9rpxPZG7EONN9hvtzQvxj50
eaZ3WYZ/Nvahc/UhuvTUd9iHco7tNV09lIN96D+XrSm39XOxDzVY3DU/nPkB
+9DMg70BgckfsQ89G6lzdsrzE/ahR5+ObXNPLMA+tI5u/+RbIYF96OLVUUpP
FhVjHzqhcsh1/qkB3I9K12xV8aoaBciHcpW/mH/7ygbIh0613KW5qv53XqKi
YcMW2RUcgHwoy0wx1yKEjftTzl11I4v7RnH/aRdP7XJODJtAPlRRxkNpbsU0
Pq9w64Yat0Wrufi8wp3V3lFJYnP4vMKzFlf9beizBDqvkK81XiB52zSBvKhQ
+pmIwdoJ3HMKtPpn/2KoGftNv7t5a8L7urDfhN8/vLztRsd+8875hfpN5f3Y
b265O641JjiA/SZ37c4xdhMD+02FX5M5Amv7sd9cdXQ6/X1lD/abzeMX+7OW
tmO/6aZ989qjkWrsN2MZ5i43RLOx35S3uCqhtfAd9pvC/Tquy68VYb8Ji660
/1+/DvlNxiaz48mvRwDym/13no5NKLMB8pt8d3LNumcm8PmH6a+ntmw05ADk
N5XXCswsFp/Afan0/nKDvy/GcN+p988fF4rBOIH8ZoXf2Z2r10zh8wel5LTt
mgNn8fmDxfTQzSIic/j8QX1D+oIEOy6Bzh+sr9QVucGdJpDntNjwQmVrNgf3
mtQFdWouhTViX/mgh48nVdeJfaXtkN6qsoxe7Cv9ntG/mpv1Y195fJ+Urvwf
BvaVVRkKUdbCA9hXBsprRqcX9GNf+Z2h+6bway/2lZ8lzbfeOtaJfeUwtNCm
vKvDvtKIEmzQUJWFfaWa2hnFj6XZ2Fdeko66n6JUhPtPVsa7NBh3mdhbrtO2
LF2UMwaQt6yqGZMQ3zsBkLd8ow0v3jbj4PMN6xy8hNc2TADkLaHOGoHdf8cB
8pbWu/k7qtsn8HmCN68LOZXxz+DzBCv7SiOkorkE8pabfzUXrh7l4vMF4/Sd
HdZazhLIQ2pNy27aOdCNPWScuty1Xvk+7CHlVI/PaGkysIe02b/6QhA5fiIP
2fLe41X9Qwb2kD2z17bfcevDHtIz9I98TlE39pCM6nXfbuxpwR4y0lcmVbq5
DHvIkUWSfTJ62dhD2kdN9QeWFmEPabppk1CsUB/uP/kx3aU3pw4D5CFd/r4/
19k8DpCH3JPr+djuzwQ+n9CqQL9quSUHIA/ZJ39Rt0R3Avej9BxXHXUW+q/f
1Dh5svvZkzECecjYlwe9OPGT+HzAnUPjSvKbZ/H5gEbb5uvNzHDx+YAKNh+v
dIZwCXQ+4LbB4Kh8qxkC+Ujjni8+H+UmcY/Jbp1ew3zrBuwV1/+wfSCn14m9
YsrpJicf/V7sFbOdXEfGxfuxVxRcJ/2y7x0De8VLFzU3JS4ewF7RYamzZdK/
fuwVpSX5GWwNOvaK9yKP+Eb/68ReceV24uVNn3rsFcMSs588PJyPvWK5yq1c
+rNs7BWdAyqvTQkW4b7Tu+lPSke8BrFf/KfoXuyhOwaQX8zsGGboCU0A5BdN
Dtu2OOly8PmDynTjJwa8CYD8YoV8vtyHfWyA/KK7mas4TWeCQH6xU/bU1MiD
aXze39buDsU9x7kE8osLn+eXpvDP4fP/Rq9Rzy1PmiWQLzSTvfRl8Gw39oVZ
R6olfv2iY19YXdhg2CjAwL4wWUTpsQl5f5EvDInsW1Wcz8C+kHnB2mJvZR/2
hdN3/HvrjXqwL7xpbFV+NKcV+8L751pvJLAqsC9UiLhfKb4+G/vCjc+a8xuS
irAvXOqXtz7pOhsgXxhZazbv4RIOQL5QVZ1V46HJwX5wU6YeQW+cJZAfzC1P
8m6QmCNaz2leUyQEoDZr5oipApdA/q+sYMLPLKIf+7/jl7xEb48ysP8rnTjo
cJVNfm9e24hOCEvCLXSrQ5WX+rEH1JntXeXKygKLEk8amps1gFDIWc53bQL7
QO9Y3pISaw5APjC68/a37vQJ7AF96dVRv4q5BPKAbUXDr041cAnk+UQXaf4d
O8nAni+36q9g5OoBIH9Dr0n+Ow0uFpRO33SOgX2fpbRp++rhIuz7Yt/4n73o
Qce9px/Ruypk5IYB8n11s+/CrTPHAfJ9PYH0pqGiCXz+Xv+6w1G3yOtHvm9W
Qtva9tgE7kU5v/+6hU/jv15TqMBioZ+6YwTyfUmvFHc9sZnE59916gWek/k7
g8+/mzC5UVs2wsXn3/l5qOYVPuXi8+/ONiw6ZxwwQ2DvN5ylsdtiEveXjO71
eB3Ir8f+Lq6a3ug73YH93Ye5dLvTtF7s7ybFhw+uGejD/i4syd9BLpmB/Z3T
KtWTr5cNYH8XUXXdSViOgf1dQ9fvf9rn6NjfRY6GWJkbd2F/t3L/5C0h+wbs
71oLWpjjtwuxv/t245NbbmQ29ner73Q6m9MJ3HO67ud/5eTIAPZ4I31bTiXM
HwPI453WXUv5RGcD5PFW+P0yTtPi4PP1+tc17P8nwQHI4+llbS6fd44NkMd7
6md+8yCLTSCP17n/p5KGzTQ+z+7Xm1PGFbu5BPJ4oup9p6KF5/D5ds9szdb4
fJ0lkJf7F3nYqWBDN/Zyjr8+PHydQMde7r6HnDiT0Y+93Ki+A8dhwQD2ckTL
50HqLwb2coGHbDP8Z/uwl1tpbHkyNKQHe7lLFc2ej53asJdbZRwS3T5Qhb3c
7fs7bmouycZebt/DqwHXQoqwl6tM5kZ5WbIB8nIdms03JkU5AHk5CvMQ5xnk
YA+nWfORdTVrlkAeLs1O13KCXL+X0XNt578RgBV28dcOkfcLeba2+VkanRf7
sWf7XCioGN7DwJ4tsSTSRvYvOb7YzSVc+EeDdQoC35fG9mPfdr5P2U+qPQvM
PR+X2Pi7HqRkWETtJr9vyLv1PFrV00nO78i7nfE94fKteAL7tsq4hfPUM7gE
8m0PLv1b+7yXSyCfxrllWZ9hzMA+7f7nRxr1qwZA42Fzv30FNJjU/ZjYcZOB
vZqhBtWssbkIKB2+kpX+vQnMT9mia8OYwH6tvbEobu4gB3u1d4VXpMQpc8TT
pg/Lf94XgCZml6vXXeESyKOJTmxQ0/nOALyvbUK5rjQ4HH3p9OaFA9inVXwx
HLqyJPc/n7ZvuCV7PwcgnzYz2dbMG5wAyKcpGeWcd/bmEpdUmBUnRQXgpKzn
vkpyfZJiFLlLVJncD5f/+JNFfp/1hS5UhmfQ4LdtP1wEXjLAgvkOBjZ5LSDX
2HVlwVoO9mn6zSyJWEUO9mjhCR/H88j5Q0SmWsdWjAbbFnwu43LJ/fbp585r
QmkwZwfD9lw/A/uzPaYpjK225O/7nzdbRHks3FXLJRIWhhc9MRCAA4PZj8/8
IMd338PaeSY0+IW193chef+RL4tqDtp9kr8Y+7J0+eJ1wRvpuBcVYXkw+nPT
EEC+zEfy5zKZmHGAfNky1/NblHIn8PlxW9W6ayJsOAD5siPF1zxUzk/g3lSO
Sa3yDaP/ek9xxRa07UvHCOTLXjNd4ijbJvH5bbKKO/8a0mfw+W10tfkP6ANc
fH7bGtcSYop8/9D5bYVjL7eoxM4QyJvRlDOX1LlO4n5TzJondizneuy/3iub
fRt504H9l75qeY/PZA/2X5JtZQV19X3Yf6XQtBtVHjGw/5Iv2LvmjewA9l9X
1lKuRisxsP9aPXLRo+I2HfuvEsFISqJHF/ZfzVss99r9asD+yzp4SRP1QBH2
X/YdPsbK97Ox/7p3f/XB+b8J3IOKylmyovvlAPZg7QXfj2wdGgXIg5W2+oyz
6tgAeTBrzbi0j+T6BXkweRvhA8WLOQB5MHnfL+wD3myAPJjx8DwV2a9sAnkw
1mv3eaVa0/g8tpGt3hofVbkE8mB6xj2qTaJz+Hw2+oP8yri6WQJ5LdqYdXSJ
cDf2Wsc0EwTzA+nYay18VBIl1NKPvdaZ87PvbecPYK+1N1N4IvM3A3utg/JX
h2YX9mOv9YG6j2Lxpgd7rZW64QvvFbdhr7X431t2sXs19lrPiuylGqjZ2Gvd
yIlc8+tWEfZaR6skfnbvZgPktRaMUiSXUzgAea38bnO2rB4He6ygMD3PkbhZ
Anksv1TVGjB/jiiSnzK6lioAn1vGNG85yCWQp1phtkur4EQ/9lSSn5rW321l
YE/1NFDLpp8yAFa/rzirzKVBuaTr7ktf92NfpffMM3asPguMKu4cjXxQDybj
/IIszSawt0rdITPTZc4ByFuNZEKD1PIJ7KvYnHqbiWQugXyVhnTDnvhBLoF8
1A+3Bq9lexjYR33/8GNB98oBkLOnudbmIw1mjg4b5d5nYC9F05TtUakpAm87
HrdbBDaB8bzLhqIdE9hP9e6PY385xMFeylGooFfvL5eIlZ4W23lLAHJ8Cvbr
+HMJ5KEuCelkFX0m56/MU7Y/nGkw1NHkUKTkAPZRvzdUax3fkYd91LTshl/a
BhyAfNSN72fsLScmAPJRU4nE2hRXLhEaFV3lzS8Ae48kykzwuMSW3nz72g00
6H2F7ai6hLzf45zVT1/S4GWbDmlqNgM8iAy4LHCtBbSdFmJareRgH9Umr0N8
UuFgD9XiGTMqvGCOePh26qiCMA0qaTpfcptkgDlT5cKtQTRo8qxhceIQA/sn
dTHBxNfkeIm8k61MyPl1v7jERw+tLzlQAEYeaE+UreYSpTK+dv5G5OcXN1M+
Qq7HkW9S6qamf50qwr6JM/6kXMiKA5BvGq8K817L4RJhge78Qw7k+PT29apD
5Oe7Zvv+jNBoKzhdbyyyjVx/fLMb+v1mjLz+1lvaTfPmCEOZ+QmOq2iwPqDx
jSh5v5Ff0pBy/FxMrv9ifQw6r2RTYHeyScw6cr7K7NFPzPtLhTGhCmM7Bslx
foPWaVt/cv1lRDhPTTOwX7p/yX2HP3l9yC+t8Ssdq/rAJYa1HnzvUxGA3bym
8F3tXKLLqCJOeg85n0bpxJ8hPy/ySn/fm28rO0DuDxZM9jU/oMDCO3WhBwTn
CPnGw++eutPghHWBhpvYAPZLMTZFTX/Y78B5jU3Z9gNtQJTdQ/tlwgE25aDc
iCYAHw3vuKxG3p/FWedWAFUaXLPoZGwVOZ5vGYptkvxNgcdWfLvBFJ8jkEcq
//RAxoGcb9/0bpYdPkSDRQ9jsgvI7wPyRkEe09f4xIqxN6K7/rO/M4+Oe1eT
VdLNRz4MAeyNjhTtaAgZB8gbXS+ntb14O4HPS1vuQDs1Qr4fyBvpHuJs8HWf
wL2ssejGTa8s/+tV3ZHxIc4IjBHIG72ciV4Vt3YSn1fmX+LwNavxv/PK4m5W
/iX6uPi8si99k7S+bC4+r0w3k3VWOHWGQP5Iu4DGT/OexP2pO7tvAtm99dgD
RcT335m71/GfB1q52IXN6MEeyNDZmx5Z0Yc9UPfyP50yDxjYA3Ftg7pCVgxg
DxSX5DSao87AHqhZ6Orb0Qd07IFcz9loJN3pwh5o4FnYdiVKI/ZAWU4dxkNV
RdgD5S6WtWbdycYe6IBfxjzHHwTuWWWEWY3yBQ5gHxQpxI070T4KkA+qOP9n
+GQ5GyAfJOHzO3alBue/89D+lb+6vpR8P/7ng06XdY02BrAB8kHztp4vcn3D
JpAPSo47vn1IaRqfP7b2uUvH1Y1cAvmgo47nT5ST8wc6j2z/QYdE4bZZAvmd
lsPX9qtPdWG/k7lXUnyDNx37nYKVzwRmavux39lx7f5yNZEB7HckljSa2dcz
sN+xywvTCVnWj/1O5AJRi4jCHux3jgmHu+YOtWG/c8ou5OCBrGrsd9YsL92n
KJGN/U4aU8eM7VuE/Y5Z1Iq8yW1sgPzOIf7XtvP/TgDkdwJG/SNU9nGwz8mY
12l25cEsgXyOXFHsRQ1yfaG1W2avWrIAPLLl+/iEJZdAvkbw+gOjCJt+7GvS
hYtYnY0M7GtkxJOVNgmS6/MTmgfFZ2hwMP557UhOP/Y2PEG3Gydrs8Agy/5E
mXs90FQtvqxtNIH9TfoKsdMEOX8hf6OlVmM9VjOBvc2mebfAkjgugbxNoNr1
fpchLoG8TIbsnRgNbQb2MgfMGS/3kONHSl48z+EDOb+ORvytCWdgP9OfFBll
V14E3BUUORudmoCOw/MAneYJ7GkCApJkeOT8jvxM2csbripz5Hi2dcm8cV8B
6LZ3co3cXS6BfExqZOb2Y3kMULJ2Q0CNEw0+Sd1+VGHRAPYyT2NDN100+Ii9
zEzC6bCj+uR+9X9e5sUDenjL9ARAXkZ3Af18gCOXiNM/b3qPR4Fm78JON//j
EpNvK13y1tHgkeK6feXSA2CB08f9r9No0Gixl8SlXAawaFwc3GjbAgbMryhR
ZDnYy0TWCgqmqnOwj0k8/iznHzm/2PmIXRAVpMElT0K+3GEzwGDJaL/OXRqs
qdASfjTKwB4mBbgK6pHjJfIvve2ttJASLlGylra3WFsARnnvuFpJ7o9CeyPO
OxqQv+9VZ+otcn5B3mWYJyvCHi/C3qW85cncb3K+Qt6lcOejzLvjXMKbt3XT
5HEajJLXswxaOgC0E/V9WqpbQUeDDmN2FwfULPhq/mmIAj+VqYrtE5ojqL0r
3hyQo8EI/XuBe6gD2LMkxT/7AHU4IG2L3IlbbyhQZpFDVjw531x5a5sZP0eF
C4ii5tE+BkhJ+Bt60o8Gl1Jy5R+S+0HkWWK6ZnQKDnMA8ix7F9BePyTH77kh
R322kgAcHR+autHFJV7IdL3mAhpUDC3oVSQ/L/IrtaaSt93I+VCy6JdjfygF
usoGzH4WIK/XZFnbazcaPDzoctVWYgB7lpv+jx/FC70Hm70+/1D72QYsPv3L
MjLmgDO+i42tJATggolP4mFTXKLV54aywhYa/PDtLa1i+f/dHzfblZXk/vn0
4ukT5PNEPqV7075kK3I+vZS1R6nWlAb3ZfS2G5H7U+RPCu8nKqkJFWN/EmDv
em8J+XytBz77itjT4IWXfqZ55O9nubta1tEp8Ihx8fpSkTniS2SZQ9xzCvx8
V+GsotgckdJqsVvjdju5bt4uP2RBrj+yRCq+a5Hrk+b1D53Ivw95EvbETzcX
Mw5QUvA8yxdIvs8rPhfu4JsjnGTSjIcVyfGCGTHiQz5vKwFZu+0lFMh1WWI6
Sn6eqNyfwff/v/+f3aGBOfL6+PY7H4g/QIMza7SilpL3G3kRULli4UryeQX/
cj/mnEuBrdPNG8LIn48tW9jfwd8Bqm121G+x5oBlvh+DVXVp8LZRkeU98uen
jqw6UxlNgQ/W7GLlk+8T8iDFPi+1V3ZmA5NeKwlbdRp8F77I8SM5f8prfbcW
qqfAfPmjLy3J9yn46W21bdwOkD5Yf9CSvN8MmeXiopY0uL6KqSdDjj/If3h3
2q2vXFgMMn75BUl3twF0npi77Z7qrxcE8PlipnKvP18n16P/v/PG/vef/wfR
EZw0
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{444, 2692, 371, 372, 373, 374, 375, 831, 697, 585,
                 498, 443, 413, 857, 723, 611, 524, 469, 890, 756, 644, 557, 
                376, 832, 698, 586, 919, 785, 499, 900, 766, 944, 654, 932, 
                798, 952}}], 
               PolygonBox[CompressedData["
1:eJwl03eMz3ccx/GfIyRHYvTOisQup/Zu1fgDLVrn1J5n1zyzpbWF1jgzaCha
nHUcIiQisc4ef1Nba7VK+5dZ5fGOP573fj1f3+8v+X7v+/5UHpzVdVxSIpEo
gO7+zEtOJOYmv881CiYSv7rYANf4FsxHW/1RXWc858fRAzX1m3UNcZ1vRX/d
FT4CJbBA1053TE7HC34CY3UP+beohJ66NN0WuRFu8BwM0F3lX6MkftC11x2X
u+AlP4lxukd8Kiqjl66WbqvcGDf5dP4sngnb+ED+mzwSpfCj7jPdCTkDr+L9
+Vt5GfJ5Fv9T3mNOMzeYZXAQVfhyMxnr5N7u/0jOkZvgFp/Bn8d7YDvP5Nfk
UfgAC3Wf607KXfGan8J43V/8O1RFH11t3Ta5KW7zmfxFvAd28EH8ujwaKVik
66DLl7/Cf/w0Juge8++xUS6LavIKsyjWy33dV0feLjfDHT6Lv4xnxk4+mN+Q
xyAVi3UddafkbnjDz2Ci7m8+HdXRT1dXt0Nujrt8F4bobvKxKI0luk6603J3
/M8X8ASW87N8kvxEnoFNcjl8KPd3rZ68U/4Yv/NcZOML/RldD7zl52LvUF+/
S/cJ/uC7sRRf6s/GzsZBwnndZN1TeSZqYKCugS5XboF7fDZ/Fd8h9ocP5bfk
OJDr5JTYpXhPszDWxN65r7N8LnYaP8mlUCB2KCb2YwXPMSviMC743RTzH32e
Ocv8xSyPQ6jJV5rFcAA/x87EDuMIMv2+oblbn2t+aq42i+O+a3PM1/GNsVmu
gDz9MPO2Lgvr5dTYJznbLIK1cUbcly6fjzOCpNhZnoSV8kXXv5H/lWcjDYN0
jXR75JZ4wPdiuO4OH49ysbO6LvH+cUZQEJdiN9E4npG3wkO+DyN0d/kElI//
iS5DdzF2HoVwOXYRTfR7eWs84vuxKr4jmrq2T98G7wBnhq+p
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{337, 2693, 2690, 340, 339, 388, 418, 473, 560, 
                672, 806, 338, 447, 502, 589, 701, 835, 387, 527, 614, 726, 
                860, 417, 472, 559, 671, 805}}], 
               PolygonBox[CompressedData["
1:eJwV0EtLVHEcBuDj3ZkQBKGNjSTuyn2ZKVRarSe7LCxNKG+laUa1zHFjmS7M
bNIWERhBEF5Siz5CXusTqC3KstStgc9/8fB73/c4w3hKmzqTHZlRFGUwSSoe
RX10G7q4Qycd3Gacz2xz3gfnqc6Kolv6GJ/4xzn7HFWetevfOaA3scoV+0vb
PH85a5vlpL1NL5dT7PLQ9s02IufIT4jL11nhsp72PC3H5CFK5Hv8oF2f8zzh
vuGp7X/4fnnLXug+p9b23v3oVrqtnn1xy3jHK/uMW8AwR8P/6Bbzml79g7vj
PnBXw7tyDzPBM/uUm81jYnpR+O00ystckl/4XKn7NmRbvjtIQj7ojtMjb9Am
z/r7AXmPXv2PXhN+Kyf0Fv2I/Iht7ttWbMNyltxPvtzAEhf1Uc8PyXdZpzW8
F9tvzujTVNia9WXy9GssUhfep61Y7maNFtuMbZPT4T1w3HZTXyJXv8oCF+wj
tml+cco2yTH7DX2RHL2eryTDu7VN8ZN9WMhcmQ==
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1Hl8z3UcwPFttjlScsc2V5IdNBuWVYpJIkeTSkSpUNgqR/dJoaLocJ+d
KtEhZ+7Q5eqgwxUViu6Dzuf70R/Pvb6f9++3fb/fz/f7WP1+pcUliQkJCd38
iJb34x2dwHWcT6bZIX2VB8gnzexzfZpbuIwkKpi/qxPpT3uaU4YTfPaePs4A
LqAFyaSQSlkq+t77+gQD6UBL0s2/0Ge4lcspx4nmH+iTXM+FFJBhvkuf5TZ6
xv1xkvlmfYob6MiZ1DHfrc9xO1fE/VDJfItOYhCdyDI7rK/xIK2oa7ZHn+eO
+JvWf+hqepFr/YMu4RFaW/+jG2JvONl6q05mcOyN9a/6FheRbf2tvk6R4zKM
dny2/qXrY78dp1LouJ7ujf3QF7StJtGZO+Oa9Vjcj66JZ60pdKW3dTP9MfZH
l2o7TaYL46zP1X/j2nRjPE8tS0XHlXWbTqFNvFsMieeov+lKOpNj/Z2+wRjO
sf5b3+Ys6lvv03ncRaH1cV3LleRZ/6TLGB/vAlXMtutUSuhCE7MjuoixsWc0
MPtSX+Ru+sS7QVXzD3UapXSN6+JU8/36EvfQN94Nqpl/pNO5kW7xbGlofkBf
5l6uimdMdfOPdQY3cXHsZexZXHucP/5mfI8a1OQUalGbNNLJiHc23rt41rFX
cU9xnXFuTovfd65PdCY3U8x58Zn5Vzqf+7iaRnEu8x06i6F0j+cXn5l/ra9w
P/04Pa7LfKfOZhiX0NTsqL7JQ/HexXfNvtEFjIxna/2nruMa8q1/1uU8SuO4
X7NPdQ7DKbD+XVfRgzOsv9fFPEwRmWSRTU4897ie+C65NIs99Huf6VxGcCnt
4pzmB3Uho7iW5ma/6Aoei72Lf5Jskg5aLvH//5151v8B7QiOfg==
               "]]}, Annotation[#, "Charting`Private`Tag$44986#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1Xf8TmUYx/EnMrJSpIyK7JTsXSSjrMxIkmTvTSiZTTKz9x5FkUohCsnO
3opskVQq0ft69cfndX2/n/M8v985z7nPfXI071y3022JRKJLkkSijpA7aSIx
XX4MB/SZaMLt01vhTgzmnuJWyzXxh74WdZGHn8EVwkF9FoagHupjUKpEooGZ
1+dm+kxhHNJnYygq8Wu4WvhT/xrPIR8/iyuCw/ocvMjt11sjPYZxlbm18rO4
rq9DR+6M3hvZ0ZDLz82Wi+KIPhdNuQN6G9yFN7kq3Ndybfylr0cn7qzeBznQ
iHuYmyMXw1G9v/5HnBPm6S/pB+W2uBtvcVW5dfG74++4fv2W/D6+0Tvr5+QP
zVfNqea9+BQP6SPNVJgkP+/zBeS5cnEc01/T/4zrwHy9mX5IbocMeJt7mlsv
18U/+rfowp3X+yInGnOPcPPkEjiuv65fj+vAAv1l/bDcHhnxDvcM941cDzf0
DejKXdD7YZp8H3LJo8zUmCy/4HOPyvPlkjihD9D/inPGQr25fkTugHvwLleN
+1auj3/1jejGXdT7IzeacAW5BXIp/KgvwivcUb0jMuE9rjq3QW6Am/owPYGR
+ia9u3xJfg3T5czII7/o2GPyQrk0ftIXYzhq8Bu553BL/y7WHQrxi7gyOKkv
wQjU5DfFmkUCm7ke3C/y68iLl7jC3GK5LE7pb+h/x32I9aO30I/JnTBJzhhr
Ka7TTI4PYt35XC35u1jTmCDfjdtiDcXExxilzzUfxBf43vd6mpf5j8wB5gwz
C1Yinz7aTIPlmBJrJtYwvkQz3y9iLuEXm+XMcead+NmxgeY/cY8xS86Gj/iW
5nGuMybL98R6koebKTA+nhGfe1beHM8IksSa1ZNgtLzF8V7yFfkN5MfLXFHu
Q/lxnNaXohV3Isn/e2XmWLNc7bj+eEaQFFtjbaJYnKP+BM7oy9Ca+1Hviizx
m3B1uC2x5nE7tsVaRHF+qV4eZ/WPMSbuI0o4toyvgMH203PcJxgbe7BjW2Od
Ixm2x++EknHv9CdxXl+OcbEv89tizSI5dsR1ohT/iV4RF/QVaMP9pHdDVnwQ
ezq3XW6KFNgZ14nSca/1p3BR/xRtuZN6d2TDeK4BtyPWMFLG860nxRh5l+O9
5V/lgXgYbbgy3Aq5Ei7FO0W/EWsZK/V2+im5B6bImXC/PMJMiQnyfDNH5Hi/
mDu5ZpgoZ8Ad8eyYt8fvgLH6PDM7VuEH3+tjXuWXmoPMmWZWfIYC+hgzbZwr
psa+ZebEV2jr+2VjL+eXmJXj9zTTx7Pt2GDz31jLmB3nH3+Xbx/PBNcTD8Qz
G+eKiXHujjeUd8UaRqp4ZvRkGCfvdvxV+bdYN3gE7bhy8ZzKVXBZ/xyT0Ciu
k2uO1NgT/x+Px7noVXFF/wKT0QFPOPY5/zR+1VdhSryD470Z77R4v8R7IPZm
DLF+u8eeFntIPItxz1E+9hZ/4xlc1b/EVDzP7+ZeQRrs5fpy1+QheBR9uApx
n+Rqsc7ku+K64/+ZN7ll5ghzjvlAnHPcl7gG8zTfCw9iGteY2yO3QFrsi98R
T8b+pVfHNX01psf5oB/6xzs43pXx/oo9OfYyVIz/5Ts18Lu+BjPwAr+Xa4l0
2B9/h/tdHoqCGKunwzR5kZkLq2P9+ex/MMFBQA==
               "]]}, Annotation[#, "Charting`Private`Tag$44986#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1GW4FlUUBtC5l0s3SJe0pHR3d3d3h0opIYqilIGNhYIoDXbT3Q3S3SAt
jev8WM9+957zxcycmZw9hrYYEhNFUWxsFC2LF0V140fR0bgoeoNqJOeaeS/z
B/JsOlOQ5eb1zI/Jb1KdFFw3X8FKVrGaNdS39rjjk6hBSm6Yr6WBYyf0k6lJ
Km6a9zZ/KH9DFwqxzryh+Ul5CrVIzS3zPuaP5Dl0pTDrzRuZn5KnUps0jDZL
ze/yMG5b11f/WP6WbhRhg3lj89PyNOqQljFmafhDHs4d6/rpn8jf0Z339AXY
KRdlopyVNfLLfCoX5x95o883kc/IbzFTLkPd0Kt52CLPVavylDxWTcsP/Bmu
k1ox/CdG6D9Wi/IL+/QL1Zr8zX9+r78a8T1zHZ+llg/XhB7699WC/Mwu/QK1
Bs+GPaJmY224XmplxsufqSU4KG/yG03ls/Lb1AtVn5etcjrGhXPhL3kkd31m
gD6GefqeFAt7TJ+ddfIrbLaumf6c/A71SR+uq1m6cI7yKO5ZN1Afy3x9L4qz
xby52Xn5XRqQgfvmg8zjsUDfmxJsNW9hdkGeTkMy8sB8Gy0duxjuOY3IxEPz
7exgJ7vYTStrL4XrS2My88h8D60du6z/gCZk4bH5YPM4Fur7UJK95m3Mrsgf
0pSsPDEfYh6fRfq+lGKfeVuzq/JHNCMbEUPNE7BY7kdp9lvfzuzfsJdoTnbG
m6VnmfwiMTynT8gSuT9lmKTPwXr5VQ74vvb6a/IntAj3Tp+PbXKOcG/lDCyX
Xwrrwn5jvxzL83IilsoDwnWSC7FbLstk+Wk2hOdQrcIE+XO1JL9ySL9YrR3O
ITx//lcH9br5UnWG+pValt9oGfaImp+f2K6fp1YL+zb8Xjg/NSM/skI/R60U
nktG62eoxTggL1JrhT0mv6AmDs+gPFutwMBwP9XC7JHLMUXOyUb5NQ76zx31
N8J7hFbkZIJZJlbKY4hjmD5JeE/IgyjPIZ/vZHYzPLO0JhfxGW6eNJyLPJgK
HLa+s9mtcC1pQ24ScMSxLo7dlr+gLXlIyFHHjnGcE5ykq7V3HPuSduQlESPM
k4VrLA+hIqes7xbeV/JM2pOPxIw0Tx7eT2H/UonT1nc3uxvuIR3IH66ZWWZW
yWNJwih9ivB+DPs3PBNyEfbKlZkq52KT/Ho4N7kUh+UzfqeHfE/+OpDL0VGe
rj7DDnm+Wj304TvULKyWx5E0PD/6lGFfhr1NFc767nOc5wIXucRlrnCVnj5z
39pZdKIAycIzY54q7Nuwt6jKNH1uNssTw3WXS3NEXqLWCc9beM597/8HLArK

               "]]}, Annotation[#, "Charting`Private`Tag$44986#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1XccjmUYxfHXJspOCdlbaNgrFLJnQsmKKEQUhexVGaUUImVmhIom2aus
srI1ZKvs1ff64/c551z3/ax7PXna92jSPUkikZiZNJFYlSKRWJwqkbgPc1Im
Eg2RGf+o/4jP1XNgrlojZMG/6tvVKmGj3BMPY7X6ErWcmCc3Rlackp/EcX4s
/tNvh1wZm+SX8AjWqC9Vy4X5chPcjdNyS/zOv4mL+u2Uq2Cz3AvpUycSr8mp
UEa+TjvjX76ktin8FD4HP4rPEtfz8+la91tG70cNtc/0y0fHyc1oUzkV7S3X
o7fje+kM+SmaTT4THrXlP+Ri9H25OX0rvoMOkRvRu2gFOpte8uxdtCq26FdI
/R2+N5+Bf51PjbLyDdoF//FTkVP7aDkr1rnPFzQ3FmhrhntwVm6FP/m3cVm/
X+Rq2Cq/jHJYr/6lWh4slJvjXlxR34CN2ITN2IKt+Ak/Yxu+cl1eLHJNC2TH
VfVf1R7FT3IflMd29eVq+bBYfhL34ZzcGn/x43BNv91ydfws90UF3JSfx0V+
Gnbot0LOj8/llkhtbF6WE7F+5fO0DU7wxbVN5sfz2fihfHpU5OfQ6+63J9YC
HlPbpl9h+q78Cp+RH8A3oGlibugncX9aUfstviuekC/JpejU2AP0IzkXHSM3
oXfH3Meao23pTs/+mi+AJfrmVxsfa4tPw/fhk8Qeky/Qp/E3PyHmW/swOQNu
uM9eWhPbtb2KSrgtd8Nlfjp26feNXBBL5VbxfjHGsU5i/vCttkJYpt4a98c3
xtzgO/XC+EKtDXLHM9T3xdhhh9wPlbFH/Xu1IvhSfhp5kMB+tcexk++PKtir
/w9qRfGV/AzyIgl+U6uFXfxrqIp9+q9UK4blctvYx3GWyc/gJD8RSXEg9ip+
4V9HtXgH169SK44V8rMx/nHexdzgFP8OkuGgXAe/8gOQydgPlO+I9R7fJL/A
X+FnxPvGeSqXwNdyO9yhT185acx3nIv0WZzmS2j7gH839iE/nM+ISvxcmlz9
UKyxGDe13XIROkkeyGfmB/ENaVpajn4a64VWjzGkL8p16VW5NJ0mt6QfxxzT
sXLTON/ivKAL4v3oAd+ymn8g1pf8jf4F6AS5PZ+Wf4VPFusqzmvaDmf4SXE2
aB8hZ0IK+XC8B/bwg1Aj5kif7mrX+Jkx3p65Ri6Jb+UOcVYiZYyDtrXqpfCd
3DH2K1LhiFo97OXfQM14nv7r1Erje7lTjB0uxfvjLP9enCE4KtfHPn4wsniv
N+R0sb5jLcg94szgH4z9zX8S+4B/k78n1gO/kB7x3PX0QfygT0H1ifxzfDr+
1XgWTU4fiXmgrWhR7Zf5DrHm5HPyA/RDuUX8Z+L8pCPlxjQzrUznxbqPM0r7
sTivYs/I++Wi9D15CJ+VH8zfifL8rFhT6sn5nnGW8A/x0/lPY8/GP42/F0fj
/0AfwkptnXGn9n4xt7EX5Su0I87zk2Pd43isTfzGD0UtpHDdS2o3+VnxzvHf
kR/GKrkLiuOq3AkX+A9iveF3uREO8MNQO54R/6wYS/woPx/7KsYaf8RY4SA/
HHXiHvF/UyuD1XLXGOf4Hvyp1gSH+BF4Iu4R/0K1slgjd0NJ3IW/Yu/gMD8S
deMe8d+MvYi18gsohfQ4odYs1gg/CvXiHvGPjTnBOvnFuLcx6i+njPfkZ9LW
tLS2a7GW8A//ITLgb7l5zBM/GvXjWfHfVquA9XL3WLvIGP21ncQpnMYZnMU5
nI9/vWsqYoO+PWJdxNmHk7EWcYwfgwaxN71XL7Vb/Gzkld+Ws6M6vyjOBXrB
ff8HPGBdKA==
               "]]}, Annotation[#, "Charting`Private`Tag$44986#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1WW4VFUYhuGhu7s7pLtLsLBFEcXCA9KNdId0S4d0SikppaR0h3RJt3R7
rx/P9cZa6+yZ2d/eJ1tUixrNo0UikazRI5GouJHIw3iRSE/kwll5MUYhWfxI
ZJKuCp7JO1AXj+ReyI1z8hKMRnL7J+tex3N5J+rhsdwbeXBe/g157P1d/hzJ
MEaXQvcLXxUv5F0oplsnf4+M+EH3hPZBXlyQy9uzlW+M3+W88lK+FpLjHfkg
bY+x1lPKU/hqqMmfpS/1VfndfCvU42/T3fri/Hq+BY2iX9PLtCPNRD+g/9C2
tAttSO/R7rS+80/5n9BEfo3WoKfC56H/Wq9A/w7XpU1oHXqdLrX2Gr+M/yLA
X6ApUJ0/RDtgnH2p5Kn8G3glV5P38K2xRy4h/8nXRWY00D2jfZEPF+VlGI/U
9k7TvYkI9uoa4jnfD/lxSV6OCWiExmiCpmiG5miBlmiFF870RwFclldgItK4
1nTdW4iGfbrWeMkPQEFckVdiEtLaP0P3NqJjv64NXvEDUQhX5VXIZ+9y+Uuk
xGRdOt3MMBOIEX4veS9tgwPWS8p/hfuPb/grNAs+5I/RrvjRvog8iC+MT/nT
9Jq+Ir8t/O60aZhbeoN2pn9Yz09XyM1p7fDZwgyE+0hT0Xfp4XAN2jHcJ/of
7RaeDefT01lyM1o9PD/0HI0Z7he/L5wNzwl/hx50phS/IXT4lr9Ks+Ij/nj4
22F27YsmD+aL4LpcSd4eroXVcgF5Jf8VUmOKLoNudvjciIVDunaIrh8iF8UN
eQ2moj1iWBuqL4ab8lpMQwd0RCd0Rhd0RTd0R0znhjlTHLfkdZiOHohlbbi+
BG7L6zEDGfVzdO8hNg7reiK2foRcEnfkPzETmfRzde8jDo7oeiGOfqRcCnfl
v1BQtyq8D5AGs3SZdfPCOwFxcVRXWreRr49s6K2Lq/uZL43/5MryjjAX2CAX
CvMSZhC1+Ys0bfge/BHaCbPtyyLPD/OJWvx5Gi88T/z+MNe0bbg2vRvmN7yr
nCtDN8ktaQP6Hb0W/i7NTj+mJ2g72p02ovdpD9rH+Xh0lNyUlqGf0TP0nrUq
/E6+BaL4m3SjvjC/OsxgmCH+Ek0Xfmv+aHhGMMe+rPKvYT4RPzzr8oHwWXDM
ell5M98QOfCTLr5uNF8W9+VNKKJbE74b0mOuLptuQfh+SIDjur5IoB8jl8MD
eTPmIbt+oe4TJMQJXT8k1I+Vy+OhvAXzkUO/SFcDiXBS1x+J9OPkCngkb8Wv
yKlfHN4hSIxTugFIrB8vV8Rj+XV5V7hfqMvfol3C/w1rRelauQ4yYIEul25J
uC9IgtO6gUiinyBXwhN5GxZiEAZjCIZiGIZjBEYiqXMTnamMp/J2LEJu/W+6
mkiKM7pyui1hZpAz/HbyyTA7aMw/oD3D/Nv7P4bHIhk=
               "]]}, 
             Annotation[#, "Charting`Private`Tag$44986#5"]& ]}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"Test on dynamics\"", TraditionalForm], 
         PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1b\"", "\"u1b\"", "\"x1b\"", "\"\[Theta]dot1b\"", 
           "\"xdot1b\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]},
    {
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
Ave26EM/sP739CD/0lwJGQr6hd7TxerD8VX0kOwsGepkBZsfxa6/ArajJYVY
+fRvgV+w8ViUcr41M5cCJ6VOSw5j5cf0DHl7RVNgVlMpGx277o25du4ZnAU/
uV8jCjZ/iojbnu9tIsNl9bPlLtj9VtZ8ljwxQYabBswD5rHyu4ZHlgTeMYDT
9zcOAGuf+R/z7DJpFGjmelyqGSuPcvzU2i6JWXDTr6HVBOsPDQk/dtj/JsOC
lC36PFh57pGiD916GKDoSuRGWaw9Qt4nJasXU2C7VeIM1//2e03H9PneUmAh
n3tZB1aeQegG70tdZFhnnPn9f+u32df9H34vi8IdQuHfOrH6xfPfje3rH96q
X2Xlv1WtNt5ZkQus/Ne8inM4KGuSlf8euekgKPCqmZX/bjcNnQpgViA8/331
1u5xHmEI4fmvvo5MgaPDFCv/dR6543SFMcPKf72v7xpZbKGx8t87fj1nw8Xp
rPy3t7Cyf7aUzsp/L+Ulqu7ZP8vKf0M5Li3Gcy2w8t+flgO9Mn1LrPxXiytR
ruTnKiv/tRSVemJqQKDi+e+btUGJUznLCM9/nW+oipr8mkN4/hszdekSyWQU
4fnv86srppJ7sf3Df/mvtsy6CMbOLlb+u6G3yOmx7xQr/42r0fZm9/u//Pd2
jHhD7qVFVv77Q/vUuPDP/8t/u5rvtBelMFn5b4D4AXe3oEVW/nvCz3n/ml/z
AM9/p+wONEYazwI8/3V8Ufj9VzAN4PkvfVx4Nj9wCuD5r3nH1q6pzyMAz38l
oyeg+XgPwPNf4mR7p79GA8DzX+qQ2p41jGsIz3+XedwbWiUaEJ7/avkXm7Sq
9yM8/21sX5pwSZtAeP5rVqhSmZtHR3j+G28weCh6ZRHh+e+WgCM3tw93ADz/
TTY7bxmx7Q/A89/HymPx5QW1AM9/eeXuxgcoVQA8/yV/CHhkUlwI8PzXOVVB
fkg4G+D5r6P9s3cHPb4BPP89EHcvIf/qC4DnvwR5+ts6ijrC81/H1xq7Oz2i
EZ7/2nM/Z/LKLbPyX8bHgj1Oc3TAPSc+wbm3AyRoOqa1/ksDlxOTV6XkesGZ
X+rbUqa6EMH71h6sFwDGivfMz9gxhOfD7kanHlJmp1n5cELhP3tSKI2VD+ce
sl6HZmmsfLjS7MQtdgs6Kx9mO7DlRYIOg5UPxwx/iCt2mmPlwzvfxj9gMhdZ
+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
xNf/A0EC5Mw=
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{530, 3219, 3217, 529, 1011, 872, 754, 662, 602, 
                566, 1035, 896, 778, 686, 626, 1067, 928, 810, 718, 1093, 954,
                 836, 1114, 975, 1136}}], 
               
               PolygonBox[{{3216, 3215, 515, 516, 517, 518, 519, 1001, 862, 
                744, 652, 592, 556, 1033, 894, 776, 684, 624, 1066, 927, 809, 
                717, 520, 1002, 863, 745, 1096, 957, 653, 1076, 937, 1123, 
                819, 1108, 969, 1133}}], 
               PolygonBox[CompressedData["
1:eJwV1EVsFmEURuEpsKQ4xaXYBikLpLhLcQqEELxYcXd3Z4O7b7BQoGgCwSWE
BRSnwAZ3d3m+xen7njv3n/llOvEpw5OHZYmiKAZJ/izLHkVL8US/kTWKmuO6
hXGoiTh8MRuEz/oadMNT+xlmSbjBx6MWYrNF0Syz7NjPC+CrPhhf9LXojuL2
lpsVw2n+zPlu6i2QwSegNnLYm20WizReEN/0Ifiqr0MPlLC3wqw4zvDnzndL
b4mbfCIq2NnKy6MOz8nn6DlwgBfCd30ovunrUdXOLl4FPXlJvlLvIUvINvJs
+H5COl5fpvN6eOE93JatcMuxSaiLXHbmmuXEQV4YP/Rh+K5vQDU7u3lV9OLx
fJVeEuf4S+e+o7fGbT4ZFe1s4xXC9XluPk/PhUO8CH7qw/FD34jqdvbwaujN
S/HV4bPKeNlWnpPnHWugH9br45Xr3w2fH3ccm4JKjm/nFcMOz8Pn67mRzovi
lz4CP/VNSEFpe2vMSuECf+3c98K1cZdPDddGXnsLzPLgMC+G3/pI/NI3ow/e
eP19s3a4x6ehYbjn8MdsFH7rW9AXb+0/MGuP+3w6GoV7Cn/NRuOPvhX9UMb7
WBt+F1laXjR75xyZejIe8BlIcHwHr4TGPB9fqOcN94R+Wh4J97meptdCZ/1q
+J3N/8kx6Gr2lyfJkzw1/M48Ue7lfWV12UleCfeR7O94Wbku/K6yTPg+5Pnw
vygvhe9EHuEDZAPZRV6T732Wh7IDMu01NT+hz9Qr6zv1BDTh+fkiPR+O8jr8
gF4b8eFBw8fq//TtGIByZuvNyuIy/+B6j/SOeMhnhWuGZ4+9xWb5cSzcm4gx
G8cj7OCp+Oj1j8PnxyM+G83Cs8fuErM4HA/3GbKYjecx4Vmjn5I7zWvo+/R+
MlEONPvkvJ/xH1eRpZg=
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{481, 3218, 3213, 533, 569, 629, 721, 839, 978, 
                484, 483, 532, 568, 628, 720, 838, 977, 482, 603, 663, 755, 
                873, 1012, 531, 687, 779, 897, 1036, 567, 627, 719, 837, 
                976}}], 
               
               PolygonBox[{{3216, 3217, 565, 601, 661, 753, 871, 1010, 528, 
                564, 600, 660, 752, 870, 1009, 527, 563, 599, 659, 751, 869, 
                1008, 526, 562, 598, 658, 750, 868, 1007, 525, 561, 597, 657, 
                749, 867, 1006, 524, 560, 596, 656, 748, 866, 1005, 523, 559, 
                595, 655, 747, 865, 1004, 522, 558, 594, 654, 746, 864, 1003, 
                521, 625, 685, 777, 895, 1034, 557, 704, 796, 914, 1053, 
                593}}], 
               PolygonBox[CompressedData["
1:eJwVzzlPVVEYheHNvRewsGdsSJDJBrASwyUBE1FEAiaAAg2FCYjc1rEDxwDa
qyWgFJBAAVGGUKBh+A8y+wdAQAWeU7xZ6/2+vU/OLuhOtfTHQghpmMLwxRBG
EDNMixY4szzFf1zmTXiHfXTFQ/iNf3Zl/A7eYg+d5vv4a5fiE8jkL3AhEUIp
X0Qe/4B8s0ZeqY/jCn/Dd9HB93DiW3VyDtft1+1+6C16ifyMUj161JreqlfJ
KVzTv5ov6Q16huyUz2VmdN8uJTd4u0zKB3JG1sgF+x65zBtlruyS72WevG3f
J3/yu7JCdssxWSlf23/Xb+g7+n19F8feVCtnUWe3ZreiN+vF8hNK9EfmV/VJ
VPEvPF1/hozoLK/Wp5Hk8zxHH0Eub+Dl+igq+Cu+jXt8B0f+Y5UX6R9R7Ewf
H0eCP0W6WVH0DmTzYeSY3eIvsYV2s2388b2HfAxx/gQJZy/xb8jiQ8g2u8kH
sYk2sy0cut/LRxHjjxF3tpDXYwC/0Gq+iQPnzwHkOFUM
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1WWYlGUUBuClS7qbpbtTuruWRqkFEYNQGmzBoDHoMAhFurvbRhFRVMru
Iuz7XP6493nOO7Oz88135trE5JFJI1IkJCRc9CPyDj/+lesZTTtmOSvLOX0J
NXjAnIdj+jQGkZKh8SJsEGNoT01ScWf8DTbqY+lALVKThrSkY5jnpGSTPo6O
1OZBZ3k5rk8nmfTc5SwVm/XxdKIODznLxwl9BoPJwN3OUrNFn0Bn6vKws/yc
1GcyhIzc4ywNW/WJdGG2uRwf6kupxyPmApyKz4xVehN+jM+VBXp1LsVjbNTb
cVPPxL16Wrbpk3hBv5Wv9a7M0ctzXt8re7JMXytb8bt+XA6M39MflQV5g9Pm
XbJbvGdmm1fLppzhJ/MR2Y8LDDUvlDV4m8vm/bI3H7HavEm25yx/mE/KZG7R
h8t0bNe3yy5M1l+U9flGT2KuXiFeU1/OOr011/T6PKYX4vW4fl7Rm/Fz7BOL
9JpcicfITCx0enbEntKNZ8wV+Tg+VxrwuLlwfD7xPmLvyMJIZxnYGTtHdxoy
xVkR3ozXi70jK6OcZWRX7Bw9aMRUZ0V5S3829o5s3OcsE7tj5+hJY7KTg5zk
Ijd5yEs+8lOAghSiMEUoSjESKU4JSnJ/3Av2xG7SiyY84axY3Ff9udhvSjHa
WWb2xu7Qm6Y86SyRd/TnY08pzRhnWdgX94k+cZ3mSrFDca9pxlPm4ryrz4vd
YLG5Flf1VynDWHNW9se94SW9Ad/qfeO96pX5JB5jvd6G63pzntZLxD7ru2V3
5sfry+b8oh+V/RmhL5G147r43HxA9okdYY15s+zAB/xpPiUH8xllzeNktthN
Dph3yK6cY4r5ZdkwrpvvzIfkbSE+R1mFT+N5tGCauSTv6QtYo7fg19hJlup1
+EJ/jS16R/7SyzFez85BfadMYqq+Qjbie/2wvD3EvZBVYz/jmsz7ZC9W6Btk
W97nhvmEHBTvl5bm6bJUfBfiOeY9sgfnWRjvL54X18Jv5mNyQNw7RpmXybp8
qR+UfVmrb5Wd+FsvzwQ9B4dib1mpN+YHvR/z9WpcjMdoxQxzac7qi+L7RgUm
OsvJ4dhp+tOaikxynosjsa8MoA2VqEwVqlKNyZ6Xm6OxcwykLTOdlYl9if2O
7x/LzfX4Sl/HNr0z/+in5ZAU///vrW7+D7a05WY=
               "]]}, Annotation[#, "Charting`Private`Tag$45073#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1nfcz1UYxvGfx0q2kM2TlKyMbLKjIkJGQomorAYplNWwV0aoiBRllqgo
JGVVqFT23iORTe/71R+f13Vd9zm/7zrn3M+T3KFH0+4pEonEhKREYi/zS8pE
oh5+ll9ARWRIlUgMVEuPBfItOMc/jX/4SWiDfX6/We0+/CK/iErIjv3GDmCL
sfrYrNYLlZEDIzMkEgeNbzXWAFvUeqMKcuK82jM4x0/GYzhk/q9q92Or/BKq
IqPnHaSWAQvlW/Ev/yzO8++gLQqYN14tP1bJh13vN/4B/Cr3QTVkMm+wWkYs
knPhAt8V//JT0A4FzXtbrQBWy0dc73f+Qfwmv4wS5syQi6O6nFkewmfCYjk3
LvLdcIGfivLmzJXvQXu5kDyBb0cL0ofod/F9Qo3XpEvkGjjqGbbRhvjd2Cu4
F1nMeV0tMz6T8+AS3x0X+WmoYM4ncnk8LifLE/lCWCMfc+0/+EbYJvdFSXM+
kEvE/eWs8ht8Fnwu58Vlvgcu8e/GHjPnU7kCnpBvkyfFu9Jk2piuod8bq8V/
wdfEcff/M94ffxjrh1LGZ8olY46cTX6Tz4olcj5c4XviMv8eOqCweZPVbsNa
+YRr/xX3xp9y/7h37H3z3lLLhi/k/LjKP4cr/Pt4Eif9frtaE/wlv4rasedw
Te15XOWnoyNOmb9D7WFsl19DndhTuK72Aq7xM9AJt3uOd2JdaGH6g9pp19jJ
N8UOeQDuNj5LLoW6cRblofwtsSf4VXRp7HN+EV8VLfmNsc7qN+iLaKN2Xb6f
fiN3iXWO803nyR1pRfoIXR/7iD5lvAidEutKb4/vQb+Ps0h/jG9Cl8qdaS3a
mv5Ez3iXXbQZdpp3n/rX/EC+NP8hf3f0qugf8jA+O5bJ1eXFfDUkywm5F3+D
n4nOuENtqloRrJP/dr/dfHPskgfFPaP3mDdcLQe+jL2JFGq95QRmyV1w1u/3
xPtjtzwY9aP3mDtCLSe+in2GJLWX5BTRa/hv6YfRC/n5fCdaiT6t9o/rnsMo
/fE83aveAnuMDUGD2AtI6Td91JMwW34mep75+2I9sVd+PdYv+pe5I9Vuxdex
Rkil9rKcEh/Jz0aP8/v9civsk9/AA9GjzB2llgvL41sitdorcip8LHfFnWrT
5DuwPvpa/A2INcZ++U2UMWe2XBoPRh+SR/O5sSJ6lfwZXx13ymnkvnxqzJGr
yAv4yugmF5Xfjblxlvi1dEOcJX4ZXzv6juc4SB/FgVgnY8v5t/iy/Ed8B1om
9l/sU9qVNoz+RcfIbWke2oiujrWKc2G8Bv1cforeG9+ObqI9aFHjaWk/+TGa
Jt6ZrqRzjVXlF/JVYo35DXGO1O/i3+OLxtnmf6Ab1evyX/J1opd5p0NxTnHQ
2FCUM/6xXDaeM3qfPJbPi2/jurhJrb+cFp/IPaI/utbheEYckofhIRSLXmfs
SLw/DsvD0RjFo68Zu44b8Q9FnJPY6xht76aMPRb7JNYwvgOOukY7HOFHoAlK
IJ1nelX9Jnwq94x7q70v34VN8dw4xrfH0TgHxlfwI/l7+Dn8k7RcnGm6LvZH
rJ1neTj6Nj9OLR9WyiVxs9prcjrMk5+LZ8Fx+XEc40ehKUrFfJyI3obj8Z5o
Fj0X6XEy9hFO8GPQPHoXMuBUPB9O8mPxSJwFZIw+rt4Rp/hxaBH7EplwJvoD
TvPj0TLWGZmjh8W+i97Jv41W8S2QJfqTemf8nfT//3qtUT7u7XtkjT5jrAvO
8hPxKCrEe/gmA9Rvxnz5+VhrtelyMfwk15O/4uvGmeJ/pj1pNmP/ATa8QQw=

               "]]}, Annotation[#, "Charting`Private`Tag$45073#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV02W4FWUUBtBDS4h0g3R3N9IpnWIAKiogSJeAdHcpBl3SoXS3NIqEIg3S
SDeu78d63r3fmTn33DkzGVp1qN8+SiQSSRc1EukYPRJJEDMSmRUjEqnMM/sO
ZpNfv133Kam4qOtEQv1sexWe23cyh850oSvd6E4i585xXlVe2Hcxlx4kdmyu
vhov7buZRwH9Dl1rUnNJ15Mk+nn26ryy72E+BfU7dZ+Rhsu6XiTVz7fX4LV9
L1V1p+xfU4AFukK6XebPScsVXW+S6RfYaxJhn66a7rS5DwVZqCus223+gnS0
sN+Tk7nqeH37JfNQSofvaX8qfwjfw/Hk9oXmWnxpfi2j0Nx8Sw6Q42Q3+Qa/
uaa6/Ev3jewrO8noDKdQ+M3kYzlETpO95ZuM4mfXF5F79H1lG/mVjMow3ra3
lPflYDlF9pRx+de1DeRl3TC6mGNSJtw/+Uz+GO6P81KEv2V+l6i8b78tx7Pf
8Rr2v839KMwiXVHdXnNb0nNN11B3xTycsuE761LqFplrE40Dupq6M+GeUITF
umK6feZ2ZOC6rh+p9IvtdYjOQd0Siof7G34HMnJD9w2p9UvsdYnBId1S+pPG
saW6esTksG4ZAxjIIAYzhLTOXeac+sTiiG45Q0nn2HJdA97gqG4FJfT77e3J
xE3dMN7Wr7A3JDbHdCspqT9g70BmbumGk16/0t6IOPyuW0Up/cHwDJCF27oR
ZNCvsjcmLn/oaun+MfenKKt1pXWHzB3Jyh1dI91V8wjKMVKXUbfa3IR4HNe9
qzsbnnGK8YuujO5weKbJRiv7AzmVu443Ds9h+Ey6mmPxTnj/5HP5E6Ocl8n+
i7lpuHfmSHgHzB/IO3KgnCC7y9iM5E/X1Zbnwv8oB8rOMgYjKG5vLZ+E91l+
H95hGZ/R/Or6svJIeK5l53BfZDSymz+WD+W39DLH4z/XNJHXwvemPG3sL+R0
RjueOXy2uRnx+dB+V07khON17OfNgyjBGl053dHwjpKDe7oxZNGvsb/HW5zU
reUd/bFwT8nJfd1YsurX2puTgFO6dYwjm2PrwrtNQk7r1jOeCUxkEpPJ7tz1
4f6TiL90Gyiv/93ejVw80E0hh35D+F9JzN+6jVTQ/xF+N3LzUDeVnPqN9o9I
whldXd0F82BKsklXUXfc3IM8fGJ/JL/jkeNN7dfDfacCbe0v5Yzwuzmey77J
3CK8Y+YoJA1/N/yW4TeQk8LnyzjhfXFNPXlRN4RSbNZVCs+buSd5eaxrprth
HkPF8J10uXWbzS1JxlndFirrT4TniHw80U0jj35LeG9IzjndVr4nr2Nbw3NI
Cs7rtvEDP/IT05nBTPI5f1u4R6Tkgm47VfQn7b3Jz1Pde7qb5rFUop39lZxJ
H/NbjGGWc/8HjdMaag==
               "]]}, Annotation[#, "Charting`Private`Tag$45073#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1WUYVFUXhuGhQ6VRSulO6ZKWtpBUUcTEIGxQEUVAUUq6kQYF6VbpkEZQ
EKQlP0LpUL57/Xiu9b7P2WfmmhN78rbv1KxjkkQiUS9ZIjEgZSJxKXUiUQWT
UyUS5XCKW4WBuMxXxRS+PE5zq5EjTSLRjt/MPYX0GMRf4aphql4BZ7ga1n7O
XdC7Yw2Xk3ue26I/jQxozo3iUmCI/o11V+XqmKZXxIvWzNSz4qzjNfVe8kXH
PsFaLhfXntuqP4PO+iI9LzLqLfTRckoMl/80h8b58jq5DKbL583BPu+a+RBm
cdOt+8Lcpq82K+kvmd/pi817zTHm0bg25v+cX8vsrc8z/47fZe7V15s99K7m
z/oKs5g5yTxtrnPu/fIL8jbr+sm/ym3lLvJiOR8y6S31MXIqDNN76OvlB+Na
+pzrZg3McKwyznG1renD/aN/ivXcA9yL3Hb9WWTGUP4GVxMz9So4z23AMAzH
CIzEKIzGGIzFONx0Xi1857yquMBtRG7f9RK/g3sOWTCev8XVxvd6NVzk6lj7
BXdJ/wybuDzcy9xOvR2yohU3lksd91afYN1tuU7cP706Xrbme/0+/O14Xf1L
+bJjg+V9ck+5m7xSLh7vhnzG/MX6vPIr8mxzl3X9zd36mnim9bfMJfpSM785
wTwR9zCeD8dbm+P0hWYac4R50Nxkjoh7YW7QV5pl456ZF8xvffe/Zt34buu+
5LfHsym/Is+Ss8X9tK6e3le+4tjn2Mzl417lftXb4z5M5P/j6uEHvQYucVsw
CZMxBXccfxhzHK+Jy9xW5PeZHfjd3AvIhql8gq/Pz9Vr4Qq3DQX41/g98S4j
O6bxSfgG8Y7otXGV246C/Ov8b/GeIQem80n5hvx8vQ6ucQ9zX3FX9V7YwRXi
3uB+j/uOnJjBJ+Mb8Qv0urjO1ee+5q7pvbGTK8y9ye2Na4xcaMON59JipD7T
uuRc47inej28qs/Ws+OG4w30fvJ1x/pgF1eE68jti/V4W1+qF8D9sa/qE+S7
4nvkQ+aoeP7ljXK5eB/li/Fu+bwUchN5kTV95R1xz+QO8g/yEjOHOdY8Fnuv
edN5Dc3+cS3NG9YPMf/QN8Q7p39ortJ/NEvEf4F5Nt7b2I+cX9TsFM9PnGf9
AHOP3kF+R14mF8QDsdfr38p3Y7TeU98kl4/33Wel1JvGXupYfdziGnEDuJvx
zGM3V4zrzO3XX0NuzOJT8Y/Eb9Ub4Da3B8X5LvwB7nXkif8GbiJ3T+zZ+mzr
UnOPxrurN4zP1ufoOfGv4431gfKt2Bfl/XJf+SN5tfyTWdKcGnt/PLfOKSG/
Fe9O/NdYO9D8TV8bz6b+rrlcX2YWivfcPBl7sJnX8bbmpLivZrp4BszDsRfF
Xhfvt/mLvsqsEM9C/M/E/fDdaeTH4rOt+0reKTeKayDPlXPhP+ua6IPk27EO
H+tr9FLx7jheUn9bPujYm3hPX6EXRr74r9Any+kxTp/jnLTc4/pyvTHucE25
b+Ja6l9jL1eKe4c7pHdE/vg/4KZwGTBen2vdXdwT+gq9CRJ4hBscv0Huh33W
lebe5Q7rnVAA8/i7+WbxHOtNkQR/8GX49/gjemcUxHz+Hv7JuKfxPUiK/fyD
/Pv8Ub0LCmEBn45vzv+sP4pkOMCX5T/gj8V/AwpjIZ+ebxH7vP4YkuNPvhzf
lT8eewKKYBGfgW8Z91l/HG/o82KviGsuHze3mini+80h+h25Pw46vzzXjfsr
3ksUxWI+I9+KX60/gZQ4xFfgP+RPxDOKYljCZ+Jbx/+d3gypcJivyH/En4zn
A8WxlM/Mt4nnXX8SqXGEr8R/zJ/S30cJLOOz8E/x6/TmSBPXhxvKJTBAP2pd
Za67flr/ACWxnM/KP82v11sgbVwvbhiXBAP1Y9ZV4T7Rz+hdUQrtuKlcRkzQ
V1h3L/dM7Id6y3j+9fmxn8XeHNdMHy4nxSD9uHOqcj30s3q3+H36j3oRlNaf
16fJmeJ913vpm+WK8Xw6/z69rbwx3hN5l9wq3g95gZw73gv5r9hL4z7II+QF
ZjJzmHkgzo/3zfHu5tp4Ns3S5jTznLkzPsP3VTM/1efGvmX9IPP3uAfxDMT1
NX+Kd9ksak40T5llHGsvT5czx54uH4njfG95i1wp3iHfkU1/Vt7kWOt4N/WF
ep7Yg+PZ0EfKyTFYP+Gc6txn+rnYY/Egfuaz88/FHqi3QTqc5B/ie/LnYw9D
WbzAzeCyYJLeR98qV47/HPkfc5e50vn/B+YiyH0=
               "]]}, Annotation[#, "Charting`Private`Tag$45073#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1nfczlUYx/HbyJ6JiBQplb2pUHb2iJSZvffee6+GmTJKaQ9ERrSthr1l
FYoKKVvv64/P6zvO9dzP/fx+5xzytOnZsEeSRCKxNmkisSt1IrE3bSJRHl+n
SSQ6IT/uwBVdK/zKT8HT2G1+n64CvpE742GkwFVda/zGT0VN7DG/X1cR38pd
8AjuTpdIjNAlxztySlzjX8Bpfhpq4SFz03VZsEbe6/MO8E/iO7kripmZJ+fG
o3J2eSR/B5ryG+m7+kr8O3wRpJKv0zY4wz9jbR0/nX+MX8IPovlpe7qdTqC1
4/nQGXI/ehdtQb+ho+nn8Zzox/IwWpp2pTvpFLrP9z/IP4We8vfm69PVcje+
OD+fvy+eBb+ZFtDn4EfxKfAcv4m+p6/Mv8sXRWr5Bm2Ls/wMPG59qfww6sS7
kmfyWbFW3u/7HOIrYbPcHQWRBjd17fA7PxN1ccD8YV1lbJF7oBDS4mB8Vqzj
CI7iFxzDcZyI3s9VwVbzPVEY6XArnjP+4GehHk7GZ+iqYpvcC0WQHrd1HXCO
fzGeIU7F79NVw3a5N4riHn/zaF1KvC9nQELXUT7Pv4Qn5DfkR9Ag9qg8i8+G
lvy3dF3saf4Tvkyci/jbaHX8YK2BtTV8H74Ev4AfSO+PfUa30HG0mPWcdIzc
l6aiz9Mv6Sj6gfUq9D15aMzTzvRnOplmtJ6EdpJ70z/lxnS9/DJfnn8zzkI8
I/4H2lD/KP8ifzfWx/mSP+XLxpmNd0Rr4EdrfVHS+qtyHhSXc8ljY5/hQzkT
kuo6y3/xr6ARTse71j2Nn+R+8TyQGcnMd9H/zc+Oc4cz5k/qauJnuX/8btyJ
s9Z+xx84h/P4E3/hb5zyM7Www+wAlEIWXLD2q742dsoDURp3Ibnv0FV/gZ8T
zw4Xzf8WZwS75EEog6xxF5rvpr/Iz0UTXDJ/WlcXu+XBKIt7zY7TpcFHcra4
G3Xd5Uv8PDyLArqXdNmxQf7H553h62GPPCT+FjML5bwoJ+eWx/Np8bFcVX4/
3k2807hD5R78P/Ed+Q38fL4Cv4wfTAvQjvRHOpE2jfNOX5b70xy0Ff2OjqFf
WK9NV8jDabm4p+guOpVe9r3P8vXRS95rvmHcg7F345nzr/EPxL3Eb6WP6e/j
J/Dp0Iz/in6irxb7ny8Rz0ZOJffkL/MLUFF+Sy4Y92DcPfIr/D3YKP8b+yXO
MPbJw+IOxP3mJurS49O4T5Fa10v+l38Vz+O/2GtxXrBfHh53Q9whcSea763/
j1+IZrgS+1LXCAfkEXH+4nzHnWi+j/4K/xqa42rsYd0zOCiPjPcTZyvuQfN9
9Vf519EC12K/6xrjkDwq9qW51+V8cT/z2+h4WtFaHjpJzoAVsR/jvtT1k6/x
i9AS1+MM6ZrgsDwaT8Yei/vRfH/9dX4xWuFGnDfdszgij8FT8R6R0fwA/Q1+
CVrjpvkLuqY4Ko9FpXgPcW+YH6i/yS/FC7hl/mK8U/wij0Pl+Hvi3jA/SH+L
fwNtcNv8pbg3cUwejyrIG/eG+cH62/ybaItEnLHYazjOT4jzE/NmJ+syYqX8
QNwfuiFyAsvkdkiCy3JznOAnxl6NebNTdJmwSs4Xd4xuqJwEb8Vzld/mC6G9
XFiezefEJrmOvDLOBZLGHqYtcJKfFPeK9UXyg6gev0OeymeO78N/TT/TV+c/
5EuiC78jfibuMH4Y34cmjXcY55qOjO8V75Eul4fQwrQT/YlOoh2sF6Fz5AE0
F20d/2+hY+PfLOt16Sp5BH2cdqe7abI4T7QlTvGN9Gv5yXw5fjH/EGrID8rT
+DuxWq4hf8SXipm4R+Xh8ZlYLndEUd1c+V58JdeTP+OfQA9+D51Gk1v7H9yy
bjM=
               "]]}, 
             Annotation[#, "Charting`Private`Tag$45073#5"]& ]}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"Backward Integrate feedback solution\"", TraditionalForm],
          PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1c\"", "\"u1c\"", "\"x1c\"", "\"\[Theta]dot1c\"", 
           "\"xdot1c\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[1.6], 
         LineBox[{{1.4640755751631789`, 2.124211027563954}, {2., 0.}, {
          2.5954715831520234`, 2.124211027563954}}], 
         LineBox[{{3.4045284168479766`, 2.124211027563954}, {4., 0.}, {
          4.661635092391137, 2.124211027563954}}], 
         LineBox[{{5.338364907608863, 2.124211027563954}, {6., 0.}, {
          6.87169610025, 2.124211027563954}}], 
         LineBox[{{7.12830389975, 2.124211027563954}, {8., 0.}, {8.9685512225,
           2.124211027563954}}], LineBox[CompressedData["
1:eJxdy11Ik2EYxvEXM+lk8Q7qYB4UZlbUHJvZqpXt0jn34cc+pNBaIW+JGYF0
UAQVDuwgs6DCGJVaHhgidiKyrBi8kyUjwUjKxEqSkTqMsZYtpFZp3hHeNzw8
XPz4Z0kN7to0QRAsi2/p1zz5oMgUN+H25Wi19EuA8Pc20//vtmCHzrBuvvW3
cXlvY74d3bfqzGdP/yRXM9cgtarny8vWBXItcx1S9Y3VsdXfyfOY74SuN+Fv
Hpgnz2e+Cwt3FS3rHybI9cx3wzKek+oNx8n3MN+LvjlRk66PkRuY70PW625P
u3aOfD/zAgy06B5cPz9LfoC5EVU+tajKmCbHSvcCp54Fg7bRCHkh80JMHtH8
eDc2RV7EvAgXN4qSeu1HchNzE5T3/RHH9HvyYubFuPEtoLqQNkFuZm5G+tGb
qc6Tb8lLmJdgg6Hed0z5htzC3IKmGeXBNclRcitzK5JRj6pTfEVuY27D1zMT
NVcej5DbmdsRvBOK53YNk5cyL4UvcCnn3FSYvIx5GQpCV2NNJ4bIy5mXI88e
aTZtDZFXMK/A88FG6VD2ILmDuQOzYWNCqJTJnSsdToy3GWfypcCye5nLTkx+
drxwaZ9S72K9C4djYzWPrvmpZy4vuu24wmnto97NejeiyU+efn0P9cxlNxo6
4m2B7HvUV7KebS/b8v/9B5j0whk=
          "]]}}, {{}, {}}},
      AspectRatio->NCache[
        Rational[1, 3], 0.3333333333333333],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->400,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 79}, {0, 2.124211027563954}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.8641430640893307`*^9, {3.864143094166597*^9, 3.864143104412281*^9}, 
   3.8642366910449944`*^9},
 CellLabel->
  "Out[111]=",ExpressionUUID->"ee36d47d-9a77-49cb-af7c-de2cd51b2490"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.6932001957221802`"}], ",", 
   RowBox[{"-", "3.7085182878293534`"}], ",", "1.3200362457348402`", ",", 
   "1.3200362457348402`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8641430640893307`*^9, {3.864143094166597*^9, 3.864143104412281*^9}, 
   3.864236691116971*^9},
 CellLabel->
  "Out[112]=",ExpressionUUID->"a044dbc4-c085-4c07-94c3-2f97646cef35"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8638909789768496`*^9, 3.8638909843991165`*^9}, 
   3.863891412317354*^9},ExpressionUUID->"e3b56381-3091-428c-953b-\
8049828b4235"],

Cell["Individual Test Benches", "Text",
 CellChangeTimes->{{3.8637030744782195`*^9, 3.863703080794203*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"78f72274-21f2-4a3e-a828-5906a5fe2643"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  StyleBox[
   RowBox[{"n", "=", "20"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Tau]", "=", "5"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Tau]1", "=", 
    RowBox[{"\[Tau]", "*", "1.25"}]}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"A", "=", "0.2"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"order", " ", "=", " ", "5"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"maxIter", " ", "=", " ", "100"}],
   FontWeight->"Plain"], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0.7743962606925816`", ",", "1.2185230464544645`", ",", 
      "0.8019600148983077`"}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"InitGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}]}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
       "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
       "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "data"}], "}"}], "=", 
     RowBox[{"ffCartPendulum", "[", 
      RowBox[{
      "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", "order", 
       ",", "maxIter", ",", "InitGuess"}], "]"}]}], ";"}], " "}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1b", ",", "xdot1b", ",", "\[Theta]1b", ",", "\[Theta]dot1b", ",", 
       "u1b", ",", "J1"}], "}"}], "=", 
     RowBox[{"testSwingUp", "[", 
      RowBox[{"ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "u1a", ",", "A"}], 
      "]"}]}], ";"}], " "}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x1c", ",", "xdot1c", ",", "\[Theta]1c", ",", "\[Theta]dot1c", ",", 
      "u1c", ",", "J"}], "}"}], "=", 
    RowBox[{"testWithFB", "[", 
     RowBox[{
     "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
      "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A"}], "]"}]}], 
   ";", 
   RowBox[{"p1a", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1a", "[", "t", "]"}], ",", 
        RowBox[{"u1a", "[", "t", "]"}], ",", 
        RowBox[{"x1a", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1a", "[", "t", "]"}], ",", 
        RowBox[{"xdot1a", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1a\>\"", ",", "\"\<u1a\>\"", ",", "\"\<x1a\>\"", ",", 
         "\"\<\[Theta]dot1a\>\"", ",", "\"\<xdot1a\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Feedforward solution\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"p1b", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1b", "[", "t", "]"}], ",", 
        RowBox[{"u1a", "[", "t", "]"}], ",", 
        RowBox[{"x1b", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1b", "[", "t", "]"}], ",", 
        RowBox[{"xdot1b", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1b\>\"", ",", "\"\<u1b\>\"", ",", "\"\<x1b\>\"", ",", 
         "\"\<\[Theta]dot1b\>\"", ",", "\"\<xdot1b\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Test on dynamics\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"p1c", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1c", "[", "t", "]"}], ",", 
        RowBox[{"u1c", "[", "t", "]"}], ",", 
        RowBox[{"x1c", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1c", "[", "t", "]"}], ",", 
        RowBox[{"xdot1c", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1c\>\"", ",", "\"\<u1c\>\"", ",", "\"\<x1c\>\"", ",", 
         "\"\<\[Theta]dot1c\>\"", ",", "\"\<xdot1c\>\""}], "}"}]}], ",", 
      RowBox[{
      "PlotLabel", "->", "\"\<Backward Integrate feedback solution\>\""}], 
      ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"p1d", "=", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"data", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"AspectRatio", "->", 
        RowBox[{"1", "/", "3"}]}], ",", 
       RowBox[{"ImageSize", "->", "400"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"Grid", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"p1a", ",", "p1b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"p1c", ",", "p1d"}], "}"}]}], "}"}], "]"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{"{", 
  StyleBox[
   RowBox[{
    RowBox[{"\[Lambda]1ff0", "[", "0", "]"}], ",", 
    RowBox[{"\[Lambda]2ff0", "[", "0", "]"}], ",", 
    RowBox[{"\[Lambda]3ff0", "[", "0", "]"}], ",", 
    RowBox[{"\[Lambda]4ff0", "[", "0", "]"}]}],
   FontWeight->"Plain"], 
  StyleBox["}",
   FontWeight->"Plain"]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8637030916107454`*^9, 3.8637031163048553`*^9}, {
   3.863703146634164*^9, 3.8637031467241335`*^9}, {3.8637032271314416`*^9, 
   3.8637032981877384`*^9}, {3.863703344313999*^9, 3.8637033675275803`*^9}, {
   3.8637034246933155`*^9, 3.863703488801831*^9}, {3.8637035225560446`*^9, 
   3.8637036066221848`*^9}, 3.8637039678437643`*^9, {3.863704003356416*^9, 
   3.863704015206629*^9}, 3.8637041910564413`*^9, {3.86387938554615*^9, 
   3.8638794077180634`*^9}, {3.8638794473054113`*^9, 3.863879456186574*^9}, 
   3.863879487594535*^9, {3.8638795768290167`*^9, 3.863879601771044*^9}, {
   3.8638860815410876`*^9, 3.863886103615032*^9}, {3.8638861483497353`*^9, 
   3.863886172621978*^9}, {3.8638914447629833`*^9, 3.8638914562922993`*^9}, 
   3.863891796977415*^9, {3.8638918475872407`*^9, 3.86389184764522*^9}, {
   3.8638937946529503`*^9, 3.8638938135878987`*^9}, {3.863893847458075*^9, 
   3.8638938597471466`*^9}, 3.8638940187133408`*^9, 3.863894098689779*^9, {
   3.8638941539631133`*^9, 3.8638941576359406`*^9}, {3.863894255027814*^9, 
   3.863894255155772*^9}, 3.8638944064184275`*^9, {3.864132884995618*^9, 
   3.8641329073813734`*^9}, 3.8641331504876966`*^9, 3.864133195282199*^9, {
   3.86413327929601*^9, 3.864133287553337*^9}, {3.864133332576766*^9, 
   3.864133353182098*^9}, {3.8641334403238955`*^9, 3.8641334566426144`*^9}, 
   3.864133562247438*^9, 3.8641336317199535`*^9, 3.8641336640694847`*^9, 
   3.8641338838003726`*^9, 3.864133916131909*^9, 3.8641339918014193`*^9, {
   3.8641352038731537`*^9, 3.8641352725329356`*^9}, {3.8641417727182617`*^9, 
   3.8641418023916583`*^9}, 3.8641418403363776`*^9, {3.864143075053784*^9, 
   3.8641430827452946`*^9}},
 CellLabel->
  "In[146]:=",ExpressionUUID->"b5dee5c3-2101-40ff-b338-91333f517d06"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "ncvb", 
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"t$68145\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"t$68145\\\", \\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"3.007734791797338`\\\", \\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"21.60501519861934`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"0.000035103047800017`\\\"}]\\) for the integral and \
error estimates.\"", 2, 151, 18, 17529877150787719142, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.8641418424896803`*^9, 3.8641418769335337`*^9}, {
  3.8641430843027887`*^9, 3.864143091483465*^9}, {3.864236695261631*^9, 
  3.8642367170755773`*^9}},
 CellLabel->
  "During evaluation of \
In[146]:=",ExpressionUUID->"90ed08da-a75f-4631-8aed-9a4f0b2b7b76"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1:eJxMm3k8VN//+GeYGWNfRkIqCZVKlEq211GSbJVW2VqEClnKLiqptBBaFfWm
aFEIleJesrVYQhGSfScMZqzzu5/H43v16x+P86Bxz7mv8zqvl+fzLDlyyuoY
H4VC4YhSKP/7qhQ5kxi/6JyBY8/xJVIhbDDNFbDsdMYgk/PmLxoYhTLRDYI0
u0q4ytxitFJ1HDZHbsWTd9RBLdaamUvnwLE1k6Kaos3wclGYoPlTDlisODYs
s60dSlOcWAnzuJBRE3zms3Y3NB98q4xv5oKulNprWkg/8G/hPGvV5ILzVPTD
JweGQD/jmYVREwdOFXete20xAg2L1tudsuJAxEGGyozrKNy1aKe0eI/D0ZJA
J02XcTDWKrb0sh2DfAG5XSetuRD/nPP1+iwbNCVDb/ecnoTckY0n2lVG4BBb
f5Wl6zTEO7O+aIsMweP4IgXO9VnIat9zfzC/F97c0GmosqKgB1vbXlSNtMPp
HP2dD82paP415atvK5sA+/Jk5IoNHzr5YQF9dLgajm/blHv8AD+6d9vIJeZi
KTxI0cw6eYKGcvOMt0UcweEmO/echy8dqRVmhXuwC6Dz+RkfFy8G0vM5WJ4g
WAGFxtF3z58XQI7xD7MTHtQDdUd9a2QoE/VTxxsZTW1AMcymPvIXRPocW+xe
fS9cns+xqLokhAIM/k6dXzwMHgePFnAuCKMhfQfrGjQKLee0HOGWCGrWq//r
qMMB6Zh79Vcei6IGd8cFL4sm4KmEmn9JnBg6N9I0c3toCvK9Fm9d9kIcPXA/
PXpBdxbiFR8p6O+RQE5LVt+6pktBuUGTFJdKCbTj6lTsBXcqWmImML10vyQq
WqYTc66dD2VWrLj6q0YSGW+tixw9TEPXimc1FO2k0HdDX2s9IQaK8e45cahR
Cm2MXO+uFSCAguYtEleyZiGdtIq+zlgmeraC/uV0Mwtx5iW0JywVRIxRqly+
vTSSXW20Z2qJIErWSD8b3/VvvOLIc8sZt3lz44bt7zP29v0bVyUGrAZvmbkx
980uPaWRf2PeO6+scPf5c2MzDeOtQWP/xiV2a46f9JadG79K8+DweP/GX242
eHY7vwbTLysLjIn1Vpx5+2BmQym4rrBzLI8Zg8vlue1799XAqzKMUvxwHBgc
hUHa+kYQjRRJF7fjgPXL17ylaq1QtuR6sUQnByghnuuGoBP0OZll+9dxwYe9
W6rLpheS6L4xdcT+CKMtH1t2dxDernq/LUiCC32Hcl3Udg/D5KC+5nQCB4Ik
fFfts2PDtbD067H94zAukb/1zokxwCOct/gNj0G08xeb8kMcsPwlsk7/7Sj4
X/vmreY8AZf0NJ6ixWww4XNoifOYgvO7y/6bUh6G+wWej1k1VLRx8hItQfkX
SF/5Wzvxiw+laBlrXnOrAD6/9e9PtPCjyEVu0ZKqn0Cm3HfB4BANSRikXh7b
jYNehVxQ/ygd6VldT5IqK4Ef3AuXzkwyUJ5psaNYTA20mmbrX6Ey0bgj/z0P
v2aQWDhqgT+QQvMvfHNILmWgy4X8+vnyLMQ98aR5TJqJohNuun59wELXs9b2
WHCYqO7GheH7i//Fw77oX1/XJP4b6wjsTMt6/+99fda58L7fOQFkVQ3Kd7ay
oXXg92G/sU+Qe3vlQdUtY6A2ODH+0roKVisuecQ9Og7KWzT379tM7MNhASf1
dRz4M1AT/nxBC6wrK+paX8oB1T0noy9s6YCZCNsRQ1UuSLd3bzlg2gN/Gsu3
9Btx4ZDwCqvbVwfgDH1P1talXFihvpy/+8cQyOWwCvnyOeBzck3a+R8jQFc6
Mlq/hAN41tH1X/pGgQXzvw9qjUPA/KUtIe3jYN6qHL9VZAwWfvFqNW3mgsk8
R7V50Wz4eOXvh4KRSRA297c7nDIMl/Jq/Q5EUZGrc2/imsEG6H1m2pF/nw99
7hHzkc77DtkOG3V7H/Aj9/6df7UiisD6w57ul6k05LPHbP1yBg5OLX1n1bPp
qCqM40CbXwRN36dn3bMZ6NHv09/0e75DtYlyH71AAIHjK+FLmb+h3NMfhoKk
UG1NXuTTEwwk9mC8OmpKCh0+Wi986osAulRfmzsewEJhjomFYt+YCNkW/hag
/Hs/sp8CtgxcfwsN9TZ2a+6Ngp1IdO15v29wcGA87+SfMeh4da5q1uonPMp+
cv5F9Th0P2defLOsCVI+r1zneoED1Sci/B5qt0Fo4NGEJh4Hfj3zrbHV64Ji
ZqdKox4X6viw5jNufUDJ9I46R4yfzajefZ/0F4y+djieneBAaoxVuWvlMOQ9
nfdZOZADF7LyUlZ0sGFib4v5xYxxWOW6aJ9jD7F/qOj0wWdj8LJY+Ev5fD5U
aCAeZOX/EwxcYr9oyvEjmauJe54WfIUdUes29qnQkLr613V7XfOhpvm+5Rot
OmLoLCtIssgHydxt/s/XEfk+pHbtIpWv8G2xsESQgQC6Fn5uT2VgLViVuttG
fZRCKqMbC04vFUB8AxJPhzexkGcb48a3A0wU72i24FEeC+3/eShCdJ4gOpW/
ma4O/9az9FqVyZhzJKipzPrZp7PBqNOjMKsmH5bePvuuSXYMpmfmhx6w+Q5P
vznfjdk6DuuOfxDmmfyCmBaXvG4FDvx3w/mLW2wzuKc/k/z0lgM5Bt2GFkXE
ee0j1Xl4EReO2r5pjMrvhk97Enl2RHyX33gWakEfgOChh+ZyK7lQGmtXaXxn
CHzMUgIWVHJg5K7wyN2bI7DFe1wihzh/VJjrU4++HIUlcW7m43vGwf1UReKB
p+Ng6B7rO6Y1Bn+7i+QaHnDh5vkXfPKf2eBTtnHFzzeTYJ2/cMmfrmE4+zGi
PYA4d8LLNsIH29+wR4fbpxLIhyxzJf8rraqCqN3a088C+FFwUAykjBXDpOYn
S5FrNKSTvmdcbzEOQb17Qitu05Gtw9Vb+MgnOGLwPudkLAMJL/qTwE2thG/b
GgyN/hNAHiig//HSRlitoKfNdJNCWArlvwwdBqoU8Ejg9kmhgzOFIhPEz/Fx
A5xETrCQgoDtsT/pTDRa0L7bYIiF3kqfuvBRWRDNbtXKG3r0BpR752lbu41C
Hk1FB9//BWZUfvnq5oxBdl6CzfM9P6BqQb+D1vtx4FRGb7JV/w0RNZOTqR4c
uC288OOh9FaIVfc092dzwDV29IJqXidorRMLuqbNhWWBV/xftffCgatP8tYj
LsicSy72WPQXFsWVeYXRuWA+eSnu681hWHdP54jwDeJ8abvfC4/Z8Cqs+9qy
ynG4mfe3bIaI689pf85QyscgsTBv/fAYFR0dTRTf+LUWnnENv9+a4EOM6788
ZiLKYHmYFvc5Pw3ZZdXaFmoUwJn9glk3pOhI6es3a6MPOKgWpwWYSTPQ8zNd
bRePfYad10q++ikIoCFTqsQM7weke2nuTXkphS5ay+WfG2egogMRntZqLDSh
HZBQspGJZM8PfspKZSFpj7opjoAgUrDYvKXrvxa4EXaD+aSWAzHHB1vf53dA
vtq2AoPVXCg6uejF4uoecOqqvnOCiMeRSylL/0gOgoTMArqzPBcaT24IUMP4
0ZLR96tvGRXCO6POcxYVNPTo1XmJJ/Nx2FV3Pvj6Dzqirdjv2+dQDCK5WvNa
rrLQRZ/wXUZtTHRtLNH5u/i//SXxhaNVj7VB4TLrx0iYC8bYpHJMThdoViTI
GBPrHxExuk1/vA+0S+XdP2wkzu8Ha31WmtBQsUHyIaEqHNaeWNVdsZeOom11
t0sJF4DythSviAoWojOUlQ8sEkTFGp7ODJcQeJ7tJO54lw2nj+Sc2VOIw+wt
O2Fd/jFopycbqTdWwvll0hKUDeOgE0Rx2v2tDjLbyykekhyg/dFwrdjZDIuC
rRcuf02MM5/KrQ1vh2cve8oViPWIuCu7YnVwN6yxnOalbSHqicqe+SsK+mHl
C6f1CepckDXhbhj3HYJtbtVfLYj1Tns9IZV0agTaU1il7405cCB94fG0a6Mw
EGA8dcNxHFziVOhbLxF5xCeGv95kDA74nVq/NJCYd1FKEr2dDXv+NvxxiJ2E
yEfBJRICI+Cv6yh/zY6KKqydhWVlmiCCb8ff/Sf50BT2/pD84WoIKnvXeOU4
P3rwI8NE5X0JmLlNUvUCacjKLJAvURcHxilBquIlOhJdefbLGfdPkHT6juyJ
CwzUfuv1hPT8SjAp2eB2NFoAPXBMM6uzbwBbz4da0sekULDfsv3hSgyUkbvq
4qp2KSRf1fA+74YAwsK/6dw5zEIqob6W7xOZyHJ89IZ1Nwu5tp7ekEzsXy+B
m4Fez9Nh7IPLKGffKPwNde+z3/YZbiZRWlclj0FCsbpi6I8aEH/vaPjgxTjM
ttXGpKU3wuCrt92TThzg2nTaFbi1wnju3lMd/RzIFnxjIxzSCR0dT3PENnDB
8u1gkemjXsgO3GL2zJALZQVdduYNg7D/Vp6kEhFfD1KV+AK9hiEyqcZF6Q4H
8iYuC5sRfZjVsPaFsKZxKHSuu2IaMQZHO381thDnZfyWuyf5Oqgou8O7sNWn
DprwuzUlPXzoruL0Kin/cpg3m1kXMcKPHNQOODc8KYDiaOSSR6UjPPiBo+55
HNJNj03F0RhIKHPKqyK6FKILnqzwFRZAduf3OsVt+wHNJdG7MpOkkJ/H7OfX
fxjoqdi2/deVWEjVsWLLbVUm+iGB7qInLPR12xk1KYogOvtQuMPEoQXUB7K6
RYnzoLHpZU78+Q7Y/Z3zuXEFF/qTL3A+3CDqpdYZzzJi/z773J2TUz4AzZ0y
FRzivPnckX1Q6BU/mtrXGnertRCYoQvXB+fRkBh+pDBSEIdG242zv4voKGrQ
0qgnuwi+mIX3nLzAQuY3BP4I1zGRl3z+T92gNgja/Uo0jciHUVrvp30DuyD/
+/KWVAMupBdbx/5K74O7qmtLkQ4Xjsi82Se8kYZ2WYdub5bLhwtPjsbxjOgo
U2+e7NTTfGj5MWE8r4SoP7cce7FGXhB5fF5xwoXWAQqdw2buSlzQU7SMGqX3
AP36d7kSYj7zLY73eJoMgPyu5z92LuPC8/GrcY0PaOjdS6/jx0RxMDq+Ivqc
Fwu9G92puxtjovuRNbJLuSzU9iXm8y+i/1FavOGl4UwnbOi8Ml1JPB8FlFdL
reiD83/HG4KJ59cTypz/VZqGzFZ2Re/+nA/KClVUh6V0tHngKUuKh4MN+8Ff
tWwWunNpMp0rJoji17y3vzC/F76XVSZ/Iva/s+Dr8oXNNGS7euTRKQ0cdqi3
oX2xLJQSf/Jb+gATTW/Xs3g10QVnJQZSk4j4PGIZOfVIpx8WGjSfHNbiwhWl
jFtm1jTEUo4K74rFoVV9TOuREx15X4hndvoXgNO7ffG8WhYK2HO8P4TIn/l+
r5KWu5yCPz7BcsVXiT5F0aF8qR4O0qGzv0y4o1B3ZVD13oNKOCdY92uh+jjk
0ZfGzFyvgyf05RLxwhzQujRPn7KmGf5KvtUueM6BlMGLF5Oc2kF+4zCtYz7R
528w2zF1sBuqd2iLGhLzOzR8pe32o36Qt0zU267BBfzx1l4LlyE4L6UUVlnP
AYkPHonP7EcgW6r5+0NzDgzTpUp+Bo0CPC/8glzHwSm9cv0H33FYqKb77LXV
GIggoy3bTnBhqViB/L5hNmymqH9ICpuEJYrU/eEyIzA+uTNLei8VMXteCxl6
N0GS0+SQx1Fi/3ldvr3xWTV4CU18mzjEjwojM6UMF5XCqNDthmovGnp61e1Q
iQUO5ulHDU1C6Ogt5j77ec0nKIoM39YTwEAKa3bb59yvAMaldj7vCAGke7nU
1mWmHkYXlK+VPyyF0szMWhxlGOg/WWE/42YpND7AsL4QJoAWWY4l2dqxUPvM
CpNjD4j3KR68yrmdGE+/czck8tsqFzi47nUaJAcxnZ+ZjQITWEbqWCkw/vv0
4tLDMYg19eHru1UDCQnZve+SxuG82yR+0LsR4Cm+W+QIB5bTvqqzzVrB0+OM
1oUeDtgYRZcEO3TCxrJdLjlEfBzZu6Rf9mwvxMk1+Gwn+teUtksrct4Pwr3+
+3dqRblgJOCRVXVkGI4lPBy+HceBhXTKg53ubBgy/r74dsc42H381uURMAar
nByds7vHQIH/IuNqIxWFvcE9Q8vqYELZ6GdzCx+qU3Wbf3GkHER0x0one/gR
tjrgcXp7AbhrNBrum6ChOKEJPfw4DuPXMN3CaTrSMciiT6wuhczfsQfG+QRQ
6lXV+Lr+GvDz+rQj55EU+o79Xr22hoHuHFcxTV7EQo+UIb16IRNp1bnwMR6z
0LQZxf3rFBO92jqU5a/fArIhQnS1bxw4J3dNVfJoB4Qa0P1llhP71Th7YYRr
DxxdtdSmg8gHYb2Xw5enDsDCghKFZUuIeFTimAY84Uct10am160vgrSF78Xm
ZdNQdtPyb+FEP7Yk4aYBI4+OJM22OFYdK4LlrNe7NUNYKNc357xKFRP9V/Ak
2fVgG8RdPOJZwccFrVN3XXptumBxTP7ab/pcKHS8lpMc2QfnaOtzj+ty4cBu
tnGgOg3diTJTLzXMh1VbeKfv6NGR6e3ROI5fPqCHSun1BSz0pHHXodz5gmge
TfBnfXs7uJUzNE4pcmFnXmh2QVs3VBaKC8X9r95yE8z6ozoAL7fectQn8rlV
7LIzp2NpaNC54t6sNA6JGlbTxu4sNIZSuK/fMdG2Z7bZGqMsVK+w5vIJIv5K
rOfJZv7uhOHRko6sTUT//Hvf7mZGH9SWrLc+AlxYu21UQFeEhoaip1dgU/nw
7b1bw7g8HV3i6kRXNeCQk1NkPZTOQnJBg8duCQuijLK+sF1jPXDB8lTiYuL5
JJJNU7JqaejaI0PjN0o4vBoTfrEgioXKPb9Wx3Yz0eOwBe8V64n67fedO9NE
/ebTn7/klGw/mEl68zsQ53Oow8jFDzuJ+eiPOSzJwCHiW5SYtj0d/dEU7FM2
LICikBBmUTULnX9XECmiKIh8Jjv4HBK6gV+1cUqc+P3/VdgvT7pAQxeKHbiL
VuHwuNF12Kyfhf4EGQZXEvPXkfuYEFTQC2/v3xLjEr9/0VjSDVUhOsoo9Dng
/BAHn+3z1QOfsdDSMEuzJTRBVCe46/tAWg/cVC8OT/rf3xdaz9l0FNPQwLcU
TSNxHPomfkXR47og8Oti9XPE+rn+8nKKAxqq/i628tEoDufFvjfu+MpCRSGF
144qCKLl5xecUF3eAwZpEatbic/jsx7KN3pCQzccKT+8mDgMnDEPnDfNQg6v
I8MEifMo4ma4dtamXgh7q5i4j8iveSdZYxe7aUiv36K2HuGwX9yuRVeuG4r+
MpbpEPs9usPzScNhGvp9sE/OIQAH5vBqLZ1GFsr4c3xvupIgestcsdjNxQGY
n8v/uF9kgybvyJjMEAZPayofloyMQpWZ1N3yoEpYldYWp6o2DqGmmc+q3OuA
bm6e9prJAfOGS09kFzVDkOJDtSspHJi8eubD733t8EtM4PsnGSLfXHQ80rq9
G5LCHr7lI563nHrwc1lkP/AUrBmymlyItez/5H9oCO5NuRtfa+QAjl6eXLVv
BA6253Re3sEBAw2R8Z7ToyBnNzKf5TEOjnqqluOnxiGIn88mZv8YdCaqm/46
TNQV/AeExjhsyGHWLi8JmgSbV1U7tBeNQNbBEr5fO6nIquBI2cjjJsiQrfQM
duBD/dlNUufLqmFwuVxRui0/uuIUW5q4qxRKfx0tTXCnoSPTloo/9uPgXhV1
2DaQjmrOtfZYSX6CfQtnm1J8GGj0q8KC1l0V0OH0oSwgXAAlBjkODX6rB+TZ
qbnQQQr1bOML2CXBQPLGAZ67m6SQkXKKhX2IACpLFzwINiz0+Tu/9Yu7TFSl
YDjl1spC3q1yMlzi/V6+e/tzjGYalCaY3ZvcOgrS8ceG5gWWQo/Yq6upd8fg
hsh9b0WfGug/U+1i+HgcjDKu1q7Z0winbjkVRjpwAB3QvyOs2wrf53Xyf+vi
wKuWczPZO4jzwKutTYg4D1yTdHg81164fLlLNYaID5nR/eLDKYOAFi8QWiVO
9B+ZMpGzB4dB+PfqgK8POfAtQtex+hgbzkX+/DC/ZxyedxbLhHmNgVPOwudy
A2PQcGRq9446KuJbZVLF49YBo1Zu/8BvPhR9je75c00FXLKel5/RwY++BKq/
lKB/gs28Z+pKYzQkWdRSH2aPg9yrfps6Lh1hlgftDWZKwOikyFDWLAPVzr7e
VIPVQGFJg2VuvBR6s+S0k3s5A0ncid2SqcBCN3ovLHeRY6I23eC33fEsxFdw
1jdmgomK7x1ZFL2qBbjFGTOaXzhQkx1oa7q7A4wqjadXE/Wf0K0KDU+bHjDc
fOpv7//y5+QBV4cHAxDF9gnRJupHXcP5W9Y+5kc2fVd9XRyKIKw/fKo5nYZ+
vE8z5iPOAyM8z14+h44Y0yvXKBkUQZ3PJ6Z0MAtZyPsvVaxgohwZWYmL29ug
qUFY3JrKhXCRy/FLzbugi87m7CXOg/I3T8punO0D0YbWLxziPKjxZME6NSK/
mRlo5+zLB4pU2eGj2nT02ttmHvdIPvylbHTKxVkoa+1PWTcZQeTymCss/aMd
ou6k7zyxmAsHRe9/flbVDYGRckln/5ePzv66LyMzAB4J4LZajQuqR8cOoygi
/4q463yWw4nzwSl9hSsLTdL4LCyymGhRtuLFjSMshPVKW8UR+VCeQ7McKOuE
lo8Lp5SI82DRKg+nkrFeMFIrUC8n8lnqMWkKW4CG3gytzB+cVwCPLuuWFsjQ
UZD4aYv1X3E4vqherPo1C1GeKXWVCQqijwr0u9rtPYDPnjTYRjxf+xnZW+eq
aYg7Juv9UwEHO2vFQ7PXWcjHkcUZ6WCi0SXCf62/dIH0dgPlRCIfh+o2aO0T
6Af86Hp7caKfnwqWOuttTkNq7qmKeD4O9nH2U/wH6ahnvi5WpFIAp9ticpO/
s5DVsttuOosFUeh23jzjG91wJLvhQSuRf3ziV83zCKGh8aeqtdfW4eDXo4Fb
9bJQtu3AmU/E/I1cfmQcTe8Fj2eaFVZEvT3yyStwhE6cB68PocBIHFRTV7bZ
JRPvY+TOB0U+QdR64ER7TUIPfA3MU/hAzE8rfYdJegENvXwuESQtgoPBnc/F
Ble7YNMFvj1yxPp1caLtd+sS/YK7pGwfIx/WenXcXPuZqGcctvnuWiCI1n7X
Chad3wMJj7d++kl83s9lea8kHtPQCZMn6+8I4VB4XsJUYZKFovvlk/yJfBHb
nGD2YHkv9Em9N44k5het09Kyq52GXF8t37dDG4fnL83nnxHshg3rgvOGifmI
0aIfxtjR0LHdiGd+CYe3ezb3KNSz0Gzr2wFF4jyI7dLUk3bthieSjiqBxOcp
6pUOCvjSUKuP4pbDRjio8L+3O9TJQizxop+BxHqNjz8QSgzuIerJd+ENxPM2
WvYt2Z5DQ7Ohe3qzBHAwPuWc2DDaDSGXbTTfEN8/W2R9OeUuDZmeuG30WwIH
jwd3u1aMsxCN4yOqRnxeytkqzxOMXkh3TCpmE79fry7oQ08DDaXM8CfqrsBB
RuHk7tYfLDS4aKN7OXHeu7749tc3rRtePv6psOl/fw+l3NStu0RDO1ncOGsV
HL5UpChtHWSht/u9tMqJzy/P2ZjHKOiBqYA/r68QP3+Nleku95WG5PP4aItZ
OCxax7cfNvXA1Q9eB3qI76tHKP3we0ZDWwo7PbnE/pc5fvml2CyRf44ctbpC
rNeB63Ih+5tYKK7zFUPzf/3i//Fa1S0zZ4o//eO1l6KTPnuF/J7jtXqXk7I3
K3/FSF4r9vGi/POTnRjJa8+Y7oCFcUMYyWv5GIs/tp1jYySvVRHJdaiex8ZI
Xuu38o5vk9ggRvLaVVqLa6b/NGMkr31Xgpf+yUnDSF6bV28i8nxj4xyvVf8a
6L6E1jfHa09JP7quIjAyx2vNvq5duZnLnuO1xR9Lb+RdH57jtfMOlhxpK2+d
47WZ6Zf/3KH/wEhea2IgtPmN6zhG8trCa8H5tX0UnOS1hk3jatemKTjJa+ed
PPDF6DQPI3mt3BaxoQYrHkby2sXbr90KHaTgJK/9/XyPp6o/FSd5bc3to4mP
nTgYyWsPsQ7NmL54j5G8djs7Of5x18gcr23fKKjlZj8zx2t3BC0JlHxGQSSv
tQy2bY6wpCCS115LrDCMf8ib47V2b5nI6hNvjtdeUw19t9rmH6/du3O75rAd
ZY7XRr5YMrLz2gyQvFatbL+v8yDRj/8fr6WM3u4YfH4VI3ktrPYfGFWdwEhe
m6zfea/1LQMnea35Gx4ueISGk7yW8n//SF5LjkleS45JXkuOSV5LjkleS45J
XkuOSV5LjkleS45JXkuOSV7bGKQ6quXXO8dr/dgqeU21OXO8tjDr7FsNiyaM
5LXDj+Rn1U/2YySvrTOFv+O+IxjJa01POf7RSGdjJK89bYOvHz0zjJG8tj7Z
5dYeThdG8trEuskmPYtqjOSzhlUmETmD7XN8ttZ1RfMNxtAcn22ImjeUd+4f
n/V4hrK1rdhA+XwuSSl4BrguI7c6r/QDzf7h8fJ7PLjryc4S5pRCrPLHee8q
KKiG7bL+rmw/RvJcIecHae6MWYzkuZWfNDWqrKg4yXMZJbafT2hScJLnnrrF
69dcwsNInnsMd3e9NMjDSJ67w+2/jdtSqTjJc9tF/hjK9vIwionJyPwZJtpU
zYgN+9uDGb38uew9RQjVrGXxL3vfDtPaq5kddGEUklpDSxCcgOWDZjFxIiLo
Y6937Zr5FBQg5JzguEAUSS/cNhz7hIJ+f295lrJIDN1qSJY40cWDzHxlB9+l
4mh+/ON1Kdd5wOu/49AtLYF+JUQ1XiP+/yvLshtW0RLI4cePePWzFPS3LXS2
iCWJKs+wMqxf8uDE9bufZm9Jog0Fu1JOlkyAopl007SsFPLrze/uXdY5x6P3
0JecGfrajZE82mzpkHOaAx9O8ugkqbF1bxETJ3k0GW8kjybHJI8mxySPPuDE
tHjlMjTHoyWmj1UOlHyf49GKqPbaVq2fGMmjw04s+x0a1YORPHqHV/x3vsRh
jOTRfttEnIwy2BjJo4MZ6VMXD49gJI9+QqHK7V/eh5E8mj99YPxNUj1G8udd
Ri2rvO61zPFnhZutO+2fDczx564y0bCPLSNz/Plys6NBeykbNJocXN6NTsNK
2tJupQVDYHVW81MriwcWkw7JuoW/IMk60G/rTQoyrw1MXm3WhpG82jzD7evT
gEmM5NUz7hR3VT0qTvLqMrNTaEM8BSd59czzHTeX6/IwklfXPfM+mnqLh5G8
et88uhPzKBUnebWO4PUo1y4KHmp2s7c6j4lMLOKD/jqMYP/5FMeuyhVEmYd9
X4+yqmDzcqkXDcVEfmYMJI2tHQfzpNrn20uF0Ysnlzy3UXmgXlxGtaoTQaOD
tgefZ1GQX4b+ZrlmURSaNxQbJU9Bq48vc034I4Ze8QTwm9d4cOjpMr6gXnFU
lHd6qd5fHjx9m/1jm7cE+tJlG17gRUH70nJ5MiMS6M2e2ohGJQoy7q9wuOkj
ibZdF/n4s2sKTogmaPWNS6IIW6sFq5/9nePtHhlRrsue1mEkby/YMGj1bBUP
I3l7tmDHtz/8TJzk7WS8qX9y8+KG/huHZmDXom7/i0eSv6MDeExtaypG8ve/
k/H28wdaMZK/LzeO31XKHcRI/h710CB6qSwbI/n7zZ7iEMWzbIzk76JuV53v
7hvCSJ7uFfjnQbx0Nzx/6/lT4TcHIrN80o5JD8MPS1W60OAEPMi63ZHczIaa
gHLGmcEp2K446H0vagQq3yQ2X6PPgs3W3VnrpbqhPp7G/C1OQRQn/zUKw0+w
sL/TGWpiVMRSPeO+7cAIRvJ6qeCVp0fNKDjJ6+uPMV4Ob6LiJK+PO7Vk+nMp
DyN5fes2lbWLV/Awktef27VqPcudgpO8fv29gb8hOVR8xNwkSsSQiaSOK61b
OTuFhRrxJmx0BdH598H3Wix/Y50tnTlbjYTQZma1Rnj+AGRvNzk2aCSM9C9t
oDq4TgFNGw8c2CmCbgRUadX4UFCJJUXf114UrRc5fu9RKAVtHr4oqW0nhlzV
uyMcP/JAR17JaoezOEpIsK669IgH5QyFvGgtCfTj2UDAGl0Kyu5o22aXLoEY
zevzq/wo6PJ8o5nT6yWRxObC0LDqWYhUP7zMNUsSFSVYCWsu4cDPy1cuielK
IdRoRi2p+TnnH0TQ9VtlP49gpH+wJqL8rkUZDSf9AzG2SmmNigBO+gdk/Iza
NFfXN/6LJ9JHcMtdlaIsMTLnI8zkb9U5d6N2zkfInmZJ6I9+x0gfQem7FJ+6
QDdG+gh3FlSc2aEyjJE+wpCvSs6GR2yM9BH0d6rZlBSMYKSPcKecLRP6pB8j
fQS2/avv/TpNGOkf3J1RPu+X92fOP2jrrUsPt++f8w+sz9I0rQNH5vwDzz27
n+r1sKG029L0Qto0mMycqUhrHoKAG1N/+ytnYbt9iYl28x9YNVq/QoTY13il
eKl70W+M9BUS9t8C6nkuRvoK/31NjitdQMVJXyEr/9U9hUoKTvoK7vH4cbk9
PIz0Fa7oPM9Z7snDSF/B8+Bem4ZVVJz0Fd75Ja3fokvFUVlWZ3oCE4n5lazN
HR7FvtsYmDnFCSLECx0cTn0LHQlh0/uShdDJ9NpTVXGjYB/yMFvxqTAqFVzE
ZMEsMJWpb0qzRVBROH/VqTcUVPzfyRvfcVFkkX7Vs1yLgno/pni9yRVDWzPU
w35H8yDqWmLi9y/i6P4FsWWL63ig5LrSv+CoBOI/f3Ray4WCImRsQ6FFAk26
9zxMNiLq8ri+1HonSWQy3NtXVzoNke7tDq0dkqjZTGTRw/HhOd9CYzf/Eora
Z4z0LZD/twvbtKYx0rdwUAnAIgMFcNK3+FS8M9LCjQ+/3/C2qPHUv3hUvsyZ
nAn7F4+kf6ExOOObffP2nH/xUTjoQ4ZUC0b6F7H6fpXlHwYw0r+4OCvSkl8+
gpH+xVOestnAQzZG+hdFJ+STzvcPYaRP4bJrMRK83Anx4ovujcVzQGjS20Ij
egiS3fz17j+fgN77W3Q+vmfDjTyZ05dfT8FZwfInU5Mj4JIXXbA/fwY09o6b
3HbuhUaLar3CRh78erUzQXB/FohE2DoOD1LQkbSMXd4bhzDS19hxdb5FYDQP
I32NstrJk8lmVJz0NWgvT5b5TPIw0tfY3Gqp0KjIw0hfw2xFOmXxSgpO+hoL
1eDO049UvNeM12m6hInstworhAjPYqh46fgmBUGUcHxB28O97di8EnvPECUh
FKX6U+qqTQ9Y5+dkH1cRRtseOPy3b/skyLDCLxWqiyB8OMdd2YKCHr1cNzig
J4rK3WayN92ioKiWN3ZD+mKoZpFK5fVKHnDcEg8c3SqOQPP+F3YsDzonft3I
VZZA+NmE4sgVFLT2/oG+2scSqHfnLbGOYAr6GNwa/FBZEkUf19hz1ZwH07+D
zmQ9kUQdGzfjly9yYaqnPIOuJoXanYfv0v82z/kno5JrfQPU/mKkf5L3a9Da
PIkfJ/2T0vYzBgvaBHDl5UcDHdf8i6c7mrKbTb7+iyfSTzll/+LgBGsEI/2U
1enbC9hv2Rjpp5yoldDzHBnGwjGfRclKHNjl4/3mZ9sgmL1Y/CJn6QQc+xkg
GLCJDXzGyZavNafAf8ZpffZtNtyt9ggf0J4BJ9YTyd3+g7DS3fl23T6iDunc
u9LUvBqicGXRDRlU1Ljpa0+a1TQWIvewyS6HDzmf1lWUsaTipP9iGjC9PdOF
gpP+i7j/Un4RNR5G+i9HcMH/cjEedvAY2uJVx0B7o3OvP75Bxeu3u8WWtAgg
lzvOfkeDKLj3TcumkSZB1CifQX8w/hsS0hKsD3US51uF8Pq2lxzQ+SyZ4NUr
jDZfytpt+pQHe1zu72yYEEGp/mJv36VRkFqB+PghnigabO2tOE+hII95T49d
pYoj9/XvJmoieCDbvFeDRZdAty9+PJBEJ36ef/PasvMS6N2Csy+MAyhIyXRx
yCCfJNJetKj1xBgP6vQyJU3CJZH7PVnN8q5JMNMIZq4QZqEdEq+42jQqTvo8
ybEFiy+ZMHHS5yHfH+nz6D+/INWzm42RPs8nfrXdpbvYWLZDEctoARe+xe+x
jogaBn6N6jJ/zUkwMrKTyhtjg/zG8HuHV0+DID9TZoHsCBTfThjer0lBKQfL
ftjcKMGySw/Yv9zEh/IGoZbvKQWvqe38VKbNjx4zNlyXXUzFST8o4yIt50Uc
DyP9oHfHDGtbNvGw6TdNvoK7GaiXqrOq8jUFN3ljuSfkkAAy1tP7+TKJirOq
frC8HYVRevOODWu9p2HEdvKUjLcIMm8/mbyM2F+DQ9+uUkJFUbRkkBlO5ONR
yoGikCAxFPHOqH7HCx6cLX5kpntFHK136PJUSONBNst+wNlIAh0B/gddZhSk
o3kqqRWXQDkB8Wsd3CloT/qTIHNjSSR/L0Xxj8EsKIVs/aVUJIlS6YcLnt4b
Azh3p/7KdhbCX5uz/vtBx0m/yXdRvInfLB3fFZ5yzG3w3/4hfafvGm0lTt0j
c76T767ST3Hn6ud8pwcj2r5NNyow0nda6rCg8aVuF0b6Tl/YO0wKWoYw0ncS
NxNWjY1mY6TvZBT957Pc4AhG+k5uRR8+59gOYKTvBNKejjm8PxjpNzleXtSL
Zn7P+U2PFN1eab/pm/Ob2hZ2zvZtHpnzmyb127a2jLBB2t34g8uNaXARVhVF
OsNw4/YhhtfrWbgwXLTF91gLeORHnD91hIK6td4X+h/5hZE+lJg/VpkawMFI
H2rosOHfajoVJ30okep0qSVE/0L6UJcXHGbtPsrDSB+qNeG10NrDPIz0oXIb
Hm68LkbFSR+q/IpdyW9bKq4oVtquGMVETaU2LVIa45iLZYDqhQhBRFlfXSz5
wQ3LbtB/EntHCJXsl/LeX8SGLtdQPZFbwujOT8XqR1UzMFp1X5j2VASt6dzm
s+c1BQ3cP5+5Ol0Uhcdn6pUaUlCpU8+Z3Jdi6L1vWnP6HR6khBw+PZ0jjt5b
b1NyLiP6oeKOLzwbCfRyz6MczmEKStr+Aq+uk0C+nlvcd1pR0AnviT08e0mk
9sh7epX6DCgtvjRm95voz+m+kd84I3M+l8cx9rsrmTkY6XMtn81/UPJ6EiN9
rt0zcfJPFAVw0ueivFFmmfjw45Vdtn8tnf/t/3EvVoZW0L94JP0uxw1W7tZq
aXN+V7zLoqN1i5ox0u/yf7siYmDeAEb6XdlwW4fxZAQj/a7iiKS6xc/YGOl3
heu9P1W1dhib87WUXsr0feyAu7qnJ1tCOGAsdPNMuMUQSMwoHWi9PAEaX3RM
qxPYcLI5R00qagoWr+7O4S5nQ+aWiHX6CTNw19tec3FIHwzt1d69/QMPivWb
NvA68mHnfpHcPX+IdZ2xM23eOoiRPlj8dcO18d9nMdIHMzhwTjdpJxUnfbBU
o+f7ns+j4KQPFhTtrzi6mIeRPliDv2EIJkjBSR/MTTdZk/aWijt9PSh1QpKJ
zn9xCG+g8DBFgQ2jKSKC6LHumc4slS7s5fv75g8khVBmQYRVjmQXqM14OyTP
E0Z+f/SHZFInIIFyXDRtoQj6RPf/jq+joOs2ZcYrVomiHcxXD2cfEv3Mry8X
zNXFELtqwcmXDTz4Ob/dxk1LHH1dkHA4P4oHXmxtTpWCBNIsmX0TrUicJ6NS
+vPuSyDqMjXPe2cp6GeaZp6mAlEfJF0z8QrhwZusCIX6h0S+CmvAc9Qm4MZ9
T5NzS6SQIl9Zj/qttjm/LeN6vtORiT6M9NvCSu/9Wkrnx0m/TfPcEzv9hUz8
rI13dsiyf/HkoqA1cbbgXzyR/pvawJkQud/DGOm/rc58r/csm42R/tvTdVFX
X68cwUL7voXE8HPAySL00huTQcjU+VzMxzcBtWuEDIPF2fDH2Yy+SWoKSvk2
fxLPYEP7ARdOlcwMsB8fz5ey/wsGPt9e2q3nwVBTqHdMzE+4BrObtz2mItV2
Z+r0iSkss4XdEvmcD7kYcurrjKk46dfdO+dl8PUCBSf9Ok7yhp93NHkY6dfR
/pwwl3jOwx7ELXrsUcJAMgaU5xYBVHzf51Ks87sAmtCkPWvOpOBCYRHvxcsF
UfXMY3aAeB149B/gi/8phC6IybTHsMfhU/aosv0vYSR20e6l9X4eGM7XeibT
I4JE+N77CGRS0K4cVYXcv6JI+vfXHj9RCrLEOl1uDYmhwjBmneJVHpi8Oa65
a1IcbdXbuDF0igcudtMXhAIlUP/kkZZBon/WC3bHzk9KoLOpRQNXxCgoUrrg
netZSfSd72bw55NTsKpz06AtPwudrbe7t3MHBSd9wY/ubgfXrmHincsz/+sX
+Pc+SX/woKpn08eNbIz0B9dGJmZdPM7G0q4uOKMxzQFps+rbP3cNgysW1JMv
Pgnu+/Yl+Q+wgXNAbWef6DSUGOz5ULR3BCrlq4LuE3GatjbV4m3fRyx929rY
3OVEfXDnwIOYQAou+Ei/hLecH7V6d7+OXk3FSR9RujvzzK10Hkb6iNWzFye8
NXhYuHYM13oLA531HEpdH0nBI3pWZQTvEEC+ikprVmdQ8XbRyI9pe4TRI+dN
esbsKQg0/T1GPSKCjoiWhh28REH1CU7tuqdE0YeObTJCZyhowYR7X4OrGNpn
RzH2esMDW48Wy61+4qh+obt/bTIPNovm7g3Wk0AqNeF86VsoyO/qivHF7yXQ
uOtQhuVpCnJvH/3YrC+JPursp369Ngt1+3aHbsuVRK8Dj1c1HB4HxY178FxD
FmodZDW27KXjpE+5ITb0wbxHDFzJs1AhqePf/iH9ygOg11XynI2RfiUysjjV
FTOChVsrzEbnceHh6kkTq7QRuPcixsu8ehJyjR6t3tLAhsVej7vZEXzI7fEz
pTpiPUn/smqbmehrYx42fOwR7+xTOtKQGh9PPU/kL2aDrdsTBhKfLyu+aDsV
31kaIqOSIYD0N33XXClNxX/czNFY/1YYicrGmHQnzsKCM84Hr5eIoHcvglec
z6KghOd7XM5UiqLPqpdcMpdRkAjL5dSzcjGktujiV9VIHvjd66h6Wi+O9Fdd
PnOyjQftkp7LLp4k6q2alKZqNyJ/tYmgFz0SKEyi3amJ6LdnPv1mZLtLoqDh
S/lLbKfnfNEv65DCkxIBnPRFv/3UnqjfSsW1PuyW5422QsZ/T5cvHRvBSH/0
5aZT++5GsjGDpgpFq28TYJQr9PxQBRvSH3jlzpZPgd6ubvn1pSOQsrWD94fB
h8TtbTcIzKfgpzX6yo4K8iMrde9XAkZUnPRNY2sVapRaeBjpm9pbJAv2LSXy
g+H0xORSBjpZkbk40ZyCi+3rcQtYLYDuZ/yc15VLxa+rJFJ/gQjS+7gk2eco
BWXO3LuVYSGKavTYR45dpaDjPQ82xlqIoc3WFoYKxUQ/UHhkr/U+ceSa5/9a
+z4PRiH+3v1nEmiRYNu52UAK+s80Rl9wtSTyy3s9sJdFrOd/ZVdV1rJQe2GP
X6QeDSf917CN+99I3BTATUfXCP+gdIL29IL/lhD5t3WBT6TX1gn4E9B9/64D
G1SU+e+q7JqCnQLyiaU+bDDdZdyw8gsfigtJXcewouKkL+uEx4TcVOZhxbvL
p/U66OisYxv73k8eJrvmSId3DwN523+zf5dAxe2/SB5PGRZAttvci6r1KXhj
vBT/z7+CiF0dKa3X1gLpDepyl6aEkYf5njrjQR44v6dwE4REEeXeWtffLyiI
9oVbQRMXQ+ppCpffsnkQffLYkXNS4mixo8jZVCIfXuscL5kRkUDzXd0+Xify
XX/KpebICAnUvFvH+20QBTHnVxocFCbq9fCxWzereXN+LyPusjpuycRf+avH
+PG3g5OeRfB/rmyM9H2n+J8u7dnAxu4/WpGhuXsSMvwf/bKbYEPO9pDlcaZ8
iCG9VvToVwoeLx6Fx5nwIxOrorB0ot4kfeCth9eGaVziYaQPvNBIbaf9VqJe
DfYYD/UUQKJF2izsJhU/cWp+r1qYCDLJVzc8+IiCypiGCUuviSFMdSyEkcSD
RwqHTDTviyOorZEyfU/09z8zrZ6UEvPVapo37ET0J2f36b2zlETnJ8+c9+uZ
Afuv9aN7dxHv+43EiyYzBk76x2kJygV3gY6Hxl17tYHzL7+QPvK4TVR2+t5/
PnKI1vJNq3kNcz5yf1T/6jSbMoz0kcPDs5i6NZ0Y6SM32z5EVXlDGOkjz9gN
n3oYwcZIH5mv8JLDCT42RvrIvn8Scz2zBzDSR9bY8JS30aMZI/1jkz8rvszI
/57zj90THGOUbfvm/ON3dUXgpTIy5x/7ZvPLyY0T70ejwNsmeBp0neJsccdh
uCsfczMzfhZMKxbzpS5oBamUVvXHBymIqzJRsmJdLUb6ykuu5IkFj45jpK/8
o1mw6cAEBSd95aa2N+GiIxSc9JWXlWKBt0/yMNJXdnu5ueW7NQ8jfeXAt2e6
389ScNJXPrdz8Mqzk1Q8Sv370QOXmahThppn820cy9wmGyt5XhAp1l7k2xL9
HEvwv+//JlII1QUMax7dz4aXbZ68c9eEkYrKcYdz92bgxPOut48fiqA6R+tq
/5cURJl/o8TmmSiS13Tr1DShoLcfrvhuThJDjcaRAReJfKHljzdKvhFHPsKM
E9tKeRDCLvBedIDoP54t1Um0pyCNtqrmhzUSaP8BqtmhAxRk7BCaImkjiVxD
d2ctsZ+Bk74H8AW/JFHpoSexrqfZc761Ysk7F6bkK4z0rQPQh0v1fRMY6VtL
feyy+DvAwEnfurMct/74lx/vc1tDYx79V1/YuzwWrfT9F4+kf62cHDRPJShr
zr9OC/fYfMX4D0b61xFPzq5Ykd+Pkf71mY6Pcd03RjDSv06VHg24lsrGSP96
g/QOoS97hjHSp958u8J23b4OuLVr8coDHhzw3VR0Y7faEBQWco4x/CZgZP/p
MfObbDg4LMLYHzoFPE3FyDUGxJjB6F9zg9hnr5ZmyDP6YfLXiaarz3kg9XBQ
u8i7CEb0HY+H1xL7sojVmbVmACN9bduqbTGmbrMY6WtXXP9bMp/Ip6SvvXPb
M/5LSyk46Wv/0K0KslTkYaSvfaEoJ65+koeRvvb+otgLSUR9o3yVmeIvyETt
TZF3aL48LGoZeDfTiP5jx9pv/le7MW6Gdo6aoBAK/1PH29zVAay4ynXFosLI
8OOO5M22E+Doe7BSZZ4IoqtdfftHhci36+TZxUtF0WHu4+vDjynoy96ftwNU
xVCi7WcTvxYeFLmG2Y2sFEcaBvuNJYnzXNvD5cVvWQk0EuDUKa5A1JtLhjrW
3ZZAG+t18HCi/zhiat00NV8SpYSdHH10mwc3Hkt69N8j4ktxh/OSAKKuH9nM
goVSqPlFZyy1pX3OP8/s5xtafKQXI/3zsdebhNXe8OGkfx5OV0n+oMnEV56Z
2n196b94+i5ZsEc+7//zH/7PTz8uohVxGh/GSD99d3rnyK9MNkb66dUJebHM
bSNYMNUvTXB0HJRkfa9cnxgAF774GtVhLmi5VOWwJkag3O9hczDfFJTZLH8l
mMeGiAXtr4voM5D8OCTy49e/YDI5u/GRMg9Sy0825qvXgRCv93fFXSqif1zP
38SexCq2JrSl/MeHFhQ8/ThkSMVJ/71JbkW33E0KTvrvLc2f/RQ38DDSfz8r
uazvTQIPy80Wrfybx0DnniIv2ikqLn3FZ+/4ZwF0s1Dkdms5Bd8XvHxZfJEg
Gj92pWee9A+wjsj6+bGceP9PNzxRjx2Hy6s7u6orhVFIeOuFjat58G4wdG9m
swgaLNtxQIKo3xw3rF3T1yWKqiVcmqnSFGQgfemEfLcYyjz8+3Umcd7WvCy9
5zQijswO4/U7x3hwKeLXqhW+EqgjIE5xhKh/P8vc/mM+LoH0oxJrZmUp6ARl
u0hIgCQqrGvX+Pp8ChYayrb48KSQQbBqzr1OHkb6/AbzuOjtAiYes1kPTfL/
e5+k38/tORhst5yNkX5/2Temz8bTbCz1cfGTp/0ckFu64ZXbumFQvLSL0zE7
ASrHn44+6mJD5/GglRqzU/B9EG3leo3AD9uTBbrEc+30aHBv7XmDqQssXmOs
yId6ljpMnHSk4Mq0nlLZJfyoM7XRi6lFxcn7Am5rSrKZuTyMvC/gKNrRfXEV
D/sWMKB9XpeB4rKfFKefpeAvaAot08YCyKhIeQ03m4qXveiLqjAXRvKZVP03
aVOA8svf+VqLINZpZWePEOI5fN9E/XISRYLnGU8HAihI/UzArOAxMcQ1Txap
essDs6JzO7+cEkc69R9BgqgHmBH9gpe1JZBAwarLfkBBd94xEgyyJNAXlYax
j0T/NxWs8Pv5JkmU52btLZg+C5mb66ut30uiNI/lto8LxkEyeu2bWn0WWn+o
3i9Zio6T9x2OuB2Ssulk4FedrPyg5d/+Ie8/bDn79U3LEzZG3n/48UvWuvTF
CKazZFj4bSoXLh9bOLD19ghc/thhcfPTJGiIS0Z/bWWDzk/zXpELfKjvqX65
qQoVJ+9HYEeuc5db8LANKZOQHE9HyzoFsBx/Hma49MvV/gcMdK0xa2SzLhUX
u7z6pdZzARQqe+DC8eVU/D7zJfv5K2HUe0Wry91rFqLNMxkrMRGE1Ko13xH9
c4bqocDEUlF0x+6lkJE6sR7OTE/1YjE03Gy5oimKB7QYI92PVeLo7Mt9uW9+
84AfLCsTnSWQworyvXIniX4jSOvQmQ4JtJv7K4apT0F1rx0Plp6QRBfa+6pd
Y6bn7nPE3qToX0wUwMn7HN2Kuy/4/qbix45q962pbgX1y/N17FtHMPJ+x3rv
z8uW3WFjI0+S1H0+TEBHVm2kbBEbHqUW3t2CTUGGRYXF2tYRUKVX3XeZpaIN
Uoh/YJCH3Yi9XRFE5UepYaHKK0yoOHkfxF09Rj5tgIi//7sPssuiOW+REg9r
ubBPZ6kCA+GLGNRmXQq+xrPuwYSyANoUu9+/lug/rB7EFlpuFEG7/zMeSiXO
e7UfnYY7t4oiPo/uK6eiKCjoWIppwVYx1Pl0Q4zBVyLe5Pj3N1mIoz0xgS6n
7/CA5Ra4+f0TCVTnk6YvF0xBa9pz7KqXSyK+dKFdmAaRH2ZenAV1FhL6rOax
Z5gfJ++nqKW7H1qWK4APqov7bmvpgHuZlS7ub9nY7TbTh7e1JiB2eCiHYcEG
6fV7vU8YToFKbs8Pq0tscMwabjQq4EPf+CS2ntlJxcn7LI4nH/QLL+NhIreX
6x/7TUdh8TY5Al952CbTXdLsZgYyG9tnfu8OFVeIwGbf9gigFHN2xx87Cr78
bpqHY5cgyrGsE670aAYfK8XG6RFh9HqxxhplYr5NURZJ+nyiqMzAJTXgFQXN
N6a1rRUQQ91xZgvEJ3lwDqc7MoTEUfsV988KRD60OqoaxBSUQA4PQpznCVGQ
8E/HK6/CJZC2/GHZh0R/diuNY68sIIm8WCFc5Q7e3P2bQTG/nXJE//FnCcvx
WUsbfJFW8s88xMbI+zijefVtH43YmKXLLLZ38yQ43RSZWsplg7ag66elm/nQ
n4ofz6zeU/D33roFmYgf6S2UyVs8n4qT93Uq2k3VDW7yMPK+ToPIc7oD8LBl
dx1UKMcFkCZD4nJXHBVX72SmPgoUQfv/Fu2ViqOg5jDzjF1hYkhou/aFyGQe
RHpSTLNviiOpl86MO5k8WECLnvpUKIGsll1V+3WCgkrmn7U9byqJisZk7i+e
NwuWqu+7Tlmw0OcNOXzTkgycvB9k88LTpeQ/Ot4dJS9UNfIvvzj4l6RiT9rB
o/n2sZJ7bOxY0xXagqRJePfL+PzdQTacik8cMPDmQ1Gl5+QsJKk4eZ8Iyxl6
F2xDzE/gSu3u+wLIadvguVxzKn52ysLB6ZUI0oiU03iSTkG/JLef1s4i5qNm
a6l8iwfz0y48EvwtgUqWtF7PM6OgQ1hi5fdjLKT+45t4xw4BnLyfJLaMmXlx
jA+XrKj+eze+E8ylFap7E9mY7XpL07x7E6B+TOaTZSobFMNeVPoPUJHmbUzR
bh0PK7QdqHo1zIfWFvKPBVlS8UX5p7vlp/iRvrLYiwYBCk7ebzq4+4HhUqK+
c2UKf/AWYaCW3vGVzvIU3DM5e5LDEkAm1lLr7XKoeP0VX1MdVRH0Kuxv1E9E
QZ0FWw5264kjVbnU72+jebCrZH3s+EMJpOK9da8jUW+R96U0nhYpz+Nn4tpJ
ZZar/uuAqiH2UDqx34b2TawYXTIFFkbWN0eT2HA/2KTZJ4MPnTC3f95mSsXJ
+1SnAxL9olbzsMDQNV7DFQxkzza6VB9Gxe8KLlCr/SWAOm9F2R+5R8G/QNe0
37AIilmFPYzJIOoFgwWCkRxR1Cj53ZrLoCCHE8bOEhNiKPJojcnPCGJ/2V5s
X0iVQL23d9jpUSlou8bihr6zEsj9ftLZbD8KOhlmF/L0Egu9E5lSUjdg4oZe
jXTh+DbolbfmImM2Rt7vKlzhYiFsz8becZIbHipOQsLN5hn1ETZoXd46oaXJ
h45+pmw6RdRT9QKl+c4WdDSocdmmW4uHHS/XvzC7XwDpirriMi+peHZ139pr
J0SQm3zJnts3KMja3tyCmiuBak3vx1z0/H/UnXk0lO3j/8c+yjJGWrUhEWVp
oUXXhRIVbVIRUZSKFktaKEmWQkRIQqJUSlqQ5J4kW1JkC0X2ZSxjMGYY87s/
5zzX9fzOc87nPN/f77/vn8/pJMzMfV/3c17v14sC0V5M/d28j/W7xRlfwrZO
jSp3gJRXHf3dL9jE0zjDGIk2HhAzdz3+oIoNRGXGOhtuC8PGyINKnquFGGhP
pqzLVnkBBUTK/bkvBr9JQceXGdGV5HlLMb/YVaVOBqpc392cHSoAnQ8oannn
5KH5zk9nKrokGGh/duv90XaLRxTG5XYr+E2xC9iFsctgIJu4MXOCvuIXF/Ts
v+oZUc8GywLGHffJCkPnpxO26roUxoFyUL5VTgTe1E5JMQVCDO/La9SKNcSg
g8m3F1BVQPSv422cWC0Bb6yYU1CeJ8RQP12wp9pOFlbFd90E9wWghv5x6NJz
Ghxt3XvhNnk+mdTwuO6UKw/FaczK53YSjNR3OxMPL+oEIGafjjR5ntbqj/tJ
rxKG3/UcZ1eQzzdoH1caNvHzPnl/uirnkTejXwzGSuf7nmkln2/k3bNGWOLQ
v1Lv9OgjIUbSNMcfsVwJuPWBwHG9IoURnupxZ8u4JCwJ/HnIaXcbGPrzepuw
vDS0mE5tbk+jwIczP9tPzpWFV6xmfw4IEYCvl57qnQ2jwRvDscciyfvT0NHc
2vBYeRinbJhutZXKQPs8y027evtV2URnvWWKtCMPhBMB9c5cNuhwuFosdFEC
Ula4NGkECDEejS9Z+jaEvD4+rtgtkkqBTU/qngSU02BmgOatlMPk/eHR1O57
E39fz9Cez/NV8pvkkL/3fO/at2hw85vwni9FxMH8Kiwn0J6vu/WK/cykTgLt
+cpfmu2gPR8i0J7PKU58YH8Am0B7PrFv77rWS7EJtOcTN/6SVtnaT6A93xqd
gpPL01oItN/bPup70/NJE97vuR34+Rxq9+H9Hly/QfbozGG83zt9YNRqB4cN
pOmU79UekyBtp1TM6QssEH9Qs25v9BQQG/+yJ82zFRy+JyOWa0WBGzS3+C5R
rCXQ3o8Stnx92csxAu39zno77X43TGGgvZ+XxbppNhwKA+39Km8fvdhyWkCg
vd+8aV5+ZlYCAu39Hp8ecHoyRmGgvd/jBSt8ItyEGCX5e5U9/Klw2Ru3RYw5
HMJ6U1dZvY8k/P7W7ZfbhddEVElJW8HNaTB+3Xvu+4VsIJPY27IhaDpMUDZV
WePNB6ozZcLO3JWC5Xz3uLqnFDitRr7SLVUa5m+Zk2ZP3h9WdB4YF02SgXnD
S7ZIxgsAb3QwXDFDFoKNtceKPwuAzA2dkuVWNNhy6+M55kEKHMvoHPKrosHt
d2e66NtQ4Koa46q5B+RgStjn2LOefBCu/DGVVysH6xO5KfmZbLxXpCTL+EV4
JRNor5hy8xDtejCXQHvF+asyO3f9EGegvaLGUoOLn9VFGeMvY8Pa7f9+XqIf
cX5/3/Pv9yPaL+Yk16Z+UsvB+0Xt67+ElMt+E2i/uMql5s3uaCaB9osWm7at
vXFtmED7Rd3Ova+8MtgE2i965+1nnndiEWiPyEiJ+B2m1AGimjyMI5054LgC
xera7CGQoNbqEnuaC0JM+t8+CmaDSu5b9wvnJ8Bg/5L8A6Zs8LzL2PTJdT7I
vckKPGrKBIJ5oirLkwVAID4ZmbumGBjrhIPEHxRooq+cYpzCJNDekSOY36K5
bopAe8fQFennQsjrDdo7qo5nuJ1fRmGgveNd2re5GeT9Fu0dpU/+zH8yIiDQ
3jFcI0cw46UQQ+Rks9tVMSrMqmT2sV4KiJLsT7qTFEn4Li8oP8egh0jIkGCx
RKfBNZMNFWk7OwC1d+p+jeR0qNjU+GPZSi4o0v2R2UKTgvyzF2ofLKBAIgGW
3lkoDdd9uHX660MKrJY/mBShJAMbXKeFubQLwIYYy99vlspCe/nEyj1hAhC/
wlesbSYNyhydvbViDgUuyLFbZxxFgzn6rXpHyPu72izXgRYFOeg9+O3MswcC
4D2r5u5ojBzUmHH/h+QDLphMeDY+fx4dMuPUNsy43oH3m01Lyra2RfcQaL/5
LVJrWnywMAPtN6tfHNnXtZbKEPYjlKIW//1+CpAKFu5+/3/xKn/tO0+dX6xX
k8ki0L7T3NZn8PFrNoH2nQcvpdUethwmvEO+lmxijoEvb0Rboiv7gdHRoMac
7nFg3hiSdL1/GGy+amKRxOOBZbcuFsR9YoNfk4ulAH8S3D3jdeMVZQiYb4j1
MVQkP2fFpXJrePWgxM5BIypKCBa2KNz3z+YRTRwPx7cJwjD392M1NfL+hvaj
cfs3Vb+IoTDQfnTw+eibKH3y9f5rPxrnYZqbGicgLDZdP5aRKw7HYyaXKx4X
Yow4my+a+kyeJ++sNbNqpDAmL3BsnT5Kwkpu9kh01A9g8bMNlpdNg6pNhvfK
j4yB3m670rDy6fDzl2NhF2YJgLv1Y41rTVKw5HW2+0ny/n5qJFtfuF0amodW
PzedRYFZG/f1NbXJwPu3OuhzyftVnPq4+dkBWahxJEjceFgAZi42varvSYNb
vJfeaHGnwPC2J4M6IzToONzpRCHfT/vPSa0JOi8HQ8LOH7lVOgGiTwU2XOPT
4S7xFYlNwQIC7WHhFbFuSxqVcWIHRVZI+O/XE+1j58yV+WqziE2gfazSBUf6
5gtsIl1TMf9POwfs+7nSi6/MArze9VNeY1xQdXWXmWk7G9i6Lbm7e2wCWLst
GR68Ogzq+XpOUjMoEFr6Wmn9fkH0H73jPU1RGFrOmn7aej+FoZOVb7Zkvgh8
4b5lUkZPiIH2ts3X1nQ2FwgIvLc1jYn8uExADNybeyBaTxwOrb1m53SOwthw
O/J8npEEbGOosdtyhBgFvDkTv02nw+1NMSc/hk2AZO8tcbp7yfMb/0G5Pvm8
JdX282jaYWnIs1x15it5/9dfSaEudpCBwz6lkgq5AlAwuKsy5KQsTNHcOmcT
eZ05aSrqGLqGBi+vz2TtJZ/3VXd4ss1f02B0pE5hlRcFFmzV7r+lJwfLUz9U
Xi6YAsk59/mHs+Xgp2NiZVrDY+AG8SC9fb08vLGGUDEYEmWgvfD2C4kvB8Ql
GNBhjqp089+fH7QfXuykWqpCPk+g/XDnTdYKx+xhYsb1RrpZ6jiY7xDq1Bc0
DASFYe9fv+cBqm5fu2onG2wJUjo554owfCTtEJu2SIiB9sUHajqDb+8UEAdK
l9q/jxODUc48VydPAVH10lA5PVYczh/3Vly0SojRf0zUa8MjCWgt8+6+sK4Q
Y/KTSo3T0+nQmloTxd8/BcxzGpq4uVIwr/+RlMobCsxr7/DPLZSGZUxv+g0d
CnS7Xc8a+igDNe/bN1dHCECZrMdgUYUs/BZoNNDeIAC3a/JUXjvR4FTZRZB+
nAILzUzPWLfR4HmrvO095PNL0RI1/0pnOXjZ8Iit3YtJvIdeTWxSEwmXYKA9
9PI9XeX7VYUZl7Of7jEtaAVZzxr6n9YPE2gfzWtfafEwjk2US95aTX3NBU5c
4fchBBvMynIVP5o9AY5GFtl+GBgG7Y6m3Zo8Ibjq8vlT0z4KiHgTl53BfGE4
b95uCb6ZEAPtqW0bbyRIkfcDtKfO6bi62mWxgBBNvWatN1scank2fLm8ksJg
TO1Y9W6RBLxXZZR6+IMQ480+6UeSK6Xg2VV6fkJ7KLADSs9eaCgN8/an/Wq6
TYEByissfxrKQGEhqRctXwXA1/hHXZKZLNx2Y26URrQAJIv0Rpc8pEHqaddf
QeT7dexlhWuOqhzM2mN0pH6jAGzXmHd+u6Y8FPmsUUL9IsJA++7eqtDZbd/J
91f5VLpvZQewm68lKCWf785sWZ2ipskFbbydQYeM2eCmwVRLyNoJUKK5y1j9
Fhu4HSu23ZUvDPcpX/9yaIcQA+3BGQ/MrS6pCYgV2XttL/wUg2tLXpw68FlA
lNWVPHvVJA6fTt1j6kUKMSaOR5cSHRLQ9/jgtd2uFEZF1JXHGm2S8Kj5deYv
l2ZQL333Q/bAdDh1wTZgIEcA7k66X5SakoIjazrrUjMocJHoDaaZiAx8XtO0
zIQvAOO9Ne0lYrJQU7mQMUg+H75dvLFWWoIGN/zc20A+L8M4lx+/PvjTyPcv
BXDJ54+DPtNPS4rJwYpl07hn+gV4v64d0mLVt43KGPe8Xv7xexu4/W7nsRPW
bALt2ddelE6z2cYm1Mq7i7rW8sB+yhbrmeT5luPcSus2EIb+b7VGqzIojKIl
csYfN4hAjUY5bY155M/719492XbduuPRAgLt3fUtTtLCNwiInCV1eYSjBLQ0
zJl9LkmIEf7gapiNlxR8yt5wRyeWAnuNqt47+8rAl+NXqp2fCIB4/Pey86Gy
sH/JwojdrwTgaRxl548CGjzO+WaW5kKBYe0RLsdM5aDHrcKC9cumQNEetT/e
2+Th87WBNxRHxBhoX79mWV92SKUYI/7mn+zEob+vL69mZreN32kHS26IbjCJ
ZhNNnbpuBvE8cHj0u0rzEBt477xwattpYfhUd9Dn5XQhBtrjs+fGuFsfIp+P
uw4l20RLQP3588LGLYUYa495rF79VApmd9j+CH1JgTs3zBnlvSTfz6uHzQ6T
79/f3jEvBxpo8ImvxeCsHRRIU865/uaIPCwJly18qy/BQPv+8KD8BT/WiDAc
XT4tqQrrBC3sQ44Jj9jEmrv6u3ZGcMHvwylRrx6xQXPb4gUbe4Sg0VC1cKWw
gKiU+bTnfb8wjNGxznlEvl/jmqNaqsZEYMXp1iqGDIWB/ABH9IO8eQsFRJi6
fmMgVRxWP/X/Q6NTGMKrV9zOlpWAn8dTZleR948Nm4c0RhdLQZlY4w7HdRRo
1y/f+FRfFuacWN/4mryetdimdIvF06DQwzThIPK8hXwD53+857SQ99Mbhh/8
nW53AJH4y6dMyM+b86HkmJlzJ0BxV/TZR8/Y4LHWAodrL4Sh4vrH97mmQgzk
I0g9Gtl2TUtASMk8lsz8Ig5Dv4yuT78ixPDqYY38rpGAyrtOWu56TGEEPJP+
saVfCjZdv/PU+jUFmk4m0R+xyetvQtkJvWkUWBs1s7tqRAZO6FkcGyY/L35r
1vmYTMnCthKV5Q+mBKC+KFRrwpsGf2joXvhJ3r/mdp9dFXydfF5XcLA10qMy
rIssTimHtoHGrsFDcwGbQH6EyXLzO3+OsInbNrdbtWbzwK93U73jg2ww3PXe
hKspDCd/Tj57GkBhvKi982KlmRh8P/nO7b6ugODZvJ2bv0cC+lRs7NqWIcSY
fctxxpajUnAo4jlX+iYFdo/kPqC9p0HFpyqpo24UiHwLPr5BjfsvijMWaK5b
pTWjA4yNHp7JSmcTSg97RZc18oBsq3KsQh0b0BlfjnWFCcP8y7FHCnWEGMjH
EJ/yYHeisYCwlzT0z/8iBa82OrNzyPNWVHfMQGeVDJwU6odHyfP0HTGFXwke
8pDJffJsXb0EA/kbNtqEeSqQz5/fr5qco0p3gZBd59Ku32QTjhc75jCqueDm
tIhlitVs0NNx6tW86cLwgyD48CcVCuPoZQXzfdIiEE4fvPreUIix01xUIXKp
GPx241626BIBcbnkbG2ujgTcOh7x+gp5f0i6e7s62loWJmzU+PX6ngA4PtHa
fPMZeX1bfvDrbvK8kn4raJ1pjjz8fkLO6dl5Cca4Fay5R+sE+obhh7XfsokN
iWesF1YIw7nn6th+5PMN8kucvv/uU4CygEjRfdCk1iMGlyqbDHg3CYjAB73m
b/rF4VWaRJ77QyHGld51CUmjElDt7QmrtcspjDXJxuUyI5Lw67ft9evvtYJ0
84bFlTLSMNn8yE4X8vl3ruGdP/kzZWH5QgcFOfJ8epA+J8Q3hAbzY6MPLSfv
T0llFTfdo+Wh/qbYb1rmVAbyW+Rm3vPV1mITjA3gWaIND3DnSB4O5rLBucFx
u4+eEnCwV9tUOUSIQX2TQD0TJAU/xVgfLUimQBdoMnWnjAb1n88NrHOkwPKk
z5Tj3L+vZ184/uZ+ITxgVZG9LHGEDTI2fvxT9UAK6obVJow/p0Dq4+SITac7
wQEr4VWnn7EJptupvdUdwvC15OA3j13k9cJBZu8Nvii8RPNVoZHPf9Unb897
SRGHp7X6/7gLURjKO+d/XCMhAYU6HyWOvBFiWBi9adLSloUnGVE+LbcEgHLz
aoRKLA26yPowY8nrgb+HpbnyQ3k4FdlupqVGZazwjh+qc+sAS/wvODWQr1dB
ZOnh+EfCsHG+QaHvJiEG8nEE1ZTOLV8pICb9rK90tEvBZ6l8/7vk+aqoJ6tn
H1MGBu+wuOdwk3zO0b7bYTMmC61gwH6ncQG4kBGXYHFVHlYt231dWJXKMFE+
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
+B9XMXZU
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1:eJwVzDssg2EYBeCvN1RiYqAbI1pBMJhNxKWjy9IapV0II4YKM4sOjFRtJCZJ
NxJFDLZaLSx1mT2Gk/887/nz9eaK2UI0hBCRNVmB3w7FtzURQjMWQr+c8aIM
S9q9Ox7CvPsjb0tE2ty/3AbknJdk2m3cvwW3Dx6RjFuP24LbE+/zOld5h/M8
yyWO/7/Fh/ygR+1J/tYH5Uo/sVXcN/Wc3tkSwrGtwXe8bJvRJ/SkrWir8w2P
8ae9zCXu41t7kxs8xaP2IU5xlLP2Glc5w8/2A97gFF/a3/mFd22r+py+5/6q
1/SEXtGP9Loe8187/+hpudZPbRfuW3pe7/J22fbG9zzJfxOWNXw=
                "]], 
               PolygonBox[CompressedData["
1:eJwV0DtP02EYhvEXCyaCbVWQxYgxfABCi4nlYL+BxibAigV0g8hAgl+gQGVg
cqGDu3LQxEQXDaODBtrSjXpARTCBwCSFhF+HK+993c+T93+4nZ3MTFwIITRg
EcfREI4wotxW/m4MYSMSwiXkdClcQawphP+6bqzwR6ja/2N/U9eMWV0vriJu
/0SXwCrP4pv9XftFXQvmdH1I2L2pH9QV+bX6M3U1nsQan+Fjdpb4KL/PU/wp
/yK/lw/0S3JO/qj/7nl/5ZJ8Ga/MXvB5e4/lh3Lsovcwq/B1fpf3myd5B4/w
IfN1/pp38ZJ5nk/zG3zZfJcXeZq31v8BP9XXnD3Od86X5m/MnsnjckFflT/L
Y/oHcq88pf8qf5AP9QV5Vu509yezY77Nf/i+PWdZF0Xe7hOzTP0b+QDv4bf4
MC/ztvr/1Z3xO3jLx/HTXfv2tnQxPNfdw3XsmP0zq+jjWNCl0Y5fZucZPE6h

                "]], 
               PolygonBox[CompressedData["
1:eJwV00VQVlEchvGrAvaMG0WREBULF+6cscAYWxe2C3ujImCNBebSwBhbZ5RS
V7YzBpiAG2PsToyxCwzE+N3Fn/M873vgcO93vsTJmcMyagZBUMP08KOyYRBU
mDTh8EhZRBDMqyXj7/Xf+GPexGyU9TVxppm9Ebpu8pN8hvlgf4XsiSzabJL1
M13sTZKPkz3g8SZGFinrLjuO8/Ep+WI8FTeOCoLdumf8Ek/XjcApeL78Gi7C
lfJdeCU+L/8YPhN+ipua/bptfLN90/FI3MjfXqO7x0t4f11X3AZH6MbrSvgB
3ok/1OfwhTyWH9K/4Td5Kk/QN+dRvDp8h/oT1gLeXl+kX8Kn8SY8V/+cX+bh
hzESp+IF8u98N1/FL/BPnuc7foabmS36AaabPW3lE2SPeAsTK6stSwk/E1yI
OzivWLeUT+d5ukw+ivfkC/kPnstX8xL+2Zk/8HMcYw7otvOt9qXhUThHfh+X
4oHy7rgdjnTeRF0pPxjeHd1avAjH6Q7r3vJbvCdPDO8Tr8P/hO9Bf8q6hyfr
T+uX8TQezfP15fxKePf4TP1o3ovX54v013kx/6nLw2twqfyL5/qJy3Fzsy28
t/rRsrV8EO/B2/NJ/Alfx7P4Ef4O38YtwzuM6+K/4XvUFVn38jO65XgGLpDP
4mN4b57Ff/Gv/o9f/AWPNdtl6faMka3jg3kK78An8zJ8KLzT8vU4G8d71qO6
9/wOb6VLwPXwv/B96Iqt+3hHe8/qV/B03pQX6l/wq+F3kM/Wj+V9eAOerb/B
T/POvEqfz3N4Ei/TV/Kn/JvnqbK+lMWZg/IdfIffycBj8Xr5EJ7Kk/kUfhEf
Du+2fANejI/JP+C7uJdzWod3m9fnvXXn+BxT4czfsleyeLNTNtQkmUT7G+j6
yM/zuabS/mrZa1mC+Q/uRKum
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{476, 3575, 3570, 686, 816, 1016, 1293, 527, 568, 
                646, 776, 976, 1253, 477, 526, 567, 645, 775, 975, 1252}}], 
               PolygonBox[CompressedData["
1:eJwV0DlPVGEYhuGPtSAhsgybUICY8AsYQDARBGoECxEqC5ihkAIIJPoHDKvS
UEFir1CwxopMSUMFM4CRikWjwAwNjXpRPPme+37fc/KdU/dmtPdtdgghSxYl
UxjCreyQrTkh5OSGUJkXQg0+kkHuMdfCdeFFKeO+S5r/5UUj3LY84bK5CrvV
OCUDXD3XzHXiTxLhTuSG/+n5DDeBn+Jee3G8gofxe7yFW3AWLscP8RqewrM4
ib/qCf01/0hv0p/zCT2pz/AP8kN4ieP4o1kDXsJfcKn5nfPYec1dule3+Q/9
lt+9/w/4A17Gac9H8Te8j8fNC3AbfoFj5nv6qb5sNqS/0zf5z/qW3swHvUyv
4lfxJJ7Bh7gf1+Eo7sDTuA/H8AIuwUdyxV247w03hltxj51hvCFN3D+JcJX4
QF7hWnuNXDuel2IuJX/4c+8b4tbvv5P7K6V2K/AzmZMiLim/7Z/Z/w/JfUuC

                "]], 
               PolygonBox[CompressedData["
1:eJwV1FlQlXUcBuAPUOvGUsyarhIXBAEVtYu8aCaV1X1rQUFxzLIFVNJsUVRw
ubNARJvKJTbhqkzbk5kSQWwmZ+qi5CZS0yyWC9FAsOd/8YP3eX//c75z4Hwn
YV3xsqLYKIpizAY/bo+Moj5TqvzJLI6LoseGRVHq8Ciazi+YepOs7zUj9Pc9
Lk7eaxY6u06305lLZpHuUV2KbhrfMq/rntTl6p7no1zI27iOk7jHDOchz90u
V9o3cKxcbhZwIe9wvolL+AC380Iey1N4Kn8XXht/wH/zazyLc/g5PsJreSvX
8sfyaXmyvtsMkwe9jk79HfmirkKul2PkZvlXuUweOSKK5vNaftdzPc2X+To3
2j/OW3h/eB77NG7iZl5gH8OPcDKn2c/jDu7lb+0TuJyP8k37L+RL8qt2M+Vs
+Vl9Na/hN7iGE7nLxPG98M+W95hcZ9bo3nGmzczXjdEl6VL5Gy7jI3yDZ7n+
WW7nV+we5BmcxSvtD+sKuIQ/4Un8r4nlAddtk9+3rwufG/vdnMMF/Db/LF+T
T+k3y/vkVn2jfE7O1UeuGc+TOcVuLl/hHv7afhzv4Wr+y34mn+GLvNH+AU7n
TF5hP5svcAdX2cdzPm/hk/YfyZ/JE+3+Cf8jud97aZXfs6sNn1PndnE25/Nb
3MCbeC9f4BwezYk8hb/i3XyYr/MM1/2c2/hlu+lyhrzc7hCv5s18gifwrfC3
4P+8lkFdKWc5s1q3PdynXMzl3MLZPIoncTL/LnfLX+qfcO1dXMXX7NL5NLfy
S+E+52k8j5fZP8UtfIUrw/viVbyJj4d7mD/kT3m8fX+49/y+r7vr9f7hd1/4
u+gSnT3INeGz6bHn5F/Cd4hdprxKflNfx0Vcxuf5lPy9nKV/WJ4oJ4V7gkv5
EF/lDTyV5/JSruA8LuZjnMA3zVC4v722Ad0OzuA8Z7bxjyZT95BuQvhu4D/N
i7o03RzdkvDdYcbpbpjB8B4931bdDyYjfD/oxjubyL/JXfJZ/U65Uu7Ur+dU
foYXh8+f+R+/BLes
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1WW0EFUUBlBaKUmlS+luEKRFuqVD0lbsBFTswMTExkBBBAFpkLBFEcUA
u7u797f8sd/5znn3zZq5d2a9OlNnDj+xYIECBfb6kXqUH8VYI89iMG0436wW
L8s3Zh2FONpsH9bKsxlCWy4wq80u+aasozDHmO3LOnkOQ2nHXLM6vCLfnHUU
4Viz4qyXz2MY7bnQ7EBelW/JOopynFkJNuSeGc58fRs+lh+iAxfpD2K3fGv+
jtv1nflafoxiHK8vycY8E/fKPfhRHpG9kNvyifwwHblYX5fX5NtYJPfh91yP
O+RD+EbeqE5ghbxMHZJz4EmmZ2/NT1BL8Qyb9KvUw7NXzNUvVHuyg5/0T6hH
8EbWZf/VdjzPp/r16rjcH4v1j6gD2ck/+m3qVA6WL1Hr8bq8Rh3Nguyj2pc/
cn/cKXfhW3kly+WhFMp56/OSlWZzzo775F78LI/Mmcvt+UxeQicu1dfPc+Rs
cg2KM9NsP57IOTKKzlxm1oA3s8dZRwlOMivDlpwNozmEy80asif3n3WU5GSz
smzN8zOGLlxh1oi98l1ZRylOMSvHttwzY+lKaU41L8/23B/j6MZ+nGZeIWed
e2E83SlDWcpRntOtqchTuQcm0IMrzRrzlnx37oMKnGG2P09nDRPpyVVmTXhb
vif3RkXONDsg71fWMCnflL4Dn+f9oBfz9E15J99B3ne5H3/mWbIncle+kzep
E1mVb0kdRuE8AzNyf+ZnqZV4NvSPqyPzTTNPf796KC/yi36LOjnnm/c7363a
kRf4Qr9BHZ93laX6peogXuZf/XZ1Wq4pX6024115rTqGhfJitT9/Zd+zr3I3
vs/9sUIeTpHsmf5stTLP5ZpMzjefb4cv5UfpzTX65ryXdz9nRCXOMauSbzNr
mMJhXGvWgvezDzkjKnOuWdU8c9YwlT5UoSrVqE4NalKL2tThQA6iLvWY5TrV
2CFfxzT6Jpu15AP5gZwT9ZltVj3nIV/PdPolm7XiQ/nB7AkNmGNWg5fkG3It
uTe/yjNYIHfiK3lZ9koeTP4R9c/fqK35SF6njmWRvEQdwN/Zv7zLcnd+kDer
k1gtr1RHsIui+R44suD//+sa+v15as2cHTv1q9VR7GZ+nkU9LPfPb/qt6hT2
5Dr65QzImdCIgTSmCU1pRnNa0JJWDKI1/wFN0+EG
               "]]}, Annotation[#, "Charting`Private`Tag$73282#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl12W4ldUaheFFbLq7u7tRAQOVRqVBQQlREEmDUFRUQumWFulS0kLsRKUE
LErpEqRB4tzvdX6M6xvPGHOvr+aac+2iXfu27JMskUj0T5lI7GEOOW5NkUik
puHJE4nalIn26g7rtsnT0AjZbZSZMiYlEldkVehdfC5jItHZcZ+/OeJvtsvT
0kjZ7ZQlPtPfXJVVpfdwF9pv/FHjd8jS0SjZHZQ1zmP8NVk1Wo270gHjjxn/
iyw9vSGrQ9WMLShvI/sFZ4tzyv7D1WkNHowfN2Y27oYfwLfj/ngL/xF/Rj6b
H8l/Jv/L+Y7zO/kMtFI3Hb9p3BN8Cz5TKteh+xV/iW/DdfXVcSGcArfVf4lX
4cp4p340fh7nx+/qj+Ff8F04ezwDfF3+n2MNx/cd5+vX6obw3fk58v38Zv5x
+YP8HfwA+Vb+Y/6sfA4/ii/usz/Xncf78N/u74TjLllGGm3sk7qWcY+4Hq6B
C+N2eBfOEc9XdgPXpHW4Ox30WSeN2y3LRGNkd1JOOqQ7pftVnpnGyu6iXHRY
d978OeJ42pjf9FlonO5uyk3Zne+mrBatj2dPR43/x/jfZVlpvOweqmlsEXl7
2W6cJ65ZdgvXpg1xj/SQrI5xz8j+xcd83hn8B85GE2Q9jGklG43r41q4KO4Q
7xuPwQPxezhv3CtOxBzAH/Dv8O/LX+Cf4OfKD/A/8j3kLfi6fDrv5VndNrwR
18Ln9HPxG7gE/kJ/Ae/HDfBx13uW/1N+VZ7dcZXjW7LS+on+vidujTPjMfrf
8Ff43vie88X4h+Vf8e/Gs5eP5Qfxq+X54h3hZPj2uCf8In4Sz8M9cUtcDz8X
8wqfcF3/xtqCc9Ak2X2xdhhXXP6I7HecP96tLLnsDtmH+Ck66e/PyfbKctJk
2f2xjhhbQt5R9gcuEO9WlkJWR/YRvmAe9XJsJb9T/nw8M3wq5hjeh3PRFFkD
Kkh5jU2pqyv/GD9Np42/INsvy01TZQ1jbTK2pLyT7E9ciPLJkmT14h74BfxG
+VC+B5/Ts3871hL8E+6ta83fxQ+Ub+c/4S/K5/Fv8l/K/3ENF/kDfJ5YZ3Uz
8LR4TnwbPovPHhvPE3+NG8V6yJfiU+oe1X2N38NV8B79ODwYF8Br9MfxTnw3
LhzvBafC1+MZxnN1XIjL6j/Rv4R74lx4vv5v/DPuo2vD380Pkl/Cb+PR+Ct8
xv1c4v+K7wpN1zemusaUlj8m24uLxLuVpY61MN4Jv4gv53ybdC/jp/A7ur64
Lb4HD8aX8Xw8Bn+Nzzrn5VjnYi7HvqObid8yrhfflh8X84n/hm8ir8eX4ZOc
r7PuG7w65o5uPD+EL6hbqzuBd+F7cNGYTzgNvhHPQb/RcTEur/9U/wruhXPj
BfqDeEvMPdxP3w7Xx+nxEP0OvAlf0b3Dj+W/ifXKfV3hD/L5aUbMW3072Xjc
NNZeXBZ3iT0CT8Av4HX4JL+bLxZzmE/L34znqPvEcUnsf7ph/NP8Qnl/3B7f
i1+INSf2fddxFR/CBWimrLcx7WUTcLNY53E53BV/y6+JOS2fyL/IF3Kv63Wn
8K+xR+kK8+n4W/E8dJscl+IKsX/pX8W9cR68SH8Ib43vIB6g74Dvwxnwi/Gb
AH+Ka+Nr+gV4HC6Jv9VfxAfwefdzzfGwrGD87pDPwrP8TR++Az9R3jz2Jlwe
d8Pf8Wtjbssn8UP5DfLT/G98fecpEXMbp4/1V/cFfibWLOf8T3ZEVohmx28T
KklFjc+guy9+P+Bn6aLx12VHZYXj2q15c2Lvj/3P+ArxWyC+l3gyfin2oFhP
+N/5UvJifEb+/lj78XN0yefekB2TFaG5sUdSfWMryrvHfMWlqbgsU+xDsb7g
5+lh2f2yofGbBV/2eTfxcVyU5sn6GvOwbBJuge/FlfAT8Q7xFPwy/gCXwSVw
ZtwQf8ovi/kvf43vwy+WD8SP4Ab4JbyT/yzWL/lCfnzcs+f/XaxJ+K/4Prm2
W44nZNdiH3Rc4zhbVibWa3/bDz+Cs+LJsd7jb2MfxC1jT8OVcSr8pP57vA5X
xYf1U/EruDD+MNY//Eeso/Fu+SyxXsd3Ar+O++IleBDuiBvil/ENfDV+sMtO
4uI0X9YfdzRmCm4VeySugnvgH/j1fDXnPqKbhofhj3TlcCmcFTeOuYuH4354
KR6MO+FG+BV8Ey/CE/D38bxcSzJ8ii9Ba/k5sR4bN4DvxGdz3qm6Pfi72N9x
69hzcVWcGvfUb8YbcHV8VD8dv4qL4I9j/cZ/xvcFl4+5h7PhBG6i/wwvj+vS
jUj6//80y+SH+W38EPmjfGN+mPwWXown4h9inrqX5Pg0X5IWxHcSPxr7LG4T
+z6uhtM451OyH/H7uAY+pn8Lv4Y36irgMjg7bhrvIX770WOyJrJXZQm67rwp
ZP/wpWhhfLfxY8ZMx21xI1wd98I/8R/Ed0k+g3+dLxr7cewFeE+sEbiivizO
gZPhZvrP8QpcEW/Wj8QDcF68XH8Eb8d3xlqp74yb4oz4Nf0u/Hl8Hr+En8Rv
jr2W/zv2OveSkj8jK03r+LnyRbGu8J1jv5W3i/0e18BPx96JZ+LheBOuhMvh
nLh5PGc8Cj+DV+ChuAtuhl/HyWkpnox/jHnqOpLw2Vg7aHGsS7iLfgZuj5vg
mrh37IG4MpWX5ZI9EM85ft9QV1lz2XBZipg3PjuV7F++bDyH2GOoClWQ5zb2
QfnP8fsk1lJrcsIxte5cfOfiWmONpKpUUZ7H3zwk3xK/CygZpZGfl5WnZbGu
UVNZLWP7xB6Jq1ElWV5ZC9lW/AZ+Fq/Ew3A3/AAegVPGZ+Ep+Kd4bvq0+ELM
V1rPz9Mtlw/ku/LZvfuZur34e9xR14yvzafV9Y17xR/imvi0fhYeEb8p4reO
/hzeG3sMrh7PGufDyWP9jP0Pr8SV8Db9m/g5nA+v0h/FO+I7o3ucf5AfKd/N
f8En8cv5qfzP8Z6MS4cv8hVpA/92zB35IL4bn8Nnz9Ltwz/gOriTvjm+DfeL
fRLXiHcryy9rJdseew6lpPTySzFfaWWsL1STkihVvPN4j/GM43piPGUI+bvL
/qYyrYo1gWrFfJAXcJ7W8h2xF1B32UOyUbJUtAJPw1v4K/zB2BNde0Zj/wcq
tECC
               "]]}, Annotation[#, "Charting`Private`Tag$73282#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV02W4FWUUBtAD0i3dpXSniKCCQYM0otKhdIt0I9ISSkhIIw1S0l3S3Sgl
0int+n6s593vnjnnzpw7k6lR22ptokQikZxRI5GyMSKRmzEjke6k55g+mW6U
ozwVqMgtx3uQgeP6L3SnErftepKRE/oUepAglvPsPuSJvoHK3NF7kYmT+lR6
ktD5U+xK8Z++kSrc1XuTmVP6NHrxGffs+vAWp/Xp9KYq9+368jZn9F/pQzUe
2PUjC2f1GfQlkWuYaleap/omqvNQ709Wzukz6cebzp9m9xHP9M3U4JE+gGyc
12fRn8TOn273Mc/1LdTksT6Q7FzQZzOAWjyxG0QOLupzGEht6vCf/WByckmf
yyCS+Fu/2n3CC30rn/NU/55c/KXPYzBJnT/D7lNe6tuoyzN9CLn5W59PFueu
0GuTIHyfXTK7meYyvNLf0/eYW7Ndz6OvM9cnefjN9MOyM184/lz+QB7KOXZS
XrYvYt5mbiSbyxryb9lS/uZ4Vvm73kDWkVXkedlCJgzPnzwgm8oO8nN5XbaR
Q3w+uZyl15NlZUV5Rr52rIR5bzg33Kv5qtxhn9e8PvxNqpovyhTh/2o+Irvw
pfNeyKHk5Ype1PHt5q9ZoGfTV4ZrIlG4f7sUdrPDb0CEnXb57DaYG5KSr+xe
ymHk46q+kKGkdO4cu/JEYZddPV6Zh5Ofa/oihlGf13YjKMB1fTHDaUBDGtGY
iO8e6ZyC/KMvYQSp7OfaVSAqu+2aEMV+lF6IG/pSRpLafl74rXmDPXZNiWo/
Wi/Mv/oyRpHGfr5dJaKx164Zb9j/qBfhpr6c7Har9Lq8yWi7tOFZMVcmOiX1
fbIt+xzPr28MzxipwjujH5Xf0tzxaPoYc9Hwu5pPyVv275h3mL+hpvmyXGGf
w7w6PNd8Zr4gE1PKfFA2kx3DNcp/wnWE+/C5dHJBeEdklXC/8mz4fhlDvi//
lE1kO1lHXgvvWNj7fAG5KTwnsrGsJi/J1OG9Nh+TXcPz59zo+ljzO9zWi+k7
w3vD73pOfU14jknCGLv0dgvDPRGT/XYF7TaHayJNuFa7GHbjzMW4o69kLBns
F4V3hlgcsGtBTPvx+rvc1Vcxjpa0IpbjPzlWnHv6asaT0X5xuE9ic9CuNbHt
f9bf476+hp/IZL/ErjpxOGTXhjj2E/QSPNDf1XeZW7JWz6WvDe8dSSmtH5Kd
+NnxzPpSc43wjJnPybh8YN4v23PYeYX0Leam4RrMf8m0lDEfD8+a/C48N/KG
bCfb+lxcOTH8fVkyvGfydPg/yoeOF5e79caylawlr8hW8g/Hc4fU65GMCXZv
2S0Lzy3xOGLXjnj2k8KzxiN9HRNpTwc60onOdOFbuhLf5yaHe+axvp5JvG2/
PFwT8TlqV9hua3gPSEdZ/YTsFp4387/hNwu/hXP/BxUyHvw=
               "]]}, Annotation[#, "Charting`Private`Tag$73282#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1nfczXUYBuBDKTOkjFBIRioiFA17J5uGjLL3Jkr2LLKy994jIyN771Eh
JSGjpS1a1/PH9Xnu5/6d8zrnPd/feeVs2qFW+ySJRKJ30kSic/JEolTKRGJ1
ikSiHL/btzOXLpR2bY2+PH/YdzCPrnSjOz3oSS/eojd9eJt36Mu7lPGzPvJz
KvCnfSfzaag/qmvCvXyl60dZ/Vp7RW7ad8W/q/vW3pP8LNC9rjsmNyUDE+0p
mSqfd32A/Ls8hI3yYzwtzzMzsUju73Hl5HVyJZbLOfhLP8pMwueMdW2bWZhL
7I7fg3lFf8LsZa4z83GBR+0zzXv5grn2/WZJrrLQ8xuZx/VHzDfM1WZu7pMn
mamYJu82i/O15ww0/9ANZZP8OM/I883MLJYHeFx5eb1cmVv20fakjLPvic8v
Xof8FgVYpGusOyG/yf1c0A3S/SkPowQDdRV0G+Qq3LbvZTFN9Cd1zcjIN/F8
Kuo/tlflb/s+ljCYIVRyfaNr1fjHvp+lNNWf0jUnExd1Q6ms32R/kX/tB1jG
G/pPdS3IzCXdMKroN9ur85/9YJxd3TV7bx5jlj0D8+IMuP6m/JnckixMtqdm
unw5Xrt8Ux5OyTiP9iwsic71qvIW+SVWyDlJyB+YdzBe3m4W4VDcR+Z13Umz
j7nezB+frzw7zgTnmG8/YD4br58Vntsszqj+qNnKXGM+wnkesE8x03CGGfH5
x30QZzfuqfgM4rzrPzNHmJvNJ+LfkBfGz2CpPMJjq8mfyDVIwhj7nUyQD8d3
gfyd/DZPsFLXXHdabk1WruhG8qJ+q70mSeM+0K3iPaq7tk1XizvivelW0yLe
h70N2biqe5+X9NvttbmTY/GdpPtefoeC8XvRtdSdlduSnWtxpnS35JE8xyhd
Dd0OuQ7JOB7fb7of5L4U4iNdq7i/5XY8yFT7PcyUr8f5k2/L77FFLsjzcb+Z
WVkmj/a4mvJOuW78zuRc3CWPNZPF748P7TvMp7gc92p835o/6k+Z75ob4ruH
b3jSPse8ny9ZYD9oPhdnjbWe3zrOVfy+zPbxnsw8PCRPM9MyS94b3zPx2XrO
cPNv3ft8IhfiBXmxmY3lcc49rpa8S67H3YyL98TEOOfxd0L+Se5HYdbp2sRr
lTuQg+91Y6it322vT/J4v7r1jKWOa3t0DUjBp7oNtNV/Ze9ITn7QjaOufq/9
ZVLGuY+/V7obcn+K8LGuXdxDcidyMd2ejtnyj66PkP+J80Ipltizxz0pj3e9
nrxPfoVV8sOkimvm3UySd5pF4/6Nv5fmz/H6zQHxGswCXIzP3D7XzBjviYX2
Q3GW4jNho+e3N7+Os2p2NteaeaOLf9s+w0wf55859n1mifgM4n40/42zyNY4
O5SWl5oPslKe4HH15f3yq6SOzp6cyfLp+Hsv/yIPpCibdB10F+Qu5OZG3OO6
/+KcUIYPdQ10B+TXSMOZ+P+A7ld5EMXYrOsY51vuyiP8rJvIy/qD9obcw1nd
FjrF79DejTz8opvEK/pD9tdJG6/BnoIp8i6zWHw/xv3tsf3N3/SDKR7nXtdZ
d0nuTl5+1U3mVf1heyPScU63lSlMZRrTmcFMZjGb1zzviMc3Jj1f6rbRJe53
ew/y8Vt85+kSjLGXZVncs6ySD8f9GN998Tl77P+w+GwH
               "]]}, Annotation[#, "Charting`Private`Tag$73282#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
KOc8XxcbUd/Y/xtPqP4=
               "]]}, 
             Annotation[#, "Charting`Private`Tag$73282#5"]& ]}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"Feedforward solution\"", TraditionalForm], 
         PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1a\"", "\"u1a\"", "\"x1a\"", "\"\[Theta]dot1a\"", 
           "\"xdot1a\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
JptG582cJqGYg0l4Tb0gcr+8z9nYhIQuuM2ZMqyFkFy02+I2+SXYsM5/6mQz
sz/ncA/5NTMBVpdfK4ueY/Y/5+ifHmTmYRkF2+5t6xJGW5a/RJSmzmOY3y+1
Z6dF0NGlV6tipThxo+nJYIs+EUT6uFFE7xobXtVrNWpk/9/6J3wuMSZ87tld
Js4WcmksnxvpsNa2fm0bRvhczxzZgOEVwxjhc7PhqRo1dgIjfG5JQEz9ugQ6
RvhcP/XcS9U7xjHC29puSBYbzO+G53uv/H+3fYDn0VU/wzEQXNpg3nF/DhR/
qOnXRNHBsS1PTjh0AdZt78ub3UKHzH0BOzWiluC5m7XSOp9BGDumevTgZwaU
aLTsYnR/AePjtALTVuZzXTqp37Z/BIvc99yR0k1GkQ+1dkT+XsYI36tpfmtv
jDEZJ3xvik6iWeIKEk74Xu8wT6nJdQyM8L2Nnlo+GDcJJ3yv0944JfYcMk74
3ts/bPwaSQxMinPXZDyNG73Ze7Una1Mvy/tmFgWY5An1sryvR6vGmFjKHMv7
fuXw/I3vJCHC+x7m+vB6+TWzn/k/70uvXu2Y3Mhged+fq6NOfwllgCtddaZa
UhAplS5/DJNinieTwhorXgoi8ma5yy9uktDfNKVCJUlmfRATpOfqw4CPWQGS
/14z96u7jXie3BwEv7ysd2u9MJKilPfLP+mEttKwI5kxwijj4Re7M3OD2Ht+
3eMPN4igu2UvGqQ52PA/gug5ihVBSrdiT2qs4cJvWrpl+2z+bz4RnpgYE55Y
bviqz8rmcYzwxNszc9UTsukY4Ynf7wwNTN06gfkO/vJ5zDYDdoa+/h/1RiBT
7XsJhTIHdQo8WjcE6NBqb8CxR3gByijaXwUy6NBl7jBTLbYE9Dfnvwhbj4Lm
tV/JJ1UYMNbi6/b48V8IgmVt3TdkJNNlT168sIBlttPbQxIpyEFr5l/9ATL+
vTv7BM8HNvTilqvmzzsknPDLM3G7/j5TYmCEX2ZvvXBIMJHB8stimqREQy8y
TvjlOSX2hLZMEs5zNyBXoIIb1Sy9oXsJ1APhme/wi3U9pk+zPDP/vZPJFscZ
LM9Mo+Re48wkIcIzizb/7PfgIyEjrMfhyRg/+naXq14qkAF6H88rHZkXQPvV
d+/2XWCAw8nFOzzXBdHQ/Jn2EWb/rH7DGbs9L4huphQPP+AnoRDRok8Xbwqh
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
NnzQSYGdy/a/+oLIVxBjIl+xMc57xSbvLFa+Is3PRfvBgVaMyFcExN6Ulf0y
hBH5iqvd+a/6gicwIl+RIjrpFZRCx4h8xS7Rwzw/TMcxIi+h/bTSaqdZNzw5
sm6rucsMuO8pDj4qNwbfvs2co3rMwcTxK1OHHtHhxDiNetx3ARhKUiEKmswx
lTqkEMxcZx+kM1ZRh2C+4UJLYCIDhF+PqBa7FcOExtnzfnXMdVks0pOlMIxJ
st2jBjaRkVW17mN9p2WMyGdUPhwtFWfup0Q+w1g3gc1fmoQT+Yw/e6u9jaQY
GJHPuFOc9+rfPIOVzzheHH4nhlnfEPmMrpaQZ+zuDCx0M7i1sTP7j8M7fnkG
9rHyGn6t9Qzt3m5WXkMr/3CcttUcK6/BIReY07qJud/+X17j9Oybh+NvSIjI
a7yz+q7n0c5g5TUUNY8fEGKe56ouDknNEoJowsuuR0CSWW+uH+ve+VQQ7f6n
hvsx+48z+hYtC+JCKP6u42T0UwYEvxFyGXrBnF9Sh+3XezHr+gltEVgjjNqS
esLJ7V3g4fr1cF60MMocooytOzOAPTu/ST9urQiaSt3DK/eRgivXO1Cob0SQ
H8emuM9KXPjWqwtHH0r/N5+IPAgxJvIg52nKAVfwcYzIgxxN75loyKRjRB6k
JqownEt3ArtB9kjjnpyGDRLuDx7ODYMDJbJWZnwWlB2q80TmJqDC43XbDcoC
lFtu+cBdSIeA1V2pxRxLEPfGJyT/5yjozS/vjt7IgJQKx6Yv8vXAwxhornxO
Rhz5Kmwt9Hmscn9UZ/xbClpd9D5/TIuM4xtm9L1imfvLStm+lY9IOJE/aW/7
7iG1i4ER+ZObQpsHP0YxWPmTW++RK/slMk7kTx59oz3tqCDhZje2/D+izjwe
qu6P4zN2sgyKaI8kZEulpHOklEKiVUmLNYqSUkmrkpAtJBRJ2pEi4g7JEi3I
kiWyjn0ZzMKY3/29Xp3z/NnTU2a595x7+n7e78/yxC/icNLpTu+c2bUA8Si3
Utc81Y6axDzKlVvtN9au5GMeZejbzv008vkN8Sg1NNc26mwK3Dj79gllhjTM
OtryNovcb3+9KnvgPCYDdxylN1pP8MHtoN9aK87TYNfFh4vHyOffcoXoVotJ
GjQOe/JrZi4FnqCYS165KAuLGzp1K15MgQUmc/+e48vBjZfVch908wl1+be2
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
yZHRC5/PD+D5JnqJLTeTDrTj+SbNpmfKU+414fkmEpuuZ7qj9RaWb7LZoe1W
EasJzzf5W5Ppud6rHc83GdnOd9UucADn/+b2XVgXZzEJGP/XLvirsM6BARj/
p+BU7KOK1lsY/1dRVfIcucrA804ek2K8+e6O43klPxK146m8U2SM/5MsXj9m
X8oiY/zfHs1n2n5ovYXxf7c2pb9orWSRMf5vuK9A+0AKnYzxf5sna/84uYzi
+SMJU7RHypkzgPF/+ROeizEcNmD8X/3zjzsfn+fi+SRslf6aW+ZcPJ8ken7V
FVMXNp5Pkm61lSQzPonnkwDVaXDgSB9M2qnwClwXR5wLLovFXO0AtXlVl9ZJ
ceTs8Zfd7gwaWHVTRMcdiEhg9rW4rC00yDYOX4yeISK/bdf1efRSwegyU2ef
GwnpXpakxZ2mgmyZlPlKLgnpEU8rz9KlQYkx06LcUQKxoOTxebXR8DyU/+xG
4hwvdIDyTTDdk/seypgxxM+nJkEAxLR3kmshPEa1aiiNDtEnXJdPPqPBmcAq
1hppOvjZzVeYOvXBEafPfPaPJ/C8lJviXy3rfboh80fwtpLiadgeVm3451sr
aPPbf2y7xoSjXuLPvEPq8TyV+C5bCWZUPZ6noi5+Q8xbsA0w/vGZTWRR+9Vp
wPjH885Ob/ag9RXGP95Yqk0WvMzE81Uu3cvzqVOkA8Y/npa2OyqTxCBj/KNx
rqANay2HjPGP5m3FNw+IcMgY/3jzxeKuyP8YOO+Y58n74NpqFj6ffhxJ07Ez
n8Xn01u35h3NQ+stLA+l+Pj89la9WTwPJainPKj/PwaehyI7foKlWD0C2Hx6
+cx7in91O+GAEP8n19fiyLjY5PH+iHbgRO7o51FBz09xvYt779EAOdV2NPo9
EbG//alcgUOFjGWM0tA9JES9t7l0opsKViOXG18XkpDvsysdnMRpeN7KWvmq
u6pNHcDsvZHinJ0GktkJHrlaE0BR0ViV5VkDhIwDPKHGdNhnky9+JL4NtPbO
dW13pUPAREjQVvQcyRmK3WFkTQU/Ws/ppz8ZwBNsESHxtQEkzIs2eo6ywCg/
eT1vOQUULe52vvyPA/Ndqz8apLfg8+4jSYcmNGbQe/Ufz9ns3TtXhtYPGM8Z
MxZhFiY7g/ObFV+m59q82WSM38zKXqWdfZuD85onfbyP5X3iAMZrtgfteh6Q
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
8z8GwoQU
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1:eJwVzTssw2EYhfHP3aJhpENdZhYdGF1qI2GRdNNEEaJbrRaWYncNtTJgNKIV
BIPZRNxGl0Ulfh1OnnOe9/+1banM2HxlCKFC5uTHiEZCWMfdmhBy1SGcVYXQ
J5/clRT4I/6Nm5Jm2eD3+BX+3O6XL+6Ju+PqZIm75orcsf1uT0t7bQgNXIJr
sUv6ix6T7fJvuXdyk/am93l9Vb9wG3brsQf0Rv2XP8BuzOKE27c3z3jP5bl6
TOMod4vL3sYxZp/iuHsOs/Yj3nh/qZ+U/9/+8H0SE1wRZ+wOjJS/wSHfLeKs
HXX7w1euVTJ80t7hB/QuPc1v+Y99fU0vuI249dqDepNe4g8xjguYcnvAf+G/
O84=
                "]], 
               PolygonBox[CompressedData["
1:eJwV0DtP02EYhvEXVAZNNMFBRtqiM0sZ3DkJiQkskm44aLSnrQjKURNJWNTK
5KRAC/WwGHXgAxCgJFAPfAMIJMgq2MKvw5X7vq/n/QfSyHBmIN0YQmjAK7Rc
DeEG/pE5TFwK4dHFEN5fCKEVO9wyCvxrfp3rwQk3gkn+Mf+Bi6DCraDIv+E3
uF6cck8wxSf5BS6Kn9wG9407spMo1f8ml+c27Ttobgqhasfx333PfUe/jAdu
A/ZL7+J6q36PH/VuWk/pi26dbu12TD+TB3yBi8qsTHDb8pfvNvXv/Dv7r/cJ
2cWtyZTdJq/ZX2W3d1Myae/Kj/XfQH/L5+2y93flba5Pv67X3Dowot/nq77Z
lxXuCh7yg/as9x16RF+VQ25zMmeP+WZGprml+v+E4HZox/Dbvez+Qz92S+MT
V+LmuS27HzXuKZ7zmfpvwt3EH+4znuGFW9atyN/CLvcF4zgHG0FRtQ==
                "]], 
               PolygonBox[CompressedData["
1:eJwV0zVsUFEYxfEHFdy1MBGkFIJDgstE0QTXFkKCBCtuxYJbi8uCl4EFKVRx
G9hIoAZtcFiwMuADvzt8Pef8z3ffK7zbVrPSxi6uGkVRFTPQjxZ1oyjBxMZE
0ae4KCqJjaJ6JkPebnEftlq+LHcyL7Fck42fxIuwcSbO7MAz8DX4FbmzeYU9
xW5jP+QVJg+7hp3CiuUx8VHUXx7PN+Wr8JdoH/06OluO132mpVh9Mx+fIGfi
vfnW/DR8p2dn8mv5q7qhuu5yFz6G/4JfpO3oMpqie+3MM3oHO4n9tJtCk7HH
dKWcSBvKOXS4vS10kVxG852/zp/Gj8ol9sfSAdj98HvKzWhV+TLtay+dzpGr
6b6E52ANzH65j64NNl3e5dn7+XV8tq6reYMVYXexX/IqU4DlYGew0vBNPGOg
/IBOlJvTGLmfvrr8lX/ONzQH5L76tliKvNuzDvDp/DVdsq6H3I2P5b/iiWY5
n4q/tV9M72GnsN/2UumwcHf49nwjPpeOsLOVLg7vp4XhPvFn8WNymf3xdBD2
kE6SE2isfCXcE3vr6Vy5iNbQf+Nf4FnhPXRB+DdjB3X9wrfmU/E93nWQX89f
13UP91b/TW5v3ulLwjfj/+jWmCR9Y2wkto1P42/Yy6PnsOPYc3sT6GBsMt+C
j+MH6GvKlXw539gckvc6fwjbIOfIPUy8M5VyknmvLw3fjv+rmxHuXLjTfAe+
CZ9HR+m30yXyTWfy6XnsBPbC7kQ6BHtEp8gtabx8NdwNexvoPLmY1tJ/5yvw
C+EddGH4/8ee0MP6/jQx/C3TGfpMulbe592H6UYs194wvKfck6/Gf8c7mA/2
ysJ35f/pZob7EO4235Fvyo/W7eCXhm9KbzlTwGfh5fammtomAz+Cb8Lz5F7m
I3bbFOIX8ApsmqljMvGj+GY8X/4P5jSikw==
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               PolygonBox[{{629, 3612, 3607, 839, 969, 1169, 1446, 680, 721, 
                799, 929, 1129, 1406, 630, 679, 720, 798, 928, 1128, 1405}}], 
               PolygonBox[CompressedData["
1:eJwVz7tP02EchfG3LTghkQQTHTUW5LI4QeKOOqi1cTKdiAsLpUWMTioQ0FYW
HQR1c+FSSlEZQJvwF1BakATwMis4CDrDx+HJ+Z7nvL80PdebTvZHQwgRvMSZ
xhDOIhkLYRNv60JYrA9hyaNB/R/KXI37znXqRdzn8twoF9NvYQNv+BL/kc/q
f/GZq3LfuA59HkNcjhvhnuuN+hb2uKje7Q7u0ydCSOg1vOYWuA++ueZucrfY
M7Yr7pT70P3Jtq5/9S4lM3ycm5a/ZVS2e7cqL9l7ZEF/Ie/Zn3HDvv2hP3BP
yDt8WZ7Xu2Te+4q8rffJk/Z38ov8xUXsd+VDros7QrP7Jn+ZT7ir7im+qL/3
e1fdp9xx24DtACtchdu1X3DvI2Jvs81hUH9qf2LP6Q36Jn5yQb+BdUxy89yi
d2n9D5a5NW6Hu6jPIsuNc4+5I1z//z/xii/wJW4brdwMMvwY/4g7BjUwUMc=

                "]], 
               PolygonBox[CompressedData["
1:eJwV01lwj2ccxfGX2CoE1Upkw50lsXXsJbFcWVpLbTPVSoQZncGMcoNSS203
9mzW3kRLLeOqYskiIQl6URdmkMROLbWHMtTnufjlnPM9v+fJ/N933i7ZCybO
bxxFUSMzx5/EuChKMgkxsrlvjjaJosqmUVRt8bnJxMrNRnwvno/tklPlu+Yd
Fi/PNvfMEawCq7K3Rm4m/2VuYc+wvvxb06ZZFGXoy8wGeY8+T5/Dp/HD9Tt1
KfKdcAbrII/iW/Fd9DnyXXMYO4Odc34Kn8p/oV+taypfNDexp/o+/H8mTj9M
PwAfy5fy6/Hdcq69pXQzPgvrwWfyhXam8/P5ZLyI3g73YZ/rLss/8CvoSPwY
jZU7h3v0Z+koeTq9IxfSQ/bKsbP+Z628mN9IJ+PFNEXuS1fZH8/P5pvoLpgb
8hPnevNvTGvdUHslZp28S79DXyAnhXcQ9rDP5Gxz2/yBlWGV9r7hk/k+7lmp
u0i/lnNojO5Xep5ex/6134t/Hd4H/qX902atvFO/XZ/Nd+cz9Pm6xPAewhms
vTyXLteNwFrynfgsfCQ/jb/FF9CD+lKswp3X5EX8BjoJP06T5N70Z/sX6Ffy
LNpYv4/W0HrssfOX5Jn8YtoTP0gbaCwd4nx/3Rj+FP8LXihvcy6L78YP0+Xp
OobnbxqwT+Xh/Cd8arhfvmkOYCXYGecn8ol8L/0K3Xk6Ts6mjXTVpk5+ZDed
fxWeiW6w3ZNmjVyg36rPlRPCewh7WDs5k2/BpzjzvXzD/I6dxsqd+ZGu103A
/qQd5Z50ub0aOlbOolH4zmkVrcUeOvt3uJNfRNPwA/Rl+L10UPiGaT/9aHpC
3ha+PX0+tsX5JXRTeC7hedCu8lC6w+40fh4fH96ReSm3xTP45nyy7jt5BD+V
v87/pjsll7l7PJ/Ap+t+0v1vzmHXsAf6HvyL8Gz0A3XFZpWcF75v/Xa5Q3j2
YQ9rI88w9WY/dhIrtbdM/hC+Yewq9g82QD5uVmK54TdicfK3ps4U4SfwEnwh
XRe+JyyeT+OX2nlvKrEr2H17/eWP1nm8iw==
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
            , {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1nfcjmUYxvFXFDJCsgqRLXtlpYGM7L1HRpOyMwpNI5VsJTvZo8ySrbI1
VESRvcke9T0//vg5jt95X573fe77ui9ytO9av0uihISEHnclJETu9UcTnNRH
owlKwOWEfeZNcUofg6Yoif/M+uE+rOD9kBh/8mY4rY9FM5RKuPNh/c3TYCXt
jyTYz5vjjD4OzVEaiawfYJ4Wq/gA3I0DvAXO6uPRApmtHW2WHz/xMvHjzN7g
6fANfwN5zKby0viL34O/9JY4p09AS2SxboxZAfzMH4vvZvYmvx/fxs/gS/Rn
8CbPy6fpZVBP3yb/Nn9S/zZmSMr/lq1wXn/GtfX6RL2YPk/vKJ+UjeQu2VW2
cv1BOZa3lwVlLfmDfFn+4npFuYI/L2vFPZW/ym6ybNxrOZC3k+llDblJro7v
p3+lV4tnrf8sB5rn06frj6G+vl0eNH9KXx0zJOMHZWtc0D9Fcdfn86dizh/i
4/RH8SsvF8/SbBB/AN/xQchvNoOXxSGeHIf0Nriof4Y2KB/PztrB5hmwhg/G
vfiHt8W/+iS0RQUktf4t84xYy99CChyOe4JL+udoF/cSyax/2zwT1vG3kRJH
4hngsj4Z7fE4UuGo+XO4ok/Bc6iE1Dhm3gFX9anogCdwH47Hc8c1fRo6xr5B
GqRFOpxwvROu69PRKZ4D7sdJ8864oc9AZzwd9893eMc8M9bzd5Aep2Kf4KY+
E8+jctw/6981z4IN/F08gNP8BdzSv8ALyGrteLNC2MOrxP00e48/iI38PRQw
m8nL4R+eAWf0F3Fbn4US1izgT8ecZ+MT9ML4jVeNe2/2Pn8Im3hZ/rVeHe/z
gvwLvTwa6Dvk4bgP+ncxi/dc/y32gPlZ+VLsLbP/eDW5IWbyS15SLox7LivL
xnK3fFW+5Hp2OTGetywia8sf5Svy99gTcmXcN1k7ziy5J86L2Cv6ED0rauqb
5eZ4L/Sl8W5iCH+Uz9Ir4Eg8I75Gbxj7kp+L9x9xiM8WL+Nhaz7lRfFHfK/Y
f2ZDeTZ8z4ciM87H74tEmMNfQXVkwQWz+EfiLszlXVAj9qvPGmaWHT/wYXE2
4WKcVUiMebwrclj7GS+Gvbxm7Gmz4fxh/MiHo1Dcc14RR+O8wL9xr5EE83kp
axbpVWLOc/JJenHU0bfIffG+6atihmfj/eEf6DnC9e/lljhD9GXx3siaslmc
o/K1WO96YTk73ln5eNxzuTPuiTwW+12ujf0qG8lW8dxld5nV9UvxWXEW8btj
n8qNcoFrpfXFelU00X+KteaP6J/rJVBX3yr/jHNC/yZmqBXnAR+h58TWON/4
8vh+GMGL8Dl6JRyP9wmX9W64Bwt5N+SybjIvif28dpwnZh/yR7CNfxh7HVfi
uyEpFvHuqBPnifUfmeXCdv5R7EFc5T2QDIt5D9SNPYFrZj2RHEt4T9SLZxr3
IH4v5EYe5EU+5I+zJN7zeC9iz+C6v98L9+Ir3gv149nhhllvpMDXvDcaxHnm
9/3YLDd28I/jfuEm74OUWMr7oGGcV9aPNMuDnXwkiuIWfx2psIy/jkbIaP0n
Znmxi3+CYrjN+yI1lvO+8R2tncJL4QBvjExmo3g+7Oaj4ueZzeVP4ESch3xd
nElorf+R6M7/5Yq79j+8/R2l
               "]]}, Annotation[#, "Charting`Private`Tag$73366#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
72PrP+DHZwbr1Val1d85W7Ay+dvlQdYNx56U388+zbPtdf6WT1e/6H+V+8IX
U3X1bsyzlFnPH83PzHmcsyDneuYdneu6D/kJ+DB5s/V30ivzDNOH5PKZkfKb
uXfWdaQN5JWZlfr/8N/gY/O5aOPMXGyY3qX8yfxDOWv5J/jB3nME7YnNtqYG
fo58ceZKzlC8itpm3abcN754zs6cF/plsdvkT/Q/4idmvurVURX098WuzFyR
d/Cb+aPV8/JleTaxOtmnrh/J98rsyPecuaS/Qz5Dbdf/Wv9zvkTOQP152Bxs
krxFrpvfN2on9i1WVg2Xh1j3AvaU/GHuQ84Y7FP1cc5z/DusXn6f5Hwyk4fq
jdLrnWcuf2tmJPaZmpuzC/8eezi/C9QwfHTOIHyOfHnmGvYNtggrmTMSm499
ku8vM1Sur47xOffDqmWfy//yW/hyakReS/9UrG7um+vH8H2yX/Wu1ztXvoI/
gN+Jj8/vJNqKPqj3h2s25/zExmRW0XqZa7mftIdrz6Ll8psiZ61+b9oqZwJd
4Pp5/Ft5/8zPnH+0WuZ/nlW5Ii2VNbS6dZ1oQ7mM3i76HVZeNcHvkkfiV2TO
8PXyPXmPF/m+/Fy9mpnj2Tv8gfy/+ISc57Q1ra23PPPKdd/yS/C9ck5avzDf
LTYls1VukDNHjcBfwvtlv8rVMl/yP2f2XvZIvvN8j7nH+XuyXr2ccl1/181z
TfXMhPw/mf2AT8V/xhrmLFC7se+xCjlf5Cv9nZWxh+Vn+HY5H+hY1/8PSiRb
VA==
               "]]}, Annotation[#, "Charting`Private`Tag$73366#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV02UYlUUQBtBLd4N0SSvSXQJKKtLdoNLdIN3daQsoKgZIi9Ld3d2dSqNn
f5xn3pndG/tF5lZdanWOEolEMkSNRC7EjESGxY5EUrA6ViTSiUIk46K1S1zm
CsPteYM11jpTmOTMNyvCSXkSdblq/wizlPyp70IRUrDArCin5MnU45r9I81S
sVbflaK8wUKzYpyWp1Cf6/aPMkvNX/puFCMlN6yNNk/D3/ruFCcVN62NMU/L
On0PSpCa782Kc0aeSgNu2T/WLB3r9T0pSRp+MCvBWXkaDblt/ziz9GzQ96IU
aVlkVpJz8nQaccf+8WYZ2KjvTWnS8aNZKc7LM2jMXfsnmGVkk74PZUjPPWsT
zTOxWd+Xd8nAfWsPeMgk65nZYt6PsmTkJ7PSXJBn0oRH9k82e5Ot+v6U40/9
RzwM141M/Kwvw0V5Fk3Zom/AS/l3Hvu+KfosbNMPoDxr9dV5FK4rmVmsf5dL
8mwOyp8Qh2b6rWpDXsmX1T4skU+qnUjCP35vqpqV7dbOqt34TN6rtuQxMbhG
f57znvW/1BrhjGFPeB/UXjxlkf6Y2p5/ScgtBoWzhutl/Re1LPe5rD+v9mCO
fEj9lLjcCP+H5ubb1Ea8lq+ofVkqn1I7kzT8njNNU7Oxw9pA9smtiMn7+r/V
muH84TkiC7/qy3FFnksLtusb85/8B09893R9dnbqB1GBdfpa4bfDc0JWftOX
56o8j5Y89fkZZjnYpR9MRbLxzNpM85zs1g+hEtl5bu0Fs6zlYo/ZUCqTIzw7
4Z6EeyR/Tite2j/b7C326odRhZwsCdeB6/IXtOaV/XPM3maffjhVWa+vzZPw
DJOLpfoK4d7IX3JYbkM8PtbvUJsQYZn+te+eK+dmv34E++XWxOID/Qa1Tnh+
5EtqbxbLx9UOJOI2g8OZwv1QK/KAm/oLak++ko+obcP9JX5YZyAvwjtifafa
NLxPRAn3iH48Y7n102qXcGaScYch4V0Kz4KzzFPf4R4H7D+ndmekfCBcA2KH
68sAPjTfqNYNvxGefU7IHUkcrrl+mVopvCfy1xyV25EgvAv6XWozorJCHwn3
Ws7DQXkU1dikr8fz8EyTm+X6yuH6yd/Qhijh3pvl5ZA8mo94hxVmVcK55W9p
S9Rwr83ycVgeQ3XyEI3oxOAr6/k5Io+lBnlZaVaVu/J3tCNmOKtZAY7K46hJ
PlaF5yJcY3k+7YkV/r9ZQY7J46nFZn39cH/De0d+Vofrzn15AR3YrW9ONFbq
Y4fzyYU4Lk+gNgWIQ1ziEZ8EJCQRiUkSzuFzhTkhT6QOBVljVi08m/JCOrJH
34LorNKfUbuSPFwThvKapNb+B+p+LKY=
               "]]}, Annotation[#, "Charting`Private`Tag$73366#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1GWgFWUUBdD7yEc3SIN0S3d3KIpikaIYpIoFBqAYqIiKKKIYKComabfY
3d3d3YFr/1jsfb4XzMw985rOmD9hXlGhUNjhn53FhcK48oXC1+UKhauYxQg6
U2B3X/tGXs1sRtKFIkpQklKUpgxlKaYc5alARSqxh9/1rVzPHEbRlYOcF9iu
L2YSlRnv7Dt5DXMZzZHOqrBDP49uzDAXcbu+hLP0VryjT2ahvgvP6pdwod6Z
z/Qq7Kl/L6/N1/UezNNPlU15LdcghzBGP0pWZROPmtfJftzDSvMK2T7Xw4fm
jXIUD9DdfLAswW3cYV4re3M3S83LZWu28a75OjmcKfoiWZfn8nnJgazRV8ku
fK5XZS/9B7mB+Zxm3pXX9bEcrVfjMf18enCIuSR35t6ZSjUmOPsx15Hnzzh6
Up0a1KQWtdnb9/4kr89zyv6wwFl1HtcvoBczzaW4K9fGNE401+N5/VLqsI/5
Z3lDrpll5ma8kX3iGL0GT+RzzU7oHfhI782heuk8W/0y2Ydl+tmyDe/lWuUI
pusnyfps5oXsvRzEvaw1XyS75nPjC/ONcjQPZsfME+Uv8ha5Ua6RPXOfLDCf
LpuzlTezc3Io4/VjZU2e1K+Q/Vmlr5Qd+Vjvw2F6mexbfh/n6G15P+8SJ+sN
eDH3TF32Nf+a680zy87Tl8Odl8396WfkXaIe+zn7Td6U68o+0Y/6NKAhjWjM
/r73d3kzx2Vf6M8Rzou5Tz8ze08TDnD2R54Rx2dn8nPOavFUnjEDmGUux/15
p7OfnGJuyEv65TTlQPOf8lZOyH2YW/BW9if/h16bp/Ur5QBWZ+9lJz7RBzJb
L5/3NL9b9mW5fq5sx3Y+yC7KkbkuZpoXy0Zs4WXzejk4980682rZLe8VX+aZ
yjE8lHfSPEn+levP34TsvuzFwjw32ZK39Q1yGBNzn7IOz+gX573Sd+NTfRBz
9ArZy+x63gOWmBvzSvaLZkw2/y03sSh7wmCaM8XX/pGb825mJxjCXOcVc/3Z
vewjLZjq7F+5Je9R9oKhzHNeiYfzLLNztGSas//k1uxs9oJhtKI1bWhLO9rT
gY50Yrqf3Sm3ZSeyAwxnvvPKPKKvyA6y1NyEV/P553np3fkqOyvH5try/Mz/
A/493YE=
               "]]}, Annotation[#, "Charting`Private`Tag$73366#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1XccTXUYx/Ero+y9ZSUK2asys6IQaQ+bFkpLw5bsppmRWUSys1f23kK2
osjepd7PH5/Xdzzn3nPuOef3uwVadmzSIUkikWiaNJFYlSqRKJQ2kWiRJpHY
kDqRaIbceEU3SZcOE+Qrjquv+1Q+L3+CUfKv8iOoIXeRF/L34Gf5F5+5V9dS
3ig3x2fyJrk88sivypP59FjLJ8NE/ff0pK4hDvG5cdX3PUb76v6iFxy3gt6W
+/Cj+f38dVqT/kqzIV0612jelV+kP0cL0c00FZKbLzCfxZ/T/0OfpUdpXmQy
X+3chflW+k2OXcRf51vwn/Ob+Qq4W35N/o7PgEnyFPl3vhGu+Z7H5X78RbNP
URPddIt192KhvMZxRXSt4zrllsiL6/oG+v76S3Jf1MJa/X36Nvotcivkww39
OqzH/eZtzbfqWyM/buob6gfoL8v9UBsb9EX17fTb5DYogNd13+syYrJ8y3GN
dAPlK3J/1EF33RJdYSySNzqumO4VebvcFl/IW+SKKCi/IU/hM+E7ear8B/9E
PBOff0IexF81W8n/xw/gx/AH+FrYz2dHXX0PujTeV1ok7gtNjRSe52Lz2fx5
/b/0OXqM5kNm803OV5x/Vf8H3eH4xfSGnDBvJ38pb437RivRnTQDUprfY96e
n6rPjHXxnsW90/9AT+kax7mdp7E8ON4Ns4EYKx+Ua+NRuae8jL8PS+TNPvOA
7rU4Z6xVFEIH3Q+6LJgi33ZcE91nsSbkQaiHLfoS+tf1u2IN4l78p9+KkmZv
mO2OdxmFkcA2s+0oZd7efE+8DyiCJHhS/7n+Bj8Y9bHD8aX1HfR74xnjK3mb
/GD8JrmjPI3PiqnyNPk03wR3yE3lL/ib/Co+Eb+J/5b+pq+DA3wOPKbvRZfr
LtD7432naXCn57LUfE7sHfrb9Hl6nOZHFvOdrrcM31F/iu5z/BJ6U05i3l7+
Wt4e7zt9KO4hzRh7ifn95m/y0/XZsD7et3gu+un0T92TSCo/JX/J34o9BOPk
Q3JdPC73llfwRbFM3uXayurejL0tnjeK4i3dj7rsmCYnw9O6r2LdxDpDA+z2
+XL6t2KdxH1HMSTHHrO92IdfsR/lHdsp7m38JhRHCjyj/zre3VgDaBj/B7qV
umJYLh/w+Qq6t+WDcY0YEutIfhgPyJ3kGXwOTJd/lP/im+JO+Vl5SDyn+C/h
k8Rv4sfTw7E24rv5nGik70NXxb5Ki8e+RdPiLs9lhflc/qL+P/oCPUELIKv5
QddbkX9HfzreK8cvpbfiHTTvJA+Vd8b+QyvH+oj/hthTzEuYv83/pM+JDfG+
xXPRz6BndE/hLvk5eWhcR7xLmCAfkevFXhf/CfIvcY+wUv7NtVXSvSsfivOg
JFLief2w2JMwRG6MQ45/UP+e7rD8DkohFQ6bHcFRHMNxPOTY9x17xPxdlEZq
nDB72Kxz/BfK76EM0uAF/fBYExgqN8FJx1fWfxB7qfw+ysb5dTN1uTBDTosX
dSPi3mKYPFE+yteP9SH3lVfzJbBKnidf4l/E785TRf4w1q7ZMv4fvjM/jN/F
V4n9KfZylIvfRWfpztLcdGO8F/G8zH6iZ2N/oU/HPaN5Yi/3XNOZv8SP1J+h
Selqekd48+Hmk/hjse/F/kN/o7mQ3rypeT9+jf4SLUm303TxjM3m08u6l+J/
xu+qKn8U76bZBxgu75aronw8A3k2nwcz5fR4WfeNnAwjYl9Bf91auVRcr3zK
d1fTfSyflD9EBWRAM/0ofXKMjL0Dpx1fXd8l7rf8ESoiI5rrR+tT4JvYD/Cn
42vou8bvkD/GCHmPXC32/thfYx92TyrFu8HP0d+NWXImtNCNibWPUbH+8Zfv
fUTfLfZjuQseRGfdXF1ezJYzo6VubKwxjI51hjM+X1PfPda13BUPxb3VzdPl
wxw5C1rpvpVTYkysLQzQrZNLY4181vfV0vWQ/5S7YaS8V64ee1vcW3k+nx9z
5axorRsnp8JYebJ8PPZ5vCAPlNfzZbAj3p14fvqf6RXdy/Hc+IL42zXUpj3j
GmLPdNxy+q/cnf8m/rf4a7QG3Rd7XOyF7n3leJb8z/q/Y/+jm2hKJDOfZz4z
zqG/RZ+JfYHejYzm2czb8OP1qeOexDqI+6b/jp7QNYh1Kg+SN/BlsU5eIF/l
m+Gc31BH7hXryqwHqsR7o1ugK4j5cna01U2Q02BcrEec9/m6+t6xpuWeqIoc
uGD2qNkn8RvlXqiGnLhodgn1zPvEdeh6ozpyoZ1+oj4txsfawmDdRrkc1ssL
5Wt881gb/D3I5t5c9r3/A1Z93tg=
               "]]}, 
             Annotation[#, "Charting`Private`Tag$73366#5"]& ]}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"Test on dynamics\"", TraditionalForm], 
         PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1b\"", "\"u1b\"", "\"x1b\"", "\"\[Theta]dot1b\"", 
           "\"xdot1b\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]},
    {
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1:eJxE2nk8VO/7P3DGLAYxjC1Jpd6RJO0quu5KkkpFZG8TkoSkVdFCqVAJyR6F
VGTJEucghSh7ZMm+r2OYsf/m83j8jq9/esyjMWdm7vtc13V7PVecuWRwjsTH
x1e1iI/vf/8q+s2+CVfw3FV0XXKFxJ0x0Muh6XfZYuB042jvxV42lC3aSidb
lkO/1Ke1hisnYI/fPvzdkTpIZqXdThLkwLn1U4s2LGoBlbbcWrdkDhxec25U
en8H3JqcDmCocOFztfuVYo0euMdWq2mz4sJOCZVP5DsDUNzj6VVsxAXb6edh
sSYjUML6do0lyIVL37s3fTrMgkndxVLF9zjgY0b9b9aBDW8yj6p1fZiAsz9u
2mywm4ArfZLJypHjkEdbfOyCKReyP4zVxumzYYO4R2Cv6xTkfU9fdvceC06N
aanqO8yA5+Vv6XpXRiAqvFCe83QObFvJKx4E9UOK746GSgM+ZME96vgxrBNc
s7SOhh3iR6UKaul7Hv8DrCSW9cichHItxs535VfB+f3bc86bCKDdGdZ48KdC
CI3bkHbBnoxe35/SSutMgmdjOZ5OVynopVaV7fb6IOhKuOJm50JFSSvL3FfN
x8E3nefBd+/SkDi1piOs8BvwH/nb5uchiOKqj+7sMqwFvt3p/JHX6WhS1zMv
7lEbPJThHK70FkIRovWLJQv7wMnsbD7nnjBSOhmX/adzBFo9N1vDSxEkaPxD
emQDGyRfvPr7KGoR2rtiyaal7Al4y1C5/uO1KHKyLe/fqj4JeS7L9im9F0Pd
rJ8n+U2nIXx5pLzWcQbif2CjfGDbLOTcmuKzK2egj/di0zikeVhxkDaz8oQ4
ej5/Ytu5+3wo9feax/XV4qhip9l62Uf86Mn3OfXllhLo2KklVZXpJPTicq/9
qUYJ9OPBJNWlRADdklIQUzRlon+9tfeC35JR/BpKiWsLE1UplbCmVCiIyuZf
nGcliZyX+HkwzSnonXry7fBuSbTXsi35WgAFrTmToD97UQqFCGf8WVpFQQ0H
Mj8b9Ushy8WnQg+JU1Hlmxvr4LI0Grj0+z79BBVxU45pKrKkkcSmqq39wVQ0
n+GS5uUogwq//OxaUU9FB9V19t0al0ENjpF/Ty+loR+W689fuCyL1n42ez5n
RkMfk5w48/OyqExLpDUnlIZKnjU499h+gnby/m1cLTYsn/0SOru1CEaFy0ZS
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
aw56wCxyXzBKes2mEw3hYmwu4aWrodyDG/olCPPS2xqs6/emNCLMS99J973u
uLYDYV5ab8r7fVh0D8K8tGSX4LvX8iyEeWluGMN72xQbYV7afeuvV9LbOQjz
0vwp5xvthlkI89LOxr/ua27rQ5iX3nTCrrzuUDfhpa373WmpczsR5qU7pR4d
sqaed8xLK/glra6IYyJ3ee7E2x4ajCs823snlInK7m/KGvSQh+zyRJMTSkxk
sC/V0pslD63slsXNd+9Asnxv3m3ypsM6vtwu2ul2hHnrZJFztAVLmwg/zZPa
Mj8gqoX0pJcC6VMlTm2kJ90rczl1pUcH6UV/fzBHNHJeN+lFJ/xa6MDY1UN4
6ojKJZbVjF7CUz9uOHbPcqYfYB76xMnT18MixklfOjXYS4WpwSN96R+od80W
0UnSl9a4mXntvcQk6Us3uh1VNpXikb604suI5LbaMYD55unyM3W5y1uRXtzB
5tylc6BHWd0/nbldCPPOvxSzDAyu9SHMO+fb3zLs2cRGmHfO7Sxm9ltxEOad
T/6hr1xUzkaYd87YtaNz//t+hHlnQeVAieLyHsI7Rx+PEleQ70KYd/Y7zLb8
7EWtV//xzt5+2RaRvtT5d9/prQce0+DtL/XLh6j1aVUmy7ZrhTz0n/fpW9Ex
JnooY9CWlCkPYf3cBvOqDoT5aLPJ6z1/3RoIf+zUWDqjUjdBetbzHV+z2qj5
Aves845MvLSmzve4Z12dp1ZaZ88jPev0m3PPVIWMA8wfR5ytf/A6l4Uwf6y5
wFb97CYOwvzxa3++ny7UfoP5Y9HBE6+8XnYR/thw8rdh0xsmwvxx0pvlK7Yd
ZyKVS0Ld869S86PBpKMZtV5W23Je7JOQhyru564E+jDRmjeFuxYvEIS5twa+
vj7NI/1rryN7bqirTJL+dfC9Agldaj7EvDBd9Ngs0adshHnhoAp6eR81P2Fe
eKS4/vd5ZzbCvDAdukjcCOtEmBeWMbdfttuUieJzA3WWbqVBldeZ3ftvMtFp
5aZ7N0ppUOenBh+Xmp8wT+zR0r6xPPw3kl8/V2gwUBBeHb4q6lbOI/1sQcY+
2UfUPIB54I+8pDvyCzkI88BBg0Li21ZxEOaBr1qYJIp3UPvxfzxwlWvsjVQz
6jwfb7KZz5MGM212RnESmChp88D3qzwarP67TuLTJSbCvG/VhVZ1Efok6Wuv
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
YX0=
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1:eJwVz68vRQEYxvH34jIEYxMELoHgR1AEgk11r+BPODaGjbGRiAo3UdD4DwgI
DEGTCO5tmCK4NpuRXJ8Tvnu+z/OenbPTkyxPL9VERAYJ5pRZ5LFdF/FUGzGJ
Z30fnZi3n9n6ca2v4chW0RP86AXs2Ep6Hi/6AU5sf/oK6vGg57DLu9wX+Dkf
QIn34sZ+KRuxYf+Qo1i3H8tPWyYbMSPf9GG06r/u97wDzXrR/ZtPpJs+5V7k
ZXtVFtL/lENocX91v+Nt6bf1LfcvPo5Dt1NZta3inY+ggT/KbuzxnOcW+QUf
RJn34dZ+JZuQ9e5NtwofQ7v+DxZ8M9U=
                "]], 
               PolygonBox[CompressedData["
1:eJwV0rtPk2EAhfG3WBZbShMcDEyysCi2hYTVRCZAhaqIq4mMVi4uXDc3KLh4
I0Gg/Ae4aetClUE3F+MlDAJxAxJIWgR+HZ6cc573/fqlTa88ymWf1IUQIsij
0UhgAhWyJxrCywshxLDM3cNV5PgPXAqb9iSq7vfyr7g43nH3ked+2v34a1/D
U+6jnUbZnsKJ5/v411wDVrhBLHC/7AHs2O0Y4Yp2Bp/toh3DjD1tF/R9/XHt
nXoGFf6rbMYcfyRv4r/33pJvuKpMyO+yFaue2ZARROtDGHf2T+/CJfuB80X9
Nx/srNy225G0d52X9SZctJ87P9Rv4LJ93fmoXuJPZYf8IdvwxVlJxjHLz9jr
+oE+XPstavdR5b/JFszzx7Ibp77XbfmWa8Sae+/tOjyzh+wX+h/9LvbsFMa4
T3YntuxZnPmsO/wSl0SBe4h07c+DCM4BedpKTA==
                "]], 
               PolygonBox[CompressedData["
1:eJwVzztPk2Ech+EHoRHQIiycRBNH/QQK9PQVGJAeTLRqAprIahAUTFSq0TBy
GBGlrYKRxVUXqIcgokwwok6ii7Dp1eFK//fvWd6eyg/33TgUQqhhioSIs849
6umvC2G+NoQ2yvoiZxmxr9p6+Kzv08B5+1NbOy/0JaZtuzrNL32OW7Y13cu2
+zQb9rd+mzgcCWHC2293jAfein7/2q7xTzcyYFvQHbzUb3SEmzqvZ9zf3Rn2
dDejtoqO8UVPcoS0/ZmtkyV9mVnbD52tfouu6FYK1f+ux9zv3XF23Geq3+/b
N729cx/jrreCLrn33dcJHLVlbM/dx1nWV+jltv2DLcFX/ZAoWfuirYtX+iox
7tg/2pJ8048o2w70ZtT/5LGtmZy9aD/Baz1IkhYueCvZT7Kih5iz/dQ5/ugU
47ZPOsWWfsJ/VZxKPQ==
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{504, 652, 526, 708, 815, 955, 1134, 555, 595, 670,
                 778, 918, 1097, 505, 554, 594, 669, 777, 917, 1096}}], 
               
               PolygonBox[{{615, 689, 553, 1308, 1095, 1274, 916, 1057, 1236, 
                776, 883, 1024, 1203, 668, 740, 847, 987, 1166, 593, 633, 707,
                 814, 954, 1133, 552, 551, 550, 549, 548, 547, 546, 545, 592, 
                632, 706, 813, 953, 1132, 544, 667, 739, 846, 986, 1165, 591, 
                761, 868, 1008, 1187, 631}}], 
               PolygonBox[CompressedData["
1:eJwV0LtPk2EcR/HH3lg0RGkZDIthcYNoWy8hbO5SuRgukrioiy7S6oZggpsh
KkzgJbGt/AGwKsgliLq5uGhrYgQJg5o4FMLnHU5+33OedOh76vqdwu1YCOEI
ptFMunExHsIa7idCOMd3cZX/wKw2yhfQyl+hT2viD/EJF7RV3NPz/DcGeB0z
2jX+Bhn+Er1aih/gFv+HqjbJP+I8f4+SluOP7Iy9gR3e6dbRr9fwzB6Jfhe9
o6Ql3CVU9Xb3C9J6w33hXnGT3k4mQ7hk/8dj/Shvsz9j3/sJnrV/4qb3GP/r
VvhE9E14l72HcT3Fj9lvseX9tPs1+q7eVlC0s/qUnbbXsc073Br69O94ag/r
RTtuL6LCW/hzFHiCN3CD/0FZe8A/IM+XMaad5b/Qy7/hiTbEy9H/4/Po0eJ8
HJvIae9wVz/DB/Eax7U5XNZj/BDVAkm1
                "]], 
               PolygonBox[CompressedData["
1:eJwV0klQzmEcwPGn3oqLGRRvZMtuuDq4MNooN3dtSJPqzXLBibIfbOFiu9sp
ydIlJ81QlKx1teRAmEma8XkO3/n9vt/nfed9n/f/5lenNjemhxDSMIB1pAZ7
0YUViRDaUZsRwhx+EcMo097guL6J78FTLNfasEPP45n2JkzgjnZBG0IpH8Ax
rYz/QRX/jmvabn7APtn+GE/4Mn4fNXw2P2OfZ+9Dhj2Ff7jNzztvsU+zP8Mn
vsocxka9H0ftpfp68xdOarlmD37rlXwEV/kuvsYcwX5tkvkofjd9sTmIpfGe
5j1zuznLWV5mCCX2MZzWp/C59l4keDZfbf+MRp7g4+Yt3ur9Sb7W/gPN8ffg
U+3d+Oh8pTmEDc5e40i8n37CnrQ/j3fjFfwbrvAmvs+eZe+M9+BL+F1s47k8
3d6Av7ipndM+oIS/wuH4mTyFzvgbxOeLrXoyvg7xj/UQi+IzQbWzmfws3qNY
60OLXswb0IGF8f6o0mfE54x3KNJ60awX8VGU86+4rNXzB8iP3xmVWg5Ps9dj
DDfic9DeopC/xCGtkP/EFv4Fl7SdvB0L4vtQoWXzUxhEgfYCB/UCXoc2zNeu
o1yfzv8DuORuQA==
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1WWYVlUUBtAZSumWjiGlO6RTugaUDoeUGkmlQwEDC1tQMcEEVFRAuru7
TRQRGxvXfvyx5t173+Gec893PyYpJTV5dGJCQsI1PyJn+VGATeoZdKIGaZht
XpDN6pl0piYvmNXinHohI0jLvWaF2BL3pQu1eNGsNufVixhJOu4zK8zWWItk
avOSWR0uxFqMIj1zzIqwLdaiKyv0bfhJvYw6LNbX5WKszWjW6Lvyt3oVGZir
L8r22AvdeF/flp/Vy6nLy/pb+Cz2xi51CplJ1X8qu/GP+ry8m9XqQ3I4ublB
P08WY4f6hLyLOeotsg9XSB/rMDn2wG2ufyDbcZlf9GflhHhmVuj3y6FcJQdf
Mo1fY9+uvyLr8S2f60/JsSxW75YDycIXTI19ma+NtflXfUHewxr1YTmCPNyo
v18WZ2ecJ1vVfcnA7foPZfvYS5wt9XhVXz/Wi7NlDOvi97ke50lGHtAnsSvO
ju7U5zWzBvGc8WyMJRMPmpVgd+yLHjTgdbOGfBVrM47MPGRWkj2xFj1pyBtm
jfg61mI8WZhvVoq9sRa9aERWHjYvzb64L71pTDYeMS/D/rgHfWhCdh41L8uB
uAd9aUoOcpKLx1y/mYNxL/rRjNw8bl6OQ3Ev+tOcJWaNuRTPzwTysMCsPIfj
vgxgpb4Dv8W7RguW6pvwTZwHE1mv7x7/abBW5OUJdQWOxF7Ypu4X7zt36D+S
HbkW7wIH1MPISUv9m7JpvJvq03IcS9R75CCyxvdJv0H2IJGLTGKd+RE5kh/I
G58ZM+JZuMn1J2XFeA6O6k/KMfzIAv122Z/v432O7wdT4ntGiusfy058x+/6
c3IiK9UH5Z3kineL6dxq/pZsxmX1GTmepeq9cjDZ4vuk3yh7kob1+qNyVOyb
fPqnZCWOxTmzQz2AjAzUfyI780ecM614W9889htnyyTy87RZZY7HmTCI1rxj
1oIrsW8mU4BnzKpwIvbBYNpQkEIUpghFKUZxkihBSUpRmmfdoyonYw8MoS3v
xucf5x57ZgpleM6sGqdiDwylHe/F2XI19sxUyvK8WXVOx1oMY5W+C3/G50d7
lulbxXsSa7NPPYTsTNNvkr1Iywb9MRl/KPPFd0+/UNbgTOyRnfF+kyneAf1q
mcxf8bnQgXKUpwIVqURlqlCVaizyb2pyNp6F4XRkuVnreE/j2ZnOZn1v0rFR
f1ymkp9LzEz8/+96ddf+A6tc+sg=
               "]]}, Annotation[#, "Charting`Private`Tag$73451#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1FmUj3Ucx/FnNjJjjIiEG3VRqcwYMkMz5ZzqHO2MZSxFKa3n0GKtjKUS
dUqUfc8slraLtnOyx4whWlQXRYWYolCKyVh6fS/evp/35/v8zX95fk+H4aNK
RqYkSVLpn3r0Sk+SOWlJ0gRLUpOkBB3xn91tdnP1mViq64trMFL/mS4XW3kz
PIszXnO73Tx9Fpbp+uFajNKv0+VhG38ODa6/Qz9f1xTLdf0xU7eX98Yhfh2e
1K3nnVHNn8dZr79Tv0CXjRW6AXhDt4/3wWHeCU/pNvB81PANPAtlfCIvl/+S
R8TflPNxRr/LbIvX9KfMm3HO373LXKhrMJuZ35mX422v+dBMQXpGkoy2OyIX
4BJeaj9L/kmf8BJzP++E5rzOvlpuiUw+zf6k3BNteK790/JG/Xmzi/mDeSW2
2200m2KSvoxXyH/LD8d3EdejQb/bbIfX9afNW3De57rbXKTLwUrXfcRTMYYP
5LPln+W++I3n4RndJt4VtXwSLvi/7tEv1jVHuW4QOiNBCnKQit6uW+Kai1HB
ByMfo/WbdddjB5+MNPTRL9W1QCUfgjd1v/B++J13wRjdFt4NO/kUVOpO8kdw
lqfHPa9bxluiin/M0zCW38vfkvfL/XFAzsURfU38png5PjsfK38uF+BH+Sp8
od9kZqOR32+y3XG5CK35VPsq+R99Kn/UrONd0YKfs/9Sbh+/K59pXy/fGvcl
z4hzKS+PzxPvx/zevAKr7D6J+xDj9EfNQtynn2Me0A3AQTkPR/XbzVaYHt87
HydvlQuxi7+AVbp/+WNxD/JGcc51K3grrOZDMVd3kJfiD94N43XbeHfs5i+i
cZz7ODu61ljDh2Ge7te47/AnL8AEXTXvgRvju8FLuCjOvt1K/aVYy+9HYTyb
9DW6G/AVn4YmKNWX69rgHf4A5usO8UE4xrvHsyrOFi/CXvlqfK3fHGcfjf0O
U+xOyMVxP9itNk/pHscFnomBugp+Gd7ln/IMjOfD+QL5sDw47hHeI55zulpe
jG/4dGTFWdJX6triPf4gFurq+JB4L7w27jHMiM/OJ8o74nvDPrljvH/vfY/d
FjkHU+1m8DXyafmJeE7F8znOpa5Kbof3+UMoQpl+p+4mfMtfQXacy7gHde3x
AR+B4ng+xLnQ9YznJn8Va3X1fE92kvwPXrTU5w==
               "]], 
              LineBox[CompressedData["
1:eJwV1EdwVXUYhvEDIdRhpEgTAgkkFAFnXMCMOgMkQCIdXVMDCiok0lTaWGhK
UapSlOYKpSa0BJC+QUEISFdQXIDSm4Ig/L7Fk+993i8nufeee/4Z+YWvF5RL
kuRDP8qqJ8mc8klSA/0qJMmalCRJQxEfjk6oif523+kbo5i/hWW6y7wfbvFs
fKQ7zLNxkn+OjqiFAXbf65tgM38bOfhYf0SXg1P8C9TGQP1aXTq28Hfwte4K
74/bvDM+0f3MO+M0n4u1ugd8BMrhWd0g3To5A1v5CHyj+4sPwB3eBVN0R3kX
nOHzUAeD9et1TbGNj0RXTNUf03XFWT4fdZGv36Brhu28ALmohyF2G/WZKOGF
yMM0fZkuF+f4AqzTPeQjUR71dUN1m+QslPISXhHj+bt8ufy3PBB3+SFeDzP5
q3y6fFzOw29ya5zX7zdroHKqzyHuq9whruUL7dfL/+lTeIF5mbdDbZ7Cj8pp
qM7n8gdyLhryBq5/Qy7SPzabx/02M7HDrtSshAn6q+ZLGKVfYV7VDcI9/iOv
j1nx3sxsdNPPME/E+8MFuQ1+1R8wa2KqfhHfID+SC1EBx3hjzJOfs39TLpZb
YCffEZ8HJvLRfKV8TR6M+7w7PtX9wrvF58m/xEbd47gfSEVD3TDdZrkldvEx
6IHP9Cd13eO186/QKJ5B/RZdK/zAx8brQ0/MtDul74GLfDHS4tnUb9U9j918
HFbprvN8/MN7YZbuNO+J3/kSbNL9z0ehIsp4E8yPZz+eWXmb3DqeNTkLe/Q7
zSqYpL9mvoz39KvNG/EMuv9DzD/5i3E/+L/2P8kNUI3Pjvsr50THe9vPls/o
n5i94n2abfGM/R/2B+Va8b/5tDgT5I5YaldkPol7hity+/h+ycfNdCyIsyjO
FXm73Cae9/heYq9+l1kVqf72ZLvr8iuow4fZv49v+U27ofFd530wR3eW98al
OCeRHueNvkTXFvv4B+iLDDRFM2QiC83RAi3jnHFdqWtewH4+Hq/F2ao/p+sT
n2ucjSjWJRijq4wTcgYWyg/NPDTy+lv53adbfMGx
               "]]}, Annotation[#, "Charting`Private`Tag$73451#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1XfclmMYxvEnbSJalIZ2SZGWhPbekUpLpaX0pq00Ke1o772L9t6L0DJS
QhFCZSahku/5x+9znMfvfsb9Pvd1XW/utkmNuiVLJBIbb0skcqRMJHKmTiRG
p0okMmGb3gf1wyMXHkDumL1ujNdkxna9LxqgKr+OK4ev9TnIE+/jx3JZsEPv
h4aoxq/nnsA3+lzkje/gx3H3Yqf+ChqhOr+BexLn9XnIF9/Bj+fuwy69P55G
/vg81ybwWbFbH4BnUCDe69qbfDbs0V9FY9TgN3JP4Vt9PgrG5/Fvcfdjrz4Q
z6Imv4krj+/0BSgU38FP5LJjnz4ITVCL38xVwPf6QhSO7+AncTmwXx+MpqjN
b+Eq4oK+CA/Gd/CTuZw4oA9BMxSJz3NtCp8LB/WheA4PoWi83/Wprj2AQ/ow
NEexeL9r0/jceFd/DS1Qh9/KVcIP+mI8HJ/JT+fy4D39dbThjupNcENvibrc
Nr0yftSXoBt3Rn8BafFI3B83w5wXh+P569+bkzBcb6sfMzfFTX2k/qd5EFrp
9fTt5iqYYU6Jn+I3kD9zfbHcnAlL+ST5BbdFtpcL5J14F7fr4+Q/8czla/Id
mS3uAcXjN5Mz+fUyn5wsE9iP92M9yguxV2R3uUTegxGutZPHuWaYY06L//hR
8io3GK1jH+o7zFVxMZ6X/ou5H5bp3fUvzR1wBx6NZ8PNMufHB/obeIE7oT+H
W/rzsXe5nXo1XNKXowQe4WdzBfBh/M5oz32kN0cCbWIvc7vM1XFZX4GSKM7P
4QriSPxN8exQCo+6NpcvhKP66PgtUBpl8BjKxn143TyvKYxj+pj4G/B4fIdr
8/kHcVwfG/cXZwW/m6uBn/WVKBffyy/giuCEPg4d4qzg93A18Yu+Ck/EvfAL
uYfwkT4eHeP84PdytfCrvhpPxn3zi7ii+FifEJ/Pfay3QDJ0ijOG22eujd9i
f+m/ml/B2/rL+lfmjkiH8fq/8vU4k+K30Rebi2GKORk+ibNN/sC9jDfjXsOb
W2JurGXcZh4t/4rzUA6Rq+V9OILOcabF2uU3yjpypkyFg/g99rf8jd8p+8sV
MjM+wDuu95Bn+a2yk1wo78J7sa/0CfJ67GWsMd+P8vG85RLuYUyNe8WncS7L
H7keeEvvFD72OpLjxThXuQPmuvhDX4Oe3Dm9M+5ChVg3sefjnMFJfSK6xDkb
fx9XD1f0tagY64ZfxhXHZ/okdI1zlj/E1cef+jpUinXDL4/9h1P6ZHTmTsY+
Rgq8FGdxnC/mBriqr0cv7uv4e5AelWNdcSvMJXBaHxhnmblnPHv9Rf0z8/OY
Z74jzjvzGHlNDkW3ONvj9zc3xCxz6lgD/PB4ptwuOUCulFnwITa43lt+w2+T
XeQimR6HcXesM3lD7ovzTK6V2eNMQxXvf0qu5DfIknKaTB7PCp+7Pkhe5Hth
qTkDpsYzkafifEEqJMX/oPhecyNc00fof5hfjbWq99HPm7ticdxfnLOxZuRN
+Qaqel15fZW5FKabU+AMP1he4nbI3nKZzBhnOKbFc5en+c2yrZwv08U6iN9T
Hyv/lnvksNjLMiuOonv8D4zP4jfJp+VsmSbeE2ezvMINxCrzvdjE95XfxppB
BkzU/5MjUc31Cvpqc2l8oQ/RL5v7xN+mvxS/s7kd0sTZwLWKvWp+Bv/om1E9
1jv/NlcGX+ozYi+jdawHrjH+1begRqz32O/cY/hKnxl7DjVR2bU1fFmc1WfF
+kYt1EYd1EUVr1vrNY/jnD471lz8X4rziHsW1/Wt6Md9F+sZGTFJvyVHYZ05
B06gntf+D1TpZPE=
               "]]}, Annotation[#, "Charting`Private`Tag$73451#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1Xf8jWUYx/Fj/uy9M7KVUmQUQlGRkFFRIZKGTWVnZWbLllGZlYZKSWho
yF7ZlL33TOl9/fF5fcf9nHOe85z7vk7h1p0adUyWSCRuJU8kNiUlEv+mTSSe
xJo0icSrKIUU2GztP31D/CG/hjuQElusbcU2bMef2IGd2IXd2IO92If9uOV9
GmGt17fDnUiFIukSiTf0Z/nRqIcDrk/oG+vXye1RGtV043TpsUhOjaK6N+Vz
/Jj4DvJyuSLqy0/KH/AFsFzuJa/jH8NfPieZ3IRfb20Qv53vwLfgP+e/pKXp
ZHqC3mWtOj+e/5RmoKPoAfoj/ch6N/qLvIzWoHPopXjGNMl6Mdpd/piel4fR
3fIqOjaeNf1eXkor0ffoOdrAWkP+Q74gxvOH6ff63vx6vjb+9r2Sy0/xG6x1
REv5i7h/3C3XkCfwGeM+5DQorushX+DHxbPDQe+VQv+0fqPcCWWQFoespbT2
jLVNcmfcg3Q4bC2VtabWNstdcC/S44i11NaaWdsid0VZZMBRa0nWnrW2NZ4l
yiEjSuh76i/y4+NZ4Jjr0+if02+TX8d9eEj3ri4TPpEzoaSul3yJn4BGgW6u
rhBWyMe9X1rd8/J2+Q28IC+J54by8sPyRD4zFsdnyr/yD0UXZ0juzV/mh/N7
+Hdj3/Mr+PvRWG4sz+NvxwT+CF2p78NviN+V1qFz6bU4C7EH3V862jzOAP3T
9W+HxmvjLMit6JfyV7QMnUJP0tW0gvWadJL8Gc1CR9O/Yj/H9+V/4x/G+/xl
miXOPt+Hv8JPjDMpr5QfQBO5iTyfLxz7WD7pPtPrWsg75O6oiKw4ZS2DtZbW
dso9UAnZcNpaRmsvWNsl98T9yB4zQ99Xf5WfhKdwxvWZ9K30u+N84wHkiJmh
f0t/jZ+Mp3HW9Zn1rfV74tygMmrpJuuyxnORc+IuXT/5Oj8Fz8Rn6hboiuAH
+Zz3y6J7Ud4bvx2q4BHdFF02fC7nwt26/vINfio6yKvkymga9ycv5IvGfuGP
xkzR9+U38o9jHn+dnve5Wfk2/D7XDOZ38H351vxX/Nf0HjqVnqK/0KrWH6VT
475odjqG/k1/ihlh/U36u/wdrUk/oFfif4DmjvNPB8S5ov/II+heeVrMGv4H
vgpmxnyjzeLZ8Yv4YvE58lvyJr5uzBvfJZv8Er8/1vCi/LV8Lx6UH5On8Tmw
RM4Ts0Y3UL7JT8ezuOi9suvb6g/I/VANeWP+6Afp/+Vn4Dlccn0O/cvxfyD3
Rxt5qVwW1eXa8nQ+Z/wfxF6W1/C1kC9ml/w2/x//Dr8vZnbMSv5H/pt47nQW
vUB/i/livWn8X8hf0OJ0Ij1Gf6Y/x73TzTGX6BN0Pr1B18e5dN856SvyR/H7
uX4I3SkP4F/iv+HLxe/Cn6Y19HX4GXwujOUPxpyIM8j/wT+C22LmyoP5W/zM
mO3yT/FboLncTP6YLxFzRb7ifnLpXpUPygNjBuNx3Xu63LEf5fwxn3VD5EQ8
E7kFrnp9bv1rukPyoJizKIDy+qH6ZJgtt8Q11+fRt9MdjhmItvK38n2Yzp+h
v8YetlaXzpTzYKlcEBV0w+TkmBNzHte9b159e92ROFcxG1Ao5pd+uD5FzMaY
s7jh+nz6Drqj8RvE2cftMdP0I/Qp4wzFucQ/rr9N31F3TB4a5xFP6Gbp8sZ+
kQvH3NO9I6fCh3EmcNPr8+s76Y7Lw+JsoJ5uduxHfCsXiTmoGymnxly5S+wr
vhraxHmRP+FLxmyIvS9v4evFGfE5BeTO/Im4T34XP5x/mV/Gl8cM/iytra/P
z4n9g3H8IbosZji/ll9OH43vQq/StbRozF86Sl5Mk+hIuj/mK51nvStdHd+L
Vo89QC/S32NmxDmmi2Mu0FJ0Ej0ev721AfxWvj4WxLyKc+q7FeS78CdjfuEV
+Tu5AurIDeT3+fwxB+ViMdd1o+U0cRZjv+F53afyHXGu5Vveu5Cuq3wq5kGc
ARRHVf0Yfdq4l3iOSMRe0XfTneZHxl5FCSSLfWDtdWtn+FGxT1ASD+rH6tNh
Ydw/mus+k++MZxNnUN7GN4hr+Jt0A01u7X8TXprd
               "]]}, Annotation[#, "Charting`Private`Tag$73451#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1Xf8TXUcx/HrZ/9+Vvbes1JEGSXJjspoUBQ/RCVSVtmRkr0yQlOUEdoa
NFCUvTKSrWzKHj0/f7we7/E599xzz/me7y2R2r1FtzSJRCIpbSKxPpnJmkg8
nCWRWJeSSDyHG1FXN1WXE4vkJJTXDZDP85PRVf5BvhMt5Ifkj/hS+EHe4Nxp
dI/I6+VuSJW/lCvjJrmePI3PhXH8QbpY35tfw9fHB/xFmlZfgR/IL6QX5JH0
L/nNuHb+R34pvYu+Tf+la2hL84fpx/KntDSdTP+hK+Nz5gPpJvl7ej+dQ6/Q
tXSj35JEH5Xn0Q2OH053yt35DvxX/G24Wa4vT+dzY4ncR/6Nb4B0cY/lQfxF
fkrcOzyim6crg5/kTb4zra6VvFF+HhWRHjfpB+sv8VPjt2Gz49PpW+s3yT1w
CzJgi9lWpDd/zHyz7gXcioy4WT9Ef5mfFteCbY7PoH9cv0V+EZXQQPeWLk/c
SzlTXJfuFfkKPx2PBrr5urL4Wd7ufBl1beStck90lL+Wq8SakBvKM/i8+Ezu
K//ON0Tm+D3yUP4qP4rfy78Va4v/if+G1qLv0P9oK7NW/II4Hy0Xa4Uepavo
CvNBdLO8jD5A59Kr8T7QP1xzJtpWnk+3Of41uivWOO0ld6JL5S9oVTqdnoy1
YNaIn8nnw3j+EP1c/xK/lm+E5HgO8jD+Gj8D3eWf5bvRWm4tL+TLx3qVd7iu
zLon5O3xvqAKGutm6fLH9cgp8cx0r8rX+Zl4DDt9Pln/pP6PWJ+oiizYZZZi
1s5sRzwD3I6s2G2Wxay92c74HbgD2fCnWVazVLNd8suohuyorB+uT2CW/Hhc
h+4TuUI8C3mPz2fTdZB3y/3wlPyNfDuqy/fJb/MF8GV8h7yOb4wc8m3ya3wa
jOb3xT4Q7048a7423uXP0TZxHfyieCb0RjqFHqO/0F/MB9Mt8nL6IP2IXov9
LPYd15uddpQX0D8d/zrdLf9I+8ud6bdxrfSOWKv0FK1h1oR/hy+ICfxh+lX8
bn49fx9uiOcqv84nxbqO91peyd+DtnIbeXHsp/hV3uu6cug6yXvkAaiJprp3
dYXwtZwznrluROytcV/kJ7DP52/QP6X7K/ZF3Ilc2G+W06yz2d54d3AXcuOA
WS6zLmb74t6hFvLgoFlus6fN9stDcDfy4pDZYeQxf8b8gO4V1Ea+WHv6N2Lf
xHvykzji+Lz6Z3UH5aG4B/fr3tMVjv8BOX+sT91IOT3ej31PXsXXQTu5rbwk
9m2sjmuTt/LN8LfvySd35Q+ZjYjnzA/ju/DfxTOj1egMejrOa/YA/z6/mBah
E+mR2AdjPZv3j/8Q+VvahM6ml+hvtEC8N3SU/AnNQMfQ/fG/QD+IvTjWp3xv
3BP+PG0fz4//lK+IqfxxuibuZ+xdfHP84zfll5/jD5u9invxYJxbVzSuSy6I
6rrRcsa4RjkVR32+gL6b7og8HHVRCMfMjuMETuIUTuMMCvpM97insYeiHgqj
hn6MPhM+lDvgrOML6Z+P6433CvXRTDdbVwzfyUVibevGypkxJ/5X5F/5uugY
60X+jL8l7m+sFXk73wL/+p7Ccg/+qNkb/B5+BP80/328K7Q6nUnPxDtGG5g3
px/KS2hxOon+TVfE5+K9oxvjOmnT+G30Mv2dFo13io6TF9FkOpYeoHPNevGr
+XqxZvkLtJO+Hf85fyum8SfifPph8V/Ft8R/flMR+QX+WPwmPCMvi30HDeUW
8hy+BJbJxeI91o2XU2Kfi70X55yrqP5F3XF5JBqheLzb+gn6LPg49jqcd3wx
fU/dCXkUnpWXyzUxiz8b7xltbNaSzpVLxh4rl4h9QTdRzop58Z7hgvMW1/fS
nZRHx38BSuKi2SWUMO9tfko3JvZXlMJls5JmfcxOy2NjL0RpXDErZdbX7Iw8
LvYQlMFVs9JmL5mdlcfHe42ysTfpJ+mzYX6sFVxzfBn9y7Gu5AnxTqFc7E36
yfrsWBDPA9cdX1bfL56ZPDHWN8qjjv5NfQ4sjHuIRJwr/ld05/hJsQZRId5f
/ZT4v4g9Q+6K9rov5EpYG++5vIN/KJ4Xf51uoGnM/gd3hKVz
               "]]}, 
             Annotation[#, "Charting`Private`Tag$73451#5"]& ]}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"Backward Integrate feedback solution\"", TraditionalForm],
          PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1c\"", "\"u1c\"", "\"x1c\"", "\"\[Theta]dot1c\"", 
           "\"xdot1c\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[1.6], 
         LineBox[{{1.3006389793667519`, 5.313168200976984}, {2., 0.}, {
          2.777067800703609, 5.313168200976984}}], 
         LineBox[{{3.222932199296391, 5.313168200976984}, {4., 0.}, {
          4.8634086674484545`, 5.313168200976984}}], 
         LineBox[{{5.1365913325515455`, 5.313168200976984}, {6., 0.}, {
          6.959342963831617, 5.313168200976984}}], LineBox[CompressedData["
1:eJxdy11I02EUx/H/tBcFZb5keKHgYohKmLot59v207nNuc3NRQ41iakhirEQ
kVCIYWGRUSF1UQvDi+iqoguLuumvDFuWCIIvhCCRUs50IVIy0/XiCfEceHg4
3w9H1uh2nIsQBEH35/39c/y94aHMFFw/q8p6hiQI/yaN/v9zDBec8X7vm0Tq
cubpuOSVKmPG4qlnMM/CUbPtZ9KOlPpx5tlw3Q75Et/HUM9hngvnV2Pu5nI0
9TzmCvS+FAcGHIepK5mrMKLpDlzePkD9JPN89KiHvmUuRlBXMy+A2+KT3RAk
1AuZF8FV45q5e39Hu7sXMy+Bs0Xemda/Ra5hroWk4bU3cnyTHPvdAwyfGnnU
avtBXsq8FMHmOz36IxvkZczLMFs3dU2TsE6uY65D/UrN00Hdd/Jy5uXo6Hxw
6IphlVzPXI+wt7Y9rjZAbmBuwD1t4O3NF1/IjcyNKCl45fE4l8grmFcg1YqP
6arP5CbmJigSzvvcpk/klcwrcWu1Iftd6gK5mbkZE6dlcSrJPLmFuQWzV5Xz
c7/myK3MrTgTUrTFrk2TVzGvQqh7VNr3YYrcxtyGpmDX43DyJLl9v8MO8WH+
xXG1f9c9zEU7nsiXi7t8It1Xs/tqmKOCB6NPPKd75iLbBQe739t/Azz6qV0=

          "]]}}, {{}, {}}},
      AspectRatio->NCache[
        Rational[1, 3], 0.3333333333333333],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->400,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 73}, {0, 5.313168200976984}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.864135238134066*^9, 3.8641352749121633`*^9}, {
  3.864141785675068*^9, 3.864141806351376*^9}, {3.8641418573518705`*^9, 
  3.864141877509347*^9}, {3.8641430855573835`*^9, 3.864143092071275*^9}, {
  3.8642366967041645`*^9, 3.8642367176523905`*^9}},
 CellLabel->
  "Out[155]=",ExpressionUUID->"6c737b36-f5a9-4f62-a12f-3be2d11392f6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.962406025088304`", ",", "3.5163440520745954`", ",", 
   RowBox[{"-", "3.9777782454138553`"}], ",", 
   RowBox[{"-", "3.9777782454138553`"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.864135238134066*^9, 3.8641352749121633`*^9}, {
  3.864141785675068*^9, 3.864141806351376*^9}, {3.8641418573518705`*^9, 
  3.864141877509347*^9}, {3.8641430855573835`*^9, 3.864143092071275*^9}, {
  3.8642366967041645`*^9, 3.8642367177273664`*^9}},
 CellLabel->
  "Out[156]=",ExpressionUUID->"9d8c39b7-137b-4a1f-892f-3f772757ccd6"]
}, Open  ]],

Cell["\<\
Observations:
The choice of n is critical and would determine the speed of the algorithm. \
Smaller n has higher speed but may not converge and hence would require a lot \
of re initializations of the initial guess, while a larger n would not \
require a lot of re initializations but would take longer to converge. A way \
to choose the best value of n for a specific system would be extremely useful.
Furthermore we have been outputting the distance of the initial guess \
propogated to the other boundary and the desired value. We are doing this to \
design a stopping criterion. 
Another useful quantity to observe would be plot of this distance as the Find \
root algorithm progresses. (We want to see if it is monotonic)
\
\>", "Text",
 CellChangeTimes->{{3.863704362873541*^9, 3.8637045081791234`*^9}, {
  3.8638919339126487`*^9, 3.86389212755976*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"4eb81403-a99c-42b7-b4a4-36ec4bd675dd"]
},
WindowSize->{1428., 741.75},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
Magnification:>0.9 Inherited,
FrontEndVersion->"13.0 for Microsoft Windows (64-bit) (February 4, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"f891f112-c914-4bf5-b27c-d7c0d8607b34"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 60193, 1503, 1802, "Code",ExpressionUUID->"b098c715-9c30-421d-bfce-eae26b7e4e91"],
Cell[60754, 1525, 354, 7, 66, "Text",ExpressionUUID->"9be2365f-c4bb-4396-8de9-0c9df9f460d6"],
Cell[CellGroupData[{
Cell[61133, 1536, 8151, 224, 249, "Input",ExpressionUUID->"53d64360-9130-4d93-aa11-669324ba78f7"],
Cell[69287, 1762, 41733, 775, 185, "Output",ExpressionUUID->"26a460da-725b-4914-a686-35492cfe9fc2"],
Cell[111023, 2539, 47355, 865, 186, "Output",ExpressionUUID->"9e1fe45f-1b33-419e-be97-6786b44dfcf4"],
Cell[158381, 3406, 47782, 877, 185, "Output",ExpressionUUID->"74e20f43-63a2-4fe9-8948-4df62a1c358c"]
}, Open  ]],
Cell[206178, 4286, 258, 5, 45, "Text",ExpressionUUID->"b6d5a503-f5ca-471f-9280-ef8cf6caad0d"],
Cell[206439, 4293, 29560, 751, 764, "Input",ExpressionUUID->"af3ea33d-8e3a-4566-b4c0-08bbf9c4fe8b"],
Cell[CellGroupData[{
Cell[236024, 5048, 11466, 322, 489, "Input",ExpressionUUID->"3024c605-13d1-4af1-8ddb-6b0488dd66d7"],
Cell[247493, 5372, 371, 8, 28, "Output",ExpressionUUID->"b16d838e-f9b3-400f-b194-76f021dc08df"],
Cell[247867, 5382, 221483, 3925, 361, "Output",ExpressionUUID->"ee36d47d-9a77-49cb-af7c-de2cd51b2490"],
Cell[469353, 9309, 409, 10, 53, "Output",ExpressionUUID->"a044dbc4-c085-4c07-94c3-2f97646cef35"]
}, Open  ]],
Cell[469777, 9322, 179, 3, 25, "Input",ExpressionUUID->"e3b56381-3091-428c-953b-8049828b4235"],
Cell[469959, 9327, 203, 3, 45, "Text",ExpressionUUID->"78f72274-21f2-4a3e-a828-5906a5fe2643"],
Cell[CellGroupData[{
Cell[470187, 9334, 9878, 269, 301, "Input",ExpressionUUID->"b5dee5c3-2101-40ff-b338-91333f517d06"],
Cell[480068, 9605, 895, 17, 26, "Message",ExpressionUUID->"90ed08da-a75f-4631-8aed-9a4f0b2b7b76"],
Cell[480966, 9624, 268348, 4703, 361, "Output",ExpressionUUID->"6c737b36-f5a9-4f62-a12f-3be2d11392f6"],
Cell[749317, 14329, 554, 10, 28, "Output",ExpressionUUID->"9d8c39b7-137b-4a1f-892f-3f772757ccd6"]
}, Open  ]],
Cell[749886, 14342, 965, 17, 149, "Text",ExpressionUUID->"4eb81403-a99c-42b7-b4a4-36ec4bd675dd"]
}
]
*)

