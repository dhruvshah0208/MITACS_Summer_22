(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    682791,      12968]
NotebookOptionsPosition[    680400,      12928]
NotebookOutlinePosition[    680836,      12945]
CellTagsIndexPosition[    680793,      12942]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
  RowBox[{"(*", 
   RowBox[{"ICs", " ", "-", " ", 
    RowBox[{"Initial", " ", "Conditions"}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ffCartPendulum", "[", 
    RowBox[{
    "ICs_", ",", "n_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "A_", ",", 
     "order_", ",", "maxIter_", ",", "InitGuess_"}], "]"}], ":=", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x", ",", "xdot", ",", "f", ",", "\[Theta]", ",", "\[Theta]dot", ",", 
       "\[Lambda]1", ",", "\[Lambda]2", ",", "\[Lambda]3", ",", "\[Lambda]4", 
       ",", "\[CapitalDelta]t", ",", "bcs", ",", "eqns", ",", "sv", ",", 
       "froot", ",", "xff", ",", "xdotff", ",", "xff0", ",", "xdotff0", ",", 
       "\[Theta]ff0", ",", "\[Theta]dotff0", ",", "uff0", ",", "\[Theta]ff", 
       ",", "\[Theta]dotff", ",", "uff", ",", "\[Lambda]1ff0", ",", 
       "\[Lambda]2ff0", ",", "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", 
       RowBox[{"xGuess", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          SubscriptBox["xGuess", "i"], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}]}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"\[CapitalDelta]t", "=", 
       RowBox[{"\[Tau]", "/", "n"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"{", 
         RowBox[{
         "x_", ",", "xdot_", ",", "\[Theta]_", ",", "\[Theta]dot_", ",", 
          "\[Lambda]1_", ",", "\[Lambda]2_", ",", "\[Lambda]3_", ",", 
          "\[Lambda]4_"}], "}"}], "]"}], ":=", 
       RowBox[{"{", "\n", "\t", 
        RowBox[{"xdot", ",", "\n", "\t", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}],
           " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
               ")"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", "\[Lambda]2"}], 
              ")"}]}], "+", 
            RowBox[{"A", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", "\n", 
         "\t", "\[Theta]dot", ",", "\n", "\t", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}],
           " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{"1", "/", 
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"A", " ", 
                   RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
                 ")"}]}], ")"}]}], 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[Lambda]2"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
              ")"}]}], "-", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "-", 
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", "\n", 
         "\t", "0", ",", "\n", "\t", 
         RowBox[{"-", "\[Lambda]1"}], ",", "\n", "\t", 
         RowBox[{
          RowBox[{"2", "/", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"A", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A", "-", "2"}],
              ")"}], "^", "3"}]}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"4", " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"A", " ", 
                   RowBox[{"\[Lambda]4", "^", "2"}], " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
                  RowBox[{"4", " ", "A", " ", 
                   RowBox[{"\[Lambda]2", "^", "2"}]}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"A", "+", "2"}], ")"}], " ", 
                   RowBox[{"\[Lambda]4", "^", "2"}]}]}], ")"}]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"A", " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "-", 
                  RowBox[{"3", " ", "A"}], "+", "2"}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"A", " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A", "-", 
                  "2"}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"A", " ", 
                   RowBox[{"\[Theta]dot", "^", "2"}], " ", "\[Lambda]2"}], 
                  "-", "\[Lambda]4"}], ")"}]}]}], ")"}]}], "+", 
            RowBox[{"A", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"A", "-", "2"}], ")"}], " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A"}], ")"}], 
             " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"A", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A", "-", 
               "2"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{
                RowBox[{"\[Theta]dot", "^", "2"}], " ", "\[Lambda]4"}]}], 
              ")"}]}], "-", 
            RowBox[{"4", " ", "\[Lambda]2", " ", "\[Lambda]4", " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"3", " ", "A", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
               RowBox[{"3", " ", "A"}], "+", "2"}], ")"}]}]}], ")"}]}], ",", 
         "\n", "\t", 
         RowBox[{
          RowBox[{
           RowBox[{"4", " ", "/", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"A", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A", "-", "2"}],
              ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{"A", " ", "\[Theta]dot", " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}]}], ")"}]}], 
          "-", "\[Lambda]3"}]}], "\n", "}"}]}], ";", "\n", 
      RowBox[{
       SubscriptBox[
        StyleBox[
         RowBox[{"x", 
          StyleBox["Guess",
           FontWeight->"Plain"]}]], "0"], 
       StyleBox["=",
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       StyleBox[
        RowBox[{"{", 
         RowBox[{
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}], ",", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}], ",", 
          RowBox[{"InitGuess", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"InitGuess", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"InitGuess", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"InitGuess", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "}"}],
        FontWeight->"Plain"]}], 
      StyleBox[";",
       FontWeight->"Plain"], 
      StyleBox["\[IndentingNewLine]",
       FontWeight->"Plain"], 
      RowBox[{
       StyleBox["xGuess",
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       StyleBox["=",
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       RowBox[{
        StyleBox["Table",
         FontWeight->"Plain"], 
        StyleBox["[",
         FontWeight->"Plain"], 
        RowBox[{
         RowBox[{
          StyleBox["If",
           FontWeight->"Plain"], 
          StyleBox["[",
           FontWeight->"Plain"], 
          RowBox[{
           StyleBox[
            RowBox[{"i", " ", "!=", " ", 
             RowBox[{"-", "1"}]}],
            FontWeight->"Plain"], 
           StyleBox[",",
            FontWeight->"Plain"], 
           StyleBox[
            RowBox[{
             SubscriptBox["xGuess", 
              RowBox[{"i", "+", "1"}]], " ", "=", " ", 
             RowBox[{
              SubscriptBox[
               StyleBox[
                RowBox[{"x", 
                 StyleBox["Guess",
                  FontWeight->"Plain"]}]], "i"], " ", "+", 
              RowBox[{"\[CapitalDelta]t", "*", 
               RowBox[{"f", "[", 
                SubscriptBox["xGuess", "i"], "]"}]}]}]}],
            FontWeight->"Plain"], 
           StyleBox[",",
            FontWeight->"Plain"], 
           RowBox[{
            SubscriptBox[
             StyleBox["xGuess",
              FontWeight->"Plain"], "0"], " ", "=", " ", 
            RowBox[{"{", 
             StyleBox[
              RowBox[{
               RowBox[{"ICs", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "3", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "4", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "3", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "4", "]"}], "]"}]}],
              FontWeight->"Plain"], 
             StyleBox["}",
              FontWeight->"Plain"]}]}]}], 
          StyleBox["]",
           FontWeight->"Plain"]}], 
         StyleBox[",",
          FontWeight->"Plain"], 
         StyleBox[
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"-", "1"}], ",", 
            RowBox[{"n", "-", "1"}]}], "}"}],
          FontWeight->"Plain"]}], 
        StyleBox["]",
         FontWeight->"Plain"]}]}], 
      StyleBox[";",
       FontWeight->"Plain"], 
      StyleBox["\n",
       FontWeight->"Plain"], "\n", 
      RowBox[{"bcs", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"x", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"xdot", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"x", ",", " ", "n"}], "]"}], "==", 
          RowBox[{"Subscript", "[", 
           RowBox[{"xdot", ",", " ", "n"}], "]"}], "==", "0"}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]dot", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]dot", ",", " ", "n"}], "]"}], "==", "0"}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]", ",", " ", "n"}], "]"}], "==", "\[Pi]"}]}], 
        "}"}]}], ";", "\n", 
      RowBox[{"eqns", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Join", "[", 
         RowBox[{"bcs", ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Thread", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], "==", 
              "\n", 
              RowBox[{
               RowBox[{
                RowBox[{"1", "/", "2"}], " ", "\[CapitalDelta]t", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"f", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}], "]"}], "+", 
                  "\n", 
                  RowBox[{"f", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], 
                   "]"}]}], ")"}]}], "+", "\n", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Subscript", "[", 
                  RowBox[{"x", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"xdot", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]dot", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]1", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]2", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]3", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]4", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}]}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
        "]"}]}], ";", "\n", 
      RowBox[{"sv", " ", "=", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", "\n", 
             "\t\t\t\t\t", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "7", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "8", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", "1"}], 
        "]"}]}], ";", " ", "\n", 
      RowBox[{"froot", "=", 
       RowBox[{"FindRoot", "[", 
        RowBox[{"eqns", ",", "sv", ",", 
         RowBox[{"MaxIterations", "->", "maxIter"}]}], "]"}]}], ";", "\n", 
      RowBox[{"xff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"xdotff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Theta]ff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Theta]dotff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]1ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]2ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]3ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]4ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"uff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}], "^", 
                  "2"}]}]}], ")"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], 
                RowBox[{"Cos", "[", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}]}], "-", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}]}], ")"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      "\n", 
      RowBox[{
       RowBox[{"xff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xdotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "\[Pi]"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"uff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"uff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", "\n", 
      RowBox[{"{", 
       RowBox[{
       "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
        "uff", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
        "\[Lambda]3ff0", ",", "\[Lambda]4ff0"}], "}"}]}]}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"testSwingUp", "[", 
    RowBox[{
    "ICs_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "uff0_", ",", "A_"}], "]"}],
    ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eq", ",", "init", ",", "x", ",", "xdot", ",", "\[Theta]", ",", 
       "\[Theta]dot", ",", "xs", ",", "xdots", ",", "\[Theta]s", ",", 
       "\[Theta]dots", ",", "t", ",", "J"}], "}"}], ",", "\n", 
     RowBox[{
      RowBox[{"eq", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"x", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"xdot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"xdot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"uff0", "[", "t", "]"}], "+", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
             RowBox[{"A", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]dot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"uff0", "[", "t", "]"}], "+", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
            ")"}]}]}]}], "}"}]}], ";", "\n", 
      RowBox[{"init", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"xdot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]dot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
        "}"}], "=", 
       RowBox[{"NDSolveValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"eq", ",", "init"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
         RowBox[{"Method", "->", 
          RowBox[{"{", 
           RowBox[{"\"\<DiscontinuityProcessing\>\"", "->", "None"}], 
           "}"}]}]}], "]"}]}], ";", "\n", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"{", 
       RowBox[{
       "xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots", ",", "uff0",
         ",", "J"}], "}"}]}]}], "]"}]}], "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{"CalculateSMatrix", "[", 
   RowBox[{
   "x1a_", ",", "xdot1a_", ",", "\[Theta]1a_", ",", "\[Theta]dot1a_", ",", 
    "u1a_", ",", "\[Tau]_", ",", "A_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x", ",", "L", ",", "RHS", ",", "xdot", ",", "\[Theta]", ",", 
      "\[Theta]dot", ",", "u", ",", "K", ",", "S", ",", "soltn", ",", "Af", 
      ",", "Bf", ",", "Q", ",", "fx", ",", "xState", ",", "R", ",", "Mf", ",",
       "x2dot", ",", "\[Theta]2dot", ",", "S0", ",", "sol2", ",", "t"}], 
     "}"}], ",", "\n", "\n", 
    RowBox[{
     RowBox[{"xState", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
       "}"}]}], ";", "\n", 
     RowBox[{"x2dot", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{"u", "+", 
         RowBox[{"A", " ", 
          RowBox[{"\[Theta]dot", "^", "2"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"A", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ";", "\n", 
     RowBox[{"\[Theta]2dot", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{"u", "+", 
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ")"}]}]}], 
     ";", "\n", 
     RowBox[{"fx", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
       "xdot", ",", "x2dot", ",", "\[Theta]dot", ",", "\[Theta]2dot"}], 
       "}"}]}], ";", "\n", 
     RowBox[{"L", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", "2"}], "*", 
       RowBox[{"u", "^", "2"}]}]}], ";", "\n", 
     RowBox[{"Af", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{"fx", ",", "xState"}], "]"}]}], ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{"For", " ", "nD", " ", "stuff", " ", "use", " ", "Grad"}], 
      "*)"}], "\n", 
     RowBox[{"Bf", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"fx", ",", "u"}], "]"}]}], " ", ";", 
     RowBox[{"(*", 
      RowBox[{"For", " ", "1", "D", " ", "stuff", " ", "use", " ", "D"}], 
      "*)"}], "\n", 
     RowBox[{"Q", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{
        RowBox[{"Grad", "[", 
         RowBox[{"L", ",", "xState"}], "]"}], ",", "xState"}], "]"}]}], ";", 
     " ", 
     RowBox[{"(*", " ", 
      RowBox[{"Fix", " ", "this"}], " ", "*)"}], "\n", 
     RowBox[{"Q", " ", "=", " ", 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"1", "0", "0", "0"},
         {"0", "1", "0", "0"},
         {"0", "0", "1", "0"},
         {"0", "0", "0", "1"}
        },
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}}], "\[NoBreak]", ")"}]}], ";", "\n", 
     RowBox[{"Mf", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{"L", ",", "u"}], "]"}], ",", "xState"}], "]"}]}], ";", "\n", 
     RowBox[{"R", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"L", ",", 
        RowBox[{"{", 
         RowBox[{"u", ",", "2"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"S0", " ", "=", " ", 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]]}], ";", "\n", 
     RowBox[{
      RowBox[{"RHS", "[", "t_", "]"}], " ", ":=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"IdentityMatrix", "[", "4", "]"}], " ", "+", " ", 
         RowBox[{
          RowBox[{"Af", "\[Transpose]"}], ".", 
          RowBox[{"S", "[", "t", "]"}]}], " ", "+", " ", 
         RowBox[{
          RowBox[{"S", "[", "t", "]"}], ".", "Af"}], " ", "-", " ", 
         RowBox[{"KroneckerProduct", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"S", "[", "t", "]"}], ".", "Bf"}], ",", 
           RowBox[{
            RowBox[{"Bf", "\[Transpose]"}], ".", 
            RowBox[{"S", "[", "t", "]"}]}]}], "]"}]}], ")"}], " ", "/.", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "->", " ", 
          RowBox[{"x1a", "[", "t", "]"}]}], ",", " ", 
         RowBox[{"xdot", " ", "->", " ", 
          RowBox[{"xdot1a", "[", "t", "]"}]}], ",", " ", 
         RowBox[{"\[Theta]", " ", "->", 
          RowBox[{"\[Theta]1a", "[", "t", "]"}]}], ",", " ", 
         RowBox[{"\[Theta]dot", " ", "->", " ", 
          RowBox[{"\[Theta]dot1a", "[", "t", "]"}]}], ",", " ", 
         RowBox[{"u", " ", "->", " ", 
          RowBox[{"u1a", "[", "t", "]"}]}]}], "}"}]}]}], ";", "\n", 
     RowBox[{"sol2", " ", "=", " ", 
      RowBox[{"S", " ", "/.", " ", 
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"S", "'"}], "[", "t", "]"}], "==", " ", 
            RowBox[{"RHS", "[", "t", "]"}]}], ",", 
           RowBox[{
            RowBox[{"S", "[", "0", "]"}], "==", "S0"}]}], "}"}], ",", "S", 
         ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], " ", "}"}]}], "]"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"S", " ", "=", " ", 
      RowBox[{"sol2", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}]}], "\n", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CalculateGains", "[", 
   RowBox[{
   "x1a_", ",", "xdot1a_", ",", "\[Theta]1a_", ",", "\[Theta]dot1a_", ",", 
    "u1a_", ",", "time_", ",", "A_", ",", "\[Tau]_", ",", "S_"}], "]"}], ":=",
   " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x", ",", "L", ",", "RHS", ",", "xdot", ",", "\[Theta]", ",", 
      "\[Theta]dot", ",", "u", ",", "K", ",", "Af", ",", "Bf", ",", "Q", ",", 
      "fx", ",", "xState", ",", "R", ",", "Mf", ",", "x2dot", ",", 
      "\[Theta]2dot", ",", "S0", ",", "sol2", ",", "t"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"xState", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
       "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"x2dot", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{"u", "+", 
         RowBox[{"A", " ", 
          RowBox[{"\[Theta]dot", "^", "2"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"A", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Theta]2dot", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{"u", "+", 
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ")"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"fx", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
       "xdot", ",", "x2dot", ",", "\[Theta]dot", ",", "\[Theta]2dot"}], 
       "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Bf", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"fx", ",", "u"}], "]"}]}], " ", ";", 
     RowBox[{"(*", 
      RowBox[{"For", " ", "1", "D", " ", "stuff", " ", "use", " ", "D"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"K", " ", "=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Bf", "\[Transpose]"}], ".", 
         RowBox[{"S", "[", 
          RowBox[{"\[Tau]", " ", "-", " ", "time"}], "]"}]}], ")"}], "/.", 
       " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "->", " ", 
          RowBox[{"x1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"xdot", " ", "->", " ", 
          RowBox[{"xdot1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"\[Theta]", " ", "->", 
          RowBox[{"\[Theta]1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"\[Theta]dot", " ", "->", " ", 
          RowBox[{"\[Theta]dot1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"u", " ", "->", " ", 
          RowBox[{"u1a", "[", "time", "]"}]}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", "K"}]}], "\n", "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"testWithFB", "[", 
    RowBox[{
    "ICs_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "xff0_", ",", "xdotff0_", 
     ",", "\[Theta]ff0_", ",", "\[Theta]dotff0_", ",", "uff0_", ",", "A_"}], 
    "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eq", ",", "init", ",", "\[Theta]", ",", "\[Theta]dot", ",", 
       "\[Theta]ff", ",", "\[Theta]dotff", ",", "x", ",", "xdot", ",", "xff", 
       ",", "xdotff", ",", "uff", ",", "t", ",", "\[Kappa]1", ",", 
       "\[Kappa]2", ",", "\[Kappa]3", ",", "\[Kappa]4", ",", "ufb", ",", "u", 
       ",", "\[Theta]s", ",", "\[Theta]dots", ",", "xs", ",", "xdots", ",", 
       "us", ",", "J", ",", "S", ",", "K"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Kappa]1", "=", 
       RowBox[{"\[Kappa]2", "=", "3"}]}], ";", "  ", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"lqr", " ", "for", " ", "q"}], "=", 
        RowBox[{"r", " ", "for", " ", "balancing", " ", "pendulum"}]}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"\[Kappa]3", " ", "=", " ", 
       RowBox[{"-", "0.1"}]}], ";", 
      RowBox[{"\[Kappa]4", " ", "=", " ", 
       RowBox[{"-", "0.65"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"xff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xdotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "\[Pi]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"uff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"uff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"S", " ", "=", " ", 
       RowBox[{"CalculateSMatrix", "[", 
        RowBox[{
        "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
         "uff", ",", "\[Tau]", ",", "A"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"K", "[", "t_", "]"}], " ", ":=", " ", 
       RowBox[{"CalculateGains", "[", 
        RowBox[{
        "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
         "uff", ",", "t", ",", "A", ",", "\[Tau]", ",", "S"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ufb", "[", "t_", "]"}], " ", ":=", " ", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"K", "[", "t", "]"}], ".", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"xff", "[", "t", "]"}], "-", 
                RowBox[{"x", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"xdotff", "[", "t", "]"}], "-", 
                RowBox[{"xdot", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]dot", "[", "t", "]"}]}]}], "}"}]}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         RowBox[{
          RowBox[{"\[Kappa]1", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]3", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"xff", "[", "t", "]"}], "-", 
             RowBox[{"x", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"xdotff", "[", "t", "]"}], "-", 
             RowBox[{"xdot", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"u", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{"uff", "[", "t", "]"}], "+", 
        RowBox[{"ufb", "[", "t", "]"}]}]}], ";", "\n", "\n", 
      RowBox[{"eq", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"x", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"xdot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"xdot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"u", "[", "t", "]"}], "+", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
             RowBox[{"A", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]dot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"u", "[", "t", "]"}], "+", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
            ")"}]}]}]}], "}"}]}], ";", "\n", "\n", 
      RowBox[{"init", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"xdot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]dot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}], ";", "\n", "\n", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
        "}"}], "=", 
       RowBox[{"NDSolveValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"eq", ",", "init"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
         RowBox[{"Method", "->", 
          RowBox[{"{", 
           RowBox[{"\"\<DiscontinuityProcessing\>\"", "->", "None"}], 
           "}"}]}]}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"us", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{"uff", "[", "t", "]"}], "+", 
        RowBox[{"Piecewise", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"K", "[", "t", "]"}], ".", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"xff", "[", "t", "]"}], "-", 
                 RowBox[{"xs", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"xdotff", "[", "t", "]"}], "-", 
                 RowBox[{"xdots", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                 RowBox[{"\[Theta]s", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                 RowBox[{"\[Theta]dots", "[", "t", "]"}]}]}], "}"}]}], ",", 
             RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
          RowBox[{
           RowBox[{"\[Kappa]1", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]s", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]dots", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]3", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"xff", "[", "t", "]"}], "-", 
              RowBox[{"xs", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]4", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"xdotff", "[", "t", "]"}], "-", 
              RowBox[{"xdots", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"us", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"{", 
       RowBox[{
       "xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots", ",", "us", 
        ",", "J"}], "}"}]}]}], "]"}]}], "\n"}], "\n"}], "Code",
 CellChangeTimes->{{3.862753343189165*^9, 3.862753411389415*^9}, {
   3.8627553611496043`*^9, 3.8627553647834463`*^9}, {3.862755542386807*^9, 
   3.862755582254092*^9}, {3.862756179429644*^9, 3.8627562078485813`*^9}, 
   3.8627563320549693`*^9, {3.8627564690202875`*^9, 3.8627565488258357`*^9}, {
   3.8627568793814173`*^9, 3.8627568873778677`*^9}, 3.8627585165043135`*^9, {
   3.8627585965107956`*^9, 3.862758689290209*^9}, {3.862758834699833*^9, 
   3.8627588555911727`*^9}, {3.8627590963373947`*^9, 
   3.8627590998392787`*^9}, {3.8627594410134716`*^9, 
   3.8627594626865597`*^9}, {3.862759635094576*^9, 3.8627596377257366`*^9}, {
   3.862759669455618*^9, 3.8627597448635693`*^9}, 3.862759795914287*^9, {
   3.8627603319473376`*^9, 3.862760490473783*^9}, {3.8627605307139487`*^9, 
   3.862760536806006*^9}, {3.8627610047197795`*^9, 3.8627610478400292`*^9}, {
   3.8627611285982723`*^9, 3.862761147921111*^9}, {3.8631982964294224`*^9, 
   3.8631982970332265`*^9}, 3.8631983363504767`*^9, {3.863208693665881*^9, 
   3.8632086943846474`*^9}, 3.863210007245922*^9, 3.863271804426487*^9, {
   3.8632718412836447`*^9, 3.8632718583741503`*^9}, {3.8632719591337743`*^9, 
   3.863271959351703*^9}, {3.863272049174841*^9, 3.863272070205083*^9}, {
   3.863272113471178*^9, 3.863272123024109*^9}, 3.8632747752128673`*^9, {
   3.863274857845314*^9, 3.863274901443305*^9}, 3.863274985905165*^9, {
   3.86327502591031*^9, 3.8632751590365314`*^9}, {3.8632751952308993`*^9, 
   3.863275233662552*^9}, {3.8632753992893295`*^9, 3.863275415841012*^9}, 
   3.8632757933676972`*^9, 3.863276112914017*^9, {3.8632763683199444`*^9, 
   3.8632763983313017`*^9}, {3.8632764721665745`*^9, 3.863276525061578*^9}, {
   3.863278235705888*^9, 3.8632782777863655`*^9}, {3.863278324944213*^9, 
   3.8632783286160316`*^9}, {3.863552728717914*^9, 3.8635527298355513`*^9}, {
   3.863613419658352*^9, 3.863613423534114*^9}, {3.8636150904008484`*^9, 
   3.86361513154671*^9}, {3.8636152078133564`*^9, 3.8636152525520706`*^9}, {
   3.8636152893383236`*^9, 3.863615479516596*^9}, 3.8636157247782784`*^9, {
   3.863615879717803*^9, 3.8636159617646036`*^9}, {3.8636160220243616`*^9, 
   3.8636160299278383`*^9}, {3.863616069486206*^9, 3.86361607601912*^9}, {
   3.863699007217822*^9, 3.8636991515617003`*^9}, {3.8636996033223495`*^9, 
   3.8636996129842625`*^9}, {3.8636997844214835`*^9, 3.863699805489752*^9}, {
   3.863699907217247*^9, 3.863699944316393*^9}, {3.863700788168758*^9, 
   3.8637008845809517`*^9}, {3.863702046275758*^9, 3.8637020830100203`*^9}, {
   3.863702595245346*^9, 3.863702645292355*^9}},
 FontWeight->"Plain",
 CellLabel->
  "In[592]:=",ExpressionUUID->"b098c715-9c30-421d-bfce-eae26b7e4e91"],

Cell["\<\
Check the performance of the new initial guess mechanism for the case where n \
= 40 and greater was required.
We see that n = 6 is only required here which is excellent!\
\>", "Text",
 CellChangeTimes->{{3.863702780704089*^9, 3.8637028585982*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"9be2365f-c4bb-4396-8de9-0c9df9f460d6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  StyleBox[
   RowBox[{"n", "=", "6"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Tau]", "=", "2.5"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Tau]1", "=", 
    RowBox[{"\[Tau]", "*", "1.25"}]}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"A", "=", "0.2"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"order", " ", "=", " ", "4"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"maxIter", " ", "=", " ", "100"}],
   FontWeight->"Plain"], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.048555026816794494`"}], ",", 
      RowBox[{"-", "1.560065966757075`"}], ",", "0.7613152376955525`", ",", 
      "1.9382391342292873`"}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"InitGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}]}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\n", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
       "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
       "\[Lambda]3ff0", ",", "\[Lambda]4ff0"}], "}"}], "=", 
     RowBox[{"ffCartPendulum", "[", 
      RowBox[{
      "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", "order", 
       ",", "maxIter", ",", "InitGuess"}], "]"}]}], ";"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1b", ",", "xdot1b", ",", "\[Theta]1b", ",", "\[Theta]dot1b", ",", 
       "u1b", ",", "J1"}], "}"}], "=", 
     RowBox[{"testSwingUp", "[", 
      RowBox[{"ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "u1a", ",", "A"}], 
      "]"}]}], ";"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x1c", ",", "xdot1c", ",", "\[Theta]1c", ",", "\[Theta]dot1c", ",", 
      "u1c", ",", "J"}], "}"}], "=", 
    RowBox[{"testWithFB", "[", 
     RowBox[{
     "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
      "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A"}], "]"}]}], 
   ";", 
   RowBox[{"p1a", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1a", "[", "t", "]"}], ",", 
        RowBox[{"u1a", "[", "t", "]"}], ",", 
        RowBox[{"x1a", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1a", "[", "t", "]"}], ",", 
        RowBox[{"xdot1a", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1a\>\"", ",", "\"\<u1a\>\"", ",", "\"\<x1a\>\"", ",", 
         "\"\<\[Theta]dot1a\>\"", ",", "\"\<xdot1a\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Feedforward solution\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}]}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{"p1b", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Theta]1b", "[", "t", "]"}], ",", 
       RowBox[{"u1a", "[", "t", "]"}], ",", 
       RowBox[{"x1b", "[", "t", "]"}], ",", 
       RowBox[{"\[Theta]dot1b", "[", "t", "]"}], ",", 
       RowBox[{"xdot1b", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
     RowBox[{"Filling", "->", 
      RowBox[{"{", 
       RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Theta]1b\>\"", ",", "\"\<u1b\>\"", ",", "\"\<x1b\>\"", ",", 
        "\"\<\[Theta]dot1b\>\"", ",", "\"\<xdot1b\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<Test on dynamics\>\""}], ",", 
     RowBox[{"AspectRatio", "->", 
      RowBox[{"1", "/", "3"}]}], ",", 
     RowBox[{"ImageSize", "->", "400"}], ",", 
     RowBox[{"GridLines", "->", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], "]"}]}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"p1c", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Theta]1c", "[", "t", "]"}], ",", 
       RowBox[{"u1c", "[", "t", "]"}], ",", 
       RowBox[{"x1c", "[", "t", "]"}], ",", 
       RowBox[{"\[Theta]dot1c", "[", "t", "]"}], ",", 
       RowBox[{"xdot1c", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
     RowBox[{"Filling", "->", 
      RowBox[{"{", 
       RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Theta]1c\>\"", ",", "\"\<u1c\>\"", ",", "\"\<x1c\>\"", ",", 
        "\"\<\[Theta]dot1c\>\"", ",", "\"\<xdot1c\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<LQR feedback solution\>\""}], ",", 
     RowBox[{"AspectRatio", "->", 
      RowBox[{"1", "/", "3"}]}], ",", 
     RowBox[{"ImageSize", "->", "400"}], ",", 
     RowBox[{"GridLines", "->", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], "]"}]}],
  FontWeight->"Plain"], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.863699832878002*^9, 3.8636998879424076`*^9}, {
   3.8636999587037973`*^9, 3.863699966845196*^9}, {3.86370068689312*^9, 
   3.863700742439372*^9}, {3.863700775571786*^9, 3.8637007771342835`*^9}, 
   3.863700945211579*^9, {3.863700998427576*^9, 3.8637010107976217`*^9}, {
   3.8637016473912125`*^9, 3.863701669091281*^9}, 3.863702035899074*^9, {
   3.863702126179226*^9, 3.863702160529252*^9}, 3.86370251869481*^9, {
   3.8637025705572357`*^9, 3.8637025888983755`*^9}, {3.8637026681560507`*^9, 
   3.8637026692896886`*^9}, {3.8637027081322765`*^9, 3.863702762285972*^9}, 
   3.8637029838601737`*^9, 3.8637033230088053`*^9},
 CellLabel->
  "In[654]:=",ExpressionUUID->"53d64360-9130-4d93-aa11-669324ba78f7"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{249, 1412, 197, 198, 199, 200, 201, 202, 203, 204, 
            205, 206, 207, 208, 424, 364, 315, 276, 248, 232, 437, 377, 328, 
            289, 261, 449, 389, 340, 301, 209, 425, 365, 316, 462, 402, 277, 
            453, 393, 474, 344, 467, 407, 478}}]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwl0ldsT2EcBuDzLxK7xo09EitI7Hljc2FFJcQMtUnsdWGFCjEjRmioTWJv
XdrSxowYQYii9o1ZxQ3l+dKLJ+/ve8/3nZOccxomzkqYGRdFUYzXHGN1mShK
Is+cyzWukkM2WVwhkwzSSSOVy1ziI7+p7sZdmcFRLuo+8Itq1l2YzhEu6ErL
BvRjceh4r28mB7OCTH7qqsrOTOMw53Ut5VCSyKEUo9jATerTl0VhP++cGSM3
cZumDGI5GRS5vkM+ZDhryaMKW7hLJ54ylUOcc6ZAJvOEseSzmTu04AXbeUAC
z1hFNnG8YiePGMlz1nODemzlHn1YGJ7JW8/dJR8zmo3cognbuM9AlpHOD/uH
yTXkEk9HpnCQs643l0NYSRYxRrCO69SlNwvCft4401gOYClpFOoqyw5M5gBn
opKfrg69mB+6WMk/2Ej2ZwmpfNdVku2ZxH5O6/5R29yTeaGjQPeNiuZ2TGQf
p3TF1DL3YG7ownvWfaWCuS0T2MtJ3V9qmrszJ3S81H2hvLkNiaRwQveHGuZu
zA5d+M66z5Qzt2Y8eziuy+cTZa1bMY7d/Af+x3rE
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{1, 135, 108, 88, 72, 60, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10, 
           11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27,
            28, 29, 30, 31, 32, 33, 34, 35, 136, 109, 89, 73, 61, 52, 36, 137,
            110, 90, 74, 62, 53, 142, 115, 95, 79, 67, 37, 138, 111, 91, 75, 
           63, 54, 143, 116, 96, 80, 68, 38, 139, 112, 92, 76, 64, 146, 119, 
           99, 83, 55, 144, 117, 97, 81, 69, 148, 121, 101, 86, 39, 140, 113, 
           93, 77, 150, 123, 103, 65, 147, 120, 100, 157, 130, 84, 153, 126, 
           106, 56, 145, 118, 98, 156, 129, 82, 152, 125, 164, 105, 160, 133, 
           168, 70, 149, 122, 163, 102, 158, 131, 166, 87, 154, 127, 165, 107,
            161, 134, 169, 40, 141, 114, 162, 94, 155, 128, 78, 151, 124, 104,
            159, 132, 167, 66, 85, 57, 71, 41, 58, 42, 43, 44, 45, 46, 47, 48,
            49, 59, 50}]}, Annotation[#, "Charting`Private`Tag$257520#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1HmYTXUcBvA7akgLiUgqJhSKpBRa0CKtylpSpKKipkVKZR9RRLRQWmxZ
hjJbiBrbMGYsM5p9n2kjKiottvL5Pf743Pd73nt+z7lnuSdmcGzPZ6IikUhH
H/HyIzmIKziNX3SlLOdj24/Qlpr8qitjhflZOnMex0LHJ+bBXMnp/KYr53Pz
c3ShIcdDx6fmR2nHGRzQVfCF+Xm6cj7/hY555se4ijM5qKtkpfkFbqIR/4eO
+ebHuZqz+F23Rr7GnTSjSpcgR3AzF4SLQ4JYIIfQnlr8oftKjuYumvOdLlG+
yC1cyFbe5AGiSGUC99GKRGsWyqFcQ202M5m+/On7tXIMd5PNu1xCBm8xgDw+
4Hv7J8mR3EoW73AR6UylhP7kMocKqrGeiRTRk928RxmXsZ0ZlPIw+XxIJUmO
u0g+QSHXspOZnE0aU+jHt7zPIWvWybHcw6VkMp2H+MH3yfIlutGYbUzjQU5h
A3H04nKSrflMPkkH6vCX7ms5jh604EddinyZ22jCqaToF8unok7+L87hb91P
fMkS28PoRF3+0e1hFavDMxWei3DPwrmF4/INqaxnAxvZxGbSiIuORLbIraSz
jQwy2c4OdrKLLLJZ6tjDuY56/KvbG36jeRTdiSGajUyiN63DfbXfMvk017OL
WZzLFt6gmPvJYTblHA7nIsdzLy35OZy7fIXbuZjq4R7r42V4wdxAfY7o9pFD
LnnkU0AhRRSH9419Y7mRBhzV7Q/X1/wqd9CUGmzidfrQhh28zUAKmEsVJdaf
AM+1rg0=
           "]]}, Annotation[#, "Charting`Private`Tag$257520#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV02WAVVUUgNE3M3R3gwwoiiClIlLKSLeDKKggDKGIgIp0SVoobdJ2YCPS
EgZhY6AoSnd3r/1j8Z2z733vzQ1SM/ql901KJBJj/bONrCmJxJLkRGI4LalI
IbY7toOd7GI3e9hLNp9Z6pwRtOJ6CrPPseyOLbMeSWsqUYT9juVwbLn1KNpQ
maKUMv9Rp9CV+hxwfk7zFdZP0pYbKEZp8590KhncxkHn5zJfaT2aO6lCccqY
/6zT6MbtHHJ+bvOvrMeQTtW4FrN/dA79KMFVZr/odLpTx/6QfkwDqtvv0LcY
yGHfncdslfVYGlmf0XbcYr1PP6Ba3B/7f3Uuza0v6qNxTdbH9PO4dusUSlqX
1V+1vc7QpnpeO2kPrauHtYN+Es9Ak+hKmn0N3al369vaQi9pZx2kaXpS79VF
cR81E0dcU15dbTaOxtZn9S5qWe/XBXEv4rnab9V5PBb32/64LoxnTar9Jn2R
ntSL79dPuYMb7XfpOwzmqN/OZ7bGenxce1xHvA9m/+l8Ho/3gnJmv+lLPEhD
jvl8fvO11hPi2uM34r2gvPnv+jIPxbPiuPMLmH9t/RT3cFO8B5xwrKBj31g/
HfeZm+O5cNKxU5zmDGc5x3kucJFLXI7/gM5PIpkUMlHI936rz9CRmnGvyExh
x77TZ+PZxHsU18rV5n/oK/SK50IWipiv0+e4L55RXCvXmP+pr/IwTchKUfP1
OpH7uZUqZv/r6/SP36KC2WZ9jd7x/sW9Mdut7zKEbBQz26DPx7sZ32d/QD+k
NlXtt+kbPEED+xP6RfyNXGv/l86kmfUFfYT61kfj/uhn2kaTyaBZPAvdE89M
39OWelkf0KHxfumpuCf6paZrZrqR3b64boz3Wl+I+6Pn4p5o5/jb9aB+RCvr
BF2oY19Nt+ubDIh7xXVmf+ss+tCcHJQw/14nxd9G3bhmcpKL3OQhL/nITwFK
+twPOpku1IvfoKL5Fp1NX1rE+2O2V99nGA3tT+ti2llnoTsF7a8AVpu07g==

           "]]}, Annotation[#, "Charting`Private`Tag$257520#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwNy2NzmFEYBNA3TWrbSG3bNtP2D3Smtm3btm3btm27qd2eD2fu7j5zw5u0
j2gXEgRBJE1DgyB/WBDE4ZV8ijVMpxnNaUFLWtGaNrSlHe3pQAH/4/JaPs1a
ZtCRgvZ4vJHPsI6ZVLGF80++z0E6UcgWn7fyWdYzi6q2jAQ80A/RmcJ6At7J
59jAbKrZMhHCQ/0wXSiiJ+S9fJ6NzKG6LTNReKQfoStF9UR8kC+wibl0o5g9
MZHyRTYzj+70oCfF3ZPwUb7EFubTixL2pHySL7OVBdSwZSGUx/pRelNST8Zn
+QrbWEhNW1bCeKIfow+l9OR8ka+ynUX0pbQ9BV/la+xgMf0oY0/JN/k6O1lC
f8raU/FdvsEuljKAcvbU/JBvsptlDKS8PQ0/5VvsYTmDGMwQhjKM4YxgJKMY
TQV/0/JLvs1eVlDLlo2oPNWPM4aKejp+y3eoL+cmFhHkpRH73Op6cxKDF/pK
asvZicYz/QRjqaSn5498l/2sYhzjmcBEJjGZKUylsj8Z+Cvf4wCrqWPLQXSe
6yepJ+ciJi/1Bt48xKYh+WjMNLf/NgR/2w==
           "]]}, Annotation[#, "Charting`Private`Tag$257520#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV03eAznUcB/DnbBkJlZVCkXAys2d2ZlzGicged/bmjiiZZZeyEyWyUsiq
kK1spbL3Ktm8vn+87v3+fO658Xx/3ydXm7hG3aMikUi0LzHJIpEqySOR1BzV
VzGDD3iLpjSjOS2IpSVv04rWvEMb2vIu7WhPBzrSic50oaq/8wTH9NV8wmi6
8rp9Go7r3/EpH/KmXTYu6r+wmG5Us0vLH/oaZjKGxnbZuaRv5Su6U90uHX/q
3/MZY2lil4PL+ja+Jo4aduk5of/A5+F9m1/ilr6PccSYn+OKvj28V70ISVgS
zkW+wj39YPhf9BKkIN5cUz7JX3oPWYq14fxkNI/0WeG89bz8r/eWZdkfzk4W
YyjJ6E9FhjM+PEeZk0FcNfeSZRjGr+G5yKIMISn9qEAi34RnKgswmPvmPrIc
h8I5yZKkZACV6GFfS2bgb72nLM26cB9kYSLMDvdH5uO2/lt4rnpxkjMh3D/5
PNf0HSwN98tckAf64fD7qW1+in/09cwJ99L8Mnf035kY7rL5Ba7rO1kWzoM6
dhk5qf/IXD4K994uFzf0XXwbzp437DJxSt/APD4OZ0Nd+8yc1jcyn0n0pZ79
05zRN7GAyfSjPwMYyCAGU99rn+GsvpkvmBI+i3a5uanvZjlDaGD3LOf0LeGz
p79KFH0pTwILw2dW5ueufoCpxJrz8K++hxUMpaFdFs7rP/El0xhGAokMZwTv
MZJRNPIzWbmg/8wiptPS7kX+0/eykvbmQjzUjxCvv0YqBlKZEbzve48BxDKa
Hg==
           "]]}, Annotation[#, "Charting`Private`Tag$257520#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"Feedforward solution\"", TraditionalForm], 
     PlotRange -> {{0., 3.12499993622449}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1a\"", "\"u1a\"", "\"x1a\"", "\"\[Theta]dot1a\"", 
       "\"xdot1a\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.863702134579542*^9, 3.8637021627135525`*^9}, 
   3.8637025210160646`*^9, 3.863702578124817*^9, 3.8637026714539957`*^9, {
   3.8637027226726294`*^9, 3.8637027640764*^9}, 3.8637029884806967`*^9, {
   3.8637033266226506`*^9, 3.8637033354478307`*^9}},
 CellLabel->
  "Out[659]=",ExpressionUUID->"2417c214-3666-44db-99fa-deba99db9bbc"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1:eJxEnHk4VN8fx2fGWCoVLbRIklQqpaRCfU4lhLRLKEohqRAlJbJTWdImspQ2
FLJkv/aZCtmyL2MZxr7vg9/teX73fvun5zwzc+fcc8/5LK/326y7fOvUVRqF
QpnkpVD+/S/pO/M+RNzqQIqGrsB3Aw5oZPBrt5vGwIDE5+drhHugaKHCPPqF
LFBKPs/GqvrhkO+RrE/HmaDjbepwwH8Qrm6fWii3sARsHVZ1Ny0ZhmObrw6K
qFVAoehFeenXI/C9wsH2595qUPn6SEi3axSUlsjE0B3rYfjk7tN70TiYTj97
+0GXBXvN7MZz703ArYKOXTHHWmDPkijWyJNJ8Nbj2zBj0QbjrNP9tE9TYMy4
byJn1g4JCtPKwuHTkM2/8uT18xyIT8rscHvMBTlhp5edNl2g2PHF8L3jDBgN
79+qbdEDUs4jEWv1ZyE8JF9s/GkfWD1V3HHw4BzE+yjWlZ0aAEO9jXMbF1GQ
Ter+E2+1BqE26dD6ACsKwn59GPLSH4IL44v3R9VS0DW1fRnXdIfBuCeepa1I
RcGf5RKvm4+A0nzad7VQKvIfznhkeXcUciQ0z4bPUVF7pO0dM+sxmPGJf16v
Q0N5qs9eOzuPw1HXCKVD32mIery2xddpAroWrH6L6DyIcjCJGnZvEuQFk3+I
nuRBnqLjx8o8psDaxmL1QCgPstQzzhl3mQae8323Y9t4UPMj+SvwggvPHx+o
2LmZjpYFBNZ6hc+AuIlikM9VOvooJHOPETQLK5wVTNpf0lG29dojG6Pm4JC4
lGtHLh2FSISJ7T9DQTyvGTLz2XSU8WCKYlZCQSqNfJ7nuHS0TpOfu/4cFU3n
y+joz+dFCX82P66poCIheb+irgW86EnB7A6JCzRUKfd67dwcHQXc7jQ3qqch
6eTT1Ws76OjBcvHFkud5kAJP1sW5LDr6spn3lw2LB9Us4ohe8KAjvhHqyuyL
+Lw0WlMjVOjo0464hyH45zxXNt6/PcaDNl+O1J65wYsymxc+bH3Pg+qOpnw/
282L7rzYw3XG16fsvf02uM2HBm7bum8YoqGJ+JPKkkN8qEH9kfuhABqaS7ZO
dL/Jj865xpi+3EFDmjtUjzwY5UcdYRaDfBgVMS5sv3b9tgDSW8S69Eubir7F
Wo7PzQkgf+qD0U2/KOiXf50VxzQUljiGqd/c3wUJ2VKGd9fPwWTKxnD/b3Q0
1/PKkLOMgo7krvUP/EtH37SLfE49oyCB30XqzYN01N/qNJu/lIp0G93ONNN5
kfnT17mzL6hoFZ9xygtBXiShuayRu4KGVtu3bfrNz4uE1owcywqmoe7aHIra
KL4OeTz7s1fxIKlpz9I/+PWfhfpb/A7mQauqk7fqfaSjah+XwTdr6QhzL+Lk
m9CRIv+J2MQUATQdnxpss5CKfiq6pPSY+kL9Ydn8CO1O2HZto0Vo0yy0vRR/
Q39PR0YfN9IedM1B02zyOF8Rvl9+JP1Vu01BJ44US2V105FObMacyBAFnR0c
2sOl8CLVnj+G/neoqOuGink5/vzNF4bKd49Rkd/nVk1tfH8UW92DgQc0NBZ6
VW7xNB0tCh4r95umoY9H+s+1N9KRR21Vxpg9DxKLHpnZnUBHyCCvgZ+Czz83
qu/yXTpy+o498XspgCTzVUouyFKR4irJU8dN52AkxfSUVwodFfOJZT6Tp6C/
VVhRUAMdJbFb1S7EUZAEe/Fu83F8vURVZmx2U5HvdQFHmgAv8pW9tNEikYr2
XvdOCMHXu9LTy2OREg25Z4Z3GuDP4xTzpoFfOg3dmVwk+L6Pjmi9Qh8H9/Eg
pkq4TM1vOhrRZ5XX1gugvEexAwt7KIj5pEx91NQR/AVHQhZVcqAr/bN1fMYs
HGuxM+Z/S0d+T96/L/01B9IhYuGeTDqStNhyL8eYgs6xjJ/c5dCRt4iBEzRT
UIDbwyfZs3SUENT9tdaEirqby5u24evpe7PNsIVNRWYMwZX78PE2MeW9Ajdo
SKM/cCJ8ho5K+C1DJ7ppSGBUwF28FZ/vhL2JoDkPstCzzk1Pxeeb03b6wAAP
8sZstzs60pGU5/jUjKsAMt/VGvr+ABWN33iva3xkDlrdxEwl8PVvn6zxyZCi
oJKM3cPRNXS0841ud1U4BSlpzU4nj9BRukOLw1spKoo+PPvVm48XcRse2CZ+
oKKOd7pv4vD1nO4s/s4rQ0Mrv/bHy+Gvx1nLnf0cTUNyGyg/hIboKF/X2+q8
DA8KO/Hw+0AJHb2SW3FI/bcAquXfwVPKpSBJjbWOfTQqer7Uf5aPhxdVKycI
q7vj63Hjlosmfv0j0efnjfDT0DTrauXmebzoFiNJtfoJDTlrPzqvOkFHZ+I+
PNBSpaKL7/cqqeOvSzoeqZHMp6JBt50vDfDPx21UMRDVoqHiFe+UtWi86KT7
56s3+gTQdjMTjS11FFSww8qUz+wWKFdG1NoFcoBp0mmbET0Lr+IDzk4H0tFn
x0s23NQ52Hb8wRXlAvy8FLB/zelTEF12wc38djqKOBqVVV5NQQ6cDxbP8Odj
fnvyzNxFKvq9qmDXL/w8SK71GL3QQEWBKmYLA/HnaWD1Vn7ZVRraU0rfV4U/
/+8ZW922tuHx8qMGXZr97xwXKr66xIOC59b5tmfQkfbYiM95Dg9i9At12rrQ
0Zj10u/yDwTQw/IOVip+35Wibfo35OdgomH9jwtxdGQ9vHe8TIyCTgWKFH6q
oiPLkSX7l7/Bz0t/e9fJYTqqjJXLlBPDz2uxz+Z0Xl4Un+gtVvuWih4OBt7/
gq+Xzxsr9UfraKg+Ekp48XjEYjw7mRBBQ6cj6dnf8c9/XKR27qkkDxqVEz1q
Wk5HZmLykw9z8Hj51iRDmpeKlB1uYs5TFOTKDQzjx9fbd1lOssVDfD/vkdq6
HL9+tQE35BaeF1WPyhzPxZ9XiNiKw22uNOS08olP3CQd3WwbSWftpyKxnc6f
o/DzW61z2kktg4pqFjwJcME/r1LdPvjsMA3tiDq2wgDfL5JWeWIRbAFEW//d
P6yVgmZyG/iSblLRIrelWu74enMzDv4y6aOiqAaPxn/P451GwP5526joh+O5
Ei38/lT5bhX7faWiHYYm/N/w66+7+tF8vQ8VNQT1XLqDj79PJ922E6KhBr+w
P4/w+Sg+1FFOxvPEad/QDdX4/K9/2rNztpCKWnxVvm3G3+8U9OSbwrgAWvnG
WvRbGQVl232L2GRmCEnLRT1X3+fAjzSvu4ciZuHEVpFJq9d0JH8vq144fg4k
dvfxL82nI8fhnNviuhS0Z/GuAQ6+H3a0lrHeVlBQp3eV1Riej1UNnT4L61NR
4gpVmef4/Vy/q5u1uoaK1p5o/Z6L3+/I6uKdqy7R0E+V95UWeD5+t2KBnSoL
z3v+v95J4ftVXHs0wuACD1qw03G5LUZH3MUOW03xOqI4aqfVdTc6umgWvrDk
rgB6k7E9MFeDivItXC8MbZmDhsK6qokYOtpraRbVsIKCllnuLgmvpCPfdQPs
XS8pyGiP5O83+Hm/rHG+cVqUitKaeNVP4PvLJ1zYsieQis6Pz1sUjq9P1dCh
pbCGhjpzek6b4+tvZ517PDWMhgb2agU+xOPNq2sbND6J8yCfdWe031bQUalw
zplVmQJI+diez9rz8Hwm8rJJa4yCzvxxtXCh4vmHclTQ0Z6Kri99/2MUv/91
iUXXtk1TkTiXEzQfXx8FhvrBLicaEoy7KHx5io6mHcQaIvdRkeOY6wdd/Hkm
HKotP59CRZ+WxYc8w+f3dEdy+gmgoc/DGy814vvrsckpO2gWQNaneA9Ud1BQ
dcwVPaY5FV16VPpQH/8+VZGlL6S6qEig8Vs+Dz7e3pZ6oXwTFbnKuWv14vFw
3dDouvdfqOjylkm1f/GSe2Jb5m5vKvp8Mury5X/j054HFARpqDy+5UMVPh+G
6EMDZ3zdaUU+Bf74/lINyHQT+onv51qrMBX8/Ry/VfPLhgQQZfurb72VFOTr
YU3tvUxFd1JaLGfw+60uSJQJa6aiD2dZteb4fKp/8vxkhFORVIMmJQb/fMIm
pat6zlQ0X4BSIIePZ8wLt+7Oxs/nPm1/K3xsvopj/zCOivqkayo/4WPVe2tF
hZ/hn99t4eiBj/3SYhu7S6jIU4idsQAfi36cPRU0LYBennrqalFMQT8ENq+9
YXYcDtckHOVc54Bs+/kJetgsJDWcuhP9io6mRvv9xGLmYNmzv94OeXh94C3H
3KZDQeHqZyvv4ft9LKZ9wBk/N4le0Xqf8P0u//dw2arzVIR0b620w+/Pb332
h6lKKtIKuhVXhd8fsmqXW2NIQyzpl1eT8P2+StXe6nQjDc33eB75Dt/vRXHz
9ECfB8kZR2Qr4vVnmdjB6RsteP3U9SHrijsdLTE2S3trK4A2rrNRYmjh8evV
mcaEjXNQOnrM4wi+34NlnXhbRSjo2dLRiTX4fhdPvqh4+DkFFXXL6hzA9/sm
0Rt9rOVU9Lrw0o6V+H5/IPo3cPQVFUn3PMgK+vd8Q6Im1qymoW0Dq+WD8P2e
x6jTzgihoalgXqVWfL8LvXp+OEGMB628I0rZg9d37oJeNE6aANIYUWq+tACP
061f+uVGKCjq0aadCN/vuncEFTztqOjaz6Hutn/775LCccFJKjLp0OvYiq+P
s9gl1PuQhhYGhC5Mwfd7jsaOXt89eF/iHDC2Dd9f75Lfzlz+QUXZKlsFAv/F
t3qJd9v34/v92bE14ng9hC6tlF7YJIBi5b10hjvx/Lhhk2upGRUNvb8x78i/
ei/nvj0Ph4pq58U3i+PjsdjiG8nSVHS42NYoHd/vi8xSNKM/4WNWWfG//d5V
MNBxwJOK3A4OaJ/7V+9SBtcvn09DxvuTd1Lx/e3T5m9hqo7HC62jJjfwsfw8
55iVDCpyQblTJ/D3Bz9u/hE6IIDCslvSBGso6MHM7i1jRvj7z81sacPvd8Za
XMixiYo0/nZedcbnUwCMoRK8D3u1aktQNP75dyGzPsZOVBSk5FKx/t98WL46
B/C6X/OGxaA9Ptb1i4rwiMHPr7PSsSh8LN/fglb5UdEyIeoxR3z8UM5GYLSY
isKOji9fjY8Lw/Ip1ybx+J7z8OlTvE8K26Kt2hqEx0mV0vAP+OsFhSKRJ9Ko
aHacfffxv+s92DkRGEVFZ8Of8cbi40V1155vfUJF5mmmmRb/5nMahWa+x+tT
ndzIf68/iJA6aRtPRRPmfBHv/82Px6CX/zke3zeNTvjg48tRez4UzQigeJYf
V6MQr5/+37/Xt1i55Tk3kv179IDTUH1YF9m/nzpc1JuiPkT277xqhk+Uu0fJ
/l1uxOSbY8QE2b/b/Sjz5uROkf374PPXsp6LuWT//mG/oevOUi7Zv8e/1bYO
n+OS/fsVlcdvdTO5ZP+uaLgsmbGMS/bvH4ueCSrK/Ne/H925+GTm/Cmyf/f7
c6tZOWyC7N/D7LU2eiiNk/17slbQOeHAUbJ/L5D9LdvTMgxE//52tfJg3p4h
IPp3k5Kl55rODwDRv/dvQvGbNvQC0b9nCCV8O6LZCUT/HqiWnqj/hA1E//7d
ocl2gt4CRP9+QLW+Sup0PRD9u+jsYYdTS/8C0b9bfttvfanxNxD9u2qF/fzJ
d8lA9O9hVdVlBeX+GNG/W7BifdJ5cjCif1/ovKFRPKcEI/p3sRMdve+nqzCi
f0dftRYbFzdhRP+u2j5R3PW4FSP69wdmYU6Vqzswon//pv9lxeaxLozo3xWr
WHsXPe7DiP79t8KVIk/5QYzo33tYo4allGGM6N/ldzV278sZwYj+/Wn/Y3rE
pzGM6N8p//9H9O/EmOjfiTHRvxNjon8nxkT/ToyJ/p0YE/07MSb6d2JM9O/E
mOjfn7RU6nvtZYPEzI/gGYVkUOK5nena1g+exRltZ3XyQEEvkqG6ZwT4xsX6
6LsLgXlZx2LAaBzOR8fMrZcpg6ZHNEHZ4kmgOFrtGoBKWGpo+Ou2wzTcGT69
pEO/FhYe9Xuo78oFV/qm0Y2vG6HJPvBKzgQXuo0yzGRON8OyTd27Jrq48EDo
7ladC60Qe7Q2U9GWC2NC2UdembOhEXO4jH2ahmemv/SLjTqgKqnctixsCoh+
X+PURMbOxFGM6PeJ+9N5VvN7+/v/xkT/T4yJ/t+o6U/o4eMt0NLbcMluNB6m
/EI0lur0gkzf5Fj0+RxYtWOkyFNtGKQOy53TOfQLhETefPeOHoOm3gr3yNWl
wCO47NYiNAnSZ64/czn8F+xy/ugzN0zDsjbOYV2NGnAaSnsvdZwLRgs2n3r5
uAGez5NA+zu5sFl2Ew/nLwv04vi7LPD1uHN9e6zz3xaYdBebqw3mQlai8e5f
3W2Ampe73mJNg73o+mbHtnZ4Wub6Y1fHFBC8QF5E8RpDaRQjeAFxf7K5N6wn
nP4bE/yAGF8QfFblbJcOM8ZKLhHSg8D+9qhs9lQB+PGfu2C4YhQ4kQJu8RuL
wbbGUrdIYALKzb3t3u4th61iEdtOHp+Cmi93KwyUq+BvrR3r4O9pqKZhLNsb
dVAfwPszIIYLX2akX6dENMGjV4ZFqykz8DXgVLFFSTPoDBkcdq/igkti5ufN
7FbQWbExPl+NCyFXNFeHZfKgmd2iWx/IjmG3sg/xysJ/8yd4AzEmeIOE9PDk
SCELVNot8xIr4mBlRtDFy5Qe4M6IOunqZ4OfAf+h+b+GYNe1tAVz6j/Bj0pP
dD82Bu98TH/deF4CzYZb5bjDE5B6gHPwWH4F9G6deSg1NgXGBvH1ftnVMNR8
LfzLDi4U+3xxOsbbAGtnCo5oN3KB+fxCieorFrjvMrcq53Jh6PWCodf+LfDu
S9pS429c2CCw+6txdBvc/PxZSWZ6Gm7e+vNe92M7XOQPPb5h3jQQfCJjpcww
fW4EI/hE6Z9AdUnWGPam7kd+/a3/7p/gFcQ4k75BMetcKjQZyb3J9xmApMxQ
/cgz+XDYeaFI+JcRGC95ts9AtgiEC3YJmSeNw8sFa9KN4spAPmPDcl2hKbB4
PuIinVkJ7vveiPt/mIaN973ufWurhcanPivlgrgg8uhTgaV4E+xqDuG9NcMF
rSmPoN/+zSC6Zn7OVDMXKK1vuiC8FXjK/ggoGHJhhXNfbuJXHuS9Qfpr3eAo
JrXJ+P6V7f/Nn+AbxDjgWl9LSvZfWM/p2dB0ahryr4tHrS2vAb/hYDW+6/h6
enxe3yTcCE7iCvXzh/B8yRja7bWsGdpCOAZ38PHk/tM3LVa2QiVz8OgvLy48
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
YpbzO8GwhyOiir//mf6zlu0ruv75rWK24K8TesOJgL8b7XMZcMWevTKrohPm
8866v8VfF0h+7Mk61gkGL5aHR+PxKEsZokL1u0DloWHNL3xM6A3rj+acSsXr
py6jhYY2Tni/mhhQU43fj+p604HT/F0gdmBD2EX8eisOpW5sy+2EYuW1Fs/x
cbqj0Uv6/k4IZW6nyeDXs6EvS8nV6AK7VxP6+/DPO5caH976rhO+nFvcewZ/
f2NARsWCzV3QLBxb3Im/HvtdSDCY3Ql6WU8DXuGvE/pCg6REJAePl4S+4Hm0
oY+PZ47093qFeGQZ6c2Q/l4RrSe0UfNp0t9rLddzdlfQJOnvre3vvRHePk76
e7H5lFtj28ZIf29R+idG5Y8R0t9bxLtO0v/YMOnvlTvXs9do+RDp7/1Dv9K6
UXSQ9PemXztpFrdpgPT3dt4IXMtT3kf6e0f6HScHfHtJf6/80ffnZYx7SH+v
HVWlpM6qm/T3KnRcuGrk20X6e2n8HuV6eB1N6AvTC6jaORs7SX9vyqrPRcFO
HNLf27p334tPnA7S3yvzXUHh6sEO0t97sTEavjxvJ/29+j9LL8q1s0l/bxeN
d4H8Mjbp740YbcseVWgj/b2NX5+6mh1sJf29Jiv9Vr8RbiH9ve5MPmeNYhYQ
+kL2FQcTHcdGIPQFTe6Q+ym+OiD0hTfTr22OG1cBoS+kFSYEHeKWAaEvZEoF
XFGvLST1hdl9E1SfBbmkvlAT8ihTPuIrqS943TOcyPYMJ/29V3TVuZu355D+
XguFlz0Fc39If2/+3n3ZMturSH+vtNich7pJE+nvXTwnPa78phkj9IXbhtk6
xydaMEJfcFtZ7JJv0IYR+sISgxNewQlsjNAXmlNHewJ3d2CEvsB/aOu6vZ85
GKEvMKdsVArXdGGEvmAjulX9RGY3RugL+7yvhasd68UIfcEFJQghkX6M0Bfm
bjWepO6eJfl6QW+FjtP+OtIvK1slkyg1w8IIvq56yMIpXK0FI/j4uWifSeUd
fRjBx1WN27k9b2dJPtwzq7mRs7OG9J9e7ZYWjohhYQQfvmQrucZ9oBkj+K6E
6/Y3Rpm9GMFHq3ae2Jek3UD6Pdf+dX56TrMZI3ho+UOt1Pp3fRjBQ/cwtofM
lcySPHCjqOQxmR3VpH8SoqIvb5Rjkf7JtAzdI2r5zRjB874Xl0SlufViBA+r
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
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{332, 1528, 280, 281, 282, 283, 284, 285, 286, 287, 
            288, 289, 290, 291, 507, 447, 398, 359, 331, 315, 520, 460, 411, 
            372, 344, 532, 472, 423, 384, 292, 508, 448, 399, 545, 485, 360, 
            536, 476, 557, 427, 550, 490, 561}}]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwl00dsznEYwPH3LbX3asyYQYjS2hd7XlDrYNe4oDUOVpDY86I1D1aQEDP2
vNgcrCAhRkWMIDatxPg8cfjk+/s975O8b/t/3wbZuVk5KYlEIkkBvylKTSQK
STOsQXWqUZUqVKYSFalAecpRljKUpjP9mcRaLvCLUnSiHxNZw3mKKMlwZrKF
mzHz4TrqPHZyL97XrK9OYDXnKKQEC9nDw/i89obpQZ5R232GbuZG7Lt30MMU
UNd9ru7gbvxt7n30LU2c9+lj0pzH60vqO6/SFnpWf5JKpvsHba5HNF1faD1d
oK31jTbW3dpSH8T/V4dqhr7TpnpAW+lTraXT9RUNnTfp9XhP5/b6nmbOh/Q5
dZzn6GsaOW/XO/HMnHvrXh7Fc3bP1pWc4QfFmc8u7sdztzNE9/OEmu7TdCPX
Yt+9nc5mG7fje2HWS8exgtN8pxiDyWUDV2Nmt63OYiu34jtl1lPHspxTfCOF
LHJYz5WY2c3UHoxhGSf5SpJBTCWfyzGzn6HdGc1STvAl+f8HMZAp5HEpZvbb
aDdGsYTjfOavlwfoZNZxMWbxnOnKSBZzjE/8sZ+uXRjBIo7ykX/Iy2lU
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{1, 198, 151, 113, 84, 63, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10, 
           11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27,
            28, 29, 30, 31, 199, 152, 114, 85, 64, 52, 210, 163, 125, 96, 75, 
           32, 200, 153, 115, 86, 65, 53, 211, 164, 126, 97, 76, 33, 201, 154,
            116, 87, 66, 54, 212, 165, 127, 98, 77, 34, 202, 155, 117, 88, 67,
            219, 172, 134, 105, 55, 213, 166, 128, 99, 229, 182, 144, 78, 223,
            176, 138, 109, 233, 186, 148, 35, 203, 156, 118, 236, 189, 89, 
           227, 180, 142, 68, 220, 173, 135, 239, 192, 106, 231, 184, 248, 
           146, 242, 195, 251, 56, 214, 167, 245, 129, 238, 191, 249, 100, 
           230, 183, 247, 145, 241, 194, 250, 79, 224, 177, 246, 139, 240, 
           193, 110, 234, 187, 149, 243, 196, 36, 204, 157, 119, 237, 190, 90,
            228, 181, 143, 69, 221, 174, 136, 107, 232, 185, 147, 57, 215, 
           168, 130, 101, 80, 225, 178, 140, 111, 37, 205, 158, 120, 91, 70, 
           222, 175, 137, 108, 58, 216, 169, 131, 102, 81, 38, 206, 159, 121, 
           92, 71, 59, 217, 170, 132, 103, 82, 39, 207, 160, 122, 93, 72, 60, 
           40, 208, 161, 123, 94, 73, 61, 41, 42, 43, 44, 45, 46, 47, 48, 49, 
           209, 162, 124, 95, 74, 62, 218, 171, 133, 104, 83, 226, 179, 141, 
           112, 235, 188, 150, 244, 197, 252, 50}]}, 
         Annotation[#, "Charting`Private`Tag$257631#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl03e8l1McwPHfLbclWrSIknJxu7mVQqFFoaibCg11taNbZouSFqGFtIy0
aVrRoCVN7YV2GWU0KW68v6/+eN/Pec7vvH7P7znnuWUyszK6JSUSiVv9ydY/
9GMG0II7qch5n/2pn/ASLanJTfzHckbRlQdizvrj+ikDaUUt0uNmORKJFTqa
x2kUc5zgMwbRmtpUIsn6lfoGT9A45jjJ5wzmUepQmRzWf6NvEg+XEXOcYgFD
aENdLrb2O32H56hCTnOr9C2yaBJznOYLhtKWu8hv7UZ9l57czEXmvtUxdKeE
6x/1Ix6kkOttOpnnYz1n+JKXyaSoNbt1BndzietN+h5ljX/SXlxpvE/nkGJ8
TKuSbLxa3+Ya4yPag5LGezRNZ+l1ejT2WZtqYd2uqTpFr9Wf45z1Bb1KD8Q7
ofP0ev0t9l2T9S8WcqPrV7S0HtLHKGb8vc6knPEvWo9LjTfr+/SmlOv9Opdq
5HK9RsfyJFe43quzaUYR1zt0Kv1iPX+ziGG0oz4FrNuik+jDLeQ2t1bH8RTN
Y46zLOZV2nNP0oX/kTycYwmv0YF7uY285It3Kt6LOLN4trgvBePcY3/j93IZ
l8c5x77E701OJIrHuxJnFM8YZxt7EXvO1bGXlInzjHeAf/iK1+nIfVSP3+iZ
1ul4nuahuJ+5nTqN/nGu/MvXDI/v9flh7URx4x+0gn6o5fVXTdcG8Sy6VT+g
LzXi2c2t1wk8w8NxxmSzlBF0piG3x3fGu0dKvEPcEO8MqXFfzrOMkXThfu6I
/XWfDTqRZ3kk9tHcLp3Oi7FXrg/q/Phe49+1iqbp/5XYjDE=
           "]]}, Annotation[#, "Charting`Private`Tag$257631#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV03mATWUYB+CLlGgvIpUUSZTIvu/bMGaGmbEvYys0EyrapSxlqVRSGGUp
O9mJFkWLvbJXKrsipb3I8/7x3Pf3vve73znnnnNKZuWkZedJJBIjfVTJm0jc
ky+RuJFv5TkMoy9VqUZ1alCTWtxrbQkOyHN5KvagNv3Mb+I7eR7DY32sMavG
n/J6XqMO/c1K8r08n6djj/idWXX+kj/ideoywOxmfpAX8EzsEb8zq8Hf8sdM
ph73md3CQXkhI3hR34yL+CL2jH3kmvwjb2AK9ck2K8UheREjmaBvTgG+jGPE
vnIt/pU38oacQRGm6iepyVzGXn0DcuTSHJYXM1Vuy9WM0r+ktuBi5tGDr8xn
qB1YTjEW0ZvsOD+1Nkv4L+6P2p2VfKJ/U81kGdeykF6sJjfui9qGpVzOfLJY
xT7fz1I7sYLiLKYPDX13v3orR+TZalfekXPVdlzDaP3LaksKslM/U+3IdeTo
R6l1OCt/yrS4//oUrmC/vhED5TIclZfwLK/okyjErjgnRst1OSd/FveGxgwy
u41j8lKeiz1jH7N6/C9/Hv8ZTRhsVpbj8jLGxB405QHz2zkhL2dsrKcZzWlB
S5JoRWuSaUMKqaTRlnakk0EmD9q3HD/KKxgXx6M9D5mX5yd5JeNjfVyLWX0S
bNJPpwND9HdwUl7F87FHXItZA/KwOZ4xOjJUfyen5NW8EHvE9cU9Jy9b4h7S
iYf1FfhZXhPvGhP1rbiE3bFnXIPciHxsjfNT21OUWfH+qqlcydf6t9TOXB9V
/4h6F6flOWo33o1nRU2nMAvoyQTzV9XWXMqeOM/4r+TGXMC2OAZdeFRfkV/k
tfEexvHoymPmlfhVXhfPcqynG4+b380Z+b14FmM93XnCvDK/ye/HfxLr6UEW
PenFk9ZU4Xf5gzjv+G3cJ7Mm5Ge7/m16M0xflT/kD5kUe8R9MmvKhezQz2aK
nMZVfBN7qF24Id5T+rIm3mffnQfxD8QP
           "]]}, Annotation[#, "Charting`Private`Tag$257631#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwNzkN6REEUgNHX6Y5to2NuJkvIApJBlhfbtm3bOIPz3fpv1aCibR2t7aEg
CDrpCgdBWSQIMojwqR+5oZseeumjnwEGGWKYEUYZY5wJJplimhlmmWOeBRZZ
YpkVVlljnQ022WKbHXbZY58Dyv0zk1i+9BO3VOlcEvnTbxxSobOI41vXm0Wk
0UgJzTy7qzULSCGGO7tqM48kAt7tjog6ZxPPj37hnmNOOOWMcy645IpK73NI
4Fe/8kCNzieZEB92dWYhqYRpoJh0miilhWtv/wHROENK
           "]]}, Annotation[#, "Charting`Private`Tag$257631#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1HegjnUUB/DXLkk0VColpGnvdW3ZXHtzrax77b23hpFZyGinQRsNDeva
u5IZTUVDisjn/PFxvuc81zue33ne/ClpyakZEolEun+KZE4kpmdJJB7kqPw8
I+hMUWaYP8Qx+QVG0oViFKcEJSlFacpQlnKUpwIVqURlqpBEVapRnce9/sMc
l19kFCnU4AnzRzghv8RoulKTJ82LcFJ+mTF0Y4VZDS7IH/E0tXjKrCjfya8w
lu6sNKvJP/LHzKU2M82KcUp+lXG8rW/ONezQ94h7JtfiX/kT5rFe34HcHNTX
YZZcnNPya3whd+d2xuvfUVtwLTv1PeOey7W5KH/KVrkPdzM/vp/akRs5zBgO
me9WB3JffF+m8Kj5bLUE3wf9fnUoq+Qv1R6cIS9HGMcfTHD9XbUlP5OdrxjJ
OXa5vkNN4zcKxJkxifM8Fmer1uFHLukPqsPZIKerfbmHBXEOaiduivfR71EH
UZi6+jlqSX6QX2ej3JM7mKh/T23FdezW94r9iXvAf/JnLIzz0nfmZr7W14t9
kUvF55TfYBK9Y8fivbksf84i6se+mJXmJ/lNJtMndsysHlfirHmGBrEfZmXi
PspvMYW+NGS+eVl+kVczlX40ojFNaEoyzWjOAn9fLs5NXsM0UmNnzerzf5wt
z9IivrdZeX6NfWZTnA93xm9A7CJ/Mt2199XW5GCPPi12V25Ago36xbSM+6Gv
EOcfu8wM+tMqvrt5Rc7GHsUzzwBax+cyrxR7FOcWzzwDWWXWkAxs0i+hTbyf
vjK/x+eL3wEGxR6YNSIjm/VLaRv/T18l9lj+IH4HourbcD179YPjrOXGZGKL
/rl45uQu3MI3+nbxunJS3CP5QzbLvbiLmTFT25IzdopR7DPfqfanICeZzJDY
GbVJ7A+ZOcQItrq2Te0XZ0V+jsd+8xfLXN+gpsS+kIdvGRv3hsOu71UHx33n
fk4xlb9pH99RrRrPUbym/oA6jLXyFrU3+TjGBGaZr1XbcUPcE0az33yXOoBC
DI3dVpuShXT9djWVe1kez6DalVvjc+s7sEyuxnl5XfxeRY3PSi4O6IfFsyEn
k5Vt+hV0ZLm+enw/eX38TjA8nguzZmRju35lPMNyN27jiH5fnAcPcJppXKCT
a1cBas39uA==
           "]]}, Annotation[#, "Charting`Private`Tag$257631#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"Test on dynamics\"", TraditionalForm], 
     PlotRange -> {{0., 3.12499993622449}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1b\"", "\"u1b\"", "\"x1b\"", "\"\[Theta]dot1b\"", 
       "\"xdot1b\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.863702134579542*^9, 3.8637021627135525`*^9}, 
   3.8637025210160646`*^9, 3.863702578124817*^9, 3.8637026714539957`*^9, {
   3.8637027226726294`*^9, 3.8637027640764*^9}, 3.8637029884806967`*^9, {
   3.8637033266226506`*^9, 3.863703335559795*^9}},
 CellLabel->
  "Out[660]=",ExpressionUUID->"9ef8c67e-f793-4333-b111-df112cf242fb"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
K7ze3d7x/urbLcPww6e678IlOkHy0M1J9huG4kuA5KEGajtddCsbIOLdI0ft
2gEIXJwn2W9LJzzMTv+K+smAF64Ck3uxf6VEOubNfx8EzpSejAIcX6L7nh9z
7BqC03SDs03Y/s2bKOGbj+H+HOR18nKmE9q6bkI0oyEIKvZTGcXjf0Cos7NR
mwHrrqUHpeL7kfwzrVPf6R1vI5t/3mblZXeYJRIkr7wi82JA9lI3QfJKrv1N
CzpvewiSV6qHJdxVyeklSF7ZaPlqZ653H0Hyytctow/GFtOJQxw7cl7fHoB+
0cP+e8zoxOedRU5Gngwwu9C2aBLbQ/JM3vOm1Mfn6QTJM5sMGLUE3l+QPLNU
T2em17ePIHkml2vqn+z8XoLkmd1+Kh7ejT0EqbdVkHSQDND9BKTedlina0Ly
fg6Qetta5S1JbwYK2PxzheS7aCH1YiD5Z3tGh6rkaAmQ/FPHOKdwguMLkHrb
UUF/2U9Py9g8VHLUUXDpsXo2vwx9GlH6b18vQfLLIypTKrqb+wiSX2b8GpG/
W9VHlJRMW/Bc74d5BdO2uYN04uwYH89p70Ho3Lr0iTKuR8/y8DBkg4ZAR0xA
/gyuV1m/bH/fTxyBA9c4hOKU6ATJP6dvLY/w+dpHkHpcqVNyqa9/5wOpx7X9
etfnxM4iNg/9LXf3xjelEiB5qL3McO+MXSmbh2ZFj5UqqjSANVd0neQYHdyV
Vw2O4nrk+/Wodk+uQRBOWdbQg+uVAJHupFLqEPwUL7wkgP1fgzW/J2bTCLxJ
f9/Zp0snSL1t4xFDXu/yYhC/e2y6Z74fvBfpqYqeoBO9Nh7bds4Pwr4PyTYH
8fXSY1uknq0ahte2Pdb1l+kEyUPLZmPPvYsqAZKHvhO4+4EzpwHu5fbohBQP
gEe/v7C7DZ2QkKwNCS5kwOpPbes9sX/FfCgJVyUGYalFAmULjp+iv6sWW/wc
glOp564I4PVrpcJJJ1uVQVDa/NDuBl5fxwWmvrGODsEvlbSaj3j9lZHcnS96
gAG38xrcffH9SP4ZXTvM0plpgCvvKrlcXzBA+vpVo0bc7lFtrfftxSAY6v1t
+orj7+ATxsH2LUOgG3dz+zx+Pk2jyTluHQMi9ubXsHB/G2JaxN91MaB3+rB9
Dz4uui/emf17ENKmHGV0cD7S5Q7mfWTMgMjNUjfq8f1Jvrn05GLq0tWNbL6p
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
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{1785, 1784, 363, 364, 365, 366, 367, 368, 369, 370, 
            371, 372, 373, 611, 549, 497, 454, 421, 401, 625, 563, 511, 468, 
            435, 636, 574, 522, 479, 374, 612, 550, 498, 648, 586, 455, 640, 
            578, 661, 526, 653, 591, 665}}]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{1785, 1787, 384, 667, 594, 656, 532, 584, 646, 480, 
            523, 575, 637, 437, 470, 513, 565, 627, 404, 424, 457, 500, 552, 
            614, 383, 382, 381, 380, 379, 378, 377, 376, 403, 423, 456, 499, 
            551, 613, 375, 436, 469, 512, 564, 626, 402, 475, 518, 570, 632, 
            422}}], 
           PolygonBox[CompressedData["
1:eJwV0UVsUEEUBdBP8QSCBdcCG1wWSIAEgoVgbXFokSIVpCyQAAmEFm+haHFn
g8sCd9ngskACJLjLBlqKhDOLk3ffm/z5mZnY5IyEKTFRFBUhn/5CYYkoKiBd
TiOVFCYwnnGMZSV7uMZ3GtooOZBz2c1VvtHAfEwgH+MB/2htNpUV8i6u8JX6
ZqMD+Sj3+UsrswyWyzu5zBdizUYFcg47uMRn6pmPDOQkEslmOxf5RF3rSYyQ
j3CPP7Q0Cxe0TH5Ccbk9M9mmv8BH6ugTGS4/p7TciTkc1pdXu5HJXf1vWsiT
WSpXVHuwgMf6PuGfFGM17ZjBVmsb1H7kUJa1dGEe562vV3uxmA/6VWrtcDaG
6Tep8eRSiTx6spBn1vuq2ZRiDR2ZzSFrceGtKEdX5nPHvHc4B4Vyc3USS+QK
aneyeKQvqrZlOlv0ZdTOzOWc/j21wj0yVH5KSbkDsziov80vmuknhnPKD4mR
2zCNzfqzvKNmODdD5APcooCmZuksCnfCGd5SI/ybwfJ+bpJPE7O0cE/yRk7z
huphbwbJ+7jBTxqbpYY3DW/GKV5TLezNQDkrvBcneUXVsA8D5ATiySSPE7yk
SviWOHkv1/lBI7OU8CbyOo7zgsphP/4DvER+Pw==
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1Hecz3UcwPGf3Lmh4s6debqhk1XcuYy6KJJruAoJEY4ohSgqFZpGw2oX
olKoCEXSMBpURtqpiKJhtKf0fD/643mvz+dz4/f9fL6fx+VXjOg6vFIikSj3
JfoPK7mFPnSgJUdQmSSSqUIKqaSRTlWO5CiOphrVySCTGmSRTU1qUZs61KUe
OdTnGHLJI58CDvEit9KXjpTQgH9ZxW1czOmcGM9kU2/qDC7nfI7lMC9xO/3o
RKt4fj//ls7kCrpSSBzOaplIf86IPVh7T2cxhtaxd2sb9B6G0Y2G8evWX9ZJ
DKBz7N/aNp3NNbSJc7O2Ue9lePyu+Vf6DN3jbMw/0ce5kWbme3UZx8V7Mn9F
J1NkvE8r4oyMv4xz0YXaVn/Vs7Qs3oO+H+9b58TZ6Y96pl6rTfSb2Lc+p6X6
h56jbeNd69t6qt4Xd0YP6Ih4LuNd+iwnGf+mF8Q7Nv5Un4izM/5Zx3G88be6
nEZx78xf1SkMjGeKO2PtA32U6+Lvxl2z9o7ez5X0oDFJ1l/TOxgUe477Zu1D
nctYTibD2rv6ACPjs81362IuJNf8M53PeE4w/06fj/Mh2XyN3kmx8X69JO6b
8Q5dxNnUM/9I58WdM/5Jr6ep8Z64G7pUT9E/tYuWaqZu0tP0QS3Rg1qmo2Kv
+rV20iWxJ/09PlN7ap5u1476ZNw3/UUn0Nz4e32BdsZ/xfNQxXit3sVgCs13
6tPx7skx/1gf44Z4ZmpY26wPcRW9yLf2uT7FTXFvSbG2Tu9mSOwzPpss61v0
Ya6md9wJUq2v16lcSjnt4z2Q5nuv6zQu49y4i7EvWlBEup95Q6czlPPiLMm2
vlUfYTQXUWDtC13AzfE3zH/QFfGZxn8n/v+fWaz/AVjRjds=
           "]]}, Annotation[#, "Charting`Private`Tag$257743#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl03mYjWUYB+AzU00J2VpEyZZUSorSQlkqtGCUGiqMZJ+xlEqqKYx1xgxm
hpk2sldEm/bsZClSoRRStBGVbC33c/XHfT2/5/nOec93vu99a6RnpmYkJRKJ
tkn/65CcSJzBTvlNCniKnmYX8qf8MXNpxx1mZ7JLfotCnqY9qbEed7p+Ft/J
iylieHyXjuaV2S2/zRRG0MvsIg7Ja5kX63CX2dl8L7/DVEbS2+xi/pLX8VKs
zd1mVfhBfpdisuljVo/D8npejrVJM6vKHvk9SnhQfyXJfKkfRV/5Eo7IG3iF
R/XXcjJfx2/TST6HvfL7PCHfQBme0T+kXsUJbInnot5IBUbr+6mXclQeo97C
J/FO1BaUI5d2zDcfql7HJE5hHLexPZ6TejOFVGIC7SkmzfXO6rnk82P8T7U1
RXygf1JtxmTKMp7bmcKzrg9RGzORExnLrWyNd6reREXG6Pur9Tkmfxp7Rm5J
eRboH1ObUIpv4jlyj1yNn+QPeY6H9VdzEtv0Y8mQL+O4vJFX479xr9l5/Cx/
xPOMi3XjGvcF16vzi7yEFxhPl2Beg1/lpUwjh0yzBvwtb2IhXYNZTfbJy5hO
LgPMLucf+TMW0S2Y1WK/vJwXmUB6MK/Nb/IKZpBHd+6nBw/EOY2zE+ch9jiH
U+zV2EfxzOPZxP3GPTCQQQyOPR57MdbzG+dzQF7JTPLjs2ZX8K+8mdcYpm/K
qXwb7z/uRa7DQXm02oZVcpbanAJOI4e2TI0z5B5n+cwj8jWk8JV+Ytyf3JAE
n+tfj3ce/1d/Ab/Lq5nNpFgjzmGcg9hDcY88Hucu9m88I9+pyx/yGuYwOZ6B
WSOS+EL/RnxPvp7S7NBnq604nTxSKSHLtf8ASD2omw==
           "]]}, Annotation[#, "Charting`Private`Tag$257743#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV03eAz2UcB/DfGRVNotIwIg1pGElDUoq0nITQOKVpVCTtiCItKtQdCuXu
lFk0VDcK3XSubqA754rQUGiP1+eP1+/zed7f5/v9Pr/n9/xapYxKHpmUSCR6
+0itk0i8UTeRuI2zqc82WSFpzGEu82IebzKfBdGbO5wOHECtrIiFMcf4djpy
IN/Kinlf/xCXcSy/y96K5+nvoBMH8Z1sA6v0D3M5x/GH7O14h/5OOtOA7bIS
VusfoRfH86dsUbxDfxfn0JAdshz1afpxMhtlH6iP0psT+Eu2Tp3GQE4nPdag
3k0XDqaAlxjK967nqs9wHaewgVe4hVLXP1Qf4wq+5jWaU8QMbqKSOfxt/nr1
Ob5hEOWkUkP7WDszqWYYm5gbvyUZsQfqPWzhXL5iNls5hEKmU8WNVJDGTvd+
rk6hP2W8zqmU8Cop8TzzPlIfpw8tKOZlbuYf179Un+cGziBTlq6OoCuHskv2
hTqV6zkt9kf2sfoEV9KSf2WLydCP5DwOY7esjDX6J7mKVvwne4dM/SjO53B+
kJXzbjzPeDQXcAQ/yipYEvca38uFNOInWSVLWcZyVrCS9+Kcx9mN8xhnKn7v
2J/4HrE2PuHTeK9n3Uc3GvOzbBOfxXuN7+cijmSPbHPcq5/A1ZxIgqxYizqG
7jThF9mWeI9+ItfQmiSyY93qWC6mKb/K1qrPMoB2cd5iLepTXEsb6pDHCwzm
THJiD9QH6MFR7JVVkaWfRF9Ooi65sV/qOC7haPbJquO8xT4aP8ilHMN+2dY4
G7HG+E/GfyLOFHnkx76bN56eNOM3WQ3Z+skk05Z65PMiQziLUmZxK5uZRy0F
7v8fyyu7tQ==
           "]]}, Annotation[#, "Charting`Private`Tag$257743#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1HVgVmUUB+BvbKO7G4d0dyNd0qMbRtdQlLKVUBQTBcVAEcWky8BAVOzu
VrpbQMLn/PHs/M557932ffd9b1rGtPTMpEQiscuP3cmJxIDUROJMSiLxHGNp
SDH2WNvLPvZzgIMc4jBHOMpA9//r+ucZRyOKc8zaIGtn5VWMpzElOG5tsLVz
8gtMoAklmWFemPfkufThhOuHmJ2XX2QiTSnFTPMi7JDn0ZeTrh9q9p/8EpNo
RmlmmRflfXk+/Tjl+mFmF+SXmUxzyjDbvBgfyAvoz2nXDze7KL/CFFpwp1kl
vpMfoSxz9MX5MNYZwAP62vwuP8UZv2+E/pL8KlNZqm/Ebrkld8mV+V5ewtNy
K47I5bhBLsHOuJYn5OYckAfyoFyHP+TVaneWyyvVdpyQN6l943n6f0aql822
qqvjOamdyJQfVRuzjT36tWrPeGZcpV+oVuENfojvSO3Kdpbqn1Fb8zZH9RvU
9PiOuUJ/o1qS1/gonqHahYXyk2oLDsqDeEiuy5/xncQ+lttzUj7rc4ySE6zR
T6MVd+ur8mN8FtK4SV+Kj2OdwZxzf4ZZEmv119Cae/TV+El+jPLcrC/NJ7HO
EBbr6/FXfGbO+32j9VlYp7827pebsFduwyK5Oj/HXlC7sUxeobbhHY7pN6p9
Yl9xpf4WtQyv82nsY/Vq3mVR7DO1JW9xSL9e7R3ngKH6h9X6vMnf+jVqD1bE
2VY7cErerPaLs+WzjFGTWR/nUu3MdHmZ2pR9clvulWvwi/w4z8ptOS5X4Fa5
LJ/FtSyPfcRheVicJbkB/8S9XPC3x+pT2KC/jnbcp6/Jr7H/qcht+nJ8HusM
56L7x5mlslF/Pe2pxO2xB/lCvp8RXHL9eLOsbNLPoAOVucMsjS/jXDOSy66f
YJaNzfqZdKQKCSaaZ2eLPItOVCWJSeY52CrPpjPVyEIyKaSSlWxkJwc5ycVk
9+aMsyPPoQvVmWtWnq/iXcAocjPFLFfsm3iHxPORm7FfXqf2Ykfspfg+1Fr8
FueQGsyL/cfXcRbJIA9TzXLHOyDOM12pSV7ykWktT+y3OHt0oxb545ya52Vb
nCu6U5sCcQbN88U+jj1PD+pQMM6Tef54r8Seoid1KcR08wJxfmJP0It6FI79
Y14wzko8f3pTn/lmFfhGXsxoisR+MSvE9nj+pNOABWYV+TbOE2NYom/ILnkl
q+SOnJa3qP3ZSVH9//9W8mE=
           "]]}, Annotation[#, "Charting`Private`Tag$257743#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV0Xecz3UcB/DfJYdSIZREdpnXIHvvEWVvURRlZpMVUvZWpLTMhlH2qlR3
h3P7cEZRwg17h+f3j+f39X2839/v+/EZRXsNbD0gLBQKRXhEZg2FfgoPhcby
Cs+Rk9vqUUSznwMcJIZDxBJHPAkkkkQyKRzmCEdJ5RjH+dns92lJaR7hjvoJ
NnsfRyvK8Cj/q/8uZ9KdqhTipPoWOZ5XKctj3FX/Q86iB9UozF/qW+UEXqMc
ubin/qeczetU5xn+Vt8mJ9Ka8uQmliX0pQEhIplDT2pwjK8ZRhGS+IwBNOWU
2dvlJNpQgSOsYAh5iOMT+vEv39Ew2DcrGUkYUcylF/+wjpoc5xsuMJzzbOAq
RUlmOZkM5D9+4DLNgv2zmouMJo2NXOO09e+QH5BB26DGWi4RwVG+5D3O8iOP
E8+nvMMZvqdRcD+sYhQPEM083qAWJ/iWERQjhc8ZRPNg79a0U06mHc+TlwSW
8i6NycJ+5vMmtSkenLH/d8kptOcF8vEgB1hAb+pQIli773fLqXTgRfKTNThL
vT3yQzryEk8QHpyF3jnOk0Y6GWSyV38anajIk2TjIAvpQ11KBvfq+1/kR3Sm
Eql8xVDOsZ4rFCCRZfSnCdmJYRFvUY9SwX2b+6v8mC68zFPkCO5W7zJXuMo1
rnOD3/Sn05XKFOQhburtkzPoRhWe5mEOsZi3qc+zHOYLBtOCU6xhDOls4jq3
zL0PX0uxZw==
           "]]}, Annotation[#, "Charting`Private`Tag$257743#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"LQR feedback solution\"", TraditionalForm], 
     PlotRange -> {{0., 3.12499993622449}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1c\"", "\"u1c\"", "\"x1c\"", "\"\[Theta]dot1c\"", 
       "\"xdot1c\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.863702134579542*^9, 3.8637021627135525`*^9}, 
   3.8637025210160646`*^9, 3.863702578124817*^9, 3.8637026714539957`*^9, {
   3.8637027226726294`*^9, 3.8637027640764*^9}, 3.8637029884806967`*^9, {
   3.8637033266226506`*^9, 3.863703335756732*^9}},
 CellLabel->
  "Out[661]=",ExpressionUUID->"4833edc9-86c0-4072-adb3-f0dc06b2a11d"]
}, Open  ]],

Cell["\<\
Understand the performance of the functions wrt random initial conditions\
\>", "Text",
 CellChangeTimes->{{3.863702871824973*^9, 3.86370289295422*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"b6d5a503-f5ca-471f-9280-ef8cf6caad0d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  StyleBox[
   RowBox[{"n", "=", "40"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Tau]", "=", "5"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Tau]1", "=", 
    RowBox[{"\[Tau]", "*", "1.25"}]}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"A", "=", "0.2"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"order", " ", "=", " ", "4"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"maxIter", " ", "=", " ", "100"}],
   FontWeight->"Plain"], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotMin", " ", "=", " ", 
    RowBox[{"-", "1"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotMax", " ", "=", " ", "1"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Min", " ", "=", " ", 
    RowBox[{"-", "\[Pi]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Max", " ", "=", " ", "\[Pi]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]dotMin", " ", "=", " ", 
    RowBox[{"-", "1"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{"\[Theta]dotMax", " ", "=", " ", "1"}],
   FontWeight->"Plain"], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"xdotMin", ",", "xdotMax"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Init", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]Min", ",", "\[Theta]Max"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]dotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]dotMin", ",", "\[Theta]dotMax"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"ICs", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "xdotInit", ",", "\[Theta]Init", ",", "\[Theta]dotInit"}], 
    "}"}]}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"InitGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}]}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
       "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
       "\[Lambda]3ff0", ",", "\[Lambda]4ff0"}], "}"}], "=", 
     RowBox[{"ffCartPendulum", "[", 
      RowBox[{
      "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", "order", 
       ",", "maxIter", ",", "InitGuess"}], "]"}]}], ";"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1b", ",", "xdot1b", ",", "\[Theta]1b", ",", "\[Theta]dot1b", ",", 
       "u1b", ",", "J1"}], "}"}], "=", 
     RowBox[{"testSwingUp", "[", 
      RowBox[{"ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "u1a", ",", "A"}], 
      "]"}]}], ";"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x1c", ",", "xdot1c", ",", "\[Theta]1c", ",", "\[Theta]dot1c", ",", 
      "u1c", ",", "J"}], "}"}], "=", 
    RowBox[{"testWithFB", "[", 
     RowBox[{
     "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
      "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A"}], "]"}]}], 
   ";", 
   RowBox[{"p1a", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1a", "[", "t", "]"}], ",", 
        RowBox[{"u1a", "[", "t", "]"}], ",", 
        RowBox[{"x1a", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1a", "[", "t", "]"}], ",", 
        RowBox[{"xdot1a", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1a\>\"", ",", "\"\<u1a\>\"", ",", "\"\<x1a\>\"", ",", 
         "\"\<\[Theta]dot1a\>\"", ",", "\"\<xdot1a\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Feedforward solution\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}]}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{"p1b", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Theta]1b", "[", "t", "]"}], ",", 
       RowBox[{"u1a", "[", "t", "]"}], ",", 
       RowBox[{"x1b", "[", "t", "]"}], ",", 
       RowBox[{"\[Theta]dot1b", "[", "t", "]"}], ",", 
       RowBox[{"xdot1b", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
     RowBox[{"Filling", "->", 
      RowBox[{"{", 
       RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Theta]1b\>\"", ",", "\"\<u1b\>\"", ",", "\"\<x1b\>\"", ",", 
        "\"\<\[Theta]dot1b\>\"", ",", "\"\<xdot1b\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<Test on dynamics\>\""}], ",", 
     RowBox[{"AspectRatio", "->", 
      RowBox[{"1", "/", "3"}]}], ",", 
     RowBox[{"ImageSize", "->", "400"}], ",", 
     RowBox[{"GridLines", "->", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], "]"}]}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"p1c", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Theta]1c", "[", "t", "]"}], ",", 
       RowBox[{"u1c", "[", "t", "]"}], ",", 
       RowBox[{"x1c", "[", "t", "]"}], ",", 
       RowBox[{"\[Theta]dot1c", "[", "t", "]"}], ",", 
       RowBox[{"xdot1c", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
     RowBox[{"Filling", "->", 
      RowBox[{"{", 
       RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Theta]1c\>\"", ",", "\"\<u1c\>\"", ",", "\"\<x1c\>\"", ",", 
        "\"\<\[Theta]dot1c\>\"", ",", "\"\<xdot1c\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<LQR feedback solution\>\""}], ",", 
     RowBox[{"AspectRatio", "->", 
      RowBox[{"1", "/", "3"}]}], ",", 
     RowBox[{"ImageSize", "->", "400"}], ",", 
     RowBox[{"GridLines", "->", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], "]"}]}],
  FontWeight->"Plain"], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.863702943662017*^9, 3.863703035828568*^9}, {
  3.8637035036430883`*^9, 3.8637035037600527`*^9}, {3.863703942891737*^9, 
  3.8637039537012815`*^9}},
 CellLabel->
  "In[882]:=",ExpressionUUID->"3024c605-13d1-4af1-8ddb-6b0488dd66d7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0.7479096975521031`", ",", 
   RowBox[{"-", "0.7019932321993547`"}], ",", 
   RowBox[{"-", "0.5253804568578575`"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.863703015891938*^9, 3.8637030366952906`*^9}, {
  3.8637035047167454`*^9, 3.863703509517211*^9}, {3.8637039271827555`*^9, 
  3.863703954376066*^9}},
 CellLabel->
  "Out[892]=",ExpressionUUID->"fb39f8f6-b34b-4e5c-9f77-e53e4b035e07"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "ncvb", 
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"t$416882\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"t$416882\\\", \\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"3.378828541797338`\\\", \\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"135.9613198178056`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"0.0003277794068873446`\\\"}]\\) for the integral and \
error estimates.\"", 2, 896, 180, 17526393564350071368, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8637039557486277`*^9},
 CellLabel->
  "During evaluation of \
In[882]:=",ExpressionUUID->"6ffde78e-ef3e-4be4-b94b-2d7df50021e8"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1:eJzM23lYTdH/N/zmzjkNpzokhCapJCFTZC1zQiiiQSXNmjVpkkKpNCFJo0JS
NGmutUuzNE+KNJ5GzfN4n/u5vvv0PL/7j+91//f0j2td6Ky999pr+LzPS1jP
UsWAiYGBQYaTgeF//ykSsBIbuf3RCYNe6w859lSklM+uTDVC4HChcHzuEBX9
5DpEZLldC8zcYij5Ar3oVMBZ7OOVVvCpwtJKxawDGexd5NrH1Ql2Gw3kCd1p
QJclDSb4z/eCPy5VJlwJ31Fqo6tdxZEBcCXAUIizKAcd45P6yvJwBBxkGnN7
+aQMGS0FR7y/NQ4k2U4mXutrRZal/Qe+Xp4Ea2dWDsijXuSjwbZzxWwayJAW
Nl0c+4fuljkb7jOeBZNls8fPJ02iQvbN1+6pz4Ok/MfvMmNm0D5e95BB20WQ
lfHk7I9j80h3SkFa2WwZBHjb9GdcWUQxkSWCc89XwbTv6Ldio2WU5i/fXq/C
ABf+mvivuKwi2xyFqxGXGOE0f0rpn4sMGKp8P/lMkwluqad4vHvFiJmcP5pv
cosZ/vmydK9nmgkLj9/37Z4pCzxcqSt2MJIFC5rKf2TlwAofHR2aI9xkw6gJ
dvbGNmzwXpFTrF8nO1Z8LjjUw4MdbrPQucB/kogxXmnrDnAnwNA5srI/Dwlj
OJnBGP2ACLcmHHH0P0zCvDfNXa73IsEtk3c8XugSMSuNu0Vznhxw93ROYaw6
O9b1SE4fvOKEz6sbjHeUMGMbXrxpexbDBSXi9aTmslfRBx6pB2VvuWE5Z5Ps
WvsMKrTZcXbXZzIs5le8nCrSjyKFogUVrvNAjamig1FraSjfZZHBuJYHfrPO
ROVmXUD4Ivuy6E1eGLspMNxUaxKk10j6/mrkhRP37tpdN1gEfqWrskK3+WDq
x8yXXbcZ4Yv7g6a6v/mg83tmYtMyC3TZuJ0sok6BHtMewyGp7PCTJGulbScF
6jUsbGbeRIRs04ybC7U3QIE9Z64vCRPhR9kUt8j+9bakXoLyivlGerv9Qnbq
jeH1dn2s0x5wn5/enk+7dlxkcr29lmXz7anFJnr7ouy5sy4z6+2y23tN7t0X
oLe/JFvNra2ttyuD2q0HjL4CVpGWN2Ub+5HQSmb4yqFy8Fhvl+dcbx/yrs7v
vaHWCDb7/GUra+1CbHOCoywHf4MC6qL2jvZWpJ74dU1UqhtoDjHuMGerQgwP
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
mqZ+XmDZ110V2SJ13DVJtNwgf+J5/wHDZi9G
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{579, 518, 589, 534, 743, 688, 643, 606, 578, 3109, 
            3116}}], 
           
           PolygonBox[{{511, 521, 510, 3112, 592, 563, 545, 513, 730, 675, 
            630, 593, 564}}], 
           
           PolygonBox[{{515, 512, 549, 747, 692, 647, 610, 583, 520, 733, 678,
             633, 596, 567, 756, 701, 655, 619, 550, 748, 693, 3114, 3111, 
            568, 551, 522, 734, 679, 634, 597, 569, 552, 523, 735, 680, 635, 
            598, 570, 553, 524}}], 
           PolygonBox[CompressedData["
1:eJwV0CtPAlAYgOHDfYKXAXKpdvwJ2nWz0DAyiOjmD4AMTQNB59SsHZoWA4yp
84YZuzYtBB7Cs/f7zjnpbNWPq0fREEKEAxKWODNuaVNbPoiFMNJzdvjjnlNa
JNw/6RUVfhjQJe3uTRvEzBPd1Etd16mWdE/nPJK393VVP7SoJ5rSFy3ojW7o
l5Y1p9/ckbV3dEVf9ZCIeawXrJk/dZd/Hsg5O9OMvuvyY5LmZ71mm1+G9Giy
zwIudiW6
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{511, 512, 566, 595, 632, 677, 732, 519, 548, 3108, 
            3106, 547, 565, 594, 631, 676, 731, 514, 582, 609, 646, 691, 746, 
            546}}], 
           
           PolygonBox[{{515, 516, 529, 625, 661, 708, 763, 584, 611, 648, 694,
             749, 555, 620, 656, 702, 757, 572, 600, 637, 682, 737, 528, 3110,
             3107, 554, 571, 599, 636, 681, 736, 527, 526, 525}}], 
           
           PolygonBox[{{517, 518, 616, 652, 698, 753, 559, 623, 659, 706, 761,
             577, 605, 642, 687, 742, 533, 628, 664, 711, 766, 588, 670, 717, 
            772, 615, 3113, 3115, 705, 760, 576, 668, 715, 770, 604, 641, 686,
             741, 532, 627, 663, 710, 765, 587, 614, 651, 697, 752, 558, 575, 
            603, 640, 685, 740, 
            531}}]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1GWYFmUUBuBdujsll5QOKWmkG1a6u5EGA1sxQcXAAhVFAUXp7u7usMHC
QlERUO9z+ePe5znvzsw33+w7mzRgTPJdiQkJCTf9iJzkR1qW6XtkTybrS2Rj
ftbbMluvxDn9iBzIHH2zTI7j+Md8QY7hBreZp8siXGSf+aDsx1VmmNfI1lzm
T/NZOYq/GWyeL2vzDZfMx+UQFuo7ZFdS8hnjSGF9skzHcn2v7MUUfalswi96
O+bolTmvv0U1ZpiLsl9/jiEsMNeJe9A/JCVTzOlZod9Ne6qTKmbrGVip30MH
asT1rCVxQH+eoaSOY6xlZJV+Lx3jfsxVuKC/Tc04x1yMg/oLDGOhuS7f6h+R
Jq5hzsRq/T6W6U35VU+O6+lV+VR/hy36nfyr14pr68U5pB+S/Zmpr5Vt+JG/
zOfkaIbHc5H14j74znxCDo2/KYvMO2W3ePak4nPGJ/6/D9PGfcrMfMUa8z7Z
m9+Yal4um/E9V8yn5Yi47/gOsddiD+hH5SDm6ltlp9jk3C5myhIc1l9knd6W
a/qIeH56/fgM/WPSMdWchbX6/XRirrlafAf9XWrH9cwlOaK/xEjSxznWsrJO
f4DO1CEDGWPN77KxXn+QLtQlU8zWs7NBf4iu1CNzzNZzsFF/mG7UJwtZyUZ2
cpCTXOQmTxzvvJxs0h+hOw3IG7P1XGzWH6UHDeM7WSvFUf1lRpEvjrGWmy36
Y/SMZ2Kuzhf6ezSKc8ylOaa/wnq9Xbzn+mgW6Q34Qf+E/HE9cx626o+zQm8e
e0LvFdfWa/ClfkwOZp6+TXYmMfY4Y7kjPlfeyiWOmw/LAfzBLPMG2Z6fuG4+
L+Of5fXI2BOyYexvLptPymHxLrDYvEt2j/eM1PH9mcAtcf8yL9v0/bIP0/SV
sgW/672Zp9eM90B/n+16F1LQ2DxLluGE/iob9Q7c0MfEs9MbxTuqL6EA08z5
2K4/QZ+4trkWX+sf0CSuZy7LSf01xlIwzrGWnx36k/SlaRxjrRyn9NcZR6E4
Jr4zO/Wn6EczClOEoiRRjOKUoGQc65wC7NKfpj/N49rWynNaf4PxlIpjrBVk
t/4MA2gRx1irwBn9TSZQOo6xVog9+rOs0ltyVR8YzyH+T3BRn0/LON9ckbP6
bDbpHbmpT2Rx7K3YM/opOZyl+m7ZgyukiT3KxNh/8dmycDx79poPyL6xB5hu
Xi1bxbsQe9N8Ro7kGoPMC2jFJMrQmrKUozwVqEglKlOFNlTlP+1uAMI=
           "]]}, Annotation[#, "Charting`Private`Tag$422019#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{3112, 592, 563, 545, 513, 730, 675, 630, 593, 564, 511, 
           546, 746, 691, 646, 609, 582, 514, 731, 676, 631, 594, 565, 547, 
           3106}], 
          
          LineBox[{3108, 548, 519, 732, 677, 632, 595, 566, 512, 549, 747, 
           692, 647, 610, 583, 520, 733, 678, 633, 596, 567, 756, 701, 655, 
           619, 550, 748, 693, 3114}], 
          
          LineBox[{3111, 568, 551, 522, 734, 679, 634, 597, 569, 552, 523, 
           735, 680, 635, 598, 570, 553, 524, 515, 525, 526, 527, 736, 681, 
           636, 599, 571, 554, 3107}], 
          LineBox[CompressedData["
1:eJwV0bdPVlEYwOFDEQJ8dFFXFxbKX0AbKRuTlAmBST4jzLSNsgAJkFCCrrSR
sgAmQEKJGCm6qjBSFkoCJDx3ePJ7zz3Dveee9y2f6+MJIYReCmMh5CSG8Jd5
uvlAGbdsMMInirhkhQE+Us0j24zzhVyS+ccCPTQQkkLY0ynKuWOTUTp4Zf+H
zlHMFasMkm7vWFtJMh/qa53VLP2tb7VGn9gh33pCY3qqb7RTU/WnFug3zdY/
+k7z9D+L0TmsezVNf2kjCeZ9nSbTfKYV3LNFnmdjmqEnGifFfKRfKeGaNYZo
ozY6e/S9nLNEH01UUsoN6wzTTh3P7DJJV/Q/uGCZfppJ9O4DnaGKB75Hd+ne
XwCXl0Bq
           "]], 
          
          LineBox[{3113, 615, 772, 717, 670, 588, 766, 711, 664, 628, 533, 
           742, 687, 642, 605, 577, 761, 706, 659, 623, 559, 753, 698, 652, 
           616, 518, 589, 534, 743, 688, 643, 606, 578, 3109}], 
          
          LineBox[{3116, 579, 762, 707, 660, 624, 560, 754, 699, 653, 617, 
           590, 535, 744, 689, 644, 607, 580, 561, 536, 537, 538, 539, 540, 
           541, 542, 543, 745, 690, 645, 608, 581, 562, 755, 700, 654, 618, 
           591, 767, 712, 665, 629, 776, 721, 674, 784, 729, 793, 544}]}, 
         Annotation[#, "Charting`Private`Tag$422019#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1XfclmMYxvGnlBEyMptaWpSVGcluoSkykiaaymgQyqqI0KRBe6EoipIR
ykhRVgMZySyKrO/xx+9znMdx3c/7PNd9ndf5Vmzfo3n3IoVCYVXRQqH0HoVC
1eKFwj3FCoUSmMcP4jerO6In34F/Q90Qs9T74Sf5SLpDdisWq8uiibwhnSlb
QWvTaXRvrMca60PpNvkHtCddRI/ERjxq/Sa6Vr6StqHP0IPwGf6xPob+Jf+I
3k5foRVQxtrR9F7ZvpikLopn5HfSL2Wd0IvvyL+pboSf+Uf539W3oSnfiJ+l
roO1/GPoI/uIvxz/8mVRTXYfvx+e5XvjYpRDdWv3y/fHc9kXLkFj+WzZcdkD
/zjKo4b8AVlJzM/3oZNsBd8Yv/CXoolsDn88PuZHoa/sY/4K/MdXQE3ZUP4A
LODv4r9Sd0ZfvjP/lroJZqv3x6/ZK/1D1g/N+Kb8XPUJmK7eB+vkw+iPstW0
F32RlsYmjLZ+c56Tr6Jt837owfgcBX4s3Z090DvoUnoUvo76fC06TP46PZBO
pnvgeWt35zlZFzyvPgw3y7vQt3OGmKMuid/yjulOWX80zxnx89QnYj0/PD2t
7o0x/C3pV/WVKIKKsmNkw9UH4YU8g66yd/iLsZ1vkTNOz/En4RN+LCrhWPmD
soOxkL8VLVEZVVDb+kPWSuVO8LehVc5c/qysLj7lx+XOoo58hOyQvHu+H66X
reQvwQ6+NZrJnuNPxmf8+Hy37BP+KhTF0bLjZA+rD8VL/GB+i7pr3ht/A79K
fSl+5y9Dc9l8/hR8zj/I/6y+CU9kD/yn6qtzB9SlcobqcfRvOgjL1BVRzfPH
00dkb+RM6VO0GBZbG0K/kb1Hr88Z0MPxBQZYv5G+K3+HNqNz6QH5/vRz7gnd
JV+T5+kSWi5zIXMmZ0cXyN+ip9IZtET+vrWH6C+yPngy7zrzSH0NimF8ZhO9
E9Wtn8CPVB+e7+Hv4b9V34CBfDf+vfQidvKXpxfS2/xp2MBPyEzAiZmLsiPw
Mn87rkhvyF+QnY6N/MTceZwkf0x2ZGYjfwfa5j6hrrXH5aVz3zLrcWV6O/2Z
HkxfpRdyFjjZ86M8WybnlDmKq9JX8oWyM7CJn5Q945TcfVlZvJqZg6vTK/JF
snrYzE/OvnCqfIysHJbnXqO77H2+BXbx16CN7EX+THzJj8isyhxLj/D9M1fU
7VA8vcf/S+/KPbR+Gj9WXR5Pq4vjNfm99DvZjRjM9+A/ULfEvMwd/CkfHZWt
pQNzDrR85ina5fzoS/K36Vl0Jt03dyzPWH84c0j+YeZU7hctg8142vqA9Jn8
XXotnU8PwZ7pN/ofvTvvVF0JdX3mdDpOVgFT8ixel99Hv5d1wxC+J79a3Qp/
8demf3Kn+Pr4mp+CgbINfHvslXkhO0M2Xn1U7mT6GO1zzqhn7YnMRryZd4nr
0mvyJbKzsYWfmnPGmfInZZWwIr8THdJ/8pdlDfANPy3nhbPkE2SVcyf5+9Ex
+0Z9axPlVfLO+QfQKb0pf0V2Dr7lp2cPOFs+SVY184Efis7pTflS2bn4jp+R
faGBfHLmIlbyw9Ale8A51p6SV8Mqfji65vfi3JxnZkDOMvMwMzk9LF8mOw/f
8zOzB5wnnyKrkbmWOZM5i3byV2XnYys/K3vA+fKpspp4P++E36rujhF8L/5D
dWvszkzMecuW8xfgB/4Rfrv6FszOPOE3qq/DAvWh2Fs9gRYwOHeTVkYDz19A
p+XMaS06le6Fdbk7OQv6Q34f7UEX0iPSW/n/Yr03XSO/DH9nFqanch/5C7GN
n5P3jAvl02XHYHV+e+ZD3nPeXd5Hfk+ew0VoiEapfW6GzxybO8ePzN1Of+aO
yC7Cj/zczEfZJr4D9sFEvgiGqF+jVbAFjT37P6gzcls=
           "]]}, Annotation[#, "Charting`Private`Tag$422019#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1Hf4TnUYx/HjJyOEZO+9tYmyKbtJZZfQsFU2Tcqm7NmwR/OKsqIhMxGp
zLKzR5GMXvcf7+sz7vOc56zvt0i7bo92TZUkSZOUJDmcJkluSZ8k7dIlyW9p
k6QXKiIbjphlN3vG7He5NyrhFtyjH6K/wk/Gkzjq+Bz69vpdcp84Dk11H+ry
YImcHZV1b8lX+Sl4Xd4q10Nz+Vl5CV8e6+Vx8kG+BY75n5xyB3632TT+BN83
rpFfy/9Iq9LPaAoqmzWjs3TraF46l16ke+hS8+F0l7ydPkKX0Qw4hBzmVejb
+u/oNfkDei6eDZ0qv0G3yT/R+vQLmgYtzJ6L/9BVwCL+Ct2gHx/n51viL/eV
S+4Y12TWL56h/INcDVXkx+XZfD58KefEvbqh8vV4FmiJ486VW/+sfq/cP45D
Lpwwy2P2nNk+eQDuQ+5Q/TB9gulyK5x0fF7987r98kBUxRO6Obr8+ErOE71u
uJwKM+TWeF73pXwrNsqnnC+f7gX5D3kQ+srr5Opxr/E9yXP5AvEe5BHybv5R
5JWrySP4FHzIn6cz9W/yP/MN4lvj06KN/gX6VTxzehtdTK/G/dNN5hPoYXkn
bUVX0cw4itOuNz/tpP+W/un46fRkrBn6Srwrul7eQmvQz2lqVDdrTufpCmIe
f4ku14/k9/CPxfuUq8sj+dR4Tx4sb+cboq3cSV7G347N8hnXVUDXWT4gv4oa
yI+zZgXNupgdlF9DTRSIY/Sj9DfgffkpnHN8IX1X3aFYj6iFFrr5ukJYIReM
8+hGy2nwgfw0zvt9YX033eFYC6gd36Juga4wVsqF4ry6MXLaeHfyEHkH3wjt
5M7ycv6OWMfyBecuousuH4l3HN+zvEGuiTrxncoL+SKYz/8b71A/it/LN41n
zmdE4bg2Olb3PU1HZ9ELoWZv8b/wW2ljujSOifcee6F5F7oivmV6J/0o9oNY
G3SL+UR6RP6VtqZf0yw4hr/dS1HaQ3/UsTP4U/zgWIf8Rr4W6sbakRfxReMc
8mh5H98s7lOuI7/Dp8dsuT266lbKd8U+JP/j/4rpesa+Gc8a96Mo6urf1d+I
OXIHXHR8cf2LsR/Fs8ADKIZLZiXMXjI7Lr+Neige59SP02eIfVXuiH8dX1L/
su6EPBT10Ua3WFcMq+US8R+68XLGWCOx/6ObbpV8d7wL+bLzldL1kk/Kw2Iv
ivUr1441L7eVP+KLYwF/ma7Rj+H38zvo4/Et00yx5lEy7oNO0K+NPp5nvCu6
K77/uFe6U95Gm8TeS9PjQOyj5t3p1/pNtCL9mF6P480mxT7Ct4n75bPiP/dS
mvbWnXLMzNhn+OGxH/Kb47uOtR/rU/6YL4Fv5LHyH/wTKBXPVJ7I3xT3HPst
euhWy5Xws3zF/5XR9ZFPx36KRrF2dZ/oSsbeJpdGA90kOTMWxt6Jq35fVt9X
dyb2LjRGGTTUT9ZnwaLYp3DN8eX0/XRnYx2iCcrG/+qn6LPGPhzrHdcdX17f
X3cuvnU8iHJIUMFsgNn5eJd4COXjGvRT9TfHOoy1iVS4VT9QdyGeFx5GO92n
8czwXZwzrkk3Tc4W7yzWD3rq1sj3YLucgtt0g+QKmZLkf4zaOtk=
           "]], 
          LineBox[CompressedData["
1:eJwV0jlMVUEAheEhsiqogFtrJ5igbEaxVUuW50qlgFqKCNgCCoWU4G4UsKCh
QZZCEwtBRAqVxAhoCIlCYtAGC0Gg8Zviz/nPmffCZe7bX1ufuJYUQniFgswQ
5tJCKEd9agiN6SGM8aMY5AFf7I/ksu0ituiH9Rb+l/fyFd7FW/hHfgJVep0+
xKfkATkgN+WCnHDeJX/oM/KCfC2z8BMFzsvlU/ukzJX9clXOy0Hnd+RX/bOs
kC9lBpZw3XmTHLd/kMfkC5mEGWeP5S/bJbzh2Ui2F8pW2yrv4394N2/ln/hJ
JPTL+jDPwzu9W1/k1TikV+jP+K74d/VO/RuvRIPerL/lZZjVU1Bka9PX+F2c
xhXbiC0/3kO8e1TaevTdGNJvIBXF9lu2f/wezsT/B1X2XvseDMf3jDSU2G/b
1vl9tOnT+imMxPvAd5x1dlWO2g/ifXxWJGx9+t74+XjfSEepvd22wR/gXHw2
ZGArtiETWdiOHdiJI77X4Xub/CHOx2eM92B/bt+H0Xh3uBl/Q/pxzOlP9N+8
BmM8J77f+F6d/QelK2H8
           "]]}, Annotation[#, "Charting`Private`Tag$422019#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1Xe8z3UUx/GvvVf2du1ViKyyadDUtLdC0VAhRQNpaE97z5CRvTKi0rYp
FUn23vQ8f7we57ze53t/9/5+v8/n3JTOfVr2TpUkSa00SXIoY5LclCVJ+mdO
kv8yJckQNEZRtJaPkefADP4oDnu+pnyA7BAfiiYohjbysfKcmMkfwxHP15K/
IDvMh6Ep+smWy67HRl4cbWXjeC7M4lP4f/o26MHf4D/oG2CrvhB2yperCZ6S
H/X7ausH6o+YrdNnxOv6z9Xf5UnWJLlH3cNTkI83M++vXyE/p96g/qTmQU7z
TeZf6s/I0/Pu6kF+PQrzEubt9OPlZ9Xr1G/V7PjCbKp6SNYW+/Tl0VP+pvqj
rCG2xWthl3yFmgpPy495T3X0L8b7MxuOkfwPfi9u5QP4Sn2V+L08Be1lE3hu
zOa9cNxr1ZW/FK8bnyluQ0mcMLvZbJDZ8fjbcDtKoYN8ojwP5vDHcdLzt8gH
y07wt3AHXpCtklXFd7w0Osom8byYy5+I52U/8UbYzU95vXqyl/lJ/jZG8b38
PjTnA/lqfTV8z+fxs/pHUYZ34pP1+eJ363PgS/k09bCsHXrHa/Of9ZfUxup2
tUh8b77LPeYr9amRgT8TZ11fJZ7hp/2d9fWvxPtWT3l+vZoJWc1H8NH6P81T
8Zbq77wk8vMW5i/q18jPqzeqP6t5sdlsvnpO9ljcyTiLKCvvrE6R5cc8Pp0f
0bdHHz6C/6JvEr+Pn/F3NpC9yk/zd3AnyqGLfKq8AObzJ3HW8w3lr8nO8Hdx
F8rjnNl5XMBFXMJlNPL8kDjznnkPd6MCrpg1Nhsa94m/j3tQEV3l0+QFsYA/
hauebyIfFp8J/wD34iXZ17Lq+IFXQjfZdF4IC/nT8d5kv/Km+INf83pN497z
C/xDjOF/8fvjPPFBfK2+Bn7kC/j52DWozLvzGfrCcdZiD+Ar+Qz1qCyd77KD
up9XiH0UZyU+N/1v8stqM3WHWhS5zfear9Knib3E+8Ze1FeNZ3hi3kw/PO6A
epFvUDPjI/1Y9W+zB+J96kuhpXywuk52E36JnRZ3S75QvSDrGbs2djifqS+C
RXwmP6bviL7xHfItsVPwJ0+FW2VvxF3Rf4z78bJsvaxmnF1+Q+x72SxeFIv5
s0gd+0X+Znwe+k/wAKqgR+xGeTEs4c8hTewc+VuyK/pP8SCqoqd8trw4lvLn
kTZ2jvxt2VX9Z3gI1ZAOzc1GmF2L/Y+HcSPSo4XZO/H/ACP5I6gee1I+R1YC
y3i/OL+yrfw2/MUzxF2SvRt3HKP4OL5P/yBa8Vf4Bn2t+E74V/F96nvFmYsd
yufqU7BZnwvL5bPU47JO+EdfEf3jTqjb4nNRb1d3qsXiPJitVtPGDnKGnjU7
oq8Wc54x7rH+Pfmp2GvqN2oWZDMfbT5ev1+emj+k7uWlUYC3Nn9V/03cJbW2
+mvssrhzZovUS7LH4/zFbo+dqy+JFfwLfkLfGQPiLvLt+juwj2eKvSF7n6fB
GN4GNdFbPk9WCivjfwsyxy6RfyBLi7F8Av9H/zDa8tf4Rn0d/MYX88v6J+L7
4H34fH3p2Cux97FKPls9KeuCA/pKGCj/SN0RZ0xtru5SiyOPz2e/+Rp9urin
/Dnzo7HX4xmeJXaZ/sPYw/GcujH+VyC7+TjzifoD8f75I3H3eBm0MxuibpJd
VOvG+4nvJc6LZ7eYL9FfkfdG7djlfIG+DFbH/5q4t7KdvEWcKZ4V98VO4ekx
nrdHHWRDS7OP5RkwgXdA3djV8oWyslgT+xnZYyfIP5FlxETeEUNl3/KbsZUv
5Vf1fSKLvR37VF8u9m/sx9j18jnqKVlX/KuvjEGxO9RdcZfVO9Xdagnk9Tkc
MP9anz7ONX/e/Ji+ejzDc8Te0X8qPxP3RN0U5x85zCeZT9L/G2eKt4p7zsui
k9kw9TvZLdiiLxh3Ub5MvSZ7Mmb8Gb5IXx5r+Vx+Wt8Ng2Of8d36u+K98Zyx
32Sf8cyYzDvjddn3vB6283roK1vMK2Bd7GDkin0n/1yWBVN4F9SP/StfIquI
9bGPcF3sQPlIWVZM5ZP5QX1r/K0vF+/PZ9DVbLh+s7w+dvAGsadlS3klbIjd
gNyxP+WjZNkwjXdDQ+RBXuRDfhRAQRRCYbTyc6P9THZM593RKPa7fJmscuyr
uNOx32V7+N04yNfyDOjHj6s1kOJvL2L2PxnTtwc=
           "]]}, Annotation[#, "Charting`Private`Tag$422019#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"Feedforward solution\"", TraditionalForm], 
     PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1a\"", "\"u1a\"", "\"x1a\"", "\"\[Theta]dot1a\"", 
       "\"xdot1a\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.863703015891938*^9, 3.8637030366952906`*^9}, {
  3.8637035047167454`*^9, 3.863703509517211*^9}, {3.8637039271827555`*^9, 
  3.8637039558715878`*^9}},
 CellLabel->
  "Out[896]=",ExpressionUUID->"1c37904e-5791-4a73-81fd-17ec84cab135"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
BlclrQnSx/yqPWznp0LFkY+J6Q3ZZfOVhiMfozelPG54h4IjH9Nbs/rRs5EZ
ss/tZyz+/SFjEkM+xmNA7D3+j40hH7M/BMopVrMw5GNEdk5P3zdlY8jHnKnC
x68bj2PIx+yST9P/eH4KQ32oS9HlObuLZjHUh9J+HO/6azUFn9laZCQUwAUV
eP09VIWJ79eQuVd1ODdUpsU8db1Cw1Ev/KzPt6qglVSyJ/VIqutxlsI8hvzM
QC19uP7nTwz5GXGexWm85QNAfub+of0ra09VA9SbSjTu8V55/htAvSkvVYM0
P8wfoN7UGkfPs+Jy+RjyNkZSh4omXbIw5G3W3l317o1bFCD7Uyd4w1Vi8wDZ
n9onNhf77zhA/ub8viKzz5MtpL8R16h/vkdxlPQ312+exIPWckh/Ux7ZOSTo
O0P6mjOsZybmfyk48jXqPDcrL2rR8Mg65/J3VCYUWt8/k7mKjg8qXXI4c5sJ
aWJ/v+ecpuPI3yQ+bE1SbKDhyN9o89rwaOJUHHmbrd8VXkvI/gaZ+THHUszr
QeIL514YNgGQv2l5kSqxYSMHIH8T3TDwoXQTGyBv011Z33/z4yDpbarn1z6q
6Ce+ZzN+0eWPWaBAX/ytQigNR32tlPFy86Z/xPzzn8cReasgWjMyjyGPY8nz
gGVxkIMhj7MkoSKlfcc4hjzOBetPazyIeQx5nJJXj+5grSwMeRypwb7bGxXH
MCH/46dZIxQ4onjXIydjAkvm6Px4Mk2DoVKWbqJcC9ha322cFDoXdI1JKq0h
zj/Oh/kzgsS4oal8kbkRcT5SLPngvl+CB8ov9ygrnqbiJgGl5W6yvPB6SMsV
9/ZFDPmda5+9INdQNob8zqFubsbeulKA+mGB73v6Rh2ryX5Y0d37gmaZuQD1
w7L5ux/pP/9I9sPOLvQVHt2NY7m3em49Xy0Kr3YaaRQZvMZQTyxO//KV4A0Z
APXEKGoDc2WzXwDyQormu0bXLC0hvdCzzKVVsV8GSC+0NGbohWjqOOmFNstk
3Ai+N41JKlyL0YdSkGu3QV5JNBUfEi6QCiyUgrvsXlO1cRq+/DAPXzdgwjdi
7MHDx+l4UK/l5q5CJrSIcUluVKPjyA9Vyn2SDyXmD+SHTBdONe4WpuJWHa2X
qEd+AvO1a2PcG8eA5PLE+LearUAq/6VjrC6H9EN65t8SUx6NA+SDKj9/+2uj
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
/rxrxqLDm7kg8vz6vNssLshyQeT5dUNjBEI2USDy9udSXMRvvBbEkbf/8dnN
3uG7COnrA1fIxfAWLCF9vXurv2W+sjA+tH9xYN9KPtgu7FVRw+TH0X5NrVfD
vPlDdHJ/5tfstZMX6n8D5O+zHqo6hAzNk/7eRFLebPo0DSJ/L11xSWtcggaR
v1edvaZn3kWByN//W7ljarqGCpG37ziv22stKQCRt88wofb9vicEkbcPeb75
Ktcn4j7/z9cfOLTcW5zzGyBfny5fWbLfNJT09Z+5uJ5dPN4AkK9nKow8/L2t
DSBfP89j+vb7wU6AfP2rJ+knPvt3AOTrVRK+X/u2qoXcz7lX5l72D6+fAPl6
7nMZv1SyxzHk62l7pHq6MQ6GfP2hH9sfT+mPk55+okOhX+kKHSJPb3Zhgi4U
wQWRh5d7PDqRtEwEP3oG7r7WxAP/r6g7D4fqf/8HPnOMfcxoSrsivVVS2lF4
3Vr0TiL1btVeSEVSoWTLkpIWyZI2Ki1ICynJmTYiCWXPTBRRUlnH2u98f5f7
fPx3rjNnrpkzr3O/7vu6PK5neOLKOXFcAevfN5y5S7kFdbP+Pepx8kmHHi6g
f++w2r1qEVOv0L83bpoe8EbABfTvfzfudPzDPN/o2yWfJWvPLuMD+vZLfYaH
EmUqgL69/Lv9MRODONa3l1X0GK5qryTo2xVtWtZqVUkI+vaaaY+GZoyXEvTt
MSJnG/PMThp9e1TvxFMj73TS6Ns1ve7SrzlcQN9uoPFAIz+OB+jb42N+GO7c
KAfo1Seu2CZM3yhkfXr19EH7v1kLWZ9edL+qKtiWA+jTD3DKkz0jKECfrqKo
ql1fzgH06WPWFN9O9aEAffoHP5VnJ/pUAH26e6n+V9utfGjRTNrumS+CdOG0
qZUCJUCvHiQa0j1yaTVBrx7hV7RoeYCUoFfPi/vsFJZSTdCr23wQ++QnFrH5
nUmju+01q+rY/M7dVQq8vb+KafTqg8a6Zk6R/WHzO3lXzHLPbZCx+Z3/BH/v
tb7fweZ3zrhMqcaeamB9+qx7eSqem9sJ+vRzpb+mVzLPI/p0tfH99MNXPECf
vkLaF8JJpgB9etzX2BV9GT1svuZxQZRqdRNPjJ68p6tyfEGQshg9+fLHVpO2
jlUToycfC4a1VelC1o/v3vblYsYXAevH/R57L1T3VWXzOae/K8oXdyiw+ZxH
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
GFWRvUpZjN5yWPDHDZc6+GL0loJoYa3JNSHrK3/+d849jCtkfWX4/XStl8mq
bB7r90mnHyrM/F8e66yOrFKz41w2jzUjx77g69hW1mPeC7/8w/l4OOsxBXX3
HW9Ft7Ee82/As00jmzmAHtPu1TztbmaeQI8ZtpN/L9eXC+gxo93rcjQaOIAe
U/m2c5BrKzN/DHjMXHeD4FYPRUCPqZ/2pcZgryqgx9w0YXJS9lg+oMfUv7Ty
gG+fAqDH1LV7Ubv/bzdBjzmZHiG6W1RI0GPqdgR7vHnoSTDPdUb8o+fOJo8I
+sxY1fPyrkOLCfrMeVG6lpt+lxP0mVPHOR1xKq4m6DO1PE1Scpj6iT4zOugI
x3VUNZvvqrzXkx9WXsbmuy546nh3zdt8Nt/V70pPwwS6nkavWbXJbjf3RTub
99qi3DjXgHn+0WuufJa9s+BHC+szM4rHPI9o6iXoM/1Ct5XF1skB+sw7h3Qm
O9nxAH2mgsjoQWY6048N+Mmn7TueV4KqGP3kty1OzTr+AtZLprkk385sFLJe
suLvQb3ZYWpiud1SN395JWgzf0fmRCmLMe/18dB/tn85wWM9ZbGnb/kpozqC
nvJz857HMwJ6WU+ZF6l2zsmMAvSUbZVqL03nUoCe8r2mOGzpbw6gp3y/e0Le
+3AuoJ/02L6zKOGGMqCf9Lmseu6LJx/QT/qInRQuLlMB9JI9mUOzvnU1E/SS
yyrW7XfkXWC9pNKkS53nY0sIesmjmy03ipOrCHrJO3cmZ/aOkxL0km+sLmUc
KpUQ9JKHN16nap5WsnmxWgXaDYOXfSToJcOWxHRCSSuNXvKZ9tedH5n6iV4y
O+8GMTNuZ32k8qW4+F9ycoA+0nbOUa11j3iAvrF2g8qbbTlqYuuFQY4pGQqw
zOhcI2+1gPWM+p+bvU6WyljPaBf9MKH6MRfQM/q/89ZddYQC9IyfhIuUh0zh
AnrGX3RHnpEu0z8OeMUnzrNenR3BB/SK4yumvbnkqAroFXNHO8pJ/7vOekXP
K74Sx02VBL1ix4wci1OREoJe0dStdPaUFVKCXvH5md9rP5h00ugVJbvG/E4e
IqPRK87cbbE1/V8OoFc0yHitEniIB+gVVdLyLM89lgP0h5LumX1lWkLWGx5c
2X9yS6CQ9YZLHtK8kmN/WW+4qFVvrWUwBegNPfZZ/Whk5gn0hoOeO33xmEIB
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
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{350, 31, 360, 305, 514, 459, 414, 377, 349, 3265, 
            3272}}], 
           
           PolygonBox[{{26, 32, 288, 3268, 363, 334, 316, 289, 501, 446, 401, 
            364, 335}}], 
           
           PolygonBox[{{28, 27, 320, 518, 463, 418, 381, 354, 292, 504, 449, 
            404, 367, 338, 527, 472, 426, 390, 321, 519, 464, 3270, 3267, 339,
             322, 293, 505, 450, 405, 368, 340, 323, 294, 506, 451, 406, 369, 
            341, 324, 295}}], 
           PolygonBox[CompressedData["
1:eJwNyi1PgmEYhuFXGjQpBoSBkw8drwL+CC0WE1amFQpkjRL8AZq1YSDoGJK1
S9NCgDllgGjWeYRzx3U/ezK1xlE9EgTBig6VUlK/Hp50paYSPo15r6pW3a/s
6EJp9wf72lfU/cIbZe05z5Sy37nLHrf4zQpPuMYRd9hlnl8s85IbnLLEAbf5
wz2G/NOziu5rbnLGltbtCR9UsJc8Vtx+Y8g75rhgWxn7k486UMw95K3Odap/
7psoiw==
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{26, 27, 337, 366, 403, 448, 503, 291, 319, 3264, 3262,
             318, 336, 365, 402, 447, 502, 290, 353, 380, 417, 462, 517, 
            317}}], 
           
           PolygonBox[{{28, 29, 300, 396, 432, 479, 534, 355, 382, 419, 465, 
            520, 326, 391, 427, 473, 528, 343, 371, 408, 453, 508, 299, 3266, 
            3263, 325, 342, 370, 407, 452, 507, 298, 297, 296}}], 
           
           PolygonBox[{{30, 31, 387, 423, 469, 524, 330, 394, 430, 477, 532, 
            348, 376, 413, 458, 513, 304, 399, 435, 482, 537, 359, 441, 488, 
            543, 386, 3269, 3271, 476, 531, 347, 439, 486, 541, 375, 412, 457,
             512, 303, 398, 434, 481, 536, 358, 385, 422, 468, 523, 329, 346, 
            374, 411, 456, 511, 
            302}}]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwt0Xecz3UcwPHL6BzXHXecU8kD2SOjJFGEKFlnZ8QZSbmLUlZlZVdmyN57
yyhHyl6hjIyS1aBlz3h+Hg9/PH+v7+fz+D0+j8fn/cmbnJqU8kBERESin9Af
GccbpLOxRWtwlXUMoxTnWUIfIv1vp7biDt/cP2+Uxuh+fUzz6WnmEGfdXTPq
dn1EG+tN0kiw/kyj9XvNrc/rf6wi3nqgRulubUe4wHcylljfB8IdOMh4OpHe
/latyTW+YjilucBS+vIa+TnDXHrQhMpc5EsG0T6cySEm8CYvUYbHycBhvuAt
XqYsBTjLPHrSlCphHhxhIp2pxZP8xTL60ZqCnGM+vWjGC1xiNYPpwIP8xCRS
eIXrfM0nPMXfLKc/bfifTYymEL+xgN7hPPPboa9yiw3ktDdCH9J9WpXLrCG7
vSGaWffoo/p6eCrdrLn0c82qP2gejdSjTCabdWqYo27Th7W23mA9Oaw/1Sy6
V8vxDysYQCb7uzSZu3zLGArzOwv5gObcZiMjqcYV1jKUjuEsjjGFt6nD0/zL
Sj6mLUX4g0V8SAuqE8VxptKFupSnaJhPuAMnmEZX6vEMxYjmZ6bzDvWpQPEw
d35hBu+SxLOUIIbYMN8wS+KID+8SZkdCeD9OMpNuNKAiJUnkV2bxHg2pxBP8
yWI+oiUvhvfkFLN5n0Y8R5oL3ANKyoM6
           "]]}, Annotation[#, "Charting`Private`Tag$422130#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{3268, 363, 334, 316, 289, 501, 446, 401, 364, 335, 26, 317,
            517, 462, 417, 380, 353, 290, 502, 447, 402, 365, 336, 318, 
           3262}], 
          
          LineBox[{3264, 319, 291, 503, 448, 403, 366, 337, 27, 320, 518, 463,
            418, 381, 354, 292, 504, 449, 404, 367, 338, 527, 472, 426, 390, 
           321, 519, 464, 3270}], 
          
          LineBox[{3267, 339, 322, 293, 505, 450, 405, 368, 340, 323, 294, 
           506, 451, 406, 369, 341, 324, 295, 28, 296, 297, 298, 507, 452, 
           407, 370, 342, 325, 3263}], 
          LineBox[CompressedData["
1:eJwV0TkvZmEYgOFDZSssCRJMENvYhvEfBq3G1tlKCltnqZAwtWU6S4MEiSWo
JLbS0piRIGEmTMxYWtt1ijvX87z5vpO852Q1ddS0RwRB0K+duCAosrxoV+Pq
VK3iI4PgjPMa0jdFOTvitPrUrGRnF1zSqIqV4dmv3NOEupTmd9dcVZ0S7D+5
oGFl2m+5qUpF2485o1zzP/brk/kPv3CDn/nEr2xhCi9ZymXm84HlHGM2/7KM
2yzkMytYwjfth/ewTzKH9+xWuvmGayowP7JeieZfLOEi8/ifI8oy33FLVYqx
n3BWA2oN7+R9lfJdB5pSjxpUrVj/OeWcBtWmVGdXXNH38H2EH9XZIX+oN/wO
9t9cV6OS7Ofh/Xz3DxNjQlo=
           "]], 
          
          LineBox[{3269, 386, 543, 488, 441, 359, 537, 482, 435, 399, 304, 
           513, 458, 413, 376, 348, 532, 477, 430, 394, 330, 524, 469, 423, 
           387, 31, 360, 305, 514, 459, 414, 377, 349, 3265}], 
          
          LineBox[{3272, 350, 533, 478, 431, 395, 331, 525, 470, 424, 388, 
           361, 306, 515, 460, 415, 378, 351, 332, 307, 308, 309, 310, 311, 
           312, 313, 314, 516, 461, 416, 379, 352, 333, 526, 471, 425, 389, 
           362, 538, 483, 436, 400, 547, 492, 445, 555, 500, 564, 315}]}, 
         Annotation[#, "Charting`Private`Tag$422130#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
dB7vvRtdM2bCtf8BPpGRKA==
           "]]}, Annotation[#, "Charting`Private`Tag$422130#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1nf8lmMcxfEn7ayEshOZLQlJaWjY2hEySmYpkUhTRUoDWW0RGZU9isos
lEqyZ2lIaGmJvM8f5/U95/O97l/3c93XqFLHbq1uLlIoFPYpVig0L14oVC9V
KNQtWSjcXQKk6dhAakE19OrpDcKL0AzsbroUvw6fgVWlb7CWdBJ+Jj4Y24Nm
5m9hI7HlcmsahF2GXY/NlKvRPHmRfAB9qz9Onsb/pdc1f19eLVejVvo15fr8
EL01/Ba+KP8i/w5fjEqW9vfkF/PO6ijsROxL47bJxegcuY38Gf+dfl35KPXA
VKytOtjzl/M34MfKLxr/l7xLbiZXl9+VP5Nryweq+6qH5W96drz6LLbBuN38
XnQz/626Bq9OrY07WW7A36NXjF6S58jF6SX9QfJo/iu9tjQE64DdmL5cg77H
2lAtvCF+L1acXsbuobZ0il4jvaF4CXoFu5euwG/CX8ZOoh+wdnQqfhZ+H1aS
XsUGYw9gX8vtaCh2JdYFe0WuST9iE7DnsI1yN7oYOw1rjA2TS+Xd5LlyCXpN
f4j8IP9NxtNi+Xv56LyD/lVyV/5VvQ38v/zJ/Hv8Yv50c19eLasejv3kmYnq
81gNbFPWubo3dqHaXf6OX6vfUK6hHqoej7VXL/F8bb4JXkkebvxa+W+5sVw6
cyjPy3vIJdVSWQfY65l39aGsa+O288XpEn6J+gNeOXNh3NVZF5kDvVr0MzYJ
ewHbLN9C7bHTsabY/XIZegMbTh3xbvjr2Cn0S/Yp1cGb4SOwPelN7H7qhHfH
38BOpRXZl3QGfjY+EtuL3sr6wMZg3+UdaAR2DXYL9qZ8Gq3EJmPTsS1yD7oc
q5t9ho2S9876kd/NHNEs/aHyw/z3epfSSKwz1gN7S65N78tL5Ar0q/4T8gz+
75xL5nof+dasf/U3/CQ6DD9B7mB8PfVc7ChstHG/yVvlffjX+Pf4WvmWaums
H6yFOtuz9/GP4FXkH4zfIZfI35Mvk5fyP+rXk49Ry6tHY+3UUZ6/Nu+GHyfP
Mn6j/F/WKf8Bv5Q/iFYZO0WeyW/Vuy17UF4n16Qr9M+Uz+Mf0NuXXpffl8vQ
2/rD5Ef5HzP3NBq7DrsNmy3XodXZq1QfPx9/ECtL72AP0PV4z/w97Iycr9lz
1AC/AH8I24/mYA9m3VLD7CW9MXg5mos9RDfgt+PvYHWzb7JOqRF+Ef4wtn/O
/6xh7DHsJ7kDjcFuxHphc+R6+W7YkznTsW1yT+qEnYU1xx6RD8iekD+Q96R3
s97lx/mf9XbyJekK/vOcDznXs7Z8n8pZi8bfpN6BzTVmE7+bP5P/kP+cr2Ps
wep+6hFYG3Wd557iX8r6k7fnDlT3zW9Vb8+ZyP+u30g+WT1cPRG7VL3G842z
7nLWyY8av07elvso+5b/kN+L3jN2hDyW/0XvSlom/5x1lnnQ7yLfyc/Tq0+/
Y1Oxl7Edci/qjDXBWmKPyeWz17BHqSveO/OHNaD1WcvUFG+FP45VyBrGHss6
y9rJN893o2bGtTZurDEHZe6wx+lm/K78Bqwh/ZH5prMzj/g47GD6CBuJjcNW
yFfRWKwb1gd7X26UcfIy+RD6U/9p+RV+p15R81g235L/SV2ffU5djDsn9zs/
PnPDb8/fyHnHf8Sfkjsie0utkDlS53tuFD8eryqvNP4fuVT2pXy1/AX/S9ZL
7pDs7ZwL2MXqOM935/vix8sfGL9ZLuSO5eerX+T+oXL6FeW/PPOM+ir2jzF3
5m6Q/8g7Ulf9c3Pe8BP0DqUF2GhsQs5LuSONx27B+mEfyo1zf+Z70Hl5P3wi
dhh9nLMAm5hzKXuMJmA9sP7YR3KT/Dvy8py1ueP1p8mv8bv0eucOkv+UT6Vu
+ufn7uMnZT3xO7IH+Fn8/JzH2bN+90HyJzlf1ElYNWy1cbvk0jm3sl/k5fwK
/fo569WD1WPzb6gTPX8rPwA/Id/O+C1ykdxvctP8Tv5L/TPyfwV1f/VIbJNn
n839jf1rXDF8v6zb3JP5Jvhp1N24C+T2/GS9I+jTnH3YZGxN9hhNwm7DBmIL
5Gb57vkedGH2P/4EVpEWYmOwJ7C18rU0GeuJ3Y19LJ9Nn8hfyUfkvtV/Tn6D
/0+vuPctl32Se1ndgNfOWLxK7lbjL1IvwypjU7IP5Z1yk8yBPFtekG+XMyzn
Ts687H11kecf5qfg1eXfjP9XLpM7Qr5O/pJfqd8gZ1z2lnpcfpdnb1cHYZ8Y
9ze/B52TuVO/xivmbjfueflNfrdeX/pV3pi7k27Vby5fzj+pV4nelj+Wy9Jn
+o/IT/Lr9K6nKVgvbDD2qXwubc23oRZ4B/wp7ChanLuG7sCH4Aux82hbvgW1
zB2CT8WOpiU5/+lO/B58EXY+bc/vpVb4lfjTWOXct1njuUNob3NzSM5LdWnO
X/4p/HfjbqCpWG/s3vwu+QLakd9CrfGr8GewY3Kn5QzMe+dd8hy1MeZqY6bp
H5u7ImcK3YUPxRdjF+ZuDKO2eEf8Wey4nGk547Gp2Hr5RpqG9cHuw5bIF+Us
xF7A3sIK1A/rg7XDOsnPycfTHPnTnHG0PPeC/DT/h95N9JX8q1wl76DfVx7G
L8334ovmvs9eUb/Bj6QDzF0leZfx09VZWE2siFpC3T/PqP09typ7HD9LrpP1
plbNflD7ev5i/hr8GPl54/+U/5Gb5pyR58oLcwbk7+bcUg/NWeLZseozuYuM
+4/fk7rwX6urcm9kHozrJw/nP9drQYvkb+VKOXP0Z8iz+T1ogH4/7BKss/yC
fGLmKXuE+uP348uwlvl3w6g9fi0+HauSd8j3oQH4CPwLrBXtxmZib2NFaSC2
Wt6cszHz6/dVy15TBxj7P5fKIEs=
           "]]}, Annotation[#, "Charting`Private`Tag$422130#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV00dwTmEYhuETNU2PtrRBEEK0YK3XxA5BRI0ULVEXyjBj9JboZgwzBgsW
JKKXGSV6r6OXWOrd9S3uvM/9vN9Jzvn/kxbZBRn5MVEUpfgxKi6KriREUS3k
xStxVLcKn3UdsEmXjOe6LFTqaiNfF4My3Wp80aWiRNcGL3SjcVUXiwJdNZTr
khKjaIjuCO+HNbqvvCNKeVv0dmYhfy+/tG/Jx/KLvEg+JI+QR8ol8l95jHPX
5DgU8hy7nXJ1ubs8Q95mPuLzzaP8kHnMdY3NoeF5Q29faO7nB83+fJi5gu82
P/Gl5pnwDOZa13+TO2E932w/xdzD28l95EXyB3mhfFx+5ZpWcrZ8KTwHRvFS
/k8ea39djsc0XgPp9jP5Y7nCvgkfxsv4AKzTfedp2MJT8FqXjRu6BEzX1cRx
3XqMQw5u2iVihl0tnNBtwA9dZ2zVtccbXWt/d5zucrhnjNfd4nUwk9dGD2dm
8SfySfumPIOX84HI4Cv5Z3mj/U+5S/h+eK7d3vD+yX3lxXKV/Na5ZJ7Dr/Bi
+bCcJWeFz13eY0bmcvNC+GzMCa67LdfFmnBf4Z7NXXyfGct7mkV8u/mULzDL
+GHzlOubmZnh/Q7vi/008wAfJGfKq+Qv8jL5bHiPXPPL7Bp+pz41vOt2S/hH
+Z19Gz6eV/LRmKi7w+uhiMfhtK4Ev3XdsEPXEe91k3BXVx/Funic0ZViMqYg
F1ORh3zcc7YBZjubgLO6zSjAfX1DzNEn4pxuC/7oumOnrhM+6ArxQNcIc3V1
cF7X3DMN11Xwwdiq+8vTsYunoUrXNnwvuqvh/zZ8nrqHPAnzeF30cqaYP5Mv
2F/i/wFOYaMn
           "]], 
          LineBox[CompressedData["
1:eJwV1Xe4lnMcx/GnhYRKFO3TNjIbRntrGNFGKVRaNEjjNE+dloZyUSot7T1c
NCktox3tqdAOTcnr+8fn+n7e79/vfs5zP/c4Sc071G2fJpFIlEybSGy+I5H4
PGMicTNTIvGMTLo9kSghNfkUfFo/Zf1h3BL/jN+QjtxefK/0wJllPZfTvnrc
CvyCjOcS3LPcZFxSTnOdZB+XXXpyWWQDN0HS2F+Gn8KVkjNcZ9nP5ZBkLqts
5CZKWvvL8lO50nKW6yIHuPukF3e3bOK+kPflIH+/9OazyWZuknwgh/ic0oe/
R37gJks6f6ccP417Ss5xXeUwl0v6cvfKj1wue+tzK/GLMoVLz5XnvsRPSy08
AJ/Rz1svjlvhLbi5fMgdwbmlH84uZe3pig/pP1nPjRvgVXFN9Ln6S/or+nD9
kj7Vvgy4Ap6O2+rT43rrtfWB+hfmWdzXXIkvOOYRvbX+qbnVWldzMZ5ntsBN
zbFxPmYac4i53vza7Ob4o3oeGYn72/+2OQnPMnPgcuaHeIJ5GCebX8c95tg8
ekN9NV9X6uER+LI+zfotuCKegZ+Vi1x3OcbllRTuPikf3wUf0bdYz4sb4TW4
kz5Pf1mvr4/Ur+ip+to4L/tv1Svpo82Z1tqZM3AZvY6eGs+MeQ73M1fhJeZf
jn3UfAd/Zm6L62kuwfPNN3Ezc1xcEzOtOdTcYH5j9nD8cT2fDLC3JTc57lm9
gt5dP6pvtS8fboy/jesuDfAofFWfbv02XDl+97h/5G/uMa4Ntx2/JT2533B+
GYhzyjZuhiTLCT5JUvlcsp2bKRl9ThV+dlxP+Yd7nGvL7YhrLr24k7iADMK5
pWKcIz6m77CeHzfB3+HO+ny9nt5Q/ziebfMaHmSuw1+Zsxx3u1kVjzHnWG8f
1wnPiWcNP28OinePeR73N1fjpeYlxz9htsNjzZ3Wu5lLcct4z8W7UU8nw/SN
8b5wzO9mQRlsTyt+StzneiW9p35c32lfEn4Vr437Sxrh0fi6Ptt6JlwNz41r
Kpe5J7n23K74bOnD/YELxfOF88oubo70lT/5wnHv8PlkNzdX7vA51eNZjd9a
rnD95BRXJM6Hyy+V7UvGv8V10r/RF5u/2FvAfA2vi3tK5nF3cjXiHo7zlatc
fznNFZWPuCT5lZsvKXKGLybD+QKyh1sgA2SgnLX2gIywVlD2cgvlLn/rOX5B
fE+5xqXKOe7BeK9whWQfV9De17nv456RRVxmria3EFeR61wJrgO3G7eO+4k7
jx+SUbhw7LWnFz6h77deCDfF6+MaSmM8Bv+rL7aeBdfCi3CHuC/1qvoL+uB4
l+op+po4xv6S+rv6uPidrXU3l8V5xvsi3v3m+Hi3menjNzU3mcvj8xx/QX84
vm88G3Ee5tR4Bs0iuKrZG080T+Le5nJ8wLGF9Wb6Br6LvkBvrDfRP9Fv6Evs
y4prx72Aq8X/MDwEX9RvWC+F38O/4jYyhLuIi8e7EheVg9xSudveOvFe5KrL
f9xQ+Yt7JJ5drpgc4pZJNvufj2eUqyE3udJcR25P/P+SFngCzhD3lb7ZXGEO
s/d/o8M5Jw==
           "]]}, Annotation[#, "Charting`Private`Tag$422130#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"Test on dynamics\"", TraditionalForm], 
     PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1b\"", "\"u1b\"", "\"x1b\"", "\"\[Theta]dot1b\"", 
       "\"xdot1b\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.863703015891938*^9, 3.8637030366952906`*^9}, {
  3.8637035047167454`*^9, 3.863703509517211*^9}, {3.8637039271827555`*^9, 
  3.8637039560115433`*^9}},
 CellLabel->
  "Out[897]=",ExpressionUUID->"f870b1e4-92fb-4368-9448-b0a24b797972"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
XD/TeZhE3tL24cJUUohPIm+puXpOz2f6PLdx2jkv5/EAiD4x5loQIwSRp9wj
5G4jZ0tQzMQzjivlROCzlx+O6FXS91/IklNezYJrFf0knbQZ8LyKlm31ajbM
cuepU+8F4RmD97pZ6hx4TqZVY4VQH0De8pKBrkLY2ylvuXHvTYlEdTb2lkbi
C6bdbk/E3tIh/1u+jyufRN6ySUlr7r5BBkTeUkvo1Kq105kQecrXSk7MWBWC
0sq0czpWLQwPir90sJhHUHfGDh+XmJCAD3Plfx8yp/c1ZljXBiE2/NzEG5tr
z4Cv5hpXsKZxYMPCtcsmY/pBtPePnzlnOdDEouvxy7o+gDxm6ZDm09XvWdhj
Pv22RUJfjL5f//OXxWdCDty6wiORv2RLiml+msMjkb+8tKgkbrMEEyJvSS3N
Lsml5+9l55JeLTnLgoevGNoZxzDgFrt1Ea7rOFBFSXehzAYuQP6y5qGOt7EF
gf2lukXjy6LJROwvu2RPyEwq8knkLz9dX5W1XIv+/fzzlqLcH7OUHAiquW7s
iewrFpQeviL9l55Pv2ofCeA6cWBjs2JajicXIH/Z9up5npw3gf2l/dOhxG4N
Pon85YlBuaj3QUIQectFTZllKuYE9b036ZCjDgt+59zoaBJkQGL53Jji2RyY
UlFX+ce+DyB/+f5Tbuv+c1P+cl6lPKFH70PIX95S81HJkmdC5C33tpuFmkoR
lNlYnFTSAAs2Hde46nqIAavywrX/BnHgrPjuENXDfQD5y/A1o39zFxOQ0VJy
b6CvAuzQmQh3tOKRyF9a8SS0BPlCEHnLlcY7u9bQx0NZF7L3H2ZB7gkJf53L
DPjbKvHvEWMOrDfSsBjbSe8T//zlESk/ox1LCYi85bYDbjpZm/gk8pY1a3we
WS9mwpK1h3/vfSIMHxzdbjy6nqCiukqcnem9+k02z3M8igFtAxk//PdzIFU1
1JxTzAXIY5Y3HFKat4PAHvPEGt0bu9SeYI/pXfEhfUMlD3vLguAvBb2OBDVy
/TDZtIkFG60mFX3tGJC32u1LvBZ9fps990zO4QLkMc8nvflm1DHlMS2I3ass
ttLXvwcLzv0yGQALHVQ2hg0KwUFFI/PCKCkYfLy7Xe8XG+qUv5A241YCm9jg
0LQ8HvaZ13tvNvIUmBB5zJaNt6OUdhHUugoJp+GbLKjjLDzvxSMGzN/ettDS
igOV1p3ry1pD75f/fOaVBcpJj5wJ7DP9R+qPpzCTsM/86FAU4kTvlwuurZir
e0YYbixLuie0naCGHURz1z5jQVFlzbun6Xmdu8NWmXCk758Rutt30fsr8poq
ojVnw+j9HnnN+cHVFq0r+NhjrhbhtB1z45N7aoK2jvb0g0UCPCurOUz4x0dn
Tdtpen661MDfbkhA5C8/zLF9qke/v0jx8Ldi+1jQXVAnf3YIAyZ+Lnt+Wp8D
R+abnjznwwXIZ1od2CyTPo/APnN9VPjow/V8EvlMxxMrx+y0mTB5T43P5S8s
KKSneC+Ovh74Jf8OvOnFgR8afu1YRu+zGxUH9Cd9pWDAK6vPrfT+iHzm+uTI
r/lbCQp7TAVl6o8TH/tLO0Ndwzcy9HVy/P1cb1f6fIxLzllCn+/Zz7ZNv3mZ
BQ/lRQSup+9H4VWyv7du5MAZajovS+l9FXnMzv2n3T3sCewxlfbOMyihX+9X
l75b7dks2Kke/UqVPr5pjOjib7s48FRpVIZmIBcc9bFdKb5PCrpGW1bW7iUg
8pgxYjMWN7jzSRG90bK7m4Shul7W7Y/063m8Y2BXaSALWir7LrgSyYDy3/3X
71/DgROvsk8GbeaC1gvv9y9SqQGvZ3Y8zNrGJ9X79h4VLu4HZxyUAmfTc8es
/OvGA8el4MUdnU7HthDYZ54yj96zk2GPPeaNvNPK1+j9EvnL1kYTuygrPvaW
dfop9tLzmNDj/aUDhofp65vk6M3T9PxSOkG+cIhhwemhSmXBTxhQ8HdmwJrN
HEgOFiVUmnIB8pjzT1d+GnEnsMd0uVfkNSKSBKpn2orN1WkEAv//jwOfzbw3
YL1MFKLHZRJlf3zDpNBj6sTNmaZpt1j4+dJPuyWXPOfir8+76pHjFCqI/7/E
Tfdz118Ooeepnc+D1aTuS+Kv9/ig9PJsxVf8/Ny8p5rufA5+nuURFrpxUhp/
P2XntG92oRL4+YW1jwYDT019v/8DPE7G9w==
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{701, 698, 790, 716, 978, 913, 857, 808, 770, 3701, 
            3709}}], 
           
           PolygonBox[{{691, 702, 690, 3707, 842, 793, 753, 727, 693, 964, 
            899, 843, 794, 754}}], 
           
           PolygonBox[{{695, 692, 731, 989, 924, 868, 819, 782, 700, 967, 902,
             846, 797, 758, 1000, 935, 879, 831, 732, 990, 925, 869, 820, 
            3705, 3704, 759, 733, 704, 968, 903, 847, 798, 760, 734, 991, 926,
             870, 821, 783, 705, 969, 904, 848, 799, 761, 735, 992, 927, 871, 
            822, 784, 706, 970, 905, 849, 800, 762, 736}}], 
           
           PolygonBox[{{697, 696, 908, 852, 803, 1012, 947, 890, 765, 1002, 
            937, 881, 833, 1017, 952, 895, 739, 994, 929, 873, 1022, 957, 824,
             1015, 950, 1031, 893, 1026, 961, 1034, 786, 1008, 943, 1030, 886,
             1024, 959, 1033, 838, 1019, 954, 1032, 897, 1027, 962, 1035, 712,
             974, 909, 1029, 853, 1021, 956, 804, 1013, 948, 891, 1025, 960, 
            766, 1003, 938, 882, 1023, 958, 834, 1018, 953, 896, 740, 995, 
            930, 874, 825}}]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{691, 692, 757, 796, 845, 901, 966, 699, 730, 756, 
            3703, 3699, 729, 755, 795, 844, 900, 965, 694, 781, 818, 867, 923,
             988, 728}}], 
           
           PolygonBox[{{695, 696, 973, 711, 837, 885, 942, 1007, 785, 823, 
            872, 928, 993, 738, 832, 880, 936, 1001, 764, 802, 851, 907, 972, 
            710, 3702, 3700, 737, 763, 801, 850, 906, 971, 709, 708, 707}}], 
           
           PolygonBox[{{697, 698, 828, 876, 932, 997, 742, 835, 883, 940, 
            1005, 769, 807, 856, 912, 977, 715, 840, 888, 945, 1010, 789, 894,
             951, 1016, 827, 3706, 3708, 939, 1004, 768, 892, 949, 1014, 806, 
            855, 911, 976, 714, 839, 887, 944, 1009, 788, 826, 875, 931, 996, 
            741, 767, 805, 854, 910, 975, 713, 787}}], 
           PolygonBox[CompressedData["
1:eJwV0ClTQlEYBuCjXHc7VqMLLj9AE4VKFNzoYqFY+Qnu2rVRrIxjMIs7bt0d
dIZq8Dnhmfe978yd+eaMltbz5e4QQhdFTn2c0WQ4CeE8FUIiq7LOHzk2OKHD
CPOUOeaN3/i/nKXEIS/c238Y0mdY5YBn7uxtBvVpVtjniVt7iwF9imX2eOTG
/k2/nmGJXR64tn/Rp0+yyA5Nruyf9OoTFNmON3Jp/6BHH6fAVryRhv2dRB9j
gc14Ixf2tJxjjSNe45vYs7JCjTYp/gEEhTRW
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1ne8V3Mcx/EbUdpDg4QG2ntQIhq0U2knpaF521O7tPfee6KlSUYoVEZI
GUWLaGiqNHh+Hv543ff79fn+fr97zznfc343R8vEOp2TJCQkbLgjISHykh+N
cFTvYLZfH6NX1dfrj6Muz8cn6VnRU/9J7jRvpn+sz5fV5Ah5Wq6Vxa1nlH35
xPh9sqs8KJfJNdZflO/y2bKCHCJ/l2/I7taflEv4VJlP9pW/yG+ttdL36HUw
Sj8nRcJl2RjH9I4G3+hj9Wr6Bv0J1OP5+WT9PnzES+Bes37xOfE38B4oZ7aU
58d3/E5c0ZvguD4ujgMlkRR/mzfFCX086qMUMvmc/uZ34k3eE3fhKm+Gk/oE
NEABr51idj8+5qWR2ew1nhRv8V54ymwZL4AD/G5c01/Cb/pEVPeajbwMGvKC
fKqeDZ/wl/gnevW43jwLH6DfhW76obiecRz6Dn2OrCiHylNxLLK39aflcj5N
FpT95K9ylfzeemu5ly+UdeVo+ZdcL5NZv643x/jYA7yT/JYvib3Ha8i3+QxZ
Vg6UJ2L/WiukT9MfQC/9Z7nLvLm+S68R151n5QP1u7EuzjV/T6+EPrw8X6EX
wkGeHP/oL+OUPhmNUdjrpptlx25eBveZDeLJ4ph4X9yDG7wF/tCnoAnKIgVS
4qa1lvhTn4qmse+RCrfMX8FpfVrcb7EfkRq3zVvhjD49rmPsB6RBWqRDemSI
+zD2duzB2Ef41/ta46w+I85TXL+49oibqI21c+pMvBznBfebDzZPjg28X5xP
JDFva/aXPgstUMRshtmD+JQ/g2xmQ/g92Mj7x9xsJS+MQ3EO49ebvcrP67NR
k2/iT8Z54kX5TP0h9NYPy8/i79R36zXxun5GPmv+gD5UnyRTyO7yB7k89pP1
hvJ9PldWlsPkH3GPxf1m/Vm5ik+XRWR/eVSujs+x3kbu44tkPTlGno97N54V
ejv9gt5Z/y7uH72WvlkvF9eXF+Oz9IfxeZxD/qleCxV4dj5MT4lNvBH/QH8O
A3gFvlovih/jXMezyKw9v6jPRSsUN5ttlgN7eEU8aDacp8JmPjDOWTybzDuY
XdLnxf2LSnjIfIR5amzhg+Lvi2ePeUezy/r8OC+oHJ8f78HDyIGcyIXceATJ
vK+T913RF6AtnovXm79ungZb+WA8GvekeXyJ/a0vxKsoYTbHLCf28ufjd5mN
5GmxjQ+J443vHV4MP/HH4h41S+RX9UWozbfwp9COl+Rz9VzYx1vyz/TaqBLH
w0fp6bCdN+Yf6s/HMzLOGX9DL47X9GPy5zhO/Qt9sXxRjpUXZJ54Nuhd9Any
Gk+UB/hSuZi/ILfymfJpOUielGvimlsvJefx3PiCV41zbjaap8c7fBjyIqV5
V7Pr+hJ0QGmz+WaP4EteLa6X2RieAe/y4ciHVObdzP7Rl6IjHjdbYPYovuLV
41qbjeUZsYOPiP1h9iYvgcM8P1Kbdec39GWow7fx8ujEn+AL9cfwNa8R+8Js
HL8X7/EmfGdcn3gWxH7ib+klcST2DP9Sr48CPA3vod/Uu8T3VTwf9Lr6dn2W
fEYOlr/JztbK6Iv0KTKP7COPyJVyv/VX5Od8gXxBjpRn5TpZM/aeHM8ny0yy
h/xRrojnkfWm8iM+T1aVw+Wf8Tmxv/W1eqm4//Xj8hfzdvpXegMU5Gl5T/2W
vgL1+DvxXEQiLxv7Sc+Lb+K5hDxmE3hmfMBHoRDSmfcyu62vjPMU9woKI721
3tb+1Veha+xRFEFRZLDex3r807ladIvrGvvPfKJZFnzIR6OK2TpeGr/y9vxr
vSHG6ReT/P//azFr/wHKHEFj
           "]]}, Annotation[#, "Charting`Private`Tag$422242#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{3707, 842, 793, 753, 727, 693, 964, 899, 843, 794, 754, 
           691, 728, 988, 923, 867, 818, 781, 694, 965, 900, 844, 795, 755, 
           729, 3699}], 
          
          LineBox[{3703, 756, 730, 699, 966, 901, 845, 796, 757, 692, 731, 
           989, 924, 868, 819, 782, 700, 967, 902, 846, 797, 758, 1000, 935, 
           879, 831, 732, 990, 925, 869, 820, 3705}], 
          
          LineBox[{3704, 759, 733, 704, 968, 903, 847, 798, 760, 734, 991, 
           926, 870, 821, 783, 705, 969, 904, 848, 799, 761, 735, 992, 927, 
           871, 822, 784, 706, 970, 905, 849, 800, 762, 736, 695, 707, 708, 
           709, 971, 906, 850, 801, 763, 737, 3700}], 
          LineBox[CompressedData["
1:eJwV0ccuIGEAwPFPXyQS7AvsLl5BOSHB3VruTkqiJUiwyll7BeWiJEiwWbLq
QYv2CtpBSZBYou36zeGX/3xtZjLzpbqxvCEmhNBNW1oIW7Eh7MeF0M93vvJm
7lInaKKQU3MnOkINuaRzywytlLBt34H+1gGt4BsPzNPBu7UrnaSZIp6jM/Rw
Zv1UR6nlHyvk8cQvkuJD+KmxuqEpmqF3zJJo3KZB1zRZS/WVZT4Z92mcbmqq
7njuoetBEox/RO/KH7L4ywKdxFhfj97NmWudooX/rFLMC0v0cm7fmY5RR360
Zi5Td/VIh6gkO7qPuQvOXY9TTwGfuWeOdsrYs+9Yh6kih0cW6Yq+ATdMR2P/
/AOPHUqq
           "]], 
          
          LineBox[{3706, 827, 1016, 951, 894, 789, 1010, 945, 888, 840, 715, 
           977, 912, 856, 807, 769, 1005, 940, 883, 835, 742, 997, 932, 876, 
           828, 698, 790, 716, 978, 913, 857, 808, 770, 3701}], 
          LineBox[CompressedData["
1:eJwV0Dkzg1EUBuBDYo3R0qa08wOoNFolXyzpRaNRaPwEOz2dRmtUajsh9GJn
Rqvw3OKZ8847c2bOvcXy4mSlISIyVjojThojcrmILw5ZYpy6/tncZ4FRujjT
35hrTNFDnhf9ObfyOtP00sSr/oI7eYOMPpp5019SlTcp0U8L7/or7uUtZhig
lQ/9NQ/yNrMM0sZnupGavMMcQ7Snd6YbeZR3mWeYAt/pRp7kPcqM0MGPvm4e
UGGMbn45YpkJ/jhmNf1LPuI07ZtV+/9wJjQe
           "]]}, Annotation[#, "Charting`Private`Tag$422242#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV13fcjmUYxvFHVpEimVmvlWySvfcer6xCZVZmhSbtYbQQokHbKBmZ2WXv
bFnZm8xS6nv+8fucx++47scz7uu6kdSlX3LfFIlEomnKRCJDqkSif5pE4sfU
icQ9mM5/57nwNn+cz5WvyV2QKW0i0Ypf1V82y+FzfSF9d7mG/mNzt66crq55
u9lU19DcZf2kfB+q89HWk8zHeEvzQ+vr5PSoyAdZz2a2403MdPwfuSrq8m/5
feYT/A6vfcqcocuF1Pp68d30+8zceEf/BJ8nX5e74hq/wh/ARF6Tj5f3yPWw
m4/Eet3teFaXHnfqnuYz5dyYwZ9ELWTEM9Zm6fNgJu+F2pig36urjz18FDJh
gH62Li9m8d6Yr/uLd8N1Xgef6H7nDbCXj8YGXQY8F7837tIN5D/J+TCb7+d5
MJT34Qvkv+Xucb3fKjneS3/VLI9J+rr8U3mf3BAZXNcs3l9/yiwa91z3kbX8
ZhfeKtz6xrgnqMSft57dbM+bmhn4v3I11OPf8aLmk7ytmdnrB8lz9KV5kpnG
rB/fydoBMy+GxW+v7yT31S80b+h6ILO+dXxH/TWzAr6Ie8o/k/fLjbCPn+bF
MIaP4ZvkO/ECvwN3657lc+N7Yg7vh591//CeuMHr43PdAd4Y+/lYZMFz+nm6
Apgb5w4NkBXPW5uvL4h5sY/RENnwgrUFccYwP/YcGmGi/qCuCQ7wcciOF/UL
dYWxIPYhFun+jfMc54c3xiTdId4UB+PcYrMuI16M/Y0cupf4z/K9WMgP8nwY
zgfwxfLNOFdxT3kTfKH7gzfDIX6GF8dYPp5vkTPhpXgP96lDvK98M54LmCwX
0/eSc7p+sLlIV0ZXxExrNojPZe2QmRTPBN2IOG9mZ97cHGh9ifyfvkLsr7iX
5oO6xuZN69fjWYPa/Mv43cwe/MF4bln/Uj6sf4A3j/0QM76ftbNmCYzTT+Bb
5bswOJ6V+C/OB6bE89X6EHlxPLOwiP/B8+NdPogvlRPoFa/lzfAVP8Jb4HCc
f+TCy/olcW6wOPYnmuNr/VFdSxyJ84vceEW/NH5XLIn9iBbIg1etLdMXx9LY
j2iJvMiHJORHARTEa65f7toSWBZ7FK3wjf6YrhWOxjlDIbyuX6ErieWxR5GM
b/XHdck4FmcHhfGG/hddKayIPYhluhTorUugte47fiIyjvNzvCQ+5hP5b3Jm
DIlnXLzOvavJp8Z+tv6m/Gs8Y3CrtYbxvvrDZgG8px/Ml8u3oA/P4ro28Vnk
v+L5hjq6r+LPNHvyNrHHvG6yfFJfPjzOlNlC18g8Yf28XAo1+fh4NphdebI5
yfo2+W5U5i9bz2k+FN9JTiHXkqfFfZN7y0W85i1zZZwV3KZvFN9Rf8QsiPf1
Q/gKOWU8N/ktaKObwk9Fxsk4x9iuy4JX4uzE3tW9zVfJZbEy9iLaoijesbZa
fz9Wxb5DO0zVn9a1xak4VyiGofo1unJYHXsR7TFNf0bXDqfjHKA4hunXxnnE
mtiL6IASGG5tXfzeWBv7Dr/oUqGfLiUe0n3Pz8rtcSbODEpihH59PCuwLvYh
ftWlRn9dKjys+4GfkzvgbOx7lMK7+g26ilgf+wsdURrvWduor4QNcZ/QCWXw
vrVN+srYGL8vOmO6/nx8ZpyL84Ky+EC/WVcFm+I3x0pdGjylS41HdD/yC/GZ
cT7OC3bosuLV2Mtxn3Qf8i1yVWzmR3khfMCH8lVyWjzN0+BR3Qx+Ue6IC/wC
L40JfDLfKWfDa/Hssw8fjveNvSbXlr+P54fcRy7n+pHm1thTumpmOrOxroG5
xfoxuTCqxb8Trec1H+EtzGHWV8u34pn4+wGP6WbyP+VOuMgv8jL4hE/hu+Ts
eJ1niz2lG8V/k6tjKz/O78VIPpyvkW/DAJ7Ve7eN95X/jnOKr+Ui+sflLq6f
ZV7SdUZGfcv4TPo/zbKopfvUWkGzG29tTrW+W86BKvwN67nMjryZmT32slmH
1zd/iGer2Ze3M8t7/Wh5W9xfXsNMbzaJ72btRDwrMEqfT/+oPEK/1kyHgfHs
wI14f3wjd7U+W74cewuX+CV+Pz7j0/geOSfe5DniHOk+4tvlmtgWZwTd8JP+
SuwlXI4ziYoYo9+hq4XtcW7QHZUw1tpOfW3siHODHqiMKqiKahjnul2uqYOd
cV7QE3P0V2Nv4EqcY+zV3YO34vkaZzz+38Kny6XkfnJ7s7pr/wcrAKDL
           "]]}, Annotation[#, "Charting`Private`Tag$422242#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1WWYVVUYhuFD99BdYpDSXTbdoCJlwNAwpEpJdwyNdJdKjKSkdKigIkhK
d2NQinqvH8/1ve+z1j6wz+y9Tp6WXRrGxItEIlXiRyJNkkQi55NFIhnQM2kk
8kxfhaFoigt8Rnxs7V99NYYhWfJIpDI/h8+L41wzXOQy4RPuPz0ORe1txe3m
amM4l5x7hZur50NLfZr+UD5hvYreWz+pt0IvfYWeEs2tXzIz41NrA62tkyPy
u/JoeZN5U59hHtK/dk0xOVpea+6xNtbcoX9n1tFjzIX6DjO+ucg8bh41R7g+
hfmqHmfOC/dhbtYPmPnD/9P8XN9qPtLnmkfCPbi2qtxHPsVPkvfJ0XJveaWc
Ci3su2xmQS9r8dDY+hj9lrzGenG9tb5Xr4uRXEruNW6+XgCnuPdxhcuK3lx8
rOVG4QNc5bOhD58A67jRSOWzXucXcAVxmvsQ17js6MslxHquhL1tuH16PYzh
org3uIV6IZzhqnF9udN6a3zEXddzoJ+eCO/ZM1a/LW+wXlJvq+/X66OLvkhP
gLHWU+tvhr+RtRHyFvllOVqeLj+W58m/yL/ZX13uJ683z1ibbO7Xfwj3oPcx
V+m7zChzqXnK/NVs6fobck6s0D+zf5C5Pty7mVhvYo7TN5t39JnmYX2ja0vJ
7cJzwo+Td8oN5K7yYjkhxtmXRn9LXmytMM5yNcK/F+5BbxueMe6mngv99ST4
hotFNG7xuTGAT4pN3Hik9TlV+CVcEZzjWuM29xwGcsmwmSttb3vuoN4QE7h0
XNXwvehFcZ5rgztcHgzikmMLV8beDuG90hthIpeeq8Yt04uF50CfoT+RL1iv
qffXz+rtwr1yd/XnMVhPgab2xOp35a3Wy+od9e/1WHmX/LbcTV4iJwrfpXzC
nGR/Brl6OAvM5eHdMbfqxeU28kx5m/lUn28e1X82L7q2ljlA32Cesz7FPKAf
Ct+V3tdcHc44M3W4T/O0eTz87V1/T34BK/Uh9g82N4TzTG4mj5fvydvsLad3
Cs+m/g6660v1xJhsPaNeQ/7CWonwXemz9L/lS9Zr6wP183oHtOfu6y9iqJ4K
27kpyGRvTf5LriQucx3wgHsJw7gofMtNRUd0wu/W8mK4tdTYwZX3WZ3DdxLO
YUzjMnO1uK/0UrjC1eEGcRf0jujM/aHnwwg9DZrbM0G/L++0XkGP0Q/r4+Xd
cmO5h7xM3mkmCc+3edI8Fs5i12Uxa+trwu+H/aPMbeHZNkuHZ82crW83/9EX
mMf0I+ZV19c1B4f3ODwH1qeaB/VOcj85Tk6D5eFcMWNc86eZHyPtGcJvlNPK
LeSJ8gN5l30V9S76j+H8w3Qua/gtCs+JXgbXuHrhmeEuhe8qnIXcX3oBjNLT
YTdXyb6u3E/hPAq/fVw2ri63Si+L61xXPOQKYjSXHnu4mchufz1+NVcON7hu
eMQVwhguA/Zys5DD/vp8HFceN7nueBzO43BWcxmxj5uNnPY3CO8gVwG3uB54
whUO5yCXCfu5Ochlf8Pw9+Mq4jbXE0+5IojlMuMAV9nebuGdDWcF5nK5uUbc
Wr1SeBf0Ofoz+Y71+vpQ/bIeg/5Rkcj/8jc9Gg==
           "]], 
          LineBox[CompressedData["
1:eJwV00VQUFEAheGHiTrjjLqxFbu7Awt7ZQcqwtIubMXOhWJhdwHG2FgYg+Mo
KlioC3Vlbezu7y1+zjn/vW+GeTyiEsb3HRcRBEG0H0nFgyA2MgimFA2Cg0WC
IBI7CgdBZbu/ftLZCj1Tb6+P0rfrf/W37vWxF9sv7A36TX28Pkc/pmfJEjJV
PpWJnvklG+IIt8rdRTLDvi5L2yPkGvu8/GhvkTl2jrzh+Wg5Kfzd5D3nq2WW
nS2H2Yky1S6Cne5H2QP0U85W6pf0aH20vkO/JP/Zu2WefV++81xfucTOkC+d
p8hs+46cYM+Vx+1rsqRMk8/kYznV87/1Rjhqr3Z/sTxrl9Hj9LX6J32rnqvf
9EwHfXL4O/DJ+jV9uD5VT9OLYpd7VeyB+mlnHTDG3mkHeO+8n71Uf+VsIqZx
f+zGSLbLIpvr6N4U7kH43sN3wFXlBnFn7I74wE3HX64J1nDlcIvbg2ruDw7f
E9cJH7kZ+Mc1xVquPEa6t87+rG/T7+q58ra7nWSi/TB8N9jLVeeGcGftzvjE
zUTAN+PXcRVwh9uHGvxQ/hzXBZ+5WYjgm/PruYrI4fajJh8bfmdcDL5ws5GP
b8Fv4CohlzuAWuH3xV/guuIrNwf5+ZZ8ClcZd7mDqM0P5y9y3fCNm4sCfCt+
IxeFe1wq6vAj+EyuO75zSSjIt+Y3cVVwn0tDXT4u/H65HvjBzUMhvg2/mauK
B1zn8Jvk8sK/A9K5etxI7rLdEz+5+SjMt+W3cNXwkOvCTeMe2fE4xNXn4rkr
di/84vpzy7jX9iQs4CK5dtxWu3r4vL3e/qLnOY+xp4f/N3ZC+K3a6XYxHHbe
wE7QrzrrjbH2LjsCv50PsJfrb5xt1G/pk/Uk/YReCun6c/lELvTMf/X7sao=

           "]]}, Annotation[#, "Charting`Private`Tag$422242#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1mW4FWUUhuFNdyMlrag0iKRNSXcKSIk0KGJi0d0tKCAhoSiNgIGUKEip
dChICtiUivf68VxrPe+avfecmfm+OYU69W3SJ0kikZiZLJE4kjaReCFDIrEg
fSKRBKPSJRKVkB7z5HtlJbGWP42jjn9RvlCWFKNllZEB78n3yUphHe+CY45/
Sb5IlgxjZFWwQ/Y3b4pjPCPmy/bz0ljPb/D7MJQ/E9+lT4duvFjGRKK1/jd5
Zv2j+tnyR/V99Mf97svq+7LkyCV/go91/C/qnWgqe9msjNqed1UfNP9Kf01e
jzdT71abyjqrx81TqA/w1upE84fUnryXmsl8gf6AvC4vo+ZX68s+MbupFsUw
eUX5M/G78uNqenSX/86zmD3G3+En/C2v6BfrU2Cc+WWeF6/E7/Od+uv65nF8
XBMslH3Hy2ID74aTvutV+RJZSoyXPRy/h1NmA8yWylNhguwRZMUi+fey+7GR
d8ePjn9NvkyWGhNlj+Jr2Q3eAid5Nrwv+4GXwybeAydkGdBD9gf/yfe9zj/g
aTBJdoXnw6v8Mf6N/qa+JU7xlK5Tedkknp0v1h/UP4ACZg34p/JbajEMl/eM
66DPiJ68uOOe1P8Zf6v+cf2T6rvxm2pf3ls97fze0H8or8nTqrnVWrL26mSf
v6rPj2Z8QFx7tUM8s/G95rv0t+T1eSu1SDxjsh/NUukr6CfLH9b30t8hX6Ie
kpXHZ/wfXhwjeK+4b/pM8fzxv/gZ5/kmX87TYYqsKnJgqfywrAI+573xs+Pf
kn8kS4+psmrIibNm53AeF3ARlzDQ8R87NgOmOa46csXaMhtktkKeEdNlNZAb
y+RH4rnHF7xPPMeOHyxfKcuEGbKa2C37h7fGTzwPPpAd5ZWwmfeNZ1CWOe6P
7O94XnzfEL6KZ8ZM2a+8AF7jT/Bv9f/qn8Q9rnNzflqeWl9RP0V+J/9Qf0xf
GQXNGvIv5f+qJdBKNjLOR+0az5L6bDzH+ixoGHuReQm1DX9avRbrQa3K26hz
zB+Pz/E+6lXnP1S/Os6VZ1HzqLVlb/vsb2pBvB5rUd5RX0u+R/1P1gZneBqz
SrKpPC9fHnuivgq28P94SYziz/HT+qzoy6/HNXMew/ganhWzZLWxV3abt8XP
PB8+kp3gD2Ir7xfn6fPD5Wtl2TBbVgf58bH8ZOxb2Mafx++OHyFfF+sY78jq
ogBWyE/FmsB23h9/OH6kfL3sDrwrq4eC+NNsVOy38hyYI6uPQvjLbLTZBnlO
zJU1wD5ZAu1kZ3lhrIx1yR/BDv5CrC1ZNjwru8H/9n1j+MZ4x2Be/C28EN7g
Dfl+fRI8xc/xtO5NZT6N38VX6X+KdxcKmTXiX8lvq6UwOp5BeTf9i7Fe1exo
JHvOrKTalndRb5pnV6vxtupc86pxXNzbeP6c71j9JnktnjuedbWOrIP6Xlxb
fWE052/Gnq12it8zO6Amjf1Ofq+8hf68PJ2+in56vC/56lhTsX9iJ0+Yl5aN
4S/FvhJ7G/rxW/y68xoXe3U875gva4wiWCM/E+sEX/OXccPx4+WfxfljQdx3
fhfe4k34d/pk8XfxCzx9vN/5jFj3fK3+57g+KGzWmH8jTxLvbf3YWC/67vpX
5OfUHGgse96slNqOP6P+Y36HWj2eIXWeeTW1XzwrcV+c7wT95/LaPG+sS7Wu
rKO6MJ5N/d1owQfGO0ztzJuafa8mj2Pl98lb6i/KM+gf0s+M+8HX6c/Gb2MX
fxXnZTnRX/ZvvAudy0T+Bc+HRbJmuC/eLWaTzDbL8+N9WXMUxXr5OVl17OYD
Yi90/OTYF+N9i8WxJngRDOIt+A/6FOjEL/GMzvnh2M94Mf5JPEP6GrEezJrw
b+VJ9WX142Jv0feIPVx+Qc2FJrIXzEqrT8X+F+84fY1Ya/Esx7nGveLPqf85
1yn6LfI6vGD8/Wq9ODd1ic9f09+DlnxwvHPVp3n3uObmB/Up0SDujXnReI/z
X8wy6R/Rz4o9Q99bX1y+Qb0gq4k9PJnZ/bLx/HV+UZ871ja/HeveeU7lW2M/
wFJZKxySpYr3iOwyL4GN8RzEuwJ7+Rux1jBNvi2eayzjrVESm+SXYu1jH38z
nndMl2+P648PYj3yezGEV3C+XfQ94v8ks8P61LHfmF3hpfBpXIN4trGfvxX3
DzPkO2JPwIe8DUrjM/nluA84wAfGdcHM2PtkRbCct0UZfC6/IquL7/ggJMfb
8p2xnvERb4ey+EJ+VVYP3/PBSIFZ8q9jreBj/hTux2b5r7L6+IEPQUrMjj0h
1hxW8PYohy/lv8ka4CAfilR4R74rngus5B3wALbIf4/3AQ7xYUiNd+W7Yx1g
Fe+I8tgq/0PWCIf5cKTBnFgbsuJYzTvhiCxN7EOyq7wCtvE/eWMc4SPivYO5
8j2yEljDO+OoLC26yn7lFbGd/xX7KI7GtXbvy8km8JH8kj4PXuKJeJea1+Tz
Yx3r+8ferqZz7P+6Zulb
           "]]}, Annotation[#, "Charting`Private`Tag$422242#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"LQR feedback solution\"", TraditionalForm], 
     PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1c\"", "\"u1c\"", "\"x1c\"", "\"\[Theta]dot1c\"", 
       "\"xdot1c\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.863703015891938*^9, 3.8637030366952906`*^9}, {
  3.8637035047167454`*^9, 3.863703509517211*^9}, {3.8637039271827555`*^9, 
  3.8637039564224124`*^9}},
 CellLabel->
  "Out[898]=",ExpressionUUID->"aa4b7c71-65c3-4517-8c23-af6e83b8156c"]
}, Open  ]],

Cell["Individual Test Benches", "Text",
 CellChangeTimes->{{3.8637030744782195`*^9, 3.863703080794203*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"78f72274-21f2-4a3e-a828-5906a5fe2643"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  StyleBox[
   RowBox[{"n", "=", "10"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Tau]", "=", "5"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Tau]1", "=", 
    RowBox[{"\[Tau]", "*", "1.25"}]}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"A", "=", "0.2"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"order", " ", "=", " ", "5"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"maxIter", " ", "=", " ", "100"}],
   FontWeight->"Plain"], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0.617414376019306`", ",", "2.7724493128186865`", ",", 
      RowBox[{"-", "0.47379838931756035`"}]}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0.7479096975521031`", ",", 
      RowBox[{"-", "0.7019932321993547`"}], ",", 
      RowBox[{"-", "0.5253804568578575`"}]}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"InitGuess", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"RandomReal", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
     RowBox[{"RandomReal", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
     RowBox[{"RandomReal", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
     RowBox[{"RandomReal", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}]}], "}"}]}],
  FontWeight->"Plain"], "\n", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
       "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
       "\[Lambda]3ff0", ",", "\[Lambda]4ff0"}], "}"}], "=", 
     RowBox[{"ffCartPendulum", "[", 
      RowBox[{
      "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", "order", 
       ",", "maxIter", ",", "InitGuess"}], "]"}]}], ";"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1b", ",", "xdot1b", ",", "\[Theta]1b", ",", "\[Theta]dot1b", ",", 
       "u1b", ",", "J1"}], "}"}], "=", 
     RowBox[{"testSwingUp", "[", 
      RowBox[{"ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "u1a", ",", "A"}], 
      "]"}]}], ";"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x1c", ",", "xdot1c", ",", "\[Theta]1c", ",", "\[Theta]dot1c", ",", 
      "u1c", ",", "J"}], "}"}], "=", 
    RowBox[{"testWithFB", "[", 
     RowBox[{
     "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
      "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A"}], "]"}]}], 
   ";", 
   RowBox[{"p1a", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1a", "[", "t", "]"}], ",", 
        RowBox[{"u1a", "[", "t", "]"}], ",", 
        RowBox[{"x1a", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1a", "[", "t", "]"}], ",", 
        RowBox[{"xdot1a", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1a\>\"", ",", "\"\<u1a\>\"", ",", "\"\<x1a\>\"", ",", 
         "\"\<\[Theta]dot1a\>\"", ",", "\"\<xdot1a\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Feedforward solution\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}]}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{"p1b", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Theta]1b", "[", "t", "]"}], ",", 
       RowBox[{"u1a", "[", "t", "]"}], ",", 
       RowBox[{"x1b", "[", "t", "]"}], ",", 
       RowBox[{"\[Theta]dot1b", "[", "t", "]"}], ",", 
       RowBox[{"xdot1b", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
     RowBox[{"Filling", "->", 
      RowBox[{"{", 
       RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Theta]1b\>\"", ",", "\"\<u1b\>\"", ",", "\"\<x1b\>\"", ",", 
        "\"\<\[Theta]dot1b\>\"", ",", "\"\<xdot1b\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<Test on dynamics\>\""}], ",", 
     RowBox[{"AspectRatio", "->", 
      RowBox[{"1", "/", "3"}]}], ",", 
     RowBox[{"ImageSize", "->", "400"}], ",", 
     RowBox[{"GridLines", "->", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], "]"}]}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"p1c", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Theta]1c", "[", "t", "]"}], ",", 
       RowBox[{"u1c", "[", "t", "]"}], ",", 
       RowBox[{"x1c", "[", "t", "]"}], ",", 
       RowBox[{"\[Theta]dot1c", "[", "t", "]"}], ",", 
       RowBox[{"xdot1c", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
     RowBox[{"Filling", "->", 
      RowBox[{"{", 
       RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Theta]1c\>\"", ",", "\"\<u1c\>\"", ",", "\"\<x1c\>\"", ",", 
        "\"\<\[Theta]dot1c\>\"", ",", "\"\<xdot1c\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<LQR feedback solution\>\""}], ",", 
     RowBox[{"AspectRatio", "->", 
      RowBox[{"1", "/", "3"}]}], ",", 
     RowBox[{"ImageSize", "->", "400"}], ",", 
     RowBox[{"GridLines", "->", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], "]"}]}],
  FontWeight->"Plain"]}], "Input",
 CellChangeTimes->{{3.8637030916107454`*^9, 3.8637031163048553`*^9}, {
   3.863703146634164*^9, 3.8637031467241335`*^9}, {3.8637032271314416`*^9, 
   3.8637032981877384`*^9}, {3.863703344313999*^9, 3.8637033675275803`*^9}, {
   3.8637034246933155`*^9, 3.863703488801831*^9}, {3.8637035225560446`*^9, 
   3.8637036066221848`*^9}, 3.8637039678437643`*^9, {3.863704003356416*^9, 
   3.863704015206629*^9}, 3.8637041910564413`*^9},
 CellLabel->
  "In[1034]:=",ExpressionUUID->"b5dee5c3-2101-40ff-b338-91333f517d06"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.5065087340078245`", ",", 
   RowBox[{"-", "0.16174375162109067`"}], ",", "0.5910643521368053`", ",", 
   "0.321287190122312`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.863703118216243*^9, 3.8637031489144335`*^9, 3.8637032426554804`*^9, {
   3.8637032743803434`*^9, 3.8637033154942074`*^9}, {3.863703346328354*^9, 
   3.8637033768286085`*^9}, {3.86370342548906*^9, 3.863703489280677*^9}, {
   3.8637035621363974`*^9, 3.8637036282402754`*^9}, {3.8637039697241616`*^9, 
   3.863704044314328*^9}, {3.863704191757216*^9, 3.8637042143879848`*^9}},
 CellLabel->
  "Out[1037]=",ExpressionUUID->"16e982f4-1844-4214-9b8e-65b6fe578413"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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

      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{439, 2472, 368, 369, 370, 371, 372, 840, 689, 574, 
            492, 438, 409, 866, 715, 600, 518, 464, 895, 744, 629, 547, 373, 
            841, 690, 575, 935, 784, 493, 906, 755, 983, 640, 954, 803, 
            1002}}], 
           PolygonBox[CompressedData["
1:eJwV1HmQz3Ucx/FflEaIMiNRgxmykfsIyR9EEbvalXLHjMoRf0Rs/OE+2lXk
zLEruywKoybrWNZutYYpWUcqN9NkckS5izzefzw9X6/X5/fb+fl9v99fnSGj
U0eVSSQSDyDdP3nlE4l1SJablE0kljish0P6ZP1PeRxW6EP1/XI/lMcC/S5/
hEnOu+vfyB2xVn4MV+wZfM02GTvkuthuf5+P2w7wMN7MNfCEvJTL4gTm6kXc
IP4eUry3KX9mL+FneBVXwCkcdj6FL9gP83jewrXwB7Kcv80/2X/g/ryBq+ER
eSHf44z4zF7bQ98id8JVPVO/Lk+J/48+Jj6nPBzV0dPWzLZUro8jenZ8JiTb
820v4W+9AK+huX2ZLQk/6yvxju2APgAVMNWWYtsqd8Y/+hz9Rpxhpz5WPymP
wJNYpj+IeXKq8xbycvlZ5MgVcdQ+lS/a0pEv18bn9ne51PYjD+SNcX3iffIi
/p9/40zexfVxCdO8tydvs+/lLryOH8eZuB+cf8w37b/E67mA68V1wy7nH8T1
tJfySP6Ka8Y9Ii/nh/CpnOa1LeUVcoP4e/q0+Bzyh3Fv6MP0g/IgVML0+N7j
PpRfxnW9EONsp/X3UBO9bK3inpEb4lc9BzOQat9hewU39N14Ha3t2bbn4rvR
czETvfEGnne+0lkjHNNXYxbS7AW2rripF+FNtIlrYWuM4/oazEYv+05bN9zS
i9EHbe2rbE1wIp5xDLcd0t/Co/HMxmeN71l+Fbf1T/Rb8d3gW318XCv5IMeP
xtf8FH4Px28Cl8N8uZgboq/3teMc2x5uyrlcKe5LZ9P5cjwTPIG3ch2cx1rn
I+L5te/nwbyJq+McKuuLOYFjmKMXclL8TWTEd8yF9n3cnddzVdxxNpdv22bg
Oz1dPyuPxtPI0h/GgviNc/6CnCs3w6m45vpf8sS4l/WR+hF5CKogM66vbbfc
A//q36M/2ttX25rjtL4+nt24vvYiWzL+00swAC/a19ha4Iz+RTwvcX3txbYU
3NX3YCA62PNsLXFW/zKuJwbhPn79zk8=
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwV0klQznEcBvD/W5rRhUEdHEQdzJjhaGfsXMk2I0t7tt7XdkI5VhdUlpy4
IFpRBwczZgpvhQ5mkMEY1VvJjOWIwed3+MzzfZ63f/P2vuUWJ/LjaVEUxfjA
7cwoaiZhiFPJUY5wmEM00c0kqz3cyZb0KDqoD5Kh76afIvtVWxdfWGXrYLO9
Qs9zn2KMattL2xT3LvootF2xZbsreMdx2wPbOfdP6vQJfbq8xUpbO5vc5fZF
sjf8HttHmckNcvWUzKGbk/ormZJV8oVnv8r5PKLOPiT/yEaZLj/LbFrZqQ/I
pDwgL3v+m1zAYy7Y38s0rpGlj8jZdIb3qg/KIXlM3vf8hMzjIdX21/KHrJXj
Xv8kp3GTFfakbJMbZZnXF8qe8F5sU+V15rnnyC5OuEc5637u52vdv2kI71Pu
4Bn79UteP++OuZuY5S7jLQn9nter3N+p0cf05e5WNuil+tzw/YW/mzO2AVvM
vZ2n7LM12ma6S3lDPHw+thTL9BbW20r0/vCPq+fzhL32BlsHoyy13WWdvVjP
CZ8tw5y29dlq3L+o1//pWbKFbbZeCtz19hnukvAdUGlrt42wRL/DWluRnuQv
W2097LFf1NsYZrGtmTX2Qv0/2a14iQ==
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1Hl8z3UcwPFfNJHaCGGkDYutrTUsQ6oZa9IUhdLFkhCbilCJLuXo1H2g
XB2KIrpJSaXTmaP7EKUUopzP98MfT6/P9z2PfT/fz/f7WHpZRffyIxKJRKl/
ogd4hwmU0YmWJPvhZ/oE19GDShzkXSZyJcW0IsX//1yf5Hp6Upm4yWKZRD/O
JtVsvc7iFvKpYfaFPsUwepFm9p3O4U6OjF9ntkTv4SoyXP+sr1BCA9cbdDZj
yHb9u77OadR0/aU+Hc9p/Y8OJ9P6N32Ni0h3/b2+RGvrf3UcudZ/xjnpW9pe
9+m5mhRnpO/pmXqv5un2eG7tryfpL1qkr2ob3aPnaGdtqBu1UJ+LPesuHUuO
9R/6Bqdb7429cZz1Vzol3oX1Dr2BLOstupCLaez6B32Zu6gS78hsqd7H1bEP
TjDbpM9zKwXUMlupUxlBb46Kd2L+vt7PALrEM1HbfJVOYySXUJUk8w/0AQbG
udGWOuar9RlGcSnVYo/my/RBBlFKO46O+/vZhzqZa+ga50L1uJefLdeHGMx5
8a44hmNJJiW+u/gm4gzjGWPfsReOpy71qE9qfFvxfuJ8aMSJpMW3EmdLE5rG
vt37I32YIZzPGfE7zdfos9zIZWTEs5h/rI9QTrf4fuL+5mt1OjdxeXw/8Xzm
n+ijVNA99mP2jb7AbZwVezdbpzO4mStij2Y/6lzuplmcidkKfYyhMXP9q87n
gnhO19/qi9zOKa636ZsUxvm4/lpnkm+9U0dzsvVWXRTvzPp/7RNnZP2TdtB5
WqC7tbOO11P1Ly3Wt+PsdH/i8N+s5vH+9NN4Rn1cW+jfWqLXanPdrB11QXxf
+p920Qv1jrg3fcmkiKzYL9nkxDOSG3shL35X3IdDhF2Niw==
           "]]}, Annotation[#, "Charting`Private`Tag$537757#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1XfYlmMcxvGnXqVBGkRSaYkGUUhp0d6KVEpDGdGeKi2y2nsrmtp7by2p
tBSK0KJdaKD4/A5/fI9zXPf9HPd7rTdnsza1WydLJBLTkycSNZhHkhKJMXxe
7Jf7yKf5Lpgot5B38y8hNUbIN+jH6G28mryUfwYz+Qy4qO9P/9D1wWo+D1bp
O9Ajuj30DbqQ3ou7+XE0CT9giLyR5o/fQ03vFqZj9VvpA/QzmhZHccB4X3pG
f4B2pctoDpzCJ8ZfpV/rd9KGdC7NjDT8SHqT9o9v9mx1eRn/LC7JA+Q/+b7x
98gd4zv5lrgHtXSP6sbx+fCNPCm+CTX0y3XlcFleg+fwmH687kEclCfjNd0e
uRHS4l1dTd0Kvjx+lwfKV2IMa+VO8o/8m8iC8fItGMrXNl6En8A/hCn8bTik
f5ee1b2N5fz9+FT/Ot2r20VfpvNifeI9fhT9l35PB9B1NB/O4T3v1qIr9V/S
CvRzmhE/x34wPohe1X8bz9M1NG+sG9YZ7xzrqd9L36KLaNbYI/wEmgLD+Dqe
LcpP5PPH78nvxXfw3WJvyG/I+/jGuB39Yt5jH/IV8ae8Hl10P8mtkBXP6x6P
PcMXwHfyFLyP2vrVukq4Im/AC3hCP0lXMOZGnooPUBcv4knjk40VwmF5Gj5E
Hf0aXWVclTeiHorFWugexhF5Oj7C8/q1uiq4Jm9CfTyl/0z3CH6QZ6Clbr/c
BOnizMa3xjzzVXFdHixfi7nBF3LXWCt+H21NF9P7cCI07gSaEsP5TbQAGniv
OJ2i20YL06n09tiXxvrR83EmaHe6gubEr5hp/M04v/rdtCmdT+/BMdwhj6YJ
HMZAeT19MH4T/WOO6Xr9DlqNzqKZ8JexIfS67n1slt+Wf+HbIBs+kW/FiLjj
jJfgp/KP4misuXyB7xF7WX5L/oZvhvQYEOur28BXx9/yFjTE0/ppusfwkzwr
zm6sr36jrgb+kbeiEUom/X8vF8HP8uw4L7G++k26mrghb8PLKKWfoSuKX+Q5
sZ5oHOuf2rrT0jHHxh/HMXluzAka6L+Iews35e1oijL6z3VP4Lg8D610B+VX
kAFDdS/pNvPPYTZ/Z9wL+qEx77oP4g6Qu8U68m2RPeZNV1Y3i38SJ+T5GBZz
pt8SdxYSsZ66V/CMfrZcDCflBWgdd5jcHBkxPOZQtzXuBiTDV7ruuuN8O+SI
53XP6ubwT+FUnFP5Iv8OFspt5G/5FsiEMXIyDOJHxNzz2+KeQHIMk/+mH2Kn
8R5xXvj2WMJni7uVn0RTYWScNVoQLTxfjs7VbafF6TSaLu6kOCNxT9BL+oO0
J11Jc+E3LDLeln6n/5q+ShfQLPF3x7rIY2lyHMFgeQN9KPZ1fEvsF7o95ou+
QOfQu+KcICnmlv4T9yD9iK6lD+Asdnn/HXpSv592oEtp9ujinMuTaeq4CzAq
ziEtFN/q3fJ0nq4Epsd5j78r7jp6Wdcr7iC5nfw9/xruwihdE92XfF3cEveH
rqfuFN8RueJ5XQXdfP5pnJaXYHTsd/0O3YtIEfMX//tQUb9ALokz8lKMif8n
cafGfRX3QJyL2IexXzDTeWsb34n26ICOqOS3FvqdUjgrL8NYNNN/pauHlNij
6xXrzXdC7lBd5VhjvjRm8OlxTv8x/V13iPamq2hunMby+Ia4L/WvIzPGxVnS
7eTr41bs1XVGFf1iuQzOyyswHl3i/0HcmXGO4yzF3o71jnlGVe8t8U5ZXJBX
YgKax77QNUAq7NP1jnXlOyMPPpXTYDS/hT4cexy9PPsfnIBugg==
           "]]}, Annotation[#, "Charting`Private`Tag$537757#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1GWYFlUYBuChQ7qll5YGaWmkQbo7JKSl20JpUBQQxUBAFEW6u7s7FVRU
DKRBifv8uK/3ec7M7De73zkb07lf476xoihKFDuKbsWJoiHxoighS+NGUR8q
kYvbrt3hLve4z1D3JWKZ632pTG7et5aTA/J4WvPA/cOsJWa53o8q5OEDa7k4
KE+gDQ/dP9zac6zQ+1OV+XopLsufkJcZem4OyRNpy1K9Kn/IX/PIzxuhJ2Gl
PoB1cl1uy9VYIJfmivwpO+XmPJHz8aGch8PyMbMLk+QtZiMeyu1YJlfjhnzG
7Mkiea/Zmr+JzU8M5AH/eb+RZlJ+ZpX7D5sducnr+nqzXviduKOfN3tzl5f1
hWYZrvOjfsrszlx5l9mCp/IVcwAvyB+ZeTkiHze7Mlneajbmkdye5eEz+FP+
hn1yG+Lwv3cfZSZjtWsDqR7+7nrZ8HvKn5GfmXo+jspT6MBjz4+2lpw1+iBq
sEgvx1X5cwowK7w3x+SpdOSJ58dYS8FafTA1KchT18ZaT8k6fQi1KERELGIT
h7jEIz5vuD8V6+Wh1KYwCXjTemo2yMOoQxFmW8vPcXkanUjIW9bSsFEeTl2K
8rG1ApyQp9OZRLxtLS2b5BHUC39z/SWuyV9QjDl6QU6GM0cXEvOOtXRslkdS
n2/18mFvyV9SPJwfvRCnwhlkm9wk7EW5Kyvk6vwVnme/3Ja44Vzq48z0bJGP
mJ0YJW8w64d9KV8w+/CKvNiswG/8op82e4Tzxzx9t9kyfB5R2MNh33OfF8OZ
NAvzK6f1E+ar3GKGvt1sGvZo2JP6JbNfuEdeadYIZ08+a77GYvmA2Y54JNHf
NTOwVR7NxvDu3JMb8J1cMbyD/BUlmKsX4Uz4H0E3Vuk1+Sc8Q1Le059nmzyG
hpQMZ8NaUc6G80h3kjHeWka2y2NpRCmSM8F6JnaEvUpjSpOClKQiNWlIy0T3
ZmZn2L80oQzpmGQ9C7vCXqUpZcOZs1aMc/JMepCeydaysjvsVZrxvV6J6/J8
yoV9qhfnvDyLnqzWa3EzPEMGpujZ2BP2LpvkBuF7l5uzRK4c9o28gD1yK2KF
MxH2c9gfXJBPmt2YLe8wm/FYvmz2D9+7vMasze/8q58ze3GHJfpBs3347ojP
VQbxMHx/rk81s4c9zF79qNk5/CzG6ZvNhtzggX7R7Bv2EC30H8wq4fPlhZRn
nl6Ci+H/Ar3IyDRrMewLe5OWVCATmclCVrKRnRhyMN0zOdgf9h2tqBj2rLWS
XJLn0Ju1ep1wjsK7cUjuQAKuMZhH5HTtGTLuEoU=
           "]]}, Annotation[#, "Charting`Private`Tag$537757#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV0neg1WMcBvDfre697b33bQ/tvfekUEiS6jZQlFDaU8poGA2jQaGihIyQ
htk0QmUWsstqaPt8//jc93mf3znnnvf7nozMUb1GpiRJssifs6lJ0jHdmpYk
m5hCd2oxSF+cL+THuZFzXt9Jd05+g6lcSm3Oe9bZs/Pym0zjMupwwbOLJHIK
WchKNlJJI50u3n/B+hbT6UFdMvUl2C8/wU1kp6vuonUzM+hJPQbrS3JAXsrN
5KCbLuFteSaXM86+Dkfll6jPEPtSHJSXMZxJ9g34W36VnDEr+xS2yHfHPOTG
HJevYLxcl2PybGtrXo7/bW3Of/L91vbx2fJQa2m+lO+xtmJ5nM3ajLmcsr/P
2o75jLCfbG3IP/Icaxtei+9kbcFpOVfclZyFrfKsuCO5CSfkK5kg1+NPeSMN
GWZfhq/kFdxC7rhbXVa2xXelF43id6Iry9fyk9xKnrhLXTa2xyzoTWPyko/8
FIg79JpU3omzcBVN4s515fhGfoqRFIw71KXxrnwvV9M07lxXnm/llYyiUNyL
Lp33Yo5cQ7O4Y10G38mruI3CMRdddt6Pu6IPzRmhq8Ah+WlGUyTmoMvBB/ID
XEuLmJuuIoflZ7idojEHXU4+lOfSl5YxN10lvpef5Q6KxTx0udghz+M6WlGc
EnF+z3KzU55PP1rHvHSV+UFezZ2UjPPr8rBLXsD1tIl56arwo7yGMZSK8+vy
slt+kP60jXnpqnJEXstYSsf5dfnYIz/EDbSLeemq8ZP8HHdRJs6vy89e+WEG
0D7mpavOz/LzjKNsnF9XgI/kRxhIh5iXrga/yOsYT7mYh64gH8sLGUTHmIeu
Jr/K65lA+ZiHrhCfyIvIpBMZcXZ9YT6VFzOYzjEr3SX8Jr/ARCrE2XVF2Ccv
YbrclJPx27W2ZR5D4j3W+vwlv0KXmKl9LX6XNzCJijEjXVE+kx9lKF2pRGWq
UJVqVKcGNWNW3lOMz+XHGEa3uAtdbf6QX2QyU+wb8a/8OrPklpyJ37m1Awvi
3Pb/A01xuZQ=
           "]]}, Annotation[#, "Charting`Private`Tag$537757#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1GW4FVUYBtBDg3R3o3R3d3d3NyqIiQWCYmCChHR3S3d3SIN0N0gjJa79
Yz3fu9+Zc+49M3smc6c+jXpHiUQiKaJGIkNjRSI540Qia2NHIp1IzUVdB91D
eTQN2KKroTslD6QEURimz6VfJ3cmDZd0HXWP5DE0ZKuupu60PIiSROV3fW79
erkLabms28Zw8ji2QdeVdFzRbaeW/oz115QiGiP0efUb5W6k56puB7X1Z62/
oTTRGanPp98kdycD13Q7qaM/Zz2YMsRglD6/frPcg4xc1+2irv689beUJSZ/
6Avot8g9ycQN3W5GU9CxrbpeZOambg9jGMs4xjOBQs7d5py3ycIt3V7q6S9Y
f0c5YjFRX1i/XX6HrNzW7aO+/qL195QnNpP0RfQ75HfJxh1dJ91jeSyN2K9r
oLsk/xB+q5yaCnI/My5jWWz9q5mFOOF/Nv8zp9Ga/taJWSFP9p1F5Z1y73A/
5RS8Kb9vxmCufNd5neUn8rjw9+V0NJa/MBMynmXWQ81sTOcvn2toXg73zxwS
rpWZhklUtP7UjMc4/rT+zczKNN4I19B8HZ6F8J3mj2YG2sgDzCSsDHvZfIsp
/mYxc5euT9hzcspwTP7AjMk8+R/ndZGfyuNpwgFdI92V8HeoRNxwX3QRZsht
meq84ta75ffIzj3dQRrrr1r/RGXihWuvL6HfI/clB/d1h5hOScf2hmtOTh7o
DjODmcxiNnOYyzzmU8rn9oXfRS4e6o6wgNKO7dd9SG4e6Y7SRH/N+meqEJ+F
+jLhfskfkYfHumM01V+3/oWqJGCRvqz+gPwxeXmi66r7V55AU47rmuluhD1J
NRKGvaaLwky5HYudV876oPwJ+cL/bR2L+fJTx7vJz8LzRTNO6JrrboY9Q3U+
s47PEjlRuP9yVGaF+2FmpL38lZmUVfJwM3vYe76vvHlIN9LsZw42UzGR/OHa
mLEZw4JwDc1MYc+F3+3z3c3n4d0T9rc5xEzPZJpbf2kmYgLLrYeFZ42/fbaF
eSs8P+H9IKelhvy5mYClcuKw3+RozJY7MFBOxmp5ie+pIB8OzxUFwv0J7wEW
ys8c7yG/CM8+LTipa6m7Hf4fapKEpfqK+iPhulKQ57qeupfyFFpyStdKdyc8
g9QiKcv0lfRHw2+gEC90p2mtvxuuPbVJxnJ9Zf2x8E6hMC91Z2ij/8d6BHVI
zgp9Ff3xcF0pwivdWdrq74X7SF1SsFJfVX9C7k/RsNfCO4ZFYX+bmZka3pfO
7WW+Cs86rTina6e7L4+iHilZpa8W7qE8gGK81p1nNWtYyzrWs4GNbKK6z50M
+5HiRLigb69/EPYR9UlFX1105sgdGSQnZ024LmaO8H5is8//D43wHyA=
           "]]}, Annotation[#, "Charting`Private`Tag$537757#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"Feedforward solution\"", TraditionalForm], 
     PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1a\"", "\"u1a\"", "\"x1a\"", "\"\[Theta]dot1a\"", 
       "\"xdot1a\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.863703118216243*^9, 3.8637031489144335`*^9, 3.8637032426554804`*^9, {
   3.8637032743803434`*^9, 3.8637033154942074`*^9}, {3.863703346328354*^9, 
   3.8637033768286085`*^9}, {3.86370342548906*^9, 3.863703489280677*^9}, {
   3.8637035621363974`*^9, 3.8637036282402754`*^9}, {3.8637039697241616`*^9, 
   3.863704044314328*^9}, {3.863704191757216*^9, 3.8637042170691285`*^9}},
 CellLabel->
  "Out[1040]=",ExpressionUUID->"28d4cb37-5035-4ac7-94c9-ff882b9d4613"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
dJoh49LJj5nE+0QXVV/y7++Al/mxVsJEvvrafn8++WQ3WNi+UVL73YfNPygv
LprTgOWz5kmHUGL9HbuwZDRmCBzydA1S/3Zj8aTlzxZ0R6FeH14t3u7CtX4+
P/z35UKSc1NfztdevF2+9pHD3UoQGNnxYVs9MZ8W3qH71xphvPLuiyEif+W/
MlwTIN8O5Ru0Xj+1oeHq5Hv6x85S4bZjAvfB8T5MG7h8rci2Fj532HXObiPq
USMHy9YjrfA8KDshl4hP2nLxpY80O8F3Kmfq7SEiH2+UG5c1aYAHnKqsL/SI
9VJ5/Nq5jxTIk8s9YU6Mv/S5ezQ7uxoYe/DNe+dqGt7ty7rhsVYLUNZva95H
jFfXlLizGjkdIOw+fNnhDA3r1Iv51us2QcVFvcVTxPrAMf23sex7O5z5GHXF
ilg/xNHgz12oDYY2jgpeI8brgHcme8o1ClSFbXrygLifyrsjLk3lxP7i8jMz
ZeLv6/brdsu3NoLGiWSvK0S9YaT5ynm7dTtwj6Gr+UQ9subsDlHv361A12vw
P0XcT4a2JYvRS4Fke0F6LhEvhbvphTuKW+AS5zOlDCI/L90aY9Ce3gYeDqO6
E8T7kNwZWd0DFNjXuI//EvHz9806B5UetcKdGFgmQdwvka1tvNmnBfq7X3Dz
Ez8PSi729XFtA741P1bsJ37+umhJTxtrG8hskN/7X30TN/wq1IunFVLK0m+d
Iu7vG/lox57ZNtB9vbYlgLgm9x8em3lfQWoNk0d8Xozasj22kckjEj0FWQb9
6pk84tWh153q16uZPMLtnOgDDa0KJo9wmmeZjl9VweQRZ1XbViQnVjN5xOfn
pc/yg5qZPGLJqScO6350MnnEw0117xbt+5g8QqywIjnPZ5jJIwzXtwh3Lacz
ecQ8Q0ho5DqDySO6Ov+qq0gyMMkjysvFW/54j2KSR6SoHfyWQB/AJI84u80z
89aeLkzyiNcrA30VaFWY5BHlS/0vTV38xOQR+ersJp856pk8An2aaHhA1Pkk
j5AYWRZB56IxecRwqY98VtcAk0f0cbiPCK4aYvIIxbdZJiXiQ0DyCLUtV4pW
6AwCySMc2jjsP73uB5JHcNBmBNIv9AHJIyLXHXlCteoGkkesv7GWn2tXJ5A8
olD/nMDLD21A8ogNDXw/3zjWAckjUqXUX9VxlAHJIx4mzVdEWaQAySN4OkLv
Y88kTPKIIyK+Dg13yjHJIyQ5nthdZm3FJI8o7OETGRmiYpJHxNQ2c0seH8Qk
jxgWYLRrD9MxySPI/S/JI8hrkkeQ1ySPIK9JHkFekzyCvCZ5BHl9fPsRdefx
f9cFl7eZmt0WZ17//zyChYXkETPnaob2X2lg8ojql0djWoidA8kj9F4cUKW7
1zJ5xN87raEhLyqZPGLn/qdd95PLmTxiFXfziKlVJZNHVEt6Ov2UrWfyCLas
y9/TGyhM/hA0NaHZ+2KAyR8qfbaFf+McZfKHkNv7z0r30fFd35LbcsbTUP6x
Z/9OSwbWYDNoD7WehQtKV798v0fHLEX3P0i5zIPXtUu/fbaOYI4rb03LXi3C
OaRdILfQi4M2poul/mVBlf4gWmPeikWfDNdNN7Ah7xWh8nZzf4DNcdfPW+3s
aOmVZM24BQosL3NYNTTCgXbxVaRxJPaAyt+VzgNjnEgcb6ueiu+HmqkHj+1n
uJDICTa/C6mD0HEsWfUJKw/KmF61mmMdMd41NOgr5nmQgdvosU+Vg3D4c+3m
nyx8aLdNS1zM8wGY27uVh8rJjzYJh+6K86YByVPqL1SWrsgewSRPIeN1PqDh
z7bIf9fK3Kfif/z8F0+Sr/CdjanJ6Khj8pUwFeWG1+GNTL5iLSNwcJt/HZOv
6KQ1N+lbVTH5ivPuY4ybXeVMvuJoH3LjTnQFk69owHxYnlYtk6+YtDt/4xZq
Y/IU99ob5aK8/Uye4n8xKKLg1giTp+Tl65e1Pabj1cW2HccoU+C+9IChvR0D
pz8Z/pVDn4Fzt5aeW1lLx9tbDUxSx+Zg/cbAScOeEXzGVfF3h8giWO4Of1zG
148/XLrnqP6cBSXs0tzbk9WOabHHqNmv2ZBfxybRmIfZkGywZz/tDTvqoB5T
p0sR69Ivnd7PXzhQ3u/2M3Pa3WDU3u+qkMyJnCS7r2r206C1Ym7BMpkLUd5P
8b6+PAhVGhv7OXO40e2gFoc+6SFwP/6cVpXJg2jcQtYy84Pw/k5+kHwGL+J8
tVOsfXoA1GSEPzXl86HTN0uMz6/oB5IPJWdZnf17bRiTfIiMl8JvC9sp93/X
7onY1z/4XzxJfjSgUvXS4FAjkx8l73m7f69LA5MfBa5W81xtWcPkRyNr0lWs
WiqY/Miq7tmrvoJyJj9i1bi63PZ2FZMfHTnt7d+u1ogf/MiMkaUyQE3wi98+
8SEsb77m/I2+ceBbafxnKGgUx6XY1Eq2TMJJfO/a5X0MXKMtzck3NA07qek2
jacYuNqpjMt+aBYim26f2C5Ix+XfIym+nAtgvFNivu3XEG4M4+BpWcKCtM5Z
JHBmd+MDJkHFiivZUaFVQBp1eRWc9N+5p38TB+p12PuRVbATqimvtbcpcaKN
s1mD4sO9sCzj6N24nVxIw/hH4dJLA1Cyln+p8wFulNa/yatuYhDoJzT8BQ4S
8Xm1I7h/IxGvw4vTevt50ZCVhqLw60Hobu9OUz/MhxLj4vW0JQcg7MbxVeGZ
Imjn6obBsZpRbJWtxqkA/+Ixpkepamz+Fw+Sn82MbQ+c7qpl8rMhP9e/lYmN
TH7mfiZ9iZNwPZOf9bx5zPqsu4rJz5o1yvoLl1Uw+RnPsWFxUd0KJj+7Lt3u
O+RQw+Rnv1tk3R79aWHysiMmUylCiMbkZYE6c+l3V44weZmP9YY9aqfpeLg3
b2XTmyloZPGx5LRi4Dule2Rrv8/A5972R0mzdFzYq33sQfwcfC2/GTi0fxQ7
+c0OD5QvQE5cUYgj+wCWH2uUFbBlQZ07li2jLnRgHeWp/k332NDehyzLvY1S
wf/s3rlYJ3aU/nFHVlZoI8wo/tYW8OVAZW57j4g8o4IzTcf9bzAnatIIecHm
QgPDAz/TzIK40N5FrhDBTYNQcrTp4OH33MiN8VbNc8MQoNIf3QnveFCooe+9
doEhqNA7cNwolBed8eptLZYZBOq7h3Pno/mQrmE0fZduP5D8z++B/ZX954Yw
yf+uTmWMiRD55HVTSl6z1b94bvSanJl/+C+eJB+sN3HlWtvRwOSD4Y/fiMq0
NzD54ABrX8a+yRomH/ykG9LSqVTJ5IMiaUFtIinlTD54OCDp/VhfJZMP+rJd
nOlTaMAsna9pEMGAlTIqZh8vDuLnmcOl87Hj8PlO1qdW7VEctmTNq/GwSVit
4BTlKMLA0RZ3VV7HTUOBfe5FC0MG9stcbuf1bRY8f5bcoR+hY5PMgJwL2fNQ
IOK3p8Z/GDdrVankNi9CDsQF/aL14NipgxUvptkQ125/n9vPykHmodJUHDsH
OpZYl5a6vgPsL/D+8BPmRG8Hn0kdOtcL0vnxTsdFudBvlmLXjzwDcMq34I+j
JDd69fPHLZamQaAdX+w+tp4H9e788OgjMb9Q/oaJfZK8aHH5hfvLifVPrOCK
jZsUkf8cPrIGXBwAcY+h3z++iKCLngIhjGOjeKPM9Xs3tv2Lx0tFcTWNP//i
8fKltvHw02iwsbufVJhUz+SlUjHN6yPsG5l8tO/Rl+OpC5VMPro/nooL8sqZ
fJRDeIthD3sl9sR31kRLTYLp47S/z9Lo+PintZ/SNkxDmYrJ2A5ifLAdidb+
pjgLaw+NLLf4RMfNZrud5DBR/75d/07mVRucrvdweVrDiWSPXC+lnu4H3Zvo
kG09F4pu3TET5jcIjZoWQQXt3Git9KdtFpuGIKvIfGi8hQdZC31b/7NvEHzH
I40rlvz7vIoou7DP6Res3nItoeIhkS9EFu3UX5XBlv0C76P4G5j8VvH1eZ3F
ZxVMfrvKWq5Lr68cH8EzGwPTeiBOdPZUNn81TjbIEzm8agqUL/h15ukwMPv2
qtK7ijPQcqAiwZ7Iz3fe7LizRYMDRfnfoB0Z6oS5760OvGe5UHjguvvX3g+A
xndtHber3GjzFVV2SWK+zWg931d2lQc5F/qwjhD1S1ZO47yLLi/SU5h79cNx
EDYejbH1/iuCNp69EyRmSMenPWNuWgz9ix/JlyWW+66J16ll8uXaSw/iviU0
Mvkyz/z3fT6n65l8WW+/rcTxjdVMvnzrwD6H8q0VTL6cJtIqybGvgsmXO8p7
uveK1DD5sqyPZtx7hRYmTz7YPdG2tqmPyZPVvFZw9LYNM3ny/rArel5KdHzR
0WrXhntT8Oy3qJfCLQbWGW5qMwiagaVvdva/FmBgUcsjv0z85sBQ86mw6I1R
7Bd8lcv22wIs6MyuOeo8gK2zvT2sDFmQ7PpGm9bQTuzNdnL4ghkb4km5xbpF
4Ds4l6Y2PzFlR1EHpIXXn2mA4xYzrCr3ONBCZk6e+xYqcFnxsq57zIl0uO4F
j6vR4IPdS/FbD7jQzRi6ZweR9zUKdltcD+BGNbfXiI6sHYJ1QoVd6/x5UFtq
pdIZkSEw0XaSfuDNi/Y9Y0vvPjAIyU2qH4Ne8qGAF08PYKd+IPn4VfNrQc1/
BzHJx+1o7mxBigxc3qM/rG38b3xO2IokKjn/iyfJz6d62/jiPzQw+flM8EK3
kmAjk59L8ELeSpVaJj+P7DHdvOFGJZOfmxX9IOZzOZOfJ9RX6PyNq2Ty81/q
2+at4upx5rQX/3E3BvgFeNtGTg7gXOP6J8e8x+GCtjSOlhvFIfvtZtrdJsEh
3iCicYGOl85LXezwIvLjTYMnvKYMbEZJkxP2n4W41IUoxjU6TjrkvVP13Txc
+x3ccHJyGI+c23tW89cizIUZmj+w78WtWSHVBX1sSErXI4HFvwzEFpLqvens
SHbXfnW5oHbID0AmmaycyF3XzqqSoxcSjt2cDeXgQt6sb+J/tvRDQM5HWQd+
bhRQJLPKu3gQjP7oCt9axoNujUvWt0sR8eLePRYjwIuM7iWfKM8bhM8/X594
s4wP+X68F/vQfgBqlqIQ9FEEPaKteE8h9juuereT3Tb/i4eJpNK0a86/eLhK
8HTQwyPhoN26FG5i/pD9hJrGrXROv0Zm/yAgYgmH7O4qZv/AUbL0qVJVObN/
sKlOJ6ikqgK795e4BbJPwh3TY0dTI4j3pVyUz8Y2DWo/dXbw2zNwm/Fxzn3C
s/Ax31nqZjYdF1GTdfm+sqPSyQr2A1dboVl/z0JLHidq5JOjeK/thzehayKs
C7jQel33Il6HQThfVIi7K7jRjfLp7t9E/RzO5zZwo4wHbSzIEu1mEPWYTNL7
Ae5/n/cD6xpPs4c/IX6udFu3cSOW99eQ7vIqhW8rN+jMqjcw+xufaqX4zX5U
MPsb316t0vOuLcf+Sj/nHO71wAFu3rnsjCoc77PKfvvcJKiItYm+PsbA5ti5
L3vJDKDNEp4d6gxsuPz7ef49HEie3Uqa6toJnnsDpy4dIurLlpSpV64D4N0n
n+hykhulf5lercE2BHdKB24MnuJBx1nnb9oR9Uo4++DswDFeFLnPwbn0ySC0
10wfESsQQSzn+XD7KjqWssmV/ED9F79gNPGV8fQluD9+w+lpWodFbm0WWUHN
AagwqVr83Mjsx6RN6jdrTJdj6yLZWyYcVEg/Txfpcq3AnpckFwIyp+BvcvCo
rS0Dv/oUaHuiagZ2qFw48ITYH6/jadK3+MiF6jZrXddQG4RThW7LNyVyI/40
b5k6Yn266hvZq/aNB7VmSu934RyC18+qxTdMiSA3qdDR0mQG9nlYx2L18gd0
zmfmU5c3Yj+vJq/1Jn9A6OYmBcGEBmY/SC74RssYdyWzH+Sv6HvEOqMcf+gs
2MObOQmFLjxoVpqBD7T+XXemZBr0b65tu6zLwCp8SSv+iHIgi51Jm96GdIDQ
+T4Lp63ciBbYop5DrJeWJZG/tijyoLjv1y6fIZ43XvTFQL/TJ6hfk6x4Q6gB
n7rLqv1GugA+vrxoWHyhkdlvqok7e1ExvRx3rLrzzFZ9Gq4Yf9brt2Fg8W2G
1Nt9RD0TVSx47cMgXCleZhozyo3Ovt8gNEDMz0zXG/wmNhkQ9z70q+PrRma/
6k8bXUrNogJ/vasQ6MjeBS/XbjUxYqnA6TutEi8oT4Gb+sMldH2ivgyXTVQ8
OwO97o/iArcwMJeL9YS7DTfKOd95UE90CFzLdgl9s+ZBlKu33lxbTexHQn2/
7p78Nx7IfphKWYoVO08tsx/m5VEzdO1rI7MflrLx43d763pmP6xV6iPl/aFq
Zj9MyUectla1gtkPa2B9ItcpW8Hsh9GfD7pYd1Qz+2Hjf3dbnWlvZva/fkwf
pQTF9DH7X5bNB1qmfgwz+18iEsYyVZvoWAAdPnT01hSsLlZZq2LMwGosCr8+
PJyBt3+t9geJMnDa9pzbei5zMH04puytA5GvJQKfJ4UtQO7SHVeKUgawcEyH
QoQuC7Kx9Jet6uvEH4xmRqyvsyGl8cOG4/rxYMs3XTJ9lR0JUfHKtk/1MMYX
3FRly4Ecnd5H/Z3qghMJ1w9quHGilAx1kZ2baJD3zPNonxMXmuIaTvAfHwCu
x11st7250Zbnrv0xxPv2V6i4ftGLBx0xNj2psHwIko6KBy3z4EVbiq1r32gO
wru7r+9+f8aHtGw4pIu8+4Hs53UtS7M3eTqIyX5eTHMx/62lDNxvsY2D5/q/
fHXFJEKw3OFfPMl+33TlYbc3Hg3Mft/jXeqqoesbmf2+FW8fDz+5Usvs9+29
+7kwxLmS2e9z770VuulHObPfV1O13/mDbyWz35esVLQ/1LQer+ZkeXPKkgFN
YvsZTfkD+HJ6SY+10zhU/Pltfkh8FL84vXbLRetJCPtsNSI1Rse5uZM3uRyn
QXzH7Q8lZgysOyrAdcF9FtI3DTbPWtKxLhfXwDa/eXj44N6ePNERPNNwq9Un
bhHq93FmrkrrxdMbD9dS2tlQ1oDY2T9HSkFg/3jhTB87+sNv8SRFsx0stzcf
PD/NgSqVkwxSmnpgwhfvz53jRNxTQ1uDCvohqSXo4gQbNwrrlqiPySbqSR+e
mLu8POjwUKlV8HoiXpvhNoWDF+V/uFB9qWQQphL3psnx8qEvn8t+xD8YAKV6
EzauCBF0RUWx17ZzBG+xnz37dMO/eFQsy9GRyPwXj9GmG+/s4iLA2PydrPKq
emb/83xa+fmlIY3MfuebN6nOvmeqmP3OpX5b6841lTP7nSq2g8MyGRXYhdUx
nndsAu6c6SvvDyL2X2xh1dKjUxCVMzE+SOwnyhzfUlzYiPpjk1Nmzx86zpKa
POb0kR1x2W+XlcppgfXvnh/gyuRECvquStGc/ZCRLFg+nMmF/OpTE57eGgTR
J3fOTRRxI8buHpgn1sulW7zM3uTzII8DjbkfpgYhUE0FzbD/P+PPsOSG/JNU
6IjQx6HnG/Fh7UHX7yylcD72YiqrYQOzH9s2r+a2qqiC2Y/l7+K2Tiorx0pW
ISY0vR6I6d2YuyGkCn+JyP8YNTAJGhtNUtapMfC6x6cnqQvTsNlAQuTpcQa+
eJZx5J4CB0In3AMPHemEEqfBvR77uVDZz4fdguYD8IlDsn3uCDdy/LK37/fc
ICg9fT0zp8GD/Nu66k4T+8WlGyecNh7iRdZ7Um/xBQwCeiuV0JgjgmREPpp0
TI1iH6MzjtD+L34uv7/JToYHgmveu+Z4mTosL1Ni1q2fA8pPh/Oz4xuZ/ePc
TWIByzkrsBgHb21jVxccf39ygN28AiuvH+VP+TIFIzU7HPusGdgrnar1/PcM
zKT3OxXQ6fjghmKfgTdciPXuQlDvzkEQ8tr6WSmOGxlEfWDUEs9b/vmzsVM0
D5rwNHujxTsER2P1k7ePiaCTt+5nmr5g4MPUR23b3iTBnZtp357PN+CoI+7t
I23FEBSbsOJlUQOzf33NIyN93ZpKZv+6ycFGFv8sxxHTtiZuX4n9qS1r4uXV
DEz/+EHhzq9pcM51Wxp0hYF3HB3j3i/AgTJgW4PT5Q7YZlP/ZnojN/oQ+Nj0
ZccgyPuePr1flgdFzBaGrCHWy421o7EWD2MByZyer+6oxyZ7oqLMwvIh5uZ7
pStEPUX2x0sKF766Z5Xj4M5jb4OVpuEEf7+06m0G3nfstCiDwoV2KwQM/3w1
CJLeeCGljxsNWei6/xc/xzZhmsyddODKnDXy8m9k9tc5qo8EaRL1Sdt6kRux
7Z0g1DPqd2msHP/UlOgslZuClANmH1gvMbC2yQI+pzYDKxJHL3zfwcCbQww2
sZhyo8KzaskWS4dAxa8zMtOEBy1tojZpEvudXn8Jvkr6v/Gg/0Fs9aMT2aCV
tO6i9PdGZj/fwrhY9vLaCvwh/vXmRZ8psOJ8xF9gzsDe3E/qzr7mRnNt+tBF
5Jf4wcybfS95kHfYgONe4u9FNJuPHh8QQW/nU7+UnGHg1KiONwkfE6H6epmO
R24DLvjO+vT5sw5g1D3oMyfysf4u7WOZr6bBzk+9rO8mA6/JtuuVmGVHjqWC
D1la2yGG/4uz7koe1HV0aUY3UR++/j58gc8vDw50GoQ+9mhk+gTeK4ytOErK
McvtsdRW4Wl4pvWNVkLkjxDeVXJ1DdxoYrnJ4QPE/KeFW0XHuaWBw2IPRdOh
ER+0bebkD+sEOdUoZ/O2ckwUBYfT+KdgzztDDjjFwKZlqg8WLnCjw7ZXpG9y
D0GqIPxtuciD4vfyR58l6p2ZTx5pRy1+Q0XVe5NX0Y1Mf2F2o4294VA5rnx+
dMTy7xS8Odb6MYIYDwE8le5iadwoLiY15THxPIP2J+6JzYmggmwNO1TPwJUb
ZKW+BiRD/uypGGmFRswhYqVZtrwT8moMImVyynG8wMQmyX08yGX9IeWDxPj0
1gkq1+HpAPMM/99NqeVYQSfivvb5aTDylbVUJeZnON+NqpBpbuQQlxOvSsSL
Y02yfLR5Jpy6oi/55X0jzlyde79dcwo4RzuGgq8yMPXa/QJWJ25Uv/VcLHXF
EGQJeTm+c+RB/UNnYvesGoIVUQtnQmf/jR/Sv2inLjv4iFLD9C9OOSw34CLq
b9K/uGC1ZHeWWz3Tv+DzvKtmdraa6V+obQtTW6lewfQvLjilHvwsVcH0L3qb
XO/YFFcz/Quh9VlFjLRmpm+x1OS90fFnfUzfItfB92tP+DDTt+D5pl9muIaO
uyMVjjVcm4LEtuKjEcR4S+OpkylwngFz5bumtuIMLCjMUl5tNwfcfB4n0f1R
/EZfvu5c8ALo2lyoOlUzgA1DhTjTzrOgPbZSyXFLu3CieLmNiwEbopw4aZLF
+xWGZFbmJeizo+ZmeHb9Yj0UNlwvfGfJgYKyactV27rAstL/mv49TrS4lvWd
1HIanF+90BpzhwslPBI6u3dwAKhGv0qdPLlR6Y/g8ZuSQ1CYeW6D3UMe5Dqh
IvWIiIfu4Z7iehdeNLZRLL1dexCCCgs7c3z4kKN/sToO6AfSH9noGHVE1XwQ
k/6ISVtWaOMiHU/Fh/h1Xf233glfN/n11v5fPEm/ZN1UU1CydQPTLzn46VL4
tS2NTL+kNDDaFlvVMv0SvSGX99xPKpl+iQYP28h3Yn6TfsneoSsyfS6VTL9k
Ljq5wUezHpd4779RdZMBAZtS7xt/HcBx3fnLH9qOg7rjM5NFoVEc1Gx3KNBk
EniT+pW+DNFxmEyHeYjVNGTE57vyWzBwxfSP23cdZ+Fiq03VNXs6/tJzSCP2
0TzsfS6vt3P9CF5cxbFx6/tFqDBb7qrU3Iu56lZeGGxhQ6IbTJx/R5TA40ti
2YlUdrS3REPi8MZ2UFuMVZAa50DsjfMco/k9sPLrgF79FCe6q7BE/Vx6Pxw2
Exj5scCF0sIvHhLKGAR2szbb+5w86I7cDrnadUS8Un7vmGPhRXuTIl8++TsI
Yd+4R0c5+FBSyxrl794D0LnfJaU3TAQNDn7gPFQ5gtk8sFTQ+n/x8BR4wtb7
6188PqmIuO76Fg7ei7/en1msY/o2OTeDdDzfNDL9mo0nHmn3XK1i+jVjN5QU
s4h8Rvo13YopXoqJFdjZt7Tw8MAEjLOvTLbwo2M1I6+m1N4puFEsLZpB5Ev1
+0e0w2dmwKPx5Ce+Cjref3DFoR0R7Mj2G+32Z9sWOJyVeUUijROxuBa+fDxF
A+3Dj4y/pXGhFOdHrVI3BmHMRGvdQh43Ub/YCf5Xb2n8EtiSmsOD1nKwsQ7N
DMKtkyxLWNn+fd5fARuqfflT4dDsaICKViM+9QW2hKaXQJJ8XHCKVQPT/4n4
yL9BsaqC6f8cshH6sfVPOfYU8ArbcKIHBO/9OP3lURX+LC+Z2d41Ce/WZR0s
VGXgGdr+BYeJaXD0u2IM2gxcbSMCO+U4ULcXRCXLdsJQqMSl4D1cSCVa9MFb
wwFQCQh0TFfjRoO528oapwdBxMImj0OdB/nl9u6MJtZrjSQnZQS8iBGSMSUa
PAjDLHuMMrJE0HojWUvTnlGMrq2UFmz7F7+RhwI9jnHPQcKo/8QO7jq89/Ea
8TLxHJj3Wq3ImtjI9JUSTIfPneWvwCYRU/yiNV0QmtsyN2hYgUUfNQlrfpyC
SAPOHDYiny/m+v36/msGpl+Lb9aYpOPK+IMbPodwoe6BYG9v+UEYNOZwUIni
RrcHeVL3Es/Lo6q4OTiSqGee7pNayz8Ea5LXPdpDF0E/NZv5Mh4ycIRYi7b/
miTgFFTokhxpwIkfK5/WhxYDJY9H362mgelLJQwfeWklW8n0pRRPh7drEOtN
+MNC97SoSbhSUrHMjsifJbzPdvF8n4YDsuanfIn15MtNURYGNweaumOY/QU6
IGvhpNLPddxIVnODa0PrIPCby0ge2kS83yl7TCOet3V3uJfCkxho8ZKDtSX1
2C546sxZ3XyQOMbnHmfZyPSxXH6ZX+P8XY6tj+76ICM/DTfPcPr8JtbX4rrC
T4nNXKhUpX5BOWgQZk2DizCVG4nXNL7tJe5fveTWpSdTv6BWdPPDbu9Gps8l
6PW1WuhxBZ6yf1SSXd4Jog+4OlKJ9Tu12mqWZ8MUFAwd2TJ4noFlSnrze/bN
QJ76jMK63UR9s6kuHd/gRkpn6m1OCw3BKss0y/wbPCiK9+LeTUQ+eOPTnvJu
5N94MGE3KTLnyQblr6WiH4n4k/5Yn2iS5D3pCuwq+kjh+YMpOH1lN58nsZ80
7TF4rxfMjeR6xZzHiPv1uhzaxBnEgwbD+TlLlxH1Y9/2rDM0EfRySOyBArG/
EKvbJyAskwiXcNMbSlIDpnDbjce6dkBBUbP/TFI53v1q7+lTz6dhzOLRwUfG
DPy6LYhSOcGOvATCRWR/tsPj/gdHDcWIfMYfIGpB1FtRwmocdM08iEk6/djO
q5Hprxn6eyi5/i3HjbWt2JpvGq76p96fJPKHQ9/oWGsNN3JLs3zuTcz/oxX5
y/nZ0iDuUa5itVUj1s3XttzwtBN6FD5XNTSW40SWfP1x9imId5e/16ZFzFe9
HxKZZ7mRvs43h06OIXg5KPaaqsODhiUyTP/jS1z8NUbbZH9D86d5I/e4RqYv
p2Oi+CKVUY4/jytOshRMwTvBl9FixHiw6Y05vjqZG708a3VhH/E8uR5Lj0nO
iCDOje9uPSpgEPWS+3MhsWR4Km7SVyDViCWN2xO6OTvBhHXszidcjp8NlIxs
2MWDHobpG/7Hz97HcO2zmCTGnwTrbuO0csyT6uNF0ZqGGj3j/rU2DOxGUw4L
H+dGIxf0h1cTz3tNW/AN93AGJBtbpBaFNeKMmJWvJdWm4JzBLKOU2I/cGZ66
km3PjU6l9BTJLx+Cd0NXDkXb8SABt+FKHWL9LwnPYzGd/jd+3LMFpFTcs4D9
+n6Xw8R+bUfzJZUftlPwc97fN8uEqP+jBfea+XGjXVylA7VriP1h/MX8Rn0i
/oPpa+uI+NOuChrYuU9DX+622Du3iHz/SbHFRpAHtayumDn8H78r79bPzs6F
zDes15QDG3HwqIvWNe12Yr3fvGNzXTn2C/teGjQ9BayUHlYeewbeFfvOe6iU
G83vWSVHI94v6w778T9cP8Ep/6arqwGR3yx3go5ZJzhJ2Y64VBL1wHKbp2Zj
k8DePfDV6AgDn/vye9v4CWI8p8/49RPjbV3RXbwQngNeL7ykln9rxFczuDg3
JU+B7sqj3j+J97st5ny7/FduFDq3e+k1Ih7Wb0J6ZCdEkMIjFwGJKAY+sSTf
Y0VXBxydudx951c51vrs5LlzKw/iULq75r96ufJUP29YTTtwvLHq35dZjtPd
rgZzqE7DDfWLv9/ZMrBqXO/O+EFuJKm5jh5NPM+qb7+cChnpoNyS9DX1RSO+
/FWgIdmcB6VELUxdJt7vKfXf1m/9s+FvlanQLmL/9GlzosCJMG6kwhXpiIn3
+dXg2ca74R3gal9IX5tcjou21CacWc2DqI13WrWJfCS9hC/xxKppuOI0buxD
zJ+fsocN/rZwIyRfK9FGPG8STULeTWQKApaoVPsQ+6mGrSYctfo8aAAly8UR
9fzQie1CVxN+w+6DkddOfGjEU1sv9zXXTYHS9Q3dy4n7JcrM/hDMJPYbOQdu
5BDxWW7q9VloQQR98jzNv9jLwAOZc5QfmzvhRbjFRE9uOa6QX6snqsqDbpgO
jv63/7VlkTJRWdkBLMvaDjxLKcc6I8lO6VemIaf5e9shKwbOlnvK83yeGy2d
07Y4TuSn6MErGUdomWCPlspujCLqk097PpbO/xu/zPNrzZl7Q0PvHiD9UXv2
NYfXXE8G0h89OVZyYC1/PpD+6LeTqz/lLfkLpD+qnlqUrH+/Ckh/9F7k/V9i
V+uA9Ef7NZU9R543AumPnrPL37nTtQVIf3TKeOj6149tQPqj00hpUNSYAqQ/
6iLo7spnSQHSH619JSb38nEbkP5o287eCdXMZiD9UTZZ3inL+TrmeVbFqaPT
F0UqmedZU0zWVoh35jLPs96eGJa8PR/BPM/aOxGlJSiTzPRHI2xUe6iGfzDp
j1Jz4jL7f1Rj0h91w6qWOUZNmPRHi93OX1qwomDSH1UX8pyTcOjApD+q3y/U
8kmkC5P+qNHekdghHiom/VGxX7EDYXepmPRHe/ec/OBxi4pJf1S91HmrRGcX
Jv3Rkll+i2V1nZj0Rz3FjE+uNOzApD9arxTBtTOBgkl/dDy9aa59TQsm/dHr
5ypwaEo9Jv3REVHrV3rS1Zj0R1cfPOj1bEcZ0x+9fqlkpH02l+mPjs/tPjJl
nsL0R0NDxYLNWsOZ/mjIU0+nsVovIP3Rzgzjss11H4H0R1dmbTe5VPQZSH+U
18dNSx4SgfRHmy+r+2jpJAPpj1JvH/2jYpQGpD+qyb9Ft20ZBtIf5faV4RP/
mw2kP5oW86opQiwXSH/08u+tLQyvfCD90Zmn1leSkguB9Ed9vr9wiWsvBtIf
TXeqC/FhRAHpeyLVqa2HJZuB9D3NPKVXb/7cCuT5U7QvInFyCwVI/zP0+2bx
FncKkP7nxI0pPvHtFCD9z9Rg8xbq2VYg/U+rlhU79YIbgfQ/t+g1rfmoWMP0
N4NFe+tUttdj0t+M3mmsVHi0FZP+ptqF2NTlD9sx6W9ycEbk0C92YtLffOt4
vXourAuT/qbteJNKzSkqJv3Nv6lGmx0eUDHpb/qraK/oVKJimaHjgaECAmj5
m9MmIuZd2InP+N2NVYKoo9rhrZZsJ26paI+NWSOEqlIKywQC2/HS1WNaWW+E
kYR7Df8G+W/M87XrLAJ8Xybex6QPin5IWMv/DQPSBz3stuHnvGUskP7n63tD
O0rqioD0P8WXbhl4uu8lkL6mQGq+baleE5C+pkC9lRRa1QrkeVizPzvtB9go
QPqblVkeHHCXAqS/+eISG1usDgVIf/NP52rWiulWIP1N+cND/r9Sm4D0N6U1
HtzyeF/L9C/Nnqnskr5Xi0n/st5s+N5uSjMm/cufVsZx0gsUTPqXFrHDioMD
HZj0L08qnvj5+HIXJv1Lo4NN1LLtVEz6l2aX/m6e8KBi0r8c3mrx3z4Sn/hQ
F6dZyI/O/rSztvnUhRXyS1nP1AuguSrLcqcHndgxUVVtJUUQuR4b5+OZb8dl
NndhxFkYKWv87HCz+M4871vdEuUs2xaESZ/TnyM0d8uhYCB9zvOB6rmZpdFA
+puhdkqvcjWLgPQrB4skjkVXNgN5Ppdu5ck7ua0NyPO5ErPz7zy0KED6l5/7
J3vOulCA9C+nRiw1mxfbgPQvW4KpXrdftADpXxZ/5b8afaGB6UuWp4gKSr1t
w6Qveb9pU3QWawcmfckt9OLb2351YtKX3G53v0yinni///MlJWuuF4iYUjHp
Sx5vOHH88D0qTtbUuDl0mB/9KfghaLOEijn2Zt0bPCWAdIO9nu/e1IXPFFrq
+6cLo+3Neis0aqIx2+DSqNF9Iihe6+lx/82GTN/y1ZqsRpH590D6lU8Cxca5
rxYD6Vf+mAzMStF7DKQPOa4a0sg61QikD1njsezFtrIWIM8T54h62DvUtQHp
R3b3eX61saEA6Ucm+E7lpxpSgPQj9y28P5FwqA1IP3K4nDNgDTQD6Uc+eBJx
sOhMHdNvnCmbH3B9XYNJv/EZS1tN4qZmTPqNd9znnMRTKZj0Gz1Nlyaqfife
9//8RqlbLX7R+7ow6Tfmfty4tGk1FZN+4w3LTB1jNyom/UZ3pzLfMgMqvuL2
NnldFD9y6LhAfNguzLOR9XthsgDS+OtkJ/m1E+e/N/OryBJE8lEqhxS3d+Ct
kip7eSyEkdra7Zp3TX4wz0tve/vVfXFnKCZ9SbPRG4r2bs+B9CUFXIyM3vVG
AelHSry8nV/BUgSkvzgSQln47dgM5PlmcSG1K9nDrUCeb5YNSX2bpEoB0m+0
wp5ij4l8TvqNW6uybzuvpADpN4riLrOcyRYg/Ua5HTWm7jMNTB8xUXgpNWus
FZM+In98sNT473ZM+ohT2WkVmj6dmPQRuy1VOl6kE+/3fz5is+WmwwOXqZj0
EY/VSs/YuFPxpey0ZNNN/Oh0dvJy3g1UvFzE83GuggAqfLfP7blmF06wVTwX
81kYWaV0ze+y/4TzLnrbXJITQSqX5ucyrplips/4LOu+sGYEkP7ixXOv2OMl
i8G7gL7riegocCjfS9YVp8C06llL85UMcPhrdMzUlQJ61wMytm8Zh4+qZgdK
D1GA9BM72px5emJbmT6hz46Tq7TdujDpE+6LLdlXcpCKbz/XbqW38iLFT/yX
Tj6k4nfx7y5d7eZDwWaWN2cOU7FAhpJYu48IuiPatG7i+2umfzjetozt+tsY
ENq6mlVoCR28Hly9f0aPAlxeHUYismOAFGJvb3egQOFKrdZimQm4Khs5npPf
xvQBf5yLlnk6SjzP/3zAXxlZVtq2VJwyZ8khYMSHkua1u+i3qZj0A6P+qhYp
e3wA0g98XFb84WdEMZB+YEdkyulAcwcgfb7c9dFfUF4jkD7f/siz0k+jWoA8
L14YpbhqIbMNSL/PvE6NLcicAqTfl1rL5ZBqQgHS7zv7gOOuoVEbkH6fTM9v
eOnWDKTfZ86/aFEZU8f08y5kRPTFy9Rg0s/7tvOYRUF+Eyb9PAGWkN8ngiiY
9PMS3K+nO73owKSfF71CVm1QuguTfl5I0nGhDyJUTPp5w72sAcXORP78n5/3
5VgxxfAmFfeYu6sIvOBH2tHnh/truvBY5Wt+jigBdCZCbawkpxMPvvZI2pog
iPh27GrQ0uzA+jZvlURvCqMZMb6MZ6bJzPPwTmofVPlswzDp+3mUr/f9tPAU
SN8vRi5eWv9mFJB+3xOxRbaepkIg/TuawDa52mPNQJ5ft8yh/L1S1grk+fWy
Z4IrRHZRgPTzzA2MPQXuU4D089S22NVs3kQB0s/zlvZY9kq6FUg/74bGxc0n
NRuZPt3FS8GDtWGtmPTpOGZP7tX40I5Jny7luYWXuW0nJn269J30Cf6vxPv9
n0+3et2txrALVEz6dOF/cN8+Yv2Xm79tEC3Gj969/SylIE/MDxZTwfjVAogf
Hs8L6nVhSkHA6aQPwkh3yRmfZq0vOEro6IWnUsR8XrU6JWDQAZM+Xvmn0dzB
y+FA+ndjW2LmLWaKoNHp6Zu94yMQ1JJe0Uzs61J1Dj5zmKRDiNp4lqwzBfwE
7t114R8HVbEjd1+coADp1+3/rSkRVtnK9OF6g7znv1h2YdKHMzNMUPXdR8V8
D71/LinjRREa63b2EfWl9cBFtrBaPtSy7VGQ3gkqLj7u2Wf2QASV3Z6ZEPcM
YfpzZbdZLp7ZFQNXKCnGGcOjIPJp37FPRL2WG1b+eA33GKw7+kA/wokCMzm7
Xq/gnYBXe9jeLu1qY/ps8n+/7FxOJZ7nfz5blew63yELKtYejmuTOceHyg53
ZrU5UDHptymcVnkZkhcJpN/26si9AyvuF4OSx+qKp9/p0Bpc7/7JngL0KydG
l5eMQayM0UtefQoom7JZa37mRfmsyon296lY9MafsytT+JCX5+sd+ZeomPTR
Fj67fi+5Gg1zRwaVJBNGoVl7zrxRnQJqJZ+LlH4zoJ/IQsfcKHD10bKp4i28
aH7d8J+M61TsWi0VbLiTD/HYfulZ60rFeow3w3LJRD60i3xQL/MelDff1Lq2
nwHJz//umiV+vzlMmL12mBeN90lLyxL5NPOux+srCnSA2A16d65RQMNmTJ3n
+Bj4OIfQFmwpQLlfuCh0ixepnOko2HmHitfx7ZQdvsOHpLUsT7taUTHpd01k
GdT0ZxcD6XdJrh/iZbE3BtLHihPecybuUyOQPhb7i4t9dwJagPx+gr79mtXW
iW1A+lmvruS49JpSgPSzVmw0FnYwowDpZ/lSzxyQd2gD0s+iTqT1bHzXDKSf
5cc74qldVcf0q36nOs+YD1dj0q+6rmjA1RvchEm/6t3vPZRdHhRM+lWmm3fY
X/HswKRfdS902Z3Lq7sw6Vc5iGjJXxKiYtKvsqO7Rh4h6kXSrwp9ApdZTYj5
2mmzeN+X2J9H4ZqA5i58K64nJeKtAMpeqYnnSjoxywq/Ar1YQWTwSikv41wH
HltVtkPimjCS1Oz6PkNLZn7/Qo3MatkhvnBM+lrpZrpmSVY+QPpaJS19dW/X
RgHpZ2WWYXdi7gHpTw1fMLofsbMZyO9LmOequnI5oxXI70sY+D7pEUTsP0m/
6r3YvcP8RL4j/SqFol6VFDkKkH5Va9mBMGvVViD9quKsxwmC1o1MH4r3Jedy
u9utmPShtk638qCgdkz6UJTMm7t/3+zEpA/FqWS45EUU8X7/50Mt+4SDNXWo
mPShnMrCe/qIfCcSWr4zX5AfrfFTiQ0m9kM3HHTLN4kJoBOpGyPfXe/Cjra/
T6aFC6N0tbfFWipf8UvTTcei14ig3szdAyLvXTDpUx1s+rP7eOE7IP0p8W/1
bTJ9ReBR3XjSnzoCNeUN1bY8FFhxNXWtSzcdJt6bvS8i8snma1Z1kbNj0DZV
nfrjFAVIPyrtwbZJ4+5Wps/kPNURvsWoC5M+03COz0HVXVR83kVmc1geLyrn
Lj9zn8h3l7x/1KaX8aHIlwLa7SeJ/bTIt7OKbiKI5b7CEjB+yfSf9ELmGI6s
McClzLlKjDIKZ90bODafpsDGuKPiGycYELMrQ1OYyMeBK+SmVKfHYamipac0
vY3pI/kcDxSObSWe538+0r2D4ONvRuSfXg2tlBN8iK65SiLyLhWTflIc7eSf
v4aRQPpJ5f0srG+tiyHwadC1wPd02OLDohx5mwK+39FJ1fQxuFTmp+JgQNR3
huEtdZG8iB6nreFO1J9zrDIye7/xIf5XdXX1+lRM+kQ3HyaLrJKOhg/hyr23
I0Zhpd7QyrqDFIio26CrnMgAZcpkwSKRr8o/SjiwbeRFLxOGXLuuEutBaRb7
qBwfkurr2qJL7B/S0vIujSSIIJ9NgitvpEXA6x3NLUZyDDhS4CuhQfy+TEi8
9Y0eXvSXvStbi8h3RlV/tZLX0MHKKXDK7goFop3NagWVx6AwTadnG5G/T72v
cD1iSDy/f4/xKTsqNmevCHax5EO82rTHRTZUTPo5wu0TU5SEYjj9wcMjzJ0O
B7/5y6+wooDkuebUsQBedHq8pUCOyMcGQ8vuqfsz4FCwjz+F2B9czZprFZTg
Q+lHDMGYWA8uahYv2PAwYPFDprABsf/N9B44fr+WWA81Fxu2Es97M/DSpLj4
GHjMDtex3KXA9s5O5x9neNHk+rTqrdZUzDYhYPv6Mh9iC1x3dsaeimvuRCGv
XDp0BocqeRP17ZDVDbZfSbzo/4p683gov/fxf6iUZZgJM5IkRKsSIUvnUAmh
SLIrEpG0oUWyVLRY2hQlJClUkijRMBRRyJJ9HdvYxp4wfM/r93vf5/Nnj+6Z
uZdzX9d1XM/H80r9sfH5XvT+dOZv37GlZhx8CQu7ehzV59uarq2r0UL17Po5
WIjqtaaVw7m2xuNARLXcNAidb2TS+Yd7p/nhmomzjzrQeiX4ko729IqG36WA
4Eu8+j46H7x4GBA8yDfF5Nrfz9D+9X88SKozLdsmtAUQPo4jlzw1aWltgOBD
4jIlM4JRPUvwIdrJbzd8R/UuwYc8UKLe9rzaBgg+pKalelH+22ZA8CE7Ugy0
3fvqMN9hJ2w5/6GqhkHwHfnlStwW/yYGwXfQ2xK3Sl9sZxB8R/CR9mcF/p0M
gu9gfothhUp0MQi+I07/ZVuyYDeD4DtMLFbo+V7qZhB8h0Vk6Ks9J7oZwnH9
7dqhgrBERMS7sa2LoUATDj8dLQQldW5fFqhiMQRqRX+fTSLDV4mSEsO2nQx4
pkd5leNy+MpS26B3Yzb2jZST/O5eOh/PIHiRcL6lO+7I3wIEL3JpRiT482wS
IPiQNd9oz5bmlwCC33iiQen9q4j2r//zg+Qq3q4syWwFhB9ELiKh1VCpHRB8
x4x6yfd/6HkTfEeQ1Og5z83tgOA7ZFZNXcs2aAUE32EeqBCtF9yIeYx7Hyi7
k+1bGQSPcbfx5rUtdzoYBI+Rq93V7ujIYhA8BocvSerXc3R//8djnDLaZHLf
vJtB8BirKEfbVdF6W9Y/H1vLLwiL8q8ey9/Wzfi+rfp9OwXdzyBrvRbXLkZR
cZNp3rPlcGTv6w1CmW8ZlEcPdmVKiUKLX55yfTCAQfAcGU+3TJ40jgMEv/FW
X9H7SvsPYBkYuD63BdUfymmbPyxpB9+7x3sXWsbATYGwZ/wo3p+/fYIve3wC
yOX9nM40bwcEn1G2jf/+upFWzFOYNP3uajnaxSB4Csl4JZKACop/F//auxTw
Q7vDrxUhuh7TBhb8WSoAfTSzPKLNuhn1PoXLxK6IwjvKBoNNtVGYv/gk+Hbq
UW8yaOxJnYD1o2D/7RtVVvvbQc2W4PaXQ+PgTK3q/CcU79t15RXNRicBuX6F
K/lfG+YhPleaih9vQufzPx5CQNyO19Idxfdu+jV/AwE48HRw+r/1S/ARdbm5
bfu3JgKCj7hFUy0/5FYK9EQr19NixsCF2MlHEagerG/R9D+QOQGc0jwDV6F6
cZOjl1hcHIqvrR/hNIrHIwcs7+1NFYAuJqfNDjt0Mwie4VtoyfaspcnggklH
QVz0KIg8CfN+ABRv7R1l816PgzvxPZsN0fpbphanJi3DDzuch9GeC+0HSiM0
PykIQIe9c0796PtPSDcKV78Tha3Dq57QghKA0Sf6S/aaceC4Bsq3onhW/uBq
8kYWP1TzkueYo/ipGeCj2EkbAwY5n5t6UT1uyZv8LFJ5AjzYx6eu5tMOQrdZ
7nRy4Icbe6+Bg2g/v5wU/2u3uwB8bPzobCfa7xN8wL5JlbrK16WAtOGr0ZoL
Y2CH673kRs92wDRL5XwJ54dTNAG5q1fQ+3/eZFdJyDjouGOgPoeuhy+vTLxW
XAAuTedj16B4v6xiSfHEwhiQFjQo+YGe37GQL0EGVfzQh+/FoAg6X7EVDxlP
RCaAjlcKtQ7Fe7dzbtq/Tfnh29JSvuWo3n411vTqqLUA7L9mu28U1ePX5jqW
CeaOgUpvqeXx6HoenFTZEZTODzc4+Uqw0O/d0z/Dk1E2DnRjY8B/96e+7qDj
E3UBeG7fyTZvdL63EtZfb901Du76eu7djc5X7fmun8IT/FCug5rLj86H6G8X
3D3t3fOjFJy6WlT9ywfl580PQqioPjTPOhHsTBaAWd+tQRTKL26NfodnhsdA
oftZvquX20F6gPXInx/88IAOTP2M1v95eaEDCfPjIK/4eoEj+v92l98vKa/4
YbKOv+cCqhfGzPruZueMgzWOwo0pKH/3p8WLd20bB7UJ8XLJ6N9BTzp2xA7w
wx9a/tUAnV+6258M5mN0PnbXQj+j839VGK7GoYyD7pG0KDbKpxLhq8RzGvkh
p8uFq4eONzj3sGz8E7q+RGOzRHS+27RmTqc1jwN2LpXC+u/vz1EZE/UW46Ax
eY/eR/R9/a+SHALm+GH+5JWcdHT+RL/0vdSfP98aSgHRL93oWXSsv6Id+3Y8
tMJvzszUY99O0/NBR/9/5di3UxVSED7X+AX7dgJiaKM+WZG4X5rtsqp3VLIQ
90tfCSzZRH3xG/dL56Cdv9V8I+6XLj3hdm/j007cL71Abvr7mq8P90t3iP6s
qswexv3SzX1109a1Y7hfOmWz2anKaQr3Sy+MJzTeYf/D/dIL4kX5ncZzuF9a
YPesNN2Vi/ul3VXy3w6PzeF+6QO7iIGD52ax/7fiDxBgbvyHfTvrLocPm/2Z
wr6d5Vv+Ne51m8C+nfDP94TLDoxh384ZwyG59+kj2LfzvHvJft/7/+fbCRJT
XuH8cBD7doSD9f3K1g9g346Cm/85Ddl+7Ntpqvu1qj7i/3w7lanyCtm72Ni3
U7GnnHdBlY19Ox/b/V6U7GZj387OnAGwwZqNfTtLxYKkHM3Z2Ldj/u27mgyd
jX07Gufbz5j59QGiX0ryOBd19HIvIPqlIS+oP9wrugHRL21pVhskx7EA0S+d
KQsdcqhqx/1SJYE14P1EA+6XutiuUP2s1Yj7pUfM5bRVuC24X1qxjaOgu7wD
90tltyl+7tVg4X6pfpjd/sc/unG/1KwqJ13apQ/3S0MvDIbwyA/8X7/0ZlFd
rNkw7pfW/l1krvVlBPdLNcQGt9yPGsP90ooN7p6iDi3YZ1MRq+f5Wmsa9zMn
tXS/8cBZQPhsTByi9z0W4QLCZ2NBnnyRa80FhM+mSb1oxW+0HmOYZxJEa3ig
RPieMw72M9hfYzrwcdlNs3Hsr5lWDDJ08BnF/pqCpT9SpFkc7K9ZofOMMh04
hP01F5U5HsUVA9hfY+6/Vj0iqh/7azr4gib9ytmA6H+ynmyPCTjCBkT/0/Lj
mNldNTYg+p9brod8a9Vkg8wCeUdfOREov97d6coBNlgYfOTYJ0aBUkleFgwb
Nnhr+ivc/B4Fsl8ZR3C12YDDCpj/JkqFbcX1KZfq+oB72OPC+YdUuPhW/FqS
YB+Q2SfWOiexHJ4cP6NlmdMDiP7q6DPl5d/KugDRX+Wef7fK1bQT+3YkLixI
mC5pxf3VLq/HIR3J9YDw7bwdc+Q7S27G/VauQmW6Q9Io7rdmWURHOF1vwz4b
59wXhtsP/sX90KH5ZQFLYmcA4bPJub15xPXLHCB8Nr+LH2+LO8kFhM9mB9/2
1aTkORDyte6CVSQPTHLmSpYOzmB/zWrZeEejxnHsrzmz2fntPNoHE/1Tu6hm
GQXTEeyvmYc8T8h8/+evCbeXu3ZJaRD7axxWfdSQbO7H/po+5yeZtybZgOif
7hZnDn70ZgOifzopT/p3SYsNiP7pAxU/Ux11Nth8QvFkXJswTDHn68k3YoMj
LxV5/fpF4IGw6rf/0PN8mZ1Vu/ccBfLuztUIMWQDy/S8BdoYBd7KI33xm+kD
+oMVjnd9qFDfUuTL7r3o+ZLjVAemqHC/y7Ru3+peQPRnx8bX74w27wZEf3bs
DYfFN9eJfTu8lwKdijrbcH927PGjR+TeOkD4dgKOxmh1yDThfu267MGXXltG
cT+1Q+Qtw2XFP0D4bEynEtffqJwFhM/m7Cl/gX8GXED4bDyv9B2O2MoF1zhz
GRuEUbx/6tuW1D2LfTU3Du2gjVBGsa/G4tlK2yfbOdhXU5uh1ya1dAj7aqrK
dKbmLgxgX83mA6A7z6ofEP3XhIXqhsw0NiD6rytE2vzG97NBsSlJx9eBDDVY
D0XCULzWG71O1bAXhgMTL+yDARtoSsqa73cVgSHsqSsXDrFBOZ/U13uqFLhJ
179tqRUbZHWz9tq/p0B719F0i01slC92c89vp0KRwLn4qDd9IELpqOLJj1SY
H71TVrG4F/wJvRkirLUcLvVSoe0z6gFE/3dGUNElTbMLEP3fWxfMszkPO3D/
d/jB/sv3BZsB4ds5W+ptmHeqAfeDJ6MytKmrxnA/2Htbur2+UTv22VAfng35
0zSF+7VfFppfqO2ZAYTP5vl5LX6nkDlA+Gw8nsgHqntyAeGzubVV9NKL8jng
n3ur69IpHmj8Y6HRWHkW+2u0Hr6ffSkzgf013g1NW6HEGPbXvHu45FKq/wj2
17SeO7z2/r7/89f8dVrrxToyiP01z+99dezlGcD+mkCTymFFwX5A9HeZ+lan
ZIPYgOjv/roctXQdel5EfzeRXfFrYDsb9Oe+OvshTxi+S1/DX7SXDSLvJCb+
LhWB3078JRmj90v25MaLTGcKnHhncNvJlA1u0ewCQAcFRsnPLb3Hj+Ltk4E3
jcepsKl3LUxzQs/zVJdjZzcVOuse7+sw7QVE/9jTJklu571uQPSPlWNfpDSY
srBvZ3+6gt4953bcPy7PpQ/Xj9QDwrfjyXIoO/qmEfeTX+QFPpCeHMH9Xo2Y
SQ2htGlA+Gyqv7l1vbs1CwifjdG7mTeJW7iA8Nn4DT7or93LBUK37I6NDpPg
bUF3jzzJOeyr8Wu53E/aNYp9NaVbQymDtzjYVyPNPVJzdNcQ9tX0wswl7okD
2FdzOVN7U5ZPPyD6wy9499VP5rIB0R/OzMhZ8vowG8SnqQwPaZOhy52BozvQ
84js+GA/oiMMqz8XldF02OCvZ6KV8x4RmDmUHLbyIBv0/GsIz5OnQJnh7Es5
qD7aFmM1UJdAgTWudU0q6PO5VzqvxMpT4WbZ1iWehX1grsXP+2MSFe64yNct
2N8LZtnlGUs2LIf38uK/JwX3AKI/PSH32+X6tS5A9Kcb7xT53BrvwL6d57Wf
m/iEWgDh29mudLD9jkAD7ldvuuvR81++IPw38yxHy8yRGfC4+vSNIQ0uSD0o
se5P3xzYeMo1qt5yAdh+i7WjHucCKcbKYv90EnSfLKxJujwHiH40ZeJruuWn
fkD0o7s6DS8f6kDx5gc17my/ILz+TvLgNXc2sHCLOdD0TwiqNurEPtdggw1M
kakjC2T4ujQophf9+7T4S5fbPCLwyr7t7W9N2ECi/dBW0SUUKJRsNCRvi45f
pLftVxAFXs8TOs9A9ams0eqrw7xU2HX2fkEFuw/3u58clFr/Sb8eSKrfiD66
eQ74dgxPH6DOAY3XmfMFhvNgW7VOSIItF3yPihs9rEyCfLfSV8+JcoFoVa3o
uWOCUPpGxru3sWwwZjfjRTsnBPtjQ+XMUb4aHvl5mxRAhj9IfBb+KL76f4/f
p3VTBM6c37chGK2PLFGHIdfdFPjzaPPIYxRfNZW9XnTmU2BA1Ian5rJs3A+f
4iS5PbIew/3wyqW++nZh7dhHs0umpic4bgr3q8f/9n2up88AwkcjJC2qxnGf
A4SPJnG1iIamBxcQPpp88vWBhfY5cFHrmOQdex5YyRO+7oX5LPbPDNB4kvfv
nsD+mW+m4Q/tVMewf6Z2wl3M/9EI9s9cZ8lXanj9n3+G+iyooe3SIPbP5DEj
cx6KD2D/zACfnmggrR8Q/e3vP95rV4eyAdHfTm5aGmCuywZEf5vnyGNRN/Q+
lBxne+elCUOHTcqye/TZ4NXVo+fnckSgrvxhRgl6f4587y5dsKXALTKrKi+j
evGFYWp+dT16n6aPTYRS2MD93D+LBQe0nzA6cCzLqw/Irg6ZtG+hwgBxwy2n
XXoB0T+PDns1Kvu+GxD9cwGzw2v2+rKwL+fnvZ26x5604/758ALf4cfnGgDh
y1lVb9Bofr4R99OttWm6q+tHcL+7o5+so3Z+GhA+mo1t7bYjLrOA8NEYeJHn
z8twAeGjqdf9seaCGRccOCyUZ9FGgo9GvT02qs5h30xGahbpht0o9s0cVQm/
/SqLg30zZdHCwMlpCPtmHMepwjafB7Bv5mVveZ7LjX5A9Mc/uXsMR3xjA6I/
vjZcKoeD3q8w21/66zeRISov+CvQ88hqKA02VhKG+ff2nBlH9d4fepetp6oI
ZP2VvVttxgZnxzX+VklR4Kmi71lmKP+cnliuIx5DgVu337mluQMdn678VVmK
CrXqdoym/uoDHz7ekmqMpULVxfuOFc70gvCYMwaBa5bDuzIPbpvH9QCiP6+z
24jl+6oLEP35E6V6/AfWdGJfTpSvnHz4zRZA+HKMtxcV8DXU4349y6D4mUzh
KCD8NTIz/TIuxTOgy8rtbxWNC9ZZvk8er5oDO31+ptlvXwAafecUxdy54Mid
stWd8ST43biJ9P3uHCD68SJOvyWmf6D98v/68U/8rv7cNcAGhVkT8g4NgnDP
CnrSlBcb6NJVX9PYQnBHXy55El2/WY6CVB6HDNdPNqxYhuKbKaPH7eGIMOTr
S/imacwGBh9OKJvNiMAbdy4FyaD772Y/FyxwmQJNv4QwCtD6175yihE0Q4E+
Qj2aNmN9uN9vFtq24wOtHvy12nBggDwHxLQ12RGjs+CaUppXsuI86L9UwVxz
kAsqJav8YmRIMBfwyA/KckEXOSI33UIQSi5VkhZMYoPLRi2TPE5CcOW7FYqB
6Hwa4453aXmR4fk72R1nUXyzO91huueCCAzaqKt80xLVk+S8Q1e0KfCmLaOp
D/37wu31U6s/U+BM0/bGC4pszAPcMXv6ZY/WGPBzPtwQi+5zuZuHqtrzOXD8
RlSD69g8mF1u3JiG6rGV3q42YcVC0JEqJ6qG8mdcioWbdyUZGi6Z/BiK9osX
orurXjaKwOR9B0EGWl9d1DOK1z0oUJTP7SEVnS/BC6i1Xrf2OlkPpHY8MTvL
Qte5ublBXocLSvacUgDzC0B3vbNxizYXhK1N5GkAQvDpqcDWFJSfM7nRDzNM
yNDsu3piObpeiSKnQ9aWInDgb5DWQQs2sCFdVni1iQJVJZ3L/6L6eAI8i455
TYEvv6r+6t2K9kemF8WXoTzy8KL0XTJ3Dkgc5w04eGEBfDA7l/z0CBe4fiZN
xwmQ4auHzSOBaH90p2eqmCtEgcma+rJL0PMelMsLa/aYByM7RnovOXGBuxe9
f8M1IRjSkPXpGHr+PHoqKt8iyXDWvz/+DTq/eKkjBsoxIrAn7ZXOMXQ+GyQX
rpkbo/VhfNuYhs6X4A+26l7z47swhvmD0E1GAh/ftmN/S/uJe3ZqgVOYD7Ao
zPlbQZoBhL/Fxu9F3Uq7OUD4W66+eWKQfIILCH9LdrZM/k/2HJiaOfBR7BAP
fDUdHEp1nsW+lmqBXWxdywnsaxmTfnv/pt4Y9rWckp0MEXwxgn0tEpL7O3cH
/p+vJYLrcIcSOoh9LSWjU/fjVg9gX0utlEX3Aal+QPAEtjEWwvvuoPj/P55g
8fy3s1f02IDgCYI42dJbUTzL/nLTV++FMNz2xc/7xh42UL2Y30z9IAIt/64q
80P55eo485y0FXreKSkrzqP4tpVV1R5bQ4HW2ffc2kXZQN8x4BXVlgqLddoy
qT59wMPXKn9lAxXe45129jvdCwhe4UxShLtNfjcgeIUcuX5jcJuF/TL5WyxO
zGW1Y15hpeEKF+vMBkD4ZcKsso/9PdyI+QX2j7GW1z9GMF+Q3nV2eonVNCD8
LSpvrgdLH5wFhL9FfZDPU1uCCwh/S/Ta1BvfD3HBmM6xEzfqSFC6RrXwEZzD
fpZnSxrzXE+MYj/LqbXLLH/+5GA/C++V7yckzw5hP0te0+x8QNEA9rOIbdgl
6xHeDwgeYdPyPdzZH2xA8AiaG1+WKDmg/aqK5Ph3OTJcfdvHfwN6v0sP/Ym6
pCAMDVmVm1xRfvl28pr92EYR6JuyR3oDuv8ap91SWyQocLvB8adh6P2PWDPS
rRJFgTyan47Lo+OdjKxbZ+lUeNrETiWhqg+EJ1BPD0ZT4Y3bN5aM8vaBujE9
UbBqOXReRD3FTusBBA+hJLNOTCWnCxA8xF3THPNR9U7slzE4al3xsrgFEH6Z
k6vthN3y6zEfYf2sUVo7cxQQvpe0CG6zZcYMuLWy6923JVzQFFT4zal4DhjM
zKvHyy+AgOsaC6GoPuM9J/dTNJoErzZVGwQ8nQME/zBZ6TQ1XYX2H//jHyyD
6XS7EbT/3tzTW10pCO+faw37eZYNPg0HHMpsF4InY55ceK+J7q/ati0DvWQ4
8O/VkngUX3aKhbhL9glDsYkIT/99bFCTVhJ9fEwE2ouMGVBRvAm51bBpvS8F
HhsXnt1owAY/aFFtxlMUSEvVsL4w1Yf5isce4ddr5utAzwm/jVvnZ0HNKt4i
lY5ZsGFUcV0MbR44Zq99q2fKBbV2HkwtCRJ8V/W2pXc9F/xKHYisMBaEMqR+
rT+v2AAWlH/ytRaC79/Tfyqj/egB3w+RDcfJ0DFj77rLKJ7t+xZ4oNRLBC7W
2HxnEcony24N8odqUODxdAd7f1RPP/rEF7fzIwWGy6T/5axnY/4iu2i4QXHT
GJBVqL4bWTAHPvw7p0J6OAdOC/w4ltIxDz59Tet+jvLLPeNMvo0o6kW1+dLX
7WSDDIUjlxNLyHDjFa6KOlp/i+/v1sqtEoHRE1tbgtD6WgRMKxNdKVCOVbtG
F+0/CD5D10YzoeFtPWDO0gRcqrjgteq1wWg1Lqj6Ef8+cGgBPDdjjAbrcYH5
0wdFpupCkOLkw41H9f+G2h7dA3vIsGPdaP48ut5lKxYdbjURgZ7UbZGfUf6R
uZLSmLGOAi27ct45oPgj6nlZ73MSBSakn3xCU0H7D8rkrxlDLti8bsZKcXwO
yParCka5LoA/nQH115y5oDXS5IUOLxmKdo+vF0L1hbmzgt8yfgpsajJPXYGe
970eDf0Km3nwWEKoSc+RC5R6lr2JvywEvTv/WVbvRfl1RUCbUygZ5vT7P7mL
zi/iDMko664IzLh2fHwK3f+RKKUd9gZo/6XFJ9qK8gvBexhs36JX5jYGri1X
urwlfx6Q8j2k3U9yQaO0b8LCJzJ8mrPqw0sUb6Vu8Ar1MkVgTOiqLjK6v8KB
wpeN0rng7o5TwnrruKDn95ISvp8LoLK4c3+VMRfQrgXE3FYlQ9PCvXn+6PNp
Pvy7SmQoMPhC4glB9HnVseg1K/UXwOoZpqOuGxeUgt65C6Nof64bEbgH1Vut
dte7VvGg4w/8WqOIrr/VY2t2psY8OHE3ICbqMBccK1mh8cyXDPdHb1t0Hl2v
X2RYwlmI8jnPYZm9aP3Z8R4zXbtoASxNkiJbovUzGHfD/W6nCHyZ83WoAf0+
4T9x2lubHL2+HuxUMGGLWZKhwl+Lylfo+x4E7zsbuxXt/0xdn15H+Vm4s2KC
cnMB7L0vmmhtj+r9jg/7eEXJ0Hi13JdF6H39fqJYdJxCgRtErkv0ou/XP6pb
y/abB4W3zwkauXDBLfeeG4rRZOjS/XBjFfp+gje59eaLtGHIGOZN7up6aFgw
2rEvREaLtmLp2SnMg/Des3u+ffIfIHwhQ7Ng+rbFHCB8IflnvgV/QveT8IXw
KSjflhyeAx9tinkbDvBA4ZbjGzU8ZrEfRGfKxkvPcQL7QWTLhZjJhmPYD2K+
yuGAbcoI9oPsOEvaZ33r//wgkVrg4cfwQewH0b0xrPdefgD7QVawRDN0V/cD
gh9pEi7qFw5nA4IfudFHPiOB9v8EP/JRsyiDhtaLUo/19OJ4Yfiw08tTEeX3
mUlOpNQ7EWjo2Gxhgd4v4VvKJZstUX39wB8OoPwy9a5nJKiKAlPk5GGwOFpf
tbuqJK2p8MTTN7zbL/aBSLmCpJk/VPgnW6Zx3LsXEHzKFmX2pd7ibkDwKb5W
Sj83PmRhn4mdb4tdZlE75lN0eyPP3qtpAITPZInh5xc1ho2YV8nv3ZZ3hjmC
eZJjxsXyLYbTgPCF+P/WPxdtOAsIX4gozaLirygXEL6Qg/u1036i9b1LORLE
VZOgVPHVlhz9OewDKdtYfqLdaxT7QFZbC7/h1HGwD0QpPuH24ktD2AfiTr22
S6Z0APtA3Jk7D1681w8I/qTx+7GGHT/R+v0ffyInXH74kCMbMJ7BHw9XkyHZ
ZeCCHYqvNaJ28XdlheGRFV6XZFG+1n5k0ZqpKALXFu1cW4P270+VApawaBRo
cDo4Jxmtf+lPDpq7HlBgbR+/sKg2G6yjew63i1OhnujBY9TaPuBHr42efESF
Lum/neb4+sDcs9TpVSuXw1QnJ7GkDz2A4F/GTlxS5ynsAgT/IkieTFLe1Yl9
JiKDKCT1tADCZ7KGf/f3NZn1mIeh7uu4/jNtFBB+EWZ4WEBW8gxomVsjBFCd
f0Bl972zKO+YaD++oiu1AFIycqdXo/h38Pj+55sekuBs3aq7xQlzgOBdNuve
Cble1w8I3uVN3OvHI2Ns0N/n8CP8pyA8F81TtvM8G5yzSd4Y3CwEm+ve3RND
9+vURLYGbxcZyv/zmfVE8SJr5+GBZpYwvJGfWLYa5feY9dMmZ4ZF4Lv7ttf4
ULyjrTEI1PCmwD32232aUH6PZL3mKE9Q4FT53bwr032Yp9F9GkUbHqsD9mfX
RptPzQKTJAHJ3vpZcKXK5Zqo8DyQpJqrpO7jgnquuouQGAnWOvqq6m/mAubM
itlWA0EYukxQojCFDZ777Y3ZdkgIFm4Jv0rZzwZCrIbjr5xQPdK0rysIxSsm
x+z3HQ8ROBHY9uYryoceBouPhalRoE7L55gilF8U9nuPm3ygwERV/1j5jWzM
29wfUEl8Ij8GvJdSh/k/z4HFqpZSO8PngLexU8q+hnlgcL/O/SKKzyafGpv/
5QjBucc5pi9Rfs/t6r6WU0SGf+zP5lD+qy9FznO+l4vAY5J5Nm5ofd2rzZX/
4EKBaluDH1Wj/E7wOE+eUeN7KuqBeIvF8dYf6Do/O2lsUuGCOkHNv7LdC6Ck
POme+h4uyDxMfsmvIgQTvYPyn6N80Q3JEqt1yfClbESeJIo/Abuq6+INReBy
rSfiHii/B2sxVT8pUKD65iMTYSj+PF/UH1WSSIGhi3ndFdH92TO2bcN5XS7w
iz4rJYTircKm8gPqjgsgobQ09s8xLoieO3dJaF4Iyu7srj+E8vvHNTv/kJdS
IOfIozP//b2gu9jnuYH5PBgMkXW8ivJLZEJguK2vEKSSJz5Eouevcv3lR+Vr
ZDg5dqH5Bvo9vqeVpRfCROADYN+Yh+7/wUP69530KdDq4NGVOuj5EHzPiWDm
ia1Hx8BNi+L8yux5oLOC/1orql+7mudSaB/JkGk7E3kDXW8n77b80a8ikG/f
1i2D6PqOOhnXFSZzgZ73oUk3eS4YEI0jvypE+++jLRJb96N6ifPytM1WMkws
nAtMQp8X2b4m9pc0BWrc+9G+BT2fHaoqrrk6CyDxkpmPGtpv3kglV+8dEoL7
oM67Jyi/B6lpXtGfF4HD8YvZ//09WNnklKjS1nmgX65w5gTa36xWhcKe58hQ
sHHe4L+/X7SZJs367qTAvay+0Gj0vI7u5t7/PjMPbru/DAhD6ydDKkv6aSuq
x5qiKcXo9wnfhvLxtgnqvnrw7+45BsuMDH9/njqXg77vr67zz+dKFPjJQFou
H+V3UfkTmhkBC6A0UOwsH6qv0kwa1/wWJkO5kzzWuuh9Xb+uzXNamAJ9lWlm
f9H3R+tdVXY+Pw+CC8gRHFS/6f8Rsp96QIaeLnINX9H3E3xRhu629pdXx8D9
+n/7RJPnwaMzFeuvuHOBQfG41LQiGf4N+2w7i+5f7fsDZvWSFGij1jV2Gn3/
rk8uY/ObFsBj3Sd2jeh44a3R3bZTIrCK33nyv3rwoWBYjoAHGYYLnqvxRr/n
UbJlNX//PKDE+i/KRPdjJ0085P0fEdjCszrwCfo+rxP5HoGGZJjiq+TSjY7n
vBCWXSRIgfprDO9T0PeBJbPsQ87zAMpoLRk8wgW5b6z5H9xB9WgYz61n6Pir
lQ+2h5fMgxDvbnoLio9b00nNF00XwIjr4RlVVy64/MzzlsQiCsx5Eb/2v3rt
td340YrLZKjlpc1/AX3+cH7psmuCCyCjUCeKD52fgtzhrBs9IrB0LKyiH50f
4Yd4KqzvwLesHgTlKIjq25ChkZz2+2j0eafUd5+HllOgZovDmRp0/MTVRRdP
X58HG3QLT906zgUV84x0q1gybE7ceLf3/zv+/+eZpg4v2jEUPoZ5Jp9tmZva
h3sBwTN99Tpb/jmpG/sfhDeA7N9KLOx/CK/he3lRqQP7H+qurp0WI7VhnimW
6xBRHNOEeaafuubD8XL1mGcSLbiy5frxaswzbbHoUOc3KsU8U9G352aK3R8x
z3QjbPJq0epMPD/MhlYnJZhdieeHfe4eOrmwrwXPDwuUKP+39FA3nh9Wl7m8
XjCyH88P4yZcXDRlN4znhxn/klNnjnHw/LCoe6oLPi842P/wTaR6w5vCIex/
cBG75bt6oB/7HwLVR8Z2/OvB/gfzXQ/ZyUmd2P+QH3gn27KlGfsflAeHuFap
1dj/cHK1i8zd69+x/8HmW93pFoUU7H/gz48OKOv4gHmmywO2Rz20SjDPdGT7
xNiEbDXmmYzOHE8vU2nAPJPNvjeH1vG2Yp4ppr4spGp5B+aZrC6CM6KenZhn
+vCDl166hoV5pj7ViL9sKRbmmVY/d1HcrN+Jeaa/3jdvWB5txzyTZEdDg92O
JswzlUf3KJHKqjHPZMKQudz0gYl5psMMTv7+jC+YZxo3VRy/P5OHeSbP/t7a
Y9L5mGd6ULl91/NVBZhnMvi+tCBnGRPzTOvmav37njIxz6Sbd5qk/o2Jeaaj
ojx/9xgwMc+k+O+EtOZCPuaZtv91CKl4n4t5pjRXUueKqh5AzP8CWnNt70Yb
sA/iV8WLO4YjtdgHcSirRXlbYCX2QVyzKglfJ1GIfRD31rw+LCYfgH0P28Zo
W5Ys78Tzvh4H1xx8Jt2H533ZneymBOQO4nlfN0Junkl35+B5X30FNREfuRwG
wUc9L3wcE9c+jOd/rcpt67Y7P8gg/BGHo03cipaxsa9hZLkART27CfNKi1TV
zemr2jGv9OJRmqF0dQfmlZaN93aYNXdiXunAu6VxPFoszCstKDcu2/6zE/NK
G6KkJnq9OzCvpPWT76zQzlbMKxW+Xed8r7AO80qBh2xlFEt+YV5J5e8Fj5w3
OZhXahx/krNQnQv+TK04bbSFBn8FnYt/HFMAujf2ZKZn0KDRPcMjTHsm8FPr
vGCxlQ5pnJLp5HwmSDpvd4Ungw5XS8SNG8YzAX+xZt05VQkY+a3h3GB+Aeaf
0vjdbRQ+MDD/NHf7XliZcy8g5oXtdqDt+vSjEfsnAjc+0PUUrcP+id09UncK
eaqwf2Lrsb9KteXfsX/i8bLQCJkrr7BfItKnT0zGsR3PB+s0MbrsXtiD54M9
YKduVMwewPPBBsK9BJsmhvF8sDJG/sUi3hEGwVOlqhnX3TTl4Hlhd9ie70rk
hhiEr0KrU13zPakf+yGMeMgqB/0aMd8EGyNdjim2Yb6p+oKB3BPfDsw3PXPu
f134uhPzTQYMf5FV21mYb3J/VCssOtuJ+aY0BnW7a08H5ptiuK5mUpFtmG9K
11/h9SC8AfNNHsXDLxI8fmO+SVez86WHUg7mm0SSI8m2ernAKv4E9QCZBtcv
gwLv7AtAs+vW0b/3aPDiyYoDb7czgeZktI0WlQ4Futl1hzOYoCrKdcXuSDo0
GymMTPrEBCmXofC0mAScTEhy8xFkYl6K5POyYpNvPiDmiZ0SO2t/gtKAfRc7
Jp3WBWfXYN9FZI3nUNa3X5in8pfSis1wZuP5YAEah/hSnw3h+WDhascGjzA4
DIKnyvZRgLXNHEbad8HScjov5Pvsc9EH5SeCb4pyNQnhspox37R0raD4wNN2
zDedHv6hLrS2E/NND3fbvzm1mIX5JjfZs6uWq7Aw39QhfrmWJ7IT8032/PGS
hybaMd9UoS0fOV3WjPkmq4u9x1vrajHfVNklmH/atQTzTVZ7bxrQt3wBFial
5bvNaNDD3tChsroADHOeXDhRRYMrSiMijwQwwVffDY8899Phu51PlikVM8EF
c7OOr9V0KH5aJGXDZSZwW749nnNQAl5YqVbx07UA81IPBCV8vYy+Yl5KTPfp
R9uUXkDMF4s/8mJ4ZlsT9mkkCe1p+xRbh30a724v3+2fXYV9Gq/PS5gX3i/B
Po1J/YVGS/n32JeROvNx6Ta+NjxPrCv/oJWncA+eJ1ZhtGr8g+IAnic2brgg
r/ZmGM8Te8DZAe4ucBgEf9VT2S8b68fB88U06+Su53kPMQj/RrLC28kU337s
uyj3cXDMbWjAPNSyT2U1/I9aMQ/lS1scaaPfgXmo+1Ib61PudGIe6rJLGO/K
zSzMQ6nFqgbFkFmYh7LLV0mxlejEPJRbIoX6ktaOeahTrgZG066NmIda+nBA
yCS+CvNQ9pvyvyxrZmAeam14xjupmS9A0pvaaT4nDu1iDqst3lkA6q4filgZ
TINakpYbilczQXSNd9lbHjrk1aL4XnzFBH2Knq4uV+mQPvBAxArF55lDhes1
l0jAr94lP0I2MjFfZTv45OnvvHxAzB/z1TPJtwpqwP4OD56LL4ssa7G/w5Qn
qPyLRwXmr15tVbCUKOrD88T+FQp4CGwbwvPEBg42LqyO5jAI/soyrWfOZITD
SCz6un10kgcqCz7bpZEwzCB4qNLCvjKX/c2Yh6pZGT+v4dCOeajlAh/HjLkd
mIeqbs0582G0E/NQnu6FWaUaLMxDBRv2DJW+68Q8lK4ZiNZX78A8lPRKjb2C
N1swDxUf26Dw5/cfzEPx7li1S1S2DPNQ/SZH+TcM5wBx2bNxeyENNgoOLXzI
LgD95AJaGJMGZw+vHPvhxQSrDvMt6wB0yBfzWZ1TxAThLMst7Uw6LPSNz3CK
YIJPg9lflHdLwN2XMsR0ogowX9UW2zGWsJiBeaq9nPJxhZ2DDIKnEjIYvT6j
wmEQPNW9hPTRkyg/RebLk9UyeKCc+e08X0kOg+CdNID37MGiTsw7OawSDyjc
wQL12plUgxtUuGzF6SrD7k6wJ82af2LpcmiUddtld3oH5qFMNthdKPfMAe2G
ggdrnqPrK7SOtjdigibxr+xiGTos/9vpcSqHCXKXOJXJJtDhjXsyoaS3TGCT
kDf2UV4C8q4a8JzqLQAtzSHScq8koI2+VY/8xnzMUym8uB1zgHeYQfBUJ1e/
I6m3cBhzFrE8xzbzwFqxBZUrhRwGwUP1gLaIi2IsYPE+yc9YnwrlpWusytaz
gOzVPQ2y36iQ1r/BtvJkJxj/7dO4p5MG/wUrxZ9B99vhsanCjAMdtpH6Hpig
+OhUsO9+bBcduunu3RvozMR8VdbR0lS9a3mYr8pdriDV87MXEPPEprkSNwRd
m7B/ZPO2yHKVjjrsHxEIfPurWqQa+0dShTJqsk7/wP4Rf/HGTtubH7BfxED9
q6Tp+lY8P+ztEksL3YxuPD8sLnb18s7mfjw/LMq36ciGG8N4fhgrkBm3dIbD
IHgty5cTfy3ucvA8sWOLLfQ1YocYhK+kPyZZp/59P/aDvHuQeVAppAHzU9pb
Pj9dZ9KK+amEMN221k0dmJ9iJsZZKV3pxPyU1utjT5oUWZifMhUXfPZKnIX5
qbKLF4RKtnRifmpI49S7S9rtmJ9SeX/25uvfjZifGtrberJLrRrzU243LC9q
HyzA/NTw+WZrxT9fwCVHF6OacXEYyA7hY28uADVibg6bL9PgE68lvsfEmMCg
iBXc948Go6bmZ7ufM8H5ES/hKR86tNo8JihTyASyhdfUbbl0KGH4KHK/JhPz
WD1dRTMb2vIBMW8MSmeWmec0YN/JpZvWZ3e8qMW+k5eKLzQvSVViXuvFdcN5
6tk+PD/MYlsv79HpQTw/LH9B8ONwEIdB8Fok8pRg8V8O49muxx683TxQ8/JG
35iCYQbBT1Gu3N2fv6gZ81ODUfKukzrtmJ/SYd3vCerrwPzUOtG71Za9nZif
ii7VfnRIk4X5KfW5Cl2Pr52Yn1Lit3gsc7gD81PzZZ5LwrpaMD+14cfXopx9
dZifesWY8k7z/Yn5KZOAtVKdv3KAj9D3pT/UadB0N3189+sC0Pe0uvtZDg2W
np9dGDvOBD/1z+dLatBh5RtHTUF0/yXTrP+czqHDqNOSzjsfM0G79cUf5toS
0K9yt6JgWgHmsdb9+yV5yJ6B+at0n7vSn2cHGAR/VbOW+ueiOIdB8FcTKbTH
PItGGHfAvN7eBB5YH3FLRGc7h0HwUXExxwLtszsxH/W78fWNZnWUv8WYn076
U6GJPh8qYzpBvd3cM68FKhy5I2rSXNaB+am2LxujBE1zQGv9KtmeGFQPbyWv
VIJMcGvJpuc8K+jw8eu1XrFZTLC3/NjZD4/p8LjhL5MPaD8eJHyVVCeF4sve
uom1MwXgbXFirXWcBGxaYZZSZ5aP+Stv95q42N9DDIK/8hh8Fm9VwWFAWROb
4lU8cLnkF+HOSg6D4Ke4W3p+lAqxwKmuidx2HSq0sXm+t0MJxXfLgwF786hw
V8KynD/+nWDkyM3XhxtpMHnKVmxlKBMIh+a2qhymw31K9LXBKB4O3TTVVGqm
Q/lUhc3fUf4ieCwli9mVLX15mL9irB9iSVYNM/oUNv5+FUiCDONzARk8I4zT
LCGYykb3s0v7/Q1lFuAWtvBlnaJCJyNnl6+oXiZ4qzHn9Cv2y/JAf9dSUW9+
Okyd8TaJf8ME9o7u+TUhdHh5fo9yUy4T81dOaX/CDd9wGCW5aYLh8yQo+to4
8UAvh0HwVHd33rl0HO2Hnhvd1+HfTIWuX065Oaqh++H6eH/yXjo8T5uRNPvO
BItWWoTuL6NDfQ/3yozrTFA/6nFqZT4J7shOS+BH57+MXrnTRpAKO0/SXSrR
+7JJ4YBy+Do6XHu1SaEkjwm26jjK33tNhwEWfo43k1G+W+55XFyPBLlLsh/x
sjmMTyFDr0g6PHC99u/faZkof/3JNE8qocBTH0iMiytZQNPfUvuTKRW+X9fM
LJdjgbev2j3zj9MhqSrE7xY6P4K/El8wS4qSysP8VdwZj2VTLb2AmM/Vs0Mz
bDygCftgrG5ePn6btx77YA4prD9zRKsa+2D8e06FVbf8wD6YcrXaO26fMrHv
Jbrqj3ZGTguex6Ukti3wW3A3nscVYVLHysrqx/O44FGOfe2ZYTyP66HrJPPp
FIdB8FzcuGmlFU84eD7XCfrevPvpQwzCH5PFobIfl/djX8uOxb2+j+wbMF+1
Pdpg60/FVsxXFV9Q+9i/ugPzVQq7dJ6pendivmqRzq5FQ/IszFc9F2grd1rB
wnzVNglBj5VanZivOnY79PnS/e2Yr/J01f7NXNKE+apO2+MxuoHVmK8y6gyv
l17MxHzV7NKH+epFX0CKRcT8A444bNbInChdWwAO2o3uUfOlwZT4i9aPhZlA
JlfyyJIpGpwQL7CYiGOCHIvRo1/P0uEjCT4PXVQPZl10+erxjw6z1nd/PqbL
xLxWkYfHDVtOPiDmd6WL2jqL/WnA/pnDcx6nPEtrsX/mfAJ59/L9lZjnMhU2
WX/doA/P4yrzjjDObhzE87hkHq/2o/pyGATPJRF/etEIqh+kFl3nu93MA+3N
7cQNfw8zCL7qbM+xZY9bmjBf5RXQ/DB6czvmq76cp/5htXRgvipjvZ4Zu6MT
81WXVIrsitH7RPBVTB03lvu3TsxXDZcuv/byeAfmq649/tN1h9qK+aoi45/i
fSF1mK+K/NtsFCbzC/NV4mYBW0vzcsBLnpEvN1XQfljYzXQqoQAc77L7lZxF
g1/2PPrq4sQEL3amPlVXpcNV18Ut2QVMcITStH5HFh2KpZwZtn+K6gOKzQFn
DQnYdyF4S3RWAea1vpwdtIsOZWA+a8UyH53MhgEGwWdF+Gu6nVrCYRB81uH0
v2e5qB4XWOhvqXjMAzd66kwt1+MwCH5qnO0/9CK9E/NTt7OOFjxC8cqdZCh0
9RIVBvrsNOZMdoI1H3+d2DxLhemV5412NXRgvup3fMN29Z05wF4mmZ8TRYMe
q9ZKTqP6xYnr5C8tjq5H2VnoZiYT3NnW8+3yAzp03ftEdzfKR7RvjiG9EhLw
ebplI5uXCeh5ysqTMRKQT/Jy4ptj+ZjPMn+QsPPkpyEGwWdpVh48HF/MYXQu
S+L7J84Dg4682SlQx2EQfFXKDi/zjGUsMHtFqiVlBxU+tCrWpqH4n6nXWG39
mQpj5AJiQ0I6gder5XeP/KHB7b+3rjO6xgQ9V8dzDhykwzqtrK8nUP7ZNlwR
NlWH9g8W99UfeDMxr8VZtCKTT/Ir5rPULFMNhhjDjFvk4CuNF0lwT2tSXj1p
hMH1Uz3i3U2BawxC3T22oPz37phNiTsVjm68vFefn4V5rEH1wWW2574CZvNO
zt0ldHhhxDhBMpUJnhcOiMYG02FowbtL6V+ZmM+KrD11wjuRw3BPXPyJMYXq
iwMO3gsDHAbBWzWtatN+PtUJtnTl2Fevo8J6231q79X/i0cVG4t20eGVY4di
0r+hevRqbRO9GOW7QFZo0i0muFRfKGnyiQR1yloGa1D+eZj+10F+KRXKToaZ
uqD3ZbF0CDlVng4ddgjZbUD50Ceh3dcmiQ6bLit/bUlhggILvrSsHSQotOvN
ZwcWh2Fzas+hbdt54AnrAKpeLoexcvG92cIiCtx9Yn+4iAQLFNP97YKMqLBL
OH6WrcACN+LpRi1OdNjt6tPLRfmH4LMKzdzPVRzIA+WN2/7ouJPg8Sv2txZx
OQx6enA8fwsFkoJh2sMNLKB0Zzhn82U6pKRwParQ+/T2dCZFrpcEqY4/z2hN
cBiGdIFnrjKo/t//dGUa2m9OmOp0cbXoMPbcI1Myin9fk86dS39FgsZlQsa/
0fvyjqUf92meAuuXBW0aQPv3DPLkty4ptB6uGaQ++MQEvO4s6YGnaD0Xm+0Y
S2eCsnoN9X/r0PNon31w6w+H0WH06ylNjwrFGTpC5zaxgFrkdV66Lbr/1ibt
F9H60ofV8r43SZB5xc/QEv0ey7B7dccQBRpK/Ek8qcLCfNaidNJikSdfgMRs
30mhO3QoeG5/dh3a34q/91gFlKnwgozbylpVFojyOnru1j70fMbVHCrR/VMT
FGOyi1E9ESJyXhCtR78rr6QjRajQ/mhz5GIttF9VWnHozCY6FF1w9d3LQPv/
ymqZ80YkyDOw01dumMP4k/76bqI7HSYGpU6PofVC8Foyi2ypj3pzMa91T6Cg
36unFxDzo/6oL+K2hTVhX9AmWvwhadF67As6HPwjZ+FANfYFWbvVbxUUK8W+
IG3dykTq/o/YB5TqUetrG9yC50XxGHc1nDrZjedFbR+g6Z9J7MfzonZaf573
cR3G86KCD+T456HnT/BfwS/Ux2viOHh+lPAL+6/rctAb/D+/0OK1wVdYaH9L
8FiuxgJKnwwaMI9lJuK6cZF4K+axhPVDpZxXdGAea6Nj0vi6M52Yxwq9fF7M
CdVXBI91ozyzYBOqvwgeS/Dd9UtpsBPzWMU5sEbNqh3zWJrOrz7HrW7CPNZF
w/YM1ZfVmMeSkRdtWGPHxDzWcWeTMr0vX4De/hdW3kPisOkfz2D2mgKwnJT1
WdObBmOGfT6lCjKBkIZauegEDTL2MVPOPGOCZr6M289P02GFeWJyAXofSLW1
POf/0mHaOduKpt1MzHe9WbN16aG/+YCYL0Xb1V7Vw2rAfqLhVptjx1tqsZ+o
ovWDkrJbJea/NFLt2U9V+vC8qF9ad6zflA3ieVE3NI0ujZ7mMAj+a138w12O
cxxGk9Pswf31PHCTx3u3hfphBsFjRbg6PztV2oR5rJY714H92nbMY01YtTVf
r+/APJYo40uNbFsn5rGqpNZ4DKD4RvBYwn9VE/+UdGIei34qt2T/qQ7MY+1u
vve+GdWDBI81+n1z9K+kOsxjvbL+LRh8/hfmscozoEHBxxywc24xzV2ZBv9V
bbAwfFYAFELX6KZl0iCN5VxOO8IEkTnfBfS30eGMGbxrjOJXEPPJwVWZdHhg
e5u1DXo+Xz1K73uoScAhTXO50i8FmO8yFe1Pn4plYJ5Le79fqn/JAIPgufzK
1b9u5w4zCJ6Lkyz8qBfFmxKHoxsfPOCBBnEph2wMOAyCtwov2eK4400n5q3E
d/2R7djOAlY+QmqhF6jQWTrsQ8h0J9A/qrZf6B+qD0YN41raOjCPFeM0ZH5A
LQdIFXlcGX+A9tvktteHNJjA9KL/4CZROmyrF156Hu0/33W95Djeo8O7hYv+
XMpG9Y9MZSmHJgF9Sm4tUV+K9ufZ063Mx+h6p6/zT3vmY54rWuTQ09jUIQbB
c/06cfT+3UIOQ2Wuspm6nAcucbp8ZraBwyB4LB+RFayHfCzANNo6FKGOzvdN
hPHKbSzw/FMs1ymbCrOMHt0pu90JlIzrFrvUoP1z4MuTVkEo384Kr3c0o8Pf
Y32KB1C8PhQfmd1YS4fmz1Nsj19gYr7r0NSOVQe3fcU8V5KozuDzrGFGE+nd
wXFvEnxvIhNwGMXfIkOD0zYsCrQ2uVFniPbD39euu/bbjQplXpnX+QiyML/V
4cn7c1aRAd5a2djHL6LDa/7PfX69ZoJv3mk6gYHofh0fG7+J4jXBc4VHzPba
POMwvkRtDa8fI8G/OpPl21D8JvisOPPLClsnUDxKL/f8pECFNc/o3N0on21r
6o+u0qXDm5YRCwdRfPdQjloyV4Tyy7vzxQJhKJ+VcUZcMlE+v27hoIjWi90V
QS/+JVRIlpPVWonel5Ho55c/y9Kh1z4LuQNfmCD6YELCzkQ6tNLnMfVOY4Ki
ySrTkO0k6Do56GLbzmGkHj2zcZ8yD+xQ+jrWz+AwUmJIB6qZFPgv3pTPiIbq
8a67J10NUL2SE9F5dB0LnJVS+TRwhA7VShS3bkD3n+C53s6avktwzwOryx3S
LI+TUL150/X+LIfR6vcofbiRAmXfD6mD9SxgtvNdF/UiHWqPfCvzZzLBgnN7
jxaLBF2Mc26Q0f6Q0rXqrbE0FUJe++ql6HraS63MhTTpsFFDcXdkIROIRMcZ
/nhBgm+OCsxw0PX7pNu8i52jwEq99/Hu6P49u0lRHZekQ+dH1tlP0fqVl3ph
UBFDh7VfXCqsMpig/OKSxh/yJMh6W2TFW81hvKJ3pM0CKmRZ1hx6v5kFZIUS
Tq+1psOHr8pbgtD1PVJZmIm4ToL6/ySkBdHvpdD+bfk+QIFsHU2rALReCZ6r
6tvS0yTzXKD55nXUyE06/FojpdeG7n/zlaub5bdQYemiIYsE9L4GDfh1PDak
w4O359gPUD0QMg8e8xaR4LPrE+2RaD3qGeUqeZOpMPfHVdtRdP0wRbXw6gZU
f774lHgb1Zs5Z+ILd+uToPByYJ2I6kvmpm8L793o0NDz1K5d6PsIvut1rljx
Ft48UJCZZRXqQIKvHbxWHplG9fjzrRqN5+mQI0fSzkL38+mVPeU0SSpsM43y
fIh+7xMzQmm9Gh3u9ErV/u/5vL/6d3LmKQnqfWlcwbdohMFrFFThOk2But7f
uyCqX2cW1RvrHaJDZd6HBZfQ/doheTi54AoJNkbaHTNG9aobPdlkeAMVukys
tRNBx9uwPuR93EOHZmmxc4vR+a7vfrRbNZcEeYMqXnuj48tZLFPAT4XqHO6H
BHQ+MfJzTeXH0PotcXlXgo6/0stHWnuKBK/2N6y2mucwgoymwoJkqfCzR8gJ
PVQ/embsjX2URoKjy71iktDz6qOpRFSTqPBqaIGcA/p/IzH3B8vs6fDM+rVr
3ND5ThonmzqEkWCy+DvhB+h4gvf6bWczGcrKASnje5b4mdAhr7rWyUXo+G56
30BlGQlaniJXjKHfz0p/IJxKpULbiKp5flS/9auGyz08SYd+M5WR0ej9JXiv
mCUyDj9/5oIbP8+6lD6k/2/+DwX+P4PLfcs=
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{371, 49, 300, 301, 302, 303, 304, 772, 621, 506, 424, 
            370, 341, 798, 647, 532, 450, 396, 827, 676, 561, 479, 305, 773, 
            622, 507, 867, 716, 425, 838, 687, 915, 572, 886, 735, 934}}], 
           PolygonBox[CompressedData["
1:eJwl1Gds1WUYhvFD2S2ylK0kIEv9IBs+MKtQ9pJZkFEQRCJEQCiUVoVoBFkV
BEophEBkbxBQEkDDBkmYEiGRLRs3+EH9PfHD1eu+n+fNyTn/95zWyBjXa2xS
IpEohCn+1OdUJMv3LHrjqjwPLQsnEl/qjTBAr6HPkivhkN5D3yu3Rwu9hP6e
/I88Qj4lb5TT5K1yS0yWf+JJ5q/KS+TZXJvf5Qt81q6vvF/O4y6czbfi9TjF
/r7cB9P1a/pgPqLn83y9Fa/R53NjHs8/8ipOt6/Jn+mfcmUezWf4sF1P+Ws5
Ld6zXlIfL/8rb0IHfZveKj5PPEM9T66Dc3opPJD74rqci4HxnpDs7IS4AGzW
M/EMHur9cEP+HIPworOzzargiN4aKWYT9ULYonfUt8utk/6/zwb6Urkuzuv9
9ANyV5TWH3F/3JSH2B2VF8Rry2vlJpggX+Y3zWvJc+SZXJXf4bN81K6X/I28
iDvwVL7O67hNPAd+X/+Yk/gt/p4L4vtg34l36AvjPGfyVV7DU+0bcr4+h+vx
WL7IF+z6ywflbiijP47vKG7JC9HGfp3eFIP12vpcuRqO6W3juZtN0gtjm56F
RmbL9JdwUS+LX+R03Ja/iOeGVJR2drJ5EWzXp6EcftUH4md5EYbiNZTHs/jN
bhDuyIsxDK+jjNfLNC+KHXo2nsPvcRe4Ky9BBtrFe3N+inkx7NRzUAF/xGfG
PTkPw1HH2Xlmz+O43j7eazxnvTh26Z31nXJbfKA31gvkufwyj+MfeGXYfgB/
q3dHjnybK5r/yUMww+x+fH4+pi+N5y6vl3O5GU/kK7yaR9jXjd+vPotf4DF8
jlfwCfs3eJ++mDtyFt/g9ZwWz5iz9E+4BI/k0/yVXRd5l5yKD/Um+nL5FVzS
0/Xv5B7xP07/i4figZwfd26/QW8e32W9np4rV8fJ+L8Q92s2TS+J3fpHqIwn
+jA8lJdhZPx2436dzzZPxh59OqrgqZ6BR3IBRsXvJe7X+RzzFOzVZ6Aq/taH
47G8HG/HfaIa/gNMLbV3
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwV0klsTWEAhuHTdmuWmGmvKjpRGzos227QQdWKTZvSwdVhYSGRmDpou5Cg
IiI6aUmKJYIaEjaVVruwUNqFRMLSTIzPv3jzft/3n9yc3P/EqpsqGhOjKErA
DHKwBZmGDKRjIzZgPdJQiRZcw0/E/UBSUhStk7vxBItt7Vht3603Yxg/cNCe
aE+VZ5GjDyLf1qU/xiK9DatsFfoUUvULyLY16QXyLRTrQ/pzuVr+LjfICfJa
+YN8PPwOX+JnvI9nnA3wtN7Cm/kMD3Aedzq/zm/1I1zMPXyXy/iR8ys8pdfx
Qu7gVl7Ju5yP8Dv9KO/gi/yQ9/Ck8z5+qcfDu3I393AWNzof4ln9MOfzWb7J
RXzV+WUe06v4m97K9eFCOaa/l4+Fd+Gn2Cu/sb+Sm+VN3I9c+bS9SL6D0vCe
+gL5FFbo5fp2eRSV+gs9Jp9Hpn5Iz5NvoFAf1L+iTv+HFPk1suU+bPNMhz6K
+fpJLLeV6RNI0c8hwxYPd4UvqLX9RbLcjgeYp5/AMs+Whm8M/fiMA/Y/WCNP
I0vuxVbPtumF8m2U6Pf1SblWnhu+GyyVS+zjSA53gHRbQ7g/fMJ+2+/wvYc7
wD3MCf89lnh2p16PXnxEjf1X+L7l/7MVay8=
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwt0VWYFmUAhuF/QUpS6ZRFkYYDWvpCkZBa6WaVFHbp7haQ7i7pBqXDpFu6
U0rpznu4OLjnme/sm3fCI6MjosJCoVBsj6BHmEt36lKavFxiNUNpSQQx+Id5
9KAeX3KLTYylPfm4zBqG8QPfEpOj/ExP6vMVt9nMODqQnyusZTiteMRfTKca
d9nOJLrwAceYTy8a8IA/mEoZ/mML43nFPjrylJ3MogBX+YWfeMleWvOYv4ll
uBkapoc0rlbXe/wW3MV5sr7hAHGcu+pzdr/ffk6wpx7WeBpLj7Mg2Mm5t75g
Dw15yJ9MC4Xe/biD8jX/s5UJvGY/nXjGLmZTkGv8ygiieMIOZlKD+/zOFLoF
d+QEC+lDI8pyh21MpDOF+Jd1jCSamsE3c5JF9KUx5SjMddYzijbUCjbkFIvp
RyTl+YIbbGA0bakdbMZpltCf76hAEW6ykTG0ow4fcoalDOB7vqEo8TnLMgbS
hIoUIwHnWM4gmlKJ4iQkEYlJwkd8TFKSkZwUpCQVqUlDWtKRngx8QkbCycSn
fEZmPuc8KxhMMypTgixcYCVDaE4VSpKVi6ziR1pQlVJkIzs5yEkucpMneDfU
W7ybgNQ=
           "]]}, Annotation[#, "Charting`Private`Tag$537868#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1XfYjmUch/EXkVVo2CqrErLJKDTskS2EUNl770323ntviaxKRqVEixIV
lU1ZDaOhz+/oj/M4v9/fdXs8z33f1/Vmb9GpdsdECQkJKxInJKQULnFd/CRP
xNNJ/l8rgpf07PoYOQM+1F/Ud8gVUEZPrneR/5VbyYfkdXJF+U35afSSf+Se
5gXkWfI4zs0d+Bs+bK2+/L48m6vxAD4bn8eprP8i18NQ/We9Ke/X5/Ik/Rle
qU/iotyVv+Ol3Mh6Dh6rj+aM3Ia/4o+s1ZJ3yhXjO+sp9K7yHXk9Kumb9Gfi
9+gF9dnyoziip8avcn2ckiejcXwnpHRtN/MEbNB74x5c1hvgtDwFTZDTtePM
MmG/XhapzLrribBRr6y/JZdFH72QPkd+DF/rDfTdcnXcq1/hhjgjN7P2sTw1
PlteJRdDN/l7ftk8lzxefoMzc1s+zB9bqy2/I8/gStyXT/FqLhf3gXvoIzgx
v8qf8fx4H6xX4c36tLiee/NPvJL7Wi/Mc/Xx/Dh35KP8jbWG8h65BtLoV+Md
xVl5GspZX60XR1M9tz5BzoJP9PJx38166kmwSe+HImbz9Dw4qqfFNbkRzsnT
477hWdzr2l7md+EtvT/S4breGOflGWiO53Af7sdv1prggjwTr+B5pPF5vc2T
YrM+AA/g93gWuCjPQgu8EN/N9X3Mk2GLPhAP4o/4zbgkz0ZLPOraiWZZcUCv
EN817rN+N97Wq+pb5PIYpBfV58sT+AnuxN/y4rD1l3ivXhMD5XOc3vxPboZh
Zr/E7+dP9Dlx3+U18mQuwd35B17Graw/FvtXH8PZuB0f4YX8qfU6/K4+kytz
Pz7Na7hi3GPup4/k5Pwaf85brVWT35afxWC9mL5AzotjeiN9n/xinHH6DW6O
X+W58cytr9WfindZf1yfLD+Eg3EuxPM166+nwDZ9CDLipv4KLsvz8Frs3Xi+
rh9gnhLb9aHIhFt6C1yR5+P12C/xfF0/0DwVdujDkBm39Za4Ki9A63ieyBLn
k+MmK/9lvRWuyQvRJu4J0vvMQeapsVMfjmz4O34nrsuL0BZ5XDvF7GEc0qsj
g9lg/R68Ln/B78SavFV+Ls4Avbi+UM6H4/pD+CeeEX6TF6MdasQ9c+2QOLPw
rj4SD+Pf+D/wu7wE7fGEa6eaPYLP9JpxD82GxtmA9/RRKGG2SM+P7/RHcEdu
jT/kpbFPXbNOL4kOel59mpwdn+t19ffkKvGexL3Xh8lpsSu+u75Nfh6j9af0
xfKT6Cwf4+/NG8sfyLVir8nn4/8wT5DbyMP5zzgb+IA+j5fFOcHr9Slcinvw
CV7O8cc8H0/Xx3IObs9f86J4Ltbr8S59Flfl/nyG13KteF94uD6K08W94S95
Qfw9jnvL2/Xp/AL3ib+/vIrfsF6Sl+gTuQB34eO8JPa59Sb8YZwFXDv2IV/g
HNYSyW3lG3HGxX6P3xVnnbxBLh1nkJ5fnyHnxJd6bWQ1G6Hfh936GJQyW6oX
xAk9JxKbtdNvyivQOc6UeN/NR5rfjz36WORCEvP2ZrfklegS7wByx5ka51Wc
A7Ev4j2M9wWFPMZ88T3xJArEHsRdPquDz7otr0LXeB6xD8xHmT+Avfo4lI7n
rRfCyfhMJI1nrP8lt5QPyqvlCvJGeSqX4Z58kldwt/gOPFPPha/0+rGXzEbr
D2KfPh6Fkcy8k9nf8hp0RwMUQVEUi30ceyne7XjecZ9xt3/X2b/7R16LHmgY
eyzeC/P0+ECfgDJmy/XC+FF/Wf9IroMh8kVez6Wt/QcvwkFq
           "]]}, Annotation[#, "Charting`Private`Tag$537868#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1WWYVAUUBuCB3QXp7ly6uxsDFQNYVERREMSWNRAkxe7u7la6u7uXLgnp
kG6B9/x4+c755t7ZmTv3PqT2TE/rkymRSGT4Z3hSIpEvJZEYnZxI9KIi53Tb
GcFIRjGaMYwlv+PHOO5+KnFet4Nq+iX2wbQiP+P0BfRjzb2pzAXdTqrrl9qH
0JoCjNcX1I8zP0AVLupa6raZ36UTu3Q1dMvMQ2nDbfZT8hcKcr19n/ycu4P9
ovybCc4vZB9vfpAe5kxUNXeQR+X3PGzOzv+ObyX/0T0l34vvL1MYSJq9qzwv
+8s/5eMyN0P51/k15XL9E/I52VMmMYC29tvladlP/ioflTkZQiH7DXK/7Cu/
iOsjs9LN3C0+oxzORH+rsH2C+SGq0dF+TP7AJa+3tm83v09ndutq6VaYh3E1
hblRd0B+yT1MclwR3cS4NlTnsq6Nbof5g/gd2KOrrVtpfp5rKMJkfVH9JPMj
1CDBXn0d/SrzC1xLUaboi+knx/WgJpnYp5/KNKYzg5nMorjjpzjmMWqRmf36
2ZTw2tT4bahNEgf0dfWrzS9yHcWYoy+pn2buQx2SOaivp88wv0Q7ijNXX0o/
3ZxOXVI4pK+vX2N+Oe5LSjBPX1o/I+4J6pGFtrqd8sO4JzjsuAa6teZX4j6g
JO11B+VX3Mt8x5XRzTQ/SX2yxm+p2yU/4g6OOK6hbp351fiNo7efkb9Ripvs
h+TX8XyYr6J73APykhzBAu9T1j4rngnuM2emgbmTPC6fkT/Gby1zMDjeK+6H
eCbk0/Jj2VtmYRBd7HfJC/JZ+Vdcf5knnhv+83cbyfXxPeVrspdMpr25izwr
f497wJyL0uab5WH5TTwX5mz0iGsnL8uRLPTeqfbZ8dloSJr9hPyJbHFv2nfL
T7iTo85prNtgfj2uHWVYpC+nn2PuSyOyc0zfRL/R/EZ8LsqyWF9ePzeuG43J
wXH9Eip4bZ69H03IyQn9UpaxnBWsZBWrqeic+Y7rT1NycVLfVL/J/Ca3kEqG
vpJ+QVx3mpGbU/pm+s3mt7iVcqzRV9YvNA+gOXni+dHtkZ/SldOOa67bYn6b
DnHd7OfkH5SPz2A/Ir+N+4i1zqmiW2QeSAs620/Kn8lLO/te+VncL5xxzjrW
s4GNbGIzW9jKNqo6b7HjB9GSfJzVt9BvNb9DRyrEd437TX5HT7rbE4wyp8u8
DIv/F5x/Bcku7ng=
           "]]}, Annotation[#, "Charting`Private`Tag$537868#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1WW4FWUUBtADkoI0IqC00giSitLd3d1dSijdqSKltHR3pyBId3dIqbRK
iAKu78d69rvfOcM9zJ2Zm7ZZ52qdokQikYpRI5GB0SORAjEjkc0xIpEaxOCY
bg2DGMwQhjKM4YxgJKMYzRi+5mP/zhbn1yQmx3Vrqak/a+9Keu7rvuET/VZ7
LWJxQtdJ90gexaes09XSnZO7kYEHuj66V/IPlONbXUHdNrk2sRlmj8Vs+aTj
neXH8mg+Y4L9bVbK6x2vLZ+XP2eWnJ735a/N+CySH/pcX/m1PJmFchbKh+9i
pmAHa+1rzLwcZKzzPjW3h59l1jFnmGn4mTftw83Y4Zowx77EzM4eTjm/i/mn
fpM5xpxnZmQXhewTzWSskleaH7HBeXXMC7ovmC1n4AP5GzMBi+VHPtdPjjDF
XoHvdJ/Zf5LrEofTuq66v8J1oTAbdXV1F+XuZOSxbhyFwvWw1yMuZ3SbGM8E
JlLYZ3Y6Vp+3OKvbzCSKhOuja0A8zum2UE9/yd6DTPyp+56i4XrYGxKf87qt
1NdftvckM3/pfqCYfre9EQm4oNtGA/0Vey+y8LduMsX1v9gbk5CLuu001F+1
f0lWnuimUCL8/uxNSMQlXTfd3+H6U4SfdI101+SvyMZT3VRK6vfam5KYy7rP
dU/CPU9Rduga667LvcnOM11/XRSm2isyTVfKvk9uRhKu6L7QPZXHUoyduia6
X+U+5Ag/y56QJfJzxwfIUZlmrxSeBTkl6+TpjpeW98vNScqIcI8zV77qeHf5
WbjHmC9norg8yXyH1fIqM3f4/ft8U/OGboPZ15wTnk0+DN/bTBSeLZbal5s5
w8/nH+cONN8I7yamO77IzBp+j1S2TzHfDfcg6+1rzXwcYobzy5gH9C2YKacN
7w15pBmHefI1n+shP5fHUYJduma6m3I/cvJCN5Oy4b1gb0kyrut6hu8rj6ck
u3XNdbfk/uQK18uemGXyv+EdLUcL39Nehanye+G5l390vFz4f8itwi6nC9dX
HmXGZRvz7UvNHOFeC7935/UyX+g3mxPMBWbm8KxQyv69mTy8G1hjX23mCdcp
XFfntzBvh3eDOcCcG9454Z0Uro+ZhOXyCjMX/4W/NWZ0ZuoXm9moGu5bMxUb
5Vk+V14+LLcmOaPtb7FAvuH4l/K/8kRKs0fXUndHHkjucI3tSVkhvwx/4+QY
/GivxmxdBfsRuQ0puKn7KnzXcJ9Shr26Vrrf5EHk4ZVuDhX1R+1tSckt3T5a
63+3DyYvr3VzqaQ/Zm/Hu9zW7aeN/g/7EPIRYZ6+sv643J73uKM7QFv9XftQ
8hMlPGP6KvoTcgdS8ZvuIO309+zDKEDU8PvWV9WflDuSmt91h2ivv28fzse8
wUJ9Nf0puRNpGGOPx0J5WXhWw7sn/F98trf5MtxHlOWwroPuQXhX8AnRwrOq
r64/LXcmLXd1R1jMEpayjOWsYCWrqOG8Mz7fhXTc0x2lo/5heH4pSPRwrXQx
mSVXZ7qcmk3yOjN/uOfCe8n5/wMnhEFq
           "]]}, Annotation[#, "Charting`Private`Tag$537868#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1GW4FVUYBtBDXrh0l7QoSAiClEojoCItoISElNIgKtJINyid0iEt0igN
0t3djQFIufaP9Xzvu/ecmjMzWRu3rd4mRiQSaRgzEtkbFYmMjh+JJGd+vEik
LlmIsM/efg5wkEOMcVwKFtj/lKzEYLm1t9glf0spDjv+R2spWah/RjZissJa
QXbL31GaI47/yVoqFun1yE4sVlorxJ9yV8pw1PFjraXmF70+rxKbY/bGWU/D
Yr0BOYjDcXsnOMl4+2lZYr0hrxGXU/YmWE/HUv1zXieKX629zR75e8py2vET
raVnmd6InPypf8gleRTxWKUXZq/cjXKc1OvyQJ7GGe83Sc/Acr0xl+UmPJVz
sUf+iMvyaOLzm16EfXJ3bsmtiEn58LvMT3kYzkV0JNJXni7/Y3YiIcmsjzDP
+g6TzVfCf2htheOeyt+RVW+iX5Gbhu+pPwu/z+yvv2a+oe+VK4dzrF8J14rZ
U89ujtEfyO3IpMczE5tDzVxmtP3VclH2yy/MbvSQb5tfEov3w/k3P+MveQb/
yp1JxDm/Y4qZkZX2mpI7XN/6x1yVfyQBa/RiHJB7UoHzXj81fEd+1b8gDwm5
YG+a9cys0puRl0RctHeJy1zhKte4zg1ucovpXpuF37ymOflIzFprxTko96Ji
+N2OnxHOP6v1FrxJEtZZe4dDcm8qccfxP1vLxhq9JflJynpr73JY7sMH3HX8
zPD/sFZvRQH261W4Jv9EMjbo73FE7hs+S/6K2OGaD9ewWY+/5Z95JH8d/mPu
+ZxZ5quss/fM7Br+U/mq+QXPwzXtOhgQni3yAbNquCetXQ/PEbNXeA9zrP5Q
bh/+Cz2+mcQcZr5hJre/US4Rnhf6Uf2l3D2cG/2H8Nvl1uF61+OEe8EcHO4x
e2fN+vwTng/heHmm/NjsEj6L+37TbDMH6+19xTW5GS/kghyUq3FDHkcKNukl
OSb3ozLn9Ab8K88K94n3nhPuKzborSnEIb06N+XxpOR3vRTH5f58HM6N18+1
9job9Ta8TSr+sFaaE/IAqvCX4+dZy8kmvS2FSc1ma2U4KQ+kKn87fn64b/ld
b0cR0rDFWllOyYOoFp43jl8Q/hv+0NtzXW7OSznaOR4Yvq9ZVD8s1+CWPIG0
bNXLcVoeTPVw33vfhdZys1nvQDHShevP3mOesMh+HrZY70hx0rPNWnnOyEOo
wX+O/8VaXrbqnXiHI3pNbssTycD28DzirDyUmuH5oTfkkTybp95vsZ6PbXpn
bsgtiIR7Uj9q1uKOHMs56C1PCv+L2YFoklofHq5X6zvMCqSxdk6PmD30YfI9
sw0ZrcU1E5lDwn9r1rJ/Qf6c9PpjPcrsF65jc47+RP4mPKP0pGZyc2Q4x+GZ
77cskd8klb7d8c/l78O9Lt80WxKDBPYHhWeG9WPmJ9yVY1vvI08O15HZMRwb
vq++06zIeXk49+W2RIXX6xfNRjyR54bP9n2W6vnZoXehBMf12tyTp5CJXXol
LsgjqM0Lr19mrQA79W8oyQm9TrjH5alkZrf+ARflkdThkt6Y/+R54dqRvyUZ
KfzOUeG6M1/6nP8BEVpGJw==
           "]]}, Annotation[#, "Charting`Private`Tag$537868#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"Test on dynamics\"", TraditionalForm], 
     PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1b\"", "\"u1b\"", "\"x1b\"", "\"\[Theta]dot1b\"", 
       "\"xdot1b\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.863703118216243*^9, 3.8637031489144335`*^9, 3.8637032426554804`*^9, {
   3.8637032743803434`*^9, 3.8637033154942074`*^9}, {3.863703346328354*^9, 
   3.8637033768286085`*^9}, {3.86370342548906*^9, 3.863703489280677*^9}, {
   3.8637035621363974`*^9, 3.8637036282402754`*^9}, {3.8637039697241616`*^9, 
   3.863704044314328*^9}, {3.863704191757216*^9, 3.8637042171980867`*^9}},
 CellLabel->
  "Out[1041]=",ExpressionUUID->"da060047-a2fd-40a4-ae58-c2155d5b8108"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
fBH+fqO9Au8B1HvPFrToHLHMw6Heu5dBO3o8rxblScjKDOhzGXehPIk9vnoa
+xzrcKj3xp8LflVp9QGH/Xtmfh8GVe81Adi/97Y0b7F2ngCrd2lUC02IYhss
LLoDeKmgnfNLQLSTGJaf/u73yZ10wNLQwOo2LYad2yVh6xf8n15cMVR3ZKSI
gfIqNFkH971nb0d5ECx6M6O+n6cBzIMIK9wS0kTMApgHsetDPLsReQ6DeRC2
rXU0oZvkPKf6HHyoY8GkLwmXnCPX6/XZFnsOveTHNswU89FbGwDs42s8PRF0
6VctgH18LsXplrFbypGem7COs/CdTjPKa8jR53pnyNaBb/KVPZicKYqFDdcl
5Un3gOe5pSuPqIlhjqv9r1fk9wHv4ojT6zLJ8+TlRSkj335QYFcRYqchjhnK
vj356BgD6b+ChnsUgsjnH+YpnPxhkDRvNwtgnsLaGW71oDHy3//lKZhocBiF
k8/raSv9aJVXLBib5YBPz+gcyjfw0+BwvipNwVN744Ytg8WwozfuXcij0cEF
mZqKYVFx7MlLmbS5yQFQ+W2mszhUHGtYYtt4boABYD7BVpfem8ePzgGYTzCU
ofSbz2IewHyCKcvWjIXz5Dz+rcSMdkYcq3n/PVr/GQPps7/PfHr4//kR+vsL
rjMHn1TOAejvV+E687KYPA9Df36ooyku4UvgTs+2n9z+RBxbXXn7+M1mBoD+
+ldfeQamj80D6K9X8IlqLiHPtw4vdDyUjohjcofYrCzsGaBb49TL21XimNnT
CJP/rw+bVKoNNC2XgcHHO7Xc5Ospdhc6nfkkjo0vxkemTjMA9KP/bn5T/dJ+
HpRM/tV7spMFSy2MXKeqM4/85oPDQhLu5PrpZ/SrsObbEnhZuqZnCzk/Q793
U6UX97TzPMiUtT+eXiKOdaqcfXKOnF93q++wztu/DJxZKS6d5Pw8V9mu8DRK
HBs7VSr+apQBVE86CG3dvgS26ClMXCH3yw7uiw6NNHFMad9hFTr58xcPL4aU
zi2Bz5KWvXvJzxv6r9Otek4mThO44ImdHYcaxbFdH7oV/j8/C22w2fPlwTII
of7cL0Hup02mP+aszxDHEhRBQjI5/4ZpeapedlsC3j0fGt+T5y+op+64ePYo
O7l/DmmePS4UvwSk9H7svkXO71Ji83EnCsWxyhcjXmLk+edQ9tWxJZVloPY7
+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

      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{2898, 2897, 577, 578, 579, 580, 1143, 963, 819, 718, 
            656, 622, 1172, 992, 848, 747, 685, 1212, 1032, 888, 787, 581, 
            1144, 964, 820, 1263, 1083, 719, 1227, 1047, 1304, 903, 1280, 
            1100, 1324}}], 
           PolygonBox[CompressedData["
1:eJwV1Ht0z3Ucx/HvllXMiJM7m9nFnfqjqJBL6tQ5dWYzM9fSlYrobrOLLuj2
F6Y2c+l0D7vTzSVE5Toqt0qhcomULoh6fP54er+er/dmv+/39/18kydMyZwc
G0VRDNb7JyM+irKQqMxtEEVvXBJFCXFR1MI8yq9BMq+wXy03Qks+3f6CfCu6
8Wn2JfIhfTOeZZ7hA5HGT9rvkVPRns+1b2Bm8Ay7PHOTrg/q+VwkYZT+TV1L
VPJHsUB3mA/HKT4M+brNvC928XlYpjvLJ4a/hY660bq35Fao4mt4PPL4Y/xV
+Yicjd/43vD5MY9n8hny5/J12M238NaYzefz5fI5eRLOykMRJ39vdkep3NB1
Z4f76ufHmG/rmuham8f4tejEq+3Xyo3RiufbX5RvC/8Xf9z+NfknfXM+wvyT
D0I6P22/L2R04PPt48xhPMuuwPxCd324VrkfvtJvNdtgjr6Er5DPyw/iUhzk
PVAmd7IfK78jt0ENfwKlup95Dn7nw1Go+5LfgK/D94gUjNO/q2uLWv4kspGK
8Xbv6duhjj+FESjSb9H1wzfhe0Ma7tS/r2uPlfxp5KBYv1XXH3vCfUM67tIv
03XAKj4dZbpf+Ej8wUdipm4bH4C9fBtvixd4Ka+Q/5UfwmXorJugWy4n4gO+
jidgBs/jC+Wjci7+kgfjjH6/2Rkl4X77vjLlXP0z5nZdU92N5mneHyl8n/12
uV347viL9jHm7bynWWZfKV/QX8kfNs/xm9GFX85/CD+LJL6QNwrPFL/K7OL3
75ZX6JNwXO6DD/Wfmk1QoM/n5fIxeVR4HsMZxrO6HXwg9odrR1fco68IZxMf
hfOFRbrjfHS4L+HM4jndTj4IB/iO8B7BS7ycV8kX5RY+62TzPL8FXXlD/qPc
Cx15OY83c/jVZje/f69cqU/GCbkvPtavN5uiUF/AF8sn5DH4O5xfPK+r54Px
bfj8qNb9x6eE+4juuvt0VeHM4BO+gV+BIl7Il8i/ymPxTzhXmKXbxYfgu/D3
UaOL8Ei4DhySe2OR3MP+frlaTsFqvpE3QzEv4kvlk/K4cA3ykPCe1B8IzwIW
hB2fLe+WbwrvL74zvEfwMl/Ca+UYTOWNcTg8K1gs97R/QK6RU7GGf8abYyYv
5q/Lp+Tx4VkMZx1zwjuIDw3vDXkADurrzcRw5nxfr9jFmnfwpXZ1Ziym6RPQ
SzeR18ppWBvOb3g3oDcm2dXp07EunKvwHsD/R4fh4w==
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{2898, 2900, 591, 1330, 1112, 1292, 932, 1076, 1256, 
            788, 889, 1033, 1213, 687, 749, 850, 994, 1174, 625, 659, 721, 
            822, 966, 1146, 590, 589, 588, 587, 586, 585, 584, 583, 624, 658, 
            720, 821, 965, 1145, 582, 686, 748, 849, 993, 1173, 623, 771, 872,
             1016, 1196, 657}}], 
           PolygonBox[CompressedData["
1:eJwV00dPFVEchvGhiYmJYt2Y2BPEDtjAujCKvX4ARRSVZsUPYC8gyEp3Nqp7
mhU76sqCDY29JBoVWyKW31k89/8+75m5c8/M3MHZRcsKY6MoikGCjyXdomgp
ZipnYDqmYSoKcAi3kRYXRS0ojo+iKTwfpbiFVP1FbLOWyU/jAxbrnqFCn8dL
cBPjdBewVZ/B6/Aei3RPcVi/gcfKufiJOt1BXSvG8vPYopvMe8nbkcibUaur
4EPlNrzjC3k7yvl6HiOvxQ/U6g7odsv95Fbc4GP4OWzmk/gJOV1+i55yltmJ
YrmL2YSasG8zLsE+9P3NIfx+OM/aMD5D7sAC60n8iVnG14W98RVyV/OofoA5
gj9FxJP5LPkX1vDe/LtZw/c7f775D7t0fcM+cF2faX7CaP1ZbJIn6o/LafIb
JIVniAS5EdXWy/lg+V44Jnw/f4xDPDfcI9dfLieaR/Qpcnv4DdZy+DdU8318
p9wn/B5c4xnmR4zSn8FGeYL+mJwqv0aP8J4gXm5AlfUyPki+G47h8/gjlPK1
/C9W8w5U6fbyHeFeheviKh/Jm1HEx/Pu4X1CHK9Hpe4V5uoeoiTcb/4H2fwr
KnV7+BWM4E0o1KXzU3iJLN0DHNTn8E6s4l9wSrebX0YKb0SBLo2fDP89PpDf
wQs+h7fhAF/Nf2Ml/4yT4ZnzSxjOG5CvSw3vLZ5jtu4+9uuzw/NAC5J19cjT
j+P/Aef0iNE=
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1nfYjnUYBuAPWWXvvYuUyio7orJDRlPInmVk700yKu1UNFBpKyt77733
JntEUed9+ON0X9f9fMf3vu/zvD/kb9GlQedECQkJuRMnJMSc5I/cLJT7UJuS
zLR7lF3y27QicWS7PCyS+1KHhXotzsnfUIpv9cfYLb9Da5JEtsvLYrkfdVmk
1+a8PJ3SfKeXYY/8Lm1Yrz/Pv/Jv3BXX9HwskfuzU36VZDyjLzbrcEGewTH5
NTLG59O/N8uyV75k9meyfMBsT2r+Ywxt7TeYL8Tezbil35CHMVs+bfYgg2vZ
zCTmW2ZOM6nrk+X8JNeX6uflPmTSB+i75Jak0ZPH52Qk2fR6ri+R63K3flG/
Jg9mpnzcfD1+V6I7D2ps3H9xllmOffJ7HJQ7xGvQTt9ovsht+XeSxc/pBVgm
D6Q+S+N+cimeLWX4QS/Pfvl92pM8sl1BlsuDaMAyvR6X49lSlh/1ChyQP6AD
KSLbFWKFPJhnKcdPdhU5KH9IR1JGtruXlfIQGlKen+0qcUj+iE7cHdnuPlbJ
Q2lEBe7hY/vCrJaH0ZiKpCI1aUhLOtKTgYxkIjNZyEo2spODnOSKM0ce8pKP
/HzitYqwRh5OEypRgE/t72etPILneJxf7B7ncLxfOlOQKXZFWSeP5Hkq86td
ZY7E69GFQnxm9wDr5VHslluRIr7j+nKzPlfinFAlzp1ehaPx/jgkdyRtnCt9
k/lSnBn5pjmcP+Qz5htk5y7fz/HxzOw/Nx+M17TboF+Q+5JZH63vkVvH79dT
mrcYFb9Hf9H1FXID7tGv6tflIWTVZ+kn5K6k1zObicw3zSdcmx2TY/JlcwBT
5MNmJ9LFmdI3my/HuWKOcdbsSY74HulfmMXYKI9hr9wmzmncC32l+SzX4sxQ
Nc6aXpXj8Rzoyha9abxH5uqFmSo/xCZ5LC+zSm/I9ThDVOMPvRon4p7SjSJM
s3uYzfKbNGW13oi/40zxJHP0JzkZn4fubNVfITHz9Pv5Un6ELfI49slt4/7H
z+przMbciPPHSbkbWXhKnxuTU/IVcyBT5SNm/MOUnh76NrMZSfiHEcy3/8vs
RUbPMaeZ1Jxg5jKLuv6VXJyU+lb9otwvXj/+Ltb3y+3i2eqpzNuMjmepN3N9
rdyEVPpN/W95KL/Ip8zu8d2Ke+L6OPNp+3kxOS1fNQcxTT5qdiFDfPf17Wbz
+P6zQH+Ar+USbJPH05x1+nPxuePsUp35enXOxDOgJw/yjV1JtssTaEENFtjV
4GzcE3pRjOl2pdghT+RVavIQD/MIxZnhZ0qzU55ES2rxp11N/or3Tm926C3i
WfCnfs7sHc+EZO7TxER3/r9RwrX/ATp2A9E=
           "]]}, Annotation[#, "Charting`Private`Tag$537980#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
           "]]}, Annotation[#, "Charting`Private`Tag$537980#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1GW0VWUUBdCLEiKCrdhid9HdqXR3l3SXdEijdEqDioqFLd3d3d3d5tw/
5lt7feeO8d49Z7+Trk6LMs2TJBKJ436kT5ZIzE6eSBTksvlbelKfDGQkE5nJ
wuc+V4gr5u/oRQOy8oXzwlw1f09vGrLEWW3SsFafRDa+1ItwzfwDfdiutyUd
B/RGLDXX4V7W6Z9xyNydNzitZ2eOuSjXzT/Slx16O57joN6YZea63Md6/Zwc
RBYm64dlD94kkcLvk2ecX5MjyENy5zNkDudfyWKkdHZDv20eywP6PP2U+WNS
6xnkHXKKfET2c32nuT2p9Oflv0zkIf2Q65fMw+L76zlkUjlNfujaclmP+/mb
8Wxwfl4OJitT9COyJ29xVr8uR5KXnPrX8n1umn/itLk/GeNv13fJDrzAYb0J
K8z143uyUZ9KLr7RP+CW+Wf605SVzhrwIJv0aeRmrl6c2+ZfGEAz8sQ+Oi/B
X+ZfGUhz8pKP/BSgIIViJ322ZNwL828MogWFYyedl+If8+8MpiWrnDWM+81m
fTpFYif10vE8zH8whFasdtaIh9miz6Bo7Jxehv/MfzKU3XpHXuSI3po15sbx
/Nmqz6QY8/SysXPM14exx9yJlziqt2FtPHseZZt+QQ4hG7P0o7IXb3NOvyFH
kS+ecTxfWY4kLNDPyAFk4hN9r+zMy/FdmMQx55fjevzf2L+cMpmcLtu6tk42
4W5naeMeMyGetb7d9YvmoaTRs8s75dT4DnK268fMvblHfyf+Njk57rE87/pN
8+jYcz2/TCFnxp7Fjsny8X8Ve8I4Fjo/KweSmU/1fbILr3BcvxLn5KKdvl42
5TF2xLuO4+Y+vMsFvXjsqLlCfAcW6cPZb/6IVzmht2eDuRmPszPej5SIPdYr
kpTF+gg6sFFvzhPsivcjJWOP9Upxv1mij6QjpWKPnVUmOUv1UXSiNGUoSznK
U4GKVIp99vkqcR9Zpo+mM5v0FjzJbn0OlWOf9arcxXJ9DF3YrLfkKfbEu5Aq
zNerkZIV+lgOmLvyGif1q3I4uePe6VtkK55mb7yTOGHuy3tc1KuywFw9do2V
+jgOmrvxOqf0rmw1t+YZ9sV7iWos1GuQilX6eLpRnUXOasYeslqfQHdqUJNa
1KYOdVnsc7VIzRp9Ij3YprfhWfbrczlp7kd6Lum35BgKxH21z7NkWlnPtf8B
EKQIiw==
           "]]}, Annotation[#, "Charting`Private`Tag$537980#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1GWAFlUUBuAPEUEMEBSlWbq7u0O6u5YG2QWU7m5UsJUOE+xWujsURVFA
JOwm7Of8ePac98zu7My9M5OUnNouJU0ikTjpR/b0icSsDIlEcb7Ur2Q4zdlg
1oIE2+QHycFsuQRn9KtIoQU5mWNekrP61aTSklzkJg95yUcS+SlAQeb6u1Kc
069hBK0oxDzz0nylX8tIWvOsWUvSsF1+iMLMl8twXr+OUbwl9yAzx+Q2PKdv
xQ3skB9ms74/93BKLsICfVm+1q9nh34IublfflvtyR0cl9vyvL41adkp71GH
k8RSeYs6gOx8zEQ+Mz8U56QIp5lBUfOFarnYJy7IR9UxXGKDvFMdGmtEHj5h
Mt/xgOPvqL1ib8jCCcbzTfSOH1BHxj1SKK6FabRz7AW1DTfG2jGWXeZ71RTy
s0zeqg4kB5/Lh+N/x/VTTF6kludi7B2jeVfuTVY+ktvzor4t6dgtP0JxFssV
4p5j7xhDB0pQklKUpgxL/F5FLsdeMJaOlI1n2bxS3HvcG+PoRLl4hswr821c
B+PpTPl4PsyrxJrqX2ICXajAUvOqfK/fyES6UpFl5tX4Qb+JSXSjEpWpEvfo
eHV+1L/MZLpTlUfNa/CT/hWm0INqPGZek5/1rzKVnnF9sXfcxJ44B9V5XK7F
L/rXmEavuGaz9qRnb5yXGjwh1+ZX/etMp3fch1kHMrAvzktNnpTr8Jv+DWbQ
h1o8ZV6X3/VvMpO+1OZp83r8Ee8qs0imDs+Y1+dKvGvMpl+sk1lHbmZ/XCt1
WS434Go89+zSDyMvnzIl9ok5jr2n9uHOeA/l/rHG+k5k5EDcE/VYITfkWjy3
zGUA9Vlp3ojrcU7mMZAGNGSVY435U/8+8xlEI1abN+Ev/QcsYHDsp1lnbuFg
rB+NWSM35W/9hyxkSOynWRdu5VCsKU1YKzfjH/1mFsU1yH25i5Py0NhffVdu
43CsO01ZJ9/Lv/otLI7rlJPJFt8aeVjst74bt3NE3qemUoDl8jZ1EDk5LTdj
vb45/+m3slt/H/lYEven9uPu+D4wIfbQ/KA6igsUju8N0+Nv49lSu3OGTBxn
XHwLOOr4fnUE5ynIKabG+8kKx7ergzlHrlgfJsU3gS8cP6KO5iLFYsbMeHdj
nRz/Hwku/cE=
           "]]}, Annotation[#, "Charting`Private`Tag$537980#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1XfclQMYBuBTtIfSpL20NGS0055Ik2gnUWhLUaEd7YWUdlEaRCjKaKkU
pSEV7b1Eu1zPH9fvue/nfc/4znnP++Vr37XxK0kSiUS7pInEuZSJxPepE4ka
PJomkdidKpG431ysvyVnlz+QS8U5+u3Yk5XVej4OyR25Js+mI+k9bqxdIX7R
z3udH+Sa7NHfpiYJ571tl401en4Oy89zXZ7D89zlvHF297FVv+D5fpRr8Yc+
iFokcd4gu+x8rxfgiNyJG/JcOnHR43+yq81efTC1KchRuxe4Kc/jBf5x/lq7
OvypD6EOSb3eYLt7+EEvxDH5RW7J83mRSx6/zq4u+/Sh1OUOjx9idy8/6vdx
XO7MbXkBnfnX49fb1WO/Pox6FOaEXRcSfKx34T/nb9Drc0AfTn2KcNmxjfYN
+EsfQQOKcsWxq1zjOjf42XmP8bfjI3mMYpy0e4kkfKK/xE3nb9If56D+Do9T
nFN2L5OUhfrL3HL+Zv0JDunv8gR3+lyG2uXgp7gmOS2/wh0s0vM4Z6b8SOz1
DPp4uTDb4m/VP4nrOj5Lr7PFbMhhx0o4tkQeJd8jT5VLx3E9mT5MzkkZebm5
Nq4NeV5cM2ZFs4K5Kt67WcLxM3JXqup3xvOZn8V3bn7qeF5zVvwGzLJmOfOb
+GzNro5nNCfo1c0i5kPml+av8d3IC+O5qSR/F9+3/S/mkxyRS9ovlUfL98of
yg/EcT25PlzOxbq4TvX58VyU1M+a3UjGYr0bdztnol6U3+K3xVa5EUflMTSi
FOfsupOcJXr3+G2wTW/MMXksjSkd1318x/FZx3sjBSlJRWrSkJZfPbYJx+Vx
NOEB0vGbfVNOyONpSpm419j1IAVL9R5xP2K73oyT8gSa8WDcS+x6kpJles+4
37BDb84peSLN4336TEbY5Wa9/lDcS+RepOIzvReZnDdJL8b2uDb5XX6K0/Ik
cjhnWlxjsY+/Xx8p5+FB+QtzQ9wT5AVyZSrK35oPxz3J7E01u9TxXZufxz0i
puP5zNl6LbOcWd5cGb9Ns7fjmc3Jeg2zeDynuSLuGeaO+I2bi/Q6ZrV4fXO1
mdGxnebTnInv336ZPFnOKU+P9x/H4/vU35HzsjHuV/rHcpX43cZ90XyVNCzX
8zs+J95r7PUs+hT5fn6Pa5JdcgvOylNoEdeM8961y8fPetm4Z8p9SMsXep/4
XtitP8M5+T2eoVzcM+1eIx1f6q/FZ8Qe/VnOy+/zLOXjPmrXl/Ss0PvG++UP
vSUX5A9oSQWu2PXjLr7S+5GVvXorLspTyeVv+Sh+/5SVvzYbmK3id2GO0vOz
Sa/IVfl1MvC1/jrZ+FNvzT/yh7SmEtnjnhf3CPY53oZL8jTaUDmuTfbbt+Vf
eTptqcI1uzfiOuAb/Y343jmgt+M/+SPa8SjX7fpzNyv1/vE38pfensvyDNpT
lRt2A8jEKn0Auflb78AVeSYd4h7h8xhtV4DNejVuygPJzLf6wPicnfeeXoKd
eh4Oys9xVZ4Vr+GcGfE7iH3cY/QxckG26NW5Jb9JFr7TCzhnrlwh9vG56+/L
JeP6lr8yd9kXj/8BcvW49uU1ZkMzr2P/A63mNN0=
           "]]}, Annotation[#, "Charting`Private`Tag$537980#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"LQR feedback solution\"", TraditionalForm], 
     PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1c\"", "\"u1c\"", "\"x1c\"", "\"\[Theta]dot1c\"", 
       "\"xdot1c\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.863703118216243*^9, 3.8637031489144335`*^9, 3.8637032426554804`*^9, {
   3.8637032743803434`*^9, 3.8637033154942074`*^9}, {3.863703346328354*^9, 
   3.8637033768286085`*^9}, {3.86370342548906*^9, 3.863703489280677*^9}, {
   3.8637035621363974`*^9, 3.8637036282402754`*^9}, {3.8637039697241616`*^9, 
   3.863704044314328*^9}, {3.863704191757216*^9, 3.8637042175479746`*^9}},
 CellLabel->
  "Out[1042]=",ExpressionUUID->"605aaff3-1feb-4482-a053-6eb4b7659c5a"]
}, Open  ]],

Cell["\<\
Observations:
The choice of n is critical and would determine the speed of the algorithm. \
Smaller n has higher speed but may not converge and hence would require a lot \
of re initializations of the initial guess, while a larger n would not \
require a lot of re initializations but would take longer to converge. A way \
to choose the best value of n for a specific system would be extremely useful.
\
\>", "Text",
 CellChangeTimes->{{3.863704362873541*^9, 3.8637045081791234`*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"4eb81403-a99c-42b7-b4a4-36ec4bd675dd"]
},
WindowSize->{1440., 747.75},
WindowMargins->{{-6, Automatic}, {Automatic, -6}},
Magnification:>1.1 Inherited,
FrontEndVersion->"13.0 for Microsoft Windows (64-bit) (February 4, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"f891f112-c914-4bf5-b27c-d7c0d8607b34"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 59329, 1489, 2126, "Code",ExpressionUUID->"b098c715-9c30-421d-bfce-eae26b7e4e91"],
Cell[59890, 1511, 354, 7, 81, "Text",ExpressionUUID->"9be2365f-c4bb-4396-8de9-0c9df9f460d6"],
Cell[CellGroupData[{
Cell[60269, 1522, 7801, 222, 283, "Input",ExpressionUUID->"53d64360-9130-4d93-aa11-669324ba78f7"],
Cell[68073, 1746, 41296, 770, 225, "Output",ExpressionUUID->"2417c214-3666-44db-99fa-deba99db9bbc"],
Cell[109372, 2518, 46897, 859, 226, "Output",ExpressionUUID->"9ef8c67e-f793-4333-b111-df112cf242fb"],
Cell[156272, 3379, 51405, 938, 225, "Output",ExpressionUUID->"4833edc9-86c0-4072-adb3-f0dc06b2a11d"]
}, Open  ]],
Cell[207692, 4320, 258, 5, 56, "Text",ExpressionUUID->"b6d5a503-f5ca-471f-9280-ef8cf6caad0d"],
Cell[CellGroupData[{
Cell[207975, 4329, 8768, 262, 471, "Input",ExpressionUUID->"3024c605-13d1-4af1-8ddb-6b0488dd66d7"],
Cell[216746, 4593, 438, 9, 35, "Output",ExpressionUUID->"fb39f8f6-b34b-4e5c-9f77-e53e4b035e07"],
Cell[217187, 4604, 771, 15, 30, "Message",ExpressionUUID->"6ffde78e-ef3e-4be4-b94b-2d7df50021e8"],
Cell[217961, 4621, 75569, 1343, 225, "Output",ExpressionUUID->"1c37904e-5791-4a73-81fd-17ec84cab135"],
Cell[293533, 5966, 81387, 1440, 226, "Output",ExpressionUUID->"f870b1e4-92fb-4368-9448-b0a24b797972"],
Cell[374923, 7408, 90244, 1582, 247, "Output",ExpressionUUID->"aa4b7c71-65c3-4517-8c23-af6e83b8156c"]
}, Open  ]],
Cell[465182, 8993, 203, 3, 56, "Text",ExpressionUUID->"78f72274-21f2-4a3e-a828-5906a5fe2643"],
Cell[CellGroupData[{
Cell[465410, 9000, 7763, 224, 283, "Input",ExpressionUUID->"b5dee5c3-2101-40ff-b338-91333f517d06"],
Cell[473176, 9226, 670, 12, 48, "Output",ExpressionUUID->"16e982f4-1844-4214-9b8e-65b6fe578413"],
Cell[473849, 9240, 62944, 1129, 238, "Output",ExpressionUUID->"28d4cb37-5035-4ac7-94c9-ff882b9d4613"],
Cell[536796, 10371, 68525, 1220, 239, "Output",ExpressionUUID->"da060047-a2fd-40a4-ae58-c2155d5b8108"],
Cell[605324, 11593, 74466, 1319, 260, "Output",ExpressionUUID->"605aaff3-1feb-4482-a053-6eb4b7659c5a"]
}, Open  ]],
Cell[679805, 12915, 591, 11, 132, "Text",ExpressionUUID->"4eb81403-a99c-42b7-b4a4-36ec4bd675dd"]
}
]
*)

