(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    746607,      14268]
NotebookOptionsPosition[    744525,      14231]
NotebookOutlinePosition[    744961,      14248]
CellTagsIndexPosition[    744918,      14245]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Remove", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
  RowBox[{"(*", 
   RowBox[{"ICs", " ", "-", " ", 
    RowBox[{"Initial", " ", "Conditions"}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ffCartPendulum", "[", 
    RowBox[{
    "ICs_", ",", "n_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "A_", ",", 
     "order_", ",", "maxIter_", ",", "InitGuess_"}], "]"}], ":=", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x", ",", "dist", ",", "xdot", ",", "f", ",", "\[Theta]", ",", 
       "\[Theta]dot", ",", "\[Lambda]1", ",", "\[Lambda]2", ",", "\[Lambda]3",
        ",", "\[Lambda]4", ",", "\[CapitalDelta]t", ",", "bcs", ",", "eqns", 
       ",", "sv", ",", "froot", ",", "xff", ",", "xdotff", ",", "xff0", ",", 
       "xdotff0", ",", "\[Theta]ff0", ",", "\[Theta]dotff0", ",", "uff0", ",",
        "\[Theta]ff", ",", "\[Theta]dotff", ",", "uff", ",", "\[Lambda]1ff0", 
       ",", "\[Lambda]2ff0", ",", "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", 
       RowBox[{"xGuess", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          SubscriptBox["xGuess", "i"], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}]}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"\[CapitalDelta]t", "=", 
       RowBox[{"\[Tau]", "/", "n"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"{", 
         RowBox[{
         "x_", ",", "xdot_", ",", "\[Theta]_", ",", "\[Theta]dot_", ",", 
          "\[Lambda]1_", ",", "\[Lambda]2_", ",", "\[Lambda]3_", ",", 
          "\[Lambda]4_"}], "}"}], "]"}], ":=", 
       RowBox[{"{", "\n", "\t", 
        RowBox[{"xdot", ",", "\n", "\t", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}],
           " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
               ")"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", "\[Lambda]2"}], 
              ")"}]}], "+", 
            RowBox[{"A", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", "\n", 
         "\t", "\[Theta]dot", ",", "\n", "\t", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}],
           " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{"1", "/", 
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"A", " ", 
                   RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
                 ")"}]}], ")"}]}], 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[Lambda]2"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
              ")"}]}], "-", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "-", 
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", "\n", 
         "\t", "0", ",", "\n", "\t", 
         RowBox[{"-", "\[Lambda]1"}], ",", "\n", "\t", 
         RowBox[{
          RowBox[{"2", "/", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"A", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A", "-", "2"}],
              ")"}], "^", "3"}]}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"4", " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"A", " ", 
                   RowBox[{"\[Lambda]4", "^", "2"}], " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
                  RowBox[{"4", " ", "A", " ", 
                   RowBox[{"\[Lambda]2", "^", "2"}]}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"A", "+", "2"}], ")"}], " ", 
                   RowBox[{"\[Lambda]4", "^", "2"}]}]}], ")"}]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"A", " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "-", 
                  RowBox[{"3", " ", "A"}], "+", "2"}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"A", " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A", "-", 
                  "2"}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"A", " ", 
                   RowBox[{"\[Theta]dot", "^", "2"}], " ", "\[Lambda]2"}], 
                  "-", "\[Lambda]4"}], ")"}]}]}], ")"}]}], "+", 
            RowBox[{"A", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"A", "-", "2"}], ")"}], " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A"}], ")"}], 
             " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"A", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A", "-", 
               "2"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{
                RowBox[{"\[Theta]dot", "^", "2"}], " ", "\[Lambda]4"}]}], 
              ")"}]}], "-", 
            RowBox[{"4", " ", "\[Lambda]2", " ", "\[Lambda]4", " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"3", " ", "A", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
               RowBox[{"3", " ", "A"}], "+", "2"}], ")"}]}]}], ")"}]}], ",", 
         "\n", "\t", 
         RowBox[{
          RowBox[{
           RowBox[{"4", " ", "/", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"A", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A", "-", "2"}],
              ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{"A", " ", "\[Theta]dot", " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}]}], ")"}]}], 
          "-", "\[Lambda]3"}]}], "\n", "}"}]}], ";", "\n", 
      RowBox[{
       SubscriptBox[
        StyleBox[
         RowBox[{"x", 
          StyleBox["Guess",
           FontWeight->"Plain"]}]], "0"], 
       StyleBox["=",
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       StyleBox[
        RowBox[{"{", 
         RowBox[{
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}], ",", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}], ",", 
          RowBox[{"InitGuess", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"InitGuess", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"InitGuess", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"InitGuess", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "}"}],
        FontWeight->"Plain"]}], 
      StyleBox[";",
       FontWeight->"Plain"], 
      StyleBox["\[IndentingNewLine]",
       FontWeight->"Plain"], 
      RowBox[{
       StyleBox["xGuess",
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       StyleBox["=",
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       RowBox[{
        StyleBox["Table",
         FontWeight->"Plain"], 
        StyleBox["[",
         FontWeight->"Plain"], 
        RowBox[{
         RowBox[{
          StyleBox["If",
           FontWeight->"Plain"], 
          StyleBox["[",
           FontWeight->"Plain"], 
          RowBox[{
           StyleBox[
            RowBox[{"i", " ", "!=", " ", 
             RowBox[{"-", "1"}]}],
            FontWeight->"Plain"], 
           StyleBox[",",
            FontWeight->"Plain"], 
           StyleBox[
            RowBox[{
             SubscriptBox["xGuess", 
              RowBox[{"i", "+", "1"}]], " ", "=", " ", 
             RowBox[{
              SubscriptBox[
               StyleBox[
                RowBox[{"x", 
                 StyleBox["Guess",
                  FontWeight->"Plain"]}]], "i"], " ", "+", 
              RowBox[{"\[CapitalDelta]t", "*", 
               RowBox[{"f", "[", 
                SubscriptBox["xGuess", "i"], "]"}]}]}]}],
            FontWeight->"Plain"], 
           StyleBox[",",
            FontWeight->"Plain"], 
           RowBox[{
            SubscriptBox[
             StyleBox["xGuess",
              FontWeight->"Plain"], "0"], " ", "=", " ", 
            RowBox[{"{", 
             StyleBox[
              RowBox[{
               RowBox[{"ICs", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "3", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "4", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "3", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "4", "]"}], "]"}]}],
              FontWeight->"Plain"], 
             StyleBox["}",
              FontWeight->"Plain"]}]}]}], 
          StyleBox["]",
           FontWeight->"Plain"]}], 
         StyleBox[",",
          FontWeight->"Plain"], 
         StyleBox[
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"-", "1"}], ",", 
            RowBox[{"n", "-", "1"}]}], "}"}],
          FontWeight->"Plain"]}], 
        StyleBox["]",
         FontWeight->"Plain"]}]}], 
      StyleBox[";",
       FontWeight->"Plain"], "\[IndentingNewLine]", 
      RowBox[{"bcs", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"x", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"xdot", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"x", ",", " ", "n"}], "]"}], "==", 
          RowBox[{"Subscript", "[", 
           RowBox[{"xdot", ",", " ", "n"}], "]"}], "==", "0"}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]dot", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]dot", ",", " ", "n"}], "]"}], "==", "0"}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]", ",", " ", "n"}], "]"}], "==", "\[Pi]"}]}], 
        "}"}]}], ";", "\n", 
      RowBox[{"eqns", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Join", "[", 
         RowBox[{"bcs", ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Thread", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], "==", 
              "\n", 
              RowBox[{
               RowBox[{
                RowBox[{"1", "/", "2"}], " ", "\[CapitalDelta]t", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"f", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}], "]"}], "+", 
                  "\n", 
                  RowBox[{"f", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], 
                   "]"}]}], ")"}]}], "+", "\n", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Subscript", "[", 
                  RowBox[{"x", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"xdot", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]dot", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]1", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]2", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]3", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]4", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}]}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
        "]"}]}], ";", "\n", 
      RowBox[{"sv", " ", "=", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", "\n", 
             "\t\t\t\t\t", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "7", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "8", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", "1"}], 
        "]"}]}], ";", " ", "\n", 
      RowBox[{"froot", "=", 
       RowBox[{"FindRoot", "[", 
        RowBox[{"eqns", ",", "sv", ",", 
         RowBox[{"MaxIterations", "->", "maxIter"}]}], "]"}]}], ";", "\n", 
      RowBox[{"xff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"xdotff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Theta]ff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Theta]dotff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]1ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]2ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]3ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]4ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"uff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}], "^", 
                  "2"}]}]}], ")"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], 
                RowBox[{"Cos", "[", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}]}], "-", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}]}], ")"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      "\n", 
      RowBox[{
       RowBox[{"xff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xdotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "\[Pi]"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"uff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"uff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", "\n", 
      RowBox[{"{", 
       RowBox[{
       "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
        "uff", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
        "\[Lambda]3ff0", ",", "\[Lambda]4ff0"}], "}"}]}]}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"testSwingUp", "[", 
    RowBox[{
    "ICs_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "uff0_", ",", "A_"}], "]"}],
    ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eq", ",", "init", ",", "x", ",", "xdot", ",", "\[Theta]", ",", 
       "\[Theta]dot", ",", "xs", ",", "xdots", ",", "\[Theta]s", ",", 
       "\[Theta]dots", ",", "t", ",", "J"}], "}"}], ",", "\n", 
     RowBox[{
      RowBox[{"eq", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"x", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"xdot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"xdot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"uff0", "[", "t", "]"}], "+", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
             RowBox[{"A", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]dot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"uff0", "[", "t", "]"}], "+", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
            ")"}]}]}]}], "}"}]}], ";", "\n", 
      RowBox[{"init", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"xdot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]dot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
        "}"}], "=", 
       RowBox[{"NDSolveValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"eq", ",", "init"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
         RowBox[{"Method", "->", 
          RowBox[{"{", 
           RowBox[{"\"\<DiscontinuityProcessing\>\"", "->", "None"}], 
           "}"}]}]}], "]"}]}], ";", "\n", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"{", 
       RowBox[{
       "xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots", ",", "uff0",
         ",", "J"}], "}"}]}]}], "]"}]}], "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{"CalculateSMatrix", "[", 
   RowBox[{
   "x1a_", ",", "xdot1a_", ",", "\[Theta]1a_", ",", "\[Theta]dot1a_", ",", 
    "u1a_", ",", "\[Tau]_", ",", "A_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x", ",", "L", ",", "RHS", ",", "xdot", ",", "\[Theta]", ",", 
      "\[Theta]dot", ",", "u", ",", "K", ",", "S", ",", "soltn", ",", "Af", 
      ",", "Bf", ",", "Q", ",", "fx", ",", "xState", ",", "R", ",", "Mf", ",",
       "x2dot", ",", "\[Theta]2dot", ",", "S0", ",", "sol2", ",", "t"}], 
     "}"}], ",", "\n", "\n", 
    RowBox[{
     RowBox[{"xState", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
       "}"}]}], ";", "\n", 
     RowBox[{"x2dot", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{"u", "+", 
         RowBox[{"A", " ", 
          RowBox[{"\[Theta]dot", "^", "2"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"A", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ";", "\n", 
     RowBox[{"\[Theta]2dot", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{"u", "+", 
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ")"}]}]}], 
     ";", "\n", 
     RowBox[{"fx", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
       "xdot", ",", "x2dot", ",", "\[Theta]dot", ",", "\[Theta]2dot"}], 
       "}"}]}], ";", "\n", 
     RowBox[{"L", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", "2"}], "*", 
       RowBox[{"u", "^", "2"}]}]}], ";", "\n", 
     RowBox[{"Af", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{"fx", ",", "xState"}], "]"}]}], ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{"For", " ", "nD", " ", "stuff", " ", "use", " ", "Grad"}], 
      "*)"}], "\n", 
     RowBox[{"Bf", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"fx", ",", "u"}], "]"}]}], " ", ";", 
     RowBox[{"(*", 
      RowBox[{"For", " ", "1", "D", " ", "stuff", " ", "use", " ", "D"}], 
      "*)"}], "\n", 
     RowBox[{"Q", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{
        RowBox[{"Grad", "[", 
         RowBox[{"L", ",", "xState"}], "]"}], ",", "xState"}], "]"}]}], ";", 
     " ", 
     RowBox[{"(*", " ", 
      RowBox[{"Fix", " ", "this"}], " ", "*)"}], "\n", 
     RowBox[{"Q", " ", "=", " ", 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"1", "0", "0", "0"},
         {"0", "1", "0", "0"},
         {"0", "0", "1", "0"},
         {"0", "0", "0", "1"}
        },
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}}], "\[NoBreak]", ")"}]}], ";", "\n", 
     RowBox[{"Mf", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{"L", ",", "u"}], "]"}], ",", "xState"}], "]"}]}], ";", "\n", 
     RowBox[{"R", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"L", ",", 
        RowBox[{"{", 
         RowBox[{"u", ",", "2"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"S0", " ", "=", " ", 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]]}], ";", "\n", 
     RowBox[{
      RowBox[{"RHS", "[", "t_", "]"}], " ", ":=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"IdentityMatrix", "[", "4", "]"}], " ", "+", " ", 
         RowBox[{
          RowBox[{"Af", "\[Transpose]"}], ".", 
          RowBox[{"S", "[", "t", "]"}]}], " ", "+", " ", 
         RowBox[{
          RowBox[{"S", "[", "t", "]"}], ".", "Af"}], " ", "-", " ", 
         RowBox[{"KroneckerProduct", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"S", "[", "t", "]"}], ".", "Bf"}], ",", 
           RowBox[{
            RowBox[{"Bf", "\[Transpose]"}], ".", 
            RowBox[{"S", "[", "t", "]"}]}]}], "]"}]}], ")"}], " ", "/.", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "->", " ", 
          RowBox[{"x1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"xdot", " ", "->", " ", 
          RowBox[{"xdot1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"\[Theta]", " ", "->", 
          RowBox[{"\[Theta]1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"\[Theta]dot", " ", "->", " ", 
          RowBox[{"\[Theta]dot1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"u", " ", "->", " ", 
          RowBox[{"u1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}]}], "}"}]}]}], ";", 
     "\n", 
     RowBox[{"sol2", " ", "=", " ", 
      RowBox[{"S", " ", "/.", " ", 
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"S", "'"}], "[", "t", "]"}], "==", " ", 
            RowBox[{"RHS", "[", "t", "]"}]}], ",", 
           RowBox[{
            RowBox[{"S", "[", "0", "]"}], "==", "S0"}]}], "}"}], ",", "S", 
         ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], " ", "}"}]}], "]"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"S", " ", "=", " ", 
      RowBox[{"sol2", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}]}], "\n", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CalculateGains", "[", 
   RowBox[{
   "x1a_", ",", "xdot1a_", ",", "\[Theta]1a_", ",", "\[Theta]dot1a_", ",", 
    "u1a_", ",", "time_", ",", "A_", ",", "\[Tau]_", ",", "S_"}], "]"}], ":=",
   " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x", ",", "L", ",", "RHS", ",", "xdot", ",", "\[Theta]", ",", 
      "\[Theta]dot", ",", "u", ",", "K", ",", "Af", ",", "Bf", ",", "Q", ",", 
      "fx", ",", "xState", ",", "R", ",", "Mf", ",", "x2dot", ",", 
      "\[Theta]2dot", ",", "S0", ",", "sol2", ",", "t"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"xState", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
       "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"x2dot", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{"u", "+", 
         RowBox[{"A", " ", 
          RowBox[{"\[Theta]dot", "^", "2"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"A", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Theta]2dot", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{"u", "+", 
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ")"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"fx", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
       "xdot", ",", "x2dot", ",", "\[Theta]dot", ",", "\[Theta]2dot"}], 
       "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Bf", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"fx", ",", "u"}], "]"}]}], " ", ";", 
     RowBox[{"(*", 
      RowBox[{"For", " ", "1", "D", " ", "stuff", " ", "use", " ", "D"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"K", " ", "=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Bf", "\[Transpose]"}], ".", 
         RowBox[{"S", "[", 
          RowBox[{"\[Tau]", " ", "-", " ", "time"}], "]"}]}], ")"}], "/.", 
       " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "->", " ", 
          RowBox[{"x1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"xdot", " ", "->", " ", 
          RowBox[{"xdot1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"\[Theta]", " ", "->", 
          RowBox[{"\[Theta]1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"\[Theta]dot", " ", "->", " ", 
          RowBox[{"\[Theta]dot1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"u", " ", "->", " ", 
          RowBox[{"u1a", "[", "time", "]"}]}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", "K"}]}], "\n", "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"testWithFB", "[", 
    RowBox[{
    "ICs_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "xff0_", ",", "xdotff0_", 
     ",", "\[Theta]ff0_", ",", "\[Theta]dotff0_", ",", "uff0_", ",", "A_"}], 
    "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eq", ",", "init", ",", "\[Theta]", ",", "\[Theta]dot", ",", 
       "\[Theta]ff", ",", "\[Theta]dotff", ",", "x", ",", "xdot", ",", "xff", 
       ",", "xdotff", ",", "uff", ",", "t", ",", "\[Kappa]1", ",", 
       "\[Kappa]2", ",", "\[Kappa]3", ",", "\[Kappa]4", ",", "ufb", ",", "u", 
       ",", "\[Theta]s", ",", "\[Theta]dots", ",", "xs", ",", "xdots", ",", 
       "us", ",", "J", ",", "S", ",", "K"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Kappa]1", "=", 
       RowBox[{"\[Kappa]2", "=", "3"}]}], ";", "  ", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"lqr", " ", "for", " ", "q"}], "=", 
        RowBox[{"r", " ", "for", " ", "balancing", " ", "pendulum"}]}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"\[Kappa]3", " ", "=", " ", 
       RowBox[{"-", "0.1"}]}], ";", 
      RowBox[{"\[Kappa]4", " ", "=", " ", 
       RowBox[{"-", "0.65"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"xff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xdotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "\[Pi]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"uff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"uff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"S", " ", "=", " ", 
       RowBox[{"CalculateSMatrix", "[", 
        RowBox[{
        "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
         "uff", ",", "\[Tau]", ",", "A"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"K", "[", "t_", "]"}], " ", ":=", " ", 
       RowBox[{"CalculateGains", "[", 
        RowBox[{
        "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
         "uff", ",", "t", ",", "A", ",", "\[Tau]", ",", "S"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ufb", "[", "t_", "]"}], " ", ":=", " ", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"K", "[", "t", "]"}], ".", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"xff", "[", "t", "]"}], "-", 
                RowBox[{"x", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"xdotff", "[", "t", "]"}], "-", 
                RowBox[{"xdot", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]dot", "[", "t", "]"}]}]}], "}"}]}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         RowBox[{
          RowBox[{"\[Kappa]1", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]3", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"xff", "[", "t", "]"}], "-", 
             RowBox[{"x", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"xdotff", "[", "t", "]"}], "-", 
             RowBox[{"xdot", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"u", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{"uff", "[", "t", "]"}], "+", 
        RowBox[{"ufb", "[", "t", "]"}]}]}], ";", "\n", "\n", 
      RowBox[{"eq", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"x", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"xdot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"xdot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"u", "[", "t", "]"}], "+", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
             RowBox[{"A", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]dot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"u", "[", "t", "]"}], "+", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
            ")"}]}]}]}], "}"}]}], ";", "\n", "\n", 
      RowBox[{"init", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"xdot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]dot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}], ";", "\n", "\n", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
        "}"}], "=", 
       RowBox[{"NDSolveValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"eq", ",", "init"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
         RowBox[{"Method", "->", 
          RowBox[{"{", 
           RowBox[{"\"\<DiscontinuityProcessing\>\"", "->", "None"}], 
           "}"}]}]}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"us", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{"uff", "[", "t", "]"}], "+", 
        RowBox[{"Piecewise", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"K", "[", "t", "]"}], ".", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"xff", "[", "t", "]"}], "-", 
                 RowBox[{"xs", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"xdotff", "[", "t", "]"}], "-", 
                 RowBox[{"xdots", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                 RowBox[{"\[Theta]s", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                 RowBox[{"\[Theta]dots", "[", "t", "]"}]}]}], "}"}]}], ",", 
             RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
          RowBox[{
           RowBox[{"\[Kappa]1", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]s", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]dots", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]3", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"xff", "[", "t", "]"}], "-", 
              RowBox[{"xs", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]4", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"xdotff", "[", "t", "]"}], "-", 
              RowBox[{"xdots", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"us", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"{", 
       RowBox[{
       "xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots", ",", "us", 
        ",", "J"}], "}"}]}]}], "]"}]}], "\n"}], "\n"}], "Code",
 CellChangeTimes->{{3.862753343189165*^9, 3.862753411389415*^9}, {
   3.8627553611496043`*^9, 3.8627553647834463`*^9}, {3.862755542386807*^9, 
   3.862755582254092*^9}, {3.862756179429644*^9, 3.8627562078485813`*^9}, 
   3.8627563320549693`*^9, {3.8627564690202875`*^9, 3.8627565488258357`*^9}, {
   3.8627568793814173`*^9, 3.8627568873778677`*^9}, 3.8627585165043135`*^9, {
   3.8627585965107956`*^9, 3.862758689290209*^9}, {3.862758834699833*^9, 
   3.8627588555911727`*^9}, {3.8627590963373947`*^9, 
   3.8627590998392787`*^9}, {3.8627594410134716`*^9, 
   3.8627594626865597`*^9}, {3.862759635094576*^9, 3.8627596377257366`*^9}, {
   3.862759669455618*^9, 3.8627597448635693`*^9}, 3.862759795914287*^9, {
   3.8627603319473376`*^9, 3.862760490473783*^9}, {3.8627605307139487`*^9, 
   3.862760536806006*^9}, {3.8627610047197795`*^9, 3.8627610478400292`*^9}, {
   3.8627611285982723`*^9, 3.862761147921111*^9}, {3.8631982964294224`*^9, 
   3.8631982970332265`*^9}, 3.8631983363504767`*^9, {3.863208693665881*^9, 
   3.8632086943846474`*^9}, 3.863210007245922*^9, 3.863271804426487*^9, {
   3.8632718412836447`*^9, 3.8632718583741503`*^9}, {3.8632719591337743`*^9, 
   3.863271959351703*^9}, {3.863272049174841*^9, 3.863272070205083*^9}, {
   3.863272113471178*^9, 3.863272123024109*^9}, 3.8632747752128673`*^9, {
   3.863274857845314*^9, 3.863274901443305*^9}, 3.863274985905165*^9, {
   3.86327502591031*^9, 3.8632751590365314`*^9}, {3.8632751952308993`*^9, 
   3.863275233662552*^9}, {3.8632753992893295`*^9, 3.863275415841012*^9}, 
   3.8632757933676972`*^9, 3.863276112914017*^9, {3.8632763683199444`*^9, 
   3.8632763983313017`*^9}, {3.8632764721665745`*^9, 3.863276525061578*^9}, {
   3.863278235705888*^9, 3.8632782777863655`*^9}, {3.863278324944213*^9, 
   3.8632783286160316`*^9}, {3.863552728717914*^9, 3.8635527298355513`*^9}, {
   3.863613419658352*^9, 3.863613423534114*^9}, {3.8636150904008484`*^9, 
   3.86361513154671*^9}, {3.8636152078133564`*^9, 3.8636152525520706`*^9}, {
   3.8636152893383236`*^9, 3.863615479516596*^9}, 3.8636157247782784`*^9, {
   3.863615879717803*^9, 3.8636159617646036`*^9}, {3.8636160220243616`*^9, 
   3.8636160299278383`*^9}, {3.863616069486206*^9, 3.86361607601912*^9}, {
   3.863699007217822*^9, 3.8636991515617003`*^9}, {3.8636996033223495`*^9, 
   3.8636996129842625`*^9}, {3.8636997844214835`*^9, 3.863699805489752*^9}, {
   3.863699907217247*^9, 3.863699944316393*^9}, {3.863700788168758*^9, 
   3.8637008845809517`*^9}, {3.863702046275758*^9, 3.8637020830100203`*^9}, {
   3.863702595245346*^9, 3.863702645292355*^9}, {3.863884194660141*^9, 
   3.8638842031804175`*^9}, {3.8638909914788537`*^9, 3.863891009810995*^9}, {
   3.863891113237941*^9, 3.8638911537729845`*^9}, {3.863891279619763*^9, 
   3.8638912855948534`*^9}, {3.863891344230113*^9, 3.863891351574766*^9}, {
   3.8638925953132634`*^9, 3.8638925989880886`*^9}},
 FontWeight->"Plain",
 CellLabel->
  "In[404]:=",ExpressionUUID->"b098c715-9c30-421d-bfce-eae26b7e4e91"],

Cell["\<\
Check the performance of the new initial guess mechanism for the case where n \
= 40 and greater was required.
We see that n = 6 is only required here which is excellent!\
\>", "Text",
 CellChangeTimes->{{3.863702780704089*^9, 3.8637028585982*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"9be2365f-c4bb-4396-8de9-0c9df9f460d6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  StyleBox[
   RowBox[{"n", "=", "6"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Tau]", "=", "2.5"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Tau]1", "=", 
    RowBox[{"\[Tau]", "*", "1.25"}]}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"A", "=", "0.2"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"order", " ", "=", " ", "4"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"maxIter", " ", "=", " ", "100"}],
   FontWeight->"Plain"], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.048555026816794494`"}], ",", 
      RowBox[{"-", "1.560065966757075`"}], ",", "0.7613152376955525`", ",", 
      "1.9382391342292873`"}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"InitGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}]}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\n", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
       "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
       "\[Lambda]3ff0", ",", "\[Lambda]4ff0"}], "}"}], "=", 
     RowBox[{"ffCartPendulum", "[", 
      RowBox[{
      "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", "order", 
       ",", "maxIter", ",", "InitGuess"}], "]"}]}], ";"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1b", ",", "xdot1b", ",", "\[Theta]1b", ",", "\[Theta]dot1b", ",", 
       "u1b", ",", "J1"}], "}"}], "=", 
     RowBox[{"testSwingUp", "[", 
      RowBox[{"ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "u1a", ",", "A"}], 
      "]"}]}], ";"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x1c", ",", "xdot1c", ",", "\[Theta]1c", ",", "\[Theta]dot1c", ",", 
      "u1c", ",", "J"}], "}"}], "=", 
    RowBox[{"testWithFB", "[", 
     RowBox[{
     "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
      "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A"}], "]"}]}], 
   ";", 
   RowBox[{"p1a", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1a", "[", "t", "]"}], ",", 
        RowBox[{"u1a", "[", "t", "]"}], ",", 
        RowBox[{"x1a", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1a", "[", "t", "]"}], ",", 
        RowBox[{"xdot1a", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1a\>\"", ",", "\"\<u1a\>\"", ",", "\"\<x1a\>\"", ",", 
         "\"\<\[Theta]dot1a\>\"", ",", "\"\<xdot1a\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Feedforward solution\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}]}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{"p1b", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Theta]1b", "[", "t", "]"}], ",", 
       RowBox[{"u1a", "[", "t", "]"}], ",", 
       RowBox[{"x1b", "[", "t", "]"}], ",", 
       RowBox[{"\[Theta]dot1b", "[", "t", "]"}], ",", 
       RowBox[{"xdot1b", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
     RowBox[{"Filling", "->", 
      RowBox[{"{", 
       RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Theta]1b\>\"", ",", "\"\<u1b\>\"", ",", "\"\<x1b\>\"", ",", 
        "\"\<\[Theta]dot1b\>\"", ",", "\"\<xdot1b\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<Test on dynamics\>\""}], ",", 
     RowBox[{"AspectRatio", "->", 
      RowBox[{"1", "/", "3"}]}], ",", 
     RowBox[{"ImageSize", "->", "400"}], ",", 
     RowBox[{"GridLines", "->", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], "]"}]}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{"p1c", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1c", "[", "t", "]"}], ",", 
        RowBox[{"u1c", "[", "t", "]"}], ",", 
        RowBox[{"x1c", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1c", "[", "t", "]"}], ",", 
        RowBox[{"xdot1c", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1c\>\"", ",", "\"\<u1c\>\"", ",", "\"\<x1c\>\"", ",", 
         "\"\<\[Theta]dot1c\>\"", ",", "\"\<xdot1c\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<LQR feedback solution\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], "]"}]}],
   FontWeight->"Plain"], 
  StyleBox["\[IndentingNewLine]",
   FontWeight->"Plain"]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.863699832878002*^9, 3.8636998879424076`*^9}, {
   3.8636999587037973`*^9, 3.863699966845196*^9}, {3.86370068689312*^9, 
   3.863700742439372*^9}, {3.863700775571786*^9, 3.8637007771342835`*^9}, 
   3.863700945211579*^9, {3.863700998427576*^9, 3.8637010107976217`*^9}, {
   3.8637016473912125`*^9, 3.863701669091281*^9}, 3.863702035899074*^9, {
   3.863702126179226*^9, 3.863702160529252*^9}, 3.86370251869481*^9, {
   3.8637025705572357`*^9, 3.8637025888983755`*^9}, {3.8637026681560507`*^9, 
   3.8637026692896886`*^9}, {3.8637027081322765`*^9, 3.863702762285972*^9}, 
   3.8637029838601737`*^9, 3.8637033230088053`*^9, {3.863884225388322*^9, 
   3.8638842448491*^9}, {3.8638842916161537`*^9, 3.863884295082047*^9}, {
   3.863891061309538*^9, 3.863891063069975*^9}, {3.863891163269951*^9, 
   3.863891163428899*^9}, {3.8638912925906177`*^9, 3.8638912940581484`*^9}, {
   3.8638913677266035`*^9, 3.8638913686183195`*^9}, {3.8638926039804945`*^9, 
   3.8638926063767295`*^9}},
 CellLabel->
  "In[411]:=",ExpressionUUID->"53d64360-9130-4d93-aa11-669324ba78f7"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{249, 1412, 197, 198, 199, 200, 201, 202, 203, 204, 
            205, 206, 207, 208, 424, 364, 315, 276, 248, 232, 437, 377, 328, 
            289, 261, 449, 389, 340, 301, 209, 425, 365, 316, 462, 402, 277, 
            453, 393, 474, 344, 467, 407, 478}}]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwl0ldsT2EcBuDzLxK7xo09EitI7Hljc2FFJcQMtUnsdWGFCjEjRmioTWJv
XdrSxowYQYii9o1ZxQ3l+dKLJ+/ve8/3nZOccxomzkqYGRdFUYzXHGN1mShK
Is+cyzWukkM2WVwhkwzSSSOVy1ziI7+p7sZdmcFRLuo+8Itq1l2YzhEu6ErL
BvRjceh4r28mB7OCTH7qqsrOTOMw53Ut5VCSyKEUo9jATerTl0VhP++cGSM3
cZumDGI5GRS5vkM+ZDhryaMKW7hLJ54ylUOcc6ZAJvOEseSzmTu04AXbeUAC
z1hFNnG8YiePGMlz1nODemzlHn1YGJ7JW8/dJR8zmo3cognbuM9AlpHOD/uH
yTXkEk9HpnCQs643l0NYSRYxRrCO69SlNwvCft4401gOYClpFOoqyw5M5gBn
opKfrg69mB+6WMk/2Ej2ZwmpfNdVku2ZxH5O6/5R29yTeaGjQPeNiuZ2TGQf
p3TF1DL3YG7ownvWfaWCuS0T2MtJ3V9qmrszJ3S81H2hvLkNiaRwQveHGuZu
zA5d+M66z5Qzt2Y8eziuy+cTZa1bMY7d/Af+x3rE
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{1, 135, 108, 88, 72, 60, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10, 
           11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27,
            28, 29, 30, 31, 32, 33, 34, 35, 136, 109, 89, 73, 61, 52, 36, 137,
            110, 90, 74, 62, 53, 142, 115, 95, 79, 67, 37, 138, 111, 91, 75, 
           63, 54, 143, 116, 96, 80, 68, 38, 139, 112, 92, 76, 64, 146, 119, 
           99, 83, 55, 144, 117, 97, 81, 69, 148, 121, 101, 86, 39, 140, 113, 
           93, 77, 150, 123, 103, 65, 147, 120, 100, 157, 130, 84, 153, 126, 
           106, 56, 145, 118, 98, 156, 129, 82, 152, 125, 164, 105, 160, 133, 
           168, 70, 149, 122, 163, 102, 158, 131, 166, 87, 154, 127, 165, 107,
            161, 134, 169, 40, 141, 114, 162, 94, 155, 128, 78, 151, 124, 104,
            159, 132, 167, 66, 85, 57, 71, 41, 58, 42, 43, 44, 45, 46, 47, 48,
            49, 59, 50}]}, Annotation[#, "Charting`Private`Tag$263549#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1HmYTXUcBvA7akgLiUgqJhSKpBRa0CKtylpSpKKipkVKZR9RRLRQWmxZ
hjJbiBrbMGYsM5p9n2kjKiottvL5Pf743Pd73nt+z7lnuSdmcGzPZ6IikUhH
H/HyIzmIKziNX3SlLOdj24/Qlpr8qitjhflZOnMex0LHJ+bBXMnp/KYr53Pz
c3ShIcdDx6fmR2nHGRzQVfCF+Xm6cj7/hY555se4ijM5qKtkpfkFbqIR/4eO
+ebHuZqz+F23Rr7GnTSjSpcgR3AzF4SLQ4JYIIfQnlr8oftKjuYumvOdLlG+
yC1cyFbe5AGiSGUC99GKRGsWyqFcQ202M5m+/On7tXIMd5PNu1xCBm8xgDw+
4Hv7J8mR3EoW73AR6UylhP7kMocKqrGeiRTRk928RxmXsZ0ZlPIw+XxIJUmO
u0g+QSHXspOZnE0aU+jHt7zPIWvWybHcw6VkMp2H+MH3yfIlutGYbUzjQU5h
A3H04nKSrflMPkkH6vCX7ms5jh604EddinyZ22jCqaToF8unok7+L87hb91P
fMkS28PoRF3+0e1hFavDMxWei3DPwrmF4/INqaxnAxvZxGbSiIuORLbIraSz
jQwy2c4OdrKLLLJZ6tjDuY56/KvbG36jeRTdiSGajUyiN63DfbXfMvk017OL
WZzLFt6gmPvJYTblHA7nIsdzLy35OZy7fIXbuZjq4R7r42V4wdxAfY7o9pFD
LnnkU0AhRRSH9419Y7mRBhzV7Q/X1/wqd9CUGmzidfrQhh28zUAKmEsVJdaf
AM+1rg0=
           "]]}, Annotation[#, "Charting`Private`Tag$263549#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV02WAVVUUgNE3M3R3gwwoiiClIlLKSLeDKKggDKGIgIp0SVoobdJ2YCPS
EgZhY6AoSnd3r/1j8Z2z733vzQ1SM/ql901KJBJj/bONrCmJxJLkRGI4LalI
IbY7toOd7GI3e9hLNp9Z6pwRtOJ6CrPPseyOLbMeSWsqUYT9juVwbLn1KNpQ
maKUMv9Rp9CV+hxwfk7zFdZP0pYbKEZp8590KhncxkHn5zJfaT2aO6lCccqY
/6zT6MbtHHJ+bvOvrMeQTtW4FrN/dA79KMFVZr/odLpTx/6QfkwDqtvv0LcY
yGHfncdslfVYGlmf0XbcYr1PP6Ba3B/7f3Uuza0v6qNxTdbH9PO4dusUSlqX
1V+1vc7QpnpeO2kPrauHtYN+Es9Ak+hKmn0N3al369vaQi9pZx2kaXpS79VF
cR81E0dcU15dbTaOxtZn9S5qWe/XBXEv4rnab9V5PBb32/64LoxnTar9Jn2R
ntSL79dPuYMb7XfpOwzmqN/OZ7bGenxce1xHvA9m/+l8Ho/3gnJmv+lLPEhD
jvl8fvO11hPi2uM34r2gvPnv+jIPxbPiuPMLmH9t/RT3cFO8B5xwrKBj31g/
HfeZm+O5cNKxU5zmDGc5x3kucJFLXI7/gM5PIpkUMlHI936rz9CRmnGvyExh
x77TZ+PZxHsU18rV5n/oK/SK50IWipiv0+e4L55RXCvXmP+pr/IwTchKUfP1
OpH7uZUqZv/r6/SP36KC2WZ9jd7x/sW9Mdut7zKEbBQz26DPx7sZ32d/QD+k
NlXtt+kbPEED+xP6RfyNXGv/l86kmfUFfYT61kfj/uhn2kaTyaBZPAvdE89M
39OWelkf0KHxfumpuCf6paZrZrqR3b64boz3Wl+I+6Pn4p5o5/jb9aB+RCvr
BF2oY19Nt+ubDIh7xXVmf+ss+tCcHJQw/14nxd9G3bhmcpKL3OQhL/nITwFK
+twPOpku1IvfoKL5Fp1NX1rE+2O2V99nGA3tT+ti2llnoTsF7a8AVpu07g==

           "]]}, Annotation[#, "Charting`Private`Tag$263549#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwNy2NzmFEYBNA3TWrbSG3bNtP2D3Smtm3btm3btm27qd2eD2fu7j5zw5u0
j2gXEgRBJE1DgyB/WBDE4ZV8ijVMpxnNaUFLWtGaNrSlHe3pQAH/4/JaPs1a
ZtCRgvZ4vJHPsI6ZVLGF80++z0E6UcgWn7fyWdYzi6q2jAQ80A/RmcJ6At7J
59jAbKrZMhHCQ/0wXSiiJ+S9fJ6NzKG6LTNReKQfoStF9UR8kC+wibl0o5g9
MZHyRTYzj+70oCfF3ZPwUb7EFubTixL2pHySL7OVBdSwZSGUx/pRelNST8Zn
+QrbWEhNW1bCeKIfow+l9OR8ka+ynUX0pbQ9BV/la+xgMf0oY0/JN/k6O1lC
f8raU/FdvsEuljKAcvbU/JBvsptlDKS8PQ0/5VvsYTmDGMwQhjKM4YxgJKMY
TQV/0/JLvs1eVlDLlo2oPNWPM4aKejp+y3eoL+cmFhHkpRH73Op6cxKDF/pK
asvZicYz/QRjqaSn5498l/2sYhzjmcBEJjGZKUylsj8Z+Cvf4wCrqWPLQXSe
6yepJ+ciJi/1Bt48xKYh+WjMNLf/NgR/2w==
           "]]}, Annotation[#, "Charting`Private`Tag$263549#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV03eAznUcB/DnbBkJlZVCkXAys2d2ZlzGicged/bmjiiZZZeyEyWyUsiq
kK1spbL3Ktm8vn+87v3+fO658Xx/3ydXm7hG3aMikUi0LzHJIpEqySOR1BzV
VzGDD3iLpjSjOS2IpSVv04rWvEMb2vIu7WhPBzrSic50oaq/8wTH9NV8wmi6
8rp9Go7r3/EpH/KmXTYu6r+wmG5Us0vLH/oaZjKGxnbZuaRv5Su6U90uHX/q
3/MZY2lil4PL+ja+Jo4aduk5of/A5+F9m1/ilr6PccSYn+OKvj28V70ISVgS
zkW+wj39YPhf9BKkIN5cUz7JX3oPWYq14fxkNI/0WeG89bz8r/eWZdkfzk4W
YyjJ6E9FhjM+PEeZk0FcNfeSZRjGr+G5yKIMISn9qEAi34RnKgswmPvmPrIc
h8I5yZKkZACV6GFfS2bgb72nLM26cB9kYSLMDvdH5uO2/lt4rnpxkjMh3D/5
PNf0HSwN98tckAf64fD7qW1+in/09cwJ99L8Mnf035kY7rL5Ba7rO1kWzoM6
dhk5qf/IXD4K994uFzf0XXwbzp437DJxSt/APD4OZ0Nd+8yc1jcyn0n0pZ79
05zRN7GAyfSjPwMYyCAGU99rn+GsvpkvmBI+i3a5uanvZjlDaGD3LOf0LeGz
p79KFH0pTwILw2dW5ueufoCpxJrz8K++hxUMpaFdFs7rP/El0xhGAokMZwTv
MZJRNPIzWbmg/8wiptPS7kX+0/eykvbmQjzUjxCvv0YqBlKZEbzve48BxDKa
Hg==
           "]]}, Annotation[#, "Charting`Private`Tag$263549#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"Feedforward solution\"", TraditionalForm], 
     PlotRange -> {{0., 3.12499993622449}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1a\"", "\"u1a\"", "\"x1a\"", "\"\[Theta]dot1a\"", 
       "\"xdot1a\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.863702134579542*^9, 3.8637021627135525`*^9}, 
   3.8637025210160646`*^9, 3.863702578124817*^9, 3.8637026714539957`*^9, {
   3.8637027226726294`*^9, 3.8637027640764*^9}, 3.8637029884806967`*^9, {
   3.8637033266226506`*^9, 3.8637033354478307`*^9}, 3.863879327529692*^9, {
   3.863884217207935*^9, 3.8638842652235885`*^9}, 3.8638842967265196`*^9, 
   3.8638860360506268`*^9, 3.8638906095889077`*^9, 3.863890848019706*^9, 
   3.8638910663699183`*^9, 3.863891132659732*^9, 3.8638911691100826`*^9, {
   3.8638913595922036`*^9, 3.863891384033392*^9}, 3.8638926082491283`*^9},
 CellLabel->
  "Out[416]=",ExpressionUUID->"bee9d1a4-c477-45c9-9d5f-da4fa3ae2b83"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
5qx1HWCYx8Ob7mzfk45s+P/7w6vl/wJPUsvW
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{332, 1528, 280, 281, 282, 283, 284, 285, 286, 287, 
            288, 289, 290, 291, 507, 447, 398, 359, 331, 315, 520, 460, 411, 
            372, 344, 532, 472, 423, 384, 292, 508, 448, 399, 545, 485, 360, 
            536, 476, 557, 427, 550, 490, 561}}]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwl00dsznEYwPH3LbX3asyYQYjS2hd7XlDrYNe4oDUOVpDY86I1D1aQEDP2
vNgcrCAhRkWMIDatxPg8cfjk+/s975O8b/t/3wbZuVk5KYlEIkkBvylKTSQK
STOsQXWqUZUqVKYSFalAecpRljKUpjP9mcRaLvCLUnSiHxNZw3mKKMlwZrKF
mzHz4TrqPHZyL97XrK9OYDXnKKQEC9nDw/i89obpQZ5R232GbuZG7Lt30MMU
UNd9ru7gbvxt7n30LU2c9+lj0pzH60vqO6/SFnpWf5JKpvsHba5HNF1faD1d
oK31jTbW3dpSH8T/V4dqhr7TpnpAW+lTraXT9RUNnTfp9XhP5/b6nmbOh/Q5
dZzn6GsaOW/XO/HMnHvrXh7Fc3bP1pWc4QfFmc8u7sdztzNE9/OEmu7TdCPX
Yt+9nc5mG7fje2HWS8exgtN8pxiDyWUDV2Nmt63OYiu34jtl1lPHspxTfCOF
LHJYz5WY2c3UHoxhGSf5SpJBTCWfyzGzn6HdGc1STvAl+f8HMZAp5HEpZvbb
aDdGsYTjfOavlwfoZNZxMWbxnOnKSBZzjE/8sZ+uXRjBIo7ykX/Iy2lU
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{1, 198, 151, 113, 84, 63, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10, 
           11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27,
            28, 29, 30, 31, 199, 152, 114, 85, 64, 52, 210, 163, 125, 96, 75, 
           32, 200, 153, 115, 86, 65, 53, 211, 164, 126, 97, 76, 33, 201, 154,
            116, 87, 66, 54, 212, 165, 127, 98, 77, 34, 202, 155, 117, 88, 67,
            219, 172, 134, 105, 55, 213, 166, 128, 99, 229, 182, 144, 78, 223,
            176, 138, 109, 233, 186, 148, 35, 203, 156, 118, 236, 189, 89, 
           227, 180, 142, 68, 220, 173, 135, 239, 192, 106, 231, 184, 248, 
           146, 242, 195, 251, 56, 214, 167, 245, 129, 238, 191, 249, 100, 
           230, 183, 247, 145, 241, 194, 250, 79, 224, 177, 246, 139, 240, 
           193, 110, 234, 187, 149, 243, 196, 36, 204, 157, 119, 237, 190, 90,
            228, 181, 143, 69, 221, 174, 136, 107, 232, 185, 147, 57, 215, 
           168, 130, 101, 80, 225, 178, 140, 111, 37, 205, 158, 120, 91, 70, 
           222, 175, 137, 108, 58, 216, 169, 131, 102, 81, 38, 206, 159, 121, 
           92, 71, 59, 217, 170, 132, 103, 82, 39, 207, 160, 122, 93, 72, 60, 
           40, 208, 161, 123, 94, 73, 61, 41, 42, 43, 44, 45, 46, 47, 48, 49, 
           209, 162, 124, 95, 74, 62, 218, 171, 133, 104, 83, 226, 179, 141, 
           112, 235, 188, 150, 244, 197, 252, 50}]}, 
         Annotation[#, "Charting`Private`Tag$263660#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl03e8l1McwPHfLbclWrSIknJxu7mVQqFFoaibCg11taNbZouSFqGFtIy0
aVrRoCVN7YV2GWU0KW68v6/+eN/Pec7vvH7P7znnuWUyszK6JSUSiVv9ydY/
9GMG0II7qch5n/2pn/ASLanJTfzHckbRlQdizvrj+ikDaUUt0uNmORKJFTqa
x2kUc5zgMwbRmtpUIsn6lfoGT9A45jjJ5wzmUepQmRzWf6NvEg+XEXOcYgFD
aENdLrb2O32H56hCTnOr9C2yaBJznOYLhtKWu8hv7UZ9l57czEXmvtUxdKeE
6x/1Ix6kkOttOpnnYz1n+JKXyaSoNbt1BndzietN+h5ljX/SXlxpvE/nkGJ8
TKuSbLxa3+Ya4yPag5LGezRNZ+l1ejT2WZtqYd2uqTpFr9Wf45z1Bb1KD8Q7
ofP0ev0t9l2T9S8WcqPrV7S0HtLHKGb8vc6knPEvWo9LjTfr+/SmlOv9Opdq
5HK9RsfyJFe43quzaUYR1zt0Kv1iPX+ziGG0oz4FrNuik+jDLeQ2t1bH8RTN
Y46zLOZV2nNP0oX/kTycYwmv0YF7uY285It3Kt6LOLN4trgvBePcY3/j93IZ
l8c5x77E701OJIrHuxJnFM8YZxt7EXvO1bGXlInzjHeAf/iK1+nIfVSP3+iZ
1ul4nuahuJ+5nTqN/nGu/MvXDI/v9flh7URx4x+0gn6o5fVXTdcG8Sy6VT+g
LzXi2c2t1wk8w8NxxmSzlBF0piG3x3fGu0dKvEPcEO8MqXFfzrOMkXThfu6I
/XWfDTqRZ3kk9tHcLp3Oi7FXrg/q/Phe49+1iqbp/5XYjDE=
           "]]}, Annotation[#, "Charting`Private`Tag$263660#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV03mATWUYB+CLlGgvIpUUSZTIvu/bMGaGmbEvYys0EyrapSxlqVRSGGUp
O9mJFkWLvbJXKrsipb3I8/7x3Pf3vve73znnnnNKZuWkZedJJBIjfVTJm0jc
ky+RuJFv5TkMoy9VqUZ1alCTWtxrbQkOyHN5KvagNv3Mb+I7eR7DY32sMavG
n/J6XqMO/c1K8r08n6djj/idWXX+kj/ideoywOxmfpAX8EzsEb8zq8Hf8sdM
ph73md3CQXkhI3hR34yL+CL2jH3kmvwjb2AK9ck2K8UheREjmaBvTgG+jGPE
vnIt/pU38oacQRGm6iepyVzGXn0DcuTSHJYXM1Vuy9WM0r+ktuBi5tGDr8xn
qB1YTjEW0ZvsOD+1Nkv4L+6P2p2VfKJ/U81kGdeykF6sJjfui9qGpVzOfLJY
xT7fz1I7sYLiLKYPDX13v3orR+TZalfekXPVdlzDaP3LaksKslM/U+3IdeTo
R6l1OCt/yrS4//oUrmC/vhED5TIclZfwLK/okyjErjgnRst1OSd/FveGxgwy
u41j8lKeiz1jH7N6/C9/Hv8ZTRhsVpbj8jLGxB405QHz2zkhL2dsrKcZzWlB
S5JoRWuSaUMKqaTRlnakk0EmD9q3HD/KKxgXx6M9D5mX5yd5JeNjfVyLWX0S
bNJPpwND9HdwUl7F87FHXItZA/KwOZ4xOjJUfyen5NW8EHvE9cU9Jy9b4h7S
iYf1FfhZXhPvGhP1rbiE3bFnXIPciHxsjfNT21OUWfH+qqlcydf6t9TOXB9V
/4h6F6flOWo33o1nRU2nMAvoyQTzV9XWXMqeOM/4r+TGXMC2OAZdeFRfkV/k
tfEexvHoymPmlfhVXhfPcqynG4+b380Z+b14FmM93XnCvDK/ye/HfxLr6UEW
PenFk9ZU4Xf5gzjv+G3cJ7Mm5Ge7/m16M0xflT/kD5kUe8R9MmvKhezQz2aK
nMZVfBN7qF24Id5T+rIm3mffnQfxD8QP
           "]]}, Annotation[#, "Charting`Private`Tag$263660#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwNzkN6REEUgNHX6Y5to2NuJkvIApJBlhfbtm3bOIPz3fpv1aCibR2t7aEg
CDrpCgdBWSQIMojwqR+5oZseeumjnwEGGWKYEUYZY5wJJplimhlmmWOeBRZZ
YpkVVlljnQ022WKbHXbZY58Dyv0zk1i+9BO3VOlcEvnTbxxSobOI41vXm0Wk
0UgJzTy7qzULSCGGO7tqM48kAt7tjog6ZxPPj37hnmNOOOWMcy645IpK73NI
4Fe/8kCNzieZEB92dWYhqYRpoJh0miilhWtv/wHROENK
           "]]}, Annotation[#, "Charting`Private`Tag$263660#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1HegjnUUB/DXLkk0VColpGnvdW3ZXHtzrax77b23hpFZyGinQRsNDeva
u5IZTUVDisjn/PFxvuc81zue33ne/ClpyakZEolEun+KZE4kpmdJJB7kqPw8
I+hMUWaYP8Qx+QVG0oViFKcEJSlFacpQlnKUpwIVqURlqpBEVapRnce9/sMc
l19kFCnU4AnzRzghv8RoulKTJ82LcFJ+mTF0Y4VZDS7IH/E0tXjKrCjfya8w
lu6sNKvJP/LHzKU2M82KcUp+lXG8rW/ONezQ94h7JtfiX/kT5rFe34HcHNTX
YZZcnNPya3whd+d2xuvfUVtwLTv1PeOey7W5KH/KVrkPdzM/vp/akRs5zBgO
me9WB3JffF+m8Kj5bLUE3wf9fnUoq+Qv1R6cIS9HGMcfTHD9XbUlP5OdrxjJ
OXa5vkNN4zcKxJkxifM8Fmer1uFHLukPqsPZIKerfbmHBXEOaiduivfR71EH
UZi6+jlqSX6QX2ej3JM7mKh/T23FdezW94r9iXvAf/JnLIzz0nfmZr7W14t9
kUvF55TfYBK9Y8fivbksf84i6se+mJXmJ/lNJtMndsysHlfirHmGBrEfZmXi
PspvMYW+NGS+eVl+kVczlX40ojFNaEoyzWjOAn9fLs5NXsM0UmNnzerzf5wt
z9IivrdZeX6NfWZTnA93xm9A7CJ/Mt2199XW5GCPPi12V25Ago36xbSM+6Gv
EOcfu8wM+tMqvrt5Rc7GHsUzzwBax+cyrxR7FOcWzzwDWWXWkAxs0i+hTbyf
vjK/x+eL3wEGxR6YNSIjm/VLaRv/T18l9lj+IH4HourbcD179YPjrOXGZGKL
/rl45uQu3MI3+nbxunJS3CP5QzbLvbiLmTFT25IzdopR7DPfqfanICeZzJDY
GbVJ7A+ZOcQItrq2Te0XZ0V+jsd+8xfLXN+gpsS+kIdvGRv3hsOu71UHx33n
fk4xlb9pH99RrRrPUbym/oA6jLXyFrU3+TjGBGaZr1XbcUPcE0az33yXOoBC
DI3dVpuShXT9djWVe1kez6DalVvjc+s7sEyuxnl5XfxeRY3PSi4O6IfFsyEn
k5Vt+hV0ZLm+enw/eX38TjA8nguzZmRju35lPMNyN27jiH5fnAcPcJppXKCT
a1cBas39uA==
           "]]}, Annotation[#, "Charting`Private`Tag$263660#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"Test on dynamics\"", TraditionalForm], 
     PlotRange -> {{0., 3.12499993622449}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1b\"", "\"u1b\"", "\"x1b\"", "\"\[Theta]dot1b\"", 
       "\"xdot1b\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.863702134579542*^9, 3.8637021627135525`*^9}, 
   3.8637025210160646`*^9, 3.863702578124817*^9, 3.8637026714539957`*^9, {
   3.8637027226726294`*^9, 3.8637027640764*^9}, 3.8637029884806967`*^9, {
   3.8637033266226506`*^9, 3.8637033354478307`*^9}, 3.863879327529692*^9, {
   3.863884217207935*^9, 3.8638842652235885`*^9}, 3.8638842967265196`*^9, 
   3.8638860360506268`*^9, 3.8638906095889077`*^9, 3.863890848019706*^9, 
   3.8638910663699183`*^9, 3.863891132659732*^9, 3.8638911691100826`*^9, {
   3.8638913595922036`*^9, 3.863891384033392*^9}, 3.863892608387084*^9},
 CellLabel->
  "Out[417]=",ExpressionUUID->"dcad3bd9-3c9e-4eab-aa1b-42cd8781fe2f"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
5bmlp0yN1w33UZ47Mf7ys1bWAOW5K72mB+b8+M9zi3Y4zPte85/nRuz2lTzV
NEZ5Lk9PeCefywTlubPnfDop5MSlPDfmgFLPlT4u5bl6MR4+m37/57mz48oX
V57kUp6b/IGHR8l0gvJce/9yb8v945Tnboxg7ZL4MUp5rtb041u2W0aA9Nyr
ocGJjwKHgPTc+oyby+xfDQDpuQbvZ/m/qOkD0nNjX5rxhD3rBtJzVVfFLbj7
ph1Iz1UyfytpxmkD0nOrrkUs/EA0A+m5fUM1322f/wbSc9ULkh93dv0E0nMz
ytM30ecVA+m5t8onnbyfvQbSc49dDVArGnlLkJ7bZGXA/c4tJUjPPTAuPWib
UEWQnisU5nNuMbuBID03jr1iVORQC0F67s0/uhtaBVgE6bnny2QTvUU7CNJz
t5vN1zeq7CZIz9U8eW715d4+gvTc+rikO/XfBwjSc5+OI81Hz4YI0nPnaUvn
HH4yQpCe+3GXdH6UdD+Qnnsw0MQzQr0HSM+13intlVjYAaTn7vxUNv9sMRtI
z01ctHHlux9MID33ocRsSwPNFiA9V+nUfLfH9CYgPfeYVLuWyu3fQHqu56ah
DXNe1QLpuQx9kWc12T+B9FyH59mFm88xQWbqffTUtg+gYXS0q8uvE+58zWae
0CsEr+Y06a7ZfeA0eHw+27AeDGRWiS1tGwUf/tXDqyL/gB+/iNi7rHHoPJNt
oXC8GZSDqrPXCnLBTeTqOj2jVmCl8K9rLuLCiEieWoRlGyxX9E1VGeZCiPkX
w69n2HBjR9zC6QQuuPiX2yuYt8P2xedLEtsnQJ3PpDnKphNq5QJSRX6PA+nD
3WW3+57GDxOkD+/YvvmI+9IBIH24Z2e3J3dpH5Ce61aUK16dWA2k54ZX3X/T
M9UMLd2NZ52H06ClPxgvPzpAoWd85NWpfPBr35TUJtULC5kcVX2NX9AmvdOh
2GQUzgitORZ+txFUuZqrlI6Nw5r1q2mc6iYo4uMrf1k4AU6XNqR4VbfAdjX3
iitPuZCbfn7rl04mhM+Pzasc4YLr4hXN7kwWTJ+7r/WngAtSX+xaNJo44Pdx
jfyvFVzI8u3NzB/ogD2IN69RZgJIH1a3yPz6ZuUwQfrw7WU3pVbEDADpww7b
LZuko/qA9FzZUu2/+s9rQLzAVbU74DlszL3ZQ3NhgZFwSK2XcxaktP5ipDZ3
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
XJJDEeXNgQxx0TzLEsqHH3ufdeOLL6Dypz91nx/S/FVC+a7/2lq+NR3TVF40
1CRgfVRuP5UXbZRd8rm6sY/KiyboCZe1ru2j8qK3FHzOVCj1UnnRo29meT/b
3gOk3zY3cn85uHYD6bdK0mHS9IYuIP02LjTZt+NCF5B+e8B9670zIl1A+q1d
34fsPrzOFbgyi1fm9jD0yiWLiS/phHiHCHFL7xEYX8LzRbe2A9SLt10+HzIK
Svc1hSJudIDM3BKmTNAYvHwYeuDRgg6w0HaV9/Ybh8f+jyf2BbRDxu/dCWER
E5Ar+CosroYDbCuPXcL3uXAOXTnfwMOBocqHQvzPJkEx8CR7gM2iPHhX9KjF
yeB7VP5VKKrbd/hXHpV/rb9xbfMWs0yC/P8Gdwdz7ObueQnk/zd4ly67z4ad
AeT/N9B43qWTFZwDDn1X5o44MdCc/bdONdvkg2yBz3bDKQZ6sFVlvu2O//zY
um4Jr5puMZD+e//v7B28Vd1A+m+nBiv528puIP3X85t2b2p0F6RqXOBG8Y/A
Ojubp5PjHRCSn7DmqtAo5MYE5T143QFmZQbzLUXHoEgtrE/vMH5/jG1DicLj
oHaw1COzqp3y4D8Jnss6PNOovOxJxSqBJ2N5RNMpl9JjuwTR8J7ywYvHiygP
1u/Zv6NJq4TyW5GIonfyWwupvCoc07t+IaeEyp/mbXq9+llFAeWhKnmh4umD
JZSHLp9FLIsbmabynRX7E7MNS/qpfGfV/W6P7tY+Kt/JO6Zn1bSxj8p3Lt2c
df/d7l4q3ykxEzWzb08PkN753OjoFxmPbiC9U7Hp3VO1pi4gvfOh9ax9vRZd
QHqni3rT+t75eD7/v3fOv8fnXl/aCYdTz+9Vdx8GR8G1zwbxd+LnwFsH213x
fL3ict/nXx0gcJvJZ+83CkFRMhdue3ZA0Pof5/XvjEH8L36DI4s74N1B8TBR
r3G4s/1J3dGQdnjk8tAlLXACJOLoeZENHHjVajvj6c+FnoYCqyJBDli+ZL9/
HDMJB5OvP7boZ1F+yjkgrafQduu/vOruc6WEUR6VV1UMDyKeD2YS5O//87Xl
4qaDXwD5+/9o857aY/EZQP7+P3eZ0I2HBjnwSbf/7L//izG0SLuErp8PGS4X
ci6NM5DhMtVrmSv/81betTa0u6rFQHppXLNsJ+tXN5Be6iW1IKtIoRtILz27
54uZeRx+v/6ESuHkMDCCTAZpk/h9NIbpj/CNgke4x02jlA6QuyuY6DJrDFbk
J9x4eQS/v1Vg38Q/DnPCxo631LVTfvrK2+P0Yq+3VL71pabwEUHIJxxEDHTO
7xBET37YM2L2FVF+uoXvoAZACeWdYfLtoHKjkMqXvn9oQxSklFB50Z1SR68f
1img/NDih9CjQFYJlb+kP69kqmsWUr43NzvzVyZPKeV7rMfl96snp6k8ZJVw
QzGU91N5yNcbGJ6TrD4qD+ml9/zm2S19VB6Sd7JKdP2+XioPWXbC9fn9vT1A
+t3d48wdXK9uIP0uKWaNycWWLiD97gRPa7e9ZReQfhdxR9d2x8IuIP1us4mp
4fcvnWBdGXT29LVhEBvQC2qS6AQ9qek/iU4jIHKQVTRZ3wFtZpkVrrdGYe+3
W2ZTXh1QknNihYPPGPRqWefILekAg/3sL3XXx2HNohuB1WHtEFZS0pp/dwL8
ohwWBf/lwNxHHU277nAhbMLxZoYwB+TF5t6zeTAJynONNKVHWJQHymUnLJgR
8abyne2RfXtyl+VR+c6kI3ddnitnEeTvyXWujsRHqbwA8vfkZ4LPXXjslQHk
78m3FxwQ6NqTAw0Cb+8+sWGgT963g+5o5gNPdTWvwygDtZt/aNSV/M8PA6dZ
EzIqxUD639uPz1iNDd1A+l/PX3XNA4rdQPqf9P30zWpPumBJcpdh3dgwKF7c
ckVgqgP2XxLuS58egbKNuw5lp3YA7dJfO0/6GGQEWXw9ehS/v/cFmyd5xsEx
Vqt6oL6d8sA999ByK763VB605LSilOG5fCLn0pfQS9sE0YVL7CtrlYsoD7Sw
Pf20ZXsJ5XezJndpsp4UUnnMgB6GBPtFCZWv9P54XihTtIDysL09wsf6/5ZQ
eUWeA9Km1sKFlFctGeJq7ZooofKAdZt+J231K6Q8SenNvtwtjFLKk+h+u54x
Rsao/N+mL5f006JGqfzfkTTxO297h6n8H5/Zh3o3zSEq/9d67mSPcMIAlf/T
myUq5vG1j8r/DWy7s/qVaA+V/0u7cH+WongHlf+bZzhW6LOAReX/jAMTWrVV
W6j8H//LI1ECOxuo/N9AuI2Wz90qKv93T7lTsdXgC5X/i/8kbuL1JZ3K/4X/
EJj5qBtBedL8e3MKUmTyKE8y0y9Oadn+lfIks2aBBIuyKsqTluxyX83rUk95
UqnBTuHNGn8pT4r5bhS4hdtMeVL2pyvhv6ZbKU/qOqDcWRnz3+9h1UQ+qY8u
ZFOetNBn3ky6AofyJOmtKk9WDHMoT3J4bF6Q49FOeZKp+0ebBxntlCe5ld24
FBDdTnnS6avj236va6c8qblQ67rDVQ7lSQlOTmpXjdmUJ+mF8v5WnsWiPGnK
IbVgji2T8iRhjZ1IwrSF8qTksMl53xWbKE/Skry/XqKjnvIk5enqS6rK1ZQn
zYo6u154/Vcq/+eczrFwUSGo/N8r5T2/yroLqPxf5axPLttWfaXyf5wW2+HZ
bj8pTwrbpGo1V6KW8iTbD4YR1/3rKU86kL/eZ/xUI+VJirPKrW8QfylPKuD/
LJU13UR50iuWd4d2azPlSWZESXX1xxbKk9KClty0PjpGkF5zWFgiwqmGSXmN
5SHuXfXzLMpr8kRH5D4msimvMWowTHkVyaG8pvRpmqS92n9eM/1h75eR+HbK
a3bt8lwc9a6d8hq9wCQ/syvt0Pij+UWi9DSYdIhlu/7mwLs8OZOrK2bAjMl/
p32YDTNdESachTxo8reZsWE2C5K1K+4dC+FBL77kj6gcaKO8J0bQ9K/6vGIq
z2dYMRDjfCObyvNx9TMqRpVKKZ+RyZrWSD7eQvnMTXmnLVrPxgjSP4Syk0OS
cD+l/IO7YQcvjUX5x2GG5bTwWTblH8j56K4/5zmUf1wtOZXBWfaff2hc7ohY
e7+d8o9ZEX/DDT60U/7hpDHWkPAvd/H2f0XbeTiU2x8A8BGl5Wob0bToJkVc
pQ2V+qJEQkVkKSlaZI1qbuoXWVqIS6SyhpQoa9c+lmJkLVl+qa6YmJkX2Qvz
vmN+5z7Pb07z33ne53mXc77n+57zme+7S5/RJYTz28lY31kEyuPKrolfp8Ez
sfeU63Y+ODxVnnGtTwRxf7FuGy/kwdOC/DZDb5puf+PsFTPSe7GfJC1a8dfc
53W4/o6+rmKojl6I6++ydNiVpnFs7B12G2M+NK7gYK8QvW6VTSjjYq8IW14q
GuvnYa+IDylQXl7LB243t9hgrwCY1guvlJ5G+539RqcH95LA6wqNWpFNgJR2
xdXvhyhoydOJP5pBQI0ZbRfTXggNqln0pkOof0aCFmkfn4bvF2IsGjL4sGOZ
ovnBsyLI2FrfPvCChz3kKZMT3OrwBtfTBfr2XbJ1qMT+8SGh+T3tNgf7R57w
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
/w+0rts0
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{1598, 1597, 378, 379, 380, 381, 382, 383, 384, 385, 
            386, 387, 388, 597, 539, 491, 453, 426, 411, 610, 552, 504, 466, 
            439, 622, 564, 516, 478, 389, 598, 540, 492, 635, 577, 454, 627, 
            569, 648, 521, 640, 582, 652}}]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{1598, 1600, 399, 654, 585, 643, 527, 575, 633, 479, 
            517, 565, 623, 441, 468, 506, 554, 612, 414, 429, 456, 494, 542, 
            600, 398, 397, 396, 395, 394, 393, 392, 391, 413, 428, 455, 493, 
            541, 599, 390, 440, 467, 505, 553, 611, 412, 474, 512, 560, 618, 
            427}}], 
           PolygonBox[CompressedData["
1:eJwV0kdszQEcB/B/KymxghrlQs1DlSBBUEQJsfvaC6q0Nt26iJEKGkRir4u9
LmY52NTFKg5WSmLVuljFwajP//DJ9/v9vf/Le8l78Vl5kdzoIAiiqCFDGRYT
BEks0csopYRiilhMIQXkk0cuOWSzh+Pc5BMdfEAai/TzPOQXPdwy2a0fo4qP
tHdLZaF+jgf8pLvbTHbpz6int72Ao3ojOZBCbtgfiNMj4TN6czmUMl7YDWQ/
cqi0m8jBFHPfHiGX8UNfI7sxg532RjmacpqyjiGU8NTr62Uyy/lnr5W9mM8R
e4McxUoaUsEACrju9eFyKe/11bIdKeH77TFyFc1IopTn7iPlCqLpSzZn3RvL
QRRRbdfRVc9gh/6EvyTa8zisx8j+5HPNfkdbfXL4jF5DlN4n/F05Y9/jO13s
6WzXH/OHnvZcDulXqaWNPSm866e5yzc6u6WzTT/IFd7S2m0ic/RT3OEr8W7T
2Kof4DJviHWbwGx9FllksoX9XOI1rTwzPvxv6Se5zRc6uU1ls76Pi7yipdu4
8L+gn+AWn+noNoVN+iN+kxB+X/bqF3hJC3ss/wGoMm46
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1Hl8z3UcwPGdQtmwpcM2qaQsplELpSY6tLKtYW3rogPVViFKoRzl6KDS
oaL7cnfrEF2KLlcH5eigkCtKOXq+H/547vX5fPZ77Pf5fL+fx5r2qimtTkxI
SLjEj2gtP97XUVTRiTYkkUwKqfE5DqI2dajLwRxCPdJIpz4NaEgGmRxKIw7j
cI7gSBqTRTY5NOEomnJ0fJ+9zdPRsV/Ooi3HxD787gO9i0vpzMnxXda/0Ae5
lhKOjT1bn693cxldOCX2Zf1LfYjrKKVZnM/6Ah3D5Zwde7P2nU7hZgriTNa+
0klcz0Ucb22NvsBQjotnZe1DHcsV5Jmv1xmcE2c2/16nMohTzbfqmzGO52b+
tT5MofFurY53Zbwxvlfn6HnxXikzPkHXarG+GGfWvVquw/Q0/Uu76zt6viZT
SfN4t/qRXqjj9Az9W3tqL22tG+KZ6cw4h+7Xc+P9Gf+gT8V7M/5PB9POeJu+
FeO4C+bf6CPUxPs136Svxr5oYb5OX2J4PNu4b9Y+1vH0jjPHnbC2Up/mFtrH
HbO2RB/lBnrEMyHN+id6D1fSNe6ItVX6DLfSIe6ntaX6GDfG/TLfrK/FMyDX
/Gd9mTtir6Rb+1Tv5SpOMv9dZ8Xzjbtl/qM+G3fWeI8Oif0ab9e3472QZb5M
J9PJ+F+9Ke6s8Z9apq/H3jWJCsrNT9RftERfiXur+/RivVNP153xLPRdLdIU
qsg1r68LtZvep2fqP3o1+cZ/6Ox4x/HPg6K43/qTPsdt8ezMd+jc+D6yzZfr
4/SnwHyLvhH7oqX5rzqNEXEGGlj7TO/nGi6gubXV+jy305Ecayv0CQZQEX+P
htY/1wn0iTsc95dWZPjdIp1I3zhrnJM8Wsc7I9NnFusD9KOYQppY/1afZCCV
8Tet/abTGRn7Mt+l78W+jVMTD/y/zTf/H9YDkwM=
           "]]}, Annotation[#, "Charting`Private`Tag$263772#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV03e8jmUYB/D3nERUCJlRFMneo4gyK8Ihyc4mW7KPfY51jlEUpSK7jIhQ
dvbIlq3sbNkjvvcf3/f6Xdfzvp/3fu77ebI36xTTMSoSiRT10Zh3oyOR1JyQ
l/MdLfV5uS/vYwwf6V/kiryZeTThPbPn+Fv+je8ZS32zl7gqb2E+TalmloZ/
5N+Zwjg+phnNaUF130nLSXkFU/mcBmbZuSZvZUFYL++bpeOUvJIf+IKGZjm4
Lm/jZ1pRw+x5TsurmBbm+nw8kPcznkb6l/lP3s5CPtEXJorD+tbUlNNzRl5N
Z7kESZkevqPm56F8gAlh//WvcEPewafy66Rgkb69WoRoYqnIEfMealmeZRBV
aWNeS83AEM7qe6vlWSN3UUsSTzL6U4mRzHC9jVqAOP7X91MrMIK/9J+pZRjO
MwykCgl8GZ4FNSdDuanvq77Nn3J39Q2e5hd9B7UoT3BU31N9k5S01ceoGTkn
r6WrXIqnmKlvqxbkkXyQr8Kzpc/FLXkni2lHbbNMnJfXMYuJ4Xkze5Xb8i6W
hHOljllm/pX/YDaTwlmEdRNenk7hfMOehrXRLZxduM+wT+F8wj3Ri7JJnYPa
J+xJ2Fdi6c8ABjKIwQzhA/+dhQvyeubwdXg3zHJzR97Nr2Et+mIk4Zh+KHXl
F7gY/lN9iw1hjWpphpGcAVRmVNh7a/wx7JdciAiH9N+E91F+jbvyHpYSx4dm
Wbkkb+QnJhPPMIYzgpGMIoFE6vlNNi7Lm5jLt7Qwy8M9eS/Lwj7ri/Mkx8N+
quVIxWDeIZHRrj0Gdb+aRQ==
           "]]}, Annotation[#, "Charting`Private`Tag$263772#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1HmATlUUAPBvRqVNKalkKSUtqGghIYoWFVFKJi0KlcyobCEklN1sxhIz
lLSpLA2imtaxFbLNosXSJhRlF37nj993zj3vvvfuu995r3qntLapSYlEIsXP
uOREYkaZRKITV3LYeCNfMJ50Msgki2wm8Ia5T1CLI8ZFfEkOb6o9SW3+Ny7m
KyYyU60zdThqXMLXLDTuS1POYqfaJN6Sd+EqjhmX8g2LjF+kGWezS20ys+Rd
uZoEm9S+5RN5P26hAn+rTeFt+VNcQxI/xnxxOK24kEK1xWJ/buUc1pJJCv84
vlIczf1cyutq74hPU5dk1pDOQ/zkeKH4Kq1jnXEOF7GBCTzCz+Sy1Pwl4gC2
0JxSpvAbFVlHFtt4OO7BNP5gt/O/E8ewlXbxrEzld2pSxER+5TF+IS/mOPdd
8RnqUcJkyvADGXSItZq3VHyNe6nORnJ4lGWOfyq+RAvOZT3ZdGSP49+LY3mA
y2L9au+J3biWE2JdasvEEbThYparfSYO5DbO41+1XN6XP8t1nMhmtRV8Lh/E
7ZzPf2p5zJZ353pOiv2O/5fpfGCcyg2Ujb2MfY13KN6J6P3o8ejb6MXor+iD
2L94jlhLXD+uw4d8xBzmxtj10qjPyfE/xn4wL+YZ96ABp8R/pLaKAvlg7qAS
e9XmxzXlz3Ejp0aPqK2O91r+MndyAfvUPo77y5+nIadFT6gtF0fSlkuif+Md
F4fQksrsj3WI43iQy8mPNYsvcBOnRw/GnoujuI8a0TvxXRBf4S6qcEBtQTyD
vCeNKMefamvjWyEfyt1U5WB8O+IZ5L1ozBlsV1sX3wnyjXvThDP5S219fBPi
vY73Kvoy+id6Iu5vTh9upjw71DbEd0c+jHuoxqHYU3E87bmCYibxePQZ02Pt
FJh7HDS1yAQ=
           "]]}, Annotation[#, "Charting`Private`Tag$263772#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV0Xe8T3UYB/Bz3UtCCiFkZ2SlzJKRRMPq2qMUEcm9GYXIjEJWKhllVUb2
XmVUViErZGfPi2vLeH//eP8+55zP8/qd73k9eVsmxifERFFUwM+Z2Cg6HBdF
C/icFpTncc7qznGeCyRxkUtcJpkj5hYyiLd4lpxc0f0nFzGYt3mOXFzVHZWL
GUJLKpCba7pjcglf0IrnycN13XG5lKG8Q0Xy8j9b+YEe1OeG+RNyGcNoTSXy
cYe/+ZGeNOCm+ZNyOcNpQ2Xyc5dt/MQnNOSW+VNyBSN4lyo8wW3dabmSkbTl
BQqEs+rOyF/4knZUpWA4l+4u9zjr/ldG8R4vUoh7bGcqvWhExDlW8RXtqUbh
0KWMoh1yGr1pTAznWc3XvM9LPBk68zvldPrQhBRcYA3f0IHqFAmd+V1yBn1p
SixJrGU0CdSgKHFc5De+JZGXKUZKLvE7Y/iAVyhOKi7zB2PpyKuU4AFS8yBp
SEs6HiI9D/MIyaxjHJ14jafCeX3DP/Jn+tGMDFxhPePpHP7f3H45L7zD9cHw
DlkznEH+K+cwkJLhWz3bLWfSn+Zk5Cob+I4u1OJpMvEombnGRr7nQ2rzDFm4
ziYm8BF1KEVWbvAnE+lKXUrzGDf5i0l043XKkI1bbGYy3YmnbNiJb9gjZ/Ep
b5Cd22xhCh9Tj3JhT+b3ytkM4M2wG8/2ybl8Fnbk/oCcH/bk+lDYk8wh7wMb
OZtT
           "]]}, Annotation[#, "Charting`Private`Tag$263772#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV0neg1WMcwOHTHtJtl5Jc0lQaihRtpb2JBklLGlTKalDaFE1t2pOitAuh
lGgqTZEmLWkYz/eP537e93vPPefc9/0lt+vepFuKRCJR0o+kNInETb5kHN1p
QlWykJVsZCcHOclFbvJwG3nJx+3k5w4KcCfJ3MXdFOQfvmI8PWhKNe7hX7Yw
gZ40ozq3pk0k9ugcBvAshfiPr5nIizSnBpm9fq/OZSDtKUzC/BudxEu0oCZJ
5vt0HoN4jiKkMP9WJ9OLx+P/NTumnzCSR+OczPbrfN6kQ5yB2W+6kjEUJaXZ
Vv2A3nEu9qd1DU/EOdof1+WMolacv9lPuoC34pzsz+l6OsY525/UVZS0/kvH
xve3/lM3Ucb6uhYjlfU2vV+naHG9pA9qn7gnPaPlda3ep1f1IW0Z96y/aDld
oSX0ilbQ0XHO+oc+oBu1tF7T2vEcWR/QhdxrfVkHx11an9cNdIrnxv53/Zz3
4uzsL+jm+L6ktv9Op/IyT8azZ3ZCP+UdHiO72UFdxBA6x+eSxny7TqMvT1GH
HOY/62Lepkv8f6Q136HT6Ucr6pLT/JAuYSjPxx2Qzvx7ncErtKZenCXp/W6n
zuRV2lCfUnFWcVeUjfuJMyaD1/+gs3iNtjQgl/lhXcowusadkdH8R/2Q1ylo
f1bXxWdY/60V9WnNr7/qZ7xLQ3KbHdFlDOeFuEtuMd+lH/EGz9Aonpu4+3g+
4n2pxMM8QmUy+bvdOpv+tKMxecyP6seMoBvJZqd0Ne9TzP6ifhFnYn0j3l+r
6P+v7o5D
           "]]}, Annotation[#, "Charting`Private`Tag$263772#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"LQR feedback solution\"", TraditionalForm], 
     PlotRange -> {{0., 3.12499993622449}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1c\"", "\"u1c\"", "\"x1c\"", "\"\[Theta]dot1c\"", 
       "\"xdot1c\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.863702134579542*^9, 3.8637021627135525`*^9}, 
   3.8637025210160646`*^9, 3.863702578124817*^9, 3.8637026714539957`*^9, {
   3.8637027226726294`*^9, 3.8637027640764*^9}, 3.8637029884806967`*^9, {
   3.8637033266226506`*^9, 3.8637033354478307`*^9}, 3.863879327529692*^9, {
   3.863884217207935*^9, 3.8638842652235885`*^9}, 3.8638842967265196`*^9, 
   3.8638860360506268`*^9, 3.8638906095889077`*^9, 3.863890848019706*^9, 
   3.8638910663699183`*^9, 3.863891132659732*^9, 3.8638911691100826`*^9, {
   3.8638913595922036`*^9, 3.863891384033392*^9}, 3.8638926085800223`*^9},
 CellLabel->
  "Out[418]=",ExpressionUUID->"419390e8-7bb6-45af-8ac6-d07bb8d10712"]
}, Open  ]],

Cell["\<\
Understand the performance of the functions wrt random initial conditions\
\>", "Text",
 CellChangeTimes->{{3.863702871824973*^9, 3.86370289295422*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"b6d5a503-f5ca-471f-9280-ef8cf6caad0d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ffCartPendulum", "[", 
   RowBox[{
   "ICs_", ",", "n_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "A_", ",", 
    "order_", ",", "maxIter_", ",", "InitGuess_"}], "]"}], ":=", "\n", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x", ",", "data", ",", "xdot", ",", "f", ",", "\[Theta]", ",", 
      "\[Theta]dot", ",", "\[Lambda]1", ",", "\[Lambda]2", ",", "\[Lambda]3", 
      ",", "\[Lambda]4", ",", "\[CapitalDelta]t", ",", "bcs", ",", "eqns", 
      ",", "sv", ",", "froot", ",", "xff", ",", "xdotff", ",", "xff0", ",", 
      "xdotff0", ",", "\[Theta]ff0", ",", "\[Theta]dotff0", ",", "uff0", ",", 
      "\[Theta]ff", ",", "\[Theta]dotff", ",", "uff", ",", "\[Lambda]1ff0", 
      ",", "\[Lambda]2ff0", ",", "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", 
      RowBox[{"xGuess", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         SubscriptBox["xGuess", "i"], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"\[CapitalDelta]t", "=", 
      RowBox[{"\[Tau]", "/", "n"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"{", 
        RowBox[{
        "x_", ",", "xdot_", ",", "\[Theta]_", ",", "\[Theta]dot_", ",", 
         "\[Lambda]1_", ",", "\[Lambda]2_", ",", "\[Lambda]3_", ",", 
         "\[Lambda]4_"}], "}"}], "]"}], ":=", 
      RowBox[{"{", "\n", "\t", 
       RowBox[{"xdot", ",", "\n", "\t", 
        RowBox[{
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"A", " ", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
         " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"A", " ", 
            RowBox[{"\[Theta]dot", "^", "2"}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
           RowBox[{
            RowBox[{"1", "/", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"A", " ", 
                RowBox[{
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
              ")"}]}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Lambda]4", " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", "\[Lambda]2"}], 
             ")"}]}], "+", 
           RowBox[{"A", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", "\n", 
        "\t", "\[Theta]dot", ",", "\n", "\t", 
        RowBox[{
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"A", " ", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
         " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{"1", "/", 
               RowBox[{"(", 
                RowBox[{"1", "-", 
                 RowBox[{"A", " ", 
                  RowBox[{
                   RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
                ")"}]}], ")"}]}], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "\[Lambda]2"}], " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
              RowBox[{"\[Lambda]4", " ", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
             ")"}]}], "-", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "-", 
           RowBox[{"A", " ", 
            RowBox[{"\[Theta]dot", "^", "2"}], " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", "\n", 
        "\t", "0", ",", "\n", "\t", 
        RowBox[{"-", "\[Lambda]1"}], ",", "\n", "\t", 
        RowBox[{
         RowBox[{"2", "/", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"A", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A", "-", "2"}], 
            ")"}], "^", "3"}]}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"4", " ", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"A", " ", 
                  RowBox[{"\[Lambda]4", "^", "2"}], " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
                 RowBox[{"4", " ", "A", " ", 
                  RowBox[{"\[Lambda]2", "^", "2"}]}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"A", "+", "2"}], ")"}], " ", 
                  RowBox[{"\[Lambda]4", "^", "2"}]}]}], ")"}]}], "-", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"A", " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "-", 
                 RowBox[{"3", " ", "A"}], "+", "2"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"A", " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A", "-", 
                 "2"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"A", " ", 
                  RowBox[{"\[Theta]dot", "^", "2"}], " ", "\[Lambda]2"}], "-",
                  "\[Lambda]4"}], ")"}]}]}], ")"}]}], "+", 
           RowBox[{"A", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"A", "-", "2"}], ")"}], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A"}], ")"}], 
            " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"A", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A", "-", "2"}],
              ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"\[Lambda]2", "-", 
              RowBox[{
               RowBox[{"\[Theta]dot", "^", "2"}], " ", "\[Lambda]4"}]}], 
             ")"}]}], "-", 
           RowBox[{"4", " ", "\[Lambda]2", " ", "\[Lambda]4", " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"3", " ", "A", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
              RowBox[{"3", " ", "A"}], "+", "2"}], ")"}]}]}], ")"}]}], ",", 
        "\n", "\t", 
        RowBox[{
         RowBox[{
          RowBox[{"4", " ", "/", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"A", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A", "-", "2"}], 
            ")"}]}], " ", 
          RowBox[{"(", 
           RowBox[{"A", " ", "\[Theta]dot", " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{"\[Lambda]2", "-", 
              RowBox[{"\[Lambda]4", " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}]}], ")"}]}], 
         "-", "\[Lambda]3"}]}], "\n", "}"}]}], ";", "\n", 
     RowBox[{
      SubscriptBox[
       StyleBox[
        RowBox[{"x", 
         StyleBox["Guess",
          FontWeight->"Plain"]}]], "0"], 
      StyleBox["=",
       FontWeight->"Plain"], 
      StyleBox[" ",
       FontWeight->"Plain"], 
      StyleBox[
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ICs", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "3", "]"}], "]"}], ",", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "4", "]"}], "]"}], ",", 
         RowBox[{"InitGuess", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"InitGuess", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"InitGuess", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"InitGuess", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "}"}],
       FontWeight->"Plain"]}], 
     StyleBox[";",
      FontWeight->"Plain"], 
     StyleBox["\[IndentingNewLine]",
      FontWeight->"Plain"], 
     RowBox[{
      StyleBox["xGuess",
       FontWeight->"Plain"], 
      StyleBox[" ",
       FontWeight->"Plain"], 
      StyleBox["=",
       FontWeight->"Plain"], 
      StyleBox[" ",
       FontWeight->"Plain"], 
      RowBox[{
       StyleBox["Table",
        FontWeight->"Plain"], 
       StyleBox["[",
        FontWeight->"Plain"], 
       RowBox[{
        RowBox[{
         StyleBox["If",
          FontWeight->"Plain"], 
         StyleBox["[",
          FontWeight->"Plain"], 
         RowBox[{
          StyleBox[
           RowBox[{"i", " ", "!=", " ", 
            RowBox[{"-", "1"}]}],
           FontWeight->"Plain"], 
          StyleBox[",",
           FontWeight->"Plain"], 
          StyleBox[
           RowBox[{
            SubscriptBox["xGuess", 
             RowBox[{"i", "+", "1"}]], " ", "=", " ", 
            RowBox[{
             SubscriptBox[
              StyleBox[
               RowBox[{"x", 
                StyleBox["Guess",
                 FontWeight->"Plain"]}]], "i"], " ", "+", 
             RowBox[{"\[CapitalDelta]t", "*", 
              RowBox[{"f", "[", 
               SubscriptBox["xGuess", "i"], "]"}]}]}]}],
           FontWeight->"Plain"], 
          StyleBox[",",
           FontWeight->"Plain"], 
          RowBox[{
           SubscriptBox[
            StyleBox["xGuess",
             FontWeight->"Plain"], "0"], " ", "=", " ", 
           RowBox[{"{", 
            StyleBox[
             RowBox[{
              RowBox[{"ICs", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"ICs", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", 
              RowBox[{"ICs", "[", 
               RowBox[{"[", "3", "]"}], "]"}], ",", 
              RowBox[{"ICs", "[", 
               RowBox[{"[", "4", "]"}], "]"}], ",", 
              RowBox[{"InitGuess", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"InitGuess", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", 
              RowBox[{"InitGuess", "[", 
               RowBox[{"[", "3", "]"}], "]"}], ",", 
              RowBox[{"InitGuess", "[", 
               RowBox[{"[", "4", "]"}], "]"}]}],
             FontWeight->"Plain"], 
            StyleBox["}",
             FontWeight->"Plain"]}]}]}], 
         StyleBox["]",
          FontWeight->"Plain"]}], 
        StyleBox[",",
         FontWeight->"Plain"], 
        StyleBox[
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"-", "1"}], ",", 
           RowBox[{"n", "-", "1"}]}], "}"}],
         FontWeight->"Plain"]}], 
       StyleBox["]",
        FontWeight->"Plain"]}]}], 
     StyleBox[";",
      FontWeight->"Plain"], "\n", 
     RowBox[{"bcs", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"x", ",", " ", "0"}], "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"xdot", ",", " ", "0"}], "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"x", ",", " ", "n"}], "]"}], "==", 
         RowBox[{"Subscript", "[", 
          RowBox[{"xdot", ",", " ", "n"}], "]"}], "==", "0"}], ",", 
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"\[Theta]", ",", " ", "0"}], "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"\[Theta]dot", ",", " ", "0"}], "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "4", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"\[Theta]dot", ",", " ", "n"}], "]"}], "==", "0"}], ",", 
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"\[Theta]", ",", " ", "n"}], "]"}], "==", "\[Pi]"}]}], 
       "}"}]}], ";", "\n", 
     RowBox[{"eqns", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Join", "[", 
        RowBox[{"bcs", ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Thread", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
               RowBox[{"Subscript", "[", 
                RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], "==", 
             "\n", 
             RowBox[{
              RowBox[{
               RowBox[{"1", "/", "2"}], " ", "\[CapitalDelta]t", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"f", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}], "]"}], "+", 
                 "\n", 
                 RowBox[{"f", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], 
                  "]"}]}], ")"}]}], "+", "\n", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"x", ",", " ", 
                  RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"xdot", ",", " ", 
                  RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]", ",", " ", 
                  RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]dot", ",", " ", 
                  RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]1", ",", " ", 
                  RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]2", ",", " ", 
                  RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]3", ",", " ", 
                  RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]4", ",", " ", 
                  RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}]}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
       "]"}]}], ";", "\n", 
     RowBox[{"sv", " ", "=", " ", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", "\n", 
            "\t\t\t\t\t", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "7", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "8", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", "1"}], 
       "]"}]}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"froot", ",", "data"}], "}"}], "=", 
      RowBox[{"Reap", "[", 
       RowBox[{"FindRoot", "[", 
        RowBox[{"eqns", ",", "sv", ",", 
         RowBox[{"MaxIterations", "->", "maxIter"}], ",", 
         RowBox[{"EvaluationMonitor", ":>", 
          RowBox[{"Sow", "[", 
           RowBox[{"Norm", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               SubscriptBox["x", "n"], ",", 
               SubscriptBox["xdot", "n"], ",", 
               SubscriptBox["\[Theta]", "n"], ",", 
               SubscriptBox["\[Theta]dot", "n"]}], "}"}], " ", "-", " ", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], "]"}],
            "]"}]}]}], "]"}], "]"}]}], ";", 
     RowBox[{"xff0", "=", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", 
     RowBox[{"xdotff0", "=", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", 
     RowBox[{"\[Theta]ff0", "=", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", 
     RowBox[{"\[Theta]dotff0", "=", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", 
     RowBox[{"\[Lambda]1ff0", " ", "=", " ", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", 
     RowBox[{"\[Lambda]2ff0", " ", "=", " ", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", 
     RowBox[{"\[Lambda]3ff0", " ", "=", " ", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", 
     RowBox[{"\[Lambda]4ff0", " ", "=", " ", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", 
     RowBox[{"uff0", "=", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"1", "/", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"A", " ", 
                RowBox[{
                 RowBox[{"Cos", "[", 
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}], "^", 
                 "2"}]}]}], ")"}]}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], 
               RowBox[{"Cos", "[", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}]}], "-", 
              RowBox[{"Subscript", "[", 
               RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}]}], ")"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
     "\n", 
     RowBox[{
      RowBox[{"xff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xdotff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "\[Pi]"}], "]"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"uff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"uff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\n", "\n", 
     RowBox[{"{", 
      RowBox[{
      "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
       "uff", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
       "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "data"}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.863893336562357*^9, 3.8638935104547806`*^9}, {
  3.863893544100028*^9, 3.863893549383339*^9}},
 CellLabel->
  "In[426]:=",ExpressionUUID->"af3ea33d-8e3a-4566-b4c0-08bbf9c4fe8b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  StyleBox[
   RowBox[{"n", "=", "20"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Tau]", "=", "5"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Tau]1", "=", 
    RowBox[{"\[Tau]", "*", "1.25"}]}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"A", "=", "0.2"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"order", " ", "=", " ", "4"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"maxIter", " ", "=", " ", "100"}],
   FontWeight->"Plain"], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotMin", " ", "=", " ", 
    RowBox[{"-", "1"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotMax", " ", "=", " ", "1"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Min", " ", "=", " ", 
    RowBox[{"-", "\[Pi]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Max", " ", "=", " ", "\[Pi]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]dotMin", " ", "=", " ", 
    RowBox[{"-", "1"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{"\[Theta]dotMax", " ", "=", " ", "1"}],
   FontWeight->"Plain"], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"xdotMin", ",", "xdotMax"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Init", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]Min", ",", "\[Theta]Max"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]dotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]dotMin", ",", "\[Theta]dotMax"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"ICs", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "xdotInit", ",", "\[Theta]Init", ",", "\[Theta]dotInit"}], 
    "}"}]}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"InitGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}]}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\n", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
       "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
       "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "data"}], "}"}], "=", 
     RowBox[{"ffCartPendulum", "[", 
      RowBox[{
      "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", "order", 
       ",", "maxIter", ",", "InitGuess"}], "]"}]}], ";"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1b", ",", "xdot1b", ",", "\[Theta]1b", ",", "\[Theta]dot1b", ",", 
       "u1b", ",", "J1"}], "}"}], "=", 
     RowBox[{"testSwingUp", "[", 
      RowBox[{"ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "u1a", ",", "A"}], 
      "]"}]}], ";"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x1c", ",", "xdot1c", ",", "\[Theta]1c", ",", "\[Theta]dot1c", ",", 
      "u1c", ",", "J"}], "}"}], "=", 
    RowBox[{"testWithFB", "[", 
     RowBox[{
     "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
      "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A"}], "]"}]}], 
   ";", 
   RowBox[{"p1a", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1a", "[", "t", "]"}], ",", 
        RowBox[{"u1a", "[", "t", "]"}], ",", 
        RowBox[{"x1a", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1a", "[", "t", "]"}], ",", 
        RowBox[{"xdot1a", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1a\>\"", ",", "\"\<u1a\>\"", ",", "\"\<x1a\>\"", ",", 
         "\"\<\[Theta]dot1a\>\"", ",", "\"\<xdot1a\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Feedforward solution\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"p1b", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1b", "[", "t", "]"}], ",", 
        RowBox[{"u1a", "[", "t", "]"}], ",", 
        RowBox[{"x1b", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1b", "[", "t", "]"}], ",", 
        RowBox[{"xdot1b", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1b\>\"", ",", "\"\<u1b\>\"", ",", "\"\<x1b\>\"", ",", 
         "\"\<\[Theta]dot1b\>\"", ",", "\"\<xdot1b\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Test on dynamics\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"p1c", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1c", "[", "t", "]"}], ",", 
        RowBox[{"u1c", "[", "t", "]"}], ",", 
        RowBox[{"x1c", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1c", "[", "t", "]"}], ",", 
        RowBox[{"xdot1c", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1c\>\"", ",", "\"\<u1c\>\"", ",", "\"\<x1c\>\"", ",", 
         "\"\<\[Theta]dot1c\>\"", ",", "\"\<xdot1c\>\""}], "}"}]}], ",", 
      RowBox[{
      "PlotLabel", "->", "\"\<Backward Integrate feedback solution\>\""}], 
      ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"p1d", " ", "=", " ", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{
      RowBox[{"data", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Error vs iterations\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}]}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{"Grid", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"p1a", ",", "p1b"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"p1c", ",", "p1d"}], "}"}]}], "}"}], "]"}],
   FontWeight->"Plain"], 
  StyleBox["\[IndentingNewLine]",
   FontWeight->"Plain"]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.863702943662017*^9, 3.863703035828568*^9}, {
   3.8637035036430883`*^9, 3.8637035037600527`*^9}, {3.863703942891737*^9, 
   3.8637039537012815`*^9}, {3.8638793561155577`*^9, 
   3.8638793562315187`*^9}, {3.863890389284317*^9, 3.8638904368171277`*^9}, {
   3.863890551127593*^9, 3.863890597328827*^9}, 3.863890716823636*^9, 
   3.8638909523833485`*^9, {3.8638911861186466`*^9, 3.863891231675086*^9}, 
   3.8638912749332604`*^9, {3.863891409492258*^9, 3.8638914236697264`*^9}, {
   3.8638935298715763`*^9, 3.863893532749655*^9}, {3.8638935699717607`*^9, 
   3.8638935749001856`*^9}, {3.8638936191810327`*^9, 3.863893634085269*^9}, {
   3.863893921803315*^9, 3.86389396796556*^9}, {3.8638940391558075`*^9, 
   3.863894080084726*^9}, {3.8638941355729923`*^9, 3.8638941356839547`*^9}, {
   3.86389427077378*^9, 3.863894270855754*^9}},
 CellLabel->
  "In[1042]:=",ExpressionUUID->"3024c605-13d1-4af1-8ddb-6b0488dd66d7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "0.02382742199220811`", ",", "1.5211631868694102`", ",", 
   "0.08290492651031922`"}], "}"}]], "Output",
 CellChangeTimes->{{3.863703015891938*^9, 3.8637030366952906`*^9}, {
   3.8637035047167454`*^9, 3.863703509517211*^9}, {3.8637039271827555`*^9, 
   3.863703954376066*^9}, {3.8638793581419086`*^9, 3.863879372824216*^9}, 
   3.863879435354231*^9, 3.8638794769839263`*^9, {3.8638795662274036`*^9, 
   3.8638795909035177`*^9}, {3.863886073060797*^9, 3.8638860950357738`*^9}, {
   3.863886133999321*^9, 3.8638861617314587`*^9}, {3.8638862758969707`*^9, 
   3.86388628009363*^9}, 3.86389061346067*^9, 3.863890917249578*^9, 
   3.8638911819919653`*^9, {3.863891424209552*^9, 3.863891429593831*^9}, 
   3.86389358658245*^9, {3.8638936350969443`*^9, 3.8638936803654766`*^9}, {
   3.863893713012042*^9, 3.8638937694410076`*^9}, {3.86389394358635*^9, 
   3.86389400613336*^9}, {3.863894052168647*^9, 3.8638940872194443`*^9}, {
   3.8638941368105946`*^9, 3.8638941433125167`*^9}, 3.863894317199942*^9},
 CellLabel->
  "Out[1052]=",ExpressionUUID->"a63801a5-da8a-483b-bfa8-272952d4d9f4"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
TrkfcPeK8Odh63VKcnD8xzci9BGOYJHLpKBMblfekuQGwafNyslZCjSgq52p
txjBCTsvgtBi7Dw//3Z3av3Kevzhvj2B4J96iKqmg/v2XrGZRd0PAhm+vbyy
xO5x+ILh27PcsHiyfCqP4dvfVWu2ivqOMnx7mHX/edb2WoZvf0i3xPpOTQvD
t7d+8JqiztTB8O3lH5EqX37rYfj2j3YYvTNvH2D49uobKXmi78cY9yudPcCW
YRc/xbhfyWah+tpJCRrjfqUnL06Cc65zjPuV3uXf9zAk0xn3K33UPB7YOEAH
uG9vmeD7qvknHeC+/VVvmeXkvnmA+/b045/+rXTMMu5Xcu8+VOUkPMO4X6kl
55SUf+Q4436lS1yUpmMrfYz7lRKs9HeEK7Qz7lc6w8KdfuB6KcO3v/iaT0WQ
UoTgvn1Cuc0pvcwWBPft2w1sY42b/yK4b6/8K21g1qwXwX17M++3oyMFAwju
269VBJ+4/HgIwX37iLsRAUNcwwju26s53jMAu4cQ3Lf/qu4mlH9gAMF9+1wm
DT6dS70I7tsHGWinht/sQnDffmphZM+zkp8I7tvTZQealGO/MXz7Wfdj4Usv
UIZvL4oiPWpH0hDct18x6rl1hkkF+X/Ft+9in/u+YdiJ4dvvaPK6Va77mOHb
D5eGnYhxesvw7XWzNyZtnC1i+PYfJAcKjV6WM3z7r/7SR73vNjJ8e6ef6Z9H
cn8w7lOqq/OOb7CcZdynFLaP30r0yDzjPiWbzRJs36PoAPfjLVJX83+t0gHu
x5f4vylt9KYD3I+3Do8+ZEOaB7gfj7bT/DY8ojHuU9q02cz56KEphu9+Ptfr
5lXHGgT33YXFX2gOCP9GcN894Kt1/yH9HgT33VMK/HRcd/YjuO/uPrKSqNY6
iOC+u32G/1s2+hCC++4FrqpGzg1DCO67i+prTu05O4jgvvuqZ4/Rs8k+BPfd
/bMLs+aDehD8vieW50EBAxWVCH7fk9H2Vk4y/3sE9+Gp6qZB1+rDkP9bHz45
R2DhqNhJhg9f4asVeCHoIcOHT97Z8kb2cRrDh7eu+tv3LLCA4cNft/Xc07at
jOHDFzbRX7xgaWD48HO+1N7gnDbG/U77defSEr7QGPc78YjbuG7vm2Pc7/To
yxCfxDE6436nqo8cocuLdID76yytm+645NAB7q9H8tjtMvGZB7i/PrN5OPye
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
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{537, 2948, 452, 453, 454, 1000, 832, 701, 602, 
                536, 499, 1030, 862, 731, 632, 566, 1064, 896, 765, 666, 455, 
                1001, 833, 702, 1103, 935, 603, 1074, 906, 1147, 775, 1123, 
                955, 1165}}], 
               PolygonBox[CompressedData["
1:eJwV07dP1GEAxvEf3FlRQU100EHsFWyJbbI3QL3JQQcdgAOigzEBTUzgLFEH
EXTQQRfr0U4FExcTExd77O3sgv4BUnTy8w7fPM/3ed+747i7wt17E3tyoyjK
QRapvChqQNrwPBZFs3DFhdXIQdbeghf22bhqW4NcfLK34qV9Dq7Z1iKGz/Y/
thI84OWYijb7K9tcXOfrEEd+PIoqbD/1enxxr5eX4iGvwBJ3TvERmMYn8Vq9
V29Cu8e85vOQ5usxCF/tHXhjL0KLbQMG45u9z1aGR7wS05Gxv7UVo5VvxBAU
eM1KW7fegO/u9fMteMyTWOpOIx+JGbyQ1+l9+g69U28O712/oE/ADc/zTs5H
m7MSZ5f0TXqRflSvkzG5S96RJ+VQ56Nlku+XPXy7zPDjMsVXynO8Xo6TSXkv
/A3yh9cd0LdiH3/ifkKmeZW+TD+tH5KjZLm8KxvlTOeT5QFeK/v5TtnFT8gz
4TOQF3lKTpQ18r686XXfywVod6/UflnfrBfrx/Q4hvExvEr/pR/GKn6ejw/f
F8/zV27DU2fVWO68ieeH7zOfwg/qA/pZ3PKYD3whOsL/GsMx1r1q22/9CLrd
+8cTeMZrsMKdZl4Qfg+8052P+iJkwvtAHnrsXbiNrLPF4TO2/wcxNG7h
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1:eJwV0zdQFGEYxvGPZGMESTpj4YyhMIGKEbSwsULlzoCpoHQkiGnGMRSiglKK
YWysbLQxAgfmoTenGRWzBEHtFAy/r/jP+zz/e/d2b3dvclVtRU16CCEN3Tg8
MoQG3Cfu4ScKLFSiE8szQviCu3yJvhevsIXLygzhB5+vb0AHlvGfcYefr+/B
S2zmMu1/5/P09UihjP+E2/w8fTdeYBOXYX+Qb9YHUc9N5HLldWhHKfcRt+yd
1YdxSJ9ub668C8+xkUvnBuyd0Aewg5vAjZfXog1LuQ+4ae+MPoSD+jR7xXKO
3IIyfad+SU7Kz+I9k9Pkb/FeytvkQvMcVsjH7VyWK+NOvDdmnV5o5ujNZkqv
MkeY+8wms9hM+vyIeUEvN1v1OnOJ/h6dztmid8nV5iSzwTxvrjRP278hb5V/
ywfkqXKRnC2fRKler1+UE/LT+FzlIPf7/ia9H7VcAZctZ8mNKNIT8RxYrL9D
h2NO6b+wX59iZ06873gS3wHuH/rsNep9qNHz7Y2TK3Adi7hupOzNjr8bj+M7
wP1FL39M70W1nuf4sfIaXMNC7i3a7c2K149H8Zlzf9DDj9FX4yoWcG/Qxs+M
14SHSHLD+Mof1XuwXc91vtHyKlxBCfcarfZmxGvCAyS4ofh/4kfp5fgP5th0
Sg==
                "]], 
               PolygonBox[CompressedData["
1:eJwV0klsTWEAhuHTstAWGyxIp9uaYlgZElNb0hraDRIkJFodkEg0xLDQalOK
BLeIYNHSkXaBhAULYihas5iHxLg1tZWY1XMWb77v/f7/5Jzc3Ehh6cK1sUEQ
xKAL9Up1QhBU4VU4OpyFFozuEwQP0GZP5yXoRJ6tBy/tvZhpa8Yo23202tJ4
MTqQa+vGC3sl/4CVfGDfIPhny+JNGGm7hxO2/fwbNvMU9yJ6gh7FZF7Eb2Ae
78JzzwyRR5DlvMLZaX2J/j78dn2A/te983qBHiurMV7PDL9Bz9Mb9VI5gt/F
cc8c5O36GjlMVsk6mSP3uX9WX6b3hN8sN/Fkmcpr5EVeIuNludwrJ8lC5ztl
G18gr/P1ci7/imfefYBf1lfLwbJSHpaZcqv7p/TF+rvwN9f76388F6Nvxzie
4awBw/kdtDiv4d3YyJPcSdHj9D2YyFfwa5jDv+CpZ8r5WxTxBHd+22bweqTb
bqPZlswL0I7Zts94Yv+F6bZjSLPdQpPtMX5imv0oIvabaLQl8XxcRY7tEx7Z
y/gbFPJ43/Ij/P/q2zCWT3VWh1TeiQbnQ2Utsp1HnZ3Rl+pd+gY9UU/Uo/IC
L5b9ZJncLSfI5c53yFY+X17h62Q2/4iH4f+XX9JXyUGyQh6SGXKL+7vkSb5I
vg7fHf7ePE5+9/w5PV/vdValj9Gn6I16rl6rp+gd+A8lf3yQ
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1GWYVlUUBtBBupFuGLpLsFtQEBNFQkKRMIAxUEFRRkWkBWkQbDBARUEl
7MbuFuzubtb7+GPNu/f+7nz3nHPvTOGIon7jSxQUFFzjR3J3P7bLlUxUFzJW
PVpW5Tl1Hwbmeh5UT5FtmKs+U9ZjIW/oZ8hurGQ3/eHyJ3mlXC8ny5YspVg/
VtZiAa/or5BdWMFQ/UmyPPN4Un+pbM8S9bmyMe+qZ+Z+7KLeQ+6Qq5ikbsY4
9RhZjeezLgbleh7K+jhLXZ831d3pq/5Z3sUlDONkswo8pV5KSfbUf5AzZXx+
j8FmJXlYPY8eHKH/Rd6dfTCcUuxl/qG8lqJcl+fCkea/yg1clrOgNHubfySv
y/nnuuyZo8x/kxuZmrVShn3MP5bXZ4+5LmumLPv67BN5A2dzdNZDOfbz2afy
Rs7hmNyb8lSgIpWozP6u/UzexASOzX3zfea/y3u4nBFU4QDzz+XqPEf6ZS25
h/kf8l6mcQpVOdD8C7mG8ziOE81K8Yh6ftab++r/lPflXWJk7mlWkafVy6jG
Qfov5c2cz6n6XXlBfTxD1KV5VF0s23JVzkg24K3sOetW/yU3cZG6FdPV42Rt
XlVPl125mlHZk6zEfLbl2coOLGN59iebsIj39LNkd1ZljfqD5VdyjrxFXiCb
M1F9mqzOizlv2Yn+6qGyDI/lXZbt8jeX5yob8naeSc5V/bfczIy8z/o6vKYe
nfNUV+YZ9Qqqc4j+a3krkziBYWZleVy9MM8v56r/R25hJmOoQU/zb+Rt2QsD
8nyoSS+ffSvXciEDs39qUZs61KUe9WlAQxrRmCY0pZBmNKcFLTnUd38n1zGZ
QdkL/c3/lVtz9nk3aMVh5t/L2/OsGZy1Z7/m/8n7mZ1nQGt6m/8g7+BiTtfX
4KW8uwxXl+MJ9SImqBvxTvadc1Dnn/QD+X3ZmjnqIlmX1/OdjFJX4Vn1VNkx
71rea9mUxbyftckeJf7/399G30f+KOfKO3O+sgVLmKI/Q9bMe8/L+mmyc95R
hugX5wxzHW1zPrSjPR3oSCc604WuORO6sRNpYrQk
               "]]}, Annotation[#, "Charting`Private`Tag$546522#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
7gb/DUrIP8r3owm/lA6lax3/H4UdhTI=
               "]]}, Annotation[#, "Charting`Private`Tag$546522#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1GW4FGUYBuClGwFBWkJCaZCUlJSQlO7u7lYQBexESlq6u6RBOqS7OyUF
BO/vx329z/vszJ6zszOboUXXml2iRCKR/FEjkTHRI5FSMSORXTEikfZMkbPz
tvyVmYxl8nXH9ZEjTLJ/wk5dU/sNeSTFicUwXXzmys34zXEf2nfLHUjHDV1f
XRQm22uzS9fMflMeRQliM1ZfWr9H7kh6bup201x/yz6aksRhnL6Mfq/ciQzc
0u2hhf52+GyUIi7j9WX1++TOZOS2bi8t9XfsX/Mh8ZigL6ffL3fhHe7o9jGR
8l47oOtKJu7q9vM7k5jMFKYyjQqOP+i4bmTmnu4ArfR37d9QmvhM13+kPyR3
Jwv3dQdprb9n/5YyJGCGvqL+b7kHWXmg66eLyhR7HQ7p2tjvy99Rlh/taVgr
J2S4nIB5cvNwHeQsbJP/cH4l+bDck6lyDt4N1858K7wPy+3zzUL845z+ZjRW
M9Vrs8x8bKFuuHfMjPzJJvsSsxg7wmdyflvzgX6V+X34vGZuNlPO/pOZlnXy
IvMD3pA/NxMyX55j5qeFPNHMynZ5pvevLB+Re/Fe+C7syVkhP/T6ADk60+z1
OKxrFz6b/APlScSI8HdZILcMn9NxVexH5d5k45FuoC4G0+31OaJrb38Yvg8q
kJjZ+o/1x+Q+ZOex7ihzqOq147q+5OCJ7hhzmcd8FrCQao494Zh+5OSp7jiL
qO61k7r+5OKZ7gQd9I/C9eUjkrBYX0N/Sh5Abv7VnaSj/rH9ZyryZvgu9TX1
p+WB5OG57hSd9E/sv1CJpCzV19KfkQeRlxe6QbqYzLA34LSus/2p/CuVw98N
v2msl5PxhZyIhXIrljnnE/tZeTD5wnNkT8FK+aXXB8ux+MPekLHyO+Fek894
vYv8TB4Tngc5D1XCZzDThb8d7uNwncyi4R4Lz4X9SzMxa1hkn2sWYCut7b+H
54gN4b4P18Eszl/hefJ3a5vn9CvMIeY0Myfvh2fZTMkqeYFZmP+cM8SMzcxw
L4VjaSSPMzOF508+67iu8r/hOeTjcD3t6cP/IidnpJyExXKb8D84p479vDyU
/LzSDdXFYZa9Med03ezPw3WkKilYqa+rvyB/SgFe686zinpeu6j7jIJEuKBf
zRrWUt8xl/TDKEQULuq761+Ez0g1UrJO30B/WR5OYaJySd9D/1IeT3VSsV7f
UH8l/IZQhO/tqcJvmBwt/N9yXGbLTcL5cubwfcqXnd8zfAfyBGbKeakR7hsz
Axvl1IyS32SJPM8sSFt5kvleOC7cA+HeNUuwM9xf3r+ReTVcS3OEOd3Mxabw
+2f/wUwdfhPDPWdfaBZhW/gtC9fWjMccuSlXvGcv+yt5IjVJwwZ9Y/218DxR
lBhc1W9kE5vZwla2sZ0dNHHe9XDvU4yYXNP31r8O9zy1SMtoXVKWyu2YLGcL
n1debpZkV7gWzv8fGYYwOQ==
               "]]}, Annotation[#, "Charting`Private`Tag$546522#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1nf8T1Ucx/GvPbKF7F2KhJKRUZQVskfDjpZNiqx29spqWlHZIxlZ2aRU
NIxk71V26Pn54/V4v9+fz733d86559zft2C7ro26JEkkEpOSJhLbUiYSC1Mn
EgUwO1Ui0Qx5cVN9O37ADvyIn7ATP+MXLHJPQcxxfXPkw63oqz2K7fKrqIxf
1RerFcJcuQXy45TcEkf4kbgdz5Yfww9yH1TBDflFXOI/wy7XLZELY57cEqnT
+Hty0piPfJo+jaN8Sb2P+VF8Tv49Pisq81/TRIyRVkMNtR3yfXSi3Jy+Jmem
A+X69A5akc6irWlV/f/4l/CkfFkuQz+XnwmVC9ARcmOaK9aIzqW7zeUbWgTz
XXe3+rgYO5+G78Mni7WWz8TzcIwfjVz678t3IkmsC62OH/nXkUV/kJwu/l68
V/oyrvBT8Ju/vVQuigXyMyiEs/KzOM6PQVLslh/HT3xfPIbf3f+t2t1YKD+L
wkiGP/SWqd+DRfJzKILk+FNvD/ZiH5a7phgW67VCUaSI8ak9gZ18P1TDftev
ULsXS+TWsWY4Jz+HE/xYpIzxxfvEz/wbqB57VH4FV/mp+MvzVsr34Ru5DdLG
O5eTx/jl87QVTvLjkFv/AzkbUsVcaU38wvdHVv3BcvpYs9jXtDOu8Q/qTeGn
8QX5kXwTmjv2PZ1HDxjTd7R43K+21LX30A/lZrStfAd9Xa5HU9CH6fRYA1pM
/0LsTdSWT8kP0E/ivMVz5Dx0iNyQZqdV6GyaOt4PrRVzUvtVLk4nyQP4O/k3
+QzxbuSE3IW/zk/H38a+Si6Bb+V2uDf2MvbEeLCLH4gaOOj61Wr3Y5ncPs5e
vAMc0lujXhLL5Q4xlpg7DuutVX8AK+TnUQLpsFetTpwtfhBq4ojr16mVwkq5
I+5HeuyLc4vf+MGohaOu/16tNL6TO8V3BBflNjjNj0eG2JNyXfzOv4naSGJd
uqrd4GfgmOetl8tglfxCjNU1feWUMQ/5H9oWZ/hSep/yE/i8/FA+BzLGno33
jj9iznqT+bf4bPxb/FM0I32EfhnjpXXiHNNuMVb6n/wQnRpnnX4RZ5+OkpvS
PPE9pPNpO3rc+DfwD8Z7l1e7vhgdL78Y68j3i/OAcvyMWGv1f+N+nOUnIp/e
MPkuZJIP0Pr4k38b2fXfjl68k/iWyN35m/xMnDCOjfJDWCO/hNK4JLfHOX4S
MsdejLXAHv4d1MVJ929SK4u18ssogyw4pbc5zhLWya/EeY3zHPtUrQH28u+i
Hk67fkvMF9/LnWNNcVnugPP85DgzsZfjrGEf/x5ymNc7cuaYv5xc7sHf4meh
sDxazhv7wd/ZSstjfZwnvQl8l9h//BtxbqMf7zHmpn6FPh/nQO1CrBH9TH6a
fiTnp8PlRjQnrUrnxP6j2eJ8RS++A/L+OCtxn9wi/ufId9F3Y01oFlqJfhXr
rZeC78nf5svy0/gv+SL8GD5f7Adz2kYrYINeV2TU7y+niXcgX6UdcZH/OPZG
nGO5Mf7iP0ADpHRfL7UEvpLPxe8XviI2yt1QDtfkTviH/yTeQZxzuQkO8EPQ
EOfjt0+cH2ySu6N8zDnOcZwP/M0PRSNciN9JsQbYLPdABeTEcbVmOMgPQ+P4
hsRvKrXK2CL3RCZzGCCnjTXhZ9JWtKLedf4F/Mt/ilxxDuTmOMQPR5P4fsTv
NLUq2Cr3wiPIHedQ7xIu4wqu4hqu40b8tos9gG2u7Y1KyBPnJd45DvMj0BSp
jKu3WhJ8LReVx/L5UZ1fEGcxvjGe+z+bEVff
               "]]}, Annotation[#, "Charting`Private`Tag$546522#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1WXYFGUUBuAlpbu7uzsFRMUCFTERUboEaZQuaaSku6VDuhGQLukG6Ua6
vd8f9/Wc58zMt7vszJK5TovqzaNEIpEMUSORerEjkUdxIpEeZOOsvoiR1KcB
DWlEY5rQlMfO7Ul2zumLGUWiuJHIeLs3earvpBlP9F7k4Ly+hNEkdv4Euwo8
03dRyG6t/h2p+dHuqexNTi7oZZ3zt7kxS/Xs+mLzZyTgPf2QbMcYx5PoE80V
+cJ8QT63f8u81/wTu/XC+jpzbWqZr8k0VDUfl21lR9lQ3pddZXPXPTP/ShM9
l6whz8n28l/Hy8nt4XVkE/m9vCk7yj8dzyGXhM8qa8hv5GX5i0wo35eHZWvZ
XtaTd+VY1yY1TzJX4svwevKFfWXzPnNL9uhF9PXhtUlLNf2E7EQLx5/LPuTm
or6MnM5Zqn9OIsbZJbObbH6Ll/peitpt0H8gXficdi9kX/JwSV/OeJI7d4pd
ZV7p+2jJS70febmsr2ACrWhNG9rSjlfO6U8+rugrmUgKf3uq3du81vfTntf6
APJzVV/FJFI6f5rdO0Q4YNeBiP1AvQDX9NXkCt9VuH9IzGS7VHbTze8SJbyu
vl+24qDjxfSN5jqk52P9pOzMz45H0QeZC3JdL6/vMDdljZ5bXxa+V2qar8gk
fGA+ItvIDrK+vCenuCa1eYa5mawiv5IXw+vJqOGzygPhPcrWsq68I7vIf1xf
XG4K94SsG55DeV1m4BPzqXBuuDedG1UfbC7EDf1NfWd4bdbqefTl4T2QlKl2
aexmhmeUaByyK2G3OdzXZAzPhV00u9/Mhbmpr2Maae1nhWeC6By260R0+yF6
EW7p65lOZ7rQlW50pwc9ieGaoc4vym19AzPoRUzHhtkX446+kZmks58dvgNi
cMSuN2/YD9eLc1ffRF67FfrXJGOWXXq7P8wfEpOjdiXt/grfI5n41S6W3Qhz
Ce7pFfRd4TeCzXo+fWX4rSB5+Hv60fA9M9vxDPoc80e8Ee5R/WC4ZzjmeCl9
i7kBtc03ZGY+NZ+W7WRX2Ug+kN1kH9fFlr+He1SWDL8N8rzsIP9zvKLcrbcM
v43hN0Hekp3CZ3Q8v1ylN5c15bfyqkwR3qv5WLi3wvsKf0/+4ZqM5rnmquHf
0nxJxqJKuGdlW447r7S+1dyQLFTXz4T3Tl/H4+gjzaW4r2+hgN3q8D5IyRy7
THbzzNWIzQm7fsS1H6WX5oG+lblktp8fnm/icNKuP/HsR+tleKhvYx5Z7BeE
54m4nLIbQHz7MXpZHumV9D3hWaSO+bbsHP7vc6ygXKPXIhXz7bLaLQzfIfE4
bTeQBPZj9XI81rezgEEM5jeGMJRhDGcECV03zjXleaLvYCHZ7BeFf1/ic8au
jN22cL+Qlc/0s7I7jc0PwxzuHef+D7ZKI2A=
               "]]}, 
             Annotation[#, "Charting`Private`Tag$546522#5"]& ]}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"Feedforward solution\"", TraditionalForm], 
         PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1a\"", "\"u1a\"", "\"x1a\"", "\"\[Theta]dot1a\"", 
           "\"xdot1a\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
XKvAgYWPZo+mKsEfBWsnL91qAZ5TnlHqilT4l24tA11bQYJBX82pG+T7XH7k
iAp5fyvVuF34p6wMF66aYVGXtgJqmb4+O10ZZrcYb2va2AyQRy+08tAwOhqB
+5n6GcXz8g7zAepnbioMVihM5gPkzWXshR3efOIB5MX3CQUYRQvRCeTF269I
6PuS7+9tNTEO7wNlYTQtzDe4d4BAfvzeo9j1VhoVIDBX7pp7O/n+ZvlKdy9s
BX3RzFIHJyr0H8mVF4ltBQYjLVc4X6nwiHf5uid+5PvyP29OXHd/pRzbCJA3
v7df5QFriSXudV6v8+3Zc4MPUK9T7xJnszd5PK903E/dr5eGmffOi5V60YkJ
b8nglbUyMMpxp8ODC3QC+XGHte3nfglVgcofZqPXxKnwYnOajPWOVnCvalD+
dhwVWiUszg4l39/Il+tI7Q4xX3sMVE4ozTn8aQpYqxX+NbHj4x7oW/Y6emEG
HyDvPbNm972ejwPE6cO5Wys3y8CWewP1j8j9reR80T0/t8vC7dWtuqcpdKK0
tMaF8VIeXhTZvPX1BhqwcmtZXm1BhXPOSaennmoF1tFtndQ6cj8baDGnKrwV
ID+uHZ/6rTXUE/dE/6xs728n1w+qlViPwSwZGBK0J6znCp2IoYkfkpgjC29b
TG3Z6EwnwrO7j+99QIX2wc6LfMn98vW+dVYte6eBy8bOUyYRfNwbbdb8MPnq
Ah90n7V9teOsDHSPqTqreodcH6KjJWs+y8PvO5q05P9WgPN3qVu7PKnwsuzB
c4/Pt4IFB96Dtn5yv7RCOIh7oBUgP75nqVaPoTA5j/3nxz9Y2U1+K1gLzsqt
PLWKNg2+zha6JJPEB98oNqHrXsvA1OnnrI9JdAL58Ge5M4unaivByoSR0hWn
qFDfR/qjFXl9UM9UKy1qyDiLD+4fIILUjWTgio7vS3+R88aXLR2xueVUuOzA
M9Ze8nyivum2Uv8aP/J/b2amOjuJKw09y67aip6nEyK+PeqDmVT4TaJVJZGc
R1DfVOOp70LDRD6QjDzY8SxUBr6kHa45RM5jRlfPiVD3UaHKsgjNJHIe2i9y
yG6xKDnPNQVvfHqLD5Qn+o/OTaBCRmnIWgr5e1H/tOy4InsN+d93+19b5LVL
Bqo/vLNrOfk8yfxpYc27NAMqxlR5W8h5jLF9+F27kgw8KSxkF3mDTtA7ulob
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
1xp1YvuPSBZA/q+9265wiJyjkP/jDPSqXTvDBcj/vdL+0/PxPgf3JfN7pXfd
bmTivqTxu1JT6sdh3IccU7wzxj7HJpD/22aoUtkbP0kg/yes/z6eNSREQ/5P
93CAVP60MA35v3caA3TvYmHaZ+tFg+KVs2BhttnSYnchGvKAv4kMuZaxSdx7
1DO3ttSQHsBeT/jW6tOLvBnY661oNeLv12Rir1fz4w73CYeJvV6k9g31yKxx
7PX8PDScF10YwV5v8LnnY0vJv9jr6Ve+XzDnUQ32ekbS9+euu1EDJCPzDYxm
K8L1WwrDEz5W415kyBqOTvCSKtyLnMNPe9PoS8O9yFibKHNtkxLci1z97g5x
te8x7kXOHXw8FA8iCdSL9NLMH42hvCaQDzx1tvM593YNgXygmdKI1+1MNkA+
sOPCXcXgjVyAfGBYpgfrjR0XIB/IF+73ao9i4z7k95sRc85fGMM9x9TEwyUH
NfgE8oGLUqJXeybPEMgHdpttK1uaK0xDPvBQjP6WMSERWqOG1LzTZrOgtXjY
go2LhWlFvT1bDrycB0Ue7wvxUBrGns/gymsL95kx7Pn6ThS0zm9gYs+nvnON
OfMaE3s+jQihnMAV5P79v77jUz0NlQttA9j3OTzdRJue/x37vrL5SwtNyOc1
ymPzYu8aBWjloy0iub0G1CvmpR+2VYRFOUt/HFKpBiNJr9NmPihC47tnfQu4
FbgPee+NX8z+H+9wH9LeyMrBlfcKe8G2vEd2bJVGAnnBq29ey27n3MM9xkTP
qyXHd45hP3hrKimzcRULID+oPCnRK7uHA5AfLEy4U/brJBcgP+jVuOMs8Y2D
e45z5y9/1mLzv56jSklGx12dUdxj/HjhTmrbTRaB/KCDIbnxfTVBID84MSPI
3fRciIb8oIEsZ4I7JkxDfjBp79TlfR+FaY1bOs0t782C4TKT0bE3hGjIEwZy
auTfh03hviJ9TZB3wcQ/7P1Kh6ILiv6OYu/nrrlo//Pecez9FDqWVojxmNj7
dXfyVuztG8feT2Ii7IDk1VHs/eZYxnyj3+3F3s9kbIWgYFcT9n6W3gHznmbV
gI7dL5x9eQrQ9IRI4wV2Ne4zSoiJrT7mU4X7jNWOManu32m4z7hmm0XJpqNv
cJ8xaV69rtTsZ7jPmKN3+01i9S7cZ+yIU52dk/qKQL5wvpmf/ZBkNYF8ocfM
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
A78efKPgjgbpAVlVPpl/966vy74v+RmZf5fbG9evbVZG5t/JXXGfsGDfIzL/
rrjx9M3cwnwy/05jk57pmuNBZP6dZ7z+/YGAAi72fia1N4//zinnYu83c4d1
4FO0z7D3u3L1wLlIRgKw95vWacLu82cA9n7VgV7C8IkSMu9O3DQ85JYpJPPp
9hnzFd4eYrjY+6X4cMpNl4xysfezp48MjnNh8bD385v/+Z4det/xfeDZ+fIG
ZQdZPHz/9mCyo2Hvsm7i8xrDXb/ErR0gPm+1If/N6AWa+LxQRs9z1Wua+LxF
zOElwd9RHfZnXl1BXp964fQe4vWaxsXEiH3aiNfzUexU24n25+r1Phb2tyj4
GZ4YDvXng3l5ve5dc9VgvWvKQqcjz0GqyvLP1/PUoFSAKJwdWU7m3Ym0z22N
bywl8+7Ko7a1moUWEf9nfObi7fYxVVzs/2IeJ+rmX5EA7P8SfslLVaHzDvu/
UPeU+aFJEuL7Duw6eG2LSIqHfd/dST4B3b9ZPNuVwZ75j9jwxLXny9/dY/Gi
2rN/GImU4RLzeWLngP/83v+mhO3ePIsmfs9mUdrbJjFN/F56eYqgJ1ZI/J7e
soDkXHR+6JyW/ap5loKrLQx/PIjhgzr3H7nrFdRgRnRWblXtc+L7DDP8T2y0
YAD2fVmh+qWcNQzxe9kpUdvd77B42O/5J4qy69HzY4933Vii4v+3kHi8+1nJ
jgdqaeLxinV7VttH0CD+/klTPQsKqpZ8VhlG56GPdnNCWAUF625Uy45Y84nX
k3Zzrg9fX8vFXk9gxZ/BoP4Se71TyYmV+15JiM9LlalqaqJZvMYCC9078Sie
iv8sd0H5FXs8T6MG47O9QuLx8mas4Lig+gR7vMBM293m22tBRLytuZQvykcl
X7hnkvnAzmXbtKfZNDCQbZWcnsIQr+cW0q3RvoMB2Od1cH/NbD3P4sneOutk
ps6GD8v1R9pQfYI93sn3jWf88mji8Qq3PI+cXEQDW82UOy5GKB5TbMx0UP5s
Np3Zt7+YgpO07kz/5MYnXi9Z0K0edJIhHi/o8Ktb8qg+wb7O3fDFitfovC/+
2hpfrULB7k2hp9puo37d81GsWSwFHxidsNQM5gMH6czrUUYiEGBWfibYmSEe
T2rAort2NgOwx8u2d9TMqWbx3scUbhY7sOHnBaY6liIWD/u7O6U+rFrUz0cc
Fxzi2KrCbCDZ+82RBh3rXHn9dhR0/DDh6UeUz7HP22gqo1ElesFVOK+7ODlW
BO76OJiJDzEA+7yPxyv2t3ej/P7H41mbaNROQvVJeTq909eLgtWV1sYdqXzi
86QMDaY57WPAJX2O4Lw8G14JsnPNR/WJV5/8jpu6qvBakR2/g0+DLNv8riP6
qD5p2pA6jM4H7PPi/hp3OBztV+zv+As7xRNQfYK9XVInnS+H8ofy5P5XX8ZQ
8OnczmND2XxAacRxE5VEoHGO1e369Sh/Ttz1bpUVG1LnZsKrgywe9nZeRVtf
Xn5Hg2VB+4cUrFG9aSWrnYfqkwyTjeUyr0Wgv6t+DET1CfZ30w5z3wSh38fe
Lj998QYr9H5ibzdokxq6MKISHNWpf9+px4YizSrp7zLSPLrr0sHliyh4MSzy
cQ36fs2R+Y0vN4rBW85Ic9oxBqQbpzbP+iYHf9bosfkoPtjfbZVuPA7aaOBc
VO+Sr0FBtwcrCx3RfozvLgkMthcBvfTowp2eDPF2L9ouvR/fTYOwSbbBTVso
KD65vSAM9T/Y3/mqaCleqKjjpgsmxj87JwKzv+5RaUD9MfZ1/bIGuRqon3rt
HaNZIIXep4k1D2ag/LFpt1lwyAwKLvMOqSxFz//BNCArSkYMbixI821H6zMa
uFNbWCYHd174fn8Wqsewx9Mosat6SNOgO0ESr7GKgtnZI6oe6PlBqKXO7Oci
ULnOeNarf+d3/fF3vlz6XDKKZ+l2/UlKOmwYfb8YhMlJ826wJirZLaRg9ExP
Azm0/wI60uYzy8XA7HjiwheoH/rmPzR5wyc5qDKqa6qI4idfv3noiRoFe2/d
Lc9B64m93Z7xxYvmof7A19iw+VA6ql+Xnmu7g+pD7OsSb+Y0hKB607qrJWGb
MhseXVd3uRft30ETPRtvAwqOceMt0UKfn3UxomeFrhgI76us5P37f/Ff+cmp
DXIwcSiyrBg9754t5X2Ncqrwm6rpyofo3B7b5rKzpV0EoFdi7xIUL+zv7Otb
OE7o87C/m+0QPc8u6X/Aso792mQp6ue3mZ/0Q/Febv7YP2e7GKywZbnIon7B
td8ySWpADrZpBWfPR+uTl2jFS9Wi4Gjmz54eFF/s7w6bdb3+OL+eK2XNTorq
pf7cL60M/w84C/8i
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{476, 45, 391, 392, 393, 939, 771, 640, 541, 475, 
                438, 969, 801, 670, 571, 505, 1003, 835, 704, 605, 394, 940, 
                772, 641, 1042, 874, 542, 1013, 845, 1086, 714, 1062, 894, 
                1104}}], 
               PolygonBox[CompressedData["
1:eJwV08lvTWEch/GDmofW0JUFEhu9V7sTCZpIqkWwKMWCRbtR9PZWL9omNhKJ
jTnmeezAH6ADO23NqkVChIWZVrWmBJV+3sWT3/f5/s65Oee8uTNKkoXlQ6Mo
GoKXiCOGhOLwsCjqttyIEbilO4dyHLHr0W3CSLTqziOJo3ZfdZsxCm26C7iu
T8ce3Sx80FXgmK6Xl2E02nWduizU8Txc1DXyDOzlWfgjF+KR/NH+jTwPjbwI
W3TH+Tc5gTG4rbuESpyw69OFDzAWd3SX0aSfiH26GD7pUjip6+dJjMNdXZcu
hnq+CFd0zXwS9vM4/sor0SF/tn8rz0cTn5YWRVXy6vDucrH8St7qulPyd7kC
6XYb+Hi5z1wSfkPXxmeaO/gK8577nshxzOUN9lPNFF9m5vM0cx3PM5+HZzR3
hWcwa93fIk/GHH7APtNM8NnyP3MVFuoeh3M0d4b3M7+49528IJwDb7afblbz
5eaacAZmCc83X/Mcczff5t7T5o9wbsjQl/IJcr+5FO3yfdc9Dc+Cq7wAw127
nr+Q6+xvyFNwkGdjQC5Cp9xt/17ORQtfi+26M/ynXBm+NR7onumycY0vRr3u
Js/EofDs+B++G7rkHvsqnOW/eCq8Bx7qGlCNmvAfsv8dzhiDwBpy8g==
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1:eJwV0zdMlHEch/EXNC5OWKhnYXCTeHCgYmIsiwXUxEUU46CTCyxW4MAed3tL
7ILS1U3BLk42UIombJbBXhALfv7Dk9/3ee5eDgjkrq9cWZEaRVEKBjEdedgn
7MV19CPmTXVIHRVFl7FHG8Ic7RSmal24pvUhR6tFitaA3dpPFGsnMUV7iKta
L7K1ZPhGtHrs0n5gtnYCk7UHaNdW8HYU8dd4qWXxGozgkrZTW2t3YiF/j+/a
LH4ck/h9tGnLeRsK+Su80DJ5Nf7horZDK7c7sIC/wzeth5fZ0egommlX2hn2
MTtm30Nr+F26efqAvs4eYy+zN9kxu9UudhN8AD3h5+RJe5r7yOtz3dLwueEz
+GK+0U5zq3jC/ete0Oo8X8b323F3UF/kbuBj3TV8u51r37Tn22/x1XPdfJU9
giK7wk33vqN2jn0XLd5XyltQwPvRrXXxkvB1wjPhM/AH53mt11fbNzCPv8EX
rZAfQTa/g2athDcjn/fhuTaRb8NvnNOS2mck+GFkabfRpC3lTYjzXjzTJvCt
GMZZrUb7hAJ+CJnaLTRqTzFe24JfOKNXax+Rzw8iQ+vEFW0Jb8SM8PeIJ9o4
vhlDOK1VaR8Q5weQrnWE/yftMdK0/9AId2c=
                "]], 
               PolygonBox[CompressedData["
1:eJwV00dsjnEAx/GnQ9RoLxyQkHSXJj0IMQ5abewELSI4tLppYyUcOBCj9o49
EvNqtZXYipO2uOBAdFuxLkZiff6Hb36/7+//PHmfvO/zJpcuL1oWG0VRDL6h
TMmR2TitP0AvF1TjIw7GRVGtrQdZfCeSbI04ZWtCvK0KH3DAXmPrRibfgURb
A07aCvhFDOfPcN8WxyvxHvttS21z9esYzzvQZWvlhfovZOjb0V+vxwnnL/ki
PS4+ivL1VfoQ/YKepT/FPdetk6n2R/ap+lfEhmeQSfYKfaR8J/fZlrhnPq/T
c+Rr+yRZwhPkHL5GH6Y3hmeW43g7Ot1bxDfoWbLFeZ6czX8inU/ntfpAuY2P
lv34NRx3/zy+Sc+WL5wXyIXhmeVEvlIfrJ/XM/UnuOu+h3yK/gUxejneYi+v
Ds+lN2Asbwvfs62Zz9J/IE3fir76VRxznsfPIYO34k54kXgZerDHVmVrRyqv
Qx/bFRy13cY/lNq7sdteyY/gFv5isb0Lu5xV8Dak8C1IsF3GYVsuP4t03oKb
4f3lk/XP+MNLeGd4b3k5f6UX6719X4X6an2oXq+P0d8EXFdoW69nysfOcuVM
/h3JfBqv0QfIzXyU7M0v4VB4f/lGfYR87jxfLgi/g5zAZ8gVfJA8Ez5bpvFm
3HD/Wpliawrvmv4Jv+0VMtFebO8I/y/+H6uGd6Q=
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl03l813McwPGlrW1txeQs0raoHLWtyLHaJEK0rFqK2uHqYJNbUs7oQI5S
oSLljOhwVbopOnTpIhShSCHKMc/3wx/PvT6fz2+/3+/7/Xw/v8yKquLKGgkJ
Cb39idbxZ4k+wvnG/2gFZxr/ou9yHqea79DXudj4EO41LtA/9Ar9UIu1NuXk
mDfSjVqik/TC+FJ6cathvv6mPXSOdtYUSikxb6m7tLvO0Es1iYfjuvQvXUQX
47S4LuO6ulQf5QLjf/UqzjLeq+/RntPMv9Vp3Eeh+Z86n1wyzTfp89wW10Ar
a7t1JsOoyaHWPtLHuDr2kebWvtM3uJ88sqxt1he4nctJ5DDrH+sorolrjvsm
2/oWncwdsUckkWF9mT7OtXSI66Kx9a36InfSk1ocbn25PsF18Qw4nWTqee0T
fZI+XMQZpHCE1z7Vp+gbz53WpFKbNNLjDHGk/12ho+lHxzhDnGj9C53CwDgn
8Xw4yvpKHUN/Lonnw0nWv9Sp3MWVsb8cbX2VPs31cQ5oYW2nvskDnE0Ta9v0
JQbRK+7V2k86i+Gx3xxjbbWO5YZ4r/k+fZ9O5Jh/r9PjXoxr8qDxuXpAF3AO
Tc2/0pdj7+I3xd3GbfT3eAY6Vy/TVMroHXusP8cZ0NnxnVqrxv+/yxHm7fXv
uH9drF01nQoyzI/Vz7SbjoszoNVaGddl/Kt+QJFxMkXGufqDvhX7bZzIUON2
elAXkk8z86/1FQbT1ny/zqM0zoD5Hn2HkXG+qG9tjY6nis7kWftR3+ah2BNO
tvaNvsoQyuIM0sD6Wn2GG2O/4ns5xfp2fY17KI9zyXHW1+mzDKCYgjiHcbbi
vMQzjn2Ka4vPj/dwPA05gUZkkkU2jeO8xhmM//P56/U5bqILhXG+4v1e26AT
uDmeTZyLOAvxuV77XCdySzyf2N/Y07h3qv1o/gNLjpUS
               "]]}, Annotation[#, "Charting`Private`Tag$546606#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1nf8TnUYxvHHiIxIypZRqERLhYhsUSQVFUqFMiMhe28Ne1WUndlQ9l7Z
e2dvGmSX3verPz6v+7qu+3x/v+ec7zgnT/3mNZolSSQS15MmEu8Q/ZIlEkfo
ergjeSLxHn9Tfl4tj2XyvPJP6Hny9er9eFo2Ti+L2oKvoj7LJ1Fr82XUnfxD
aje+pjrU+Jl0ShThe+hnVBvzldU8/GX6RZTif+ULqJ35l9TfjP8t/jd+0Msp
ax09OiVdj95Pv+u6/vRR+i38w1/gK2A5P5/fQOfDeL4Uhslm8bejZ9wzDsne
wwDZMf5t/MsvwHA0wEC94/L6uMUvxAjMlqdCL/l9OCxriEGyE/HskcAi2UZZ
fnzDl8ZI2Rw+NXrz9+MKXQ3r6SP6h+ii+JGvgUayT/mTcf8xD/idr4gV9GL9
TXQBfMtn9bw+pJ+jk9Kv02XVXXxBtTv/ijrKuO/pNHiS76N/t9qEf17Nx1+l
q6M0v4F/QO3C11CPGn+YLobi/E/696of8y/Tt9NvxVpTD/CF1V78a+r7xn5G
n5I/HmtTTac2kCWl/1ArYWU8Y3l7eokxm9UHMEGeTd4y1iOdjH6D3k2Pdt0P
dFr05fPjWqwlbKSP6R+J34y5fE18IPucP003iL+HpbItsgcxkS+LMbIf+TvQ
L9Ywjssa4wvZGb4hkmOZbCx+kqdD/3h+OCFrgsGyszG/uA3LZV+ioOXTVB2i
f07+PlJghewrxCYfqnc+fnfsD6yUfY3mGKZ3QdY45gCrZOMwV54eA2QP4qSs
Rax32e98E6TCatlW2UOYxJfDeNnP/J0YGHsf12MdYBN9Sv8o/Qx+5l/Bh7Ff
+D/opkiNNbJv0BIj9f6UNUMarJV9i1/kGTAo1itOy1phlOwvvjnSYp1sm6wg
JvPlMUE2j78Ln/IP40asR2ymz+gfo0vgFz6XddOGfjXunX6bPkh/5LrR9EW6
BdLrNYx5p/+MMy3+hmxV7GG1Q5xtca4Zt51+OPYwP0U/u9qKr6pWiLWhvsmX
U/fEb4zzMn6DOtH4+XRGPMV/pn+P2pQvRN+M8zb2tmxLzKPaNe5PPWvscbpk
zAM/Tz+32pZ/QX0t5kCtH+dlnLn8I2pvvrWxY9RLMW+4U94o1i39V5wHWE2v
d92O+C2YyleMtevaOvxeelKcofTd+Dz2fJzRcd5gK31O/wT9LObztfBx7BP+
b7plPGtskO2UFcY0vhImxxnM34Mv4rfHmR3PDdvo8/ptYg/xl/lWcR/YKJuC
tmgXe0j/SsxxPHt7LYO6ST4Vi/QyYbDsUVyQfRJ7S3aVb427sFm2S/YIvuMr
Y5psMZ8ZQ/jH4pyWtY/9J7sW94qM2CL7DkvkWTA0zsE492QdMD7Z/+/xNnEm
Y6tst+xRTOefx3TZUj4rhvFPxNqUdYw9JrvBt431g22yPbLHMIOvghmyZXw2
DOeLxFzLTvKlsICvjU6xL/mbdDtkwkW+CtbQ2/X30o9jJl8VM2XL+ewYEWOs
kWb0k/SteAdge/wd152iS2Mhn8d17ejX40yg36ErqodiPuIdxdeK7wbjJtD/
xH3HN4yaId4rskpqZv5S7LnYD/xaPp/aka+m7jB+H/0EivGz9HOoH8VeifOW
rkvvowvRPelZxqxQc2CkPLO8eexTOkHXonfE/3Xd6dijWMS/gS6yify/dHtk
wU7ZflkRzOZfxGzZSj4nRvFP42/ZGb4MFvNvoqtsEn+L7oCs2CU7EM8Yc/hq
mCNbxd+L0XxRXJZ1w2RZAh1l2bA7vgewWpYLY2TFcEXWPfaQLAk6xZmGPfGe
xRpZboyVFcdVWY/YT7Kk6BzPFnvj3Yme6IVC/n1vtQ/6Ypprk6GLa3NiX7w7
sVaWB1/KnsE12Vm+LJbwddAv9hOfHF1jj5qPD+K+4/nFnMaZI1vH51c78dXV
/cYdjDnE93rVMVe2js+Lr/gSuC7rj+my29BNlgsH4r2IARgY34DxrRbfNvE9
Ed8E8Z7HDGNSoHucyTgY7zn8KrsPX8tK4obsHF8OS/m6SOt3vssfjjOF7kvX
Voe49j9k8oV6
               "]]}, Annotation[#, "Charting`Private`Tag$546606#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1Xfcz1UYxvEfGWkhLWQTEiUjDWTLKEkZWRkhKxooiey9ssnMKOKxsymz
ZFdmyYqSvVLqff/xed3XdZ3z/T3f7znnPk+OJu1rtkuWSCSSkicS9VIkEm+k
SiS2p0wkXsZh+gVclK9TH8MCeRI/jb4HI/gi2EWXxHp6kPE+8Rz9Ph7EFr4o
ltM/Gl9MZ8cMvgJelzXhf6Br4hK/ENNlaTFSVhSDZX35S3QnPISfZPXRVL6D
fwWX+UUYgn7yy7LOyIifZQ3QTL6Tr4Ur8U4Yiv7yK7IuyIT9soZoLt/Fv4qr
/BIMwwD5VdkHyIwDskZ4U76bfw3X+KUYjsZoYWyPvDau88swItYfLY3tldfB
DX45Rsb6xDfGe8e7xO+jlbn7zKuLv/mv8SkGyq/JPsTDOBh/E2/Jf+Tr4Sa/
AqMwSH5d1hVZcCjeA63lP8X+4B9+JWbI0uFTWTGMlg3mb9AfISu28sXwdZyj
WCs6Bz7nK8YZoMtiE93KeBv6Z7o+jtBV8K98vVoQSfI/1NpYJf9cTR/vjFHG
TqgvI0XqRKI4v5suhVvYwJ9TX8ftxsfEuaD/jn1Uu6m/qS8iufFs/Da6OP7B
Cv6sWhdHYh/VnJgp/12thUpxDtVy2Ey/ZV5bej/dALf4DXwhLORX8zPpezGa
fwpj4/zxN+mPkR2/xNmQ5cIsvjJay9rxB+iG+I9fg1myDBgjK4FxcT7jG+ju
yIFfY63RXn6Qb4QE1srGx/mMded7ICeOxnfgbfkhvjGSYZ1sQrxH/FaMowM6
RjX3sDlvIDnWyybinRiPNZQ1wW3YIJsUZz/2iv8EuWI/ZO/GM/Jf+KZIgW9k
n0U/yP/jeyI3jsnei2fkv/LNkBLfymbL7sNY/mlMjh7hE+jF58Fx2fvxG7Kj
fHOkwkbZHNn9GMc/gynRM3wy9OYfwXf0U1gZZzF6ls6N2fwLcVfF7/O/0W8i
dXwL/zgW0ZuMf0E/gPH8SbUmnqX3qKXxDX1erY+p5o+O8xp9jj6xBupLuM0Z
zst/T5eI/Yye4f9S6yG18ZNxV9B5og8wx/hp9VWkNF4l7km6fKwztvAX1Ybo
7NlO6jFZizijdNXorVhv9Qkspjeb9yX9ICbwz2Ev/Ty+pacZHxPvi758Pmyn
n8Zq+lTcT/Qj+IKvii6yzvxxuiXSYItsruwhTORLYrpsbNwH6Mfnj16VfYAu
shNx7+COuKviTsOHMW7sZPQv7ox7IO4adMVH6BbzzDkVfYi7Yu+jlzEu1g79
ZY/Geso+jmdlv/NtcHfsS/Rq9Js8FQbICuCMrHv8Hdlpvi3uiTWRzZNlxCS+
FGZH/8VeYiD/GH6gn8GauCvjrqbz4ku+GvbTFbA1+ju+hT5Dt4t7ga6GtHHm
1cJYEr9p3ld0JnzGl8Yc2SfoiV7xjcb+kLdHOuyIs4ze8T3G/pS9jfTYGWci
7oM4LxgkK4g/ZX3QQ3aW74B7sUs2X5YZk/nnMTfuDD4NBvOFcFa2is+HuXx1
9I335P+iOyJD9Bn/JJbSu40voB/GFL4M5sX9wt+BIfzj8T3Rh1gbPWR8NZ0f
82LP1NfwIn1ArRj3iv7Zxl+iG8V78v1ivehz8ivqO+pRtXrcI8bvi36hi+Am
lsWaqHXijBjf4/kkOgtuRP9Hf6ivoCy9Ty2DjfQFtQG+8sxk9U4MjTtOrRH9
GfugPod19Ln4/0E/Gs/wL+EgXQnf0f1jn+nz9Lu4P/pYtlCWFdP4cpgvm8Lf
hWF84bivZAPiLMgu8O/hgXhf2SJZNkzny2OBbCp/N4bzT8a3yNbyBTCfr4FD
dGV8T19WG8d+WaOB5v4Psth/bQ==
               "]]}, Annotation[#, "Charting`Private`Tag$546606#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1HfcjmUYxvGHZGRkZSezoUj2VrKJkll2QmTvvDIKGZUtUrRUNqHMkJYU
Skb2Lspehep7/vH7HL/jvK/3ee/nfq7rzt++R6PuyRKJRFLyRCJtqkTit9SJ
RH0c5G/gGVRGOqRHBtyJjMiEzMiCff7mCRzib+JZVME1sxdwg8/HAGTFfrMG
OMwnoGV8dppEYphZZmzSq+I674KbfAEG4m7r3jTLjx36XTjAG+IIn4gi1szS
i6FV3LM+nGfBk3yT/Mq8Al/Aq+BR/W/ZFbd4fdfW84W8JP+I95ZlZRu5Q46Q
g1zPKyfo3WUB2VR+J4fIn12vJpfr/WRN+Zz8Vb4is7l+MO4LnfWjem25Wp/E
H+Tv8IfxDN8qW8dvwEfwrHiKfyU3m1fkC3lVPKb/I1/Ev3wRSrk+Vy+Hl/R7
9Im8IH7Rs+NQfCaO8cloE7+3da+Y3YWv4zvhBu+G//hiDEYOHDZrhON8Ctri
ceRELuRGnvgtccS6p3GCT0U7VMfNeJ5IYImeFM8ZR/XGOMmnoX3sQ/f2qlk2
fKPXwC3eA8mwVB+CfNZN0gthZ3x3HONNcIpPx0PWvKsXj98p9rc+kmeP78Q3
y2/NK/FFsW9QU/9X9kTyOAuufSmXmZfmH/M+srxsG3tCvuxafj457lMWls3k
93Et9kc8M7lC7y9ryQ5yl3xV5nP9eOy1OGP673oduUYfJN/Si8rZ+iN4lv8Y
nxFnkI/iOeLZ86/ld3HW+eLYN6il/yd74TZ8pg9FAWum6PdiV3wHnIh7xx98
Bp6PPRxrURAnXWuO03wmOsa9IuGzepunwHJ9GArhlN4CZ/jb6IS6SGZ9H/Pb
sUIfjsL4Pc4G/uSz0DneC9aONsuJ7/V6SG7WV0+JlfqIuD+zqfp92K3fiz/i
eeEv/g6KWTNHLxHPWs+mv8ZzYUu86/QlvBrq67fp/XgqfK6X0T/hFeLMx3fU
p/H747nwLXJP7Hu+kg+QteXzcnfcm2unZUt0MTsbz0OujTMc+1V/WL4Xe1CW
jLXyJzlUdolzLcfEu0DmjjMkv5FJ8od438qlel/5uGwnf4m97FoK3p+nRgO+
QX5hXpZ/yivGnozfQp/OH8DeOIf657xOfFf9jGyFc3w2usb7wpqxZnmwVW+A
280G6GmwSh+JB/Cn3hrn+Ry8iIZIaf1A8zuwWh+FIvhLb4ML/D10w5PxTo1z
jrNxHnGRv4/ueAqp4r1unhZr9NGxL+JM6UXwW5wtnIvnhEv8AxS35n29VJzp
eN/p4/jd+FF/VF/Gq8e7RE+tv8TToSHfKNeal+PzeCW8pt+nz+APxrmI30vu
M6/Jv+ADZV3ZUe6RI2Ux18/z9uiqX44zINfpg+WH+iPygzjjsnT8NnKbHCZ7
xrtajte7ybyyifxW/uTaY/wzXiP+B98Z7xLzNHwwT491enl9Pq+MMfr9+kz+
EPbHvsUF/hyu8I/QC7mte93sHmzTG+MOsyQ9A9brY+OZ46LeAVf5XPRGk/h+
uBTnCNf4x+iDpkjrs4aY34kv9XEogcvxHHGdfxKzeFZ6mdh7fLscHu8R1/LI
N/R82K43Qzqzl/WM2KCPR0lc0Tvhb/4p+qE5SqF0vCPiPMVvH88MFVARV/1N
Z/zD56E/WiC9/zPUPBM26q/HGTF7Wy+KA3otfRWvF/+b75WjZCXX/ge/pDfR

               "]]}, Annotation[#, "Charting`Private`Tag$546606#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1nfYjQUYB+BDMpJQMrNFIquMqCgVUpGoKCpbWclsCJURDTOrbLKVvVf2
3pusSEhZGdH9/HFfz+/5nfN+5zvved9zndz1W9VomSSRSHRMmkj0SJVIvJY6
kdh4VyLxDunZp5tPT3rxFb3pw9d8w+uO2eS573Iv+3UL+JY3PLZZV5/7OKBb
SHv9WXsXinNN9x219VvsDcjAwXgNXTIG26uwSNfBfk7uSgmm2vMyV77u8WFy
esbZN5vP8pq8wCzGr/G3zRr09fw65lbdb2ZDc4VZhgvcbx9nZuM00+3bzcpc
5VC8V/NOTjDE4+vNClziBftss1C8Z5ba95ovc4PFju9ontd3Y7X8BI/K08x8
zJNveN5w+V7G219noVycVXI/j78pb5MbkZHx9geYIR+OcywnZ6i9Kkt0nex/
yZ/zGDd1/XlLv93emEwc0S3lozgv9i8oyX+6AdTV77A3IXOcS90yBjKI7xnM
EOp57k7PaUoWjuqW87H+b/uXlOKWbihv63fZm5GVY7oVfKL/x96d0tyOz553
9Lvt75GN47q+uhQMs7/ISt2n9otyD8ow3f4g8+UEP8j3MUF+I649uQSr5eGO
f1feI78ff09+PM63PMHMzs/yDrNKXBue389MyUmGe2yD+TSXeck+xywc1zbL
4v4zq3EzrlnHd45rKt6/2dNcYz4Z5yBe2z7DzM8ZFth3my+SRP7RzMBP8hbz
OWrLi+NaY028X69RX94rNyc7P9lz8It8Mq4NORU/2F9mle6zeA9yL8qSNF5P
30C/T25BDn7XrWYEDT22X9eSnJzSrWEkoxjNGMYyjvFMoJHjDnh+K3JxWreW
Lvor9q8oxx3xv+sb6w/KrcnNH3G96u7iR3s11um6xv0s9+YJkjEi7n8mynWY
6HlN4p6XPyBPdPaczJTPxPUup2aEvXp8F+i62f+V+/AkP9sLsFC+k5FyRibJ
W83neTPuT/OxuD9Zaz9kvhrP8zebmofj3jHbmL+aZeP+Ia99kpmLP5hl3xnf
RfF/8Gfck+bd/M5Ij280n4lzyCv2ueYjLJf3m9XZ4LjPzWu6r1krPxXkX8yH
WCQnZ5ScicnyWyyVS7JOnuzvNJOPyB+Sj7PxHaFLwyh7jfifdF/Yr8vfUJ4U
TNG/p/9NbsuDnNNt4kv9Dfu3VCAlU/Xv64/K7cjPed1musf9Zf+Op0nFNH1z
/TG5PQXif7bnZra8y6wa5yE+m/heM+9htMc2mRXjc5LnmUU4zwr7gTi3/McW
x/WIHN9PZt+4Ds3yXIzPwj7TLBifF4vte+J7Is5HXL/20WZmTjHFvs2sRF15
mVmK9fJhsybTvWYL87iuQ9y7crn43OKcmnmYI1+I72k5LWPsNZkvF2VlXKPx
m0C+JfejIrPsD7NETs0YOQtT5Xrx3eSYlvYTckcK8nd8v+vSMdZeK95D/Naw
35b78yx3xz2jb6U/KXfiYf7RbY/fJfoEA3TPkSauR33ruL7ljyjERd2O+A2j
T8JA3fPcE+da/0GcS/ljCnNJtzN+7+iTMkhXibTxfvVtdKflT3iEy7pdzObD
uPd0n1KEK7rdzKGtx87oOlOUq7o9zKVdfN66zyjGv7q98XtLfwff6yqTjrH2
rEyT32a5XDruU/mIWSs+I+Y5/n/gVHWf
               "]]}, 
             Annotation[#, "Charting`Private`Tag$546606#5"]& ]}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"Test on dynamics\"", TraditionalForm], 
         PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1b\"", "\"u1b\"", "\"x1b\"", "\"\[Theta]dot1b\"", 
           "\"xdot1b\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]},
    {
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
Nn/aJW4Lw98VTeePVvFB9x/+W/k8Kagx3CT4//99MuDf2tVsVwqMDXBU9y1k
gX8+ixdc+UuBlnLfSqSTWWCXSWY35RIVgqev2sXV6eDC5ra96+5PAquBwywD
cr809snHf0xYGO7iOO/aR+cD1N8VvZonRFlBXp/g81j9SwpsXAmi5cj1g8N7
khZRQoVH5oS/SyKfx6adV61Oyk6CeWnLdr/eziUMs3daZn8UgrePGv254MfH
8wr9d3TSHcSZIOHFTOSRqxRYHJmhY1zLAurKryzrnlFh8Mb4wnXkfjTjySZP
IQobvHmQnztBPl8ymh5mGGwXhg+GV8s7kPtt1Nv9dcFjxI388xjtdx1NCHL/
XHy9WPQLC1T9vLPAqo3cv6cYjAtp0cGjwdqDBxuloPxzOeN4QSZYYLuoNc2b
Auu9YvrXlpPr3//mG6Kq04Jaa3OIjelvHo3epMIWMwWHslXk/oIp2RX7bRJ8
K32vk0teD3Y2QnLRK8jXI9x4a24DH6DertT5km1xckzgfC/1VVgmBeY9Oh54
sp4F2o9HH/SsocI+hbqYGvL9/bmb+b1+9yQwC+kPoZHPj/sbOzp2dQvBQE2n
LfnxfGA40gkX3aPAfcfSX5iT+22p2y+m0lOpcMqtL9mf/Ly3m58cP2nHBvvb
rm7LIe9vadcVlo0nheEzu4bL003kfr1J8gD7gRQcuxAgY06+XzRfcZCSuCpw
EQ1o3jNaZhgiDL8Fy8zbVssHbGcxmlk6+c/HOG20Jq+nBfe/Fx4IJvex++uu
7PbhEs/cpB1u/ROCQ+/zZJqL+CButa15Vwx5P3lpNP//399tPrhojkMhFRp1
pSyrIV/f3otpyxuZ5PXTkee6RZS8Pm9d7zwfQIG6Jv+KnMjn88mry58/fkSF
C2mPTezI5635kE7lKgE22LaT2KEdwiWcffXCv0JhOJFsdTWMvN8eStwpnucp
BVltB15PSjBByvHfZyOqpeBnoSDzl+R5IhUImJZ9mAQvPr9z/BnEJbiMl8Or
lgjDA9L2Jt515OcZoM99mko+X192K5WR979GzcIcg0oqvLpWYvm5/3/+tJx4
oBVBgadzvqkcI59fe0aW2PolU2GD9c4mFfL9dD47uCsKskHIo/m3ZK5wifx/
H5edOiwM41fHn/1Crmcl6S7iDyKkoPLvb/9XxJ2HQ9W+ARyfIWNNkWqKLGnT
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
iVg2yAavbj5/7RHVCB6GvPrJultbXa34GPLqS2Idx+dt4mHIp6+2kb0YtGuC
hXz6oJe87oQHjUA+/ZmisJTKDjqRkza7YjCXgTdslV8fJEknkDc3iFrqYSc2
CN7cSl4yOlaQBG9e2c66WF9Egjf3jDOQqA0YAm++tavvvPWhVPDkG87QnLPn
s8GTi/jgedU5bPDkMYus51pT1+/CHHX1kYdM3K2xuDBmkg2+nC3d+6/6Wj6G
fLnFmIWcD42PIU8+x9ls96PpKRby5Kkfo0/bidIJ5Mk3e3X7j1vQCeTDE7Hn
+h3jHPDhfosY/I2PSfDh7S/NfQzdSPDfuRaNVzsG2FjVgd2LmmyZ+NBR/1/Z
1PlCHnxgePagIrVfQh78+SwPPTVqfUX+Wya7er4/TiOQ/x55uqLVwIBO6Ct/
CeqLYuBh+zPfFi2jE8h7HzGqvCpXNuO9y0zHev/+fhV5b5nE6vbJxTO+u8P3
WfRuwTosK8w1+shNJl5luHx8AfX6aa3yfp33w5jhs5gI17l88N9X+ywa5iry
wXcndJ2tVuyjEc3/7dVRlmPg/KUrxjyp9Q/57abe0LKvV0nw2/d/ihW33SbB
axcLrxmaaqPO18ZaTaVtTHzkm06CJbW+Ir/dlDp623kbH3x2zpCxtDm1fiNv
Tax7PyGdS2KfexrcElYxcVO7uVcUqfU10cetZrYOF+s4fn7BIM4Hf/2LcXGZ
Sh0PQ/7ayTPc9qISnUg747epeT8Dt+UV80ONqP3B/731l+/9q3LeU/uDb2fv
7NsljTfMv6V0YSsJ3jqaPuGxg8/G/K59n4xyYeKFe+PGmNT3R/5a1D/KmPad
jeXaq4gHRnGxQplZ9m7U5w/564093Vd/6lLn7/++uuL4q2JDav8ZIhGfbEZn
4puMiY5mWh0WfMl/74OrTFyEWf6PvVAdeGvV7Nfa49T17S4inuUhwcCN1cr3
JVH3SyODmEufllPr0/CeyLInJLYjLtLAAGfiYgr1T9ZTxxf56rB8sVmV1Hod
vvhXzocyIXxWu5xN8k46ETJrTdU7QWk8pkOrYA71PDlg+8T7syIT73Q++KaR
2s863d3HZzK52CU8m3+Zuv/r87Q/qpszcOdUr35iO7Xf+7+fnmd/6SM7icRe
DYSJ5x5i4vTjDvkS1PW/T8zuLqeeiznkaHmrU9f7K2UT1t43QriJ6PjXZFM6
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
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{596, 3410, 3408, 595, 1153, 981, 848, 747, 678, 
                637, 1181, 1009, 876, 775, 706, 1213, 1041, 908, 807, 1245, 
                1073, 940, 1284, 1112, 1325}}], 
               PolygonBox[{{3407, 3406, 583, 584, 585, 1143, 971, 838, 737, 
                668, 627, 1179, 1007, 874, 773, 704, 1212, 1040, 907, 806, 
                586, 1144, 972, 839, 1252, 1080, 738, 1222, 1050, 1299, 917, 
                1272, 1100, 1317}}], 
               PolygonBox[CompressedData["
1:eJwV0clTz3Ecx/GPwqBRcuBg66cDB4X2uDjkYhgzzDDWkhbLDAfbH2AZS6sj
TiQ52VqsmeGYVMohhyiMi0PNhFQzPD6H57xfr+fn9/l+f+/fL1F+cseJpBDC
DPRg2/wQtiKLzMbhmSF0JIeQg279MkpxlR/i9mBcf4C1qOCfcrl4r19BGa7x
n7m9+KU/xDpU8s+4PPTE56KJm9BPIRWHuBrui7wPv/UufQVu6I/0VnkOUmeF
cJ5bjvV8Ffdczkdv/B4oRw6qnb3gC9AX3xH3RS0/zO3HH/0xcnGEf8kV4kP8
HO5yf/XTSEMFV8eNyAcwob/TM3BTf6K3yXNxQR81S+Iu8qCZhSV2aNGTzF36
GjPPvaPyK362XmQO6/lYpvc7fyMvQrreGH8neQsy9TrnzfIkn6KfMX/qm7BA
7jdX4bb8z9yJSnfqza/cQfyQN8Z9+W4zEd/nWbecTcnb4zP0Vuft8jyk6Red
j8mbsVLP0D/J2Viq39eTzd1xH3ePmZ1cMUbkAgzwb83FuM7X6/fkKfks0jGg
r8Yducp5g/xNLsVk/N3RwaXgEpeI/z13XH8tb8DHeA8t3LR+DgtRzTVy3+Wy
uG/cEYUoQjH+A8DIauI=
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{3407, 3408, 636, 677, 746, 847, 980, 1152, 594, 
                635, 676, 745, 846, 979, 1151, 593, 634, 675, 744, 845, 978, 
                1150, 592, 633, 674, 743, 844, 977, 1149, 591, 632, 673, 742, 
                843, 976, 1148, 590, 631, 672, 741, 842, 975, 1147, 589, 630, 
                671, 740, 841, 974, 1146, 588, 629, 670, 739, 840, 973, 1145, 
                587, 705, 774, 875, 1008, 1180, 628, 793, 894, 1027, 1199, 
                669}}], 
               PolygonBox[CompressedData["
1:eJwVzzlPVGEcR+F3BixMRBMXhJLFQhvtTGQABxALozHGLyBuoMAAKnGtXToZ
dqOVjaC24r6BW6GJiQvKYmKiKGKhhQ2Lz1uc/H/n3DuZ3KK6zK7mZAghgbfY
nhfCDtSKW9CGS/gSPSeEV2jPDaGGP0Qub8Bv9OutWj8mUaO9xDG9mj9ADq/H
DPr0Fq0PE6jWXuCoXsXvI8kP4hd69YxWYJ9Bkt9ErzaOKu05jmhpvsa+gGX8
Lu5pCX4A0+jR4sevtk8jwW+gRxtDWnuGNm0zH7Q32GMotbe6f3HeXureif/j
vZ3uLK7oJe4bBDvlTmG/vXhRCD/dbt7kN+v47viee1UvdNfyd8jnRTxtz+AU
X8KDfR3dfl/Kt9n/0On5cl5oj+Cz5xvdr/E7PBtBq12pD9jr4zsosWvdPzhn
57m343d57zIvtl9jge/jP9DFG/kq+yQWMKh1aVm7wB7GJ17Jh9HCK3ixfTZ+
Cx+K/6XNY682hU7tMF9pn8A8BuL3aaOo4E+R0cr5EOZQp31HVj/EV9jHMYdr
Wlb7iHL+BM1ait/CLPZo39ChN/AOfEBKe4wmvYzX4yLeo0x/hEbPNvH/Dvxt
6A==
                "]], 
               PolygonBox[CompressedData["
1:eJwV0slTz3Ecx/FvFIlmjGWYNoxK9cvuwgxmuDCDmaK0o7vCH0B7HCwny0XF
kK1UlqMYS8QBh8ruwowttBlmGI/v4Tnv1/P1/n1+3/ku88orcyvGBUEQhTHM
JznxQbAJZXIjnmDp+CC4ifLoIMjm7RhGge4NDulLeQMeY4nuBnbpI7wNQ9iu
e42D+hIeL+/DL5zV1et6sZhfx05dFk+WazCRX8MV3SmeIvfiJ8/nr9DIi3mL
nC4/xxR5rfkFe+UxnJHr/G6jOYpjupnmHTzSrzDfY5E+JsZ1zR080y7C8+Qo
s1WfYGbzASTx9eZ3VMvxdhPkLlx2Np1vkf/gZHhNnhxeEz/s5/BV8kfk2cfy
l2YDL7LP5LnyPzTrZ/M0+Rkm8zXmZ+yRR9Ei1zp3VJ4h38ZDvtx8h4X6LpTJ
GfrzckTuR6JcFd6/3IlL9id4Uvgf4T3ybfwF6nkhj5MrMYJmXY2uB9m8E6W6
BfwiBrFVN4A6fQGvxoPwGes6UKJPD78dVOE+svRXUWyXxi/gG3J1/ajV5/NJ
cgWG0aQ7oDsiT5e7cS98nrwdRTyVn5Oz5D4kyOvMwfCsHG12oNXvNpu/cTx8
rt5BotyDr3YpfKX8ATnhd8v7wm84fKf2GTxH/osm/SyeKj9FLJ/LV8ufsJvH
8SHzNN/v/AZzBId1U+2mybdw126Z+TZ8l3ZtKJT/AyqUewU=
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1negjmUcBuBzlL333rRssqmMhOyQXfYsySh7pJDVTkMqUkpKibL3JpSt
ZGTvjBZ1/eqPy+++n+c75/2+9zzvOQp26tvsycSEhIRCSRISYk7yT2a+lU+a
sfmMvM1szh9yAxbJ93FMvhSv4UP5oNmJTL5fcvMmY8mnl7P/kVyc5PpO/Zzc
n+z6S/puuR3p4/3E9RhFbr2r/TVyfVLpF/Xf5CHMk4+YPUgbH8T+uMT/RsJk
MwvfyafMvjwrbzdb8KfckG/l+zkuz+SQ3JkU3KvPNkuwS36ZbqzVH+aS/AW3
MUXPymJ5MI34Tn+AX+VZlOdjvSQ/yK/QnduZai0bS+QhNKYCn1grxY/yq/Qg
KS/F/WOpPJQmVGSOtdLsll+jJ8nivVvLwTJ5GE2pRPJ4H9ZzslweTjMqkyKu
aT0XK+QRPEIVUpKK1KQhbVwvfmaslEfSnKp8aq0Me+TX6UW6yNbysEoeRQuq
8Zm1suyV36A36SNby8tqeTQtWazX4EScM6ozVy/HPvlN+rBOb8Bl+UsyxF6c
UdbIY/hebslf8qMskWtyUr4c54fZ8k9mF1Jyi+fjubD+eZyZODsO4H79vDyA
afIesz0Z7CWJ88fo+Pz6E/bXyw1JrV/Rr8pD4+eiz9ePyj3jTOvpzERzvFnA
zGh/mpyfpPpa/bT8FM/JO8xH+VtuxVK5FqfiPPKz3DWer3gW9HlmeQ7Ib7FX
7sBt8btB32A24jf5KzLF6+K9sE4eS2uW6bU5HeeYB+J50StwUH6bvmSObK0g
6+XnaUMNsvCO9UJskF+gLTXJSjayk4Oc5CI3echLPvJTgIIUojBFKMq7vm9h
NsrjaEetOCPWKnIors9T3MF0a0XYJI+nPcv1Bzkjz6E28/VK/BTXoB8b9cZc
lb/mTt7Ti7JZnsBOuRU35Q6skOtwNp4jDsvd4pzENeP+m5X5Wb5gDmS6vM98
jNvjPDOGp61vMpuQxjm5pl+Th7FAPmb2Iqu99GYSc0L8XMy77M+Q7yCZvkU/
I/cjm/6ivktuTTr9ln5DHhG/P/TH9JXyQ5yLZ5w6cR/0KhyOe8F++fE4x/TX
N5tNuS5/w3G5dzxH3K2/b97JVvlsfEYmyj+YbfhH/t0cGd9XXmXW5bx8xRzM
XPkXszuZvdc08XW8EM+U/pD9BXLVeOb1X/SL8iBy6DP0A3JHMurJ4lmLZ4+8
+gD7W+RmpNVv6Nfl4SyUfzX7xNfGMxb30rzH+gfmXWyTJ/Gj3Jb4o93RWG3W
40L87qFu3CO9Gkfi3jCQYnwY94vt8mQ6UY/izIzr8b08hc7UpwQlKUVpyjDL
64qxQ55KFx5mobXqHI33zSC26o/wu7yIE/ITZIpz6XNOTPz//yBl7f0LO8gE
gA==
               "]]}, Annotation[#, "Charting`Private`Tag$546691#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1ncclmMYxfG3pUJGIZtobxVttEu7ULIjW9lbQ7KVld2OqIyUlfbeRmRX
RtEie4bv+fjj97nOOdez7ue+n/t9K/Qd0KN/kUKhsE+xQuHoooXCacULhRfo
qlhP18NC+Ry1LPYpUSjcr/cz3R4D9UarP8p217tc3cI3x5F8Kf4duiLK82P4
XXR3VOVPcf5t9Dp5Sb67uolvjMP57fpL6UOwH/+o/h90Z0zSe1ktjkHy79SW
OJhep1bHM3RFx/WhX6SrYRE/ly+H4fwgfgz9E90fpXGqbKjsQ7oHdvDPoRJO
l78kq47F/GD0QmWcofeyvAaW8EPQG7fLP5L1zHPyz6MKzpRPk9XE0rwLjJX9
zA/IO8VpsmGyj+mT8T2/jD8Uj/GT+Wl0CQzmD8GHdA08m7nUP4t+ha6FDXR9
LJPPy3vFCPlQfhz9C30FttLHYw/6XbUSDjQHY/l/6B6oxvdx3h30J/JSmVN1
M98ER/A79ZfTh2F//nH9P+kuqMxP0X+F3g1l+CEZI90qY6Q/UmtmXvUm8UVy
j4xPrebcs+np8hJ8bXUj3wDL9ebnnnhA/ovaAbfLx6u/yq7ENvoE7Em/l2fC
OPp0x91Jf5r1gB/4FVmXeIKfyk+nS+I2/rCsCdk5/Ay6DlZk7jBB9ht/Fcrg
DNldss/oXviRfwE1cK78VVldrMy7zTrB3fLPZb3xE/8iaqKv/DXZMViVZ858
o1MZ863WxnmOeV2/Hlbn3nlvuEe+Pmss3zT/EurgfPkbsvpYk3tnXLhXvkHW
J+8z3x/qop/8TVkDvJ3rYqLsd/5q7IVzZffJNubd4ld+ZdYInuSn8TPoUtjL
XA6VHZ5xyS+QzaSPzX6S58i4UQ8X6r0lPy7rNPfIeHG//Iu8a/yWNYb6uEg+
S9Yw853j8IzsD/4a7I3zZcNlX9Jn4nd+VfY0PMVP51+lS2c98TvV1hkL/bFa
K3uWMTzHF1VPzRpWGzjvYnq2fDe+kfoFf2y+D36t/gL6AOzLP5j3RJ+Eo/nh
+s/Sf8r34K9Vt/MnFv9/D1+rVsF4+l+1J/o5Z4T6lewsfEM3zXjlq9UKuZ9r
Pa33F9011+Bn6L9G7469+WH5Bug2OIo/kv+Erp3vlH+eL6b2ynice4k6R9YY
X9LH4X35QrU8HpKP4CfRf9HXYV+8z1fFBPoC/Qfor+mzs2/kveP17Eu4Q1Yh
cy+7lJ9LN8EHOS97tuxv/nqUxYWyB2Wb6HMy3owRDdEIjdHZd9NEvcxx8xzT
FOtyXtYOmuJyvfnyZtlr+Ycyr6nyzVnr+DvPiWboL18ga579jH84vwGyXfwN
KIdLksu+oftiF/8GmmOAfKHs+Kwv/hFMlv3D34j9cGly2bf0edmj+Tdzjext
uFN2VK4hu4JfRJ+QOeQXZW/Hw/xIfgr9L30T9sdlspGyLfk2srb4NVkHGMXP
zL2yf+Ou7Gdq26xZ+lO1Dibnfo67kl5Mn4iv6IbZY+WL1YNQ1hp6JN8s3REV
87uvP5UuZCz8zfo76BZZv/wBmXO6Wq7BT+QL6sl89fwvcf6j9FZ5ab6f+i3f
LNfMnpVnxejMm9ote4pzZmYvwt3Zc9V2eR76M7UupmQcjruKXkK3SI9/LPu5
rAhukZVH/+T8tqxrFMEs2Vv5vnAPXynXkF3NL6Vb4nP+8ez3sqK4VXYgBiTn
t2ddZ5/BbFlLXCNfxrfCev6JzHmqfIfsonyrmCNrhWvly/nW2MA/mXlKlX8n
uxjFMVfWGtfJV/BtsJF/Ku8AbdAWXXxD7dT26IDrHb/SsW2z3/FPZ4w5T/59
1j5KYJ5sVvYy3MtXxkmyG/hVdDt8TTfK3ixfoh6McuZ0ZPZpuhMq8V09w6j8
pvHFMFD/oOzxuT+/M99M9mHMl3XEjfLVfPusTX503g064Sa9NfIOeQZ+TN5D
9gvcrPd2nhWb+LEZc94DbtF7R94Rm/lxGQ+64la9d+Wdsi/z4/MM6IaBeu/J
O2et8hPyDOiOQXpr5V2whZ+YZ0APDM4+K++KrfltyzPkmt5HT3WI/gd63bAt
vyd5DoyS/5BvHSWxQDY7v0O4j6+StUgfg6lZD95xb7pWvjPH/gfp0I11
               "]]}, Annotation[#, "Charting`Private`Tag$546691#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1GW4VVUYReFDS0pLtyDdjXQoDaJ0h3QjHUqXgEipoJQgDaJ0KCEN0t2g
NChKSPiuH+OZ35h7nXPP3XutnbFVt7pdo0QikWpRI5E8MSKRezEjkZ6Ihw9i
RSKn5Wb9u+ZfzU3wGc/Gl5kr419elR82d0AL/ib/0pwHF3kFvsfcCgt4Qb7e
XBdRkVd3X/ZCfGzhw/GOdct5FTzhLZFQNy18Bpf4QuTDA94bCbCVj0ArJLJ+
ui4fLvPvkR8PeR+8iW18JFojsfUzdPlxhS9CATzinyAhtvNRaIMk1s/UFcBV
vjj8f/iL90Ui/MJHoy0K4W9dPyTGr3wM2qEwHuv6Iwl28LH4GEVQFMVQHP+4
PgBJsZOPQ3uUwL+6gUiGXXw8OiCp3zpLVxDX+A8oiSd8EJJjN5+Ajkhm/Ve6
QrjOl6AUnvLBeAu/8YnIbu0K/h6e8k5IrvuaF8YNXpHvNbfG0nAv+Iaw19DY
fFlGQ03zMdkF71r3TA5BCtRz7Yzcoy9t3mHuLJvK5vJ62Efyc9dzyJW8o3xf
NpQXZQ/5zPVq8gjvJjvKNvJWeM6ys+tvyW/CvpZFZH15Xt50rZJ5X/hM2Nfm
P+Sy8AzNG8PvDOfFfEVGRy3zcdkVpa17LociJfbyMq7vNDfDJJ6TrzJXxXPe
BSl0s3lR/MGXh32h28Q/RAyU0f0nhyEV9vHJyGXdal4N//GuSKmbw4vhT74C
ZfGCf4rU2M+noBvK4WV4ByANDvAv0B3lwzkPzzjcG1TGK2uGIy0O8qnogSp4
rRuBdDjEv0RPpPKbvtUVxy2+Eu8hoh+pS4/DfBp6IbX+O10J3Oar8D6i6Efp
MuAIn47eSKOfqyuJO3x1eH8hqn60LiN+5zOQW7eGV8cL3gdpdfN4KdwN/yff
b26LNeGM8s3mjxAz3G9dNN0YcyYcDfeY7wr7FTN5Hv6juQYamS/Jl/rq5t/N
ncL3m2+HvalPZ54fzgYamC/Ie+G+mg+EPSbbhXMm/5R9wveHd4fcEr5P1pdN
5VXZU8aSteUJ2V12k+3kHdlXVvf56HIsby8zhz0nz8pjYW+Yd5tbBMw35Cx9
XvPacKbxitfgR8OZDd/L0/MF4UzgfnjW/KD5Y6wN7zq+NfyfeCPcI10M3Thz
FhznXyGf7qdwzvCa90MG3cJwJvCA/4SaiKkfr3sbJ/jX6I9aiOXaBH1WnOTf
YABqow7q4g1rJrqeDaf4bAxERv33urJ4yH/GB4gd3ke6d3Caz8EgZNIv0pXD
I74O9RBHP0mXHWf4t8iv+zk8I0QwWJdZt9hcHn+Ffc8PheeD9bwE32ZuGN4r
5msyNuqYT4bnHJ6hdXH5ZHOOsG/N5+TZcKbNv5m7yJaypbwpe4cz53oBuS58
H6JgiC6L7gdzBfzNN6CkbnvY24gT/oYunm6KOSfO8bkYirf1S3QV8ZhvRH3E
13+hy4XzfB6GoQEaohEaowmaohkS+MxU63PjAp+PT5FVv1RXCf/wTSil+4U3
RlzU5adkj7AXzXdlP9nc2v8Bd0Mmyg==
               "]]}, Annotation[#, "Charting`Private`Tag$546691#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1mW4VUUYhuFNd6eUtAUqJQoqFnYgFiGiYKCURfehuyWUbgUllFJCCRUQ
6e6QLglpvL8fz/XGzDp7r7Vn5qwi9ZpWb5IskUiUTpFItEqTSPyeLpHIig5p
E4lcWKf7Dq3RBm3RDu3RAR3RCX+4Jhs6uiY31uum46SuAibqKuGiLgl/6rKj
ky4PNugypk8k3tAtl2thhu6U/AAmyZVxSVfEvE902+Wm6KxbJedAkpwXZcxp
LR/jNxrPJL8pr5Dr89P52vwz/AD+Ft+cX8J/b/5pWjHuRzfZ2Dt0ivww/zDf
le9NL8if0YXyKPqfa4vShnJ3usN4AzpLHkE/lavREfJAmpa2psvoeNrF9av5
nOhsbg3dOP42vizfhj/ObzIvs/yWvFJ+G8/KA+UEfjB+hj6IKcYeCYx3ky/y
l40XkxvJO+Me0FW3Rs6FLnI+bNZlMa+G7ne5DmbqzsoPYar8KK7ouuEvXW50
1eXHFt0sdEcP9EQv9MZa8/Kgm3kFsFU3G+d0lTBNVwVXdX3wty5vPFddQWzT
ZfXdaur+iN8Ic3T/ypXxrfxYfD9zusuX+GvGi8uN5V3y5+irWxfPGD3kQihn
Tlv5BL/deDa5lvyn/D4/g6/LP8cP4pOhBb+U/mj++Vgrsb5135lXl06VH497
4nvwfWK9xHegP8uj6XXXlqBN4rvQ3cY/prPlkfQL+VU6Uh5E09E2dDmdQPu5
fj2fD+3lnubXpOPl2/nyfDv+JL/D3OxybXmV/C6elwfLyfGT8Qv0EUw39gRu
6Eqa01S3R/4S/XUb5PzoJRfGTt1cDMBAbDRWIPaMsSLYpZuHQdikLxjPQ18U
u3XzcVH3KGbonsRN3WBs1hVCX10x7NEtwCVdldi/uqdwSzcEW+Le0U9XHHt1
OdzD27rV8ntYqPtPfiz2jlwVCdwRe1a3l2+GoeZtlQujv1wCFcxpL5/i9xnP
KdeR18j18II8RE6Bn41fjnWAmfHMjU3jn461Gr8Xf5n/gv8l1hV/J/8Z35Pu
kz+hc+TmfHX+a34wTU/b0hVx3tKvfNY2vkic53HOxblKJ8hDaEn5Adohfjd6
Wm5M58pf0/2uz0XfifOA/mX8A/q9XJ9/kR/Kp8Qv5l6hT2BWnKt43Hgv+Qqf
HHfJn8v7+RYY5prtctE4C+NZ44Aut3l1dWtjr2GR7qr8JGbHOYcUGK7foSsW
eyGeEw7qFmMEduqLx7OJz8Yh3RJc0z2FObF/kRIj9bt0JeLZyHfjsC6P7/Ku
7u+4dyzVXZerxj6P/RL7wpze8lU+VVwb+1Q+wLfEa/I3coZ4rq7fTUtiqLHa
xiby9/AV+Y78Gb4JP4//x/y8/HtxptJ1xj6kP8jD6IfyS/Fbx3qkqWhL+isd
G+r6G7G+kCT/FOudfhufT1+IvUX7xH6i12JP00XyGJpavod+KR/kG/I/8q34
1/lRfEZ843P20DvwVfw/MjaJL8U/yHfiz/JHzLtNrievlz/Cy/IwOTV+M36T
PoO5scZiLxvvK1/n06CU3Ew+xLfGKNfsle+MZyKXxlFdPvPq6zbIDbBMd0t+
FvPiuSEtRuv36e7CcPleHNMtR8LfeE4/P74n0mGMfr/uboyQ78Nx3QokM/95
/QLdK0iPsfoD8RvHGS7fj4fMS5LP8U35+fEM6Qlz89P35Y1x9mOlLnn8VrqF
cjVkwDj9wXjGsa7kMjgZ73BIYf6Lcd7E/wtkxHj9IV3p+Cy5LE7FuxtSmv9S
7OM4U5AJE/SHdfdilFwOp+PdDanMf1m/KNY3MmOi/h/dfRgtl8cZXQFzP9Bt
irMLq3Spda/oFsc6QhZM0h/R3R9rL85VnNUVjHWu2xzrD6t1aXTVdEvkN5A1
fnddc91hvg0mm3dULhN7Ic46nNMVMu8j3Ra5Edbo0upe1S2V30TV+F8q3+Cz
xZqQW8R+5NvGZ8qj5UyY4vpjtCzGGatjbDJfka/Ed+b/5T/lF4Q3/3a+Ad+N
bo19QGfG+ot3k1g7dLg8gKaJ/UZ/i78f57Dr09HqcufY4+bXi/eM2HvxTig/
TfvL/ehNuRldLGeP9cq35I/E/ceZwLeL++bH8Jkx1Wccp+UwPvYwKhvvIp/n
zxsvLH8sb4vzCmt16XWvxT6WayAHpulP6MpjQqx9XIj3OWQw/3X9Ml1N5Iz9
oWulO8q3x1vyWDlLfE9+JZ0UZ5jr/weTRLTD
               "]]}, Annotation[#, "Charting`Private`Tag$546691#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1nccjVUcx/FLRnZlC0VD9l5lpISMSJJkZVNIGVFWqBAJKbKVSkVGZI/K
3pRRZmTLHlF6//74vH7f7/ee57nPPed3znPztOxSv3OSRCIxIylSJxKfpk0k
7sDwNIlEaVyX7cGX+ApfYya+wbf4DuOMT4YRxpfBDdle/Ch7AN/Jnkc2zJKP
lyXHh3xZ/CPbh0WyBzFL1hDZMVv+mSwFRvLlcFP2K/84NvCv43fZYv4hzOZf
iOegW+McnQPH6HrYR9+bLpF4l36HTk6/RldU/+Hzq2P4791zgpoShWUf+Sy9
2ouvpJbnz9MvoTR/jL9PHcpXVW+5/je6CorzG32eVX2Hf0J9g0+ivsqXV6/y
D6kj+T9cu0R9OJ5DnlHel24U86W2wd/xO/AX/Sx+pwcihbFd+Zv0HPeZSN+J
Ufyj+Fe2O54Bm/hu2C9byufDHP5F5MRc+SRZKozmH8N/sgNYJnsEc2WNkQvz
5JNlqTGGr4DbsoOYjx+wAAujPzDFuDT42LiKSOCQfLksP+bxLyE3FsmnytJi
LF8p5g97+Cexme6Ow8at4AtgPt8k1gXH+foxt/QgLDZuGp8On/CVcYFugr/o
pNgba4ktdA8ccc1KviB+4JtGP9JtcZ6+Hyfo57CfHoyU1uN1/ha9xPXT6fT4
lM/gs97Ry/RFtSmOx33kw2Iv0vvUp1BCtjX2kTqQ7xnPSHeiH1Wv8Q9Hn/JP
q3/6rlV0IRTlF/g8k9ovvk9txt+i26Esf4F/QB3BV1fz8CfpBjgQ/SB7j36X
vjP6l/6XXup7PqczYBxfBZfoZjhBJ4v9SVfDNvpNHHXN6thXWMg3R14sk38h
uwvj+Sdif8belf8kK4If+RbxrFgunyG7G5/xT0b/x56IHoi1ijmI74rr8TN+
wZo401xzDyYYXzXWKXokxsR8YRH/Mh7E2jj/ZBkxkX8q5gB/xFxhO90r1j7u
zxfDYr5l7Gmc4p/HQfo9rIuzlM+ESXw1XKab4ySdKvYkXQM76N6xFvHccZZg
Cd8q9jLdHhdj7XGabohDsR+t0fv0+3E/uhv9H12A/pheH2e5mjnmVTbZZ3ep
b/GV1er8FboFyvCn+DzqB9GPamr+QPQaSvI7+ezqoNiPcR/+DrUz/5h6nc+n
juJP+e610dNYKs8s70+3jvNF7YBLMR5n6BdwmB6C1MZ252/TG+JdRGfBFL4G
0uAgXxO76LdjXoxbF8+JZXwbPIKN8R6TZcVU/mmkje+Ur5eVwnK+LfJjU7zz
ZNkwja+JdDgr3yArjRV8u5hnbJbPkmXHdL4WrtIv43T0vN8yPPaGmj7OProW
fqX74JzrN8b8YyXfHgWxRT5blgOf87XjLMHf8k2xn7GK74BC2Cr/XnYvvuDr
xFrjvHyzrBxW8x1RGNvkc2Q5MYN/BnfjgnyLrDx+4l9BEWyXz5Xlwpd8XdwT
Z5p8a5xP+Jl/FUWxQz5Plhtf8fWQMc4N+bboF/zCd0Ix7Iz3h+w+fM0/G2cZ
DvO18RvdN/aQcdv5CljDd0Zx7Ip3j+x+zOTrR8/hCF8Hu+l+0e/G7eArYi3f
BbfpjrhMl4i1phvhCD00+s3a9eATsW7xflPz4JuYM5+9TT9HX1Nb4gydBX/S
z2APncO4wXR/OhndJX6DeiP6VB0d/Rz/Edx/J10pzhh+XdxLHcBXif8xfEJ9
JdZUvRLnl/phnCVqyegp+sXo7XhH8LnVIfyw6H26J50EBemxMbfxvlbz4ttY
V3kfugF9XW2Fs3RWHKXrYi89IH6za3fFeRLnDd8VpaJP+cY4Sn8Qe8g93+ST
ohD9SewDdbfr/wdlP3Tu
               "]]}, 
             Annotation[#, "Charting`Private`Tag$546691#5"]& ]}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"Backward Integrate feedback solution\"", TraditionalForm],
          PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1c\"", "\"u1c\"", "\"x1c\"", "\"\[Theta]dot1c\"", 
           "\"xdot1c\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 25.909248049824555`}, {2., 0.}, {3., 
          21.874679534904747`}, {4., 0.}, {5., 13.258098691906019`}, {6., 
          0.}, {7., 0.}, {8., 0.}, {9., 0.}, {10., 0.}, {11., 0.}, {12., 
          0.}}]}}, {{}, {}}},
      AspectRatio->NCache[
        Rational[1, 3], 0.3333333333333333],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->400,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"Error vs iterations\"", TraditionalForm],
      PlotRange->{{0., 12}, {0, 25.909248049824555`}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.863703015891938*^9, 3.8637030366952906`*^9}, {
   3.8637035047167454`*^9, 3.863703509517211*^9}, {3.8637039271827555`*^9, 
   3.863703954376066*^9}, {3.8638793581419086`*^9, 3.863879372824216*^9}, 
   3.863879435354231*^9, 3.8638794769839263`*^9, {3.8638795662274036`*^9, 
   3.8638795909035177`*^9}, {3.863886073060797*^9, 3.8638860950357738`*^9}, {
   3.863886133999321*^9, 3.8638861617314587`*^9}, {3.8638862758969707`*^9, 
   3.86388628009363*^9}, 3.86389061346067*^9, 3.863890917249578*^9, 
   3.8638911819919653`*^9, {3.863891424209552*^9, 3.863891429593831*^9}, 
   3.86389358658245*^9, {3.8638936350969443`*^9, 3.8638936803654766`*^9}, {
   3.863893713012042*^9, 3.8638937694410076`*^9}, {3.86389394358635*^9, 
   3.86389400613336*^9}, {3.863894052168647*^9, 3.8638940872194443`*^9}, {
   3.8638941368105946`*^9, 3.8638941433125167`*^9}, 3.863894318497527*^9},
 CellLabel->
  "Out[1060]=",ExpressionUUID->"779cd48b-0b3c-4beb-a624-bd78996ff001"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8638909789768496`*^9, 3.8638909843991165`*^9}, 
   3.863891412317354*^9},ExpressionUUID->"e3b56381-3091-428c-953b-\
8049828b4235"],

Cell["Individual Test Benches", "Text",
 CellChangeTimes->{{3.8637030744782195`*^9, 3.863703080794203*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"78f72274-21f2-4a3e-a828-5906a5fe2643"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  StyleBox[
   RowBox[{"n", "=", "20"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Tau]", "=", "5"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Tau]1", "=", 
    RowBox[{"\[Tau]", "*", "1.25"}]}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"A", "=", "0.2"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"order", " ", "=", " ", "5"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"maxIter", " ", "=", " ", "100"}],
   FontWeight->"Plain"], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0.05067258360375204`", ",", "0.4391104031492823`", ",", 
      RowBox[{"-", "0.5532994646328602`"}]}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"InitGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}]}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\n", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
       "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
       "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "data"}], "}"}], "=", 
     RowBox[{"ffCartPendulum", "[", 
      RowBox[{
      "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", "order", 
       ",", "maxIter", ",", "InitGuess"}], "]"}]}], ";"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1b", ",", "xdot1b", ",", "\[Theta]1b", ",", "\[Theta]dot1b", ",", 
       "u1b", ",", "J1"}], "}"}], "=", 
     RowBox[{"testSwingUp", "[", 
      RowBox[{"ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "u1a", ",", "A"}], 
      "]"}]}], ";"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x1c", ",", "xdot1c", ",", "\[Theta]1c", ",", "\[Theta]dot1c", ",", 
      "u1c", ",", "J"}], "}"}], "=", 
    RowBox[{"testWithFB", "[", 
     RowBox[{
     "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
      "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A"}], "]"}]}], 
   ";", 
   RowBox[{"p1a", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1a", "[", "t", "]"}], ",", 
        RowBox[{"u1a", "[", "t", "]"}], ",", 
        RowBox[{"x1a", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1a", "[", "t", "]"}], ",", 
        RowBox[{"xdot1a", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1a\>\"", ",", "\"\<u1a\>\"", ",", "\"\<x1a\>\"", ",", 
         "\"\<\[Theta]dot1a\>\"", ",", "\"\<xdot1a\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Feedforward solution\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"p1b", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1b", "[", "t", "]"}], ",", 
        RowBox[{"u1a", "[", "t", "]"}], ",", 
        RowBox[{"x1b", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1b", "[", "t", "]"}], ",", 
        RowBox[{"xdot1b", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1b\>\"", ",", "\"\<u1b\>\"", ",", "\"\<x1b\>\"", ",", 
         "\"\<\[Theta]dot1b\>\"", ",", "\"\<xdot1b\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Test on dynamics\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"p1c", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1c", "[", "t", "]"}], ",", 
        RowBox[{"u1c", "[", "t", "]"}], ",", 
        RowBox[{"x1c", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1c", "[", "t", "]"}], ",", 
        RowBox[{"xdot1c", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1c\>\"", ",", "\"\<u1c\>\"", ",", "\"\<x1c\>\"", ",", 
         "\"\<\[Theta]dot1c\>\"", ",", "\"\<xdot1c\>\""}], "}"}]}], ",", 
      RowBox[{
      "PlotLabel", "->", "\"\<Backward Integrate feedback solution\>\""}], 
      ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"p1d", " ", "=", " ", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{
      RowBox[{"data", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Error vs iterations\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}]}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"Grid", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"p1a", ",", "p1b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"p1c", ",", "p1d"}], "}"}]}], "}"}], "]"}],
  FontWeight->"Plain"], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8637030916107454`*^9, 3.8637031163048553`*^9}, {
   3.863703146634164*^9, 3.8637031467241335`*^9}, {3.8637032271314416`*^9, 
   3.8637032981877384`*^9}, {3.863703344313999*^9, 3.8637033675275803`*^9}, {
   3.8637034246933155`*^9, 3.863703488801831*^9}, {3.8637035225560446`*^9, 
   3.8637036066221848`*^9}, 3.8637039678437643`*^9, {3.863704003356416*^9, 
   3.863704015206629*^9}, 3.8637041910564413`*^9, {3.86387938554615*^9, 
   3.8638794077180634`*^9}, {3.8638794473054113`*^9, 3.863879456186574*^9}, 
   3.863879487594535*^9, {3.8638795768290167`*^9, 3.863879601771044*^9}, {
   3.8638860815410876`*^9, 3.863886103615032*^9}, {3.8638861483497353`*^9, 
   3.863886172621978*^9}, {3.8638914447629833`*^9, 3.8638914562922993`*^9}, 
   3.863891796977415*^9, {3.8638918475872407`*^9, 3.86389184764522*^9}, {
   3.8638937946529503`*^9, 3.8638938135878987`*^9}, {3.863893847458075*^9, 
   3.8638938597471466`*^9}, 3.8638940187133408`*^9, 3.863894098689779*^9, {
   3.8638941539631133`*^9, 3.8638941576359406`*^9}, {3.863894255027814*^9, 
   3.863894255155772*^9}, 3.8638944064184275`*^9},
 CellLabel->
  "In[1191]:=",ExpressionUUID->"b5dee5c3-2101-40ff-b338-91333f517d06"],

Cell[BoxData[
 TemplateBox[{
  "FindRoot", "lstol", 
   "\"The line search decreased the step size to within tolerance specified \
by AccuracyGoal and PrecisionGoal but was unable to find a sufficient \
decrease in the merit function. You may need more than \
\\!\\(\\*RowBox[{\\\"MachinePrecision\\\"}]\\) digits of working precision to \
meet these tolerances.\"", 2, 1194, 96, 17527655052863270449, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.8638944007392426`*^9, 3.8638944827350364`*^9}},
 CellLabel->
  "During evaluation of \
In[1191]:=",ExpressionUUID->"19880933-bf02-48f1-91fe-b68ecd4e2b24"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
YtFjI8H96bjP0Z5E8HK7mYfeNmVvqXxIhDn+v/JcXQi0xNmH0a0xLHByv9dD
Z+U1pGzD7HAsiXH+r+iZB9DYIZ/lj1ObsymwLYNpNoBCxn2Py2730qO0ibTx
ghMd7J/aAFXW94zivVG0N/+U0Np0N7BRMf21fIGxXvzsvKnfZ0CiTHD3YZ90
hPkhTKmWxyiRmUiVkrHpBx8LrLwXdX3yC2M/1YlHXlaiwM9SrOPRjDwK8GXi
kt3HAX9AlT65VySYt+z62pfeBaqjAk/oHZhC0nkfmXqPz4AfHqLfBvMzUHC4
aEHekTkw4Dr7RIk3A41NZL44Xk2EtkiJrzqHQGuN4yX+HSNDo3KfixQLEqxy
pqeIz1KgyJ39K/f6SbDm5iGXrNgOsOnUtXAx8QmU7CYf7krsBaFdZwfnmKdQ
pIOluKfOLKjJyn2TTfy//jqUFq1DhKv1wZTQ+TUUKJ72VPccCyzs/LTookug
iVKUdo65UCDhsFD5ZlYy9I4OTt4/t77+mM+SerfrY/Y9Loj5LCkXPotL5LDA
xsBRqRcx1WBPRVTw68AhUMgqEb7yqBF8deq65wLaEOa7vLVZVn2ZNoH7Lgc8
lnbolU7ivstbCt+B1isjuO/ygJv2kFugG/ddlmJk76+F1OK+y8faDwQ59lLc
d/nbma4UdjoH912+kdqOOTKn475LzoNGj5InObjvUieueKPhaCnuuxx2rfCk
PKnBfZe5Pf5/pYQ6cd9l87EhIZmBQdxvEfAP8DAwW8T9Fo0jf39FyBNomN8i
GLrE7sVLoOmlWhzR8WKF8YQMSS/TWVQa4qc9eIcNmmrUKIhJ1yI2/15mpyB2
WLEk9NAqaRKEyv+xMA4gwb8Bhz8E72OGmB/DHbTC667KDjE/pt7A/Ksx49zA
/JhjbjXJfiQSvJbYn/06lhPGhQy7QjlW6DVV7LTVmBuqIJEmk4h2sLunpjO2
jhsSflwKFc09i7TMvBN4THggIh5fugGaEebTPGf1d9ErGkeYT6M/HpY/YTGL
MJ9m/x2dm+JbVhDm08jz+/6GScy04RsKLCSL9Xp50fr1hurb6/mE+Tby50Zz
IsIokASomvKoAtjevHVsYMcSiDjuwjz8tA6IXl1NljcvAPdvLNLOO7WCp7dz
YJ7vMJJm+SE/pdsNAsZgnq7RFMJ8HcXFXOe+mnHc14m/oKHPfrAf93VYg318
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
of+HujsPpvr9H//vSKQ4nJSlRYpKhJIkqeuiRSklSShalEoSJVooSVRaRClF
RRJt9iXUlaIskX3fji3OsZ/Fzu/5nnld12vmNfOa72s+//3+bBrheZ7P63ld
zW3uj0ORSwXdWRJQvLqQ9+FOH/Hp5m5bo541NSDcm9qycX2D4vky4tXFztV6
f5f6Sbz6dQ7D5sPJJOLVDTfqxPxQfvJ/9uqxU+cflPe6A7BXP5LfqvVwSzLA
Hp07s5lhP/fvXpWJtr5MiW8dwB49b43v10+vGgH26P2/frw/n9wEsEfv2fVi
hfNCJsAe/dHB8KO79ZkAe3QGQ11/9gomwB69Vu9XQsNYE8AePUsEhf0ObwLY
o1uEmz5LXdAEsEeXfl95efqbBoA9+rIrk0UMWAdwr6r9xEFb8f4qgHtVVi9L
3oaXlwLs1a8cPBzcFZQLsC/Pc1AcfCrWj7Av/610/WheNAdhX143qDfTyoCH
sC9P+9gRr9bIQz93Cqx3sxGHjlE/vsw5yUMG/TcYOtZ0+EjSFIhJckkPq4M2
/95dw98I97COfkiJfbv1K8I9LKPkrQ9HDkQj7NNvPfUwX1l1Gf1Xn+55cmCP
ofIWhH26HePas20tYQD79CrvxedXPEOkl9Xq5Oclf7kMYI/etoGlkTZSDbBH
v6wvxdYorwfYo7tbz/wlrNsEsEe/7XEPHGc1AezRTfz45plaTIA9+vsnm6af
pt4v2KM7nNykfkaBCbBHT8lROJHSRK0nf3l0I8+NqktdqX//L48+OmOelcSX
RoA9+mLOG6+xmnqAPbrQW2fddwtqAe5lVTdpy0mbVALs09c/T0jdcbQYYJ+e
HDJPs270G8A+/dDus546x0MR9uZJh0ymxmzuIf2slUsu+yfKDSDszYsyjq1N
OMpF2JuzfkkoOz3jIezNn8UvX2BQwkM/wk/dK/4qDm0X2gUqjnMRKyPqbMJn
OrTZEhSj9b/zzZ1Xr4rzJOCtcy/dG5v6iD8367udqKPQhHCPS/jYqJsQKice
/dvi7IcvOTnEo4esO8pic1OIR/8s6213Yd5z4tEvPNrTvGLqdvRfPXqO8Q9x
eVUvgD16R6HEmmbjBIC9OcN9SfwFh0rS83oyIdG6XLIOEG++//sEbU8jwN7c
VOp1bk5YE8De3PtQ9kCfLBNgb76ZPfPZ//bf2JsnVoWEbqXuH+zN/ddEA64Q
E2BvfuiIxes7sU0Ae/Oy5QGcOM0mgL35nZs50l9bGwD25kkz9RL6g+sA7nld
5Ap9SztVDXDPK8hAPczrSRnAHt3LRltuU2A+8eNBJrMORMb0IezHs5YnBwwd
5iDsx7u0DKxD5vMQ9uNPa09Fv6b2yy/fr+rp1hOHCzSfBOr78JA/M8G6bz0d
yn73SHywmUt6YddalAwj8ooQ7oWNvxfc8KcxE+Fe2Oj7fuej2z8g7M+FvOqP
7njgjf6rP/d0lkz1+WgNsk/Jv1tQ2gksYkM/qL9sAAO+UYqNjB7Q75xdbXq2
CWBvbqYXdHMHdb2xN3dO7lf6rMckPbINJia8qeuYAHvz7/KnQ6KlmAD77qyU
W3pxOVykm8t4cZY1A+b2zv05O4uHzE48NakdFoM+2Rps90QeUvkmwT80KQ63
w2T7qDdc0id7scrVac+UBIT7ZG2qx5RpTQHon158JczM6byUDrw7G0boBx4C
+fWlWtdm94HnZ97s98ptAtiL5y0qjStUZgLsxVuXhomYUe8f7MXNH0ZNtVRl
Auy3VUYnDunb8tDAgZEz0ufEYN+mFQ/0qPW9p++Xn4CnOMxrTRsV3MojfTOD
jFeMV6mvEfbeo25HfPfIOaN/894C06fcnAiBCHvvTZc4PyucXgDsve1vuq9X
mvmF9M82XvFJOCtTBrDvfv61feZAXDXAvjvulo+m3/N6gH239eePipdUmgD2
3ZzDxnPFW5oA9t1hL47MnKnJBNh3u8mw5JWo5w/7btnx0CRTRerv//LdqTsi
901tbwLYd3NV0kRSPJoA9t1mi3heqyoaAfbdQCl3d9ZEPcC+W9yDF+hhUgtw
/yxQdKVwYWglwN7bPt8k3KmgGGDvPTC/kRejmQWw95Y08inKrvFH2G8Lajxz
21/fTXposottS4939SPst9eGfn53aBsXYb+daP002ekeD2G/ve9miO3sSh7q
fuqVqBYnDs+e/+XiKclDOXad5z+/p8N1WaE5Opc5KOrqYZexNAlYviHmxM7p
/cRzX+x56Ch8sQnhvpoDR6xh1K6C+O4J4/nVi1i5xHefk6gOMNv6ifjuF6m7
k0++e0l8952F7+03n9iH/qvvFjjpcNDjymWAfffXiJeP5BviAPbbGrNyr7XO
rCR9trPFK99sK6kF2G9/VB3ec025EWC/7VtwtDohqAlgv61144MqmMUE2G9b
ajiP0an7A/vtWCnQqqbNBNhvez/+oVg0jQmw384tXTZnaUoTwH47Y7WPRPW6
JoD9ttUfa1tHwUaA/fYa76XnP2TXAdxni14h0doRWQ1wn01ucfmRIX4ZwL5b
T7jXWO/2L+KxW5dWzdbw7EPYY1d+LhO5p8dB2GNrCCR4FIryEPbY688ZrYqv
4KG7+wu2LFsuDhVahW/vDeSh5Oq86zvU6VC59VTi2oNc0n+TenHpqs/hYoT7
b5tCPTwuxn9DuP+m72gQcdwmBmHPzVfRTww9eBP9V88tcNMuW27+VtD15vpg
+r1OEHrUv/DzmQYQnduRllbYDTjJFYx5x5oA9ttK0pyl5hNNAPvtyLaHeYrU
eoz99rzSo+csqfUa++25I4d8RGWYAHvp17aAIRfHRd+TuUo21TNgiQQoepHO
Q/oyWtHSnWLwR/wdS4/PPLQ7bcm8z73iUHLKtJ1rvnBJby79etJX5spEhHtz
GeHzS+afeYT+6a8jaPI+p7w/AQurY4IFKx+AgfR2gYY/vYCmMHJg1tcmgP21
2uedNhsXU/fXX/56XdWhPktqfcb+uq5zs3iOGhNgD/16zpnvW/fw0GWjeh7t
iBh06VYo/06tzzUv7FrXnRGHiRJaXTMseaRfN2+xQ/G9a28Q9tM60cfSh5e6
on/z056NAao3xiDx0d1H6YNL1zAB9tELsh+l3N3ABOUP0lasTpkBrdZcUDJ+
w0Nzzx+3uvtTDN69+PzM4V880rczSfyOVMWfIeydf9OvPpxfoY38vCsFzjxO
ArB9yiJrWV8wtqVba15cP9h6U3av+XwmMPj1PlfrOwdEbjh9eT51Pe4ufkWr
BmJQwEASXqznocTx4EfxxuLwmajEbrULPNLDCyhJmh41+xqKnfWoi33pHXh5
SV9JfOIk0F16zPjwOg64ktiwVJr6+bF3PtMnq3CXOr/H1arL+Y7OgG+GPCpP
5vPQ8U8CQy+mi8Myt3e082956MtFr6c26gPALN1oeNZyJtjqzN08bTsXBM/4
kjCX+vnsz8iwVLyp85D6244n1M9nl2r+fLJSCsrNcxV5v/ck+jevLGDon9bt
sAphr5wh+Klq3v5QgL1ymWbhQ+1dn0mPb/nArWLNtlKAfXJAGnMF/S61Xvzl
kx9mM/gvveoB9skDP6yELi5qAtgnB89xHtBrbALYJ69K6/Z+Tp0/sU/em7vY
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
Ep9poV1uR582THxmg/+TkFfmQ8Rn6muKKArc4gHcQ5z0BMpyNUziM80ib6zX
n1n0n31m1YeQjUFWbQD7zAsbzdWLqXUf+8xY+eOKJ03ZAPvM9jH566kyEwj7
TMOi+fRF1P4N+8xFUwIHbc9OINmmvSukpkrCJbIfV2l84BN/eawyqPNP+RDx
lyFs3z1hP4b+1VtGnee/1tjfCbC3bN/JuD85zgbYWy6I/7S14n0nwN7SeNFJ
m1iTSYS9pZtIC0/CexIlS9l0H98kCTsmqt3Kpw0RX8kMPUyLkxkmvvL32XPX
G78P/qunTB1NU/CDyQB7yhkqOV2bq5ikV6jkoprfbcEi8+lVn7a+f9vAJv1C
Mbu6+3fKOki/0GW6oofB52bSL5Sfo731Qk8V6ReyvyFvDftfpF/YEZNfs5+d
RvqFmqr71RnvX5J+YdbBzPUdLvfJfPqAjX9uzIp8Q+bTqy0cET0qkEDm02/L
uyirQW1psc9cfG6z34q92WQ+vVDVrN3GkkVkPn14d8916dpKhH2mgutaEQUd
JplXr9S+vW39zU6EPeZJH7e3k6WDZD79kwNlJrsHx8h8+vi6KqsTjyfJfPqg
Tsv0uSsnSd+QfdkQlJSOkr7hzXF47JAin/QKE+dVrQ2ebCH+ch1anLvfvI/4
S2s5tvWFuzziL1c5+epF2w0Rf1n5Q59rJTZM/OWmxTtDTTcNEn/ZJxzqa9fN
AbhfOHuO8IyqwHbiL1tnn9DmcP72l7vOLXQdtU/8z/5S/GzE5ZDNFaRfGCEl
ttt49h8ynz762/VuoQI2mU/v+qwW2BSySM9Q+fAs737ZRtIzTF7Zo2GrUUp6
ho/LhCT2r8giPcPo8XnX1Z/Gkp5h8pIllYHH3Ei/MGhI5sp8349k/vwcu+W9
cq9TyPz57E/DgoYvM8n8eY+M+lcmKnlk/nzZzNcJ79+WEg/aUVibbx1Sh3C/
cOyKJKdrrBVhD7raqKHV59kImT9vMlqtsu7NBJk/3y9rO5lTOImwB51Yls39
UTeOcO9wzeELgbYbhkmvMG5MMfjGg7/95+392a4qWhziP1VGHKa9BYPEf+4f
Hnv2bWKI+E9hpvkTUdch4j/Xlkgs1kY8gPuGAtlHVfWONBP/CWN+uateLf7P
/nNWkcvAzJRWgP2n3ffFwl4GbID9Z3jumH+mKxtg/xkhZB7yuHkcYf/J/3K+
u6ZgksyHL9dYwNJ9PkGtdydX7h6RgNGHFDJG3fjEd5oUye4a/D5EfGf2b8Nz
52qG/tVzvnm/YKYMvwNgz9nVc/r+hwk2wJ7zutPyNPnuToA953P10MKlWpMI
e85FPOcXKHgSGYh/3uuhJwknw3R28FoHid+0eS+TSKPWW+w3LySrp7xgD/6r
19TaWf+UX80C2Gu2ll18pJfABthrnhxtLt70aRKZ5FyVXhwvAofnWp22655A
rQznpTdOSULXvZxTocFDxGtqHVlitXtoiPjMzC9B3odGnxGf2TvEmq0wuwNg
n8kxtHh4u48NsM/s+VpqNDkwgbDPTKrdbCKUPom44Hnw02hJSNdoerZSYpj4
y8jezrVbAtkA+8vWxS2/l6iwAfaWsxfMOS5ePom6onyb7t+WhGnrJy/GtA0R
bxnT+VFP+uMQ8ZZdJYIHjYfYAHtLSS+FlVfsJxH2lvOuRMcKnZpEYxWJpq9z
JKFIfO09Penhf/WUOTNPL13wKg5gTyn8aWnu1nNM0hsMUdlV9F3r7/no8frv
W7+2s0l/MENHR/bsWAfpD1aeC6pv7m0m/cF1E9uWKZpUk/5gQOfguVmjv0h/
MG5UGKyLSCf9wd4KnlNSVBjpD0qq969du+gumY8ulH9bV3LNGzIfXS6o5drz
9HgyH32a5RaVyi8ZxGdesIEnDSSzyXz0uFWvXmp/+k3moyO3P5GRQZUI+8w/
lw9eCqUxybx0WurMvh8bOhH2mBW9v2M2vR5E2GMu7D4seKVyjMxHX6qo+rr5
ziSZj96or8TRhZOkT8iYPc53GxolfcLrTsveqBzgk96g/B5J+peAFuIvpecZ
isUq9RF/OWwwGNJ2mkf8pXKx7t5HFkPEX7pIep0pou4/7C9jI6ueRFsOEn/Z
L3fM/xCdC3B/8IhLxtKrFe3EX1rtlily9P/bXx4V7U+riEz5z/7yjf22BN89
5aQ/+EbDcqFrUTuZj16Xue97/Fc2mY9eeqVre0w7i/QIlRkCl2OuNJIeobJB
R1j7jVLSI7xjFPPuSFQW6RH2zBd4cV49jvQIm/r87mef8yD9wTwmX1Bd9iOZ
f87KGpmttjeFzD/PjwWJb+wzyfxzhaxLHsLluWT++SobxlSPU6XEg0oZrnJf
uK0O4f6gzMPKKof0VoQ9qLLhcdZd5xEy/9yr6IxazYMJMv9cf3VMV2jxJMIe
tJDVt6Z0cBzhXmEsvazh1alh0hu0nnCacFb923/+FhqoqRXlEP8ZuM8lI1B5
kPhP+ev2psbDQ8R/th5/seOP9xDxn+aZYant1TyA+4SbTglZSEY2E/+ZL9hm
569Z8p/9Z/PzzgzjI60A+8+tC6xVwqj1DftPJd3a1w6+bID9Z8WPiRGln+MI
+889Z9Zk83InyXzyL9tsJ6QTJlDZ+5xguwEJyDeZO8/lAJ/4zowP839qpA0R
3/mmSb2trHnoXz2n1PyIkqSvHQB7zqTO5HE56vyAPeeL+/oR8mIsgD3n/Ivf
DzcqTSLsOYOWrHYwezWJpt3uEr2pIwmli5QTNEsGid+0jFygUDd7mPhNo+Pf
vn2dGPxXr3lXeYOgSAYLYK8Z2SN/IQ2xAfaaw26tPdPjJxH9ptp7rbcicOHQ
vPknJifQFLCz6NVxSRj5xMz1490h4jWr684PQWr/gn3mLS9R4eCaCOIzcwxO
B82u+gOwz7wBhLnxnWyAfaaSjNad6cwJhH3mYHBR1NrMSSR1+rLBp9eSsPuM
nGjbjGHiL8WdE85uvsYG2F+Gx5Xs/r6BDbC3vL0lx+J62SSaUXH01kcfSehM
X1Et2TBEvOWfmE/n3lCfH/aWwjWrlmePsgH2lhWufaM91pMIe0u6+JEXPLdJ
NFcoYPR7liT8oL1AcR21f/g3T3lxk4ji+XI2wJ7yxhef2fPCJpFM7PWXovWS
sHXPPriFOl9jT1l/9NIlTiX1Pv3LT+r03aLNy59Eu3+ufsgPlYSOG6Y+/zBl
mHjJLknRQ+0WbIC9ZN1+sd+dRZNo24oFtewrknBX4+lkrYIh4iUt94/OcCse
Il7Su12kdYjaT50sXH99Yp8IhDwV2z33J5GlzQ5j2mdJKHXnVk8o9fthD1ml
csLgLZpELdvaFjC7JeGZSX/HrP4hgH3kzk436XfSd4iPbD/gOzGDzwbduiMb
RleLwNi539j8hElUPjOz7/IHSVjl+lKXyxgmPjI3Lf5ZxSs2wD7Sw0d4FFGf
H/aPxtd/ljzjUPvR6Mpon1+S8Ij7bu+kWcP/6h0V6JYpa198BNg7vrVnPxaG
TNITdF37UlpmEYvMx15z+brSQRab9AVvt5QJzZXsJH3B5s7xHUtEW0hfEN43
6dO8Vk36gswT9wLnbyogfUGdyGtigbQM0hd8aBr0OkQ5nPQF3WeruUjx/ch8
bC1OrcqpyUgyH7sLrDp4JjiezMd+ssFly+2ADOInf2aDbYt6ssh87LDQrIVT
fH6T+dievhaiyKUSYT9Zs0eh7ll7E5mX/UjvniiY04mwl1QpTk4vuzuIsJds
nrn0ru3PMTIfe9bj1Zt3+06S+dj2/Z843oaTpD+4TfDRt4DpY6Q/CP/ox9le
4JOeYGxQiseiAy3ERz7UsRqNm9FHfGTNg5n8Lmse8ZFi4+9kLHYPER+ZxTlj
vou6X7CPlJ59s0Lj6CDxkYHs5MYceS7AfcEkX7e9xYPtxEcOPzS8Ydrwt4+c
OURPN4Of/rOP3CZcy9GqLiN9wZqrWs+NP7ST+di+/S47p6Sx/56Pfb5l+7UB
FukNjuoKHHoR10h6gzYu4q7OcaWkN7jo+6DFUGsW6Q3OaumOPH4xjvQGRT/a
jKoZeJK+4O3e67PKmz6Q+dfu2UlOvmopZP71TXmDG1ImmWT+ddDBGTML3+aS
+df+D3Yf0dhRSrxm6sqWyy0L6hDuC2r0cab3PW1F2GtObhIPP3VghMy/Xook
vS18Jsj864cinbYpJZMIe807M7b+f43de0wURxgAcCkgBwhsivKQg/LQEFrK
oYBY+phNLHhgOInWGqNSSA/FSpt4amnloIBnAEUI5KAIVx+ARUDBll5531IU
uAiIFTiB9gxwVugtEBAOdqHedmyYSdOEpPvfZDeZ+XY2832Z/DJ7ztHcSKHz
CHMGxD9sTGfxeYLD3Y6p/syf2GdG6Zd+lS28wD4z69Dh2EH+EvaZsun0vuhF
BvvMJ5W5tu7ZDPaZWXvv3fGaMAB0/uC83/jpqa5x7DPNBblpGZce/2+fefbj
+Qaf4GcA+cwh6ayHhxsNkM8cO5r1YUwunO9Vnyl7akkENr6kkM903bFh8ccu
Dv+fevfcej3ZaqSKfZjIUzN2ZA1fcD9FtIj9peknLh84KRnsL+fPtO3tfs6s
6S1Dvcs0opuTAHnL/HDn1wZg/kLecmWU7N7vogfIW96rc0pa5nMU8pbrndVL
vRUcdVJoJr68gyDlzV7TCvUS9pXamaDOTbCeQL6Sz1XVuPOYNT1l6QmjOOm2
HiBPmRxxZyGvgwbIU34dXJDiVsNR08fNEt/73oLUhxpMt/A4Kn+wZUtdHEEG
t3nGn89gsKdU3NZcf7mOxX6S157Z7ApuYT+5+NFbZzQNEwD5SalLvarjDxog
P5nf8k3voydGCvnJtK7YPab3OarUVF+oLoPrS5hkxcqKxT5ye8rOucZEGiAf
KZfFRSqFNEAe0k/WVDjdz1HFCf3aVhlB6vmlVTYjDPaQu8PG4uvbGOwhgzYf
CLV6tT+86iFvfjWfE3eQo5CHvN49W+qawlFVxeui+tsJ0jDQ65sB8+1a3vGK
HVsUMEID5B1DIsrSjyg46qn027szIwRplSQ9J4bxIO+oK3vz9K3HNEC+0cS6
8LxNL0eNHi2fNFcQZLXIOy7chMWe0b8jQK6LpAHyjC46u7eT+zhqqPOyYEUK
832Aj7BCzWDPaIg2k/M0DPaMF20P8v6C9cTyYeVm1X5Yv6TlnCyXc9TkQtMN
opkghUwyGwPjQ17Ru9Hgnt8C43dgBZ00QW7lSy64GeD8r/rFn2+8YR1iVYD9
4ojDoeGzMP+nqE9pmrZZkMmevleL6jlKXCkIvVRNkFPxWu9ygsV+8W6mPLSl
hAbILxJ+v5WZDHIU8olDvp0FLrA+SSDDjAUPCPK7iKCNF+H3vpZHbJnaNjU8
ToPPHKhHDRqCrH29/ZqPLQuKM/flKZUDYFf/8VReFw2QT/w98PmXIliPIX+4
nGfJN+3hKOQNa4V8Cxv4vnieRRGCeoJ0rHjfKdWBxd5Qt8nyWLsS5tdVbygC
Vb+ET9Pgqi7GPMTHgtx+5F3uHRVHyTQbZiorCDKoqC9fYcNibygUFe3RwfoJ
eUKRNrrBf5kG2Z97VfzUSZAdPVq6B/Y36gw+3elkQdrbPktcUHMU8oTGEqB2
h+s58oOFQemcuIfBfnB8a2BBORz/gy4tM6ciSEmM4koDnF/kBy9EOUutl5Ow
H7zmIZK82i8Kk+5TJNTC/lXhQx72LPaDki/Ex4RwvMgHGpZKsh/OwnrM/sSB
xIcwvomxCRV8/r9eMLaaF14TOQhQW7KrNdqvbj2+b73wojJwgMDtf/3/+J/r
byrnvLw=
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{550, 3113, 846, 713, 612, 545, 508, 463, 1012, 
                847, 714, 613, 546, 509, 464, 465, 1013, 848, 715, 614, 547, 
                510, 466, 1014, 849, 716, 615, 548, 511, 467, 1015, 850, 717, 
                616, 549, 512, 1046, 881, 748, 647, 580, 1081, 916, 783, 682, 
                468, 1016, 851, 718, 1119, 954, 617, 1094, 929, 1158, 796, 
                1136, 971, 1171}}], 
               PolygonBox[CompressedData["
1:eJwl1XdQ13Ucx/GvgKKAVq5sOChHl2CZO3Fny9Ky7SjFkXqmqSEoCtl150AE
y0QrrVx3jTtRFAcgmnXVXXXtcivgbjhKW1c9PtcfT17j8/7+vr/f9/v9fElO
nzp0SkwURbVQ5s9NSVHUDqFsj2Ldvtgo6oyN8r2Ix7VxUZShO8fnocrcP/IT
+EaeirvMrJGbI0VOkefzMVglPyxv5G/GJsfvp11QbG24tVJ+EJ/GF/ENMZn/
iNbVX8fP5M/zY/lKfjE/mH+bX0hb0wz6BX2FVjvPv/wwzJW/NT+KlskF9Fn5
brpWnk9b0Gn0U7qMplpPpQvkeTSWTqB76Wprj/DFfHtk8l/Rzc55gHYNv9PM
fehlbYXcCPXk6+VM/gKfj5pwQ3TDdd/J09ABJfqDum7hc+X7kYDj+lrmR+i/
l6fjFmzRH9J1R0m4NkjECX2M+ZH6H+QZuBVb9Yd1PbBFHoIkNDebpbvIL8FJ
c7G6J3X75OfQMXxH3UJdHN6QS80d4W/HVvkB9DazUm6M+nILeRb/K1+AU46J
0z2l2y9n4Lbwe3SLdLXxprzN3FG+J0rlB9HHzKtyEzSQW8qz+d/4wvB75Hfk
Njjt+NryKP6AtdF8OT+Tv4dfx7fEdP4z2ilcIz6Pf4HWoRPpB3Qpfcv6o3ST
nEdTaBb9mhbR7c53jE9DtrzN/Iigcj4dKvelr8kv0qb0GfoxvcJaKz6bv8SP
43eH84Zryr/Lt8UZ56gjj+YPWssMe1ZeL7cK+zjcJ3kxH4818g7HVPG9sF1+
CP3MvC5fjSvlZHkOf5l/CWcdE69L1x2Ss9Al3CddftifWCvvNFfN98aOsOdx
FW4wN1f3O/8yfjRXVzdGd1ieha4x/7+TanR9sDPsLzTET/p65sfqj8iz0Q3l
+uO6vigL9wON8LM+wfw4/VE5G91RoT+h64dy+TE0xi/6XajESWv9UaF/HE1w
o8/K0f3BL8M5c4m68bpj8hz0QCfdkrDHsS58vryZT8Vux5yiA7DL2sjwjIR3
KN+fX8U3wxT+E9pU35rP5XPpn/J4uie828Lzz7/HL6LtwnNMv6TL6XnnSqJP
yzm0ynw6rZALw72QB9EN8gKaTGfQz8PetdaZL+ATMIn/kK4P14Mv4Ttgj3Oc
pneg0towDLC+Wr4mPEtyG/l5/i9+OS44pr5ugq5azkHP8CzpCnWJ2CC/b+4M
PzBct/D/Ac3Q1tw83d98ES6aa6CbqKuRc5GGvfqzujvD9wz7Dv8BuczZuQ==

                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{429, 3114, 3111, 723, 856, 1021, 481, 518, 585, 
                686, 819, 984, 431, 554, 621, 722, 855, 1020, 480, 517, 584, 
                685, 818, 983, 430, 553, 620, 721, 854, 1019, 479, 650, 751, 
                884, 1049, 516, 785, 918, 1083, 583, 684, 817, 982}}], 
               PolygonBox[CompressedData["
1:eJwV0blPVFEAhfErWLIpUsjiAgUzNHRKA4hicIEGKwpRoCARZChoSCiAYawI
idiwFFCYgIVWNjYWsoNKw7+ggIKg4EpQf6/4cs537p15mTcXWxONXWkhhBN4
ilhGCHEcpIfw3njN4SN8Rrct72QIR/YLvA3LaLB/wzv7W6xhFX9w3nkrllDv
zles2K/yFD4hYTvje3/bz/EWLOK2fR/L9mc8S3+CCndreIk+iwY+xLfRxXP5
L5+J6y9wh086e6O360H2y5Qsk0XORuUqT8gCmZLT8rq873xEvuLNcoH3yVt8
D0ueNcY39F5ZLoflS9kkZ6Pfo3fomTIpR+VlecXZut6jF8sZ1OtJ+2u9Td/S
H+qn9Z+eFdOfo5FPOPuHIR7nhXq+PoVafo/P4yb/gkWfn+EZ+mNccqeaD2IT
nbZTth/ujfO/SNpi0XvRmzGHG7ZdLLhXxQfwER22HHe/R++EH0ffbSu15et3
o/8BdbYdzLtXyfvxAQ9s2e4e2s/y/xEJV0Q=
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1WWUlVUUBuChU+nOobsbpLsZTFRUbFrFFgGLsLDFRjrsTgS7A+zGxu6O
513+eO5595571z3n7G/WLZw2p2h2sYKCgs1esu7ppSQPygtYLg/kN3kiZ8hd
2CXfRFfmqBvxunwVMyjOXnqleEheyCS6UYKSlGJvfy/Nw/IiiuhOafbRL8OW
fC+T6cFcvca8IV/NTMqwr15ZHpHPzFnoyTF6hbwpX8MsyrKfXjm2ymdlv/Ti
WL0mvCVfy2zKMUWvPNvks7N3enOcXlPelq/LfVCe/fUq8Kh8Ts5DH+bpNeMd
+fqchwocoFeRx+TFOU/Ooe7Kl/LN9OV4dXPelW/I+Vim7sMP8t1U5ED1bjwu
L+EieRC/5+w5s9yNr+Rb6McJ6ha8J6/kcnk4/+ReOFfuy4/Zu3UC92Tu1tEU
ZxWT8936U627s5oncv/Wsaxnqfpi62DW8kfOY53IRqbknq3dWcPXuV/reDZw
q3qFdRTr8vxyI0XF/n+e9/D3E60teT+ztI7Le+QrrCP4N/PjPLkfP8n35rmS
x1Ai+1cfZK3Ek7lrLpGH8GfmnPnKPfhGvo3+nKRuxQfyqsyd87MvfpbvoxIH
qyvzVO43z0Hmr+7Jt/LtDOBkdWs+lFfnOaAyh+hV4emcI3NnIKfotWGnvCaz
pQrT9KryTPaTGTGIU/Xa8pG8NndHVQ7Vq8az8gW5CwZzml47PpbX5bxU4zC9
6jwnX5jzMYT5eu35RF6f81Cdw/Vq8Ly8POdhKDU4Qr8mL+T5zd4ZRk1qUZs6
1OVI76vFi3musm+GU4+j9GvzUmaXPTKC+hytX4eX5UuzH0bSgIY0ojGFNKEp
zZjuM3V5Rb4se2UUp+t14FN5Q+ZAc2bo1WN7/q+yX0azQK8jn8kbMwdaMFOv
PjvyvOYMLFH34jv5DsawUN2Jz+VNmUvmpO7PL/L9tGSWugGvylfmrPJQ/sod
sFTuzffynYxlkbozX8ib8zl5JPmxmJ/5Wgfwq/wArcgPSkNek1fkbuRh/C2v
tE5iE9PVdzEud0ZrxtOGtrSjPR3oSCc6M4Eu/Ad+j7ys
               "]]}, Annotation[#, "Charting`Private`Tag$639868#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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

               "]]}, Annotation[#, "Charting`Private`Tag$639868#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1nccTnUYhvHXlpFCNoWyG0YykyIqoWwlmYnQUAil7IxCyN57ZK8yS/aq
7NGigexs1ff54/o893Wfc95xzu+c983bvOOLHZIkEokBSROJMckTiV4pE4lb
KRKJNKkSiYHmZd4e2Xhxfkyuj4z8JE+YXXku87zjv5UrIgPfYfsN+R28LZ8y
W+CinNz2HvIOx8w078OX+no4ITfBGTkzvpefw2G5J8Y6pje/LQ9CCVzQ7cQs
fV4s1NXHPRin76P7Vx6Mkrio24XxmIC+tv+nH4JSuKTbjdn6fFika4AsmKjv
p0vgU/5onCfdHszR5cdiXUNkxSR9f10SfMZL4x/dJv44dvJ3sFc3l9+PJbwR
smGyfoAuKYbyx3BF9x2vhF28U5wn3Tz+AJbyxsiOH3gNHJE/whT7fcKTYRgv
g6u6zfwJ7ObvxnG6+bwAlvGXcFJ+BX/LOfCj/DyOyh/jnNwGV+Wpjh8oJ8dw
XhbH5Qb4Xb5m+xa5Mvbwm2YnvCefNlvikpzCWvlA/tH+C8yCSK9bHq8hv4Xs
/GX+u9wUmflZntTsxvOYOfk+uSbu4sf47Xg/5OC9+Hn5dWTh13gqs2esT3Oa
9x8kp0Ba/nlcR7kDysk/mQ3xh3zdvlvlJ7GXd8YZuRUux+ew/Uu5EFbwJsiF
/bwWjsu9Md1+g3lKjODl457SbeNP4XveJY7TLeSFsZK/gtyYoR+iS4WRvEKc
Z90BLNIVwSpdU+TBTP2nutQYxSvilu4gFuuKYrXuVdyLWfrPdHfgC/54nFPd
ISzRFcNXuma4D7P1Q3VpMJpXwr+6w1iqexBf65ojL+boh8X5xhj+BP7THcEy
3UNYo2uBfJirH65Lh7G8cjyjcFS/XPcw1vKWyI95+s9jPWEcfxJJ4jmnX6F7
BOt4K9yP+foRujsxnj8VayzWdaxNjIxnHyboqiBZrIu41nF94pzHecSoWIOY
aHtVJMfP+pW64ljPW+MBLNF/obsbk/jTcU/gF/0qXQls4K+hAJbqR+syYjKv
hpTYzqvgB7krfrXfal4SG3kbFMQBXhs/yX2wzH5jeCZM4dXjs8qN8GfcI9gh
V417NNaL+S7el/82W+Of+AzumQ/l37zeV2apOI+6b+J+kd+Oe0/+w3wV99h2
Ls6h2Z3faxbiB+UX4nzwn2P9yJ2Rk/flF+S2yMqv89TmRzxvPDO899h4PsQa
4VNtvyJ3xDNxTs3G+CuOw075aeyTu+Gs/BquyCe81tfyo/iWt8WfcjOclwvj
kPwifpH7YYVjxsV3wzT+LO7ALl4N++XuOGm/Nbw0NvF2KIKV8ZsVzydM588h
TTz3Yi3Eb1l8b8zQ1UDaOJ9xneOcx+fFRNuzYaZtzyNdfO54P0zSZ8csXU2k
x1/6tbrH8B1/A0WxVj9ZlwOzeS3ciVP6dboy2MzboxjW6afEdcIcXhsZsJtX
xwG5B07bbz0viy28Ax7EYV4Hv8r9sd5+U3kuzOUvxJqWX8Ip+S7sieuKg/IH
OOOYDbwctvKO8f3k5rggP4Qjct1Yp/GsMbtggHzRbIcb8gavM03OjXn8qvlm
XGv5N/PluF+sr9PxPDHfj33Nu/le+Vkckj+Me8RrbeTlsY2/iYexUT9dlwfz
eR1kjDWo/yb+a8V/iPgfEL/d8Vsavznx24AZcb9ggf3rIhPOxXG6CtjO38Ij
OMrr4YT8CS7Jb+BmrE2f+WM5n7nd8f8DQXhiqQ==
               "]]}, Annotation[#, "Charting`Private`Tag$639868#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1XfcjmUYxvEHmcnKSpFdsncSKZtQyEpEVjZlZe+9d2bJaiijZCSkhJIR
oYiGIilS2fU9//h9jvN3XPf7vM9739d9vXna9mjYPUkikRieNJHIlzKRuJYq
keiOJHiP98MzuDd1IjFNlw+H+Hzkx3XeA0mxlvdHKdeu5I/gHG+C+3TTeX4c
5g35bnMLvMof4xvMNfEPL4Ab5p5IhnW8jms+NjfEAF6arzJXjO9s/lGe1zc3
7ze3wSDzJdlUn9M8w1wAL5pPya/1jcyfm6fIZ+Oz5UW5SC6wXkW+zyfKWrK3
/CW+t/zXemv5NZ8lO8ph8m/5uixo/aa5F0bxO2QH+a1cb62uebu5Efqaf5Ov
6MuYV5sfxW+8Bf/K3BbNeC4+01wQR/hCPK77gNfGVf4AbsX3RXJs4APj/uB+
187SPYCjfBEeRCHc1r2EFHifD4rfj4fwn+5lpMQHfDCeRWEkfGYffSps5EPQ
EkWQxFpffWp8yIfiORRFMRRHCZREUtf2c10abOLD0Cr2FZJZ66+/E5v58Lj/
sRdwh7UB+rTYwkfgeeTWz9Y9iG/44ri/SK5/RXcXtvKRaIOySGFtoD4dPuKj
0BblkNLaIH16bOOj8QLy6OfoCuEYX4LySKUfrMuAj/kYtENe/VzdQzjOl+Jh
pNYP0WXEdj42vpPuTV4JF+Ke8wPmF9Ce5+PzzIXR2fy9PKFvbN5jbonX+BN8
o7lOPGPzr/Ja3CfzEXMnDDf/Iyvo05iHmkfLTLKj/E7usPakeYd5smws+8kL
coEcF/dKvsXHy8pxTsif5Fz5e+wNeZBPl+3kYHlZLpEd4nyR8/kYWUR2kafl
t3Emmfean4v3jFflH5rr4no8R3403vM4h/idfJj5buzk4+PZ6N7mj+Ei7xjn
ju5VXhTf8WWoiLT64brM+IRPQCc8ikqojLtcM8J6FuziE/EiCsY5oiuGk/yN
OO+QTj9SlxWf8knx/HXv8Cr4g3eO91i3kBfHqThP+T5zKyzn1fgm85O4EfuU
fxP7ID6Hp+ejzNni+ZpPys/09cw7zc/EM+QV+Brz4+hp/lnOk3/GuyoP8Rmy
vRwi/5JLZZc4O+QiPlaWkF3lGTk79qL1pvILPlW2jjNO/iFXWKtu3myuF2eL
+Zy8Ge+U+Vg89/hOPAMfbc6O3bw+/8TcBFP4I/xd8xO4xLvGeaZbzEviNF8Z
7wAy6sfo7sHnfCq6xRmnX6IrhTN8VewtZNKP1eXAHj4t9oXuPV4Vl3n3OAd1
S3lp/MBXo4ZuC6+PW/G8cHe8I/xe7OUN+C5z03gfYl/xteYJsprsJc/K+XHf
4zyUh/nMeFfkUHkl3nHZI85c+RofJ8vIbvIHOSf+T1pvJr/k0+TzcmA8Z7k4
zhnrNeVWPkk2kH3keXk7zi7z8XjGGBH/A2V1fWbzePN92Mef4p+am8W+ifeE
r4trcYX3jPNf9zovi5/4W6il+4g/hf/i/iGLbgLPiS/4TPRCMf0yXTn8zN+O
746s+om6XPiSz0Lv+GzURjbrk6zdj/18Nl5Ccf0buvI4y99BHWTXT9blxlf8
af6ZuTn6x3kmF8b5H2eBXM9r4G/+MkrolvOH8Qtfg7q4Rz9FlwcH+Fz0ibM1
3s/Y47E34l7G70RDNEIOPzfVz+TFQT4PfVFSv0JXAb/yd+Pv1W3jTyOB9vxE
7AmMNF+Vy+IMd+3/N05G+A==
               "]]}, Annotation[#, "Charting`Private`Tag$639868#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1nf8TXUYB/BrZZaMlERWCSGRFNmUUYmMkhHKKCNJRUaobMrWIHtvyiw7
I3tlhTKipGSv3s8f79f3+XzOuff+7jnfc8nVtF2ttkkSiUSvpInExNSJRJ+0
iUQyRqRJJMpyXbeXWbpHWKZrTk4m6fvqkjNSLscN3Rb5WQ7Ivdinmy3nZ7n8
BifNr/OfORd7zS/xu3kgk72mn5yCUXJ5fjW/yl/mm47/bH6Og/F3WjvR23zW
+iZXzanS+RvM+50/x1qA9LoVjl0xvxvnmk9Zm3KPYxflFNYeci5r7vgO5lpk
lE/It82dySEPks+b3yKrfEtOY/1Ezmud4rP7m+/gTnm04xfN7algPmptwDnz
LeduNVflkPwJf5pbcM38i+NzzQVZKbcgD/vl2pw0D2aq8wbIKRkjV4y/WXeA
aQzUp+JLfSUSHNTP0z3KD3JL8jJdP0iXmq/kyiThkH6+rhA/yq14iBn6wbo0
fC1XISmH9Qt0hVklt+ZhZuqH6NLyjfwsyTiiX6grwmr5LfIxS/+5Lh1j5edI
HvtDv0j3GGvkt3mE2fov4tozTq4a9zeue+wJhurv4ltdNe7gmH6xrihr5Tbk
Z65+WOwhxsvVSclx/Xe6x1knt6UA8/TDdXczQa4Re5Lf9N/rirFebkdB5utH
6DIwUX6e1PyuX6Irzga5PY+yQD8y9iWT5Bdi73FCv1T3BD/J71CIhfpRukxM
ll8kbTyP+mW6EmyUO1CYRfrRusxMkWuSLp4X/XLdk2yS36UIi/Vj4jliqvwS
d3I6rk98Z750LAvT9LW4iz/0K3Ql2Sx35DGW6L/S3ct0uTbp2SZX47D5U844
b6X8FFvk9+Izzc24ZC4az475ZU6Zh/CP+W1um5d6/dfm+5ghX7K+E+fHXrC+
FtfAs/t37GVr17in5u3W6nG/dEfkG+b3eUD+TP7L3DLeV74e99LaW85jPesz
fzA/He8l/+z4VXNHssmd4rqYm8f1ki/H3rR+HPvMfMBah9Px/Oq7mD83/2tt
Q4JlPuOb+F1ipmN1Yq+aG3LenIEd5hr8au4Tvzde86Nciq3y+xRjuX6s7n5m
yXXJGN9Rv0pXmm3yBxRnhX5cfBdmy/XIxLm4V/Hd43PitXwb14w5jtcnM3/r
V+ueYbv8IU+wWj9el5258ivcw3n9Gl0ZdsidKcEa/QRdDubJr5KFnfLzHDX3
jf3gvLVyWXbKXXiSg3Jd/jB/wVrnTZQfZL7cIJ5ncyP+Md/LLvMLHDPftH5A
v/ju1lbciPvkfdaZy7FLvmZ9j49iP1vfiH3vvl6J3xhrTzm3taR8yFwvnmP5
jJzE+lH8Tdah8gVz27hXchJrWuun1oes63zuJHPO+N2TFzj/srlD7PP4rbE2
5l9zMse7xf4177a+yHHzLeuHcQ8c7x/3ytyam/HZ3n+9uTy75a48xWG5PmfN
w1jvvMlyLhbKDcnKf/oNugrskbvxNBv0U+IasEhuxP1c1P/ERqbGs8VifWOy
xbMcx3UV2St3pxSb4t9CXV6+k5vwQFyLeC9dJfbJPSjNZv30uIZ8L7/OCXMT
LpiTuxbd47pas8t7zDX5zTyAK16/Sa7MfvljnmGLfobuYZbITckRvwXxf5z4
/wDb2M4OdrKL3cz0mnwsdX4zHox9pN+sq8Ivck/KcER+hT/Nw+M6m9uRlHTx
exV/g3WP1/8P5ftphw==
               "]]}, 
             Annotation[#, "Charting`Private`Tag$639868#5"]& ]}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"Feedforward solution\"", TraditionalForm], 
         PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1a\"", "\"u1a\"", "\"x1a\"", "\"\[Theta]dot1a\"", 
           "\"xdot1a\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
ZplPTlWRfl/FzLJ5c7uaSL/PR6c56pc6m/T72AnuzRdVOaTfp6eqwxIW6yD9
vg3t8ds+KnFJv48TZmy/WKeb9PsOWbwR0VjXS/p9/vufxO7S7if9vkN5WhFf
Nw2Qfp9m8BkvU6NBgD37sGpid+/+IYA9O2PyluWU3TDAnl1MNIf9yX0EYM8+
/N9QG23Sn/T7ngivvKyxOYN49jYftSqTN9+JZx/m9fa2PFpB+n4jpmJv50XV
AezZ4z7MFvOtawLYsxsERAyGJjIB9uyxCwyMBbNaAPbsyj8DNp48yALYs1+T
E65ZXcIC2LN7/7m3LGg+G2DPfjfvyK0bpmyAPXtMQb340oNsgD17YttS+u3d
bIA9u/UDEZkoaTbAnv2NZXiMuD8LYM9eVDqidux+C8B9P7d6Y+eammaAfbur
zzz7xIR6gH17Slyu2KHuckB8e1WTSvEnRPy6eNLwXHNq/479epFGx5JPPG0I
+/Wl1bFzH9ztQNivGyV9pp0z5yLs1ysK+cK2b+Ei7NfVLTjl1WEdCPf9+KtV
Hd88bUO472dSNH2aL6KF+PSGNQoCtNMtpNe3Xvyn2PKKVtLru34kW/6EUjvp
9XXftOr+yR0G2KNvfJyjd+6FM+n1dTCDuu5eeguwRy+7ua0jQfor8ej6KJXN
SCsjPT9j21NZTxfVAuzR+UrPTyYaNALs0acTLyZzLZgAe/SXzhb6vj4tAHv0
Fk7h81XUPht79G1/22da01kAe/SYkOeHx4TZAHt0m4THlecAG2CP7mVocCJy
Pxtgj26VntJhYM0G2KPfVv8xun0FG2CP7tD8omhrGgtgj36nz8fasqYF4J6f
3ciAYOYZJsA+3emryu+PCxsA9umMnenpv9ZVAezTh27/2by76Svx5/HLFXVE
phsQ9ucpptetaW1shP25z+xK3rTidoT9ed322CtyQlyE/fngy7QX+ue4CPvz
zVF35LlLOhHu+fXv16r7eo6DcM/PF+y11shmEV++5rrq5msXmaTP9wkq6O8T
aiV9vsPBP397xXFIn4++sfOBQuwwwJ68GwXKpGtGAuzJub/o2/4bzAHYj2/N
H9ibzFsFsB/3HknJsx6qB9iPj369sLtappn0/ZwZw/FFk0yA/fjiXfOKijpa
APbjv0Uu8973YgHsx5FN8QbRNhbAfnzCLDrrhiobkL5fWfIOEer3jv34nCgZ
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
/cpC2Pdxb5cLnZziIOz7ulIFdNzTOhH2fe8ss9xcqfuFfV9xu/6CwPBOhPuQ
yx1e+6cva0e4D+mkpeMi+ZFN/F5P/bzklyLNpPfY4g91F2xgk95jc4+XC20N
h/QepxN/hp47Mgyw1/siurU2dMsdgL3e9wCm54v4DOLzmPJNC8u8KwD2eUUx
sbp3kusA9nlyhdUdLzc3kV6ko/Li9OIUJsA+T+OPY/z2D9T+/J/PC21a+evc
IRbAPm86e69Fym8WwD6PLy3zhucCNsA+r/7r8UQBan7FPs+hYipmA/X7wD5v
2bC8igA1PmOft6CX77osjQ2wz7N++kFe3JcFcC8ypn3R61t3WgDuRb58/ehq
2rdmgP3exijl40oh9QD7Pd40I225b+XE4xlqxAlrSTJJT/Jaj/qxBKk2hD2e
u3HDhf/1GLHHE7GXLnmxg4uwx/OydXydbMhFuCd5o6YQSN/tQJIRYZvTFaSh
+atsleHLLcTnmTqclFFobiX9yOBoJVHtvmGAPV4oFNKKbThH+pGSyku3i1Hz
K/ZyXgPz20qp8Q97udf8ETkc6veD+5GyPxb+lVZlgx0bI70NFWbBa5mVa7JS
WMDy+K4Y9f94oLCkwaV5FS0A+7dFxQPaj2vbEfZvNKvPxqNiXNKfRNoluw47
cxHuT+oXhahHKHSinJDFlfdE3oNPF757qklHkd7krdqpYHfq/mHPpn/1BN//
9t+4N/nxjv7Isa1s4F3u6CstPgMc8u0dVcZYAHs11fVrf/ZodyLs1eSC+RlD
blzSpwyylZ2xm+hE2Kt12BaddVw3ArBXW5Ny6otqti3AvixxOG9pJbUfwz1K
iwdPrx+l5lfsx36dM06mt3ai6YIlVY4J1Px633W96BUuei7buDNIiZpfC3m0
WYdCAPZhP4otTvVvZ5NeJV9Tj9L/9me4V5kspyASso0NsA+bSjNk3afmk3Rr
sVdCWqKw/3f0c64yFzXpRN/WuBMHwmOdp5If+5B+5fz5Y+vMqfkA9yvVDNrX
FlHzK/Zgd5ZV5yqv4aJasajcrF4R2DcQa3DvABfhfmWIV/1MAvV+pZuv44+e
FIHXNsQvZntyEfZdfkd1T+6yGQFesrPvZ6NvArZOviyY2Apwv/JqsMTuk9Tz
5ftO8MCeKBGY+/Ht9RXU/g73K2VKflX5UNer83bLSIS8CLQL6N7mZMtFX7Jt
+dY+jgXTKsynt9IvkZ6lw8Z28PR//mLKc/OLRhHoNUd/Xx213sA9y7L5IiIq
1L/Xn3fY4rmNCDxrcfrMemp9s9gnasDVNwr8Pu+/LnDtceBWbbjrSo4IzEyX
NFC8SK1v//UtT35aUPC//707TKfihYKeCLzxAmVIUutB3Lu8+ahUp5L6PnDf
cr+TCZ8o9XqnSS/Psssi8GegZOUIdX3YP3VLXj77/tQICNVptRO7fwlILbit
SFu9HpirTigWBonAxsG4Q/Oo8R33LmfnztNwoP4+7lvq0OY07KRe19rlLsvf
LQKPb/m58Qf1edfv0KL1p4rAN8NdmSWXuAj3LgsKDgT/b3320edw+NxN1HpE
7v3VUOrz6bSZVxmfE4FzNltbLKQ+X74+PfLPcxEofeT1jirqfuK+pXGZ4c3/
rS9wzzJTRvliF/X+eYvmXr1xmPo+rIyHIPU8456lBuvF4/+tj6z6M698tJ8A
hg9zzUSp18fig9UFr4nABIOIv8ep68M+qE+vr+MUNY5jH7RrZO7emPQWhH3Q
VELaloWKAwj7ILpy4Ombx0YR9kEPP2278EZhjPQuDfQSV4jXDJPeZXa7fE/s
vAHSuxyTrZp9t6uL9C4X/BEMe2XfRnqXexxflWTmMP//fM9E0Y+cZfWkd6ls
tvfz3Lpy0ruk57/au8LlO+ldNkkddzB4mEl6l8vV7IU/v3pMfNCOL4c9mTGf
iQ/6iHJY4SHlxAdFeLPizTwaiQ9yMnNYsUm0jfigl40/+rYX9BAfVNO31mX7
vGHig7zGFq5J3jxJfJBB7ofUinWzxAeZKO3WFbLngdgHRfHtP2C0YIb0Lvkd
4zm/5kyQ8z33+Y5kvLEfIud7+k7UBVRv6iLne244uHxrVGULOd+zubmJ75Fg
OTnfkym1Tj2u5xU53zPk6cRPuYgC4oMm0svLvGSriQ+qveNtmCjFJD5o8otY
X5xeK/FBPJLfZ1s/tpPe5ekaubjVY52kd+nx63fUqgku6V1qP9Msb1fnkt5l
dsTTtyKb2knvcl9AV+qvBS0I+yATHgtD+Uomwj7IYt/xsc1cFsI+6Fbd9vw7
T1oR9kFzXFovRVa0IeyDSpaEe6knchD2Qbrnwm5FjXMQ9kHm9o6+ej855HxP
bavw6+pyHHK+pw9/vLzx31Zyvuee5NFy/51scr5nh54yz8O7XIR9UNCVmwyn
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
XmLt5V89rE9xDN56puuJANCnnL27SRhyRAjoU17caVbPdRYC+hT3k9WjX0QI
AH3KL5NaAMleQJ9yY86k02Oe/WL7pXdkyGVH/m1n+6UnrQvYUr21EdCnfD7x
3uDu8XpAnzLk8kyt+FADoE/pVt6drKrFAPoUPafZ704cZgB9Sojhz09VjxlA
n1KvWcL1I99f9Cmxi+97F5H5F31KomTAintBDNtv3dK5KPyVGcP2W79JrArU
dvrM9ltvbKV3HdVqA/Qp6f6L1XX/4bN915muUx/L6naw/dbnDRzCQyPq2H7r
ONqO73u4gu23jqcPnG39VsT2W7//MtJZIzSH7asenGu1pdrlENtX7WL6gdmc
Hk1jX/XTDQYvcxoyaeyrNpcx8xrJfcv6mDd2esJSuUoa+6qvxagp+y1haPQy
CkXxf+z53TR6mQMHcqybTvXR6GVsbcbonReIaPQyf2cuO2LzS0Rjn7XeKDVr
TcM+to/aKnRW5dWs71Cp5BB9VUOBsv00tL12BA/MI9bVP52lSH1Y/XrX6yvd
cEv/pFSTMoeS++Hu3NTby/qb3SmnTm6YJwT0NxeezCtUJfMY+puk3O0BxRwh
oL+x+eKm4N7aC+hvPsZljrYa6Ab0N59UJwku+HWyfdhjt3tHnrvYCuhvrhqe
nhslWQ/obwZ2bk4wa2kA9DcabhcXaq5mAP2Nbs3bmYcjGEB/M/lRd8r/8wTo
b8pezrEyJc9X9DdyzKNZl2IZQH9jGfay0NmNYfu4rR/JCQ1kGUB/c4G7g6O5
twXQ37hqlj3ozOEB+ptqR72eP5o86BFt8th6iw826rEJfjnFrL/Zdb9B8Yyr
iEZ/s1IjsyZ2rZi+odO/3KtTkdJICp//5lgvKE+3OWXizaH+nrJxvyoSQEhT
fJehgENpLlwlFUvWG+h1GkTrFboWkfXvsNfxOKRuaPKvANDfOK65phVQUAfo
b3ytPDcOnWUA/c2SU9Eu6mT+RX/z/cPfHS7kfkR/MzZO2/IDmX/R32z0hnOy
y9oB/Y1Ar5uxXcgH9Df5tq3LNzzsp9Hf3N8WbeixSkyjv4n4N2h5v62I3mMz
yu2yMYfScsncou8gAK2V3r3Ln5BtJ6HFW3shvLGdyw9eQNbv3ddajI4JAb2N
U1GF3rv7DKC38XbP+XicXE/0NtY126bKkuuN3iZHJ2IosLoB0Nt0vp7dWLqZ
B+htEt0smIfneIDexlLd2qNNVkSjt3k949uqe3vE9LXPLzWfbOdQEbPmG2jW
CCB/mc3+LU0cauW4O5p/TwqhcKZ24MedXOpt+V+9B6uEgN5Ge/m7nKmKDKC3
sW69Vm5O5l/0Nj51C4+mkfON3iYyv6Qmw/YnoLcJGRA5hpL5F71Np61xeqSO
mM75u9LouboMVbZYrTA6TkTfG9keXhTLocosmAvlNkL4nVq695kWl7JZsRqs
A4SA/uaBuOlbCpl30d/IyCRru5Bt9DcBaZkK6XJ8QH/zYaSR/JJ0EY3+5pTP
3YseumLawW/MPjkpLuXzLFLmBplf0NtIL9865SSZf9HbbMzTawgm8xZ6m9e7
Pfddm94B6G129fN0P4znA3qbp57Nv1N3iumEGxKrKt5wKMnegb92e8j6uvmq
h7sNl4rSb1Xr8yTvu2Fvs2VCYG0O2T96m/v9Z2UfZDcAeps6E+HLYFUeoLdJ
ubLFYIqXmK73jUjt/MqhjirNnvbGVwjobT7dln/ykFwP9DbzOOYqdmS+Q2/j
0iG5rJwjpjnNU1LspnKpBcdv66ieIc/DYV/TaysfE0bmX/Q1t04a+juR+Rd9
zYJljoNjfvIAfc3qMTaWs5eI6cOpWx7fHuRQLkvpP1xyPtHXVMwduixHjgd9
TZNRX9AkXT6gr2Esh6a4kfm1TfAihpPNoRjPaap9rkJ4pNKYJAYuNePHtpWi
Q0JAbyPjX7DVgJwv9DajdA7klpD5OUF5wKCwg0Mt9fZWtiHzL3qbgMtMTG1B
PaC3qdT13XqDHA96m5NHm/lzyPoAvc3g1j9a5YvFdK2f/xxNAy71sF4l6f4J
IaC3efpCUWfUDD4stX2p7y3PpcS63zZZkc+L3sbwspyHkNzP6G3WWuibRwzw
AL2Np9nasOX7xKyvqU06MX8uOR70NSIbjtPfpAZAX1OdsH2mCZnP0NP0XPrk
F05+Hz1NUF3opCgzPtzy+7dUWZVL3Zsym29Enq+StgFl7v0cyutKefkR8n5D
X1N22VbZlPx79DX1k3/0HZ3HB/Q1n1pKZtRtFNOpYWsEejHSVIvSwVEW7uR4
U9VXhfzgUEese/Vzyf2IvkbiToZMAtkf+ppdiTr/zSf3O3qa24pHNSxU+FDa
1LQC5LjUEscw+4vkfKGvcVcyueLtIWY9TXHWyZJBcn17iueumR0iTa3KiNDv
8BSznmZrtEVaKvl76Gk+pqpZ2FjwoU15fnCFBJdaatAvcYDsHz1NzWraWsJN
TE/2+6g42MWhrI+bLAol33f0NEkzCoMKVOoBPU3lhzX+AWT/6Gn6xu3UOb+Y
D+hnXlfWaon0yHo39bpCIpdL/R7ycywm5xc9zawxXQ9MyP2JfoYes0jBnuwP
/UzYirEjb8c1wLZE2WUpyz+DxPDPAYtXTvpPpCncHiPoiTeq5LDb6G1w+3+G
/1zz
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               PolygonBox[{{649, 3369, 945, 812, 711, 644, 607, 562, 1111, 
                946, 813, 712, 645, 608, 563, 564, 1112, 947, 814, 713, 646, 
                609, 565, 1113, 948, 815, 714, 647, 610, 566, 1114, 949, 816, 
                715, 648, 611, 1145, 980, 847, 746, 679, 1180, 1015, 882, 781,
                 567, 1115, 950, 817, 1218, 1053, 716, 1193, 1028, 1257, 895, 
                1235, 1070, 1270}}], 
               PolygonBox[CompressedData["
1:eJwV1XdsVmUYhvHDlkQ0oVCWdoFA1AQNoqDsUZQhynKgEpFdpspQHCylmEjZ
ZW9wgjJUhpS9IYoospcYE0FkCAjO3/PHxf1c99v2O98573vI7NK/bb/CSZIU
wjr/VC+VJNWwXzkOKahbNEnyiyRJaSzlvfGm7hBvhwu8GV7Ufc0fwnf8Y14M
w3kezzP/au6GBF/x0njfXMZ6PfM0cwoKzBWwTD9X3tQNwjfmu5Gjf0se1rXH
DnMWftcvl7fiPMZYOyRr4k9kW+8i1+tPydpyi0zDZRyw/oksHteKEda/lzVw
HeOtj5fn9Gdld7lHVkUh82qZgnHmI7IWyvqd+nJ6fE98xufxv8yD0Ye/zY+Y
O+Aib46XdAW8TlwDn4BUNNDP0JXF57wvHkVX/Qbdw/iBT0Q5NNTP1KViOY8H
/hi66TfqHsFBPgnl0Ug/S1cOK3h/DNcd5R1xibdAd90mXhc/8slxjXHfeQ8U
RgVdY91sc3ms5PP53+YhGMBH8GPmp3CZt0QP3WZeL54fnxLfR/cb74kiqKhr
opsTn4NVfAH/xzwUA/lIftz8NK7wFbwUcnkr3tO8xVwfW83psaf0n8oSGBn3
Ut6HqXGP5AXdz7KX3Cur4Q8U5WtkmfgZ5PGj8sHYv6jk95vKufoTsqLcEImL
+ML6Qvmv/hf5mvxW3oOXrY2SJ3TPYKe5cnyufqW8DWP1rXkv81Zzg9iDfCm/
BaN4fjynOCfm3iiGO+L86uaZK+FLvoj/Z34dr/DR/KT5WVzlj8d7QLeNN4zv
yafFc4rvwnNQHHfqsnXz43PizPNX8Y7uFO+Ea7wNcnTbeSMc49ORFmdBvyD+
VpwvPghPoI9+h64xjvMZSI+zoF+oS4vnwQfjyTgn+p26JnH/+UxkxFnQL9Kl
Yy0fgrbIRFbsdeuLrWVgHR+Kd3Wn+XO4ztvFudLt4k1xks/CVN2lOOMoEX8/
3gfxHjFXjr1uXmLOxMbYI/EO1S+WCYbp98t7Yz/ox8gzujPyeblLVol3m7VV
8vY4I3jP2mH5AG6gfZxjuVt/WjaT22QGrsSzsL5Mlox3G0bHO0HeH2fXWn68
H3V9sc9cPfZU3A+ZignmKn6ulfkDcxbW8yXxXsQbsZd4rvkn8wu4wTtggG4P
z45r43NiL8V18X4oibt0rXUfxn1DAR+GsbqzvDNu8o4YqNvLm8d9iv8/UDX2
rP6juM44d/x/iq/o4g==
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               PolygonBox[{{528, 3370, 3367, 822, 955, 1120, 580, 617, 684, 
                785, 918, 1083, 530, 653, 720, 821, 954, 1119, 579, 616, 683, 
                784, 917, 1082, 529, 652, 719, 820, 953, 1118, 578, 749, 850, 
                983, 1148, 615, 884, 1017, 1182, 682, 783, 916, 1081}}], 
               PolygonBox[CompressedData["
1:eJwV0cszlXEcBvCfy8plJqs2bSzCIRUb/0KF3IUug/YIlQVFhoXLxk5tiGJc
YlOrFhEWzUS0sGmmhXCsGjOxqYzPu/jM832e95yZM+/JbG6tbEkMISQwTU56
CDFqk0Mo8OAtR9xOCuE7XfYHej8b5NmWqbFf169xlXzu84J1cn1miWqfu6K/
IU6pbYen9nt6H2vEbO+osufpae5HnPLKNm0bdKe6lznUS/Rtnuh39RF3hvsD
Z/pl+YWH9j0Zl6Oy17MTmc8Oz+xxmcQsnz0/lpdYIcfzn3JRVspcz//KIn4w
Zv8tL/KRVD0mN2lzH8gT+VJO+W6h3GXAliKXOLBnyg2K7d947G6wD7svuN/z
X2/WDxnRn+s97kT3DKt6tr5AhR7TU9yt/GHc9tq2zy19i05bvf6Ppuj3Mhy9
F32FLH2e8uhd6JP84qZtkw57XfROaNT3GbL16J+i/0Gfo8yWrU+wxw3bV9rt
d/RuzgHvXVkp
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1mWUVlUUBuAZurtD6e4upVPpTmXokO6SBqVb7MaW7u7u7u5GRBTB5yx/
PLP3u8/MrDv37vutyRzVs0GPyIiIiMTRIiJC/ciXQpzQT6Uxh+QuJGGHXJTV
+gY81y9kIH5FxHyzwpzUT6MJxYhODGLysfMinNJPpynFicUn5kU5rZ9BM0oQ
m0/Ni3FGP5PmlGSNWUP+1i9iEHH4zKw4Z/WzaEEp1po14h/9YgYTl8/NSnBO
P5uWlGadWWNe6JcwhHh8YVaS8/o5tKIM682a8K9+KUOJz5dmpbign0tryrLB
rCkv9csYRgK+MivNRf082nBY7kpSdsrl2Khvxiv9coZzWu5DWg7KCflaX4ZL
4TlzST+YTLwjH1G7kYynTGGX+S11FLnCPWMWb5hvUpsTGR68+oRJxJNXGF3T
DyemnC08H2aSSB7h/Iy+L9HldOozppFAPuT8nn4cseV84X4yJ/y8s2/UslzW
P1I/YL7+sjqEzLwrH1W7k5zd8m11NLl5U96stgh/Ayvl6+oIsvO+fFbtR3oO
h/eEb/XluBJ2mbYck98jBXvk8mzRtyQaq+SRJOG7cP+4GvadKCqw1axVuB+s
lkeRlO/DtXItvAO0oyLbzFoTgzXyaJKxQC7P9fAO0J5KbDdrE54Ha+UxJOcH
uQI3wjtAByqzI+wFsVgnjyUFP8oVuRneATpShZT8ZF6JW2Hf6URVUpGaNPzs
vDK3w47TmWqk5RfzKtwJ+0oXqrMzPM+wC6yXx5GOX+Wq3A07QVdqsMusLXHY
II8nPb/J1bgXniPdqMlusyjislGeQAZ+l6tzPzw3unNcDh+aKdkr12KPvl3Y
fTbJEzmn708GjsgZWaivwYPwXLmiH0qWsD/yCbUnqdgn31HHkIe35L1qe+Kz
Wb4R9pQc4R2Qz6sDyMhfTOeo+X11fLgf3qX86kvm8pqzRWpNwgf4Q+Wx/sNw
L+QF8lX9sLBnclb1OTNIKPdwflLfK+y5nFr9k6nhGuX9zu/qx4Y9kvOqL5jN
2872qR1IwB9MZov5TXUkOcO1yBfUgeF6OSY/UCdQgNflxWotHoV9pien5N6k
4YBcm/36juHa2SpPIhNLwv3lcdhvelGHA2adSMQ2eTKZWRqunydh5+lNXbKw
zLx2+HvCrtOHemQlG9nJwXLfU4enYe/pS31yssK8briXYcfpRwNysdK8Hs/C
PtOfhuQmD3nJR34KUJBCFGaVn6sfdiPsNgNoxEGzziRmuzyFi/pB4f5yXH6o
TqQgr5gX+f//DUWc/QfOegJs
               "]]}, Annotation[#, "Charting`Private`Tag$639952#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
AMfBhzY=
               "]]}, Annotation[#, "Charting`Private`Tag$639952#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1WW4VFUYBtChW7rz0iDSoKCSSoOChILSISEgDSINiiDdLSHSKd3dJa1S
SjcCKhKu/WM93/vuPXO4c2bPIapph1rto0UikXLRI5EXMSORdbFl8seJRC7E
ikQymD/q38vx5LFyAXLKy80PrT8x+5KeKOuLzAPWU8gz5JLhPfo5sxmv5KW8
Zn+SXpQv9Yj+Xbg2p/SX/p71cnku6iOoSUHOW2tOhGV6J155/Qb9PS7pI6lF
oXBtNlp/n8vyKD6iML9aa0E0luudicYmvQJX5NHUpgi/WWtJdFboXYjOZr0i
f8hjqENRfrfWihis1LsSgy16Jf6Ux1KXYlyw9jkxWaV3IyZb9cpclcdRj+Jc
tNaaWKzWuxOLbXoVrsnj+Zg3uWStDbH5We9BbLbrVbkuT+AT3uKytbbEYY3e
kzjs0KtxQ55IfUpwxVo74rJW70VcdurVuSlPogFP9X5k4KBekj/kL4jHOj2x
czFZLsZX4bvRh8m5OB3OJbvkGtySJxPfa8bpBflU/9vsT0ay2ltsHrKeUp4Z
rm2+beY1V5vvhG7/T7l9uI4e38xsLjDfMtfbT2JOCWfYLG7mNleab5u9w7kw
h+uFzNxmdnOpWcI8Yz+tOUcvzevyz2Z867vND7gtZ7Q+X54iJ5DHh+vxmf6P
OYBMHNZT2Z8V/v5Av2p2IAEb9KT2p8pv8nU4h/r3ch7OhuuzJ/yuuSNPpSH/
6gPD5+eI/i7X5I4kZKPeJ5xT1xsR7iPn9ITslWtyV55GI57pg8jCUb0U18Nz
gERs0vuSiH16Le7J02nMf/pgojiml+aG3InX2Kz3C88Y9usfcV+eQRPKcNNa
ZxKzRe8fzhoH9No8kGfSlLLcstaFJGzVB4Tvn4N6HR7Ks2hGOW5b60pStukD
w/3nkF6XR/IPNKc8yUhOCg7br8df8mxa8B53rHUjGdv1QeEMc0T/mMfyHFry
PnetdSc5O/TB4YxwVP+EJ/JcWvFcHxJ+HxzXK3BP7kEKdupDwrPFdzwynFfO
66k5JtfnqTwvfO9eM0EvzOf6C/MbsnEivMf+D/K7VNTvmz1JGc6EvYXmrnBP
5Gnh9xbOqLwqXCc8r+RR4fpmPjOHucwsaf5qP505Vy9uljHzmWvCv2emsX9c
bkAB/W89k/lT+F2E/+/CuTMn6kXMImYuc4XZ2t5L89vwWw6fx/oS8xfraeTZ
cikq6Q/MXqRid/hu7U8Pv/3w/vAM1UfLb/BbeBZwQv6Uf+T5tOGVPjR8Rk7q
lXkof0Vq9uhDw2fml/Bc4F/5J9pShfSctN6QZ/IC2lGVDOEZE+4BmclCFFk5
5fWN+E9eyBdU45G13qRhr/4d2TitN+a5vIj2VOev8LwhLfv0YWTnjN6EF/Ji
OlCDHOQkF7nJQ15eJx9vcNb7mvJSXkJHPuCxtT6kY78+nLju9Rg9P7+H+6HP
k8uG+y+vDd+bmd/e/69EGGc=
               "]]}, Annotation[#, "Charting`Private`Tag$639952#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1XfcjWUcx/FjZKQolVQSoUJmiZJNNtnKyG7ZI1Qyyyh7j7L31oPsUWSv
UrYKaSCrKK3374/P6zuu+5znPvd9Xb8ne4sOtdsnSyQSSckTiVKpE4nn0iYS
09MkErlxQB6DTmii/0JXDdfk1SiN4voZujw4KI/FW7qTcmvcgc66prptfHVc
lz+WU+Ij+TP5A/4i3w1ZsFDOiEl8GevP8zP5vFjBP4BD+tH0L10/jJO7y6f4
NljP58Cd/CyaDt9htLybFsYldPG5V+h2/Te0Bl1FH8aP+N36J/S2+G4Mtb6D
FsAFrLE+ML5Lf5S+RTfTx3E+vkdeRO/BZH4fLYKyPleCztI9ia/iecu3+P4Y
L/eQT/OvIj266prpvuRr4g95LcqhpH62Lh++liegG8qjlLU5+vw4LE+M94QK
8R6tzdUXiN8vT4rniBdQxto8fUF8K0+Oe0JFVEJlVEFVVEN1lPWZ+a4vhCPy
FPREjbhPawv0heNZxT7A26gZ92ltof4pHItnjnfQXL9D9yJuyOvwYty7fpHu
aRyXp+Jd1Ip7t7ZYXwQn5Gnohdpx79aW6J/BSXk63kML/U5dLdyU16NO/E79
Ul1RnJJnxO+JvSS/hgzorWup28XXxp/yBgzS/SZ3R1bUjWemW8YXw+k4M/Lf
/ADMjOchf8+/jrswW74DY/g+1lvxu/k6WM1njTMQv5+miv2CYdZ20oJxrrDR
+mB6OZ4t7UG30CfwEx6RF9N7429jiryfPhP3j3rxnuny2Kf0WfopfTCeg7Vx
9B/d+/iCzxv7Ot4f/UH3BjbwOXE3PyfOJcbyfV3Xmt8Tzwe35E0Yorsi90Q2
1I99plvBP4fv5dnohwZoiJfwMhqhccytmD1xvmN/+uynPlccP8hz0B9t9Ht1
9fC3vDnOWOxlfZLueZyR52IAXtXvi/vBP/KW2KOxv/UrdSVwVp4X+1F3Rn4T
GeP56F7T7ecb4F95Kz7UXZXfRna0iDOhW8WXxDl5vPwv/wHmx36Wz/JtcQ/m
yukxLq6x/jp/gG8YMzbeMf6Ls0BTY7h+Fy2Ez/Uf0Wtxlug7dCvNjUf5JfS+
eJf4WD5Ai8Z+Qss4j3R1zB1aiibRh+L+YobGLIq/HWeRDqTb6JP4OeZBnD96
LmYMbUc30lyxH/l5NAPG83voU/EdPvMGPah7CWv4bEjw02kajIi96Lqh/HX+
XeTAUjkTPuFbxbzgP+NL43zMxvgeDJIXyr3jN/DtcR8G6d7UHeJfRrL4Pbph
ut/5XsiJ1jFvdGv4MvhJXoQ+uvNyB2TCYF1b3Vd8IyTH9tiXMX/0a+Wy+Dlm
s5wMg+Mamg+/xKyz1jfOsr4j7scQXTvd13xjpMCXsX9RV79OLodf5CWxB2Nv
op619fry+FVeGnsD7fWHdU2QEjtij6G+foNcARfkZfHM0UH/ja4pbot5FO8s
zmrMI/kFXJSXxxmOvSB3QmYM03XUfcu/glSxV3XDdX/w7yFXnKs497pNfEVc
kifLyTFEXhFnPJ4R3xkPxNmR78IEfrj1TvwRvhnW8tnjfPAzaFqM5He7bgR/
g++Nz/k8eIxfRu+Pc46p8kFaLGYX2sZMopv1h2klupJmif0eszX+P9IUOIkP
4x3R/Pg15lXMnPD6I7QL3RR/Fw/yC2KeYiK/lz4d+95nOtOjuuZYF2c4zgQ/
k96OUXGWXDeSv8n3weNoF/NTt4WvjMtyEt7XXZC74iGM1HXRHYtZhbTx92OP
xOzVb5Wr4Iq8EqPQVX9c1xK3Y1/skZjTMX/kqrgqr8JodNOfiDOKdNgf36P7
k++LJ7Bczoxp/CH6LK6io2v/B4amgoU=
               "]]}, Annotation[#, "Charting`Private`Tag$639952#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
               "]]}, 
             Annotation[#, "Charting`Private`Tag$639952#5"]& ]}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"Test on dynamics\"", TraditionalForm], 
         PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1b\"", "\"u1b\"", "\"x1b\"", "\"\[Theta]dot1b\"", 
           "\"xdot1b\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]},
    {
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
fePxVo/4UTYotXrvejw/GX4YDVP5xsoJo5lucqdu5oITuT3O3mYk3EPlLf6c
GKhiojE8lOtO811bXzcAhneacJ1M+f0mHDG8k4HJm5yRh1zw2OAtueaWetDX
XEB++KcBiMr+WyGgP8B2W9JBxY109CSSPKB+vQfcErj+bPfEJGrvTM6Nch8A
77ftPsv7bQL9cXz5VnF2AnyNY37JKtWEci4d9X80PwWEXp06LXGqBjE81S37
/EDj12W4p1qps3j6N64Y91Qprs+SUw+V4Z5KTs/Tj+1pLe6pWv4+strn3ooy
eqZ7/JOY4cf88KXRqVVUMZClx5nCAp01vyaffE2gEV03H3TOZ4VmquG8+0yZ
aO36h9Y6SthgbNRNne7dC4jT0+fbhmoSdHGtjljHnpvNP13mqCZOeP2X6Ui6
FwkWZc3sMGwlw0n29SqnXhLus/QbPNwO1TSClbgpbsn6JhDkfC3O7nU96n5T
JHU9thOs7n5lH5Y0juw2FTQpO/WBHOt9T3U5phDDbwXtVa5Uty/B/db7P53r
j6VLcL819M+zcovCT0SKUS1bl2CBIotd7dERTDQTga865EOsUIO6M3rNi0DT
Gk/qkrjMCeUmf2lrenLAfm7/76mXyPDEacLdEiVO+FijY5ZgwgVpj2+0bkZE
yPBfFsorpccaCDSG71LfFJt72zwKhcC5lOmXb8CFo4kvfz3hhvBIlARXSzeo
F1CjtUVMovvHHY5Zl8wB3uXcldi8YsTwYJrCKl2jT0vRh9ZskcoXLFCNRLh7
14pAS5p7EdH+lhXWvhuxiylgolHNfl4UzuaEnpXP3xVLYO/rq1zZg9lkyPNR
/6ziRk7ci52Ye33XQIOFNvHjbBfHpw7QayViKD0/iuTzLm5an+kF5pOEQbc9
U8iQn4MvrWIWzJktGh7uKUEMT3azgFj5/W8xui87UmVKYoGPZyejJiETTYUz
Q/AnlRWua65ZmscTaE8at4WYYHOhI+gI+VDMDp95EXikD5Jhq8ZB6g0JTpi7
Yv/Oa7AHKLYKFrhvm0K+QeI/co/OA4etd5RvxGPz1GRmmEYtCwxl8TbZkoKt
94vVKyoDbLDq/JXyNvocqr4/mLptjhN2qjw3K8Xes7Q2GWHvZTIUNRO/IBZP
gvW2hx9mRXaB6zdUB+p8JlCKg0yQPUs/MO/rmAj5OYlCbMy2PVGfA6xxhQGE
HSWI4dlYW+5mtLiVYP11AC1CnQUGyyYZHsXmqefb0l+fucoKvcu3ORZfJNCO
hYhaHbyPnS/3dGu7Cifu2WBO+/f9m2MQw7Ol/3VOl3blgQzP9vP86a/WHKyw
5fnYrrC3tSBml8NSdvsgyGfbHrT6sgWcIWt/4mTvRgzvRuTbbrtxfQL3bufj
TlLPBE7i3q3YTSBv3mUE924nbrof4eftw72b0JNus4KUFty7FfsS5rv21eHe
LTBIuMHzfAXu3XLchL83TBXj3i0Q5a+mNZTg3u0+zzG1XaFVuHdb5U63YzFu
wr2bXAOr7CF6D+7dVANGjpa+GsG928Fyi/boxGncu3Giz9oa2cu4d/PeL37R
UZxAY3g3FfW9V9O2E2iaaaZH1V3Y4PsKQ2JR0xIq8X966q8jO0zIORHGfWsM
sXv3M9/z4YDw63ePg7GfUYBMnel/LjLWS/d9y+sxkHFKKJjXnQRnw4Rb31wi
wGiHcIev/pzwyXAlW/MbIkzus1138yVDG4++RLI8J7yVRM9+F8kFD0u4HxDe
SMT9HM+/4Gfn9FcRw8+J84bWTGUw0xh+7m3e74RX1nWA4ecyPNKljqlXAoaf
O/Iain66VQSSLvmvBY/zwwAxkpzr/u/gov7kCYVHArD494Zati/pQPz7JiO2
OQFIJB54qPguDuRemjTOtxOExNOHHygQXoMsB/N8q0VByNS7yf47vwZieDzt
r3w1UW2vEMPj+UjnpcecwOZzQFGTQeUgJJnjgbL6IgjWeMg88roRbLx4/MKs
1VvgfnuJpnevHTTfmBFqsh5BEqw/ZabP9IJwPuZyN2yevaYWWOZ8fRA0vG7X
0q0cRwzfdw45ZUUAOu77Mjv7H8VlduK+T/Fd4usXNo247/u0/vD6T1CF+74Q
S++HHG6luO97Ii0uNp1ZjPu+weZ7vsezy3HfxxPhz39EsB73fTM63LdM1Ntx
3/dvLEH6hc0g7vteFke/kX02gfu+8z4v8jcZzOO+j35BseuKxzriUp4tX/rL
AnfcbRZXwfqLO7LtR3UWWeFOly6DEdV1NOeLlItX2OBZLvOkV1OzKKMjWHeO
mQPqqiRxPlDrRgG7wb1uVhJk3RIcEj27ABbSFXOlSJzQoSp5xCCDDVIiag+U
cpOhqfVjgZUFEjR7pFe7k58L7m6PnBd7SML9YJIVuKr/mYnG8IN+vIdCAvIa
AMMHtli9McnYFI4YPvBigLaw0g8uqHArnXosrB7wUGxWb4Y0gZhvPFLJrn/A
G2Vdbj/9QZRyYiLTQbUHvPk6zK7fOYnchH138ZoOAP0L+pS3jRPIvfHPuYCB
CRAdqHnmzO0mJGiUs8V5cAr4l/IXLb6pQQx/eMv41pe6gjLcH+qJpHBtSSrG
/WF1VM9YIrEM94cwePP9Lu1a3B9qITYxvu2tqOZEdF/Ce2bovef6gT1Zq4i2
bV7D8SML3DMnd8vYl0BL3fyNhz+LFaZ6GGrzOjHRtka/OsKezwYTAuK/BTxc
QDrOErujSkjw0WcXu92fWeBVn8ym79WcMHjQ4ZyeDQk+2ztIb6glQ+WWPvaj
4yTcM+6gLU/7zTeCCSmliaDAJuD0IskixakWmW0dvEKy6ARep+dOfFQbR+8L
P8Zb6/WB/riiQ1/5sPn//71ji4MyOTSgBPeO3HknziYIl+DeMeExE61gsBLt
YP1bLrQVm5fctpya9mKi6V6cPvlYhhW6ZlYYT/gTaOFD6mezNTnh0pzs1Qgd
Dlj1aSSgRpMMI8xXN6FDnBAWVOc8usoF/zp1vWdpIkKGlwy8ei7IL51AY3hI
dXnHHdfGIpFz0RfJ+ZggoH5cu3zbN25oO+i+qJLVDcS3Rxzd7zaJbK/uuNeb
OQeyV28JChcXI4afvFF218fqeikKF1ggK3mwwA98Nn2WhgTaheDdD+4Hs8K4
aDHvjc1MtBWChITiF054rw726POQYDgxeTophQwf7ls/fE2YE/eVMbzf/PKk
WWj3T9lwpVt3gNzD9iNJT0aRuaniyL4GrL8A+/e8lJ1CCzeX7zZ/mwU81xvO
xa+VIIa/FAq1e/2mvRj5BYfUOBFYIOl2lf0nCSaa3KkZDmUuVjggdmeK7zOB
VllFY5mU4oQxJWWRXK/Yoc12w16NvWQIbvzk2rmVE47EGthlFfeAlwEGLfNC
U+h54s9RWbl54P7lYLzax2I0KDP3PLeMBYad59P1SSTQuEIkVM072KAhXNjy
TnEeZfEd9zo6xgmnM5bcLuWT4MML4u0rU2SYHCnxWjKbBHWWr30wut4Fwums
c8hoAnVtpZgl9vSBM5HiYmHtk2hfia5rrOIcUE3brbnlUAli+E97+WnB67ew
n+8pF2ZAFigbU6dv08JEc70+5ZWnzQr3SZzZ221MoEnJO4BL1mRYWPE5rlqV
E/efcFFKS7U0GoUEnjiy8tIbbA+b/Vm6nQc2KGhGRNl1g9ZCbqN+tUlk5eXY
WB0yB2x8Hq30tWD9ZID9P2E7Fkh4MtRidBTrT+f8HEIiydCPPco9G+vHGH5U
T0omYeMkM63sK+HlK/9e8GbE5+dLbL6M2FlRYeU/D/J0Wh65lBYjsYL7Q5uW
WSCPbjiXaQaBZk0k593jYodxw7r8Rjtm0bHrgi+ebSbD4gmm5fMbOOHZ2V1U
Ibce8KG7RqRxfRJ5/N56bjNlHpSyOHtwYM+jPuHhrfAsFvip7VSiSCSB9kxr
Za9LJydk/SScWhVGgkft2tnIUX3geTDFxHNpEhnfOaoyKTQHGmKub1YzLkEM
rzrlLENuBVi/32pnEQFYoSc3r/m6I4G2cldu6JU+1n9uHtYow/q1jSHfrrQt
doP1KybLIGMSPdpbzTvXOAeudKSffZJRjJLfPtqjF8wCOd/yBtk9ItA2ilTc
RogM1Yvj7Xewc0KGbz1zZ7NYyw0WGivl7ulqgT7wabdPcv2OKRRfJcoRVDUP
/EnVnzUWitHJqnu7r21mhQ4ylsIfYwi0aHrsYW5V7P6ssVGDZTihz6Xg2kvE
XuDz0slRQGoK+Ts/8FU7Pw+OKizw9mP760LGg8Q/LSzQNOf02/A0Au3qAgoR
cCLDlrihiXlsHmH414kJSuKQTgxi+NcpqY/B/4J5IMO/CkVNJzseZYX1Z/hC
q51qAY19ef5nFB24amQk1t9pASPx5rpgTxdi+Ni4yy5V/P8mcB8b0/LBXezt
JO5jX5luFF6JGcF9rK62f1WxbB/uYzWNtg4f+N2C+1hxQrv+DvU63Mc+M+Dl
E75dgfvYq8tZAqJLxbiPvaY/v3qsuAT3sfqH3xkWW1XhPtZwalc5SbEJ97Ez
o7wvTEp7cB/LZMnzZM1yBPex02tqpw6/nMZ9bK4Ei/DukGXcxwrMqxUmChJo
DB+r+Pxt/yFprB+oDzDWf8wGu38VVRgvLyGdzWudCQ/ZofSerx8fd4yhAYu8
KsenHDBmkEUhyDgdledf3n7fkwi5NhmZn2QZA3pq9MoWZxLM8xDM75MmwODy
8r7CF5xQY9sES4A3EfJED3erPCNDPY59ZCUFTrhLgMfPJowLVnjfDD2wmYh7
2z0iK+c4VVcRw9vWwmdG7R+ZaQxva/8p/12ASx1geNtLiuNHYi0qAcPbDklc
PzrqVgSOnYvVfTDKD90l06WeXvsO+Jiyvik9EIABLUtOWjXpgEtRoZoyIwBb
9syc422KA+3s6S/e2wjChBTpXgPj14Dp92/C/Xms/3xyVf1ANUQMv5uzx+PB
4ZBXiOF3Zz8eEdCw5YTUKPMJ/sfl4CPV38TuxyLw4wq/J/6wEYSqrW15TUwA
aukvmvddagczu0wGdu0cQVBX9Q1ZuRcoe/jub9s/hVJ63Fazzg2C32ku9UHD
44jhgdvubQgYMabjHvg5507Vwn+duAder7xOueHXiHtg7b/O6LxJFe6Bi3tV
yPmBpbgH3pi1vDs5vRj3wMppVuVxoeW4B+aU7+ruWKjDPfApFQF9EqUd98B+
VnF5zKcHcQ/sApxjvttM4B5YONil4+2RedwD//MxKNSxXEfeV/kL0gdY4OeX
ib/zsf302HqizLZZVnh56KGFgf46Ek75d61lgQ3ay6rmF4jMITUrronMNXZY
ulHj8fuMblSeXSS3wkSC6WST1RNxCyDqC8fkJCsn/AP51eTfsEHi8FrkbxIZ
Nqrq56RMkWCpXENa90Yu6Ct4dub9ExLujRMU9S6LRjLRGN74yV72mM7qBsDw
xKHxudtb28IQwxO7LMlpX+7igrLSTV6PHOpB/9GGB4PzzcBkLRq6Gf8BxFD5
5WqmQVQaZiIWKN0DciixHvGNk6gx67G+xsUBICDg7iDYO4F03Nwkv3dMAD/t
5tLL/k2odGCavt4xBXa5zJiQCmoQwyuv7I7jdW0pw72yRfJIjGJyMe6VH81d
3dcxWYp7ZaWiY79TFGpxrzzkrJIkNNOC2ufvm2VGMUMrDt33T96sIuWjgsfl
3rHAywTpuOfeBJrnv6fL3Wms8NZjCwW5Z0w0NVq+4aZcNujLc5iSEbmAVhzm
DcwLSDD2kalk4XMWqNXaB39VcsI9nZ+ZFMxJcHjIsMLvFxmmhdS9OjdLwv1z
VbSgUj35Nxj+Z2BcYdcEcgJ/VPm3VKNdFo/udJ7sBFumxVdmNoyjXAGhjV6n
+0DlN9aGGsEpxPDR1OsDUDmyBPfRL07e3li+sQT30XbRH0y7UCXan5V/eudm
rL+5Vf2vzZGJ1mhLAQekWCGNZvrFI5hAgwOCnk/UOWHWeOPIAcABC5eElzvV
ybBp1Gq85SAnfO90KlzuMhfsloh2Ue0hQoav5jELeX/gPfb5//fTQ30GWT7p
kWjCk4tun/QKRGp3LvL95oY+SrPGlz92AxUll+9rdpPIpt/hxeaUOaDw2PJ7
TXkxYnjrHTK/sq9pliL+g0KsU09YYODHXS5eVwi0XaazxjCAFf45QnW162Gi
TWjrBJ76xAkLNr2s+Yy95ytFO36bJ5FhjteUf8BmTtxj9+36s7FjMwtNwZew
3ftsB5h8wuLzAY6iJ9lJF9ULe4GO+X42O7kppBY8GzWcNgsOv2xTauEuRQyv
XWsd+u5FUzF6e9Ja+/kqMzav9VacFWWifTanMk1zsELlY+o33b8QaDaV/ko5
uzghO3fMfCZWB8zsfDX1JMlwf3XtwCbselgXa/5Uf+0Bp1krvewoU+iZ/FZ2
a6l54Fl0PC0jthgZnxVwtytigcTbyfVNcQSaTPZlA4dWNviHebNxg9E8SjK2
Hdce5oTfnT0L4jNJsIU77Ef2GBmq+PeS+7F+VAiOfjsIuwA7xUxwQGMCLTzw
+lVQ2wceNX4kh/VPIqfxC1+yZedA5HP3gD1HSxDDi3+va7KSvV6CSnfyHi9Q
YYFi3qRyWjUTbdmZ78k9TVZ45/Ds3ReWBJqYR3yiqSUZai/KE0aw/pPhxcu7
T9L6X0QjJ/71nPUYD+DyVes9VOHB9rF8lmzjbiCc1jikIz+Jbm2s/UfynwP2
2VEj/Z3FiPAltL/uNgsczKupcT+Mra80jmvnw8iQrre0aXwPJ2R4c7tg+Rm+
XmZaN8f92cQnveD6YodkNtZ/hqeK9cZ5z4MLPZvbmguKUXhXcHf9HAusX2O5
xobN636Sim3eRHaoszRXHKk3ixRSTsy+ESZDmVnTMUlOTmhxOsxJ1qYHyPVq
bTi6MIncjR7d0CXPA87dHktVWP+pVRZiciGdBfpF/TK5GEagOUVKhfr94YQi
4UWddH8S1CvVurP9ZR8wDZNbEyVg9ShU2YqVdw78eLeNO9K6BDF8u9Qts6Kt
CiWIPh9oeFGZFQYKLgXFuBJoE/lGF97pkuHyRtmEQWVOKDG8hzY91A08JX7z
6CRMooc526X2V839H1H3HU/19zhw3E1ERte6txAZqT5ERirKObQkIVFRMiqk
YaRoqJTMiOxR9pbEJZLeQoOyt6xrlRmXe42U3/v7eHTevz89dK973+OMR8/7
uuBnRXP/jzdV2NbSSBnBYHYY3vY3OcSZVO7Spm14u5QH9o4/kNXnWQuRhz+g
ITgqacZeLm5Hfz3CMQg2OFZtPLeVgaWddpGs+zgPHl2L8GubrsI+jIdKCm1Y
DXm4Gf5bUkjlYerNyeJ7eODfc4rMePz4J2Vw7rk6Twc9KdV9/nIMLIjra8r9
I/Pgp9a9A0sZVZhrc3jisxZ2+HDz8zNseaRyg8NTbHLuPHBMeNKTC19PIy8f
5nLw1XqNBExv6+LGz8E8UJhH/ke0Mr7ezjv9qevsANjJs+pqvhoDi/hULbjR
fR7U1Ir/DCmpwoLFWxt0pthhRfsk5oyfz4gZj2PWBnSw5Oh92PvHDHbvpnRU
3W8WaI+ZYZjhr+fA6nbjikx2mHRr3yAzmFTecbZMrtyIB2YrSKw/v2ctdKmr
M08vY4EntWeuF2JVhJ/XiZX5L0STvVx/3aeH1KEBMEVJz9uryMDebG1Z94i8
GooYlYedy8LPf4uSu6YyD4yai5z5KbsWNhmNc79opQPx0pbW5Y0MzF/iZitz
zzzQk22v+C+tCr/e20JWfWOH7kuDc/PZpHL1Yb3WA048sKT4sIMrfv/kWj6V
vZUwAC5POyfM4u8/Oclk2maFHcYURPu4F+D3g9439QHRedB2z/BkBD4+cEmt
vvfQigda03t67fDHuye5L77tZoHgO1td7F9XEf5+q2xJ6OOb7OUT75f7C7cM
gp0cx0b7NzGwrKib9X8gD0w9unFmP378Xdik7fduGAAvj0V2y21nYMEMSVdu
s3mwZBjWIfuyCvOIMH0t3cMOrY5sH5nMJ5VfyAxRWPOABz5LGsjPxo8n8vpG
SwLvEq8nYMjrs+WmOr6q0NRCXp+8Rv5x3GQy0b+j+2UV0fQ/EF4/t8nqIsfW
eoC8vvPPnJ2x/a0AeX2X22w3zsHvAHn9gLzshtQvvQB5/XrBxtU6af0Aef3E
G4+ZwbZ0gLx+Qeguh4ZvdIC8vkrqf0Hb/9IB8vocKToK9/Cfkdc3tAocKe+k
A+T1zxRyFDT50AHy+nzGF5948dAB8vp+cer7d+3tB8jrD6bE2qzh7gXI67/M
8V5Tl9YFkNfft1T/MHNfK0BeXyV4wWu67ytAXn+KNR/u2JgOkNd3bbdRMQr7
SHj95QN/JJn3Owmvf3aisGVh7TDh9RXcNoSM35jAkNdf9a1xvP/6DIa8PuPb
x131qnMY8vqrxiZ5JUaYGPL6B8pihj9UsDDk9fdrJCyWFrAw5PW5c85/OMZk
Ysjrb36lp+vkP4chr38uXoaZ/5GBIa/fT65nvSybxpDXD6qaNqzMm8CQ16+O
92OL2vqT8PpLntfaWb6DhNdXH3l3JOJ5H+H1v7lsMZhc6CS8foBH+95akzYM
eX3rkyKPdegtGPL6DdnMXy7kZgx5/aV1cSOLqxox5PU9ytmkD7fXYsjrv3V1
Mt7EXY0hr68bv/bQK+sqDHl9HWmdv09cMQx5/R0r11qqDxYSXl+ys9KhIiSd
8Pqn8uajX31xJbz+kn+h0a1pH6J/d/7dcZMp3kLC62tG/JCX2PGF8PpSHTby
V783EX28wkOLlb8/dQDk9Xc6WFygKPUA5PX9+E8lSq7H55F/Xv+ltHg1txAd
IK9/ZG5A9l4iHSCv7/Hj1OaHE3SAvH6m2Vl5U/YBgLy+3MmTB8On6QB5fewQ
zS+uiA6Q19/UzhAxNqID5PWP5a4eo77qB8jr9zzz9jew7gPI69cujZuOPegG
yOvrHT/BBOodAHl97OzhS0MjjQB5feGbZjsSyj4A5PV7T47QB6NzMOTvnaS2
fzvc+AtD/r4mHVhkTDMw5O85hnofcm5jYsjfH7vfsEh2ZWHI30sVrKVMtLKw
nkZ6ZoYEP3ypsplZZ8fCaB9kLd1k1kGNyUzvqeNMbGUi0vKnMBluU3LUry+Y
xVCPj7udvaMujI6hHp+Y0D0ngaBuDHn+vTW12+uq2zHk+d1/zXzXjm4lPL2G
T6PMWWoM4emvq/jG/Yy/RvT1FG2mS+7uywXI0+cpCpSTC6sIT5/jQyo5rdVI
9PfEt67t22rdDpCn5+yQCmTqdAPk6Tee/nEi1bsPIE9/YOpCgnh/P0Ce3ukJ
pinlTQfI04d7fL7yuJcOkKcnUU7+5Fs1AJCnn0j4zyh9gQ6Qpz91KaM5pJoO
kKf/LU0Rj71KB8jTm00NlLb19QPk6fMU60/tnOsDyNPntP5QNDfoAcjT243v
kdx4rxMgT98Ju1VkU5sB8vSVdVuMHrN/BsjTu/cnXBsvccCQj6/blSGxXX4K
Qz4+PV307to9DAz5eHHpHWesC+cw5OPHRtJY23eyMOTjg9yO5+s2szD3/H06
G/r5oN7WIq3WZyxs+6UtV+L7+KFQk/rZaxlMzCpty6q7Y+vg9Re5g/rScxjq
/XXOmF7K9RvAUO/vtETP1mdrejHk7ccvxhg9/NpBeHvp/zqE6ydaCe9+3kvy
Ypx+EuHdW77m/lUQjwLIu9uyJ3HmR5UC5NufjsgoY3YtAPl2+9MNL60EugDy
7TzXUibpHL1E/49PStDz4fl+gHz7qUfbjLIAHSDfzr0xsIxVTAfIt9996n9w
hUUHyLfffbjtqAR+PSDfXnm6+ceRETpAvl2ihP9peQIdIN/ufahmb7ESHSDf
vhD8uKTcvR8g395KLcnb/L4XIN+eFC1YtSr+O0C+XfTs+zsu39oA8u0ihuDD
Y7YGgHy6hl7nBaGCaQz59OFNz+cbomcx5NM5h636Y4OYGPLpxfvezUsks7DP
Bmz73M7xwXelZrq7vrIwnZnHArst+GF1uDdLRpWFaYhKGxvarYP8yZOidow5
ojdowjtw6VZ2P4Z6g4OOOwu2qH7HkHefWmPlHs9qw5Bv/7Zz1uWR1lPCtz/s
Vnaxfm9K9APFsMrNi70ZAPl2mUbqUsKfCsK3d23LTQ53aCD6gmvyKAfkUtoA
8u3WTTdMfau+A+TbqXVP9xz9rw8g324ptd+fWtUPkG9fH+7cOXSTDpBvt7a7
PLS5jQ6Qbw9L2fHFhW0AIN9+THv+ZtdvOkC+nXx29CFbEz5e/PPtDKb9TZE7
dIB8+/aNpiuHWf0A+fY6O/lfa8T7AfLtNy0Wyb9e9gDk2x9HXSbvoHQB5Nt7
PvHaMG+0AOTb408nC9XcqwbItxtoeQxteRxBePXQscPThsaTGPLqG8mnX1E6
ZjDk1Tfu9bxifHMOQ15dLbldI28dC0NenfzkwfqabyzsU9LloMZyPvhWbOuR
sBQWNvYuw6WgjB/uUhfNF2tgYsFPkpMba9ZB44vywcqn5jDUM1SYjfpG5RrE
UM8wbNXuMdn6Xgz5d6e4SovJs52Ef+f8keu7JNpG+HOtlLzXBVMphD/voL53
kgkOAcifp31415utXQyQN9cfMC7tTW4GyJurq9dYxDt2AuTNMbH054LPe4i+
YTeZs25Gqx8gb47VFlJF/6MD5M0n1cKv5r/E5/N/3jzj1dE72xl0gLy5I99b
Xi58fYC8eQrp52DROB0gb67Z6NbCl0MHyJvb9aUkX4d0gLy5ukCWbwZ+3SJv
jrX9luwR6APIm7PP9YkmCXYD5M1v0G/VVD1uB8ib31Wy0uleaADIi+tZMoZX
DKYx5MWvH3drpx6exZAXL7CyFwqzYGLIi2/iv3/5SSALS8hRnZrcywcjU8+8
VW1iYcH0Aovpffww4hHFJc2Ahc1fTT59/uA6GD60Z5+ODJPoKUJ2wEyQoGOo
pyhcVHgmo/s7hvz5T1Wd+t3m7Rjy5mYZb+ZJXWGEN//CEg85/NADfLwskS3Z
PAo6vjdMDvf0AYZPhkyfwBR4p7jga7vUD5AnH+ex/mUURgfIk19XPiE8P0wn
+oqf17V3rsLPB/LkZlSy/fAcHSBPvutP/nvncjpAvpubUuc5Nz2HId8t8Nma
N+EkCzOxjzH6vsgLb9Ru1zdoY2H/VaxjWa3wwcVae4OgeywM9RY/FzW9Xn2w
A0MefFq88dqnylZMGX74Mnq7FMT6DCWqPY0H/Ns3kvjXMUBpQcSNE5V0wOk7
YCu0bQ4Iep8982cJHx/+efBXPNInYvDxBXlwM4H++GP9dIA8t0GQlovEOyaG
PPeYzhu3NhoLm5r+FsD2gA9mvp/fzP2BRfQZtY7Ma1vEt2HId9usuVD0uM6L
8N01m73Oh0Ntor8o+rp6kOt0GkC+u37e6rOmbAXhu4c2RiZqrNQTfUayRlaB
4v42gHy3rY3we4VH3wHy3ctGxas3L+Hz1z/fLTR3Stm+sB8g350kpPKk9xod
IN+dsvTVIaaRDpDvjm+cfX1xBb9f/vnua1vljmv9wX//z3eLpD8/wWqlA+S7
96cJGQd40gHy3ZU1a2d5SPj99893y375NGmq0A+Q767gHMhY090DkO9Wthm8
ZG/ZBZDvtgPXGya7WgDy3WqfRZ/G5tcA5Lt174HPlIhEgLy26IlIH/+hCQx5
bROO/E7rtBkMeW2n4we/3TOdw5DX3q1WquDwm4khr61dXbhz9xcWNhnzkLb9
NR8c/RDFfjeHhX2xHb1RlsMPf5b/NuUYZGIZ961dl9+ug3xKuxI5necw1INU
Np4c19AdxFAPUiHswOjjnX0Y8t+2sU27EzI7Cf9N6u/yuq7eRvjryRS3Zxth
GuGvS7WMGz8dCQTIX0fT/l7LTyoCyFv/6jN5qgKbAfLWU9k7Bf4T7wTIW39Z
9qx4Z9tD9CFH1v640STfD5C3XpdaLFopQQfIW/8nU99SlE4HyFubPBU9f/0X
HSBvvXsV7YwOfn8jbz2F/aTvmqID5K2DSrhzrrymA+SteTv+jnvo0gHy1iGu
jhT+pH6AvHVfor+0mEYfQN661vH8zat63QB5632d7jepfe0Aeeu+O1qjm50b
AfLSD6V2jq0Xn8aQl67IN3QzFZ/FkJfW+rPjd9l+Joa8NNXcKkHfk4UFnqk9
tE2BD5rx8QfdamFhRZ01j/QV+WHKvcJh7zMsrI06dOaq2jqo4Hn9ap8Gk+hR
NgZknjQzo2OoR9l0XIfzglo3hvx13vSxXL/gdgx564GFYutz7pGEt5565DIl
QL8BJtIfzZcGjQKOsue5w/l9ILP659u3dZOA+ij1pdskvv7856l1HlWymwfS
AfLUD5SLHp8ZoBN9SpfIdeNx+HoXeeqwnXzyHfh6GHnqeofX29d/pAPkm9ec
u/U1pnkOQ77ZbPFsm90hFqZNVcukjPLCgDzG0z34/vP4Wznxsl980HOS9YXk
x8JQrzKZnqHR792BIQ8dJKix6k5HK5ZCkvC+7FUCnh2GrTklseBc/xu7sl8z
gG+7cYD2e/z6edHgI7FmDqh+57m6fpEOkIfuLDF3diQNAOSh3XtF3lsM0gHy
zMAy5E1tKhNDnnnj/oAdN/D7sSvedkjTkQ9GR4geePyJRfQtwYhu1dXqNgz5
5pZz+pfrOfwJ32wPeRR6084DtYcbGwMLGOD0SiT9ehe+3jynP0P5NgcqyLHm
pvjrQd55PmSuyhifH8Ru2JkHfuaFgouiobcaWFh8lon9jQY+eHjVyBvOOBaG
/PKzI/vOXF7VhgV4tbM5RhaCsWyuWqfiMKDzLadarXIW5A3oKr/G50PklzcY
mEWm4ecvcHMyqRPwwnwvg4XGKHy//yc6PP8YHzTM+t0rXs8iepiaNBnGiFw7
liccPjF+OxtEqyp9P0F9BLa+zSQN6TGBqaS+FMTvT7sStoX4tXzwzi1/IT98
/tR1njvIdXQOPMyTb8pdpgPki3l2u8jH4+O7gyN17D8vXtiy/sqbA+9YGElH
VfVjMB/cdbH5wMe3LKKXOaRieeyWexuGPPGdPv8JS+X7hCc+GDYt3PdnO9HH
JF2bqlOUTAXIE0cFPUraXfyB8MSh1wosPoXWE/3MT/v/TFEF2wDhiQX3bZ2z
/g6QJ9be5D4RTO8FyBOnku9LDb3sB8gTL0dUlpc74OPRP09c9oRLf189HSBP
vLfOcW39XzpAnvhciveHAXw+Q554RC12pb+dDpAnLryV8JHmRQfIE9/zKQ46
zkkHyBP3K71hM1HrB8gTv1vroZXF6AHIEx+rvDhm8qgLIE/ckHcx4hlvK0Ce
mF3Yt1tY7ytAnjjnb8GR2qIUgHzw2e9nSk1fTmDIB/tu3hunETiDIR8cMItd
qTgwhyEfHCFWOj40zcSQD26/Mv02+iMLY6MGfT6TyQf7BoZFlPNY2JtSPzed
FH5IfqzcuW+CiandKu8WKFgH7Xhb2Ko95jDU6zQIFRD0th/EUK/z6ljD69OX
+jDkjTffoCrMNXQS3pj9xN7uAwfbCO/7tXak9ufPNML7Oh96+UU30B8g7ys/
E3wnvq2Q8L06vk5aDL5mgHyvnU7h6pqZDoB8b66d+YLQ0R6i3/nsqcZLHul+
gHzvwq1zA4z1dIB87+MpF+WkFDpAvnf5oFQhCZ+vkO9VaeItMcLvF+R7Oxq0
OC//b77753vNRKMd19LoAPneUZ/R/Gv6+M//fO+pTRrGLzL6AfK9LQ1uWOsx
fP38z/de+XtYp/ViN0C+l7Pq8cHptR0A+d6/F4zYT+Y0AuRzbR8Z/HBcNY0h
n0s+uEEgjnMWQz5Xyo5ud0+diSGf+4PyyLruNgtbrSo6+0mGDzYfdrI8ho/f
NaZtEbfl+GFPzqn1761Z2McrXhYM+XVwhLE84H6ISfRCjdYvvF2+ScdQL/T0
l2CuP1bdGPK+HD6iO+py2jHke5/fGHeo/hxF+F7y6M/XO2+6ALZDRRv9r4yC
a0m2o5NxfcBrzNd768tJMBDJ2dY+0g+Q3xXdIzv90Y8OkN8d1WvtcMPX18jv
6tW7h5rj4yHyu0IS91Wq5vH15z+/u8mo8pn5ZzpAnlaDy3IlumoOQ56WnHVK
eXwfCyueemBK6+eFqvZhn8/i8/sFdRWl8R988LIbKWkF32+hnqhQUOSWzowO
DPnbCX1ltdcDrdg5m28XFPyKwSrVBHr9YDTg1OAQE+mfAes2TRgll9KBbNbh
9bKsWdAauPWK4AIdIH8rvHIh+ys+fyB/e1n2hGHHEB0gP/tQ69msUQwTQ35W
y6G//mc6CzNyKwjutOWDJ7wGc+fx9SfytCv3VZSS+/D55J+nPZT78/1y4hPC
04Zuly+oXLAAoYFh1qFJDHBp4oenSQcdPCmAhvvezYGqPTFmo/h+BvlaQ/6b
VLHfdPBMn8Ypj/FCta1HV72vY2H5clZ3kr/wwccc18VtElgY8rJpH6y3mPK3
YQeGH/cpxdFAVMft2g/ioSCxXcZcI38WqEyaU27O0gHysjdjHyh34+fPOC6s
ymAXLwyx4bM0CMX3b60j2kYH+aD0h0HdCnz+RL3SNdfP6SnBdky2bSbzqlcm
kFCtcn79/QGo4H9huVaTCQ7Kfw+Qw+/P3uBjKftW8UFeg6Cv3vh8ln73chuf
xhx4frrsVjf+fpBn1d5t5iGFv1/FEa6XCXd4IY+oZWd2MQtz3/Cgz8aXD8rX
nORie88ieqaR8UFsjwPaMORXf9THlF1WfUj41fuL+m9ewWPg/dltPP5xcyD5
vXDEDD5f3vt9zNI2lxf+MsoKe16Dvz+hIXnZGCb4WeMt8R/+eileD2IC1Pig
0YbSUadmFrbWLFvWOTIV9NpX7Zh/egvMvfEWOyXGBFTzv39a8ONVA34su8/w
wrS8cMM+/P5FfjTjRlAaN349FTWPqzxxwGep8R0mVfj4feHLht0v3PjglbZ2
4/5KFpZXtldt+nYsuPOVQ7uwxx6YrT0dOv19DmRPunQV4Y9PeS6a+6ueF6rc
y+b904i//3JBmn8nEyQd8j5sh/99Lbljo8In+WAGZf+n/bUs7OnFwuQycyZ4
e+5yuiH+fqbpBUdXCfHB9D2cDqb48UeeUzhBb1v68i3CcyqUsMntLRUjeqbv
8x/vv/04BSDPKaB5Tc/24QfCc6Zv5VD+ZVFP9E6ZhqLQdrEVIM+ZoW+5qHb8
O0Cec/wJOCrX2guQ5+yN1O6iZPUD5DmvsLE2ZtvTAfKcT2oiWrnq6AB5Tmvw
O/0+Pv8jz9lhOB+pjP+MPCdzSPBoE37/IM95O/Gp/EFvOkCes+Fzr8UkF75f
+uc5N9jZsXR39wPkOTtHzV3of3oA8px8npkNkuFdAHlOrsrz+UqbWwHynPlv
VY6oh38FyHO+m7sWSD+QBpDPlM/I0k4PmcCQz5R9v5E77MEMhnxmMd0ly3Dv
HIZ85vPrCa/9xpkY8pl7e2+vqFXh11+rUKNLKh9MtL3S+Ps1C1McMVtYncAP
5w1vD9fg64Ul5q9g8Vfr4OXGazybvOYw1Fc9u5FSU+I+iKG+ahG3o5rDoz4M
ec8EV53t3UOdhPecLmrcx9BvI7xlR+1U64l96YS3HB8bPDWs4QeQt5RY/8j2
lnMh4Sv5nRzViueaAPKVZoPUdKfuDoB8ZdHUlibJfT1Eb/W19oKp6MZ+gHyl
qC3tJolCB8hXbuP3FRVMpgPkKyNM/mTtn6QD5CsF+I7sMMGvb+QreUlndUjT
dIB8ZWVr6LRJIR0gX1nWmctvY0AHyFcqhC5N9mT3A+QrZdteHY851QeQr4yW
LxJ2wNc1yFfut6//L3NTB0C+8mbUjTOvqxsB8pFu0hZ3xcd/YchH7r1SfDvz
NwNDPjI+j+1+tRITQz4y1KUh3M2NhWEvYHW4JB8s+Rlqk4yPHy1CZxNCpPmh
X+hB068XWNjeSJNe2pZ18E5/g+pufSbRdz22z/x332M6hvqudTHu/W5u3Rjy
lgueWm3qpe0Y8pUnlGq/Bzr+v6+Mzf2T4d7lBNaG1+9wPjMKjmmpfGwOwdc/
S6evWMZNgh/yEjkeg/0A+cl0uawcpg8dID+Z7+tx90Efnei9Ku3V99uJj0fI
T1aG5veq4/Mr8pO8bN8j3L7QAfKMxvcy01aXzWHIM85O2mWG7WFh183T5R91
88LPHZ+yOvHx99rcm92rhvhgqfCmO47BLAz1XzXjub9S33ZgyD8KUz4qV/5o
xUqfybQ84SkGq//8yFH9GwW6RrLnYMcM2IJZtxi8pYMWpUf9aZOzYPr85D1/
fH2C/GPnemklFj7eIv9IW2un8WyYDpBfXF6v4eoRxsSQX+xYtooISGVhvIOd
thk2fFA3x7VrIz6fIM/osbk/iGu8DUOeUUNblm3ndCDhGTtfHEySLjYDOkIN
2ygxDGC+d0Ec4PuXjh6Ne0Y0fP4XHTv/Cp8PkW/0jSodvoPPl8eKu7oX3/LC
rTIR4l/x8f7d0LDX2yo+uO5kmsWDJBaGvGKh3m23YOE2LFGkxyBYggaGedbr
BJo8A0YWltJlmbMgWeXc7WYGvt7+5xUrbKJOzeLnj3aKL41blRf6v5tRvYEf
72HIt15Smw+SCg8/9sTnH9SXteH/+0fsWDvWq57gq+iXAaqD6nsfh90H/Hui
gjaqMkFCNJgXwe/P6OXrt3n/4vuZb1tOOePzz8lV6S+CleeAettHr2v4+0Ge
8OzRzest8fcbnOgZdMaNFzpXDrz7UsTCVB+nFSp78UGTqJAGf4xF9Gcf3d6a
diq8DUN+8PoakTWTDx4RftB6jX38zMIhwOMjo/E8bA4sVJv/zsHn/z12rjt3
ZvHCR6TU1S7VLMxtX6/5rmdMYJ96wX0X/nqbfqU5me/ggwp7Pjb+xq+/qhIz
dpW4FNBwQWwbX54b0B54oOcgxATBjfv2vsWPl3c2X/PhSV54/cND/VD8/kV+
Tyr4Wtk+/Hpa//SC8GFbXli65aBtSi4Lk1SD/Fev80GZzBjqHnx/J3M/esbZ
KxrcvDi/um6HLUhTM65gb5kDUl3Fl3zwx1txa3u9/8oLj3JEG+jgx19wnHfw
eSMT1EiFbvbF//5iyHVs8DgfLHPtq1TH14PdT181NRgzgVOv8+Yj+PvJOdYl
1cjPB28xwxZu4Mcfebo9Okz/8Yi7WKj60Fm+IDcQdkhDdVZpNyA/ayq2eMgE
qgf5P+vhj9f9PCu+sAVf/xXEiIzh6/Eu9RsZwexMsOp0BZcH/veXH5rfHx7i
hTsp8gJN+O/b+gN3nK3khSPTHxqT6llYNiBpV31ggoEAWmwF/u9vDCXvmNdh
gnWzx6PV8OeX3ryl7honH5wvEcsPwl9f78/RZXISE/TyexqK4r8/s9686t1u
PugWPNbb0cTCMgKfTOyXYQJry0XlSfz51rWUy2UxeSHnj+HEjfjjR5Xn2je1
4PeHSWVrJv7vdTRLXbNsmKBFrD/jBP58O28G3lCl8sFTVZ1OW/B/j/xZ1/FY
4VAbN8KfiTNXmybR6BjyZ7HqHbvUuWYw5M+ENvezbNbgz//Pn7FdEpE7FcAi
erH/qSl4KunPEb3YeWqY6p68aaIXu3/r0/V8Y2NEL9aDYrQ4wj5M9GKdTZZO
56n0E71YmWf22KZHHUQvdjDmkWPg0waiF8suVfT0W2cF0YtV3PdL69dAMtGL
zZZ4nJQlUEj4szOaad6OG2sIfxZaPDGrGd9G+DMFrnVdkax+wp+VWZ19F/jo
B+HP2G23sFsZThP+zMjrWZHGOybhz05Qma3DcsuEPzPcYau3ypcNIn9WOmwt
z+1MgsifjdXYcOTh8y7yZ4qGIxbHE/4SvdjsxGs3T/QuEd+/qit/vmAVaZ74
/tU8zoOkDTZzxPev9jZvLbSsZBDfv6pbdT30gxSD+P7V07mS0vXCDID82b4T
d/NGjRhEL1bykJGKSjCD6MWmyvke2I6P08ifbZyWIPeLMYhebOX6NzdYHdMA
+bMNxz0TFbomAPJnkgKjT9YeGwHIn32M8VutOvsdIH8mK7jqeaNQIUD+7G5e
inw6TyDRi+1Ry0h44JhK9GLni+tOV3zIJXqxq3olNsxvyyd6se3cHkenhgqI
XqzHCamtyVE0ohc7Y9ye8iyVRvRiQyNM3nhspwHkz/qv2ynKni8AyJ990Xzv
TNfIB8ifrYtXpjc9GsOQP7PcUHMyRBLfz//zZwKPYtcxy1gY8mehKZ6Uz+lM
oheL7fAoD/FjEH3Y4039HdrN/9+HtX5yhU/Rc4DotxZJRl+aTGskPJjZ87oK
56XvhAdzEj6+OoNviPBgp3quORysHCc82Ae1iNlbQwzCgznGcqqSlxYID+aj
pskpNPYXoH6rToezfft2EkT91lUC0saaBiSI+q1FR+S2kOXYIPJjxj3MwF01
y0S/dWRdznGLtgWA/JhRdXhkcCATID/W85+FkvHVWYD82JNYgbj15gyA/Ji/
5ApFeh1+ff3zY183nohI3M4AyI/tNtJ4ce06A+Qa1AYZPyNDMPiU6hPPAL8G
H/z9KCQAAzjCXMpdGMAhMKryb7gA5DkIigsiZojvg+WdNci/HPQLIH+2tpOy
UNI4CpA/6x/+27ZiNQCQP3MxLy3r02oEyJ9hURlBLYYXMNSTvaSpGpvG84Lo
yXYk00w+RWQRPVnxXj4jvV95RE/Wfs3xDekKBURPNs9zPGDhJI3oydbY9Ote
yaMRPdkrB8Ve6LnTiJ5sneU426nGAoD8m+jpyWKvtnyA/NvsY2658D0jGPJv
butozAvFDAz5N123N65HHrIw5N/sISdTXIFF9GR3ZXKe/eY0S/RjRf+omiaY
/n8/Nmcvb/b+0kGi7+pbcldiLqGO8Gh+fbb3KjQ7CY+W4scFTrkNEB6NUm/V
WhAySni0qx+xuDvBM4RHSxntm+s5PU94NPm8KTW9qD8A9V3nJrdvCRhhg6jv
6lu+/6r6FRJEfdfl50ah7I/YIPJr+7e8eDNT8ofou557byIq1bYIkF8roTaS
vbRYAPm10ep3NW97ZgHya07/vfvd48MAyK89HTijNoWPn8ivLade4DaTZADk
1777v5e7boOPt2+KWg9fJ8PSqhzOX9EMcDKvbIXCwH9+IuQVFMAAhybqLUNu
CsDM63cWufpnAPq+221tXb1Us2mA/FsN1wflJxfHAfJv8WzPSTK2QwD5N22P
RcGQ8jaA/JvmV6dp1ZO+GOrNZrD18m5KjSB6s+kK1z1+ymYQvVm9qEENbdU8
ojcbM1GtZlCYT/Rm87fvCnaSpRG92dzOGxnKmTSiN3vWN5w184xG9GZz4m8o
0kk0gPydh1dZ+IREAUD+7nrLuOm2u1MY8nc7Oy/779ZgYqg3275BaZmEr3eR
x+tYBd7c4mASvVaLDF61nNJhwrMt6T54WCc6BVCflT1JsfR85BJAfVYeMZ1b
1LVsEPVZ9184l3X9LAmiPqtekaOVlSgJMvR1g3m1uWDL1ZoQ7XsrRJ+1T3E5
zHNwHiD/RmdJ734/NQeQf7u8FKuTvW4WIP92xSlRMnA3AyD/dnr0w+AlfDxD
/q1Y7qSxtxYD1HGKv3+mRobUnBLm8kMGKBoePGzxmgyD0k7OseL/933rB/64
7hSARX5FA7/xddBTRestVwoFYMXRkxo7wAxo8/Xz4dcUhI+r19yxOzQFkKfz
MtvO3i/xExB+Lr44ZV/7J4B6sYkcA1rz524B9H29z06yN/XbJAH0fb0Jj05J
ZlfngKmnhdErX0VgZkBKhn3Ea2ByrKbuwHEKbFosWrIPKQBTv2LdLzVRoFH5
StFlDxp47/Zf5FVDKozPF31OekUD7sbH6e+bqVDjZJ/EAXx8sxfcmfDrxHpo
8JP25mhcAdGrdezTpVn45wPk+Yq2dLV+Wh7EkOdTftPaLDY6gyHPd/zJuO2C
Pr4/+uf5LnIFS9VbsYheLduJsC6H/lmiT5uaaHg9ZuP/92nXjKnezbUYIvqx
5TTNc3bm3whfRy3o3n97tJ3wdbW8dz/b0uiEr3P9Qisy8/5J+Dq78Rfadyen
CV9n4n4j75Efi/B1vE1u31cGlgHqxx4WvqQt/ZYNon5sgdPow0V8PYj6sbV3
Tn37m8MGkcd7cUWZ87HiX6Ify8G++f5tsyWAPN7uqQ12ic9ZAHk8Ff7fnOYb
5wDyeHXR1DX1yQyAPN7znbpbbEUZAHm8yEKLDr8NDIA83tqe8tX5ZgwgfUX+
VsV5Mpzb+MvvcTgD+FPOPgB0MvySGlTMHYbPz7HjL7tsBaDvq22fIldmAPp+
4qAjz7ceiJ0GyPPFdZ4c/ygzAZDn26fyKuOUxTBAno/dzjQl+nwnQJ7vYmWE
NvVoEkA921vnY6asXj4jerZOUZ+Yv5rSiJ5tsBfH5HD0K6Jnq30x8KKGSz7R
s4U3Pomf46QRPduHfw53SCbRiJ4tY0443uA5jejZpnxpnD2xngaQJzTIPCMY
oV0AkCfcHm+SfitgAkOeMMFAWzqsaA5DPdu2DyOVbvj+FvlCgZ3VryfNmEQP
1i+0iSeEPkT4vAXdSwocYxMA9V/Tjii9bq5eBKj/qifQlOHvtQJQ/3WLyiXz
W7okiPqvdw5RfrWpk+DY0ZURPSkuuCIU9ensjxWi/5pwbMpI6MwCQJ4vMeRS
RJ8mEyDP57jpZq7m3lmAPN+hVG3vwcP49fDP8wXw/xl9xs8AyPOV1EyfadrJ
ACOLnUFlsmTo2Eaecr7DACoxp8fbE8kw9lNyi2sCA7zzGPB4LisA1QRbL8xZ
M8Byz90bhan4z8d8lT5cmQG/R+vyOf4ThE+3fZFlTE0B5AMzHC9qKCz/BMgD
MuZLDmzBvgHUo91yyjK8s98SoO9XTtlM2VfxPgGg71f2v3Slt+lNNljIVw00
eScC1SVv/Wd18DUQkXaJPwwpUICkMXbAugCM8X2gBFZQYMmSyub0yzSw8RQn
Fx1Q4TW1DaPl+PoraPCkUn8FFar+NjHYZk8DxRNvSpUPrIfu5qI15m8KiB6u
xus/cCAvH3gy9VY0KJ+Al0iWwPkbsxjq4WYoFMx+TGdhqIcrc6pjm8wUE0N9
2YqhxypZB/8C1Jfdce1clRQfCZpfhPtdOjjhfNr59q1WJKIn2+P4Q140eRYg
b8hBNeU468gAyBuygxPz6gIM4CSSdjGAtA62dm37TJXDf8+uo1L7kAwV3Ud9
DJ/j97ee5P2pVQIwOubtXMADBujYSxPQ9cbnG/8gQdGyGYB84uzsl1H7NR4Y
76KS6984EWieKdW+GJoHIr9+gMckKDC1Mt7n/Gw+6D/Cc6IliQK5Aj9+OwBo
4LvI+9HPm6gwXD3zwdRLGnjHYfNVOpEK+z7ryoV508Cy0Irrweg6UHtWhn49
i4mhHu731t9HzLNZmIqDws96Uw6YvenMD3F9Nrhc0OvGfYITRrws3DJ8iQR1
CwxM7lvh+2cqc6f6IhvRq02rt1Ry+cEAyDfeUAq5PSLPAHNspz/ev8sP5Ww6
Kb748SkSOjdpd4AMTZbT6DN++Pys7JgyUE6Gq0Hl0Bh+fExep97VPyQAPX2b
lnPUGSDUXfqvtg0FinZn1WqVFYDZxptdBwcoMDmm0NL6CQ2cizKQWzpHhQKc
389oZ9OAzYejoc+HqNC3Mnk+V4cGkKcMe711hv18PkCe8uKddtehzgEMecrh
gbft9bdnMOQp/T+stGvi63PkKa/LSp+1dWMRvdzth27fa6fMEX1crP0p7yF8
f4r8pHBt1DODvCGiX6spmna/SuMr4RuTjnKlW+9vJ3xj2nk31T4TOuEbA08c
5fvB/pPwjexHT4/XP58mfCM4SHnwVJpF+MbZEMnKt4+XAerXRkstzn5KxPcB
//q13lp6sudc8PP3r197yGj2ZFU5G0Qesv3Ft8gau79Ev1bPQdLoQ+wSQB7y
YFHOum91LIA8ZIpmAE0IzAHkIRU7PttsKmAA5CGnhsGe1o0MgDzkDhX96DVU
BkAesoUsNatviq/fPw3XrJwhw0uhDsrzzxgg5Uh2eXMHGYa89PA6H4nvJ68v
mqycE4Dn/LrWyuDjIfp+bQWm8Z/st9MAecqfWnzCc/cnAPKU0mMX0za1DQPk
KS2cyhfrXnYB5CmLXh1pSz+aC1BPt+saZ1ZufDDR030SmXbJSSaN6Ol+s6fN
6Sm9Inq6EzCw/YNBPtHTnbwT1STEKiB6ujLpBRp5+PyGerqKi7o7ChNpRE/X
b79ZvaAMDSDPeTHoP39P4wKAPKd+eo6plf84hjzn+npLx7tX5zDU000dCr7q
WckierqarVtrSj2ZRI/WLawstuvmEOEjTydIk26YTgDUnzVWzH8oZbMIUH92
7MgYFrt7BaD+rNSGd/xLmiSI+rOqBh4hyvtJ0ParuaCDABd8nTastoWPDSJP
6XFwPbdu1AJAnrKcu0tL7gITIE/pYzlkpmoyC5CnZLeI3R9vhI8H/zwliSTy
KRs/v8hTZvDOnkpXZgCX2d3zTeL4/BZm6u7hho+vc4L7RGLI8B7PusPb8Pmu
LU/5vbK4AORLnz9U5sAABYX+4l3PBWB6bILy9oczICjGWddTShC6mgtsbQS/
APKZDx0VBcbtRgHymIVcsboRyfUA9XDdF5rnh1bvwND3g28XSevtr44H6PvB
FcTT1TS3ZQOPKgbnfZoIDAv6VLwo+hrc5P20pnoXBU596Vj0OVwAfsY1D794
S4FyjRe+5lrTwLdDruWiu6lwR99dyy58vhPNMWtzekuFbkk5ededaKDf7Fa1
8d718GXOjODdqgKix9t+kz26oTIf5DuH5XVyfATR27zD1TfMYqjHa9rKcWAp
goWhHu+LLMprDX4Whvq27cl1WVzTfwDq22I7zwyFLLHBuFiJRKfPnPBU+z59
hi2J6NlKSnPPfcNmAfKejKOvtqjg6w3kPY9oq6V0CzKAATZiHz7ND7f+eP8h
TpoB7C2WH629g++vdkxbVMQywF6Pa9jDJTJkfm0/bO2N76eEK4qv3BOAkVKa
vCt1MwD50CMXYz5dsnqEhaz9Nbk1XASOjJVcPHYhDywUimTWiVCghJJlG7Ml
H/R2bJQeiaHAHi97L6hCA/4cCkmkDVQoNctv2omP/4frLrgURFGhuD7fZ1Ig
DSgE68oN+daC31uWQipcmRjq8e5whDafi1jYo9TzsSsHOOCdrCnrTnk26L07
dMFsPyf8NtROWTpPgv6jCvkehmvgj98HNpxdSyJ6ubnRi3WcvxkA+dJU0+m3
I/j1KrZ4bfz7FX44F3Jk5TgZ34/ylZl67CVD5Rw1oSf4+3cP2MaSLCHDAbEj
I7L4fvPa0Ny7/n349fq78eMHHXy+tLlpW2lGgbR+M+Hv6QVg2sov81QXBVoa
RBZpPaYBft93vaqnqPCqkvx1K3x+n/Qz0FDspsIvBaVHc/Xx8eWfZ9Wp6npd
czMfCLF8Sx92NYI3EsJXki+xMIWTN19nfewEpcxNhi8Ps7CZiwkr99I44C1y
SeS6Rnw+4Pp+9moqJ3xe3jj2w5EEkWfVPJkRdhHfjyDPWvC6ZcoRH895hewd
M+v44XJjnupxcQYYEnDe8vgyGb5KM3TuxMdvp0FemD1Khn/ckzlEgxkA+deL
n5cNL0X5grGhNUI3uKnQYVNv2VwqDVhYOpS3+FDhupfKw9ZR+HrQ97uvlP1X
oCB+9Wfz0hxWV0SObGluBZyZ00W/8PEvTnt5cUmGEwpl/Vevd4IE+U+OXr29
fQ10dLfo3rWNBJGPfejx3bEPMMCl0bhdYcf44fOyHWHN+HgzB15Ex2SSoaXD
zjsX8fEkSS90H/d2AUhaM2lpdZoBJu7lHr5TQ4FObtJ/hlxp4JpdlGH6Yfx6
Gy/xk8bvX6c2/Uz59mbgGJvjWUZjYajvCw/v3rBHggTXK9kMXx/lhNukMi7/
OEWCq2sW6lev48fHx7bGxXX482f49D/1J8OwvN23nr1gAC5qg5Y5jwCs6cu+
wX6bARTkjJSDtlJhz9UDP6/j+/uvkYWVaZn1YOmBYNbx70xMPrLFy6OhHbzS
9TRui2Nhzkr/zRfbcEKJ7od5e/F9M/K5RS7n073x9Wgtl3a8zBN+2MShYcMl
hO8P2mjGqV/IsJbf5uGBOAZg6VzgURujQG9aJaX9GQ3kZvRfLbelQvL3Delp
GTSAPO8o7wUSj2E+QJ63bs/xWJ/DAxjyvAe3dbPz6MxgyPMe3jr7/IQoC0Oe
txgr1S/0ZBF9YN7G3dQM5TmiBzz3jnTGu2iM6AH3RrM7/e4cInq9NO2v+Y3Z
NYSv9RLwsxeYaSN87X6HSbawzXTC1+7uk6K7Vf4gfO0vsWt7nW5OE752qa7B
z/AXk/C1b/eIrdw/uQxQrzfLy/O6QDgbRL3eD5KVCePOJIh6vd9u/qSb1rBB
5HFPWU1Gy3n9JXq9NOh5dFXZEkAet168WfPTDxZAHjcvdZ52xWgOII97Plxo
UqqUAZDHHbtjfaNUkgGQxx1sH+qkizAA8rjUWfNe0RMMcH+24rrEaTLcfV1O
LzaEAXYMNvU/byHD0wELXF1RDHDI8kGGwBkB+LdUc6MY/vjLbqfLxToFYK/R
19q56mmAPG8i3zsxw5cTAHleLK70WqPACECeN2wy94Ho8e8Aed6IUIqduGQ+
QP1gb1F/8dCtT4l+sMnxM4VralKJfvARbtJ/wwu5RD/4aaKbjM/efKIfXDqy
QoubLCD6wZF7ugL2xdKIfvA37Qv7CpNpRD9YvH6x23grvh/454kzqC6UbvMC
gDxxYM8Pi8o14xjyxImsgdFNh+cw1A8OMAk7pfSBhSFfLOHu8+x3GJPo7w6m
KlkJ6AwRPvfOrGqEAO8EQL1dNbXzDtKKiwD1dm8uN3/LEFgBqLcrs4uyacNO
fDz619udu1R2iq5LgrIBXBm3uLlgR8TR+Zcb2CDyvKek+u/verMAkOcl9xST
3rgzAfK8t5RifJ5bzQLkeRNieXv24+tp5HnFJSfZvuPjG/K87Jeu+cQrMcBu
J/vsnvVk+PWx3sZbN/D5WGp6WDWCDDeZnMMG8PnIRs+s9zdVAAp/gZrt1xgg
KFHAaSJaAP7cbsAW+GQGtDN0hMBGQci64rxia/cLIB9cfOetH/n5KEAe2O3e
QbNF3waA+r8P+Td7F+4+iWnyrnlzM10YOhxKvLVh4gWYe7a9h01JBP495uPs
0Z8F4LGm/WF5InBLnMm9oxyvQRpputRPlQJHnWMs92oUANuhs7XpRRT4xjTm
xeWzNJCilR23S40KnUNfONPw8diK/H3bniIqNP3RUHYVH69dyeZG53evhyqR
d5wYNQVEf5iHGc6jUpsPapT2cGd6VIG4U1+vWY8yMNQfZnBNeUr+7/OW//rD
+g19B103sjDU82UfZpt0qPoDUM/37YEW7bJpNlhWxNfw6z0nfPl+W/dHfL+M
vLGT3AmluLpZgLyxZ6730hVPBkDe+Euo2Mt2fDzWEvZxEP3JDw/zFOTPbmIA
H/9OhW1uZHghpnk3PYYBqikRffosMjTU7r/Fi++fHdiO8N6/LQCXrYzV4ttn
APLJNvJ/BjZ3PMZMQuv+0woRgYyd3kmzR/PA1mxg8VSAArd3x8ce+ZgPLDal
c/+KoMCNp/z2ucjj++c/NvckRKjw4778pcgsGniiMvLxThgVnpTB3nAH08AB
g8l7BWy1ILv675f1p5kY6g/7PQ0v0i/F1xf7V1wj93LA06saAraIscFvtyd3
P9TkhBe2h35wsCLB7NXi9OVDa6DZRSupR4Ikog8svvrxS3WOWYB8s7T6tlrZ
nQygeOP2X+6L/HCE8yqzGZ8vufwnuH134+uLpwbO1V4MEFnMGa9VSIaS96ZS
YvDr97eHeE/WHgF4ICi/85YuA8ieThD1MqXAIZvaTVVxBcAxQzDEqo0Cpdza
3S570sDI/dm3RieoUIitbgzm0oDKVH0gq50Kw+magd7HaQB5aim72sqYB/mA
63bD88mYRtCdUXal/gx+PfRF9Zr4dIK2lc+1gSYsTD1jCaS/4IALR8RGP31k
g9oyNQETcZywOk/MezM+XyBPfby39bUHPt8iT902mLazez3++u24nBU/8cO8
HJntw6IMwA4MGpLtyLBvtRT3mwgG+HNXzerGMBkOKtsvyeL7ZeSvq77m8h++
HQUqurV+hXDg68EOnZsbU2ggqXJc6PkjKuRqXmz/GUMDaYce0Kf7aoBdX9gB
w845rELj9C0Q1gp+D/v+lfrIwuiPTmrIiHPCn8LnHlINSFDJuSNuUXYN/BJ1
TFlpBwkiny3yNXCoZj8D3L2YoVdxkB/eW/6sn4GPN0JX7+iUpJKhSsDmand8
PaU09NaieasAlCuMEj9ggc83n3YpeX2iwE2ft8lb4PudQ5b18lX7qXDeh7zj
IX7/XjAPC4iIbAarDuavKc1lYahnvG605Em3CAnu0TsuPNvPCTfHteqpnyVB
6qHVgypr+KHYMrtbAL7e5mm74JfrTYZ/FY/4LT1ngPC8+XOyawRgDuzPOufB
AKslfPiyZalQ+o0cqRI/30Om5uI3peqBqYTDp7uVTGyTmLjdz+B2YDlW4ngr
hYUVOXvtoptzQgo1tlPnCgkiHz6rj/VKb2OAfi/9/ONe/ND3lq0KwPdDYquf
/a6sIsMR/kTvzfjfd/WfZOwdocCx7WuSXz+lAe8Eql6PDRV6RGwzYsfvL+TJ
t8TuTOMzywfTnpY2lWKNwMb2/h/xffj+xCxjdCyAEw7ffqVl40KCXRJuiSvF
fHBqE7chP77epuY9SuDuIUNWotSfL/j63OlbTvrXPxR4LvzYk9/xNJCl82Of
iEgrEC7RmZ6sYmGob7y7jr3EUYcEky0wJwl1fviW4fgzFD9/xz/vDGM9J0PF
vdZy5vj5mzPYN/RHkwq1gZhDL35+DGxkjK6sb8bnmZ3vv8ezsDsPlFxm6jmh
elS3bRm+X9LSEuN+Os8H3yYEhS0LMMCRHZLfx++R4cnTdgsh/7ve+Zgfh8Sp
8C8+KbFyaIBLJlv+vUA7sDrgdOXGaxamzdpdrHyUE7rclAiVtiNBLo/zHS9d
+WFJmoTvIH5+zc7pHyOVkeH61I//hePrZfXgx6uoZ6hQc+eOB1b4861MjG+f
eskJU8n9pjr4+veJ4hHTwx18sELB8/MmCgOg3jGb0MhAxFouIDjZoH6ajwqT
a0s409JpoEulmnZJqA3cChpmH8LXAydXEkua5Dnh30MrM0KnSfDk1RBZW1N+
+MB98oAwPh61Cn6YvvOSDCcdpW008OMV4Wh93f8oFd4zFoJJ+Hr9rjHH53JK
CxAySvldX8LCpo9Nvmuj8EPFN0Y+nvjja+9k7XIOIsO3OxxaKPj4ZaK4wdRZ
gQpXmSQFkvDjrS4UmCRI7gABb7bauYbh4+tkfVGwAyeM7fWpaMb3Z92Z7Zne
38hw+Izv4cP4fht5+6eqMWrLB/IB8vYv3d6TNv+lY8jbC/E0XdTZPIMhb7+f
59nVZTILQ97egrJKOM6bRfST/QaLVZhac0Qv+YjhVwZsGCN6yXUNeaajU0NE
z9jyqnJh0IUawr9Laa1xpX5pI/z7Dv/d4rz8dMK/G95+r+OS/IPw77y13+R7
baYJ/95vGB6AtTIJ/z5Wsj/ovdYyQD3jmLJfXOFBbBD1jFv9re/64uMt6hmr
qlhNc9ezQeTlA8p37dV59pfoGYfphXFk1i4B5OUdhO7sOTvHAsjLj7GuXd5t
NgeQlxe7Y7NvD8YAyMsXySvcf4vP18jLF6omCJ3E19fIy4/tt5BZZcwA/P7K
X7afJMOSPe/O/sT3w6xXI9MPm8gwykZrtW80vp5v3d8kaiYAjf2MZh/h80Gw
zIfUpTYB+A2WPLrXOA2Qt1d0CgyurZwAyNufmA+cuas0ApC3f3udg/9Y0neA
vP2VoO323DEFAPWV7w6e3TEgGkT0las+SIn/jEsl+sq1EufuXu7JJfrK4RuL
Wo+o5hN95bZX3s76owVEX1mpUOgkM5pG9JXF3789moHPP6iv/IfCmh37jwaQ
9989Mum6yrIAIO/f9Kzp19zHMQx5/4Hsr0H3Vecw1FdeDnc7/wpjYcj/R6aL
UZxeMIk+sahE/ueGLUOEn6++eyk96sc4QD1inbdll8SEFwHqEX9rj+Bm/PkL
UI94Z4QCv5cyCaIe8cvju7dGHyVB9st9Lp4cXPDou0vZg5JsEHn7RmHZt5Wf
FgDy9mdDc2iij5gAefvJdY6eU7azAHl7ft1p+YxTDIC8/XBsju9vfLxF3n7L
0zV68YoMEKf4gGOQQobbXy7GuLoygETxOY39YWQYtiLi8wYfH7ZSr071iwjA
mGnPwUYnfP6ltkYzIwWgQz35dnrIDFh+kb2wUUwQTt9p8fh9+xdAfr95vWCl
65tRgLy+bq/zTZGhBoD6yFmLYnYatpaYrqGT9olUYfjkSFDbzrsvgGLupPUP
BREodLdH+UNpFkgU0Bl4kSsC69byHTddygNay6spDsoUKK8+v3xbtQDI+Upp
59AosGTd5/XFZjQQ/PbT2kMqVGjgJpIVho9nDytiT2yk4eurYwEdljdp4P3l
mtDL6uuh1fg7plxdAdFnpuqf1eppzAdtQQGFwXuqQAel5veaRgaG+sxn2MZW
t/iwMNRndjR0ne2SZWGod1zfLZTjkPsHoN6xksmzvlfjbNDgwGO7V2/x9cNH
ufi1l0lE31hBTdNHqm0WoM8D7HuxLfMFvr5EnwcIyx1ztxRmgCKtU+Pdg/zw
kd1mX1n8fqdI6XruvkGGZhp+exzw9XnwYOYv5TkyDImUjzH2Z4DTN3nVfd0F
4Nkn2j1d32cA+vxA1I8HvdYUH6zwlFa17lMReG0hOSgV5IHyVJM3jusocG39
mw7TsnwgXnXZYzaMAl2Db32f34LPv7fuTSgIUaEsae3N0UwaeDWU9svyGRWW
3tVt9gyhAaOXQD723TewHOh+x/AIE0N95jbW66faZSyMTbDW+vxuDjjhwqWW
LcgGp2JFzSJ2ccIfptV7754jwb3PQt3f6ayBT9TDyHcoJKKf3OSkZmq/dhag
zx+8L6hJalbH95OqbFxS1vywfgfjYhw+n13WXX0hUB3fX0ptsBt6xAByhjdm
jxWQ4ZB83sxX/Pqt0Nsx+XSXACSLW4drH2WAd8aFrhdOUOD96P0SkpEFQFG/
ffXFFgqM23FT0fk+DTT95t9meZwKLy5raafi6zXThOA3Xa1UaLed/fXPEzSA
Pu9w4fLpQY/H+WDV3jl+mTuNwOFAuZUXvh53kf2Puc2+E5DtS8IqzFmYWfUW
q9IYfD3pU8PLVs4Gm/K0ZXKiOGGdRXxTHD5foM87LEDjbZL/+//0f593eJFo
7/R8AwO4POuYmf7ADxV8NM/vxNfnz1rfyRZcJMPCM6Gym/D1edURXSfzQTL8
8viesHgofv/++3yEdLdSxwP/FyD3tLlFAjsVbrcIcJNJpoGPN3L2eXpSof7M
0IhkHA3kpzYFdsTWAJ5kjjvrv8xh75bvjLm6toIDUeNJ9vj6fHXqI/Nd6znh
wT2tzab4+FT+11CtZNMayP/fL9FAVXy++/f5CQ0JslfjQQbwllE06dTmh9VT
Iu0x+HiTxD4W8SWZDGOb03Nv4e+PlVd3tVhOAAbo+qUkWTLAfw7LSb5VFGhd
doO55hq+H/o+Ft2kTYU+d3pzU/H795x48fJXt2Ygcj106Vw2C0O95x/Gr375
C5BgTfuX7PxuTshxi6quiV9Pm1b7Txxh54cPPadme/D1W8yV5p4yLzK87fHM
Jh1fH5/14HHk5hCA9YOA9PseA0xHJ90pkabCzF+Beyzw8z1Ny/li0VMH5Np5
ByTeMDHRHtCx0bkdGMr4nF2VwcI6n70+xTzJCU17Q55swu9n9PmNE2tzaPf/
Y4AxnaZS+wf80G4+wpyOr0ezYtiMmivIcGB7cGIA/vfVFPNttYcoMFZZYYA/
iAZcxFWLx62okGf+mGIavj5Hn/eQOc1tvvZcPhjb/6h54XcDfpNV76pVY2HC
PyQ9s3w44e/Im8NX8fX5UPdyFqWQD17w+TEwia/Pe+9G5k11kaGqwtdvMfj1
cVb3i0jXbwqMDMqt7npBAymreV7pMVtAf+rMThN8fY76zx+OcF/VASSYI3bw
9k4Vfgjk7s7G4eev3yLlJ0ccGaZyGroewM9ff81pY14NKhTjexvbj58fXdnD
HxIXmoD7rh/c/rH4/ok/nfv1V3z/sCFt9PxFEtRdThBMm+WDu6MyD17C9ysd
nwKVft8lw/Y86wsK+Pr8hR9ZbVaUChUcsuEVfD29argubnamDWQbaFTtorGw
C1TbjoOHOaHZxzSpWPz5BDVH6VVO/PD4HtszUfj5/Tn3NpFcSoalO/4Y9ePr
c2neRKfNZlS4t8P9whD+fMG3z398mckJQ6MhhzS+fo2YqDt3roUPlm6axqrw
9TnqQdNm7ty6V+IO/tpPpNjyUGH5WKZ4UxoNtMxNbI6fbQWaK1c6V1eysFub
6jtHtnDCI8fLYt6ZkqCVPFXR4zg/FLJaf3gGP14XMpUOBmST4Tq92Glj/Hg9
HL9LjzpChWxYnusIvj6/KbxtN4vVDBbSucIvvGFhSzzXP00K8sPR77p+b/Hx
7KzghicPnuDrM74XUu34+4FZapX3/6NCxzOvN2L443e05gnpTreD+JCjK++i
WJgB/5+2FFtOmP7R6YEw/v6uwEN/w2vIsEaD7lqNr8/R52FaPvWJc+jlA7VV
6/K23eeEnL+yvqjg10+Mr3FIYWELqFilAm5UsLDySKPA8//xw+L4Jcdy/P2w
BXiGyEaRYc61N6+48PdTXPFUcZs6FZoXOWZ9xc+/wraI3TsqOWG7lruZvT0J
3vQ8TCZTqbAoyEZ7XzYNsOwp98/ltwFq7Y92GXw/kmlWvv4a4ITjZ/tMgQ0J
yr6Zm2PY80MOvvGHZPx8cklH6Sm9wfeznhbLNvj4vcTeoa9jSoUad9ckt7yk
gbxw4zmFRE5Im19oDHUiwS/ualxraa3gSmzknhT8enZJl9bOPsIPoza80CzF
X79XG+9UZjoZOlZzCrngr998sKCs8CAVGq7/deMk/vodopxErd80A9cRw2td
+H6Q3/depxgPP7wgye0M8NdzF7DU4n3JUK05eVwXPx/rky7Hx8lRodwTuwFJ
/HyEGZ2i1p7jhAzts0r6V0mQ8XWHsXwwJ/xo62qjiR/fvAeV3/rUWoG2S+Jf
A3w8jYnfY7dGgx++O7IjPBh/fRU7PoMf8WQo56uk74C/Pq5mqZu/9lHhV9ew
1mb89V2zdI1QzOeEUpKmAkfw50f96qVHLo7Wl92xfqfU/WqqbUD1sGp0YDm+
f3rFI2Zoxg8d7une24tfT4fuGsddeUWGrtwR78Xw5/+/ou48HKr3feA4LSaV
ZUpmLCFLUqlEi0rnpKjIVqkspUUlQgupaNNGlkoqbYSPksjWJvQoOxEzspNd
zFhmiGwzv/O9rt9z67/zx8jMnOV56nq977gBo+k+ZtTzwHHBX2vq9/e912wd
sLqCyKlCM0QyhlDH3eOpSF6SLO5uSjenXr+xfX3roXvU6w/qXrOivg+nlImO
w8sY5Nc9szavp34/8R9Rj3zcxEjRWtWnF6nvA3ujJGaZeT+RQmBvdIt9rfMX
7w2BvVHR4Supz9OboXctLx3CvTPRDb1rES3Hk5xkDvSuO6PHTU2vd0Lv+mXL
nn/Oys3Qu97MPYNeXqyC3nXqsZY8+90l0LvebKbdLmr4DXrXy2v43U9vpEDv
+lquUe006YfQu57Xq+ssdHkA3qi6+oxbkEY8eCP/+e4yPdppCHuj4AHNu00H
sxH2RneqBfWL/5Yg7I1mLJtpqlpQibA3+iJp0HvodRPC3qhVtkPd88MfhL3R
SbuUnrVOPIS90TGxJ5m6d4YR9kYC19s38wPHoXetytZanT5bCL1r/ls9xkS3
AHrXcutN5Jf5jUPvOuxAoJqb4j/oXRs+lk4xt+JB77pA1Kv3sFsb9K6v1rwx
OHs3D3rXN9appLMtf4A3Ou/mH+HJbwJvZD+13fusVxd4I9nDp83nHOsDb2T5
d2lHazQPvFF2jkVwXNCkNwrUsNZesYgP3kjrguSmlbb94I2uGvYaN3Z2gzf6
75WMxXXJVvBGqs9D1pnJl4E3OvR4ht+1mALwRm4+141PeZSAN/q6ePrjVV5l
4I0ML4xy26LKwRt9sTWyPnSNBd5o4uXDNzZT2OCNpnDiTlttYYM3Wur1wsx6
Nxu8EZN4FOe9lg3eaLb6GdNUHgu8UYZGxrKowgroXXcdkzM9EtQJvevrn9XM
VizlQu9aIayXHy7SDb3rT+LKVs12bdC7rvyrMN8iuB5610sUnihofmBB73rY
00p0+HMe9K77eP6pV7lp0Lu2yExPOC3yGnrXWS2JWa0j0tC39pf0NzuxLxXh
vnXObJrEVlcEninlytwpG9QKEPZM5T+7f6y5xELYM3UnMBqtH9ch7JlkXLZ0
bd3ThrBnWjf1mru8dw/Cnunl+nOM096DCHsmpxKN42jrKMKeKbpbIchzvgBh
z5Sq5+GgslOIsGd6yBT7pjI+AT1shTjzx+jhKPSwI63Xz+zrHITedZtmvSrj
WgR4pVGHTb9irleDV4ry/Jra4dMOXmn151jJ+Qlc8EoD08bV5Yr7wSuNFekf
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
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{551, 3553, 3551, 549, 1105, 937, 803, 700, 630, 
                590, 550, 1106, 938, 804, 701, 631, 591, 1136, 968, 834, 731, 
                661, 1169, 1001, 867, 764, 1200, 1032, 898, 1234, 1066, 
                1264}}], 
               
               PolygonBox[{{3550, 3549, 537, 538, 539, 540, 1096, 928, 794, 
                691, 621, 581, 1134, 966, 832, 729, 659, 1168, 1000, 866, 763,
                 541, 1097, 929, 795, 1206, 1038, 692, 1178, 1010, 1244, 876, 
                1225, 1057, 1257}}], 
               PolygonBox[CompressedData["
1:eJwV1HWQVmUYhvGzCbK7EqJjjDrGCApskyvWjN0YxAIqzR+CRehSFrGEQUmj
hBKiAkoICNiSrks4yEoIItgKBqG/549r7+e+3u/b78R7zkWderfqlZokSQoq
/PkmJ0l2oV5akqy18BSeT0+S3Xpr/Kr/43O53FA9wSTuHjzObdCvR5XeAPdz
i/T6WKdP0f8wP4wyfaheZW6D3/R5egrK9H/9Tp55mDkFi801MNnnxsojXFd8
bD4f9/JPyI3cDnmDXCXr4ltrs+Rxbo/sIzfLy/AjGlpvLd/iK+Xlcpmsie+w
3vpU+Se/W/aSX8iLcRgDrA+L3+HbxrUzn43f+fkyNT7DH3dO+ebh5lRMsX4f
+nCb9Bvj+PRGaMO9rV+BD/WBOOH7BfwILg1T4xojF235d7gG+EgfhJM+X8iX
c+mYFueJPLTjF3MN4xrqg3HK54v4kVwGpsdxoC+3Wb8Je/V8lHJL9Eb4RB+C
/3y/mB/FZWJGHBf6cVv0m7FPL0B7bqmei0/1p2MjojE/mquGmXGc6M9t1W/B
fr0QHbh39Tx8pk/Tj5p74xl9uL7H3C72nvmc2Hv8ApmGgbGv9CbmMebqWGLO
wqv8uNgb3C7ZLc5RXoBDKLX+pPyS3ylvlavlmTgYe8b6bHkirpfsK7fIevgJ
RdY7yvf4bTJfLpe18Lm16fIY9wg2mC/Bs/wIuZcrxXrzubEn+YUyHYNiX+lN
zS+YT8Nr+vj4XXN3tI/nWq8w34YDejEe4JbpBbG39edQzu2L7+ConoZm3It6
DcyK+4Ay7iv9dhyMe4gHueV6YZxDvEeQjub8S1wWZsd1wACuUr8D38c9wUPc
Cr0IG+NdgQy04F/msjEnjjvOF534lVwxNsXziEyU8GO5HMyN44pzQGf+fa5x
vAtiv6AaruTHcafj9TiOOGZ04VdxTeJexr1AdbTkx3M18UYcRzyr3Db9ThyK
Y0ZXbrXeFFv1Gfpf5kdRro/U95s74Jj+pp6BwXEf9avME8y1sNScjXn8BPkz
1yOeI/OF6BzPv9zOfS3vkmvkWfjB2hx5Mp5F2S+OR9aP/4MS693kGn67bCZX
yNo4EHve+kz5N18lH4v7Iy+N94a1UbH/uY7x3jKfF+fJL5KZGBJ7R7/aPNFc
G/P1ifov5p7oEu8jfYf5bhyO+4Lu3Ad6c1TEbyEL1/CvcHWwIK51vI+4nXor
HNHn6qfM/dFS76GvNbfASnOd2MP8aGTjWn2StTOwMK5J3AP05NdxJajUxyAH
1/GTubr4H3MI8hs=
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{502, 3552, 3547, 941, 1109, 554, 733, 836, 970, 
                1138, 594, 664, 767, 901, 1069, 504, 633, 703, 806, 940, 1108,
                 553, 593, 663, 766, 900, 1068, 503, 632, 702, 805, 939, 1107,
                 552, 732, 835, 969, 1137, 592, 868, 1002, 1170, 662, 1033, 
                1201, 765, 899, 1067}}], 
               
               PolygonBox[{{3550, 3551, 589, 629, 699, 802, 936, 1104, 548, 
                588, 628, 698, 801, 935, 1103, 547, 587, 627, 697, 800, 934, 
                1102, 546, 586, 626, 696, 799, 933, 1101, 545, 585, 625, 695, 
                798, 932, 1100, 544, 584, 624, 694, 797, 931, 1099, 543, 583, 
                623, 693, 796, 930, 1098, 542, 660, 730, 833, 967, 1135, 582, 
                751, 854, 988, 1156, 622}}], 
               PolygonBox[CompressedData["
1:eJwV0bkvpHEcBvAfNtnKsZY1EoUtFP4H97W9o8Y21rgKGjpHy7AVcWxoaBgk
KoXEkmyzhYhjF1EICneHhs9bfPJ8n+edZDLzfv3eU9+dGkJIYYTT9BDOiBnz
+EIuOXymhk7WyU8L4RffPoSQrb/Sql+TsP3UjynXd+myVesD7uBe4l5v0k8Y
1jv0Qvknum1PTLnX7Olyg5htX87JOvnJswdZzB6D9gv5kSQvnl/LAnZo8fy/
vJJjcsLzG1nEX/rs5/JVLsij6LfLTcpsO3S6q+z97jcW9bvoP5NbNEbfwZA7
bo+7H5nUV6PPuWep1bP0Z5r1S0Zt43qv+4V5/VAvdf+mQ6/Ub2nQ/zFoa9eT
0TvTZ6ixZeoJDiixbRO3V+g/WIner22aantG9L5oY5l3MydHtA==
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1WWUVmUUBtChU+nOIZXulu5mSKUHVHpAuhVMFGwpA8QApVQMpLsbBUVE
RLAVBUxQ91n+2HOec+63Zr437prE5JSkUakSEhKu+RF1qh952SHfSydW6ltx
VX6L6szXV+Oc/DzDSc00s3zslO+jMzVIQ1rSMd3z/OySZ9GFmqRnhnkBdsuz
SaIWGZhpXpA98v10pTYLzKrzhfwCI8gY39+sEHvlB+hGHRaa1eC8/CIjyRTf
16ww++QH6U5dFpnV5Ev5JUaROb67WRH2yw/Rg3osNqvFBXkJKWSJ9ZgV5YD8
MD1ZpW/NNflt6sd+6mvzlbyU0byn78I/8gayxh7oi3FQfoRerNa34Tf5HRrE
nujrcFF+mR1yP7IwRv++msS/8kk1hY3yPnUwOTjLJG6KvVSLx35zSH9YHcoc
ebN6O1+TnlPcw+WYe75GbRtr43f9cXUkP7NOv0dN5juycYYJXOG2OC+1bpwF
l/RH1eEsk3eq/cnKJ4yLv23+gdo1LjeblP3qneTk5jhrNZHD8qNske8gQ1T9
WrUdf8jv0jDugb5erFN+hbGs13eL94jN+mxxL+QSHJEfo3e8Q/r2/BnnSqO4
J/r6fCO/yjiyxz0xK8lReS59aBz3wqwB38qvMZ4ccQ/MSnFMnkdfmsS5x/7F
vsqvM4GczDErzXH5cfrRlGVmDfleXs5EcsX+mJXhhPwE/WkWe2DWiB/kFUwi
d6zZrCwn5ScZQHPyxHrMb+Ej+SkG0oK85CM/BShIIQpThKIUoziJlKAkpWLN
ft+tfCw/TTItKR3rMy8Xd1J+hkG0iv02a8yP8htMpkysz6w8p+VnGRzvqL4D
f8V7Q+vYf30TfpLfZAplY71mFeIuys+xVe5Nxrh/8X6qHfk77iht4mz0TeN9
kFeySx4Q7x1T9R+q3Ukd+8ZotpgfUO+K/ScXnzM59jf2Vq3IeT7VH1GHxXqZ
r9+m9om7R6ZYL2P5JX6n5+vUTlzkuv6EGv801st71UFxT8jOZ0zkKm3j7qjN
uMBl/TF1ROwVq/S71YFxj+NdjO/HeH5lmucb1B5cIk2cK2PY6tlB9W5yx5nH
eauVOCMvYLvcl8zxuXh31c7ciH2kXdxVffNYq7ya6WzU9yQt2/Tl4r7IlWN9
8kKG0D7ui1mL+L7yGmZQPu6LWRXOyosYSgcqUJFKVKYKVeN++GzVODd5McPo
GPfJrCVX5LXMZJO+F+nYrj+kDiEP55iS6v//59U8+w/3I/jX
               "]]}, Annotation[#, "Charting`Private`Tag$640037#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
               "]]}, Annotation[#, "Charting`Private`Tag$640037#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1Hf8jWUYx/Fj/qREMjKKn5WdZKYyk1nZW6hEioSQtq2MjFBGFGVmU0J2
tkJIQyF7U4nS+/rj87q+n+u+n3PO8zzXfZI7dGvYNUUikeiUMpG4mDqR+DZt
IlErSEokDqVJJMqqS/kAOY88VS6NKvI36qP6SfJgOScelL9S1+sXl+fKlZGf
n1Kfx7/yTBSyPpNXxHM8Kx8nF8Z3/JLfs0WujZ/4QNREAZzW64L/5M/QCZft
36pXBz/zQXgMBXHF2jb9uviFD0at+A04o/cCbsqfozOu2r9drx5+5UNQG/fi
rN6LSGAWfx5/2r+D18dhPhR1UBjn9LoiBWbzLvjL/p38cfzGh6Eu0nkGQ/Ry
YQMvgvNyN6TEHP4C/nb9Lv4Efufvoh5ucf1QvdzYyIvigvwSUmEufxHXXL+b
P4kj/D3UR3rXD9O7G5t4MVyUuyM15vGuyGbfB7wIvuf/+Lzv5AY4yocjrz0f
8wfiPvmt/F35HmyO+Yh3LL+MNJgfz9eez2KO4p55dj5eLoo9/D7+hVwN133n
92pDHLNWztoyeYScLE+Ty6CqvDaelf5t8nsxB2oetZK6Um2kfmu9hDov9qpV
Yr7VjWpTtUTMmNwjZpKnVSuoK+K+43fF+1Y/j/tVK6nV1fXx/K3dJU+Qi+Fh
eZW6V7+UvCD24oZ72hO/B39YG4l81qfzsvG+eAY+XM6LLbxkzLfcE0lYwLsj
h30TeXHs4//67L1yYxzno9AAt9s3Qi8ZW+MZx/zLvZAOC/nL+M/1+3gTnODv
o2H8/ph/vVdwCxbxHrhp/w/x7HCSj0Yj3B/zr9cb6bGY90QC+3kznJLHoDFK
x7zr9cGtWMJ7IQUO8OY4LY9FEzwQ863XF7dhKX8FKXGQt8AZeRyaokzMr96r
yIBlvDdS4UfeEmflD9As/hNxXa8fbsdy3gepcYi3wjl5PJrHXCINftJvjfPy
BLRAeaRFUpz9OL/42Z42uCBPREtUwA2915ARK3jfOK/4hbfFRflDtELFeN96
ryMTvuSvxhnEr/wpXJI/QmtkNAMj9fJhG38w3rf8Bu7AV7wfctr3IS+BH+I8
4bDcDpflSWiDTPaN0suP7bxSzIP8JjJjJS9izyz5obgvnot/JJfEI/JqdX/M
i7xQrhHvh/+mtseVeH7WlsuT5fzyJ3J9tVz8R6jrYl7VttbvUN/n9dQC8b3q
13Ee1B1xjtT5ccbUqmpNdVPMo/pQzKf6Fq+j3qlWVL+M/5/4HOtF1dlxtuO3
yhvi+evnlifJ96GyvEY9EHMtL4r/mJgj/rvaAVflKShg/VNePt4Xz8xHywWx
kz8cZ0DvbZ4Fq/gb8S5xhD+NP+WpaIdH4gzY/45+Vqzmb8a7wlH+DP6SP0Z7
VI5nFt+LO5EFWXHMvmfxtzwNHVAlzovP7q+fDWv4W8iGP3hHXJOn42lUjfNi
/wD97PiGv43sOM6fwz/yJ3gmvt/eMXqFsItXizOlN5DfhbW8GJ8Ts4N3+N18
slwKB+N/gS+O9xrX8BNqJ1yXP0VB6zN4hbi/uF8+Vr4Xu3l15IgzELMa7zW+
A/cgD/IiGSft74wb8gx0RI045z5vkH4OrOP941q9Kfx+/MjL8CXyY4G8Of7f
1HzW/gcaQCys
               "]]}, Annotation[#, "Charting`Private`Tag$640037#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1nfcjWUcx/FjZFNmJXuFaE+lSSpSSCKbrOwV2aGEbMoWFZFRVvamhGQr
e4WQ7K3374/P6/f9fq7rfl7n3Oc+13ny1m1RsXmSRCJRJlkiUTVlIrEsdSJx
B1qmSiSSYC7XDye4hzCKewD7uWpYzqVAKy4p5nFp0yQSFbjF+pvoz53UH8Zo
vRhK2NNd/0c+YD2XXl//Xa+Nsvpg/Yb8vvUVckq01t+xNkpOJj8ot5X3y/Pt
S6dX1JfoNeVv5PJyKbmv3Ne8qLcy58f7Mb9w3T/yI/hYH2O9qjleH2QW1581
e+ifmqf0puZP+gjzoOtzmx/o3c3N1uuZ3+t15HLyEPmm3E5eJFd3zUozFdrw
yfGQtXb6Afln6+n1SvpS/S0M4E7pj2JsvHcc4mpgFZcabbk7sIAbiJqohdXW
0qCdtRRYyA1Cbazh06I9nxKLuMGog7qoh/r4AA3QEGvtT4eP7E+FxdwQNMI6
Pj068KmxhBuKxviFz4COfBos5YbhNPcYxsV9wGGuCX7l7ozPhUuLZdxwnOEe
x3juYRzhPsR67i504tJhOTcCTfEbnxGd+fRYwX2Jf7knMIF7BEe5ZtjAZUIX
LgNWchl8Ju9wy/S38RV3Vn8SX+uP4hiXx74G3B96XTTnNuqZ0VW/M163Pe31
g/Iq63fqlfXlegWU1vvpl+SR1v+Tn8JEvZq1CXHP5OfkT+TTcjN5tvy3/Xnl
hnIPc4u1+uZUvV58L+Wh8gDzlt7eXBz332zh2k1ylvic9G7WK5uj9YHmXXGf
zI/03uYhvZE5Qx9mrnb9Xea78V7NFdZrmd/qFeVX5f7yZXmUvefkpzFJfxwl
rffUz8jHrefTG+lb4z2gJfe7njW+b3pGrOFG4zz3DL7hnsAJrhU2c9niXnCZ
sJYbg9b4g78bn/CZsY4biwtcCXzLPYmTXBts4e5BTy4LfuHG4SL3LL7jnsI/
XFts5e5FLy4rfuUyek9VuJV6JYznLunPYbL+NE5x+e1rzG3TP4jzg9umZ497
r2eLZ86eDvpheb31TPp7+qo4KzGBu6yXxBT9GTxvTy/9X/m09QJ6E3273gDl
9WH67Xg2rG+X74vzT383zsi4Z/Jjckf5iNxYnin/Zn9muaq8Os5z+Tu5slwm
zlu5n3lFb23+HL8L5teuuyI/H9/fOD/j7A+vDzZL6C+YvfXPzLPxvTLn6F+a
Z1xf0PwwPktzR9wzc5reMM5QebiciHPL3h1mjvhb1u6JZ8/6x/pReYP1LHo1
fU28Z0zkruovYGr8JuBfrgN2cjnRh7sXG7lJuMa9iGnxPcVZrpC/25TbGd8b
dOR26bnwuZ49nl17OunH5E3Ws+rv62v1OvJkuYr8mjxA7m9e1duYC/Qx8dvn
uuvyS3Hm6T9Yr25O1IeYJfUXzU/jdZv/6S3MufpX0V1/v9ksnnVzVzwb8Xf0
xnH+ySPkJHE/5SVxTrtmt5kbfe2pwo+NZye+Q3LnOJvk3+3LplfX1+nv4XV9
oH5N/tb6DfllTI/nFS9Z/0w/J5+zXlhvru/Wm6AT96eeJ54vPQc2c3fbV4P7
Ra+K77ib+iuYEc8UznOd8ReXN+4nlxN/cJNxiyuFmXHPcIHrgj1cPnzB5cIW
bgpuc6UxK143LnJdsZfLH+culxtbue/RDfv4AnHG8nmwjZuKhNf/Kv8j9zIu
cd2xnyuIQVzeOHPs66Ifj/shz5KHm9vtvcesqf8avx2YxiXhynA/6a/gMtcD
B7hC8Z3j8mEH9wOS2v8aP5srhSvcJzjI3R/PFJcfO7npSGb/6/wcrjSucj1x
iCuMoVwB7OLutbcWtz6+85jBJefe4ObGbwaucb1wmCsSvzVcQezmsttbO86e
eMYxk7uDK8vNi3MH17ki8fvG/al/iN7cEb1o3Cu9EP7k7rOvDrdBr4FZXAqu
HDc/vnfxWeh99PPyDetF9Zb6X3pTVNC/1JPGuWn9qPkARsTzbm1c3Lc46+Wu
8ol4TfKP8TfszyHXlbuZG63VNafoNeU35EHx3JnX9bbmQn1sXO/alOabepc4
X+M9mJPinsdnEp+3+XmcN+YFvaU5Tx9p3nT9A2YrvZe5x3pDc7reTK4ofyUn
i7PT3mNmsTiDrRWO35f4n0E/Ke+xnlOvp2/Sa+EnLhVXnlsQ7wW3uGJca25v
nOvow/2tF4/zSC+CvdxspLb3LX4hVxa3uc9xnHsw3gdXFPu4OUhj/9v8Iq4c
EijOteH2xbmHSvpIPTk6yEvN8WZf1/8PrsG+wg==
               "]]}, Annotation[#, "Charting`Private`Tag$640037#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1WXYVFUbhuFBQlJSaZQOpbsUCQnpbhRbFOwEAwULJQWkuzuUDqVLWroE
PqRUUkXhO58f13E/97X2nnnfmbXX5O3ao3n3JIlEomrSRGJc6kQidbpEon3a
RGJTmkSiNRLYzVfiP+dv6J+iBMbzafgO/Ga9DZLgCW4elwez9D2uq8x9od/U
+6Cvvl+vjZL6K/oacwms0Ifop83NMcH9afWO5i3WRpkvmtuae5q3mavEe5n/
lXfxT5rnm1fJ++UkeU3OtvaN+Vj8j7KhXCiTxt+Dvd6rivySXy7/cv04+Ye+
XfbVP5O/6OtlHTlPJuJelLL+qlzLr5Ul5bR4HbnS2rfmM+YWmOi90umdzFut
tUMvfbteFUn1rvoC8wOYo+9zT1XuK/3v+FtQGpP4e/jO/Da9PZJhPz8Z6a11
if+B64Dk+IWvxvfj/9E/RxlM4TPwT/A79I5IgQN8df5r/pb+BcpiKp+Rf5L/
We+Eu3GQf5j/hv9X/xLlMI3PxHfld+qdkRKH+Ef4/vx/+lcoj+l8Zv4pfpfe
BalwmJ+BLNaetrY79h5S4wg/E7Nwr/VnrO+JfYE0OMrX4Afwt/V+qIDZ/H38
s/ze+PyRFsf4R/mB/B39a1TEHD4r/xy/T38K6XCcr8kP4hP4hquEuXw2/nlu
v/407sEJvhY/mE+C/lxlzOOz8y9wv+jPID1O8rX5IbHfMYCrgvl8Dv5F7oD+
LDLgFF+H/zb2FQZyVbGAz8l34w7qzyEjfuUXIpe1l6wd4p5HJpzmH+OH8skw
iKuGRXxu/mXusP4CMuMMX5cfxifHYK46FvN5+O7cEf1FZInPkFvI5cVc/azr
6nHD9RQYEntVP2B+DA/rr+k/mkvFM68P1c+aW+J799+v9zAftTbafMnczfyB
eYf5J1ktzgf5n7w3vhvzIvNqmU9Oltdjj8f5Zr2/PB5nn2wkF8lkcTbgf96z
vvwuzjN5txwv/4xnKr6HeH7kQX2DrCvnyyR4xNrr8ieuNKab/46/gx8Wr21u
hR+8xwP6K+Zj1l7Ch/rPenXcF/tFX2zOH6+vn3NPA26EnhJDuRp4g1unl8Ea
fYnr8nKv6sf1l5EVv/GP8yP5VBjGPYqlfD7+Ne6E3h3ZcJ5fhuVYgfyued01
J631QHZc4FeigLU3rJ2K3wPkwEW+IT+KT43hXE2s4gvyb3K/xpmLnLjEN+JH
82nwHVcLq/lC/Fvc6dgvyIXLfGN+DJ8WI7jaWMMX5t/mzsT3gdzxPHHfcwWw
QP/ddU24sXo6jOTq4E1uvV42fgf0ta4rwr2jn43PGx/pO2P/Ik88e/oP5oLx
m6QP0E+YG+MP9zfVx5nvwag4T/VD5nrxHOhv6RvM5TDD/I/8kR9uPmfeIlvH
von9GM9PPDNet6h8l18We8v1Y+Tl+B2Jz1f/WO7S18XejN8heTvO2/htjXNB
Lol9IwvJKfJGnO3x/FgfKE/qTbDYnDyeA+/bTI7n0mOC+YocHee++bC5Purq
b+sbzeXjOdW/038zt4nudYrp75nPxWeA3vpuvQYeiHNIX2ouHO+vX3FPc26C
ngFjuHpYxz/Iv8/9Fu+LvLjKt+An8hkxlquP9fxDfE/uvP4O8uEa35KfxGfC
OK4BNvDF+V7cBf1d5Md1vhU/mc8c5wT3ODbyJfgPuIv6e/hE36M/Gmej+Y7c
IwvE+SmX6UXizNNvuL81N0XPEp8x1xCb+JL8h9wl/X0UxE2+DT81zj9M5Bph
M1+K/4i7rPdEIfzFt+WnxVmDSVxjbOFL8x9zv+u9UBh/8+346XzWOE+5JtjK
l+F7xz6PMxlF8A/fnp/BZ4t9xTXFNr4s/wn3Z5x5KIpu3HKuaOxx/ZbrOnAz
9eyYyjXDdr4c/yl3JZ5DFIvzk1vBFcMS/V/XdeRm6TkwjeunHzE3QPP4zvVN
5grxfOg73FOe66NfjWcHn+p79Zp4MM5SfWXM8TeZb8ql/CDzKXPT+P7MKeK3
yOt1krO5lTJnfC/yqpzunq/NR80b5eNxJsm7sA8tYo/JzXEOyIpyprwld8X5
ZH2EPK9vlW3j/5Yp43cpfke8dwXZl7/m2rHm3829zX3iPcy18FCc9/qqmOMc
0Qfrv5qb4bbX6azPMeeKs8l6y9jP3Ba9EjboO11XkftMvx57HcXjd4JbzRXH
cv2O67pwc/Xc8T9xrWIfc1v1yvF56CP1C+Z28fmaU8V5GWeZ+/8PJOXR7w==

               "]]}, 
             Annotation[#, "Charting`Private`Tag$640037#5"]& ]}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"Backward Integrate feedback solution\"", TraditionalForm],
          PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1c\"", "\"u1c\"", "\"x1c\"", "\"\[Theta]dot1c\"", 
           "\"xdot1c\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxd0luIVVUcx/F/jt3Ghw6jqZnC1iYz0dpaaprO/NXxrnmc7DKWuhwvTVe3
mpcUYmX60IN5ygelelgmGCjJIZRohFpFYibRFhy8JM7qUUU6hSUYZIR7E/t7
Xg6f/3/9/j9mOIPbV7eu7CEinbeJ/Pd961Nr3tXv7UtH+zyk2UCl8LlLTx1q
bL1wrDGbl3T08lOD5l59MHMfvO+vvfevPnz96APZfKB+ui26tPd0no/wfoh+
eKBu+5JvhmTzRv2oX8M4+THPD8X7YXr20F+7V/08OJsPx36E7kyH/7b+zrzn
EexjHdNiD004PzCbj8J+tJ7Yt3/sx9fvy+aP6c11u/643HF/5sfxfozefGfB
+fEH+2fzsSpb1q5qqB+QeZz22j704ZFdvzff8hPqTp7uu+fXftl+vM7ft6+p
6888PwH3n9Tj3SO2n9vQN5tP1H86x59s/6k+8yTd0d1za9f792Zu0gPde949
0yN/36xfdbdvOzsxt6rvPt7zXFtmq/r90hstbR35frK2fPD3kfe66rL9ZF03
aNmE3cPy+1P0k68/b970Q2Y7ReN7Fn7X0T/PT9XN4z6rW6b5/an65aitkwaM
vJL9/S26o/WX5PDi7HdjW7Ru2uTO+vn5/Wna3HTt4pHj+f1peqFz3ppePfP7
04v/Hztdb1w79kWS9s7mM/TKmbsbmi7n92foihMHv23cmN+fifxM1TGH++xd
kOdnaevNR6+0r8jzs4rvZbaeWHnxjrZFDdl+NvZztPFqx67W+tuz/Rzs56If
lnnYw/IU9rDMxx6WctEKW9jDsgB52MIellbkYQt7WJ5GHrawh2Uh8rCFPSzP
IA9b2MPyLPKwhT0szyEPW9jD8jzysIU9LG3Iwxb2sCxCHrawh+UF5GELe1he
RB62sIdlMfKwhT0sS5CHLexhWYo8bGEPiyk6ghU2sIUd7OEAyzL0wwob2MIO
9nCApR39sMIGtrCDPRxgWY5+WGEDW9jBHg6wrEA/rLCBLexgDwdYVqIfVtjA
FnawhwMsq9APK2xgCzvYwwGWl9APK2xgCzvYwwGWDvTDChvYwg72cIDlZfTD
ChvYwg72cIDlFfTDChvYwg72cIDlVfTDChvYwg72cIDlNfTDChvYwg72cIDl
dfTDChvYwg72cIDlDfTDChvYwg72cIBlNfphhQ1sYQd7OMCSFF2CIziGFS7D
Bk5gC1dgB1dhD6dwgGuwrCm6BEdwDCtchg2cwBauwA6uwh5O4QDXYFlbdAmO
4BhWuAwbOIEtXIEdXIU9nMIBrsGyrugSHMExrHAZNnACW7gCO7gKeziFA1yD
5c2iS3AEx7DCZdjACWzhCuzgKuzhFA5wDZb1RZfgCI5hhcuwgRPYwhXYwVXY
wykc4BosG4ouwREcwwqXYQMnsIUrsIOrsIdTOMA1WDYWXYIjOIYVLsMGTmAL
V2AHV2EPp3CAa7BsKroER3AMK1yGDZzAFq7ADq7CHk7hANdgeavoEhzBMaxw
GTZwAlu4Aju4Cns4hQNcg2Vz0SU4gmNY4TJs4AS2cAV2cBX2cAoHuAbLlqJL
cATHsMJl2MAJbOEK7P73v455Wp0=
          "]]}}, {{}, {}}},
      AspectRatio->NCache[
        Rational[1, 3], 0.3333333333333333],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->400,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"Error vs iterations\"", TraditionalForm],
      PlotRange->{{0., 442}, {0, 11.540496155397511`}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.863703118216243*^9, 3.8637031489144335`*^9, 3.8637032426554804`*^9, {
   3.8637032743803434`*^9, 3.8637033154942074`*^9}, {3.863703346328354*^9, 
   3.8637033768286085`*^9}, {3.86370342548906*^9, 3.863703489280677*^9}, {
   3.8637035621363974`*^9, 3.8637036282402754`*^9}, {3.8637039697241616`*^9, 
   3.863704044314328*^9}, {3.863704191757216*^9, 3.8637042143879848`*^9}, {
   3.8638793939994483`*^9, 3.8638794253734207`*^9}, {3.86387945678938*^9, 
   3.863879543631625*^9}, {3.8638795786984177`*^9, 3.8638796456810102`*^9}, 
   3.8638796875376325`*^9, {3.8638860825947504`*^9, 3.863886208607476*^9}, 
   3.8638862406222444`*^9, {3.8638908529051423`*^9, 3.8638909000930614`*^9}, {
   3.863891457280982*^9, 3.863891536562643*^9}, {3.8638917977521667`*^9, 
   3.8638918898517313`*^9}, {3.863893818566307*^9, 3.8638938615045834`*^9}, 
   3.863894021367491*^9, {3.8638941019537354`*^9, 3.863894108100771*^9}, {
   3.8638941616136675`*^9, 3.863894260120185*^9}, 3.863894315522478*^9, {
   3.863894384518427*^9, 3.8638944839426503`*^9}},
 CellLabel->
  "Out[1200]=",ExpressionUUID->"227db3ee-d1dc-4ab3-bdad-49f00403b8dc"]
}, Open  ]],

Cell["\<\
Observations:
The choice of n is critical and would determine the speed of the algorithm. \
Smaller n has higher speed but may not converge and hence would require a lot \
of re initializations of the initial guess, while a larger n would not \
require a lot of re initializations but would take longer to converge. A way \
to choose the best value of n for a specific system would be extremely useful.
Furthermore we have been outputting the distance of the initial guess \
propogated to the other boundary and the desired value. We are doing this to \
design a stopping criterion. 
Another useful quantity to observe would be plot of this distance as the Find \
root algorithm progresses. (We want to see if it is monotonic)
\
\>", "Text",
 CellChangeTimes->{{3.863704362873541*^9, 3.8637045081791234`*^9}, {
  3.8638919339126487`*^9, 3.86389212755976*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"4eb81403-a99c-42b7-b4a4-36ec4bd675dd"]
},
WindowSize->{1440., 747.75},
WindowMargins->{{-6, Automatic}, {Automatic, -6}},
Magnification:>1.1 Inherited,
FrontEndVersion->"13.0 for Microsoft Windows (64-bit) (February 4, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"f891f112-c914-4bf5-b27c-d7c0d8607b34"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 59929, 1499, 2126, "Code",ExpressionUUID->"b098c715-9c30-421d-bfce-eae26b7e4e91"],
Cell[60490, 1521, 354, 7, 81, "Text",ExpressionUUID->"9be2365f-c4bb-4396-8de9-0c9df9f460d6"],
Cell[CellGroupData[{
Cell[60869, 1532, 8263, 230, 304, "Input",ExpressionUUID->"53d64360-9130-4d93-aa11-669324ba78f7"],
Cell[69135, 1764, 41618, 774, 225, "Output",ExpressionUUID->"bee9d1a4-c477-45c9-9d5f-da4fa3ae2b83"],
Cell[110756, 2540, 47203, 863, 226, "Output",ExpressionUUID->"dcad3bd9-3c9e-4eab-aa1b-42cd8781fe2f"],
Cell[157962, 3405, 47684, 877, 225, "Output",ExpressionUUID->"419390e8-7bb6-45af-8ac6-d07bb8d10712"]
}, Open  ]],
Cell[205661, 4285, 258, 5, 56, "Text",ExpressionUUID->"b6d5a503-f5ca-471f-9280-ef8cf6caad0d"],
Cell[205922, 4292, 29784, 762, 1082, "Input",ExpressionUUID->"af3ea33d-8e3a-4566-b4c0-08bbf9c4fe8b"],
Cell[CellGroupData[{
Cell[235731, 5058, 10368, 301, 534, "Input",ExpressionUUID->"3024c605-13d1-4af1-8ddb-6b0488dd66d7"],
Cell[246102, 5361, 1131, 18, 48, "Output",ExpressionUUID->"a63801a5-da8a-483b-bfa8-272952d4d9f4"],
Cell[247236, 5381, 237597, 4183, 451, "Output",ExpressionUUID->"779cd48b-0b3c-4beb-a624-bd78996ff001"]
}, Open  ]],
Cell[484848, 9567, 179, 3, 31, "Input",ExpressionUUID->"e3b56381-3091-428c-953b-8049828b4235"],
Cell[485030, 9572, 203, 3, 56, "Text",ExpressionUUID->"78f72274-21f2-4a3e-a828-5906a5fe2643"],
Cell[CellGroupData[{
Cell[485258, 9579, 9077, 254, 325, "Input",ExpressionUUID->"b5dee5c3-2101-40ff-b338-91333f517d06"],
Cell[494338, 9835, 629, 12, 51, "Message",ExpressionUUID->"19880933-bf02-48f1-91fe-b68ecd4e2b24"],
Cell[494970, 9849, 248571, 4360, 453, "Output",ExpressionUUID->"227db3ee-d1dc-4ab3-bdad-49f00403b8dc"]
}, Open  ]],
Cell[743556, 14212, 965, 17, 182, "Text",ExpressionUUID->"4eb81403-a99c-42b7-b4a4-36ec4bd675dd"]
}
]
*)

