(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    791230,      15032]
NotebookOptionsPosition[    788848,      14992]
NotebookOutlinePosition[    789282,      15009]
CellTagsIndexPosition[    789239,      15006]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Remove", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
  RowBox[{"(*", 
   RowBox[{"ICs", " ", "-", " ", 
    RowBox[{"Initial", " ", "Conditions"}]}], " ", "*)"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Error", " ", "while", " ", "cosntraining", " ", "u"}], " ", 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ffCartPendulum", "[", 
    RowBox[{
    "ICs_", ",", "n_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "A_", ",", 
     "order_", ",", "maxIter_", ",", "InitGuess_"}], "]"}], ":=", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x", ",", "dist", ",", "xdot", ",", "f", ",", "\[Theta]", ",", 
       "\[Theta]dot", ",", "\[Lambda]1", ",", "\[Lambda]2", ",", "\[Lambda]3",
        ",", "\[Lambda]4", ",", "\[CapitalDelta]t", ",", "bcs", ",", "eqns", 
       ",", "sv", ",", "froot", ",", "xff", ",", "xdotff", ",", "xff0", ",", 
       "xdotff0", ",", "\[Theta]ff0", ",", "\[Theta]dotff0", ",", "uff0", ",",
        "\[Theta]ff", ",", "\[Theta]dotff", ",", "uff", ",", "\[Lambda]1ff0", 
       ",", "\[Lambda]2ff0", ",", "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", 
       "i", ",", 
       RowBox[{"xGuess", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          SubscriptBox["xGuess", "i"], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}]}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"\[CapitalDelta]t", "=", 
       RowBox[{"\[Tau]", "/", "n"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"{", 
         RowBox[{
         "x_", ",", "xdot_", ",", "\[Theta]_", ",", "\[Theta]dot_", ",", 
          "\[Lambda]1_", ",", "\[Lambda]2_", ",", "\[Lambda]3_", ",", 
          "\[Lambda]4_"}], "}"}], "]"}], ":=", 
       RowBox[{"{", "\n", "\t", 
        RowBox[{"xdot", ",", "\n", "\t", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}],
           " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
               ")"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", "\[Lambda]2"}], 
              ")"}]}], "+", 
            RowBox[{"A", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", "\n", 
         "\t", "\[Theta]dot", ",", "\n", "\t", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}],
           " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{"1", "/", 
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"A", " ", 
                   RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
                 ")"}]}], ")"}]}], 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[Lambda]2"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
              ")"}]}], "-", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "-", 
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", "\n", 
         "\t", "0", ",", "\n", "\t", 
         RowBox[{"-", "\[Lambda]1"}], ",", "\n", "\t", 
         RowBox[{
          FractionBox["1", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"A", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "3"]], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["A", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"A", " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "-", 
               "\[Lambda]4"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "5"]}], "+", 
            RowBox[{
             SuperscriptBox["A", "3"], " ", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
              ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "6"]}], "-", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             SuperscriptBox["A", "2"], " ", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
              ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "4"], " ", 
             RowBox[{"(", 
              RowBox[{"4", "-", "A", "+", 
               RowBox[{"A", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}], "-", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "\[Lambda]2"}], "+", 
               RowBox[{
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}], "+", 
               RowBox[{"3", " ", "\[Lambda]2", " ", "\[Lambda]4", " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"A", " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "-", 
               "\[Lambda]4", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "A", " ", 
                   SuperscriptBox["\[Lambda]2", "2"]}], "+", 
                  SuperscriptBox["\[Lambda]4", "2"]}], ")"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox["A", "2"], " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2", " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], 
            "+", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "3"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", "A", " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "+", 
               RowBox[{"2", " ", "\[Lambda]4"}], "+", 
               RowBox[{
                SuperscriptBox["\[Lambda]4", "2"], " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"2", " ", "A", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"A", " ", 
                   SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], 
                  "-", "\[Lambda]4"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], 
            "+", 
            RowBox[{
             RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[Lambda]2"}], " ", "\[Lambda]4"}], "-", 
               RowBox[{"A", " ", 
                RowBox[{"(", 
                 RowBox[{"\[Lambda]2", "-", 
                  RowBox[{
                   SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
                 ")"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"A", " ", "\[Lambda]4", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]}], 
           ")"}]}], ",", "\n", "\t", 
         RowBox[{
          RowBox[{
           RowBox[{"4", " ", "/", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"A", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A", "-", "2"}],
              ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{"A", " ", "\[Theta]dot", " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}]}], ")"}]}], 
          "-", "\[Lambda]3"}]}], "\n", "}"}]}], ";", 
      StyleBox["\[IndentingNewLine]",
       FontWeight->"Plain"], 
      RowBox[{
       StyleBox["xGuess",
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       StyleBox["=",
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       RowBox[{
        StyleBox["Table",
         FontWeight->"Plain"], 
        StyleBox["[",
         FontWeight->"Plain"], 
        RowBox[{
         RowBox[{
          StyleBox["If",
           FontWeight->"Plain"], 
          StyleBox["[",
           FontWeight->"Plain"], 
          RowBox[{
           StyleBox[
            RowBox[{"i", " ", "!=", " ", 
             RowBox[{"-", "1"}]}],
            FontWeight->"Plain"], 
           StyleBox[",",
            FontWeight->"Plain"], 
           RowBox[{
            StyleBox[
             SubscriptBox["xGuess", 
              RowBox[{"i", "+", "1"}]],
             FontWeight->"Plain"], 
            StyleBox[" ",
             FontWeight->"Plain"], 
            StyleBox["=",
             FontWeight->"Plain"], 
            StyleBox[" ",
             FontWeight->"Plain"], 
            RowBox[{
             SubscriptBox[
              StyleBox["xGuess",
               FontWeight->"Plain"], "i"], 
             StyleBox[" ",
              FontWeight->"Plain"], 
             StyleBox["+",
              FontWeight->"Plain"], 
             StyleBox[
              RowBox[{"\[CapitalDelta]t", "*", 
               RowBox[{"f", "[", 
                SubscriptBox["xGuess", "i"], "]"}]}],
              FontWeight->"Plain"]}]}], 
           StyleBox[",",
            FontWeight->"Plain"], 
           RowBox[{
            SubscriptBox[
             StyleBox["xGuess",
              FontWeight->"Plain"], "0"], " ", "=", " ", 
            RowBox[{"{", 
             StyleBox[
              RowBox[{
               RowBox[{"ICs", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "3", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "4", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "3", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "4", "]"}], "]"}]}],
              FontWeight->"Plain"], 
             StyleBox["}",
              FontWeight->"Plain"]}]}]}], 
          StyleBox["]",
           FontWeight->"Plain"]}], 
         StyleBox[",",
          FontWeight->"Plain"], 
         StyleBox[
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"-", "1"}], ",", 
            RowBox[{"n", "-", "1"}]}], "}"}],
          FontWeight->"Plain"]}], 
        StyleBox["]",
         FontWeight->"Plain"]}]}], 
      StyleBox[";",
       FontWeight->"Plain"], "\[IndentingNewLine]", 
      RowBox[{"bcs", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"x", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"xdot", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"x", ",", " ", "n"}], "]"}], "==", 
          RowBox[{"Subscript", "[", 
           RowBox[{"xdot", ",", " ", "n"}], "]"}], "==", "0"}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]dot", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]dot", ",", " ", "n"}], "]"}], "==", "0"}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]", ",", " ", "n"}], "]"}], "==", "\[Pi]"}]}], 
        "}"}]}], ";", "\n", 
      RowBox[{"eqns", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Join", "[", 
         RowBox[{"bcs", ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Thread", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], "==", 
              "\n", 
              RowBox[{
               RowBox[{
                RowBox[{"1", "/", "2"}], " ", "\[CapitalDelta]t", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"f", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}], "]"}], "+", 
                  "\n", 
                  RowBox[{"f", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], 
                   "]"}]}], ")"}]}], "+", "\n", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Subscript", "[", 
                  RowBox[{"x", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"xdot", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]dot", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]1", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]2", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]3", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]4", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}]}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
        "]"}]}], ";", "\n", 
      RowBox[{"sv", " ", "=", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", "\n", 
             "\t\t\t\t\t", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "7", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "8", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", "1"}], 
        "]"}]}], ";", " ", "\n", 
      RowBox[{"froot", "=", 
       RowBox[{"FindRoot", "[", 
        RowBox[{"eqns", ",", "sv", ",", 
         RowBox[{"MaxIterations", "->", "maxIter"}]}], "]"}]}], ";", "\n", 
      RowBox[{"xff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"xdotff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Theta]ff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Theta]dotff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]1ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]2ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]3ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]4ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      "\n", 
      RowBox[{"uff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}], "^", 
                  "2"}]}]}], ")"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], 
                RowBox[{"Cos", "[", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}]}], "-", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}]}], ")"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      "\n", 
      RowBox[{
       RowBox[{"xff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xdotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "\[Pi]"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"uff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"uff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", "\n", 
      RowBox[{"{", 
       RowBox[{
       "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
        "uff", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
        "\[Lambda]3ff0", ",", "\[Lambda]4ff0"}], "}"}]}]}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"testSwingUp", "[", 
    RowBox[{
    "ICs_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "uff0_", ",", "A_"}], "]"}],
    ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eq", ",", "init", ",", "x", ",", "xdot", ",", "\[Theta]", ",", 
       "\[Theta]dot", ",", "xs", ",", "xdots", ",", "\[Theta]s", ",", 
       "\[Theta]dots", ",", "t", ",", "J"}], "}"}], ",", "\n", 
     RowBox[{
      RowBox[{"eq", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"x", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"xdot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"xdot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"uff0", "[", "t", "]"}], "+", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
             RowBox[{"A", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]dot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"uff0", "[", "t", "]"}], "+", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
            ")"}]}]}]}], "}"}]}], ";", "\n", 
      RowBox[{"init", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"xdot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]dot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
        "}"}], "=", 
       RowBox[{"NDSolveValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"eq", ",", "init"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
         RowBox[{"Method", "->", 
          RowBox[{"{", 
           RowBox[{"\"\<DiscontinuityProcessing\>\"", "->", "None"}], 
           "}"}]}]}], "]"}]}], ";", "\n", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"{", 
       RowBox[{
       "xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots", ",", "uff0",
         ",", "J"}], "}"}]}]}], "]"}]}], "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{"CalculateSMatrix", "[", 
   RowBox[{
   "x1a_", ",", "xdot1a_", ",", "\[Theta]1a_", ",", "\[Theta]dot1a_", ",", 
    "u1a_", ",", "\[Tau]_", ",", "A_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x", ",", "L", ",", "RHS", ",", "xdot", ",", "\[Theta]", ",", 
      "\[Theta]dot", ",", "u", ",", "K", ",", "S", ",", "soltn", ",", "Af", 
      ",", "Bf", ",", "Q", ",", "fx", ",", "xState", ",", "R", ",", "Mf", ",",
       "x2dot", ",", "\[Theta]2dot", ",", "S0", ",", "sol2", ",", "t"}], 
     "}"}], ",", "\n", "\n", 
    RowBox[{
     RowBox[{"xState", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
       "}"}]}], ";", "\n", 
     RowBox[{"x2dot", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{"u", "+", 
         RowBox[{"A", " ", 
          RowBox[{"\[Theta]dot", "^", "2"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"A", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ";", "\n", 
     RowBox[{"\[Theta]2dot", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{"u", "+", 
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ")"}]}]}], 
     ";", "\n", 
     RowBox[{"fx", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
       "xdot", ",", "x2dot", ",", "\[Theta]dot", ",", "\[Theta]2dot"}], 
       "}"}]}], ";", "\n", 
     RowBox[{"L", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", "2"}], "*", 
       RowBox[{"u", "^", "2"}]}]}], ";", "\n", 
     RowBox[{"Af", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{"fx", ",", "xState"}], "]"}]}], ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{"For", " ", "nD", " ", "stuff", " ", "use", " ", "Grad"}], 
      "*)"}], "\n", 
     RowBox[{"Bf", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"fx", ",", "u"}], "]"}]}], " ", ";", 
     RowBox[{"(*", 
      RowBox[{"For", " ", "1", "D", " ", "stuff", " ", "use", " ", "D"}], 
      "*)"}], "\n", 
     RowBox[{"Q", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{
        RowBox[{"Grad", "[", 
         RowBox[{"L", ",", "xState"}], "]"}], ",", "xState"}], "]"}]}], ";", 
     " ", 
     RowBox[{"(*", " ", 
      RowBox[{"Fix", " ", "this"}], " ", "*)"}], "\n", 
     RowBox[{"Mf", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{"L", ",", "u"}], "]"}], ",", "xState"}], "]"}]}], ";", "\n", 
     RowBox[{"R", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"L", ",", 
        RowBox[{"{", 
         RowBox[{"u", ",", "2"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"S0", " ", "=", " ", 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]]}], ";", "\n", 
     RowBox[{
      RowBox[{"RHS", "[", "t_", "]"}], " ", ":=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"IdentityMatrix", "[", "4", "]"}], " ", "+", " ", 
         RowBox[{
          RowBox[{"Af", "\[Transpose]"}], ".", 
          RowBox[{"S", "[", "t", "]"}]}], " ", "+", " ", 
         RowBox[{
          RowBox[{"S", "[", "t", "]"}], ".", "Af"}], " ", "-", " ", 
         RowBox[{"KroneckerProduct", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"S", "[", "t", "]"}], ".", "Bf"}], ",", 
           RowBox[{
            RowBox[{"Bf", "\[Transpose]"}], ".", 
            RowBox[{"S", "[", "t", "]"}]}]}], "]"}]}], ")"}], " ", "/.", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "->", " ", 
          RowBox[{"x1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"xdot", " ", "->", " ", 
          RowBox[{"xdot1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"\[Theta]", " ", "->", 
          RowBox[{"\[Theta]1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"\[Theta]dot", " ", "->", " ", 
          RowBox[{"\[Theta]dot1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"u", " ", "->", " ", 
          RowBox[{"u1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}]}], "}"}]}]}], ";", 
     "\n", 
     RowBox[{"sol2", " ", "=", " ", 
      RowBox[{"S", " ", "/.", " ", 
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"S", "'"}], "[", "t", "]"}], "==", " ", 
            RowBox[{"RHS", "[", "t", "]"}]}], ",", 
           RowBox[{
            RowBox[{"S", "[", "0", "]"}], "==", "S0"}]}], "}"}], ",", "S", 
         ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], " ", "}"}]}], "]"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"S", " ", "=", " ", 
      RowBox[{"sol2", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}]}], "\n", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CalculateGains", "[", 
   RowBox[{
   "x1a_", ",", "xdot1a_", ",", "\[Theta]1a_", ",", "\[Theta]dot1a_", ",", 
    "u1a_", ",", "time_", ",", "A_", ",", "\[Tau]_", ",", "S_"}], "]"}], ":=",
   " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x", ",", "L", ",", "RHS", ",", "xdot", ",", "\[Theta]", ",", 
      "\[Theta]dot", ",", "u", ",", "K", ",", "Af", ",", "Bf", ",", "Q", ",", 
      "fx", ",", "xState", ",", "R", ",", "Mf", ",", "x2dot", ",", 
      "\[Theta]2dot", ",", "S0", ",", "sol2", ",", "t"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"xState", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
       "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"x2dot", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{"u", "+", 
         RowBox[{"A", " ", 
          RowBox[{"\[Theta]dot", "^", "2"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"A", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Theta]2dot", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{"u", "+", 
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ")"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"fx", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
       "xdot", ",", "x2dot", ",", "\[Theta]dot", ",", "\[Theta]2dot"}], 
       "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Bf", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"fx", ",", "u"}], "]"}]}], " ", ";", 
     RowBox[{"(*", 
      RowBox[{"For", " ", "1", "D", " ", "stuff", " ", "use", " ", "D"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"K", " ", "=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Bf", "\[Transpose]"}], ".", 
         RowBox[{"S", "[", 
          RowBox[{"\[Tau]", " ", "-", " ", "time"}], "]"}]}], ")"}], "/.", 
       " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "->", " ", 
          RowBox[{"x1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"xdot", " ", "->", " ", 
          RowBox[{"xdot1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"\[Theta]", " ", "->", 
          RowBox[{"\[Theta]1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"\[Theta]dot", " ", "->", " ", 
          RowBox[{"\[Theta]dot1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"u", " ", "->", " ", 
          RowBox[{"u1a", "[", "time", "]"}]}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", "K"}]}], "\n", "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"testWithFB", "[", 
    RowBox[{
    "ICs_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "xff0_", ",", "xdotff0_", 
     ",", "\[Theta]ff0_", ",", "\[Theta]dotff0_", ",", "uff0_", ",", "A_"}], 
    "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eq", ",", "init", ",", "\[Theta]", ",", "\[Theta]dot", ",", 
       "\[Theta]ff", ",", "\[Theta]dotff", ",", "x", ",", "xdot", ",", "xff", 
       ",", "xdotff", ",", "uff", ",", "t", ",", "\[Kappa]1", ",", 
       "\[Kappa]2", ",", "\[Kappa]3", ",", "\[Kappa]4", ",", "ufb", ",", "u", 
       ",", "\[Theta]s", ",", "\[Theta]dots", ",", "xs", ",", "xdots", ",", 
       "us", ",", "J", ",", "S", ",", "K"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Kappa]1", "=", 
       RowBox[{"\[Kappa]2", "=", "3"}]}], ";", "  ", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"lqr", " ", "for", " ", "q"}], "=", 
        RowBox[{"r", " ", "for", " ", "balancing", " ", "pendulum"}]}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"\[Kappa]3", " ", "=", " ", 
       RowBox[{"-", "0.1"}]}], ";", 
      RowBox[{"\[Kappa]4", " ", "=", " ", 
       RowBox[{"-", "0.65"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"xff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xdotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "\[Pi]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"uff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"uff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"S", " ", "=", " ", 
       RowBox[{"CalculateSMatrix", "[", 
        RowBox[{
        "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
         "uff", ",", "\[Tau]", ",", "A"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"K", "[", "t_", "]"}], " ", ":=", " ", 
       RowBox[{"CalculateGains", "[", 
        RowBox[{
        "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
         "uff", ",", "t", ",", "A", ",", "\[Tau]", ",", "S"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ufb", "[", "t_", "]"}], " ", ":=", " ", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"K", "[", "t", "]"}], ".", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"xff", "[", "t", "]"}], "-", 
                RowBox[{"x", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"xdotff", "[", "t", "]"}], "-", 
                RowBox[{"xdot", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]dot", "[", "t", "]"}]}]}], "}"}]}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         RowBox[{
          RowBox[{"\[Kappa]1", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]3", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"xff", "[", "t", "]"}], "-", 
             RowBox[{"x", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"xdotff", "[", "t", "]"}], "-", 
             RowBox[{"xdot", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"u", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{"uff", "[", "t", "]"}], "+", 
        RowBox[{"ufb", "[", "t", "]"}]}]}], ";", "\n", "\n", 
      RowBox[{"eq", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"x", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"xdot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"xdot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"u", "[", "t", "]"}], "+", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
             RowBox[{"A", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]dot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"u", "[", "t", "]"}], "+", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
            ")"}]}]}]}], "}"}]}], ";", "\n", "\n", 
      RowBox[{"init", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"xdot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]dot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}], ";", "\n", "\n", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
        "}"}], "=", 
       RowBox[{"NDSolveValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"eq", ",", "init"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
         RowBox[{"Method", "->", 
          RowBox[{"{", 
           RowBox[{"\"\<DiscontinuityProcessing\>\"", "->", "None"}], 
           "}"}]}]}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"us", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{"uff", "[", "t", "]"}], "+", 
        RowBox[{"Piecewise", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"K", "[", "t", "]"}], ".", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"xff", "[", "t", "]"}], "-", 
                 RowBox[{"xs", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"xdotff", "[", "t", "]"}], "-", 
                 RowBox[{"xdots", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                 RowBox[{"\[Theta]s", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                 RowBox[{"\[Theta]dots", "[", "t", "]"}]}]}], "}"}]}], ",", 
             RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
          RowBox[{
           RowBox[{"\[Kappa]1", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]s", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]dots", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]3", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"xff", "[", "t", "]"}], "-", 
              RowBox[{"xs", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]4", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"xdotff", "[", "t", "]"}], "-", 
              RowBox[{"xdots", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"us", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"{", 
       RowBox[{
       "xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots", ",", "us", 
        ",", "J"}], "}"}]}]}], "]"}]}], "\n"}], "\n"}], "Code",
 CellChangeTimes->{{3.862753343189165*^9, 3.862753411389415*^9}, {
   3.8627553611496043`*^9, 3.8627553647834463`*^9}, {3.862755542386807*^9, 
   3.862755582254092*^9}, {3.862756179429644*^9, 3.8627562078485813`*^9}, 
   3.8627563320549693`*^9, {3.8627564690202875`*^9, 3.8627565488258357`*^9}, {
   3.8627568793814173`*^9, 3.8627568873778677`*^9}, 3.8627585165043135`*^9, {
   3.8627585965107956`*^9, 3.862758689290209*^9}, {3.862758834699833*^9, 
   3.8627588555911727`*^9}, {3.8627590963373947`*^9, 
   3.8627590998392787`*^9}, {3.8627594410134716`*^9, 
   3.8627594626865597`*^9}, {3.862759635094576*^9, 3.8627596377257366`*^9}, {
   3.862759669455618*^9, 3.8627597448635693`*^9}, 3.862759795914287*^9, {
   3.8627603319473376`*^9, 3.862760490473783*^9}, {3.8627605307139487`*^9, 
   3.862760536806006*^9}, {3.8627610047197795`*^9, 3.8627610478400292`*^9}, {
   3.8627611285982723`*^9, 3.862761147921111*^9}, {3.8631982964294224`*^9, 
   3.8631982970332265`*^9}, 3.8631983363504767`*^9, {3.863208693665881*^9, 
   3.8632086943846474`*^9}, 3.863210007245922*^9, 3.863271804426487*^9, {
   3.8632718412836447`*^9, 3.8632718583741503`*^9}, {3.8632719591337743`*^9, 
   3.863271959351703*^9}, {3.863272049174841*^9, 3.863272070205083*^9}, {
   3.863272113471178*^9, 3.863272123024109*^9}, 3.8632747752128673`*^9, {
   3.863274857845314*^9, 3.863274901443305*^9}, 3.863274985905165*^9, {
   3.86327502591031*^9, 3.8632751590365314`*^9}, {3.8632751952308993`*^9, 
   3.863275233662552*^9}, {3.8632753992893295`*^9, 3.863275415841012*^9}, 
   3.8632757933676972`*^9, 3.863276112914017*^9, {3.8632763683199444`*^9, 
   3.8632763983313017`*^9}, {3.8632764721665745`*^9, 3.863276525061578*^9}, {
   3.863278235705888*^9, 3.8632782777863655`*^9}, {3.863278324944213*^9, 
   3.8632783286160316`*^9}, {3.863552728717914*^9, 3.8635527298355513`*^9}, {
   3.863613419658352*^9, 3.863613423534114*^9}, {3.8636150904008484`*^9, 
   3.86361513154671*^9}, {3.8636152078133564`*^9, 3.8636152525520706`*^9}, {
   3.8636152893383236`*^9, 3.863615479516596*^9}, 3.8636157247782784`*^9, {
   3.863615879717803*^9, 3.8636159617646036`*^9}, {3.8636160220243616`*^9, 
   3.8636160299278383`*^9}, {3.863616069486206*^9, 3.86361607601912*^9}, {
   3.863699007217822*^9, 3.8636991515617003`*^9}, {3.8636996033223495`*^9, 
   3.8636996129842625`*^9}, {3.8636997844214835`*^9, 3.863699805489752*^9}, {
   3.863699907217247*^9, 3.863699944316393*^9}, {3.863700788168758*^9, 
   3.8637008845809517`*^9}, {3.863702046275758*^9, 3.8637020830100203`*^9}, {
   3.863702595245346*^9, 3.863702645292355*^9}, {3.863884194660141*^9, 
   3.8638842031804175`*^9}, {3.8638909914788537`*^9, 3.863891009810995*^9}, {
   3.863891113237941*^9, 3.8638911537729845`*^9}, {3.863891279619763*^9, 
   3.8638912855948534`*^9}, {3.863891344230113*^9, 3.863891351574766*^9}, {
   3.8638925953132634`*^9, 3.8638925989880886`*^9}, 3.8641412354391413`*^9, {
   3.864141550931038*^9, 3.8641416655529428`*^9}, {3.8642361939817247`*^9, 
   3.864236202546955*^9}, {3.864236595072028*^9, 3.8642366322340117`*^9}, 
   3.864236674617306*^9, {3.8643997929515553`*^9, 3.864399794341104*^9}, 
   3.8647401548354416`*^9, {3.864740367280447*^9, 3.864740382577551*^9}, {
   3.8647404140084915`*^9, 3.8647404181541643`*^9}, {3.864740488606616*^9, 
   3.864740495693348*^9}, {3.8647405289317093`*^9, 3.864740542820265*^9}, {
   3.864741074561078*^9, 3.864741079667444*^9}, {3.864741140307036*^9, 
   3.864741143520008*^9}},
 FontWeight->"Plain",
 CellLabel->
  "In[947]:=",ExpressionUUID->"b098c715-9c30-421d-bfce-eae26b7e4e91"],

Cell["\<\
Check the performance of the new initial guess mechanism for the case where n \
= 40 and greater was required.
We see that n = 6 is only required here which is excellent!\
\>", "Text",
 CellChangeTimes->{{3.863702780704089*^9, 3.8637028585982*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"9be2365f-c4bb-4396-8de9-0c9df9f460d6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  StyleBox[
   RowBox[{"n", "=", "6"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Tau]", "=", "2.5"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Tau]1", "=", 
    RowBox[{"\[Tau]", "*", "1.25"}]}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"A", "=", "0.2"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"order", " ", "=", " ", "4"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"maxIter", " ", "=", " ", "100"}],
   FontWeight->"Plain"], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.048555026816794494`"}], ",", 
      RowBox[{"-", "1.560065966757075`"}], ",", "0.7613152376955525`", ",", 
      "1.9382391342292873`"}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"InitGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}]}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
       "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
       "\[Lambda]3ff0", ",", "\[Lambda]4ff0"}], "}"}], "=", 
     RowBox[{"ffCartPendulum", "[", 
      RowBox[{
      "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", "order", 
       ",", "maxIter", ",", "InitGuess"}], "]"}]}], ";"}], " "}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1b", ",", "xdot1b", ",", "\[Theta]1b", ",", "\[Theta]dot1b", ",", 
       "u1b", ",", "J1"}], "}"}], "=", 
     RowBox[{"testSwingUp", "[", 
      RowBox[{"ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "u1a", ",", "A"}], 
      "]"}]}], ";"}], " "}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x1c", ",", "xdot1c", ",", "\[Theta]1c", ",", "\[Theta]dot1c", ",", 
      "u1c", ",", "J"}], "}"}], "=", 
    RowBox[{"testWithFB", "[", 
     RowBox[{
     "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
      "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A"}], "]"}]}], 
   ";", 
   RowBox[{"p1a", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1a", "[", "t", "]"}], ",", 
        RowBox[{"u1a", "[", "t", "]"}], ",", 
        RowBox[{"x1a", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1a", "[", "t", "]"}], ",", 
        RowBox[{"xdot1a", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1a\>\"", ",", "\"\<u1a\>\"", ",", "\"\<x1a\>\"", ",", 
         "\"\<\[Theta]dot1a\>\"", ",", "\"\<xdot1a\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Feedforward solution\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}]}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{"p1b", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Theta]1b", "[", "t", "]"}], ",", 
       RowBox[{"u1a", "[", "t", "]"}], ",", 
       RowBox[{"x1b", "[", "t", "]"}], ",", 
       RowBox[{"\[Theta]dot1b", "[", "t", "]"}], ",", 
       RowBox[{"xdot1b", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
     RowBox[{"Filling", "->", 
      RowBox[{"{", 
       RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Theta]1b\>\"", ",", "\"\<u1b\>\"", ",", "\"\<x1b\>\"", ",", 
        "\"\<\[Theta]dot1b\>\"", ",", "\"\<xdot1b\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<Test on dynamics\>\""}], ",", 
     RowBox[{"AspectRatio", "->", 
      RowBox[{"1", "/", "3"}]}], ",", 
     RowBox[{"ImageSize", "->", "400"}], ",", 
     RowBox[{"GridLines", "->", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], "]"}]}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"p1c", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1c", "[", "t", "]"}], ",", 
        RowBox[{"u1c", "[", "t", "]"}], ",", 
        RowBox[{"x1c", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1c", "[", "t", "]"}], ",", 
        RowBox[{"xdot1c", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1c\>\"", ",", "\"\<u1c\>\"", ",", "\"\<x1c\>\"", ",", 
         "\"\<\[Theta]dot1c\>\"", ",", "\"\<xdot1c\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<LQR feedback solution\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], "\[IndentingNewLine]"}],
  FontWeight->"Plain"], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.863699832878002*^9, 3.8636998879424076`*^9}, {
   3.8636999587037973`*^9, 3.863699966845196*^9}, {3.86370068689312*^9, 
   3.863700742439372*^9}, {3.863700775571786*^9, 3.8637007771342835`*^9}, 
   3.863700945211579*^9, {3.863700998427576*^9, 3.8637010107976217`*^9}, {
   3.8637016473912125`*^9, 3.863701669091281*^9}, 3.863702035899074*^9, {
   3.863702126179226*^9, 3.863702160529252*^9}, 3.86370251869481*^9, {
   3.8637025705572357`*^9, 3.8637025888983755`*^9}, {3.8637026681560507`*^9, 
   3.8637026692896886`*^9}, {3.8637027081322765`*^9, 3.863702762285972*^9}, 
   3.8637029838601737`*^9, 3.8637033230088053`*^9, {3.863884225388322*^9, 
   3.8638842448491*^9}, {3.8638842916161537`*^9, 3.863884295082047*^9}, {
   3.863891061309538*^9, 3.863891063069975*^9}, {3.863891163269951*^9, 
   3.863891163428899*^9}, {3.8638912925906177`*^9, 3.8638912940581484`*^9}, {
   3.8638913677266035`*^9, 3.8638913686183195`*^9}, {3.8638926039804945`*^9, 
   3.8638926063767295`*^9}},
 CellLabel->
  "In[954]:=",ExpressionUUID->"53d64360-9130-4d93-aa11-669324ba78f7"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
UCpw+veyuQTNQJGnrq+1DRVCFaovmATMQvbOdOFT9GHIOCAYzuc7B5cP8ehs
vzoMMe5R7ukP6SB8sbOJnDUEST1XF28HM+CyXVA+f+cg4X+tf3726ZWEb4Dz
Ug/9D+O790f8Ky/F+ee2uR88/vdpgPNP20PP1sVvwtr/5Z+xLyvm+VJGAeef
Z441FHhpjYKjUuse47lJOCLkECYiOALTwajmd+YU7Ja5YZzSSYWMtnCTabYZ
MDSp8C54SgXJ+1xx7tyzcOnQDf+zqlTC7yq0e1Y6Fk2Hf+Off+WT/8QTaYlz
PwP20Ag/qQQLz+l8ht/f+BzOx2b1E6w1gy/9I89SHs3dW8BcIPyNv6XDKvqt
xwh/o4ZojmVXDZZP/+VRRgE7bUuP0ADnUWaNInIn5kYB51HVgwqXG5xHAedR
dWs+2nnzjgLOo17cJzO7fo1AadOF0hjHSeASYbtQh+WXY03ouTM3p4BFpnXt
Jkw/GIsstMddnwaOd6nGE9+o0GedU+5xbwZKpHeb9NhSoTT/5OZrd2ah8LaS
vCZzGE7vo/xq9JqDibjFdaUuwxBeWtpTeJ8OaYvqj0e+DsGqmMFOrQAGjI6a
XVrRO0j4NZcxhN8OdHwDnF9xanG8LaBG/iu/wnnU24b4tMcPaIDzqMjIo51U
CRrgPGoyp0dTJm0UcB71bbmPBMfuUdBZjFeQmJqEub7yFAqWXxuSh80aZ6cg
5VeBxpsuKuyz56FlLkxDoktLy6ZIKpDsO5xvc8zCRbP7Znw7qYQ/k3X9zWM9
8hnwbzzqr7zon/hO+QnXZKoOjfA/SqoKnlI76v83XoLzCvW+EnOvSZe/8QVc
r6/ljFUNNT39j/p7geXWh2XTs4Q/r2VHkuCarzOEP++8kuQluvQ04c97J7Wp
6bn/JOHPyx+/P/y4fJzw5036U1LI1TTCnxc3wbHp6i8q4c9rJOmV7L07QPjz
PMd3jGse7CP8edPMAbYXJl2EP8938Pvks73NhD+PXVg99cWTGsKfN567Yc+O
Z8WEP2+eduY+S/tHwp8nPs6+UQh9T+hvD7GXTwr4iwj97aitbXHrcCWhv6Pa
y24VDNUt6W9+Uv65zc2E/h72f89Re6ed0N+09Hu6WmZdhP7OFMBEoHgPob/r
weWlg28vob/bTz+/uZDZR+jvNQd0ry0LJhP6W7I4Od1YkELob7poCsfkOQqh
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
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{251, 1417, 197, 198, 199, 200, 201, 202, 203, 204, 
            205, 206, 207, 208, 426, 367, 318, 279, 250, 233, 439, 380, 331, 
            292, 263, 450, 391, 342, 303, 209, 427, 368, 319, 463, 404, 280, 
            455, 396, 476, 347, 468, 409, 480}}]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwl0kdsjnEcB/CnpQ72vpjlYASJvS82B1UjQazUXnWwORhB0ooVMULU3nvT
oS0lVsQIsapqX+zWuNDPPz188v39v8/7/N4n7/vEJ80anBwbRVEMbzhCalwU
pZBnvsZVcskhmytkkUkG6VzmEhf5xF9qW9qdZA5zQfeRP9Ry7sZMDnFeV042
ZgCLw+f5oP9NTXNXZnCQc7o42Yj+LAo7eK9vLhNZTha/dCPlam5Qgy5M5wBn
XR8nN3CXVgxjFbmUZTRruUU8m7hPP56xMDwT7+wqlNt4zBjyWcdtmvGKzTxg
EM9ZRibF7i+QW3nECF6QynWqs5F7dOYp09jPGfdul08Yy3ru0JItPGQoK8mh
DKNYw00a0pcF4TfhrX1NZQJLyaBIN1ymkEc1OjGVfZx2vYUcwgqyiaUBfZgf
njOm9F1rIgeyhHR+6qrKjkxhL6fCuynr05t54Tso1P+girkDk9nDyaj0Za5H
L+aGHbxWf6eyuT2T2M0J3X/qmnsyJ+ygQPeNSuZ2TGQXx3X/qGPuweywI/yn
uq9UNLdlAjs5psvnCxWc2zCeNI7qXvKZ8s6tSWIHJW8jeyU=
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{1, 135, 108, 88, 72, 60, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10, 
           11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27,
            28, 29, 30, 31, 32, 33, 34, 35, 136, 109, 89, 73, 61, 52, 36, 137,
            110, 90, 74, 62, 53, 142, 115, 95, 79, 67, 37, 138, 111, 91, 75, 
           63, 54, 143, 116, 96, 80, 68, 38, 139, 112, 92, 76, 64, 146, 119, 
           99, 83, 55, 144, 117, 97, 81, 69, 148, 121, 101, 86, 39, 140, 113, 
           93, 77, 150, 123, 103, 65, 147, 120, 100, 157, 130, 84, 153, 126, 
           106, 56, 145, 118, 98, 156, 129, 82, 152, 125, 164, 105, 160, 133, 
           168, 70, 149, 122, 163, 102, 158, 131, 166, 87, 154, 127, 165, 107,
            161, 134, 169, 40, 141, 114, 162, 94, 155, 128, 78, 151, 124, 104,
            159, 132, 167, 66, 85, 57, 71, 41, 58, 42, 43, 44, 45, 46, 47, 48,
            49, 59, 50}]}, Annotation[#, "Charting`Private`Tag$384646#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1Hecz3UcB/A7ulAq0jBKXSokkVFKqZTQUF1WRUZLIUVLhSau7BkVSvOK
223d4vaqu3M47o7KaFE0bM/Pwx/P3+v9ff2+3+/v+/19R/TIcTGPR0ZERFzt
I06+K0dyOSfxh24zn7HM8gN04mT+1G3hc5ZbfpDONGS3rprV5gn0pAVHdKtY
YX6ILpzCHl0N8eanuJFzOBr2wXvmh+nKqfylqyXB/DQ3cW44EeLF+/IRruA0
/tZtJdH8DL1oSSQJ+pVyFFfSiL26b+QU+tGabbok+Sw3cx51SOM17uZSEq33
gXyUbjRmLbEMZp/vv5UvcQdt+EmXLJ+jN+eTy0yGUJd0Xqc/P7KY9hQwh2Gs
522S7O9D+RgbuIpi5nM663iDKu6hjLeo4R/bfidfZhN38gOLqKYt+cxmC/dT
wVK28rPtU+RENtKHUhYSTR6zGMoJZDCVAVxGIXMZTrJ9fSRHRx6/R5uQzZvc
y7++XyNf4S4u4RddqnyevlxAFCn6j+UYunMG/+m284X5BW6hFSeSqv9EjuUa
zuR/3Y6wPp9aDg/PtZzFft1OvuQrvg73ULjW4f8Mx8n3pJFOBplksZbYKNdF
ZpNDLnnkU0AhRRRTQilxfnccPTibA7pd4RjML3IrF1KPTKYxkA7hmobnWj7B
dZSwgKbkMIPN3Ec5S6jlYDgP+SoxtOPXcM5yErdxEfXDfRreD/JJrqcZh3S/
UUY5Faynkg1sZFN4T1h3PDfQnMO638P/ap7M7VxMA7KYziA6UsQ8RlDJO2yj
yvbHAItirvY=
           "]]}, Annotation[#, "Charting`Private`Tag$384646#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV02WAVVUUgNE3M3R3o4KChHQpHRLS0gY1pIqAiZQKYgehIA0GoJQCNmHQ
jYmJQTfSDWv/WHzn7Hvfe3ODYqmD2g1MSiQSo/2zmwwpicTy5ERiJK0oQ172
OLaXfeznAAc5REafWeGcp2lNWfJx2LFMjq20foY23EZ+jjiW2bFV1s/SlnIU
oKj5Dp1AKvU46vws5l9bj+JuylOQG8y/1zfpRX2OOT+r+TfWo2lHBQpxo/kP
+ha9acBx52cz/9b6OdpTMa7FbJfOZjCFucnsR51IH2rbH9clNKSy/V6dxxBO
+O7sZt9Zj6GJ9QXtwO3Wh3URleL+2P+t79DC+qo+EtdkfUo/jWu3TkMR62L6
k3bSSXqXXtau2lfr6Am9R5fGM9BketLIvoru0876gbbUa9pNn9JGelbv0y/i
Pmpa/ndNOXS12fM0tb6oHbnD+ogujnsRz9X+H32XR+N+25/Wz+JZU9z+Z32b
ftSN79dl3ElV+/36IUM56bdzmq2xfiGuPa4j3gezf/U9Hov3gpvNftHJ9Kcx
p3w+l/la6xfj2uM34r3gFvOdOoUH4llx2vm5zddZv0QXqsV7wBnH8ji23vrl
uM9Uj+fCWcfOcZ4LXOQSl7nCVa7Ffz7nJpFMCmlIS17fu0Ff4V5qxL0iHfkc
26ivxrOJ9yiulRLmv+pUHoznQnrym2/S17g/nlFcKyXNf9NpPEQzMlDAfLO+
Hu8SNalg9p++z+PxW9xq9rtOZ0C8f3FvzA7ofIaRkYJmW/SNeLfi++yP6kfU
oqL9bp3DEzS0P6Ofx99IKfs/dAbNra/ow9SzPhn3Rz/RtppCKs3jWejBeGa6
QFtpgu4Mj/dLz8U90S+1vaajF5nsC+nWeK91bNwfvaTd4++2PqYf09o6iR7U
tq+ke3QuT8Z9orTZnzqTgbQgM4XNt+k4elAnrpcsZCUb2clBTnKRmyI+t13H
05O68RuUMf9LZzGIlvHumB3ShYygsf15/YoO1unpTR7760/KtAo=
           "]]}, Annotation[#, "Charting`Private`Tag$384646#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwNy1OQXVEURdHXSce20bFt27a+UhXbtm3btm3btm1zfIy6c+1TN6Rxuxpt
gwKBwHeahA4EcgcHAtF4pU+yimk0pRnNaUFLWtGaNrSlHe3J4//ovNanWM10
OpDXPQZv9GnWMIPybin5p++yj47kc4vJW32GOjobkVlrz6SCTkWAe/Z+OpHf
jsU7fZZ1zKKiW2qCuG8foDMF7Ni81+dYz2wquaUhFA/sg3ShoB2HD/o8G5hD
Vwq5x+WjvsBG5tKN7vSgsPd4fNIX2cQ8KrulJTQP7UP0pIgdn8/6EpuZTxW3
dATzyD5ML4raCfiiL7OFBVR1S08YHttH6E0xOyFf9RW2spBqbhkIyxP7KH0o
bifim77KNhbRlxLuifmur7GdxfSjpHsSfujr7GAJ/SnlnpSf+gY7WcoABjKI
wQxhKMMYzghGMorS/k/GL32TXSyjultGwvHUPsZoytjJ+a1vUVdnJwr1yUlD
dnur5ZuFiLywl1NDZyI8z+zjjKGsHcIffZs9rGAs4xjPBCYyiclMoZx/UvBX
32EvK6nplpkIPLdPUFtnJRIv7Xq+OYhKA3LRiKne/gPNBoJt
           "]]}, Annotation[#, "Charting`Private`Tag$384646#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV02W4lFUUBtABCUnpFJDuDgNQMQAJRbqFi7SAiHRd4l4waElFEKQ7lFKQ
BukGaaWV7hLW+bFmv3vPzDPzncge1almxziRSKSQlybxIpFK8SORlzgr/8ZU
RtCUT2hGc6Jowae0pBWtaUNb2tGez+hARzrxOZ2p7DdS8Lf8Oz8xki/4wDwl
/8hrmcYoulDFPBXn5HVMZzT1zV7hlryLJXxJVbPUnJf/4GfG0MAsO7fl3Syl
K9XM0nBBXs+M8Jz6gjyVj/IdDfU5uCPvYRndqG6WlovyBmaGNdIX4n/5GGNp
pM/JXXlvWBv5VRKxPKyjWoy49OBtTob1Ud8gKd31H6rpuBT+v1qejWHd1VIM
IAG9eIcYZoU9UwsTzTN9d/UtBvNX2CP1dQaShL68zxDGeb+xmov+3AvPrr7J
IPaFfVZfIzF9eI9fwtlQi/MCPanAqbC3almShefVf6Sm57K8KZwhuTQJmR3O
m1qECMf142ki5+a+vJ9fwznUlyAep/U9qSFn4Iq8mTlMCGfcLA8P5AOsoBcf
m2XkX3kLc5kY7oNZXh7KB1lJb2qaZeI/eSvzmEQfapln5qq8jfl8T1/60Z9o
BjCQQdT2+Ze5Jm9nAT+Eu2iWj0fyIVYxmDpmWbgu/xnunlyGF+nNu8SyMNxZ
tShxOKGfTHM5P4/lw6wmhrpmWbkh72ARPxLLEIbyFV/zDd8yjHq+k42b8k4W
M4UoswI8kY+whvb6ksTnTLjDajmS04+KDGW4954Di6qaSA==
           "]]}, Annotation[#, "Charting`Private`Tag$384646#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"Feedforward solution\"", TraditionalForm], 
     PlotRange -> {{0., 3.12499993622449}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1a\"", "\"u1a\"", "\"x1a\"", "\"\[Theta]dot1a\"", 
       "\"xdot1a\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.863702134579542*^9, 3.8637021627135525`*^9}, 
   3.8637025210160646`*^9, 3.863702578124817*^9, 3.8637026714539957`*^9, {
   3.8637027226726294`*^9, 3.8637027640764*^9}, 3.8637029884806967`*^9, {
   3.8637033266226506`*^9, 3.8637033354478307`*^9}, 3.863879327529692*^9, {
   3.863884217207935*^9, 3.8638842652235885`*^9}, 3.8638842967265196`*^9, 
   3.8638860360506268`*^9, 3.8638906095889077`*^9, 3.863890848019706*^9, 
   3.8638910663699183`*^9, 3.863891132659732*^9, 3.8638911691100826`*^9, {
   3.8638913595922036`*^9, 3.863891384033392*^9}, 3.8638926082491283`*^9, 
   3.864131525163704*^9, 3.8641416796563787`*^9, 3.864143125130576*^9, {
   3.8642366677575245`*^9, 3.864236679721656*^9}, 3.8643991189557676`*^9, 
   3.8643998035201178`*^9, {3.86440821572911*^9, 3.8644082391544905`*^9}, {
   3.864412158578727*^9, 3.8644121612098713`*^9}, 3.864740161270382*^9, 
   3.864740548133564*^9, 3.8647411134926176`*^9, 3.8647411481275325`*^9, 
   3.864833837652205*^9, 3.8648362858747797`*^9},
 CellLabel->
  "Out[959]=",ExpressionUUID->"0a2e301a-2c13-46ae-bc1e-ab7827d66d7a"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
9FcV8KPyQrrf4wsYz0QeNx8c40IjH/xOJWI8usB1QMDrKgUlaMwatOPvLfHm
m82maQqaPNC1/hFubynT3tXtzY1ajpTo+m/D/spTtPH1dgq6Vb52my3+vtm7
66oN31GQpn/ArX/4cF8p98MR4EYrfzD61bF93LM85gYt/GhMbF2yqg7+zmnn
jD7heXjd6mtZhsffJ7L00bpuvP8L+Rca4vUptueZVMtQ0KEq8RP/7FNieFTi
Od5H0315xdvx+JkPZjr2K2D/bVIt3IPfzz6yqUDNn4LCN9QW3cTPs4/f2blF
gBsxZY8rP8Hfd19ogZ/gZwqqmbF9pIyf7wxeNb9qmB8Jqs5d/onXUVv6Ri62
hYKOv/t27p991n7m+Vz2DNv3yHZxMfz7bBn180Y+FFRXuvPkDtw/c6FcXu0j
BfnqjPrvxf0XVnVevZ5BQe0npB8dwO197uLLhUIoyL3d4UEx/n3w+/Smnu8U
dGDBXJgQ7l+eMHvs6TSOL66HqUUoU9BbflnxS9aHIb/XbF/nxU5QYBlOUGNn
4bhfc3/6ZyqaGh0IFk2bg1uzCsELsX0v8lf+tOkkFxq/ouuhjO17LI016FPF
hY76eJzSxvat+nNP1SpDCmKdk1k2ju0jWOrji6lfOA6QNMwYxPNBl1nKa8y4
kdr5kXmu2L5X7bt6+XgTN/Jda5ExhO37W8Y8IzDmQYp/stjKON6sEt01famV
B3XPh5P2eD5LLKzfR7nwo3UiohGNSdhfPdFvypaegz/+Z1uetFJRpII3rU2E
C82tefj5E47nxHJNd+x5yIV4UtIDB3E8J7P8Uj9jGY4vTo96pGH79lj+M3z0
CQVVb0mi9vz7ftFJE2tW4/lYJI3cwfMvKavXy4/mRpcydU2ssX0LPnm4J1uU
B9keXjx5HMdztwTucne+50f3n7y8H2ZLQcFtrwaUR7jQXqMvzibYvg1cBbbc
caMglyvxAt/+2Zv5lsMCkxSk51pTno7bPqLmqO869kfeTaL12L6LdJT6grZS
UNb3yV07sH3F5UbNnH1LQYuNul7+s+/MhrVxiprcKK+4aKULtm9kvnLDwmZ+
VHTwoeVOnM+Urpe5+cOagoZ32NdPYPu7UHTtKk8nBSnNBly7hNc3ll5xKXcD
BZ1eWzA/ENv3Iut3uskvKUjGsXV087/4StPy2wZ5brxv3aWiGI+7Swc7dt6h
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
zua8MDd0Pm1UdEYJ+/f/nf8g+Pw/OwiDrg==
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{332, 1619, 278, 279, 280, 281, 282, 283, 284, 285, 
            286, 287, 288, 289, 507, 448, 399, 360, 331, 314, 520, 461, 412, 
            373, 344, 531, 472, 423, 384, 290, 508, 449, 400, 544, 485, 361, 
            536, 477, 557, 428, 549, 490, 561}}]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwl0ldsTlEAwPH7FbVVUWI0UhXSoqr2iz3KC9rSh9aq9UJrPRhBYu8Xmwcj
SBAr9n6xeTCCBDEaMUJstcfvxMMv/3POPd/57vfdm1JUklMcF0VRjFJ+khcf
RbkkWaxDbWqRSE0SqEF1qlGVKlSmEp3pzzhWco4fVKQT/RjLCs7ynXjymcom
rof9bqyjZjOG5ZzhGxUYwhQ2ci2cYX8Hnck2bof7tNZX9/CQeuajdRmn+Up5
DlJKsutzdCf3wu82H6z7eEwD88n6nBTjDZquV8M9aXvN0tfaTPdrhj7RhjpD
W+sLbaJbtYXeCv+n9tFMfaVNdbe21AdaV0fpMxobL9U0PaVllOMNza0d0Kc0
Mp6tL0k13qF3w7M0ztO9PKK++SRdz5Xwn5i30+ls4WZ41tZ66y7uk2RepEs4
yRfimMV27oT3xZ5cncg6Lof7tNZWp7GZG+EdstZLR7KYE3wmRg4lrOVS+A57
s7QnI1jEcT7F/r/IgyhmDRfDGfa30R4MZyHH+MhfHxmoE1jNhXCG/ZnanWEs
4Cgf+OPyAB3PKs6HM8IzpRtDmc8R3vPb/gztSiHzOMw7frnWSrtQwFwO8ZZ/
BG1p8w==
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{1, 197, 151, 113, 84, 63, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10, 
           11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27,
            28, 29, 30, 31, 198, 152, 114, 85, 64, 52, 209, 163, 125, 96, 75, 
           32, 199, 153, 115, 86, 65, 53, 210, 164, 126, 97, 76, 33, 200, 154,
            116, 87, 66, 54, 211, 165, 127, 98, 77, 34, 201, 155, 117, 88, 67,
            218, 172, 134, 105, 55, 212, 166, 128, 99, 228, 182, 144, 78, 222,
            176, 138, 109, 35, 202, 156, 118, 89, 226, 180, 142, 68, 219, 173,
            135, 237, 191, 106, 231, 185, 147, 240, 194, 56, 213, 167, 243, 
           129, 236, 190, 247, 100, 229, 183, 245, 145, 239, 193, 249, 79, 
           223, 177, 244, 139, 238, 192, 248, 110, 233, 187, 246, 149, 241, 
           195, 36, 203, 157, 119, 235, 189, 90, 227, 181, 143, 69, 220, 174, 
           136, 107, 232, 186, 148, 57, 214, 168, 130, 101, 230, 184, 146, 80,
            224, 178, 140, 111, 37, 204, 158, 120, 91, 70, 221, 175, 137, 108,
            58, 215, 169, 131, 102, 81, 38, 205, 159, 121, 92, 71, 59, 216, 
           170, 132, 103, 82, 39, 206, 160, 122, 93, 72, 60, 40, 207, 161, 
           123, 94, 73, 61, 41, 42, 43, 44, 45, 46, 47, 48, 49, 208, 162, 124,
            95, 74, 62, 217, 171, 133, 104, 83, 225, 179, 141, 112, 234, 188, 
           150, 242, 196, 250, 50}]}, 
         Annotation[#, "Charting`Private`Tag$384757#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl03e4j2UcwOHfUXE0SMrMijpkZO8ZKoTspIGkrGwZ2WQnslcqFGVUClEk
LaRlj2jYilC23N/LH/f5PO/ze693PM978rTu3PDFpEQiUd6fS/q3fsQQWlCZ
wlz220ldzlCepApFuOK3U/oxw3iKqjzA/2zgdTpSn6vO/0c/YThPU42i8SCp
EomvdBKdeCyuYfq0ruAVnuFBipHk/K91MvEiDeIanGElI2hJdYqTyvnf6BQ6
0zCuwVlWMZJW1OAW5/6ob9CbEtxg7ludShcacbu5bTqP/nEP/uVTRtGau5yz
WxdSk1sd/6Rz6UNJbjT3nU6jK1kd/6qLaUwGx9t1PnmNj+gA7jb+TZeRYnwi
npP/WE0Bc6M1l/6pz5LJeI8W0kWaT4/GHuhDepv+rAX1Tb1HD8eeal/Nrgdi
/3Wp3qfHY421lN6kG/V+na559JB2I5vxfl1CE+5wvEMXMJAcjn/XD2JNOMca
xtCGzH7fq+/xMOkc/6Jv0Y/SpDa3SWfQnabxTJznM8byHI9QhjTO36wz6UGz
uAYX+JxxtKUWZeN8LrKWV3me2pQjmbTcHN9Q7HWsZzwn6eN7ib2M9yYjd8b3
Ed9SavsS70eW2P9Yq1jr2ONYF3LGPpI71pRLrGM8L1An6fr/crL3+V5n0ZPH
417mduo7DIo95TJf8Fpc0+8HtV3c33ifFtb39V49psX00XgP3apv8zIV4p3N
bdHZ9KI5ebnCeibQnrpUjG8urhvfDinkp0B8MxTkKl8ykQ7Uo1Ksq/v8oHN4
iSdiDc3t0ncZHOvk+A/9MK5r/JeW0EJ6DdjZjU8=
           "]]}, Annotation[#, "Charting`Private`Tag$384757#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV02WAFWUYBtDZXUREEFCxQBC7k27pjqURlG7p7kbpEmmkG1tMuru7u2vp
9Hw/Ds/7vDPM3jt3JkOtZvFNY6IoSvBPxtgoWhAXRYW4av6RHtQjE5nJQlay
kT2c49zCXDP/RE/qkyN0+yIkmH+mFw3IGbp9Ua6bf6E3DVlrV5NkrNPHkyuc
oxfjhvlX+tCIdXa1SM56fQK5wzl6cW6af6MvjVlvV5un2KBPJE84Ry/BLfPv
9OOA3pr0HNSbsMFchxRs1Cdxxtyd9zir5w3XMJfktvkPrpi/4bOQ+kHZhldI
kiiKfpCH7O/JEeTmafs58mv7jbIuz9mllInlRLnJsZtyMGntssmUcpZ8LVzX
8bPmHryovy+Tyinhb8tzjj80jyKd/rl8Vs6Tb4QePr+5FHfMcXbjzAvNV+W3
ZAypH5JtycBh/b4cSR6a6ptkPVKxWb8lh5Cdyfo52ZMPOK/nY6G5NHfNf9Kf
w3o7XuWI3ozN5vrhnrFFn0L+8H/0Mtwz/8UAmrPFrgHPsFWfSoFwjl6W++a/
GUgLCoZuH88D8z8MoiWFKEwRilKM4pSgJKUoTRnKEk85ylOBiuF6rluOh+Z/
GUwrKoVuX55H5v8YQmu22jUMvxfb9GlUDufoFYhYpA+lDdv0RqRmuz6dKizS
KxLDYn0YR8ztwzPEUb0t282NwzPIDn0GVVmsVyKWJfpwjpo78DrH9HbsMDfh
eXbqt+VQcjBTPy978SFPes6mygv2j+T35OMLfYmsTByJnDdeLrW/Jvvzkl2m
8I7LGeF5lCMcP2buGJ5rjuvt2RneL15glz6LaizVq4Trs0wfyXFzJ97khN6B
XeHZDu8Wu/XZXDD35iMu6tVZZq7KYyzXE+QAMvOdfkJ25i1O6h3ZbW4Wvg97
9DtyGDmZo1+UffiYZL7jNHnJPjKPNufnS315uG8kDn/fsQlyhf11OZA0dllk
CjkzvFdylOMnzV3CvdHflk/IyTK9POX4g/DZeVnPG94lOTf85rKT43vMzcPv
raeRj8tJcq9jd+VwcpHKfraca39J9uUTkttPl5ftY8xjzAX4Sl8hq4VrslK/
IQeRNTwr+inZlXc4rXdmr7kFadmnz6MGK/XqJGGVPpou1GRVuIfhu7NaH0NX
alGb1eHzkJQ1+li6sU9vGe4N+/X51GGNXiM836zVx3Ha3I13OaN3Z7+5Fek4
oC/gsrkfn3JFj3VPxpoLkto8Pzybsq5j/wNksgSi
           "]]}, Annotation[#, "Charting`Private`Tag$384757#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwNw+NShAEAAMCvmV6kX9m27cuuy7qrLtu2e9t2ZzYhHA1F4oIgiJkYHwT3
HrrmnOMOmWSyKaaaZroZZppltjnmmme+BRZaZLElllpmuRVWWmW1NdZaZ70N
Ntpksy222ma7Dx657rwTDvvimVsuO22Hjx674YKfXrvvt7f+Oum7l+4accRX
z912xRk7ffLEmItOOWqX3Ybssdc++x3w2VM3XTLsmG9euOOqs3545Z5Rv7zx
wB/v/HPQf8ISLxM=
           "]]}, Annotation[#, "Charting`Private`Tag$384757#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV02WAVGUUBuC7sLt0N6hI2kVZqCiCoIC6disKBgh2g4odoIKK0i2dEkt3
dzdId3f6nB/Pvue8883szJ07ZRo2z2iWkiRJpj8dUpNkd1qS/EJt8rBNN5+O
7LH/yn3kZbtuAZ3oTBe60o3u9KAnvehNH/6hL/3ozwAGMojB7PW6v1GHfOzQ
LWQI++xtqUt+duoWkZLude3PU4FzuqHsN7fjfgqwS7eYLM73tb9ARc7rhnHA
/DsPUJDduiVkdb6f/UWu4IJuOAfNf1CPQuzRFXR2jLk51ViqS9X1N7/ElVzU
ldJNMX/EXYzQHZJ/Up/ClHVmtvycvR4vZM80v8XNXGNfIr9nmcfT7APMDali
XiuvivdsXiC/JuES+1T5MbeaN8kaXG9eHtdL/iTvljvlw/Jfr3/Y3J6a9gay
klwd10sWkeXknLg/5BfydvmfbCD3eX5hOdZeS74dn0FukLdwrXmp/CGuh3m7
XO456eaB5pepal4nr47raF4ovyGFS+3T5CfxvhnpuUfkXzxIUfbrijg3zvxO
fHZW6LLpBplfiWtKFkbpj8q/eYhiHNCtJLvzg+2N4n2TldH6Y7JDXC+Kc1C3
ihzOD7E35jpSGaM/LjuSQQkO6VaTyQl7Jx6hJId1axjLOMYzgYlMYjInnevM
o5TiiG4tOf3/ofZX4zsmjSn6U7ILj8U9QXnn5sovqW7eEtdOHnW2qBxvf5fb
WKfLpRtmfo0bSGeq/rTsyuPxvXBMt55pTOeMrhtPcBnHdRuYwVl7d56kNCd0
G8ntfw23v86NZGOm/pzswVNczkndJvI4P8L+BjeRnVn687InT1OGU7pizk4w
vxf3LJt1eeOeNzeJ+zx+R/ZF8ltyxPu2T5efck98fvsK+TOzPf+C7MUzVPbY
GlmWCuZ5shV3mLfK084XN08015bvx29CbpT1ZfW4b+QyWVf+KGvIHXFvxm/M
8/PJkfZ7ZVNZTa6X9WTl+M3IxbKO/E7eKbfJnHGdzTPkZ/HdmjfLmnGdzStl
a+b4Hxdlb56lHBU9Pl9+xRmPl7BPMn8Qn40tuvy6UeY3qUKu+J50M2WLeL/M
dS7R9TE/F/chZ3UldZPNH8b7ZauugG60uRlVyR3fo26WbEmt+L7tq2Sb+G7M
u2RGXHfP/x/9kek+
           "]]}, Annotation[#, "Charting`Private`Tag$384757#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"Test on dynamics\"", TraditionalForm], 
     PlotRange -> {{0., 3.12499993622449}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1b\"", "\"u1b\"", "\"x1b\"", "\"\[Theta]dot1b\"", 
       "\"xdot1b\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.863702134579542*^9, 3.8637021627135525`*^9}, 
   3.8637025210160646`*^9, 3.863702578124817*^9, 3.8637026714539957`*^9, {
   3.8637027226726294`*^9, 3.8637027640764*^9}, 3.8637029884806967`*^9, {
   3.8637033266226506`*^9, 3.8637033354478307`*^9}, 3.863879327529692*^9, {
   3.863884217207935*^9, 3.8638842652235885`*^9}, 3.8638842967265196`*^9, 
   3.8638860360506268`*^9, 3.8638906095889077`*^9, 3.863890848019706*^9, 
   3.8638910663699183`*^9, 3.863891132659732*^9, 3.8638911691100826`*^9, {
   3.8638913595922036`*^9, 3.863891384033392*^9}, 3.8638926082491283`*^9, 
   3.864131525163704*^9, 3.8641416796563787`*^9, 3.864143125130576*^9, {
   3.8642366677575245`*^9, 3.864236679721656*^9}, 3.8643991189557676`*^9, 
   3.8643998035201178`*^9, {3.86440821572911*^9, 3.8644082391544905`*^9}, {
   3.864412158578727*^9, 3.8644121612098713`*^9}, 3.864740161270382*^9, 
   3.864740548133564*^9, 3.8647411134926176`*^9, 3.8647411481275325`*^9, 
   3.864833837652205*^9, 3.8648362860677176`*^9},
 CellLabel->
  "Out[960]=",ExpressionUUID->"d1422a96-2a32-4a20-91b2-ea51205fa35c"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
jg7dGW+ywNc/6z0qXVNFR+kBA0cP4/crc6l4WWynIDL37/+xvo2B+o3eZxX/
40PSE6KtRni+2XNW7v41Jxp6n62rXoOfb6D73d6fPHQUdeDgj534/CcbL7Re
vUFHNQEGy9z/a+8vftxeu5mG3jJamzVx+Sz+Pe2Xz6ShpcJej2/i9Uz6hR6D
+lx+9EvZdkEjfr4Uv6S3s1p0pDG36dANfL7zcxcx+WI8nt9JWPYd1885zwKZ
kYU09Nzt0DNFfP+Diu3oaDgN5QTu3roJ17+hWvKErQweH/uufZXDxwcwHSer
YumoLDOPbxxf78S3huEjRjS0NmjvOi9cHpGKN6ceWuPnvyVeq4/3+z4JTlYb
E0RWXroqtp0MVHg5OVbWzhKMdt28InWFBUrtlS1R1TzoXmjqtBqeB/dZ+r4W
teBFc96HXGfoMJC9u2mBVD0vOlQxeGPZJTzeS5VvljzFh16t26uggvvjiyXz
Lu9r4UMnRDUlCvHzrzAYiT12nIbGC74/tcDl4S64qmDbQUMhl28Y7sDjL/vC
Jn5BK34kah/dU4r7o8qkkusvNj/6rPh203rc32zqv4qyLtFR2KtiPWNc/jeH
Q2bC++ko8376JVe8/9Cxwb1q7gLonM/IuCzujytzJU/SR3H7Xq4h5Iv74wm7
5/N/ugsif+VYjaBy3P+eizpyHvGiBQF71CqP4/llaLcYLOdD7hXWFr9x+7ns
9Olg9jM+FLPWjgjG89fDs2t141fQkOHGBU+T8PtQ+W3HJ/Cchlo3Hb5pgNvL
BtepQ3dW8yN7Ga2nBO6P6kKMD27x/GgLyyXHFvev4fsbm3k24fXXAVnFv7j8
6EClVngKHY3XBExq4vcXxzuQc2uLAHK+vd17Ez7+l2jRYcl8QXT2xe+5w3h9
pVaqs6vHlw9dbzbqK8LPs3zXkla3WT505WL3jWW4PciKvTuk7ENDmw/84jmC
yxe2WwNN0vD4wP63ygfPJ2KaT47DDX5kJKssb4TXR+H7NsmdnU9H33jlHL7g
+x8OK5ffeY+O0iQmr0Th8skmwvEQUQGUbnZ/ZD1ur9nLd54IKuBDOvpTg3dw
fxS9v/l9nSYNdSxU7byA3yeKkkltKKKhX1buP7Xwesaq0Ukk+Qs/qlxT1UPH
5x/+u+FepCF+/pNx2Vb4+gqM2mM9FXRkUah0UQn3p9s2xpehVRBd7wwWM2vF
/TfpXtKffj60a9s8PkFcvy+VjLn7LtKQdUU8/zh+vjMrlQ5GcflR7d0PYWfx
+Scy9VeEXaOjZeML+f9bH1VPJ3qDIl4vX/AwWo/Ll5392WwglYYyDB+Od+P2
WPEv1+r+R360kE96+zo8f6/JUvjwHehIZjajPQyfryZ/2BAK6OjFqyi5t7h+
zGuixRcsoCHO6JktM7i+k0fmJUqF0tCJ1dvpTni7+LwiTXUFHTUccpHfh4/X
dTTc2v2Mjip13LXb8fUM1mUxHQ7Q0B2PKpYPLo8/fYP9mVO4vA0iaw3wflao
5NzKIUFUscg9JaKDgU4SL3/+sqah+nzLDGV8fFvpvMg8Dzoqv7Wt+xg+PvO9
3RnndTRkpybmMoDrQ2jdxq82W+lIPKZdKhPv17htMbWbQcPrHPP8MFw+e//j
PnEBNHRMOjOIjbeT6hUlKsTpyN5Pd4c/Lm/5tQWpYo/oqH6JQH4ePl+pyfXH
y700ZPq7z+cqvv95pw3eM6Z0NFKoG3cE7+96ziOb60ZD0qLcy8n4/r9j78Ta
3cLrn0dVd/3w/n/a/ZHz1PB4Ne28zgifr6GvELtZB69f/VucL+P9Fxy5vBpH
aGhqlfhCV7z/aaS86dezdMSoV197AO9fHDdj/GRKEOVV/lm/rYuBPgjKSV+w
Owg6/n77WPYsGH3XNeBXyYMspn9E7RXB/bFGq1LSjBddZiWWGWgzUOjqwleT
tbzoakG9yTVH3D4vdSkvt+RD+eYvvlXj9bXkPs9Lh/7wIePmsbRw3B5+pM4x
Bws8n1TseW6Fy1O5bNfUhTYaCm/7ctobj0/jKZF3O07yowWtLDl+/H1wUXxw
4kM3P7ols2Ma4fGnLGpHypADHT1vD79miMu/+2CsqWsvHf3rO7f5ON6/kCcz
a4erACJM8k1m8feB0Da1crFhAbRj7bEkHdyfF1rZ5US54vVRVtUaOTw+eS2u
eTTykBe9VrT6shGPT9zoxPHlUnxoTc0ZBRM8PhWXNhrkReP58bHaxF48Pok8
DNdKX0ZDK55ff/YIv4929asfWNF4/ca3xs8N9x8+P0ImfBU/EixQvMfA34c6
Bx13HXrFj2K2qOrex+ONYnLvKaYCHT3a0n2zB5f/uejutuhkOlr/Q+G6Mm4f
O7n8EueUBdA6NPBICB9/U+gWHytHENWfEyLu4vHJb9kp1OvNhx7pX8lzwM8T
cTGg4fo0HzLRac/m/vd96vZJcNFV/L0jyW0+j8t37iDPAl4+fiRmcSSjAo9P
K335WVLX+dFKVwkrfzw+lZ/qf3twHp5fa081NeL7Z5js/KITQkc3+regCFy+
gleHPzgsEEABdRV75+LxRcD56PE7+Xyo4b72r0N4fAoinid1qNPQZyeLAVv8
Pvt5ttrkFdBQ5I9UJS88PjmuaHocVMqP2k/Hysni8+9OssV9DPD8mFSuY4ev
f+fbXryeoKOV9L/9K/D4gk4tXTf/ryBKf7++bRB/T5k28MSxe/nQwHVueyte
jxmH26TKnachUddEDuO/7zv1garrk3h9/OBevA8+n/DMzY3yoSOzYhPP/66v
v0Hqsr4CDY1xLCsl8fFnVzQIV72jIVZu+3JJfL0mtXV9FzP50a4C/gf6eHw6
Uc1Rf69JR16ftMuf/Ld+7/vUtz+fjsLv+MhG4/qp5BNesGw+DXltUf3Sgfv3
cbOVJ2fu0NDGwmnWPbw9E9AXILWMjoRWTNKO4OMTVQpq/kXTkd6Ndbb1+Hol
h2RbvfRoaO9dRvB/6/38lex+XUu8fvIOtvvPT57ebv0QMyCIuDJfIhXx+CSy
+uONdCsaGqo/m/Dfekcr+IpamTsd2QzczzPDxyu21h33XUNDgSMCGS34fe/b
1WtwQJWOdHoNcwi8P/3j1+GDdBo6+oku447LJ8m6pHLrBg2pv561Y/y3nhzu
e5whRkfy8/Ubw3F5lfb5HFzxEK+/InUVM/D5r+d0lqRo0ZCY6ekaT3z/uDts
vs6jdGS0sjPYFO9/QBdvjnahIYMrZ8yK8PV2nJ3e7RxAR4taT7/xwvvPu564
v0QFz19pBT3a+Hw3W47s0n10pPyPnuz93/gWZT+lc4iGKtFVAQ+8v/Z9T1OK
LR0JjDG+/rd++v7sM8/ZCUGksm3jswq8frrY09LvYUlDMu31T43x8XRxC+dm
Zzrq5b64eBgfH3nmU9ZXoCHGznKGM94vWWwvlGZMR+rcbxGWeD93sMkn8Dod
LQj53nEJbx/7qXFjsxIN2W4R4tmCj++JOr+5axeen/ISrIPx/trx/X2nD+Lv
bdVXl7zxft2ec11XrfDz+yfu/2/8vEZ7OpF2hY5qb6efP4m3PyYLVEdo4/Fc
4ITJf/PPZhP7icUWdMTr0yZ76L/vG0nfmJmtNPQ35VOo2X/f77vvCG4yweud
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
d3Nqts6TMSr/yPfD9+Lc4REq/1gaf0b5wJFhKv/4zl8qPPn9EJV/5Mk+6XWo
dYDKPzZf3V67RbOPyj+mK2182KjdQ+UfVX5bHonEK07S06LMehPynNqo/KOO
aJ12d3ATlX80Lry9qvZHNZV/9JjPt0ck5SuVf/wuuU/GaCSDyj/uUl25Uygr
kvI0MHXY1hxeSHlaj9iBvu6+csrTUs9+PEvTqqE8zX14QfemuY2UpwnKn1dw
6v1LedryZOWuPuM2ytPOzwt/UWzaQXna9r0KtSKj//t/X9NLGtfptkzK037N
684mnFiUpyV1rec7t+l/npYqJtHYE/8/T7P9I9rkXNZNeVqdQk6Fcng35Wkn
jl1qvyPYTXmarr+wh/Q2FuVptbnJ3+fxMSlPM255SSiFdVKeZtSmr5Da0U55
mlFwapFecSvlaZNR7UumaX8pTxN1leutvVVPeZqXyPK/+7qqKE+rH0vTNvz+
jco/RhtWH2UG5VD5x6JFKy5+5xZS+ccSdY51y59vVP7x3732fRPKlZSnFa5h
Vr5LraE87Wmj3Nvd9HrK01J07JvOZzdSnnblg7Xp1nn/+3/fd/4f3k5KtlCe
9l5W7xzveAvlaQ8ub06PLm39X/7RyOKvnuE4QfrUvPdG0jSlTsqnUne3RtGy
uiif+tEZlKkzyqR8Smty3OZgA4vyKbWY8uWpbv/zKUGF5/ubC7spn8qZI6mQ
ntVN+ZTYfuP+fWbd0PyrNeH1ihnYLpO8IzPh/4q083io9j4O4EJJDwlFkq5k
Dd0iaeH5jspDkq0iuwr3Xjw3UYlECymVSHailC0xClO2sUUmtIhSyBTjHIko
Ys4Mz+95ve78zH/ndbbfOfNbvuf9+hBQWqfqHrRuDtRyVf/+mjsEcyNJ7sRy
IdqgRc2nD/s5UGTVFmN3U4gWYy3FS2kcwL7FC57m5ZGNOM/Yf1W7LP7nU5xn
9Bp6aTsp14w9qmXJXnqFJxt7VHKd4UDA/WmmwHdYAQNdEU0D2Hdo4Zw0FScO
9h2Xa+mvefQh7DuxLSZnOvII7DtKax6Ith2c9x2P/hXPrBjzvvNFJ/fFSAOJ
fWfmrtfDoGASTj8y3qnQz4fFdV9EQj8SoPuXhl/mp1kISX3pVDMxBB45GsKh
w3NQcs1/1PQhB3IY5Z1mgUI0ReboJtkNg9iHnqtbyVgefY7zh11mVWvfM0px
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
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{1614, 1613, 382, 383, 384, 385, 386, 387, 388, 389, 
            390, 391, 392, 601, 544, 497, 459, 432, 416, 613, 556, 509, 471, 
            444, 625, 568, 521, 483, 393, 602, 545, 498, 637, 580, 460, 629, 
            572, 648, 525, 642, 585, 653}}]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{1614, 1616, 403, 656, 588, 645, 531, 578, 635, 484, 
            522, 569, 626, 446, 473, 511, 558, 615, 419, 435, 462, 500, 547, 
            604, 402, 401, 400, 399, 398, 397, 396, 395, 418, 434, 461, 499, 
            546, 603, 394, 445, 472, 510, 557, 614, 417, 479, 517, 564, 621, 
            433}}], 
           PolygonBox[CompressedData["
1:eJwV01dsTXEcB/DTkmpCrLT2iMSoerCChFgRI5oq1eKlxkWL0qLVpVYIMaIv
9uoLanuxPdjzxZaYQWLPF9uDz//hk9/3+zs3/3PuzbntYoWZBfFRFMXxiJiQ
kRBF6SySK1lIBeWUUUoJCyimiPnMo5qj3OQbbR0+gbnyLo5wg6+0sR9PoXyW
h/yji900dsqHuc4XWtuNo0B+RaLcJ5zNGf0Bf0nVp7JDfk5tuSezOaTXM/tR
zDX9M63kbObIjc3BVPBSH24upQ69w/Ny2n69OZLlNGA1AyjlvutrzaEs5o++
0uxMjO16lZnGChqyhoGU8cz1deYwllCLVfQgn4OujzCXUZe+FHHVfohZySe5
pZkVvrvcyBxEOS/0BLNX+D05pdc3+1PCPf03KfIUtslPiZe7M4sD+hU+0kIf
G55NPsldftHJbjJb5SfEyd2YyX79Mh9ormeGc+UT3OEnHe0msUXexyXe08xu
TDhH3kwNF3lHU/vRzJDzyGU6m9jLBd7SxGcywrsmH+c2P+hgN5GN8h7O84Zk
u1Hh3ZKPcYvvtLfLYYP8OPyR5K7h/uzWz/GaJD2d/zn0bIg=
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1Hl813McwPEdbaXEWisKO5KGITvklq1iXaa1WLpmioo2V45ypZAjOaJS
6XBUSKGiHJGzGx2uUCiKhBKheL4f/nju9fl8dvy+38/nUznVteU1iQkJCRf7
Eq3nyxt6B70poZAkkqlDCqnUjZ/nAOrTgANpyEEcTBqNSKcxGTShKYdwKM1o
zmEczhFkkkU2ObSIz/FsS/RO+tCOIo6Mz/e9N/Uu+tKek+IzrK/ScVxON1rG
s1p/S0fTjw60ieexvlof4QrKOSrey/pSvZsqzolnsvapTuU6To53sbZGH2UI
3TnW2iadyS20ij2y9rbeE3tPvvn3+jznxjuZf6bT4tmM/9brOc34F32ZU2Lf
zD/U8bEfxnu1Jt7d+Ee9UF/UrppMXyrM83SzVugs7aj/xpnrrXqW7tae+qqW
aQr9yI3z1Xdif/ReLdY/tJoC4x90Lp3jXlEa+66f6/TYP+N/9AZON/5VX+HU
uAfmH+kEauNczH/Sl+jBcebf6Gxu4+i4a9be1fu4JN4nzs3aFzqDG2Pv4n5Z
+1gnciUXcAxp1t/TMfSnU5yTtY36BMPiOeNuWlurj3FVnLn5Dp0fe83x5t/q
M4yIs6eRtff1fgZQaL5N58X+kGv+pT4ZZ2+8T4dzhvFvuijGZJqv00m0N/5L
r457YPyzVuoCPU/rUGl8gn4X+6bPxnvFP3L6cLthW/1dL9LX9HxNpYo883T9
IO6xjtUS/VN76aVapNtjH/UF7aJJdIlz0a/0KUqN9+tNnGm8SxfHmCzz9TqZ
a+IOmO/UhXH/aG2+RZ9jZJw/ja0t0we4LO53nKO1r/Vpbo47TLa1DTqFa+M9
44zIsL5cH2Rg7FnsRewXTXxvhT7EIMo4O56DE8mnqZ9ZqQ8zOPaNYnKsf6KP
MzT2KX7H2ladw6j4W+Z79HW6GddN/P//3wLz/wDLBpSJ
           "]]}, Annotation[#, "Charting`Private`Tag$384869#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV03eAz2UcB/Cfs0syE0rOjOwto5JNRxcatmR1Z0W24848485WhKJkR8Ms
yqpkFhWKMkPDzOb1/PG6z/vz+f5+3+9zz/P7RnfqFdszTSQSKe9PJ16IikRy
cUrezCK66csS4bB+Om3lIlyV9/IZrxNjlpvT8hY+ZAbtzIpyTd7H53Smmdkj
nJG/5iNm8gZd6BqeT3OfycNZ+RsWM4vuvGj+KH/JW/mY2bQ3K8b/8n6+oAex
Znk5J29jSbiPvhxpOKJ/hw5yca7LB1jLm7xklo/z8naWhvvqyxPFUf27dJSf
5Ib8I2/LtcjKOn1PtTIZOK4fpD5LduL0LdT8XJCHqs+zQ35LfZoHGUlDloW1
qRUYS1oSqM9EfnN9oPoMyWRjFE1IYU44f7UEY7ipH67WYwI/6QeotRnPwyTR
mMmsd72XWoWMjKABf5gPVp8jB/H6lupj/C3vpJ9cgyws18epFUnH7/q54bcl
l+SWfJAN9NZXJRN/hv2klfw4/8jfsoL3wm/N7Cluy4fYGNbLy2YF+Ff+jpXM
C/fmFfMn+E/+nlXMpw99wzmEtdM/nG3Yn7DH4RzD/8yQcG4MC+9VBvupJjCC
kSSSxChGM4axjONVzy3IRXkXn7AgvBdmpbgj/8ymsB59NTJzQj+e1+RoLoXn
q3X5IaxVrck4HiKRRkwixhpX+0y8XIn0HNO/H95FuTR35V/4kmRamxXisryb
NXzABCYyicmkkMoUptLGdwpzRd7Dpyykq1kZ7sm/8lXYa311HuBk2Fe1DjkZ
TVNSmebafU0HmgQ=
           "]]}, Annotation[#, "Charting`Private`Tag$384869#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1Hlgj3UYAPCfLSJSSOmQJpIcHUhRqZQKHYbQitIlaUNIJ9Kh0zG2sS22
ER2ikEmHdLhGRdvYusuRFFHJ0fF5/vj8nuf7vN/3/X3f7/u8b8rAjNT0KolE
Is3P5KREYnZyInEHLfnHeAsfMYVMpjKNLLLJYY65d9KKf40r+JjpvKx2F635
z7iST5jBXLW7OZsEX6l9yjvyh7iceuxWy2WefBDnUIWv1VaxXP4wnTmOPWp5
vCK/h3NJ4hu11bwrf4QrqM/vavm8Kh/MeSTzbcwXJ3ADKaxRe098lCs5nlKm
cQt7Hd8gvsiNNOMltdfEe2nDEWwikzS+c3yN+Aw9Yp1xDo3ZTA638j0FrDX/
ffExfqJL7AX57OAEyshiG/3jP5jFTvY5/zNxIlvpE/fKTH7mTCqYwXYG8gOF
Mce5r4tDaBvPjDyq8iVTuTnWat5a8VlSOZ0tTOc21jn+gTiGq2hAOdkM4A/H
Pxcn0ZfmsX61+eJ9tKNarEttnfgcPWlCidoKcSxXcyJ/qhXwhjyd8zmSH9XW
86F8HNdwEn+pFbJAnkF7qsd+x/OliIXGQ7mAGrGXsa/xDsU7Eb0fPR59G70Y
/RV9EPsX9xFrievHdXiTt1jE4hi73jAu5Kh4jrEfLIl5xsPpQM14RmpfsFL+
OF05mf1qb8c15ffTkVrRI2ob472Wj6cbp/C32tL4f/kILuLo6Am1EvF5etE0
+jfecfEJutOQA7EOcTL9OIviWLM4koupHT0Yey6+QG/OiN6J74L4JNdyKgfV
lsU9yEdxCcfwi1ppfCvkT3EdjTgU3464B/kDdOJYdqmVxXeCYuPRXEodflUr
j29CvNfxXkVfRv9ET8T/m/Mgl1GX39Q2x3dH/jTXcxqHY0/FKdxECyrJ5fbo
M4pi7aw093/tBsi8
           "]]}, Annotation[#, "Charting`Private`Tag$384869#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV0nfAjVUcwPFHyMwmZJctklGIUEhUZlkhUSKUzEhlRiilKEr2TmZRFCpC
i4zKJpUVyhY+vz8+7/fec85z33POvYU79GjSPUWSJJX8OZ4ySf5JlSRfMo5O
VKMAJ8ydjHlOcZoz/Mt/nI1x677iLZ7iHgpyLtbrWt7maapTiPPxObqO8XSm
BoW5EJ+v63mHZ7iXImRMnSS79WMG04KLsRf9mnfpQk1u5Sbr9+gihtCSS7Fv
/YYJdKUWt5HJ+r36CUNpxWXrz+m3TORZalOUzNbv08UMozVXrD+vG3iPbtxH
MbJYv1+XMJw2/G/9Bd3I+3Tnfopz1dxF/Y5J9KAOJbhmLonzsInJPEddSpIi
9s5mPuB56lGKrPZxQJcygse5IfbOFj6kJw9QmmzWH9RlvEZbUsbe+Z4pvEB9
ypDd+kO6nJG0I1Wchx/4iF48yO3ksP6wrmAU7UkdZ+RHptKbBpTlRhLP/KTT
6ENDypEmzm7uZ51OXx7iDtLGOc1t1Rn042HKk470ZCBj/Hbi9xDfcXxvcWdx
D3Fuz2/TmfTnEe4kp/E/9FNe54m4hzi38V90Fi9yi/fHdDX5vT6hBbWR5tG/
9XPeoAK5jB3RzxhNh7ivuB/j23U2A2hMxdhHPMPNcU/W7NA5DKQJlcgd92Ru
p87lJZpSOfYQ92Rul85jEM24i7xxT+Z+1fm8THPujnPF/Zn7TRfwCo9SJfZi
/E9dyRieJF/ctfHfdSGv8hhVY3/G/9JVjKVj/G9jR/UL3oznvT+uayjg9Ukt
pPn1OhQQm4k=
           "]]}, Annotation[#, "Charting`Private`Tag$384869#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV0ne8jmUcwOGXjMie2Y6VTSR7l2OTFdmElB3ZeytbmWUUZRQZ2bPsndWS
TVb2ntf9x/V+n/v3vOdznvd+7qhWnet0ihGJRPL6iIodibwWJxI5ovMZxIfU
JQtZyUZ2cvAGOclFbvKQl3zkpwAFeZNCFOYtivA2Cfyvo7qAwbShHkVJ6N4x
/Z4htKU+6c3P6y9MpAfFSGR+XH9gKO1oQAbzC7qaSXxGcRKbn9CFDOMj3iej
+UVdw2R6UoIk5n/oIobTPvx+sxu6lVk0JJPZJV3LFHqFPTG7qzuYS0mSmv2p
ixkR9sn6oe7h47Cv1jd1W/i+61f4OuydPtODNCKz9X+6Ljyn65h8GfZan+i7
ul/L6atUpXd4R3pP39GdWlpjU5l54R3oC62kh7W8xqMapayT6V9aUZeEPdUY
RDMyvHN9pHsp4zoOn4Szorf0V0q5jsU34Tzocz3EB0RZX9b1fBXOjfVTPUCf
cL6s7+suvg3PT3Kzv/VHRtEhnEuz2/obs2kczrLZFd3AVPqGZySF+T/6E6Pp
SBOyml/VjUyjH2VJaX5SlzKGTjQNe00q9/7VZXxOZ5qFfSS1e6f0Z76gC82p
EPYzvJPw3sLeE83rvn9alzOWrrQgm/k13cR0+lOZNOZndAXjKGT9WPeF53Yd
lyp0s86jd3Q7c2hJdrPrupkZDKAKac3P6krG8ymtqEo1qlODmtSiNu+Rzt+d
01VMoDutyWH+v25hJgMpYPZAd/Mdxawj/B72R+NTnTrWLwFvf5Do
           "]]}, Annotation[#, "Charting`Private`Tag$384869#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"LQR feedback solution\"", TraditionalForm], 
     PlotRange -> {{0., 3.12499993622449}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1c\"", "\"u1c\"", "\"x1c\"", "\"\[Theta]dot1c\"", 
       "\"xdot1c\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.863702134579542*^9, 3.8637021627135525`*^9}, 
   3.8637025210160646`*^9, 3.863702578124817*^9, 3.8637026714539957`*^9, {
   3.8637027226726294`*^9, 3.8637027640764*^9}, 3.8637029884806967`*^9, {
   3.8637033266226506`*^9, 3.8637033354478307`*^9}, 3.863879327529692*^9, {
   3.863884217207935*^9, 3.8638842652235885`*^9}, 3.8638842967265196`*^9, 
   3.8638860360506268`*^9, 3.8638906095889077`*^9, 3.863890848019706*^9, 
   3.8638910663699183`*^9, 3.863891132659732*^9, 3.8638911691100826`*^9, {
   3.8638913595922036`*^9, 3.863891384033392*^9}, 3.8638926082491283`*^9, 
   3.864131525163704*^9, 3.8641416796563787`*^9, 3.864143125130576*^9, {
   3.8642366677575245`*^9, 3.864236679721656*^9}, 3.8643991189557676`*^9, 
   3.8643998035201178`*^9, {3.86440821572911*^9, 3.8644082391544905`*^9}, {
   3.864412158578727*^9, 3.8644121612098713`*^9}, 3.864740161270382*^9, 
   3.864740548133564*^9, 3.8647411134926176`*^9, 3.8647411481275325`*^9, 
   3.864833837652205*^9, 3.8648362862656536`*^9},
 CellLabel->
  "Out[961]=",ExpressionUUID->"03f4b302-9cb5-4d8e-8007-4a77d652049e"]
}, Open  ]],

Cell["\<\
Understand the performance of the functions wrt random initial conditions\
\>", "Text",
 CellChangeTimes->{{3.863702871824973*^9, 3.86370289295422*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"b6d5a503-f5ca-471f-9280-ef8cf6caad0d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ffCartPendulum", "[", 
   RowBox[{
   "ICs_", ",", "n_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "A_", ",", 
    "order_", ",", "maxIter_", ",", "InitGuess_"}], "]"}], ":=", "\n", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x", ",", "data", ",", "xdot", ",", "f", ",", "\[Theta]", ",", 
      "\[Theta]dot", ",", "\[Lambda]1", ",", "\[Lambda]2", ",", "\[Lambda]3", 
      ",", "\[Lambda]4", ",", "\[CapitalDelta]t", ",", "bcs", ",", "eqns", 
      ",", "sv", ",", "froot", ",", "xff", ",", "xdotff", ",", "xff0", ",", 
      "xdotff0", ",", "\[Theta]ff0", ",", "\[Theta]dotff0", ",", "uff0", ",", 
      "\[Theta]ff", ",", "\[Theta]dotff", ",", "uff", ",", "\[Lambda]1ff0", 
      ",", "\[Lambda]2ff0", ",", "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", 
      RowBox[{"xGuess", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         SubscriptBox["xGuess", "i"], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"\[CapitalDelta]t", "=", 
      RowBox[{"\[Tau]", "/", "n"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"{", 
        RowBox[{
        "x_", ",", "xdot_", ",", "\[Theta]_", ",", "\[Theta]dot_", ",", 
         "\[Lambda]1_", ",", "\[Lambda]2_", ",", "\[Lambda]3_", ",", 
         "\[Lambda]4_"}], "}"}], "]"}], ":=", 
      RowBox[{"{", "\n", "\t", 
       RowBox[{"xdot", ",", "\n", "\t", 
        RowBox[{
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"A", " ", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
         " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"A", " ", 
            RowBox[{"\[Theta]dot", "^", "2"}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
           RowBox[{
            RowBox[{"1", "/", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"A", " ", 
                RowBox[{
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
              ")"}]}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Lambda]4", " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", "\[Lambda]2"}], 
             ")"}]}], "+", 
           RowBox[{"A", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", "\n", 
        "\t", "\[Theta]dot", ",", "\n", "\t", 
        RowBox[{
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"A", " ", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
         " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{"1", "/", 
               RowBox[{"(", 
                RowBox[{"1", "-", 
                 RowBox[{"A", " ", 
                  RowBox[{
                   RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
                ")"}]}], ")"}]}], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "\[Lambda]2"}], " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
              RowBox[{"\[Lambda]4", " ", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
             ")"}]}], "-", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "-", 
           RowBox[{"A", " ", 
            RowBox[{"\[Theta]dot", "^", "2"}], " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", "\n", 
        "\t", "0", ",", "\n", "\t", 
        RowBox[{"-", "\[Lambda]1"}], ",", "\n", "\t", 
        RowBox[{
         FractionBox["1", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"A", " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "3"]], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["A", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"A", " ", 
               SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "-", 
              "\[Lambda]4"}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "5"]}], "+", 
           RowBox[{
            SuperscriptBox["A", "3"], " ", 
            RowBox[{"(", 
             RowBox[{"\[Lambda]2", "-", 
              RowBox[{
               SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
             ")"}], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "6"]}], "-", 
           RowBox[{
            FractionBox["1", "2"], " ", 
            SuperscriptBox["A", "2"], " ", 
            RowBox[{"(", 
             RowBox[{"\[Lambda]2", "-", 
              RowBox[{
               SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
             ")"}], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "4"], " ", 
            RowBox[{"(", 
             RowBox[{"4", "-", "A", "+", 
              RowBox[{"A", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}], "-", 
           RowBox[{"A", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "\[Lambda]2"}], "+", 
              RowBox[{
               SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}], "+", 
              RowBox[{"3", " ", "\[Lambda]2", " ", "\[Lambda]4", " ", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"A", " ", 
               SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "-", 
              "\[Lambda]4", "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", "A", " ", 
                  SuperscriptBox["\[Lambda]2", "2"]}], "+", 
                 SuperscriptBox["\[Lambda]4", "2"]}], ")"}], " ", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
              RowBox[{"2", " ", 
               SuperscriptBox["A", "2"], " ", 
               SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2", " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], "+", 
           RowBox[{"A", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "3"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "2"}], " ", "A", " ", 
               SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "+", 
              RowBox[{"2", " ", "\[Lambda]4"}], "+", 
              RowBox[{
               SuperscriptBox["\[Lambda]4", "2"], " ", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
              RowBox[{"2", " ", "A", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"A", " ", 
                  SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], 
                 "-", "\[Lambda]4"}], ")"}], " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "\[Lambda]2"}], " ", "\[Lambda]4"}], "-", 
              RowBox[{"A", " ", 
               RowBox[{"(", 
                RowBox[{"\[Lambda]2", "-", 
                 RowBox[{
                  SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
                ")"}], " ", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
              RowBox[{"A", " ", "\[Lambda]4", " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]}], ")"}]}],
         ",", "\n", "\t", 
        RowBox[{
         RowBox[{
          RowBox[{"4", " ", "/", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"A", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A", "-", "2"}], 
            ")"}]}], " ", 
          RowBox[{"(", 
           RowBox[{"A", " ", "\[Theta]dot", " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{"\[Lambda]2", "-", 
              RowBox[{"\[Lambda]4", " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}]}], ")"}]}], 
         "-", "\[Lambda]3"}]}], "\n", "}"}]}], ";", 
     StyleBox["\[IndentingNewLine]",
      FontWeight->"Plain"], 
     RowBox[{
      StyleBox["xGuess",
       FontWeight->"Plain"], 
      StyleBox[" ",
       FontWeight->"Plain"], 
      StyleBox["=",
       FontWeight->"Plain"], 
      StyleBox[" ",
       FontWeight->"Plain"], 
      RowBox[{
       StyleBox["Table",
        FontWeight->"Plain"], 
       StyleBox["[",
        FontWeight->"Plain"], 
       RowBox[{
        RowBox[{
         StyleBox["If",
          FontWeight->"Plain"], 
         StyleBox["[",
          FontWeight->"Plain"], 
         RowBox[{
          StyleBox[
           RowBox[{"i", " ", "!=", " ", 
            RowBox[{"-", "1"}]}],
           FontWeight->"Plain"], 
          StyleBox[",",
           FontWeight->"Plain"], 
          StyleBox[
           RowBox[{
            SubscriptBox["xGuess", 
             RowBox[{"i", "+", "1"}]], " ", "=", " ", 
            RowBox[{
             SubscriptBox[
              StyleBox[
               RowBox[{"x", 
                StyleBox["Guess",
                 FontWeight->"Plain"]}]], "i"], " ", "+", 
             RowBox[{"\[CapitalDelta]t", "*", 
              RowBox[{"f", "[", 
               SubscriptBox["xGuess", "i"], "]"}]}]}]}],
           FontWeight->"Plain"], 
          StyleBox[",",
           FontWeight->"Plain"], 
          RowBox[{
           SubscriptBox[
            StyleBox["xGuess",
             FontWeight->"Plain"], "0"], " ", "=", " ", 
           RowBox[{"{", 
            StyleBox[
             RowBox[{
              RowBox[{"ICs", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"ICs", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", 
              RowBox[{"ICs", "[", 
               RowBox[{"[", "3", "]"}], "]"}], ",", 
              RowBox[{"ICs", "[", 
               RowBox[{"[", "4", "]"}], "]"}], ",", 
              RowBox[{"InitGuess", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"InitGuess", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", 
              RowBox[{"InitGuess", "[", 
               RowBox[{"[", "3", "]"}], "]"}], ",", 
              RowBox[{"InitGuess", "[", 
               RowBox[{"[", "4", "]"}], "]"}]}],
             FontWeight->"Plain"], 
            StyleBox["}",
             FontWeight->"Plain"]}]}]}], 
         StyleBox["]",
          FontWeight->"Plain"]}], 
        StyleBox[",",
         FontWeight->"Plain"], 
        StyleBox[
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"-", "1"}], ",", 
           RowBox[{"n", "-", "1"}]}], "}"}],
         FontWeight->"Plain"]}], 
       StyleBox["]",
        FontWeight->"Plain"]}]}], 
     StyleBox[";",
      FontWeight->"Plain"], "\n", 
     RowBox[{"bcs", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"x", ",", " ", "0"}], "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"xdot", ",", " ", "0"}], "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"x", ",", " ", "n"}], "]"}], "==", 
         RowBox[{"Subscript", "[", 
          RowBox[{"xdot", ",", " ", "n"}], "]"}], "==", "0"}], ",", 
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"\[Theta]", ",", " ", "0"}], "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"\[Theta]dot", ",", " ", "0"}], "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "4", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"\[Theta]dot", ",", " ", "n"}], "]"}], "==", "0"}], ",", 
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"\[Theta]", ",", " ", "n"}], "]"}], "==", "\[Pi]"}]}], 
       "}"}]}], ";", "\n", 
     RowBox[{"eqns", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Join", "[", 
        RowBox[{"bcs", ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Thread", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
               RowBox[{"Subscript", "[", 
                RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], "==", 
             "\n", 
             RowBox[{
              RowBox[{
               RowBox[{"1", "/", "2"}], " ", "\[CapitalDelta]t", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"f", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}], "]"}], "+", 
                 "\n", 
                 RowBox[{"f", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], 
                  "]"}]}], ")"}]}], "+", "\n", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"x", ",", " ", 
                  RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"xdot", ",", " ", 
                  RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]", ",", " ", 
                  RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]dot", ",", " ", 
                  RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]1", ",", " ", 
                  RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]2", ",", " ", 
                  RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]3", ",", " ", 
                  RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]4", ",", " ", 
                  RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}]}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
       "]"}]}], ";", "\n", 
     RowBox[{"sv", " ", "=", " ", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", "\n", 
            "\t\t\t\t\t", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "7", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "8", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", "1"}], 
       "]"}]}], ";", " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"froot", ",", "data"}], "}"}], "=", 
      RowBox[{"Reap", "[", 
       RowBox[{"FindRoot", "[", 
        RowBox[{"eqns", ",", "sv", ",", 
         RowBox[{"MaxIterations", "->", "maxIter"}], ",", 
         RowBox[{"EvaluationMonitor", ":>", 
          RowBox[{"Sow", "[", 
           RowBox[{"Norm", "[", 
            RowBox[{
             RowBox[{"Flatten", "[", 
              RowBox[{"Join", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   SubscriptBox["x", "n"], ",", 
                   SubscriptBox["xdot", "n"], ",", 
                   SubscriptBox["\[Theta]", "n"], ",", 
                   SubscriptBox["\[Theta]dot", "n"]}], "}"}], " ", "-", " ", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], 
                ",", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   SubscriptBox["x", "0"], ",", 
                   SubscriptBox["xdot", "0"], ",", 
                   SubscriptBox["\[Theta]", "0"], ",", 
                   SubscriptBox["\[Theta]dot", "0"]}], "}"}], " ", "-", " ", 
                 "ICs"}], ",", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"Thread", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[CapitalDelta]t", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}], "]"}], "+", 
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}]}], ")"}]}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}],
               "]"}], ",", "\"\<Frobenius\>\""}], "]"}], "]"}]}]}], "]"}], 
       "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"xff0", "=", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", 
     RowBox[{"xdotff0", "=", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", 
     RowBox[{"\[Theta]ff0", "=", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", 
     RowBox[{"\[Theta]dotff0", "=", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", 
     RowBox[{"\[Lambda]1ff0", " ", "=", " ", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", 
     RowBox[{"\[Lambda]2ff0", " ", "=", " ", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", 
     RowBox[{"\[Lambda]3ff0", " ", "=", " ", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", 
     RowBox[{"\[Lambda]4ff0", " ", "=", " ", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
     RowBox[{"uff0", "=", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"1", "/", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"A", " ", 
                RowBox[{
                 RowBox[{"Cos", "[", 
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}], "^", 
                 "2"}]}]}], ")"}]}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], 
               RowBox[{"Cos", "[", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}]}], "-", 
              RowBox[{"Subscript", "[", 
               RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}]}], ")"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
     "\n", 
     RowBox[{
      RowBox[{"xff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xdotff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "\[Pi]"}], "]"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"uff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"uff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\n", "\n", 
     RowBox[{"{", 
      RowBox[{
      "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
       "uff", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
       "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "data"}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.863893336562357*^9, 3.8638935104547806`*^9}, {
   3.863893544100028*^9, 3.863893549383339*^9}, 3.864135408269006*^9, {
   3.864142771556004*^9, 3.8641427819726334`*^9}, 3.8642366861025925`*^9, {
   3.864739935175744*^9, 3.8647399858885136`*^9}, {3.8647400853146915`*^9, 
   3.8647401070617313`*^9}, {3.8647401401521406`*^9, 3.86474014471668*^9}, {
   3.8647405605585876`*^9, 3.8647405780110025`*^9}, {3.864836261999449*^9, 
   3.864836292577626*^9}, 3.864836774400854*^9, {3.8648369006912866`*^9, 
   3.8648369199401035`*^9}, {3.8648369783853292`*^9, 
   3.864836986117846*^9}},ExpressionUUID->"af3ea33d-8e3a-4566-b4c0-\
08bbf9c4fe8b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  StyleBox[
   RowBox[{"n", "=", "20"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  RowBox[{
   StyleBox["\[Tau]",
    FontWeight->"Plain"], 
   StyleBox["=",
    FontWeight->"Plain"], "5"}], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Tau]1", "=", 
    RowBox[{"\[Tau]", "*", "1.25"}]}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"A", "=", "0.2"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"order", " ", "=", " ", "4"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"maxIter", " ", "=", " ", "30"}],
   FontWeight->"Plain"], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotMin", " ", "=", " ", 
    RowBox[{"-", "2"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotMax", " ", "=", " ", "2"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Min", " ", "=", " ", 
    RowBox[{"-", "\[Pi]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Max", " ", "=", " ", "\[Pi]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]dotMin", " ", "=", " ", 
    RowBox[{"-", "2"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{"\[Theta]dotMax", " ", "=", " ", "2"}],
   FontWeight->"Plain"], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"xdotMin", ",", "xdotMax"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Init", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]Min", ",", "\[Theta]Max"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]dotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]dotMin", ",", "\[Theta]dotMax"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"ICs", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "xdotInit", ",", "\[Theta]Init", ",", "\[Theta]dotInit"}], 
    "}"}]}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"InitGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.1"}], ",", "0.1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.1"}], ",", "0.1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.1"}], ",", "0.1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.1"}], ",", "0.1"}], "}"}], "]"}]}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"InitGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
       "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
       "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "data"}], "}"}], "=", 
     RowBox[{"ffCartPendulum", "[", 
      RowBox[{
      "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", "order", 
       ",", "maxIter", ",", "InitGuess"}], "]"}]}], ";"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1b", ",", "xdot1b", ",", "\[Theta]1b", ",", "\[Theta]dot1b", ",", 
       "u1b", ",", "J1"}], "}"}], "=", 
     RowBox[{"testSwingUp", "[", 
      RowBox[{"ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "u1a", ",", "A"}], 
      "]"}]}], ";"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x1c", ",", "xdot1c", ",", "\[Theta]1c", ",", "\[Theta]dot1c", ",", 
      "u1c", ",", "J"}], "}"}], "=", 
    RowBox[{"testWithFB", "[", 
     RowBox[{
     "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
      "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A"}], "]"}]}], 
   ";", 
   RowBox[{"p1a", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1a", "[", "t", "]"}], ",", 
        RowBox[{"u1a", "[", "t", "]"}], ",", 
        RowBox[{"x1a", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1a", "[", "t", "]"}], ",", 
        RowBox[{"xdot1a", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1a\>\"", ",", "\"\<u1a\>\"", ",", "\"\<x1a\>\"", ",", 
         "\"\<\[Theta]dot1a\>\"", ",", "\"\<xdot1a\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Feedforward solution\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"p1b", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1b", "[", "t", "]"}], ",", 
        RowBox[{"u1a", "[", "t", "]"}], ",", 
        RowBox[{"x1b", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1b", "[", "t", "]"}], ",", 
        RowBox[{"xdot1b", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1b\>\"", ",", "\"\<u1b\>\"", ",", "\"\<x1b\>\"", ",", 
         "\"\<\[Theta]dot1b\>\"", ",", "\"\<xdot1b\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Test on dynamics\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"p1c", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1c", "[", "t", "]"}], ",", 
        RowBox[{"u1c", "[", "t", "]"}], ",", 
        RowBox[{"x1c", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1c", "[", "t", "]"}], ",", 
        RowBox[{"xdot1c", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1c\>\"", ",", "\"\<u1c\>\"", ",", "\"\<x1c\>\"", ",", 
         "\"\<\[Theta]dot1c\>\"", ",", "\"\<xdot1c\>\""}], "}"}]}], ",", 
      RowBox[{
      "PlotLabel", "->", "\"\<Backward Integrate feedback solution\>\""}], 
      ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"p1d", "=", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"data", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"AspectRatio", "->", 
        RowBox[{"1", "/", "3"}]}], ",", 
       RowBox[{"ImageSize", "->", "400"}]}], "]"}]}], ";"}],
   FontWeight->"Plain"], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{"Grid", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"p1a", ",", "p1b"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"p1c", ",", "p1d"}], "}"}]}], "}"}], "]"}],
   FontWeight->"Plain"], 
  StyleBox["\[IndentingNewLine]",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   StyleBox[
    RowBox[{
     RowBox[{"\[Lambda]1ff0", "[", "0", "]"}], ",", 
     RowBox[{"\[Lambda]2ff0", "[", "0", "]"}], ",", 
     RowBox[{"\[Lambda]3ff0", "[", "0", "]"}], ",", 
     RowBox[{"\[Lambda]4ff0", "[", "0", "]"}]}],
    FontWeight->"Plain"], 
   StyleBox["}",
    FontWeight->"Plain"]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.863702943662017*^9, 3.863703035828568*^9}, {
   3.8637035036430883`*^9, 3.8637035037600527`*^9}, {3.863703942891737*^9, 
   3.8637039537012815`*^9}, {3.8638793561155577`*^9, 
   3.8638793562315187`*^9}, {3.863890389284317*^9, 3.8638904368171277`*^9}, {
   3.863890551127593*^9, 3.863890597328827*^9}, 3.863890716823636*^9, 
   3.8638909523833485`*^9, {3.8638911861186466`*^9, 3.863891231675086*^9}, 
   3.8638912749332604`*^9, {3.863891409492258*^9, 3.8638914236697264`*^9}, {
   3.8638935298715763`*^9, 3.863893532749655*^9}, {3.8638935699717607`*^9, 
   3.8638935749001856`*^9}, {3.8638936191810327`*^9, 3.863893634085269*^9}, {
   3.863893921803315*^9, 3.86389396796556*^9}, {3.8638940391558075`*^9, 
   3.863894080084726*^9}, {3.8638941355729923`*^9, 3.8638941356839547`*^9}, {
   3.86389427077378*^9, 3.863894270855754*^9}, 3.864132937101755*^9, {
   3.8641329740867853`*^9, 3.864132993387539*^9}, {3.86413303407837*^9, 
   3.864133049119502*^9}, {3.8641330991942964`*^9, 3.8641331354165735`*^9}, {
   3.864133240558546*^9, 3.8641332475682774`*^9}, {3.8641337526108294`*^9, 
   3.8641337885471992`*^9}, {3.8641338280264225`*^9, 
   3.8641338296229057`*^9}, {3.8641417184758177`*^9, 
   3.8641417253026075`*^9}, {3.864141818165553*^9, 3.864141824729431*^9}, {
   3.8641420479491887`*^9, 3.864142073292987*^9}, {3.864142809081861*^9, 
   3.8641428223905535`*^9}, {3.8641428662393637`*^9, 3.864142907413038*^9}, {
   3.8641429688551536`*^9, 3.8641430039408007`*^9}, 3.8641430624478636`*^9, {
   3.8648339813450484`*^9, 3.8648339857546296`*^9}, {3.8648340453384914`*^9, 
   3.864834073060585*^9}, {3.8648369253483677`*^9, 3.8648369307806225`*^9}, {
   3.8648369722822905`*^9, 
   3.864836975137374*^9}},ExpressionUUID->"3024c605-13d1-4af1-8ddb-\
6b0488dd66d7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   RowBox[{"-", "1.757765140319389`"}], ",", 
   RowBox[{"-", "0.6120212326803252`"}], ",", "0.363208222721755`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.8641430640893307`*^9, {3.864143094166597*^9, 3.864143104412281*^9}, 
   3.8642366895364823`*^9, {3.864399127566967*^9, 3.8643991927177773`*^9}, 
   3.864408290535779*^9, {3.8644084656048393`*^9, 3.864408535203203*^9}, {
   3.8644121372506638`*^9, 3.8644121664991503`*^9}, 3.8647400020413437`*^9, {
   3.864740112446008*^9, 3.8647401315408964`*^9}, 3.8647405821656713`*^9, {
   3.8647411204603877`*^9, 3.8647411572666073`*^9}, {3.864833847774952*^9, 
   3.864833885588805*^9}, {3.864833956755945*^9, 3.8648339894734354`*^9}, {
   3.864834046285186*^9, 3.8648340736853848`*^9}, {3.864834135424553*^9, 
   3.864834160853384*^9}, {3.864834242975005*^9, 3.8648342537785344`*^9}, {
   3.864834347334482*^9, 3.8648343648978415`*^9}, {3.864834756360094*^9, 
   3.864834773550572*^9}, 3.864836297439065*^9, {3.8648363491054688`*^9, 
   3.8648363583734913`*^9}, {3.8648364042357593`*^9, 3.864836411292493*^9}, 
   3.8648367773808966`*^9, {3.8648369316793327`*^9, 3.8648369593094573`*^9}},
 CellLabel->
  "Out[1211]=",ExpressionUUID->"aaf55a68-5511-4526-96e7-eeb42df34e4e"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
W82VuMmY1UQ8rESc74Yv9UziYXtlTi3df5ZJPOxn28aHk6+biIdtruLjljpY
Tzzs3pnxDh8zKomHlYVakwIWJcTD8h+rb60U/EE8bMaq2YorxLKIhxVnPoy+
GR5FPGz6JXA/2TiR9GPfmuy96bLwM+nHNlwUebbiQRHpx34NdQiWVakE2MOG
BN5y1NraCLCHlbIXz79q0wqwh72We0dF/AI1r/7xsMvPP0TetEGAPaxwQQFL
TmYEYA87vfhDpWzGBMAedmYXql28kBtiD3tixOMl7QkNYg9rkCbI7dlAg9jD
Nr740noyixtiD1vJ//uRfOs06cd6bF9Z7jw9Ts6fFMuUavGa+Hv+ZCXfKpXP
u0fI+ZPL50zYF8VyyPmT9C0tV7XHOAB7WCB1aV1M3Ajpx5687GW3ddco6cd6
vtVY1j42ArCH1Q1fLva5kw2whw29/1l5qn0AYA+rb7ZE1ft2O8Ae1uf01TXK
al/A/yseVtv9qtCmxA8Ae9iouYeMFSf+eljtj1aTZ5MbiIfdKqFrIq3MJB42
+LfuY/cWJvGwDYvu7clLbCYe1nvxa8dVbo3Ep3rRQ6byPjYD7FNNggSUzmzt
ANinukTyWxdc6QfYp8bOcPF/4jwMsEcVmj3buTh5GmCPyud1/l4EN/V8/em3
BqVbNzczaVAjsXzNO65ZsKsktkTSkwaxV8071/s2o4kLYq/qEb9NOqBhEmCv
OrHhvKuYyW+AveotjTd+PpMjAHvVYlXtFfrlHIC9qnv6FtXUdxyAvarIqc9P
lPVGSM918Yq9pZ4zRoGNT/DnqQcMKLhlZWos9bwt3y1SP7FACGrYBOaEbR4B
2LPa7b3R/0x2GGDPapkoniO5vY/0YJ85HlXM66sD/1fP+rRm1QXegXyAPatG
TJU5t2EO8azLm1Js6rtriWfd0dA2U5O6n9izWije23loiEk8a3ZYtsKs+Uzi
WVflN3AlLm0ivtTPK2ls0YUmgH0pxyJHdOpzG8C+1E6/6+OWk70A+1Kht+un
Zm8bAtiTShk6v/sFpgD2pC+iETQL4oa4x5r0kXfZ2u80GOn0LVDmAx2eDAx6
UPeBBrE3tYyfw7f9ADfE3nR1Cc9nZsPfPuuZsuxNGyXHAfam8rzWSr/tRwH2
pmMv7Vx9Zo4A7E13JY3wOcdxAPamIxedrwysGAHYmx69qW6yrHIEaPUUHrvv
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
uRJgv6hJV0hZXkjNp3984rWonku7T3D+l0/0EJK9uiFrCtzknju0fBu1P/3j
E70ZTyZSP1PX71vauvAmBjwk16jwmhov237x5c74OQ1m/vzxUW1uFcAekbHr
6vwnSdTf/+MP9WfdERZdzwGbBx+tWKw1DUJSGR7nNlWBj149u6+X0+Hu3AYZ
ey828uWVLn3FIwQrzmRFy+hxQP1puTep26aAoeHEaZklVQB7Qx4h8T3X86n1
h81PmS2fGPDJct2p0iPUfoNmobeah9pf38iyLqaej75zFrTMVDr8dNllhSj1
fVJOnp+OHWRAg9pbCs/NOMQXXqs7tmHk3F9feKB4pCE0m41sFnVccXnFgNGn
7ks+0uaAec2Fw4J3pkHAnLspSRJVAHvCpzHV4vVHqOt7XK2s03kKbLfSln8g
S+3//vjB9V/HdOWp9YJf5sv67iIGLHlTox9hyfmPXlDd0r9sO2uc9BbfSmtV
+v4YIF4w0cBbf5F5C/GCHNNNPk8Uy4kXPDlRKpz18yvxgpHPKjQ4Ei+JFyw6
xu3sZ+ZI+oiedeV5j7cWk/PJy7y55lYEl5Hzye9wjj5M/l1BzidPaLruv4C6
f7ineN6GW3WvWyXA/lCtz10n61EZ8YfHJUIEe0UKiT/8/xq796gY0zgO4IOS
lGqmiNBFUUtR0kXheV0i1FCa5NJGF7ksWSqRLhJtdaS2Qie2NTjSRCGRab1F
KRUqZEbpKrVquk3vi0zv7HPO9jydwx+7f75n/prfec7v933O+ZzfY3Qklivl
FmB/OOCyIcpjXDHenygrVt+muKIT7090IqYPnQnpJ5E/TLxUcXSocpBE/rDn
Soe7sHL0PXNfuw0nVOuleL9itk35vPhzvXhf4iKJrMTHogV7wn27p34i73WN
esIa4m2VzgD2hKFb4rokqynsCVMUpY5R8PwjTzhXUs5oW456wsZzqSUNCaOe
MIp+bsbRGvWECzqFnfZNj/+3J/x8P6nYP5DG+xSzdO3fRC7qwp6wnW631g1p
xJ5QR145Xu/uS+wJXa02bzWvFmJPKEy75aiYmkGi98klXRbGobJX+H3yRUxu
S0xnHX6fnP+g6UxGlQjIpysYmfHloPpDuo1khhigfYpNa371b/B8C5BPvHHc
Q2thZy32iVM4l/VnUU8B2qd4cU96GHUzgkRe0W3btaA1/RISecXD+nOt3+2Q
ksgrPgvgvfBMp0jkFfsPGndtc6DwvsXZ6h/b7o4fIJE3rMr2sE2b2Ye9Ycuh
g5nuHVLsDbnBBbpF2jT2hjprPvJDDWnsDWdMbt5+O1eKvWE24buk5J4Ee0Pr
oddOj/X+2xsiT9gSOatH8LYWe8J8H+VxdxKKyfcyA1UwLANDHOGp7gARcF5y
IWz5DDmInL3irg/sv5t2beCbprIIBVdFb1WY15E3tNv4df4foQMk8oa/X4ty
ZVbDeTHiDR3tWVciLsN+M+IHk+UhRoGqUuwHbcYLC68/orAfvFlw7+nAVhr7
QcX3f429c2rwBz8YVusXranGANOhTDpETQxEwzZ+qlosIsv4dcPjJhGwlFU3
sDljCO7O/BsXkuoA8oN9xbT6ZZNBEvnB5vtu+R/KKJJo144Od5xIdOT5Ghy/
MkgiH1jhOk6uc30Q+0DhpFario009oH8ns376SLqBx8YpMTuUS6QAZc6zkE7
WxEIcvLOWi9mgNZcltltOA/qWTmbpEEsgvOt3qvcQQSQF+xoi1uwWI0ikRe8
IUky4BdSJPKAIP583+nTFPaAj8oGeG2wfyMPGHesJmf/m9tg8nu3XY3PhoHT
HM1a1X4ReKti93lWuxw0fs7uMRsrBsj/gY7AaYJ8ikS+b1+0IGy7LQ3qlu56
PseUQzy/43hI8JkCc0xfbLTxkoNDzrNl7XCeIO9HhvUlTQ2mSOT9aio8MryO
USTyfIFHUgV6vRTQZ/UbTp7IIa6eIC7GrKJBe1kw39GVAf7mtj4X4PwqoWq5
MVawHq+4hkV5IoC838WZS6fRcF4hzxewu/RhM5yX33u+WLeyour7DFh83n68
J8y3yPPt5Sktyy2F8/mQrkZEE5uY8HDa5iHYL7s0MyZlPpED0HjNQKAhBsjv
qagqbnHIgvUe8XpWLMXT7J9osHiRpX/hUvj/u4N/y4H3U98YYZRjLbzPR0os
DpyF8zw3uSBxDIc4Utb8Rc2FBhbOBzTnmzPATSVM4Qi8zyCft7awLuBuFaxP
81n3ZSSb2G7i9Kp1Cw12rhpOfjrEgFh3lxoVOzFI+cVycVSuMvHVfDAuKRfm
F7b4Q0wfm9jhf7bVBuYl5PHiHqpEHs4Z9XgzXp6tiS+iSI9EwdWYHDZR5hX/
JN2BBppGe+zuRMqBsY1WzjDMZ8jf6S9bNeDuTZFpKyIsfAIZEMMqOPnKVAyQ
t7u08gkhgPUPtwicQL2A+ela5jwS5tPvfV2y6Ot6zesMSHw5aWWIlRiorV/r
ue60MpFNrzabAvP46sred0vq2YSe9th36ntosPKB3wBjKgdXtaPyKq3FQDbB
L5o7zCZOdbQp8Nxp7OcOTw8/egnev59WTcnaKGQTl02VEtJ4NNhXvkBP+RMD
PHxtVurCehnszcpx6GYT+ZFfwpt9aezn7E/2OnQLKXJmZnrpYIAccFM1VlnP
EwOg+O1vng8DStfx3aQmYuznlB+IA2bBfOox89s2pUo2ccm72jTFhwYR1SlW
CeUMUKjh5ZfCfhjsMSnK7LwyESryjY8tpsg8HWeH4jY28aeeQH05PF/muayG
o1w5SGq1VFBbKMYershw+445sJ6biyomRKvIgUm37FYI7AcJBUo6FYNsYnIH
r77zZxr7N3/r4KXhG0b928V1CbtiS+D5GfFvLf6JvVY8irStsSsWBikTvE2F
AYkwj/IdJHmttWxi+W5Ho53+P/o3+gngDZ8Qgn+/NAiS8zpyWpvmyO8aRVZM
hbYxM/r9D04QdeE=
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{568, 598, 488, 489, 490, 491, 987, 835, 716, 628, 
                567, 533, 1015, 862, 743, 656, 595, 1044, 891, 772, 685, 492, 
                988, 3115, 3116}}], 
               PolygonBox[CompressedData["
1:eJwV0Lkv3nEAx/GfI3E8TUhYHMtTXRyVkOBhYDBQBuJKWoOkEWccIWHWpAgm
FlqJibQGg4FB4pxV24Qern+ACgZjvZ7hnc/7/f3+8nuO8PuhpsHYIAhiMIcM
8SROcRwXBCXYddaFXCTgzN0v/MYffPNMKfbcdSMPibhx1owL/hG1+Ov5E2dl
2Nc9yEdMPHd2zz8hCbe6Be/cXepKu6oneQ6f4Wl4o1P0GP/Pa/gG/8KL+CIP
R9/Fd+y57/DdRvDW2YHnInZF9/JMPsE7bbKtt5t22Ba4j7W9usM+6Gq7rgfs
5+jvsfO6y2bZBrtlR6Lvc/+Pt6JdX+kqu6an+Cs+y9NRp1P1OA/wVRfrJf4y
+r/6HT9sOQ7d9SHL/Qcdwmsdp/v4I19GgV7Q2Wjk23bUhtzd8TZc82nU49Jn
/HRWgSPdj0K8wJW7Z45WQ50=
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1:eJwV0DtMVEEYhuGzgNiIykUTErcwqJ1BbiYq4EIsLFgUEgQVCkgIBQoKFmoL
DbhoYwXxQoOJS2JjYWEpqFgKKjSyy60VBGx9pnjzvd8/c86cOSd7BlsHcqIo
imEGpcoNbBmUyPMYxjc05kbRCjatterPsIkus30U8xoMYQENZsvYsL9Ff4oN
dJrtoYhX4z6+ImH2C+v2z+q5/HF4b14UXdcnsI7bZrso5K/xDwP6QfuqeAEf
RVy/p0/zi/wLv8x/Ys0ZH2Wb+Sk5hWqetucdv8pzZLd8FL5VXgvfKt/rSXlc
9soJeUamrN+Rb/SEXAt3lbf0vziqP9A/8BYZl33yuTwrX1lP8yt8n9/l+byS
H+IjOKEPhnvzC/wzr+c/kHWnMjmJKmtvrcX4w/Cv9Gb9GE/htP5Ez+KmvoMj
/CX2wj30A/ZUhH+LedSZLSHjnKQ+jgw6zLZxmL/ALvr1PM+fC/fAHGrNFrHq
+SZ9DKtoN/uDAl4ezsYnXDL7jt/2/wcYKFIl
                "]], 
               PolygonBox[CompressedData["
1:eJwV1DVwVFEYhuELwQla4JZgSXAZKPAAwS0UuAWHGRwGd22QwQsocGZg0ODu
7k6Bu3a4PKd493u//5y7e2fvno1LG546LGMURRnQwMtZjDX4JrPIBPTHUdSM
iaIruGOtmT4bj5Fq9gGZeXn0wxHUMLuM2/an6LPwCB3M3iMTL4e+OIzqZpdw
y/6m+kw8RHuzd4jhq/EVA/UoUxSV5Wk4hGpmF3HT9aXkSlS1Z7O1vxir59ab
8Px8AeL1GfoGXo8/4O34W2Tk6bKteRG5BEl8lflWnsy/8J5ygP4PZfTh+i7e
UmaXfeV0WVj2sT5UrtVry4N6Z1lVv4Ab7n2cfoh3lCXlYLlCVpGb7N/OU/gf
Pobn4o15Pj4fceHz9PW8Lr/P2/I3yMALy8VItLZS/xyesf4XpXk2OQ2FrPfW
D6CKfh7X3d9G/TdG67H2JPNpuIc2Zq/Ds+Hx6IX9qGx2Dtdc/w9x4XvDPlQy
P4ur5hv0Xxil5/TejXhePg+l9Kn6XbTWX4V7dk0huQgJ4XuytoU34p94D9lP
/xOu14fpO3kLmVWmhfeUBWUP60PkGr2WTNc7yYr6mfDbD2cjPDOeKkvIQXK5
rCzX27+NN+U/eW85Us8hG+p7eGueR85FST7FfB2vw+/wVvxluF+fVVAuRPnw
GdY+hrOi/w7X8ixyCgpY767vRQX9dDh3rl+n/8AIPbs9DXhuPgcl9Mn6bbTU
X4T3dc0y/UM4U/qvsI93C/eOJP1UOKP21dcn4RZamD0P+82X6u/RR/+J4rwr
diNRPxnOqH319Im4ieZmz8J+82J6F+wK/z1mJ8K5MK+rT8ANNDN7ih/mRcP5
wc7w32N2PPxOzevo43EdKWZP8N28SHim2BH+e8yOhd+leVJsFP0HVjaf0Q==

                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1VW4VlUUBVCQ7u7uRjqlOyTFTkLCwKQVCwxAUDFQCUEBRQQpO7C7u7u7
W8f8fBh3zrWBy3/PXgcaTJw57sSCBQoUeMiX5AG+/CpvYRZLzG35WB/JGXp9
XtU3yMGs1S+X3fhW78hxelke1tfJASzTL5GduJ0vzTfL0exlknmRbM5u3jVv
lMO4l83mVXI/7uRH8zY5jgfZxzxB/iZvldvkatmX2fpSuS+f6DfKkeyvnykb
8Jp+vRzCOv0K2Z3v9E4cr5fjEf1iJrPY3IL38j0pxIHm3+V25jCKzpzgvDyP
6suZQmEOcvZHPjNzGU0XilCUYhTnYL/vT7mDeYyhKyU4xK/9JXcyn7F0I5db
gcf0FRxLSQ519rfcxQLG0Z2ZzivyeO6KqZTiMGf/yN3ZAcaz0FlDXtevowcn
mSvxhH4p0yjN4c7+lXvyvLNnnOWsEW/o6+nJyebKPKlflu+hd+YrfTrn6y15
X7+Jq/Ve/KSX4YgsMbeJNbIfC/Vlsh17+DR/NnfPfUwwny0bs4s3zTfIodzD
BvOVsgd38H3eDzmWB7KP5lNkFXbyVJ6HHMjK/ByyC1/rW+UYZugXyFZ8oG+S
w9miXyN787NeliPzbuadyTPL7unt+Sy7xjl6E97K/tKLU81VeTrvZt5HLjS3
5sO8d5TjqLw3+bnyDLKLnGtuytt5DvTmNHM1nsl7kXeB8hztrFDex3yO7Ch9
ON1ZdZ7Ns8vuU4FjnBXmrvw92Vv6MstZDZ7Tr8reUpGJzopwt35e9pZ+zHZW
k+f1VdlbKjHJWdHcm74oe0t/5jirxQvZmewplZnsrFj+fdEXZ08ZwFxntXkx
95G9pApTnBXP3mQXs28MpGreLecluD93m3tjENWoTg1qUova1KEu9ahPAxrS
iMY0YarvV5K9ub/cF4OZ56wOL+nXZv9oyjRnpbKX+kW5H4Yw31ldXtZXZz9o
xnRnpXlQX8JyvQOf567yzPVmvKNvzN3oPflBH8oCvR6v6OvlINboK2VXvsnu
5LPobfhI3yxHsDWfXfbJPvCLebscX/D//4+am2fIMuzImXmt7J99YKl5heyY
950vzFvkqNwBE82bGJZ9pAXDaUkrWtOGtuxLO9ozgg78B2Dozig=
               "]]}, Annotation[#, "Charting`Private`Tag$484306#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1nf8jlUcxvHHj0jIjKyMZGSUbMpOChkNoygrW1YiZa8SKlslKSOjMook
KrLLpozsTUokCr2/r/74vK7r+n7PfT/3fe5zzuvJ1+rFRl2TJRKJIUmJxL1p
E4m1wsrkiURBfKbWGDnwt/pBtVrYIvdBJaxTX6VWCJ/LTZATV9UPqT2CrXJf
PIj16t+qFcZCuSly4Zr6YbXa2Ca/goewQf07tSJYJDdD7hgvt8QZfhz+Me6I
/Ci2y/1QGRvVv1e7F4vlZ3BXjJdb4Sw/Hv8ad1R+DDvkV2NcikRimHw7qsip
5W78VX4GNrlmtVwUS+RnkdWY1+SUyBP3pa1xjp+AQvpj5Gy47vpjtA52xnzq
zeBf4/Pww/n0qMsvplXVb+O788/Ta/LDdL78EV+Cn8C3p3fRRvQr+hLd7LfW
8MXQWP7C+LL0fbkjbS5no/1jXmiqmEv6Oe1K8+pf59uguXxerkbnyBP5wvxY
/k7c8FvH47mxS68/8uqPkDOgmpxG7sH/w3+MH13zg1wcX8otkA831X/CWvUS
WKr2HPIjgRNq9bCbH4DqSOvePdX+5Wdii+vXyfdhmfw87jRmgHwr7pZv0Lb4
jZ+EIvpvydmRTD5JH8eeWMd6H/ED4xn5kXxG1JDTyb3i2/K1+AX8LP4+fiLf
geahT9DltDfd6vnW8/ejSXwz48vRaXIn2lLOTgfGWqKpY53ShfRFWiDmiX8B
LeQLMQ/0E3ly7Gv+bT5HvEN8e5qkforWx8+x19Q/5gfF3PKv85lQU75dfim+
Kz8b98uT5LyxVz37BloSy/Va4Z74Nsa0U/udn4LkOC03wC/84Fi72O76jWoP
4Gu5NQoiBc6oNcTepP/Pp1rYYfwmtVJYIbeJPYVbcDbWPPbxQ/EIdhq/Wa00
vpHbxlpFSlzR24Uf9cpgpdoL8e2RCrv19uBn/BLr0JiyWKXXLuYVt+JcfE/s
54ehNvYav0WtHL6V26MokpmX9mp/8FPjTMF5+Uk00zsQ5xadKQ/n7+bf4DPH
fpTTy735m/F+/Kf8HL4kP5nPF/fiv4558AxbaXk0VfvOuPL0g1iHfA5+UOxp
elucQ3QR7UaL6SfRDvJz9KJcg86Vu9B3433oO7HuaM5YS/RL2iPup/8b/xSe
kX+Vq9BZ8gi+AD+KzxJrWc4gv8wn8In8gDyFzx/z6j220Qr4Xq8jcuoPltPE
mRHrS+7I/8m/h2LyODlXrDl+Ke1J0+hd4J/GQX4k6uCA39iuVhGr5U5xnsZZ
gl/1stODdId+JayRO8e+jj2P3+NcxSH+ddTFIeN3qj2IH+QusXdibXuOTmqX
+Pdjf+GP2Ps4zL+Bejgc61PtIayVu8Z3jrXu+s5ql/lpsSZwMb4xjvCjYg8a
86Z8R+x5OaPcJ84yzJVLyVPj7Itr/M5uWhnr9CroTY+zhc/FD+HTxh6NfSN3
4f/ia/Lz+A/44vx4vh3NHfuWLqO9aAb9P2N941n5qFyVzpY7x3PGnqej5bY0
K61Hl9DutL5+JtpXbkmTaG36GZ2nVzrWI18g1hu/gh6NvUurYL0xFdU/jLXN
5+aH8uniHIm9Lnflr/DTY65wKdYtjvGj0QCZjXtFLTnmy8fibOCrYoPcPZ4l
nhWX411xnB+Dhjge54haNWyUe6BM3Bd/qTXHCX4sGuGE8XvVqmOT3BNlkQUn
9Z6mp+hpnMFZ7DO2Bjbr9UI53BFnnVoLnOTfwhNxH+/TTy0FFsQ55vr9fFH/
A/8D1Pg70w==
               "]], 
              
              LineBox[{3116, 568, 1032, 879, 760, 673, 534, 1016, 863, 744, 
               657, 596, 493, 989, 836, 717, 630, 569, 535, 494, 495, 496, 
               497, 498, 499, 500, 501, 990, 837, 718, 631, 570, 536, 1017, 
               864, 745, 658, 597, 1045, 892, 773, 686, 1077, 924, 805, 1110, 
               957, 1143, 502}]}, 
             Annotation[#, "Charting`Private`Tag$484306#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1ncclmMYxfG3nZJNRCmkJXskoSEVolJKyR5lFFESQpoatKNJw2gpRAMl
q01UVpQ9KmVkj+/54/e5zjn387zPuK/7ft4qV3dt1aVIoVCYV7RQ6Fm8UOhe
slD4tEShcD3KYo3sGYyTF8Eg2bHYKbsLPWSf8TdgT6yVPSc7DNP4Zpgpe5Qv
iof447BL1gt3yrbwnVAO62TPyypiOn8eZske44thMH88fpLdjZ6yrXxn7IV3
ZC/IKmEGfz5my8bzxTGEPwE/y17na+MFvj3uyTPxn9M3Ym+8K1sgOxxP8hdg
jmwCXwJD+RPxAd0AK+hfjL9BH4sFfAfcm+flv6Bvwj65V/50LKPXG3+Rroyn
+ObYQjfDu/Rc4xPpkhiW51c74CT6Q7UhVtJFS/l9+lfHv6kehxflf6rX4DL6
K/VCVHDsRr60ehvfO+9U/TJzKbtZ3c5fkvnk9837oOtiP/41/j+6E6rw7zn/
pWjszT9t/Df6yrw//kJ+K30eyvPr+RJqF/5Z505SS+HhzE/uFSfTH6mNsIre
7bi36OPxEt8RX9MXYRN9n/F76K/oW7Af3pctlB2BZ/iLME82mS+NR/hTcq+y
+3Gv7Gu+C/bHBtl8TJHvgeGyU/G77AH0ln3Dd8UB2Jg1gMflZTBCdhr+kPXB
fbJv+VtxIDal5/Fgrm/sO9ltOCh9lX5G31zL2PeybiifeU9voh/6YwAG5hqO
+8H47Tg47y+9hSfkZTFSVic9IRuU68q28XfgEHycecRU+Z4YJTsdf8keyr3I
tvPdUQGfyBbJjsRMvgUWyqbx5TCar5vfpc/Bavpv42/TJ2Bhflu9FpfT36gt
8AE9OM9H76B7YAfdFodmzahnYH89tJwvqJ0zz+pm5y2mj8I+/KzMF31V1hjf
kv+cPh8Hp3f5kmpXvqq6yPnT6b0wJmta7Zjr5XnVxjjQcWv4Ylkr/D/OWaGe
iEV5RvU6XEF/q7bEh/SQzBf9I30nDsN7fD28Tn9qfEnuA7P5Vlgsm5F1hbF8
PfwrW5k9AIv5KzE0fcDvpHuiIj6TvSw7GnP4i7FE9mTeDcbxZ2Yty4alh2S7
+LtQKftQzsfD6RdjP8l64fCsZ9kreATDMSI94pifjd2NynnPslfxlHxfPCo7
K/OFkfLBsl+y/6IKvshvyqphLt8aS2VPZ9/BY/zZKIJR8iHZ77LH4gh8mevJ
qmdf4dtgWb5j6RWM5+tjM30u1mbfxKrsN1hCX4Xv6Fb4iB7t/KH0bro3fqTb
peezv6hn4o3srY5bStfAvKx59ersoXku9QIcol/e50upt2Zespc6byZ9QHqO
n2D816wHVOIbpC/oJjiIX8cXV29Jj6vF+NX0KXnH/Mv8P/T1uT79vXoxPqb3
MN4tfZ35Vn/Lvomd9KX5vex56ll4M/ur45bRNTGfb4vlsllZA5jIN8z9YA1/
Kl6hr8HY9A3/O30/qmZ959uL2XkWTJI1QgmMSy/J/qAfwNFZO/me5j9EeszY
n7I+qJY5yncu/w/yjc93OT3omL+MPYjqefZ8MzBHXh6TZedkvWOifKTsb7ov
auCH7E2Ym70BU2SNM1+YJB+VtU73Q01s5M/GW/Q246/RtfAc3y79SDfHBnqF
8WfTA3ic3539IX2Ydao2xTt0aaylT8OrWevqDbg296e2zh5oHj/hy6i3Z72o
k/3+aPpfeTm+v7qLb4+KfC1+E10/vca/nXWk3pheVrc7fzl9DJ43dilWyubx
FfAE3yQ9hCnyMbL/6AE4Bjtkq/Lty/cm35B8B7KXZv/KnpN9AGOdV8BA59TO
epKtznc2z4WpsqZ5Nqzj62ApfV3eMd0Gm+my7vmOrPX833D+/8oRdoU=
               "]]}, Annotation[#, "Charting`Private`Tag$484306#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1XfcjWUcx/GDzJBkzxAiKyVESGYlMrMiZJQ9kpWtjLIzs7L3TiFaIkJl
hFKUrSItq3r//vi8vr/P93rOee5z7uu+Tr423ep3TZJIJCYmTSSKpEwkUqdO
JPqlSiRSYQPvj+a4Xz9dVxhf8xkoijT6/rrU2MgHoKpuPX8cl3kLFNHN4Pfj
Gz4TD+BO/QBdGmziA/GEbgOvil94y/hfupm8CA7xWaiv+5g/i1u8GNLqBvI7
sZk/z/ebW2IQr8Y3mp/Ar7Ee16GbxYviMO/Aj5rbYzZvwD8x18co81/ytr63
+WdzL0wx34H3UNxaOjlIP0Omlf3lRbks/sZ6K3mAz5fPyzHyhlwnX7NeXW7i
78hqcpj8Xa6Sv1nvKk/yRbKLnCATaBXfg5ytewCvmX+VR/Qdzd+aO8T78ob8
U3MD/MtLIH38f54OW/hg1NBt5tVxhbdGcd07vBiO8jkoibv0g3Xp8T4fghdQ
Cg+iNB7CwyiDR1AW5VAejyKD9xji9XfhAz4UbeL69HN0xfEtn4sKuFs/VJcB
W/kwtI3r0c/VlcAxPg8VkVE/THc3tvHhaIfHcI+14fqM2M5H4EVUQmVksj7C
2j34kI9E+/h8+nm6kjjO56MKMutH6jJhBx+FmrEHeA1cjf0W341uPi+FE7wT
P2buiAW8Ef/M3BD/8ceRRTeKZ8bOuC/8oLkVXue1+BZzTQw3X5O/67uZfzB3
xURzEnSMeyMXxJ6XD8rBsdfkSvmd9Zfkcb5QdpJvyX/juZXvWm8sd/F5slFc
g/xbro29KfvIM3KJ7C2nyuSo6rVZ5eu6LBhgviQ/ir1j/srcGm/w2vx9cy1c
4935j+ZumGROGns1ri/2WVyXvjS+5wvjbEE2/Ru6rPiYj47PFmcDslsbrc+G
T/gYvBz7Vb9Q9xBO8kXxjCKHfowuOz7lY9E59rZ+ke5h/MAXx3OEnPqxuhz4
jI/Dk7oPeG38wbvEc6FbzMvgR74ETXSf88ZIEvdVl0s3zpwTu+I54V+bX8Cb
/Cm+1fwk/uQ9+Clz97j/8ezxJeZHMMR8RZ6Kz2w+YX4J483/yaX658y7zU3i
fpj/kUnxivls/I3sI9+WKWL/oZbX5ZZv6mfKXHKgvCyXx2eK51V+E3tdtpFj
5U25Xr5l/Wm5jc+RT8kR8g+5Os5j6z3lad4j9kKcJ3ypuSxO82VoqtvDn0Oy
+L51eeL9zbmxm4+PPRVnkX6Zrhx+4svjPiGvfrwuD/bwCaij286fxt/xHcc5
plvOy+Pn2BPxDJlfxgrejH9hborR5uvyDvQ1n4vvE9PMKePz+vt75QTdLJlX
DpK/xHvF+8T5JQ/xd2VbOU7ekhvkROvPyA/5XFlHjpR/yjVxD633kj/xxbKn
nCyTxRxnrFyhexRDzVflmdin5u/NneOM4M35XnMzJMer/Hx8pvhurOeLazHf
i71xrvLD5nbx7PK6fIf5GVyPa4rzWreSV8BZvgotdPt4c6RAHV1+3SRzPuzj
k1FPt5PXxQ3eO8543SpeEef46vhuUEA/WZcfX/Ip6BPnvn617jGc52viOnGf
foquAPbzqXglfiP0a3SVcIGvjetAQf1U3X04EL8Z/Ij5xXhOzbflRvm2tWfl
R7webvK+8VuiW8sr4yJfF3+HQvEaXUEc5NPwKuqjARrGb0eczXF+xPMbzwEK
e900rymEr/h09IvfFf06XRVc4uvRUvclb4GU6McvxP3FdHOqOJPRzN/+DxTI
VcI=
               "]]}, Annotation[#, "Charting`Private`Tag$484306#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1Hf8TQUYB+Br+9lbqESSWWQWZYRkz8hoGGUUopCG2ZCZhhGKlFGysvfe
WyGZ2SSUFo3n/eP5vN/ve89d555zC7Tr3qRbskQi0SN5IrEsKZEYnj6RSGJy
ukSiDhm5bD/brhir9a7cx3L7EXbp+FSvSyZ+tv/Grjhr9Be4nxX2I+3S85le
j8xcsZ9jV4K1+ouUYqX9KLsMTNHrk4Wtei2OyO/wi+Pm6iVZp3ejNKvsR9tl
ZKregKxs0x/jR/ldrjpunn4f6/XuPMBq+/ftMvG53pBsXLOfb3c/G/QelGGN
/Ri7zEzTG5Gd6/ZrWcd6NrCRTXzg2Cx84bjG5OBX+wV2pdiov0RZNtt/aJeV
L/Um5OQ3+2/tSrNJ70k5tth/ZJeN6XpTTshtuS7nYrtcm6PyUG54zkL9ATbr
vTgvd+RvuTzfy005LycyJBJvyB/G9zS7k9cuZfzO5rvmVq/5sZk9zo3dDMf+
Ib/MHXoz/aT8FLn0X/UU5gC9oJlb3yE/Ht9FP6b/I/fjLv29uObkLuTR/9OT
zLf13733IrMMW+z/NvvEe8sXzOe4KVfgoNyMC/JH8TvIPUjFNq8z1szBTI81
55T8NL/Jt7FTrsNxeVh8R89ZrJeNc6C/QkUO6c25KH8cv4Hjxuk5maU/QR7+
tF9iVy7eX+/Ng3Eu7MfHueIrvQV5+ct+qV15tut9eCg+l/0Eu9x8rbckX5wL
+2V2Fdih96USu+w/sbuN2fqT3M5N+93sYWKca76xb8Ud3LJfbleRnfqrVGav
/aS4Lpijt+bOeB+9Lifk4fGbOm6F/iC79H48zGH9CS7JY9nnuMl6PubqbfhJ
foYbcn52y/U4KY+I/xi5Kwn+9fyV5kPsju9l9uU1+aL5fHx3188tPY05RL/H
fET/QW4R14F+WU9mvqkXMMfFvSi/FJ9NTx3/XeZQ815zv/f9VL497nl9XvzG
8ivcqbfVT8vPxnUrp7QbGNe4vMeszyn53/isjIz/PvMFkpHO8e+YheMe8F6r
5ErscdzrVOGI3pKf5fEccNxncR8yX3+KAnFfx/+fXWX2ym9Qle8cPyU+Lwv0
pykY5yH+Fzx2kEMcZqpj8vOtx57hbpLHOfTY5/G9WKg/S6G451lj9zD75Dep
Fp/Z8dPiHLNIb8c9cV3pDfhJHhXni7X6I+yX+1OdH/UnuSJPiO71voj/Fhbr
7Tkjt+MPuXBcY3JDTsujuSq/SPL4P9DXmVU4ENe9+SoD5EtmJ/6R0/od3pIf
lY+areIet/slzoPZX/9EvmH2jOvCLo2ZMf7TzCLmUZ/1S/lusupL4j6Xe8e5
1TvoZ+X2cX/rf+qpzEHxHPNefb/ciOz6Gf0/+XXel6+Z3UhBan29WZXv5IFc
ljvHPSPX4JjcmqvyxOg+33S9EEv1jhSJ60pvzFl5TNxHbNCr8b08iJoc9/wZ
cX+xTH+OonHu2GhXnYPyYGpxwvEz4xpnuf48xUhiU5xrDslDeIyTjp8V9x8r
9E6ckzvwl5zaORkcn98sHte33IRz8gekY7Neg8PyW9TmlNf9Kn4jVuqdKUH6
+C/y2GnOcJZznOcCF/nac4qyyrFdKEkGttjV5Af5bR6P86O34Zo8id/lXqQl
k888LF7LvOR1/wcxEFpL
               "]]}, 
             Annotation[#, "Charting`Private`Tag$484306#5"]& ]}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"Feedforward solution\"", TraditionalForm], 
         PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1a\"", "\"u1a\"", "\"x1a\"", "\"\[Theta]dot1a\"", 
           "\"xdot1a\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
Lw3s/h3FHXfX5H/9ze7fYdm9p9hioZndv+PGetH9J01b2P07xp4FbaasbWX3
71AI59xIeNDK7t/hud0gxTm0ld2/Qy7lojbzTCu7fweXvdK+O29a2P07HAsE
qm0f0dj9O4JzVKS8OZrZ/Ts+n3+i+q2nid2/w30yjKbz7Be7f8di/bMJm8J6
dv+Oc/uH27a0V7F9V5+tk9ttyWVs33XwKjff6aFitu8aLa3jxj1OZfuuS/tr
loT7iti+a+/Tez+1tcrYvmuUZVjzl9R6dv+Oxxv4ncVUaAj3XY3OOtR1/elk
+64CZs0VHQ/62L7rwIjbvduWIwj3XS8PCnRf5mIh3He1+3VVsbdxHOG+a3HU
jZ8jlRMI912vyJeTFwYnEO67kl9JB+ofmkC47xr+MXo6rp6FcN91bU/WUGbc
GMJ91w9LuRaZ8oMI912N5K6teXGzm+27GvpY6vZYtrF91x1/ovZqr/xk+65n
NsgO+dv/QLjvmnKX807k52yE+65d2bsMfxekI9x3PVx6pkiP4zPCfdeiiNWp
ql8/INx39bceNVM/GYtw33VG8ueGOscwhPuutjvg3tN9fgj3XduWvokVunsh
3HcVHvz9n+lmH4T7rkGXzae/D4Ug3HfV61nHuU31HcL7fQyZ2UYXMr6x+33w
xCvsWNVfy+73kbLMGRU234hw//X6rp3+8cRmhPuvKj86KD9LaQj3X03UPw+k
l7ew+4PUCNXtlzBsZfcH8XkfZnM1rJXdH2SpSECW6NnK7g9iVZKvE0FqZfcH
qaH1H6JuamH3B1Er6/ft+NnM7g/y9Yu//gLHH3a/Dw6pUEt1kwp2vw/TXFUb
VPKD3e9DPeju1asJRex+HwNPnRKzWVS2/5q+W+ed3+R3tv8aJ28mWJ1cxe73
wUETKlQIaUS4/ypze1tt/OG/bN81+Xwm/zxtDOG+q+fQZeNT5HGE+66Zv/o9
mLYTCPddS6gfjzLHJxDuuxoda3kc+mkC4b6rJvX7BHfEOMJ91z7n+NSFLibC
fVeRBIPbe8kjSGjDpA41CpufXUOjWtO/2f1IPmZ1XLD2qEK4Dyu85heQvVmA
cB9WXlj/vvyNTPR7eq3TKUVxeD+Gdrt6TwTq2dmbmZouDrWafxz19X+OPA92
uevvXgM1NA4aLFv7oPeuJveI6WvgnpvBSeT0e4i3TPnPzf0SsNnUfpQw4Y9w
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
hexlW0ft2+NcgMhedvb7p5yjOqNkL/uwxZWnIrCL+MxDv/54J/Qyic9UOM6h
WDFcTHym+K/gkby6dOIzX+wpRJK6Majy6DouvoEp0LrmcfWj/hJQ4VjEbTcw
A8QOc2qixHJQ8utt8yOueVBY82pRr3UlqAvl5GkQZINT33V7cy5UAryHffG6
/r0r8uUA72GfWB4/V8T4C7D/fBUVYzC2PJ74zwCde/psV1LI3nXNszwz14Bh
hP3nFk27K4OLxxH2n3/av7Rk35pA2H/eubcD3EgZI/vY6hzvpTp/D6O49rb9
BtFL4cpsyzCDqGHiOdPl5wqSv44Rz2mdc7FIJnqCeE7liLYRxvYJ4jnHeTUU
L7KNAryHnX5Hpmxyqo/4Tg6PA1vYf9YS3xm+p8rJ2DYZOBvvW3vpjwjstU9c
vJi6fuaKRoWYHRaFhvuv6MyHJIMBv9jghQJRWBN9USc2LhHg/eyr1hNJb5Nj
Ad7Pzrj/47dpzTeA97O/0fYEbNwbQvxo0FbTQQOXP2Qf+yRvcfevX9NkH5t7
9+Zmx8kh4kcPnlsrJ/CzjfjRBmWeB3VvqogfrWq9zb2mPI/4UTvWUL1ZcQrx
o4Wl0iWtjB9kz1r3/adn2maFwL5w+/qqX9NAxfwH31nJMpDbdfSgx49ZkC0y
seG5ZwVw9J0Z7CuZB04nOK4+/lgJsD+l7eb+ubGwgvhTwbDlqjXfSok/3Rxw
LZ7LJ5v4U5HPF/besQsh/vT1Xc7m6z/yyf61XucJbpGnzWT/+p44d8iR971k
/zp/xzcZJ38Wwh51U+2NVVYT4wh71Ec2husHtkyQfewVU4ferrs8SvaxtW9W
XE18P0j2rdU1p+pjTPuJJ900o7pu/giLeNJIvRPvUmPHiSedvc1S66qZIJ6U
82xMAfehceJJn/5m07+4aYR40rFu7dwnYZ3EkzpqvtqWOpZNPClv9bZ/ddnJ
oEb/x2nLSRGo8dKObQl/ClgJ5M99dBKFr2o4M5XpyQDvZav6BYkg7wSA97K1
OIvfmL76BfBedvFhwdSy8o8A72Xz2P9abNvjDvBedoYJbw2j8APZy76QtOS+
8LrfZC+7/MzqZA2XMbKXPex3SjF1tpv41dDI9fOCww3Er+4OO3FAakUp8as1
SmIp0SqZxK+G3DY+uqcyFn24entnyOcpYKokMqHqWgJ8U8Vsvb/PgO3OqTVF
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
ocgJmN8xB/1/kY6wau5K4X+P/w/kFGLQ
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{511, 45, 433, 434, 435, 436, 928, 776, 657, 570, 
                510, 477, 956, 803, 684, 597, 538, 985, 832, 713, 626, 437, 
                929, 3313, 3314}}], 
               PolygonBox[CompressedData["
1:eJwV0TlPVGEAheGrMwWFCUsgAU1YEhoywyIJkURrSFgCoYGGNVQapaCwgIIE
FAsrBO2AYVhqlgA/ANGObUigAhvQDhUwkfW5xZvznvPdJXOnqKev5c3DIAge
4CPiiGHSMBYJgv8OhxHHmW0LU5hGAjP45Lor5yMoxW/bNhbtuUjY6pCOpH3c
ds3foQx/bJu2UqzqndixLel5KIh6jy0iX+r1/KdswgHPQIo/xwZ/5Lp+/ppf
ynac8Dz7EJ/17Al5Y8u3vZc3ei/K+ZGsQYmzrfD58q1eJf+69xsvQ7G+5jxN
9umVsiv8TrwVMf1Yz5YD+jO56/5l/hiFetJ5VL7SG/gv2YxDnol9/gJfefhH
/eMdOOVznvWZ3/JRVOBYr8U2P3f+PfxNWNe7w/+Gt+EHz/HeQV4t91y7wp+E
38dZI7Iwb/9iu+Mf8BQXthQWcA8VB0w+
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1:eJwV0jlMk2EAxvEPChIGFvCCIIiDg4FEqFQYwBUWleLipCnWyUhJWBwcHBUU
Rw6PiRuPRbmcFZQFEwWpi51ENgbEC/m9wz/P83/6fm3fpjWp7uTN/CiK8jCG
WtThpeEr/qHZgYcoikXRU7ywlfNLmMYJ2yKy9r9osg3ggO0JntuO8k5Moca2
gA37H5y1PUCh7TGe2Xr4Es7xdRzRk5jEcT6PL86l+RvE+Qp+2z7ydj2HhH5d
/sd9vUA+woxzd2RFQRRt2q/qv5DRe2WJ/Z1+UrbyNRzmCX5LL5VZfkom+RY6
eD2/oRfKiXBXWc3nwj3Cb8lvh/eSOa/Xyst8G9d4RhbbFvUG/UP4Xp5b5W36
NzTqabmHfj0mRzDt3Hd+Rd9Ft/4WLfpnHNI30KH/wEV9HFX6bLij57v4QrgH
fx/ex3aG9yGfD2PKdpBfwBiO2V6Hz7Cn+DxO82X8tMX5PeTxIUzayvh5jKLS
9gqf7DtosN0Nf0rbICZs+5Y5Vnc=
                "]], 
               PolygonBox[CompressedData["
1:eJwV0jVwVFEYhuElOAnBpcAtQLAZHAZ3LbDBi1DgMDC4u1twhwLXYC0EtxAc
CmwgeEiCy0DBc4p3//f7zrm7e+895RPG9hgTFYlEsqGFj1WoxeORyrMQb8M8
/EFi9khkhy6Wd8JulNAl4ZY+E9V1c/Eba/Tbdfl5R+xCcd1xpOgzUE03B7+w
Wr9NF8M7YCeK6Y7hpn6wfAY15Mv4pKsqz8ZPrNJt1b3hA/kPjOIX0YTfRzR/
jO78Hdrz4WZUDvfGi/KjuOF7pplF9C/0fXgWBvExZm79aV7RjJcvId019eRJ
vICZar2q2U5+jji5jjyE/8MsubT8w1wpb3F9U3k2L2m+1tcyB8jfMVIeH+5B
d4E35veQjz9CN/4W7fgwM5t923kRfgTXff9zuTfPxEB+CtX5RXy0fktuy5+h
Cp+J71ghb7Y+gp9HI/ku8ob92IbC8mFcs+8DKutm4BuW6zfpruI9Kumm4yuW
WduoG86T0VC+gzz8IbryN2jDt6IQP4Qrrnkm9+IZGMBHm7nc90lewawmXwjv
2t668kQea6ZYjzPbyE9RUa4tJ/C/mCaXkr+YS+UNrm8iz+IlzDR9TbO//A3D
5HHhXejO8cpmA/l2OCvyFLOQ7gHvwl+jNR9qRvRbeEF+MJxtv/VU7hnOOPrz
E+Es8fPhHVu/KbfmT1CBT8VnLJHXWx/Kz6K+nBqeCb+PzjwNrfhmFOAHwvl1
TT85KTwXOTk8c1358N+RhcW6dbqcvCU2IVa3P5wffV/5OKrI58I96srJk5GJ
Rbq1uhy8BTYiv25feEf6NJTVTUIGFuoTddl5c2xAjG5veA76Vyijm4hPWKBf
o4vizbAe0bo94X70L1FaNwHpmK9frfscE4n8B1NnpRM=
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl03fczWUcBuBX9sje+7VHQ3sPLSEllE1JUoiGUla2SNOqNGgpkfYuLbQ0
Kdp7ShQNq+v+9Md17vv5nvN7zm+cUzhgeJcLixQUFFztJbmfl6/lIoYz0Loa
a/V29NTL8IY+UjZjnj5E1uVTfazchzb6yfIfOUE+LS+RTZjOVOvBshaTWW89
Wu7FTPpZ95cVmci71qNkyyL/n+9tOUfZMHvxpfU4uS976PvLb+RdXKQ3YoR+
rqzOupwfvfSyvKnPZ6hej89yP2iv/yufYVrOibPMKvGefjtFOcD6W3l3vi/H
5RwoRnFKUJIDfe47eQ8X0yHHUoqDvPe9vDf3io75fD5jvl0+y/R8P6U52PwH
eR+Xckr2yHHmO+RzebacTRkOMf9RLs7zo1P2yHHmO+XzzGAAZTnU/Cd5P5dx
Kr3NyvGWfnP2zD7Wu+QLzOScfKdZZd7X76Ach1n/LB/gcgZZ1+Aj/TT66Hvy
dr5PNucWfZisz+c5p5yHvlu+mOvWm3KNfr6szRQ2WI+Re+c9Bua6ZBUm8YH1
FbIVM7jTeoQsZBpfWY/P75hZOS/rw+Uv8iq5JM9PNmaUfp6sycf6lbI1nfW+
sjxrcs2yBbfq+eM14Ivcl1x//oCsELO4QK/DJ/nN5p7qVflQX0h5jrD+VT6Y
a+F0+plV4B19Qc6Zzvl/85J+be47FTjSbKNcmnOmS/bMPvkP8bJ+Xa6Nihxl
9ptcxmi6Zo8cZ16UV/TrGUwljjbbJB/Ks6Bb9shx5sV4Vb8hz43KHGP2u1zO
WM7IHjnOvDiv6Tfm3lCFY802y4cZx5nZI8eZl2ClfhNDqEpbsy3ykTxbumeP
HGdeklX6bIZSjePM/pCP5pnTI3tQneO996d8jAn0zOepwQne2yofZyK98nlq
Uova1KEu9ahPAxpSSCMa04SmNONEe26TTzCJ3vmeXIN5KVbrcxhGc04y+0s+
yWT6ZI9cg3lpXtfn5ndIC9qZ/S2fYgp9swctacUmf+D/AIllqYE=
               "]]}, Annotation[#, "Charting`Private`Tag$484390#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1ne4jnUcx/GHc6xQ2SN7Z2WVUUpRRstIIZU0yYhkRCFSRvbe2XuV7WqY
GSGjZFRkRiGJjOr1vfrjfX3GPZ5z/xYFW7Zv2C5FIpHokzKRuJAhkRgi9ElK
JM7KnZAXR3VfYoY+PUbqqiMlhur76s7xbyMfjum+wkx9BozS3Y8kDNN/oPuN
74z8+EW3HrP0GTFa9wCSMVzfT/c73wUFcFz3ha4YFstNsEE3W74VY+QaSIUR
+g915/muKIgT8T264lgiN8VG3Rz5NoyVH4y/i6+HvXxq7OTvxuf8axjpmY/k
C3w3FMIh+SFs50/GOPAlsFRuhnN8IxzmN7k+l78d4+REsvfG8/GN9FHs4zPp
u/Jp+F30HhTVfSHfQjvIr/OXaDOU0f0i56DvydXoKL/Vn7+ozyO/Q6/LLXGX
XFg+zNeMcZF3yLfSt+WK9FTMEX8nCsnLYkxoW/lZ/jf6FI7wm907j8+E8XLN
GHP+Mezn02I3Xxlf8q0w2jMD5D/47iiC07otGIOBrl3S9UBRnNF9jfn6zJig
q4V0+Faugq/41hjrvkHyn/y7KIYjci18w//q+ga+JD6Vm+N3vjF+5Le6voDP
golyCt/9Ov9wzDF9HN/FXGAPXxXr+fTu68i/wf8Z44SyuuNyTtpTvpeO8/6P
+cux32LO6A35JZSTi8s/xu/FWpJ3yrfRznIletbzG/lSKCx/5noa2k5+jj9P
n8ZPfJaYe36bZxbSrJgUe1nfin+EP0WfwPfxDdgbawgb+Da4zDfHCX689wzm
/+J7okSscd0mXWksl5/Hdt0iORsmy7WRARP0Q3RX+F64M9aSbgcW67Njiq4O
MmKifqjuKt8bJWOudN9giT4HpurqxvrFJP0w3d/8+ygV46HbiVK23GQ63PVr
Kf8/A0vjgm4XpmAqPsE0jHDfddf7ogwu6nZjqT4nPtHVi7nBdP1I3Q3+A5TF
H7rNsT+xQn4h1qpumZwL+c3BNF0SbR37P/YAfRIH+NuxL9YMNsb4ue8tvi3/
V8w1TvK59L34Gd49it7U5dP1ozfll2PP8z/FfMeedm1XvJ92iTOOXoq9F+sV
ReSVsW9pe7kCbRHjxD8T607+Wc5Ku8e+pns8/ymfGwXk6a4n0zfiHIj9S+vj
hzjfsJ+/D5v4drjCP49T/EzvGs3/w3+IcvhZro3dsbfiLIhvwir5xZgbvgmO
8tn8bo84E+he937G3xHj49rjyIxZcc7o/uU/QvlY57p98e8KSlsrc+hY9yTQ
3/UKMe66/Viuy4OZuidin2GufpwuBQbIFeO7dFtjX2O13BLf6VbIeTFLfjLG
EvP043UpMVCuhKu6bXJ5rJFfwve6lXI+zJbrx5nGN8DB+P74Db46NvPt4z38
CzjNz/f8BD4Jg+R/6CuxDvijtA6+5f923/aYf6yV0xnPN2M9xdqmTWPP647J
2em7cRbSA55bFesbBeU5rqeibeI7aAP5LN8QJeVDMSe0m3wPzR7fyN+PYvKW
OAtoJ/nN+LtoC5zhc+t78wv85kSajI/1/9JX4338MVoXe/hrcdbwFbFOfgU/
6FbHusVcuSFy4ID8AL7mO2Ch+ybJqTBYrozruoNYE9+KebpGyIlF+sm61Bgi
V8EN3SGs1RXCfN1TsYexOM4gXRoMlavG/tUdjrMOZSzFpXF+xF6LdR3nlXvT
Yph7q8Vc6o5gna5wjIuucYxTfKdcA1v5jlgeZ5180f8D/wMNj09L
               "]], 
              
              LineBox[{3314, 511, 973, 820, 701, 614, 478, 957, 804, 685, 598,
                539, 438, 930, 777, 658, 571, 512, 479, 439, 440, 441, 442, 
               443, 444, 445, 446, 931, 778, 659, 572, 513, 480, 958, 805, 
               686, 599, 540, 986, 833, 714, 627, 1018, 865, 746, 1051, 898, 
               1084, 447}]}, 
             Annotation[#, "Charting`Private`Tag$484390#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
z/4PI/6dZQ==
               "]]}, Annotation[#, "Charting`Private`Tag$484390#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1Xf8V1Mcx/Fv2kqlSSUalFFKKkWkNI2W9h4oLTRpoKKhvfeeGtp7bwpR
RFOk0CBKS+X5+eP1eI9z7+/7u+ece27u5h1qtE+SSCQG3pFItEyZSDyfOpFY
lorigrwKY9BM/62uGdLhe91rKKtfLpfFn/JqvKv7Q34XD2GsrrnuAN8c6XFI
9zrK6VfI5fCXvAbv6c7K7yE/xula6A7yLZABk+S7MIn/wXh//hrfH8Xwhu4F
3Ur+BVyUR8nJMUpeK3fnz/HdUQCz5ayYzY833pL/jm+JVXx+3M1Ppukwmd9N
n8KPrh9Ar8fc0AF0E30cp1BcXkBz4jgWyPto6XhWtHJ/ebpKv5+Wp8toXvyE
v42PpinwA0Yb30aLYp2xHvS8rgfW8Y/iYX4OzYY5/IRYM/57/jVkxBQ5Pabw
h40P5G/wA1ECrXUVdKv5CvhHXo+JsX76Q7rXkQlHdG+ion6NXBGX5A2YhDZo
i3Zojw54C2/jHXREJ1Ry/1r3VsJleSMmozMqx/PqK+NfeROmoAuqGFuvr4Ir
8mZMxRsxZ7EnkBlHdV3xon6D/CKuylswDa1iPXWtkAXHdN3wkn6j/BKuyVsx
PfZ77Fm8bHyTsZdxXd6GGWitPxxziaw4HnsPr+g3y6/ghrwdPXUX5J54BDNj
TnVH+DeRDVPlDJjKnzD+Cf8f/wk284VjT/IL6X1YGPvCdVX5LXxVLOfzxX3x
ftOU8cwYY2w7fRKnscN4L/qn/iDtRdfTx/Bz7DN5Lr0HRzFX/oI+HWcAZsW6
x5j+AG1DV9MCcQ8/Ld4pTOP30JKx390ziN7UDUJJLJJzYVHMjfFq/Fa+Gm7K
O/G+7i/5fTwW73PsN90xvi3uxcl4HlTXb5Or45a8C3Pib6CGse36Grgt78bc
2Lfx7uraITt+1n2AmjFPck0k4jmi113kP0BBzIs9rzvBt0cO/KIbrLvFD0Yp
fKh7VbeTfxVJMFZOhbH858Y/jPMgrkUhzI93KeaN74CcmC5nxHT+lPEh/G1+
CLbwRWKN+MX0fizmv6TPorfra9Fdum9oLbqCPoiTuEMeR1PHvsY4eQcthjP4
wv296T/67+Lv0Q20IH6JMzHmg94ba4N58l76DD6NMyF+R/cW1sQ5FvuYn0Ez
YQb/q+uG8gkMlZ/BZ/wD+IzvY7w2v5uvjaTxG7o+uksxjsJYEOdP7GX+beTC
aV1f1NHvkesgGfbpFuIj1DX2ua4uksfc6RbFORbPKL+D+3FGN0yXBMPk0vhY
Vy/mia+HFBgv34nx/Ffx+/xlvi+KxBrL2TE/1izOSv4U3xFr+Ufi2eO8oJnj
vMDM2C+0FH7Hb+4bHuuHQxhufCt9Ar/G2stLaO7Yp1gS/wt9DufQz/316V79
t7Q+XUkfivODn0DTYAK/kxbH1zFf9F/dR9jIF4rf5D+lOWLNY+3i7I//g++E
3JglZ4kzhP/d+Ag+KUbIz6G/roG8j2+AVNiv+1h3JeYZReOZ4tuhO813Rh78
Ed9rNNR/KTdE6tjvuqXxHUQjY1/pGuHOeGbdsvjWxD6XuyAvzsYZjMbxvHJj
pMFEOS0m8rtoiVgDHHBtP3pV3w9PYnl8k2Kc74p8OBfnIJro98tNkBYHdSvi
7Ij3Ot6D2GOxtjFHGIlRaOq+b1zfFHfFu6hbGd+y2A9yNzyI83GPLhlGymWw
lM+DpfzXtAzOY7Rr/wdnMHDG
               "]]}, Annotation[#, "Charting`Private`Tag$484390#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
               "]]}, 
             Annotation[#, "Charting`Private`Tag$484390#5"]& ]}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"Test on dynamics\"", TraditionalForm], 
         PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1b\"", "\"u1b\"", "\"x1b\"", "\"\[Theta]dot1b\"", 
           "\"xdot1b\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]},
    {
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1:eJxU23c8le8fMPCD4zj2OMeKliQkmSXSdQmRkDKiCA1kZMuoqLSMCCFJREJk
ZBRxH0IlKynKPPZ2jr099/d5/W7P6+mfXl459/hc1/UZvNt9yfXsVUYcDqfI
hcP997dYxHpq0o47xzSIAV45z/oRvXIWwyF7BKiXD0c+FuhHGjgPseKtmoHQ
bOihSJkB5HiENuXt6XagEvKcr5M0hFw9uMIpz9kLfuRYJf3UH0EMpK7SBXQG
QHJyepkaZQwpaL3l/V1lBNzIDlEXp04ganzSufjACRBYU/xo19AUYr8a9fKN
OQ1Mpz3+LqFNQ1xrhxVzDWbA/VxayVAPDQk5T9i77jwHEvcUeuDO05HLXwPs
5B0WgKiREq40mY5UsgifcbJYAlqV8jfnPtMRed6g2FGvFdDW+9vwdDYdsZlV
lzF0XgNWB7OYnK7TkZSkGtHF8A3A9b7tO5ynIR+eqHa0nMXBkG9H8/cfpyFe
pepGL/UZoJGVWXfX5ykEqXsz8/gCI3x067fke8UJ5JrOkfJr5kzwHNXTB0iM
IokZ8kVOjnhowbNDM354AHk6W37H7QYz3NhXn6nL0oMMZXn7OHgQIPFUXYGZ
dgtSfSIq/u5dFmj7Ax9v2hONMJz+1xcRRIQmsQGxuLVmgNMoZkj2Y4W7dx7o
eFJMBY8EFw1aHrJBpnR1mwGFceB2/nLV4j12+LH8C5NWDB1Q7yhdAc844F3/
ng9+VvOAHP383+MUTjj1/fLkxddLIJ1H2u/rCy6YJ1MWS7y2Cio9dmrve8cN
6zIq1j21N0DSrmRRdRMeuJAl77XDBwfLb67gHJp5YGcdZTvbDwa4+xTL2p5z
vFBGn3WPjB4TLGySCv3bygtnzh+qES3Cw7DaDbldVnzwm43mJVdZAoz2HHW0
6eSDu+6/0CiyZoE3+Xdwi1mQYGKedYqAGhFmSjHXefWSIO+uq492phMhYY5B
uPIiGXLt3MgIf0mEb+XybycNk6Hbm3eaNi+IUOpSluG6Cz8cIe/jzXlNhB0n
PxWYjvNDU5VM0ZO5RNiS6n8AeArAx3vaf4pUEuHShzNHxWYEoORQc8LOViLc
/OhR9OC6IPwYYOs3OkyEp+ROaN+cF4R9Errd1etE+NXq4DUnTyFoaEg+O8LL
Ct/nuS1ubgrBloIj3E/3scK6px3uI/a54JzKhaDK7f3IrvWSxPVD34CcB45B
80Y/8qixfMDUrBUUO8zpfOEcRHxmjfmGL4yBBiZ55OTUJBKMl5zfFz8FBJm/
mvt+mUbGbcodpI3poLv2adWTOBpyk+eGjJnVLPDB9ewYF6MjCzyV2nGO86BH
Pqgn8S4dibKvu9BoswgSJugFKx/oiF9Yvae0/TJgSLm5c7CUjugyWlNfuK0C
DqZnyzui6Qju+500sVvrwHL/rc19R+gI/uLLa43PN4ENQ6JGfCoNiRH/zP+x
CQefNmtrGOVNIwlV7imkVga4Uc1wSffJJEJ+PN22/JcRGq/srbWrHkMYfZU/
OVKZYMJY8zUO6WFEoPGGyBQND3kjfi942/YhR5uEb07MMcNc0XPis5vtyO+l
ew+9VwgwQOGP2dkz1QjP9jkDSiIfRKxj/DiaCPBRNZN65TYSHGgNNX/8lwVG
vXrq/CORBF8k7BQ1DCbC9if36Ak7ydAjgpg1iq63WdTfHwdTyfAhgVWfgO4H
h+85Qw3S/HAy67wMTxIRMv7JD8rM5ofn7zl+u5ZBhH8WhN30DgrAbSfBXE0J
EaqyGOUVfRKCH/RLLXpEWeF31XufJuxfgQOnRS656/UjfZNdtr7zX8Atp38R
9ar9iPTU8kK2RQtYupriExk3gJAHRjTN9UZBEXO7p7bjJGLDLnU2NnQS+FY9
dYk+N41IyUoyjfymgWyfxcwXrjTEx+lg3t3fM2BEEr9viJGOUIouK9eNz4Hr
RcNhL13piL/gHmrgwAJoDr51LOUdHdle59Gn17sEetYFFf3K6cjnx9NlVTMr
IDpNZnR3Ch2R67Z2+Di3BnLc6LzRpnTk7G35L32kTRD3PumRaSMNSbMI8NV+
ioPSdHMrLm4a8rCizdc8kgFOnI442iQ9hYxl6g1WJjDCffksjPF3xpFi68Nq
Y4lMsNT33LXzciOIRZnJSHYOHj79QQvpfN+P2FHHb8sWM0O+Xd7bPYU7ke6f
axvXiwnQ4o3YF/60eqTR3Q/QbvLBXNl9rJ5BBMiVuPArcpUPLm7XnLd5xQIf
/msrX/AnQRvVrKPaV4gQWlZ3seDIEEmUVvqDnnfZLy4eS0FkmCdU/2AQXU/i
rVyFQ6z88KO1W7pXIhEKiL63Nw7nh0opIZcvvyFC8+RrvEacAjAgaaLJ4QMR
BhUgYZGxQvBYTmy2kyArFPrirzkZXgLqs+IQLc5+xIojqu2ubz346m8k3vat
H8lcl4j/lDYNMi0bc7vINCQn+myjczMd9FKaC9Y/05B7RRUZUoOzYDqqwmwO
0BEZ5x1mV0bnwcVvT/3XouhIVon7H9GuRYBncIyt+kRHfhtKMLNNLYP3V2c+
HiyiI63+jQTvqVXwd3mnoxp6Xps/pPaGMW+AbYQP3mRhOvIvCU/s4sZBFZGC
5DEvGhI8vVYgzcUAf6zXdWSpTiPZtex1jYKMUCJ7UrlqaAI55hBTJy/MBO1y
qwburI4ipyMVD4/vxcN8AQ5EmW8IOfvtumXkZz7o2xIXninMAhknedLpR0hw
zfnIxCtOIky6ckokuYIEYww3Q24lEKFr5XFmWUCGEbZlXX9eEeFtW+299jVk
eO2Q/c4e9N+/8WcnXNXnh7EmY58lkolwKqLo+eYPfujnQsj9+I4I5y70/vrX
KQT1iSxvNcRY4bewFt15+wigYXq1TNi5H9Eacqsuaq0EUifOu3vs7UfW1gWD
zC/8BPWkHeaPbAaQy5YfOiMrR4ARQ/oZE4lJpPFJZpAB8yRA04hmyM5p5FuM
VfOJOBqw3cWmnX+ehszEs8/EP50BD/ZbZNbQacheonLO5ew5gGN781LsKh25
7tqUap6+AD6X/NgdmE5HpkdqhDsSl8A8FXg+R8+PT8NhqT8fVoBhae5bvrd0
5NuIod69vDVwhlQp63YJPX9PVqcnmjdAeMZ6imYfDZGZ+yfF4YGD926+5CJL
0ZDbn0MG/K8zwH/VPtnbvacQE9Wl8b0BjPCNKmPcesc4EmmsspbpzwQn4GOW
kzkjyIr8F0OOMDzUkU2XLTMYQG6OmQQ1xTLDzMF3MeXPupBLxz6VOsUQ4I3s
ivj7Z5uRA6JHVYgufHD2iVng73ME2Mzi9mppnA+uiR15oRCErueSvx2HIwn6
XxB2/GqExr9qwPgYjQQfP/8wXv6WCBM6Smo6XcnQLrTM9hV6XtrN8swdl8jQ
EBz63o6ep11A5kLGLX5ISzf+vJ5KhNu8efvOrvHDPbdo9Ub5RCj+aHFlPVgI
siCrf96RWeGGtlIFLfkDGKkP89zD149U4PeqUs7VAU4mtvznL/sRgTtva912
TANnJ0+x04vTiP7Kwxc/ntKByRV8T2wWDcH1J4yBlFkgZeCp0yRPR55WTDes
Z86D2qKdX3eF0pEk7h3P55MWwaErr4XlS+jIWxe/owlZy2DxeJ2060c68qRC
wOtR7ipQ/8XMyIZ+v0NFVNW5ynUg9/NSYYwUHek0+HW0unMTaBAqb1aG0RCO
EMsr9CkcNDK1t7vlM42kVlco0+cZ4Bm7cIkptUkkc0nj57NlRmiym7DhZTuG
SAYrLWUx4SHNfZvU1eQhJN9D3jQjmw8GmYS09M8RYI15iLuFNAny1XhRrOdY
oNDdqS9FOSTIcGxIPTsSjZfk5YArB8kwl1+N/0QKEY75RfieKiRDsbNZRZ3o
+YmfzqY8V+OHDF8tmzjQ87VUoBhu8pkfzu2GL4lZRBgnL3Rc94cQ3Pz8vCZq
JyuMizO0nw5/C4KSb5Y6y/Ujd+b1NlUFasGfk+Zaimb9yIXLUeVy++fB9XOR
7O5+dOQB4rPjrdgiKDjSNLYzj46cerfzXemeZTD+rL46Cu13GU+8NcyVXwX3
f7j9CEigI/G/3B5MqqyD/MP8Sj916AhHuRI/NZQEh/byvPLzJsKw+VT7n9xk
mBWBf/cljQirsvbsJEeRYfKZb71W6P5RSX3PwbiNH76f9tdVQPsxeVj5bdS/
DKQu3Y79w4Web9Kml/bzRtDGUavwcqkf+SZs0F0nuQDKan9kHUTvX2xdQ9IS
WQLua8dj3pfRESa5Xw1+8ivgjbt26N58OgLuxP17fJIEbcdfbVfZi8ZXJ8Mj
pIkEN4OP3n6Hxrf0vFjEoiEZvkniYU1A6zvfydWfd/+QoYLD12fs6PMtqb3z
krfih9ofshMs0e8/8yDjqsuUEPw0er1xXJwV1sq52xMcAoH3naImamA/4nWp
1NukmgI8AyofSKH92wDzWy3ZzmZgor97au+JASQkXkjqwK0RcHi5I7qfCe3X
mkcFpaomAPzlosHANI0I6S4dWrhBAyNlkUw4IxqSl7vMl+Y6A7oC9NcmR2iI
ef72a3lhc2BeJdI53Rrdvy/2Mms/XADhHy3H81LpiLmvq/KegCXQcbo1whrN
TybTHT3WMStAbnum49dMOkK+fqLM4ckaePVA7PNjB/Q8xNoQPHI3wC+fB9t7
x2mIW2XIXddLOJjxas62XJmG+Kld2RZmxQAbXdoSDJ9PISGMp6fPOTFCpb1h
7vuJE8jNho+dj68xQXcrhWMaYyPIKZcVhqMBeFjyxP+czosBhODKyrDrITOc
2kxcbjvdjaR5xQk53iNAteeNOmkGPxFL95dK5Kt88Nef7Q6qmgRYUC5zX2aA
D+K6d+eLurFA5EG9apwtCfpdjF5TPEGEhgtzTyxGSDBQ55vpMTQ/NQ9bThva
k6H+w1+/uNH9Q/mS54SnkeHtyxm4eHT90ozGW1u8+aFGTGXJWTQ/+Vtf1Wud
5YeBqrgOvTwiXPAgFSjdFIKDKa8f6JFYoQfL0wCPrHxgZqufxS/Yj0wHXR+/
qPMdWCilh/14jM6nVcNW+h1TwGJ+ih7ZNY0k5ogxBnjQQaer84JECg2pWH7E
fipwFkjnfiR5S9ORavv2x3oh8yBtc9vv2QfoeVHzWqEGLgI2AW//LLSe86yL
mfc9WgaVwU4aX9B679RbKs0XuQo+aaw/3x9BRwo1QxTVX62Dgv3L3wPQfEcz
VTE+WbYJ2OVck/XjaYjROY5ykx4c/MNzTDY9ehpJ0ox3YhxkgMyFX8y8rk4i
3ZT41q+jjFCkj+uTfvQYwr9R2B4ywwQ3ROUsvg4OIb1fo84UpvHBrt9jB4X7
CDCdS+dcuBgJRnQvHpYYZoG/eWA8fEOCF9dp1g0haD2/4FkcuI8MtxV5KfKi
/fKuB0qvy9+R4fqlK9RxND8FWeb8UlTkh7OTghUh6Hm6VT1DCCzkh0TPe+uH
MtF+WlRp+XaVEBwP/PnyyA5WeHsbsW8mORVk+vbJBh7tRwrcY/L+MtcAhhqj
+GqdfuQJR4DfLfZ5IJXTqp7oRUeCxusDo5kWAedqNut8Dhof1e+1jIzLgBTz
7ucOdL/32J9iPsK3CnrS2V4MvqQjA+YOiy0C60A6bMdAoyEdqTv1YNTpHgm6
CwMmaRciHJIsfD3BQoYh6UtlNWj/t1T8TffBYzJ8vHNP5Iv/6htP7s5EXn5o
/IHzXBNa/9IYdjxwCv4EPrU9D/uv/5OJ1JUYeNQAKqhPumR7+5GVKuUEQdYF
ULViLfkulo7khYp4y60tgpNc4qcb0PnJGbk5Wsm9Agp5HnJpofPVrsMmlHIN
EiRty9/5WpgIqb+XT/B/JcE65RhzRzR+5CcKdXw6ZGhd735CAc33uqbJq3MN
ZDi62neIhsa7N+Pdwx8m/DC7+KhmBdpPiblXi6YNCsGHSl9N4vawwli48H42
PA6sEklh+uf7EZLjPpLgYBWws/6Zce4gmq80/Y471yyAY0JH4sTR/PDAQnQj
qgLtb0yEWV+j8dS6JhV1x4MEb4kzb2s8j/YDEa1Ce5ZIUMY7a/UFev6uNPEl
OvqS4YtNS7ajaHxoo7nazTh+2BC1bieGfh0a3IZzjSsChwVq+aloPk/r/3qY
tWIRXC+/fvsJWo+PdTftOlu/DGg9/YUjxXTkwmzitHQxCS6ZLQwNPyPCurmz
8ORhMmx6UML5CH2/Qpcxw7+fyVDUafVxO/r+eeRnE+P+74BeaVimnEQ/YuTH
YJgo8RWYVNge4LDrR8Kid5WXaiyCX2fFf+0uoCN9Ij4RHtrLwGvWYKwVrRen
ZfuhWQwJFq8HasjfQutV0u35lAQyXPj1TlkGXf+K21fYHdzLwfi9hTEabz/y
WdG14JzqEsi5lGNqh9bDhGSpAnljNL8u5ONb39MRu49mSZttJBh8UkP6GFrv
bPbxmXSakaF2rPkIJ7qenUfNMnh6yNC8LYxRHr1+0Iuw94cWheBvc1cuIMEK
K33fp0k6uAKhjMI3D0LQ599l3bjnKAVoSXq+ThXuR9ofT0k8T2wG3DWTk/DI
AJJ06NTp1fMjIN8tNiN8ZgKxoT/uj01G60neUOuLuSmEkqI9ZuBAA1p7KVfi
9WgIT5lbaubFGTDYkK3vNkBD6Mx8X//cnAMOGRYZ7Zbo8+c3K5fdWABOUy9C
VV+j9Rxqaeo4LoGg8OPScuh+OI6TLUsLXgFzXkcWeNB5slSuyvPCrTVwI2n5
8h0nNL9ti35amLQBCt9tG46j0RC+jD7ZlPM4yOwh1beqRkMWVoyKyKYM8FFs
prH0uykkzW6F5naZESLfDvEy7phAPNiW65dtmGAK6aWFNXEUmWOL7fjlgYf6
f9/2xVYOIPr5lzV0A5nhsV9X9gy+60ZqIh7ojPqjc2E95Br//hOZE2lU2GbL
B0cj+Sj/VAjwtRC774lePris406YtWeBOwzn0yytSNDbO8+6GBLhGvctGfsB
EhS5IpFfhc6L4y4H8cTLZOi8cZ7TAK0nSity3j/H0fnlp9G6P7pedn/reEfc
+aGaQdWhTTT/ZZlEbMRM88PaZg/P77lEeNEhhbP5hhDUhg6PnvOxQhkHcF4x
Nw88wXHXKG7rR4iApCWLfAPyP1Z+WgX1Ixn9D6VKP00B0/79UxHN04gWi1tR
yyU68LpjP2idSEO2M+MSja7PAm+j7bzFEnTE6nP9sJv/POhTO5TQEExHnp3Z
ud/cbREUlRaXthWi9aZ68SrBdxncZhf1Po/mm/N0DsK5oFXQMjbIuf8p+jWB
MHHwyTrY/MevZqFMR1b+OnaHZm2CsYPOFisv0XlI/cq1B2046J9CX2F7PY2I
Mt0nhHYyQO2Zzzfn/CaRZXGtP71URjii9EGf/m4M4VCb/7YyygSpyvNHOInD
iK/Hl9OlyXxwxWeDntBOgHHX9uq93UGCVY+fcl/pZYFK7Q6MhBQSrKS3vEx5
SIT7vVeNw/eQocr5R0gAGk81DpYSn7dkSCgZy1pEz/dc1IEu3EF+6DZ34q4+
en6gQYtmTB4/ZGWb+NWUQYQ/eatMtlUIQS6HsaSw7ayQ3nHllVdWCnj2VPmz
mmY/UnfwCGvmrWogWje6KKTRj+yzdW1LXZ0Dm4eMd4t50JFbDL55rHMLALLd
gM3ZaD/FmNQqQV8C/g++Kp9F93uj78veW4yroE0x3/XxKzoSIjKQW8O8DhQv
75dQOUtHJEm5xvKBJFj/z1aozoEIo48fhStM6HlP+y6hj+4nkvoLK3CfDLn2
6W5UoPsn5sRBqWuc/PDJpVezyWh+vHip/orM44+g6TAnhRetJ1qGk7c/4BpA
SArhhnVrPxItKL2kvjwPSMVyAn9j6EhOSu2b9IlFcFPuz04DdH13PTyzOLix
DKT55I5CdP15oxQ+tKmT4PtzOtfek9B4vRTL/1eF5rf63COP0ftVvS2136VJ
hk+iJhnvofXkcocHz/vvZMgX8uriEBpvk579T+ON+GFRO0x1R/NtqN1ZX0AV
guchb9oEOo/f+pIrtZgcDR7yjhrPXULrn2S905BlFbr/7A0UpPsRdwtxz76i
BXCkx3H+DzoPq+6ms5fkLAFyzZfRVDSeqXJn105cJ8Ecw8oHnaZEqJNpWSw3
R4IFS54nK9F6Emg6mLfHiwz12MUFndHnvbJL7vTLNTLMO9UctIbGT2vwfs/B
xEJgq7MwqM/Tj6QsezgEvkfjkR8wN4DOezNv0mR9ypYB74n9xwrQr0tLayxo
+SR4ZXP1zcVoIrzB1dFlpkiGHqQXHoPo+zXNfr4c9ZEMv55CNP+i7y/+h57p
EpwJuMTTbpL39yMOh9PTnZJqwQJj6qFZq37kceaPSTmFRXCAxLX533wR26/3
MlZpGcxdcyapovXg/Tz7O5FIEpyXP5fo4EeEb8XPsF2IJcMvUd1PNNHn9+3h
G5P0+QyucjOdU0Sf/9PJbf0N0ktAic7wlhv9vKHDBmJ6fAX0sXHvZ0Lnr5rA
QGLNLxL0dEtpZkP7V06NBProWTLcJfvH9yx6HharJMu//yPDDD8C13b0+iOR
29haZoTgysLas2d7WaFlGv/2+/qVIDNfO0N4N1p/8xL2bYYuAS0vs8y76Hqk
dDrTT02QYIhymEwUGv8i25B/z5zIcHcobvY3Gn/9cLlLh+fIEK8+cKIEvf7H
9L7E/DcF4I761cWr5H7EUtlQr+L5MghfjAvcifavPicFZQMy0efFxRN/hhMh
M+5SOD6PDGfF4of70PiyWbwTd497A26uVD1VPdSP4DznPnbzLYPG9mrGHvT9
u+QWFBvCyTA8rVIxAL3fWLLr26zAUmB+49FIB3o+Pni7aZWyLwGzWGYxTbR+
3+X62Xn6Bwl2+94K34Wu54GmhiG1FjL0isOlrKH3a3mqQ7vetARYBh42RKPv
O+mtH8C/RoLiAhofDdD3bdkjJfY+qhh0a0597Uav/3xYUHVXJRlast8L+od+
Xt1Y5aCjew44G9fHQ0HjJ2uScsfQbBnMN2/Tvoze310ou3ckiQwP32mrF0Sf
F7+jWOatcwXozjlB4kLjU7G9+g715BI4+O3lywL0/Yj0A0qqnSRYVntNThvt
N6uK70Wf6yfDmjApZx3084LpG2dfrApBB2Xy4RG0HyghSu10cbAGQiEqFNbI
fkR+89K8AA0B17TXmFmF+pGWU3zxjTebgeK/i4tUhQEk4/6VS30nR4Bc+2ub
jtEJpJHh/PeGiAmQq9o3ajM5hcQYTnzxs6EB0YKYP706NIQCs51kzGaAWdvQ
hkwfDTkmx7Ew6jUHymMzOlwu0JErRyUMF1wXgP0drdCAFDoylCqr99d2Caxw
cHWS0HiWEtskv95cAalKCY/y0X6Akw/X3Oq1Br7sPD636ExHEi1l2kxjN0AM
432lqRkacukFF3OpGQ6K+v9L4gc0pOj8V8a/RgzwsvfqNtbCKaRAqNn9ljUj
3H1s81qX5AQyJSlck2/JBN/H1e08JziKfPt7+dur63g4+X7JIKV1ALneEmlr
GcAM48PtubL/diNm2ze6M3wI8HmWuPZnlhYEug/Jb7fmgwW69++lKxLgthP+
7sbdfPBVZdvrP5dZYEM+63lwAe1v5/mRMXV0P4hqrLr0kWBvdQ7RB83fS3nx
TwZsyPBi0NkpZ7QfuM5PXy4ZJUOEo8PMBV2vby9V82Zc+eFi2Iml32j9On46
zdx7kh+eLSjZ+xjtB/guO5S99BaCQeoKcxDtBx7Fx36Pls8Da4liLyZE+hFy
0lUaf8A3kDDDOFcT0I8IzJ3jpmdMAfuanfOEumlEqFAgYuM8HVgqS8QuPach
9SFqV35dnQXuR0b4W8TpSNZQrUCwxzxgvlsdVnyPjsR0emlGOyyCe97FgY5o
PUiS7HOOd10GZXbSF1LQevFzucjTz3cVXPli5yURhdaTYU3dzPvrIEJtv8fx
w3RkUwQvfuD1JlgMTT7xI5mGaMpHgle/cPCh9u0w+cxppOPSqvHpdgZY0bo8
syd4EiG0CZ+b7GKELYLvh+U/jiEPLfgrCwaZoH58dhK/8DBS/bXDsDyJD3KL
eXz8/YsAeeJiNAtFSfA4i2vlcicL7Fe7VTKSRIJNvwya1u4TIeNdRCxmNxlW
3/bWLUDjqXvaTcP4DRnOnSImb6DnUfb9pO2wDD/0DFbcJovmvxTe431J7/kh
KJPPSkT7gQccjxlHyoSgXBMX8yG0H3h3lHRbOTcZtP6Jtfh6oh/58yS0KPJI
Nbga8vfLkDo6/4ReI5TMzgHxaA4JqhsduRnW8E1rYgFkt/oQVNF+4Ljdo46P
I0tg7C6bhj2637XvnDBMXlkBfwaDBM8lo/lqbTcHWF8Dq78V7IaN6Ui7zxci
+RYJpkwyaYbZEaHjaRw3AyMZfhZ98TES3U+7gvAjIvfQfqc2r/snun8abadz
TrPzQ+njPY9D0HxbFrWnNYz9I6hQD/bYgeYjoxyw/8XneuDFccUkqrEf6dUQ
33eGPg/ezfsKT0TTkWwZ0QrqwCIoZESnB3R9V8bUNm4sLAPbPRaRn9D1D0FS
sgfUSHCUXzIwi4cIp3GH7copJKiy8/37R+j94wtvH9qnQYYaERxh2Wg/4Laj
MyHkKxnKTV53+i9fP1kZ5w805IeHOEKXTqH5FdoKS3D2CEH5CPaDcWg/QAvm
GPbNegp83yxq3LDvR1Qe7hBqFKoCq61qsTX7+hG3Ab/Q7e8XgLF72RkZtB8g
3+/gO/lmCRTvkTmSjMbzbIxdvpQzCX7aXL5sZkyEO4p33T88Q4JarLbvqtH8
HBZvqIbzIEOhiX0m99H4JKnRft1bIUMJia8Xx9DnT+HvMozcUQi0hR9USqPz
WXLwt6DS9EVQNUM4E4bW/3rWCGXih2Xw0rpKhw+dN6/t+Mf1K5cE0x8qP2WL
IkJDkVfZVvJkKN1ZdIE/BZ3PDklMXS8mw5mDCm/+y//dh5IfyT7OAFoJh1fz
D6D7JXbprPH5WpD2UxNPROfpR0q7Cc7Si0Bvb+vRNLReu+kop0nKLAOp/sYV
ezTfW1nsstkIJ0HHdNF+7xvo/GpfGnM4hgxpxMPmRujzt3I7WjxeKgO1k7bf
fLn7kY+trqvEPUtAd2XlWi9aXyTrR2qHj6wAxvjns8/Q63v1R5e//UmCyxFd
yTbo+RgwuEihGZEhi9f9Xm/0POAJUTrp7WS4Y2mMgYxePzGUWvKKJgQldbk+
Q7QfcGBy+O5MrASBWcrXyDv7kdvk+7JP7y0B66LT6R7oeviOylHOjpFgwNAd
4ILGvypt9orHNTK8dGDUdwaN/4MM2tD2GTI8lvnnwlv0+vxtRzj4JNF+QMZR
MI+/Hzn0XOWM0dNlgH8aPeOB9gMSOfv7rd6SYF0Ar7pJGJoPNX8IUnPQ812K
Zx9G41v9yYJJITENnJNunzM40o/8+9ONuLEtAwOG3zdw6POMeVpXZIaS4fdf
ABeK3k/nZ60AO2MpqFFx+3wPPR8FuFrLeaYlcFJdJ5gVjZeCx+BThe9ofT8w
/lsP3c+qfIfdhZrJkBIttW0BvV/2vPwi7usSSDo/6pOIXr/6Lo+e6AoJGjfp
rfuh7ytrEvSUi78Y5BZebDnL1Y+kS9+pXqsgQ6f7Hw7+1x8ufBji3O+TDc6O
rRLH9qDz3MfQR70Gy6De6ubbl+j9b1/gd6pJJEMTu7LU3ejz2hpyJrJMl4PP
MsHJs3z9SHmGcILocbR+kt/WhqP7o8Tk+KjoP3T+bHZV/5qG9qPLE9uVqGRo
7bN/VA39fH1yDe7ashC0e1abHY32AwqdFkeLPJbAP0ZTu5Po8+9l+mRlM0SC
B/bH+TKjz990eGSsRSYfMHnvbYtF+wPZ7y9lEjLJUDmywIn+33lO+tAQs7wE
Lr/7yaOKfp5BwXv+B+ETSFh4EfRfvjGLZ33w8wcZBk7xLY2h329TTmDeW7wE
Xv+MCE5Dv98tMX5YaoEEm0+//vwBvd9Ioaxbk3AROFLx5dNjdP9W5Rn/LSpF
96O8WeR/P59JoA4H3o4nw4TOD/cOo+8jklvm/232M/AmBm0joOe1tKK6Lkph
CRg24E8dReMhIOpk3PebBBfHlRiz0H63Tj9vl0vMErBvuBEfgd6/rilDTHuK
BAUu5ZJy0Ptf8Ak9cGbPB3B6dc+ew6R+ZOnzEqNkARlOS+zx+e/3jRLcbAX6
IsvA3pDmXope/4mbkIreeikg3D86qo+u766wK5bWrWi/OHKnjum/n/cfsBrt
bFsC901cOB6h9xO49iiba4MEX2zo7hFE7+c9+7PAgKcEWO/ubgxG4xWW9j5X
8wsZGgZfD/jv9zNXfh8340ghw+1887lc6PUoUdevpZ9B96eN+r9W9P7m4cKB
57pJ8JJX+2IJ2v9denf4TcO6EExe18g5uo8VYj4K93//8EDMRyll3uPXe8MF
MR8lwqimfD8EDzEfFVBYfHi9aQVgPor10mzZOTk6wHyUAbhZWKkzBDAfJZOe
emQtvhdgPkrfX/BBkX4XwHzUn4KFhfCZLoD5KMuUleMl5F6A+aiVJYsrcQeo
APNR8feDFmp8qADzURouc2bFab0A81GJGw+vfL/VCTAfJTVDlHKbawWYj1oI
G7BoLakCmI/CCf5mLWIr2vJRSU8vBv+c/b3lo57UOzuzBwxu+SjfyxU2G160
LR8lVGN6dGlscctHDYoXhUH9jS0f9ZBbvTqtDkfBfNT1VB7SROz6lo+yzX79
LjKFhmA+iuPhVZ6YpFoE81GW0j8HS3yHt3zUajEifQCdczEfVcbsf/RvGgPE
fFQ6V15EQjQeYj6KjXPeJF6dGWI+KptFZM1plQliPopnvfDk+nGGLR9F0xZ5
qSGyAjAfFaWeZGl6YhxgPuqRaT47XeUegvkoJ4VxdcopGoL5KJMzCYEvWjcR
zEeFqzM0pzxjoWA+qqGHYJLwh5uC+ShD4XsqF8zbAOajFOQk+K3zfgLMRzmN
9JDOWdcBzEeR67jD2v2/AMxHedUMmm5klwLMR12SU3u6A+YDzEeNpKikhUml
AsxH5Y2+fHIy5z7AfBSP5Pc0vaRgBPNRNkMwTT7vJdJjufHDbnIT4P73B/NR
3FkXv+idQvvr//ko108/lmNzcZCwKDqFV+4EbpTP43sC5oFFdu7mHuk+IJa/
4t3iOA5wge6KNDAEUgYT/Z/39AHMUxlrcRnN+XQDzFOdEfvVaavRBTBPlcDp
vfpktRtgnirYZdtoQH4vwDyV++vITKobFWCeqk2IfVeMMhVgnko4H3cpW78H
YJ6qhbvH4NW2vwDzVEePqCbdlm8CmKfSHCwl8gmlAsxTvYK3js+Z1m35qbxZ
VvHUjv/np05plle9Jc5t+SlFvYoSLZ/VLT8V4U0+/H11c8tPLYYqyjbewlH6
9IrVHzMQ4USng3mn0hKypnKAOMjMDtMu7N69z28GSE6din7BwQE7L1T0t6Zv
AH82+1dXRDiheuKEiMpVJtj1k5qZsYMLvin7ZGC8jxkWVopb39jDDQ/k41Ph
XzzcnIizHiHzwAOOO7STfjDC94YNT85G8UD/h1yHUgs3wHR/0EYNiRealr2j
39GaA5jXQhSesuwrZadgXktLo0qi9co/gHmtLzlR67VWrQDzWk6jviM1aY0A
81q2xp5Hjb/UAsxrHTjoWPgRUsDg/qHCvAIBKJnuJvG5vAjcPNTnayInCG1e
H3+Q4p8F3nhZ3mIoQL/e3D5cMRgHWL+qtnkqCUGciUmGxvYDCOa9IoNHFy/e
iUFuXKCe43/PCrH9iXmvjmtxpYZD7BDzXl1eJHpeCCMU15Q/Z3b8H3j9L6Tl
CtrH9Ey2PsgSoYK6NEfV6+lTQMLEKeqe5iBg9/1+NsR5AGA+TORI90ZCQg/A
fFhvOOWyunQXwHyY6+/+EGnXboD5sNGTQgyvr/YCzIfVv3Bh5TOjAsyHVW37
WxppTQWYDwPxVMo5hV6A+bAfD7jKFAb+AcyHSQdL1zZdagGYD/sllz5CHykB
mA/DsfU+uqtcteXBPu1of15CHtnyYBWOiftND89sebC5KJLuqcrlLQ8WEGkQ
ZnZic8uD4WLe1Xc34yi/dMXHmatYYLhXkyhebBU5Lsn3rqOWDVZsMlSdsJgC
+mltWSe/sUOObf4VC3WrQLa2geFsOwfUWCzpqY9lhL4F6seFezlh9471MxJT
eHjg2j7nVz1c0HROg04WYYY26fsYb45xQwbbd4KSzkwwvaT4t44nD5QZv+Lr
dAEHzfLKNwVmeGDJdiltMYNFgPmzGgN2k4IMVgrmz1ipAxYurJ0A82cG0XMK
f5t/A8yf4W48XAr3awaYP3MO//PywoNvAPNnKUXqVI1flaDTXo6+GCUAcTn5
x70kPgLV+efn1XjR/HkvB2m8+h60xNoLa0UKQiOPWTXHqSSQFQC5lshCcFfZ
LsBW5AUwv2ajJpyVRo7Y8mppMiDoyx8CHHx/p2Xj7B/w496dyuaZdTCSRbz/
YV83iDvGlnJKeRb8cgzxfanSDzgTZWzrUkfA38wbrZZHh8EbK5m+4wlU0M6I
9Hq7jIPgE4pv9pd0Acy/vY/gPQUedgHMu3ntfR0hNd8LMO8WAkSW9W9SAebd
/MrKcusXewHm3QIGrdh4cd0A8266X1dvFuxqA5h3a7D7IfhF5jvAvJpJ4Pva
kfl5pLU3wfCgEjP0evGJPri+hvCW6/hlKRJggJdBIkMAjlK/k53n5jEW+O9r
I69q8iYyo68byaFBhHE/OvD27nNI8Undq1Na7FDxjrKPSdo8wKtQAiaNOODG
i7q4tVAc/GqIU79xkRMOG/Mn0rnQ/ot+n1fFigteDrVuL4HMUHWb2NnT9tyQ
ZM6ynd8PDxsJohVRSjxQSUbE+z2ZERYP9utY5fNAxkPlFIOgNYD5ueeO9/Dh
3zkpmJ8LW8673NbaDjAPpzutppp0+DmiXNmHD/jFu5VfMA+X6LJf5bYGJ8Q8
XBmx+TLbAyaoeK2MfVP3L+hSfrDIbrsMXj+xr3OJ6QX86ndVQo7QQOmxEQ2D
mgHw+Puw0vTpQYD5OeLMjuzL+3sB5ucETu3ojFDsApifM75929xTthtgfq78
q4RagnovwPwc19cj1c6aVID5OQahwNceLlSA+Tny9PeXudd7Aebn5GGP5UJx
B8D83MLgRefcgl8A83PCUpuZe79WAMzPeeUTvBeSPm95OWZq8DH1qqEtL3dK
YW/7uDF9y8vhX7Quhf9d2vJydEHDJxY/N7a83BkWacO0dnR/6HRoaL1mgbom
AioezmvI4KvgNbO3bNCZpdbXa2YMXAx8WbwrnR0eOhnBf+b4CiCKM3z4VswB
vz/7Q5EUY4S1r52e/KRwwlVC//Dfajwc+5zh8aGcC/qxlb8+I8cMI8NSU3/W
cUPF3kGu/mImKOa836/qMg80zsvWc2zBwRAByyBA5YHw+72s0dIlgPm8zLyV
06aviBTee2my7ZukrfXHfF6BfHrH0tM/APN5coM1nbN8PwHm81ZFSCdZ3b4D
zOcRJkRPWKRVgbb7phEi9wRg8J1C+eGrn8DzVu8f7xkEYfw2esytQ3lgZJ+L
/dVAQUi+qNrjr5cCVky/SKkyo/Vv/4r9rqFAgPk+SqiwMW3s8Zbn8zS/OS7A
QYTFFa8uZJn8BkYl9XY1rzbBYnPUEUvZLhDcWb4T7bBALPv2zzb5feDWJw9t
8+VR4Bwzd0+iYgh00sfiLin1gX0Bj/3eD4yBI8r7mYLZuwHmAzfCxyR2WXcB
zANu/3Qu4WFrL8A8YE/QsfKXvlSAecC8XRY+KsJUgHlA5gpRW3xON8A8oNUH
Xa+Pe9oB5gG1lMb9ZNXrAeb5SrsH6noW5hDvc6xFT/iYoRt3s2MQXEMkavP8
T5EJUEhWMni7Go5iFPb1h68oC5zVChyTUcBRxk5tDuntJkIVhvCSX2YLiEVl
afG1vexwe6gouY9vDgiQHjysluWAWrzSxoNDmyA5W3Fq8igntBVxNiiqYIKR
1A9WNHUuGHniHEP6YWa46JJqflmbG77u4PAZzsbDoeW/T8rFeeCjknzNAE9G
qJBgPt6WwgNvMH6qzEheB5gvdLxr+n53FQcF84WW7EH2Jgl/AeYFze+oSF8d
iEVEDY5rDr9G+9SYny9dlydA9LWpvk+Vg+B8V9C3osR+UOO0493OX6NgfF4o
1gztf2ceZuzp4Z0CMkNm+08f7ALL6sbXnYVngWfri0dXwnoB5gt9OV+0nbpK
BZgv1NXocl3TpwLMFz6uA1oHenrAR62hOwZNePjS5G1jQfIKcqb97q3w38zQ
Fy/mty9rEzl/FWp6tBOgYEvVzg8FOMq/ky4xX6kssDq7pexC6TKi+p33lccY
OxSzyTjWrL0OTBwSjDqWOWB3AtupUEYmKF3FvWCzyQlTPVX1Y7jRdeRPvxrK
wA2Zk03u4zfQubHXVI7EzANHX3Jo79nOtOUX51vF6vyVOsAJZEU8unQYtFhy
urvzUEFIyJyO+sI4eCJpNi7m2wV2qP9SusNPA6tj0eLlH7sA4VGfHUlqDpS0
Gd6l81EB5hfzFu9OVQRQAeYXtYUO9mw29wIFR5mRJlNm6JOGs1zKXkfWPnTf
YDUmQI7rr4uPvMNRdD8YmgTasMBdG8ohvnkbyBStPhQXxAk/ZhzRHDZF+yic
eU3gTS6Y0JQwkXGcGd6uTT6l9pgbzvTd/N2vjt/yj1cjOpVtm7komGekDHzY
5xLwAukwsE/apSi0lV8wz2hAzA05N8MJMc9oOWzXIM6Ch6o3cXbG9e2g435x
mLnACsD3yDk3GfWCAyypu9oKaABfmC6s8GAAXA8Nyzv6fRBg/vGBavgJWZte
gPnH7fNGsTzHugDmH0uUv8+2cXcDzD+WlgwZqEv1Asw/2s5/VxtQoQLMPw6X
7ap550EFmH/8firncUBIL8D8Y63TNLVTpBNg/nF/7FCNsWkrwPzjG7HQT9y8
lQDzj9KpWvYDDR+3vGPbjAFFffvQlnd8Xjom19FP2/KOEfebXQmXl7a849k1
87cVkRtb3rF+U0bCqBVdv6+HXC5HscDjWft9/jCvI8Ud6m9i4tgg9+7r3Cwq
o2DYOegoxzN2+NG6mqLmtwzmWhLY8ekc8PkNvFLUAAOcTLhbeCCfE3JfPvLp
CNo3f7Mb9S7P5oKHVbPn59H8kBFo67VWyg0DeWHr1F8maFM7WLd5gQcWcA/n
32FngGkn31F+tfPAdtdyv+/OywDzlYJ48ZP3txEp///Pn3A4zFfaHGI8Ejj3
B2C+cof9AF3C9ifAfOV1QZ+55aHvAPOVAieZU0e5voBWssPFAwFo/7rtqUYA
sRToVvffG1kWgIw7mi6FlOYBL5or14IP2s+eWHx4X+U1EPsSfPjCuiBM/hbH
Mv7jLsB8ZvOp1TbWkw+3POYNDXE73ywifFUruyvodysQ3l5p9uwYDm70t0Xn
5XeCH3H1tMf9c2DpwpBVlUsfOBs7HRz8fgwUs364wB44BNyEe283PuwDhiVT
NXrJY2Bt2wGRo8e6AeY7R9W13/QadgHMczbOWO0/+aUXYJ4zXYxD4Zg3FWCe
U1YhO4EgSQWY55RQl0kL3OgGmOeUtnLUzU1uB5jnPB4w8elfaQPAPCY+6X5I
+O05pDYKOlQwMMMhcbLHYOcqkq93dfUFngDtkk+fLeDHUaKq3kjdYGeB3TOG
u1rO4yh2P87zOfKidfYeSyK3ziIive5p/ZafHe7jC9vLoTMLXuGuceZtR+f1
Voa5HN1NEH6h4YSUDCcsap4n7ohmgsV/6+7py3JBAWfLBju0P/kjOHDBRQmt
L/M8Q3i0f/GYVVlsEeWBM1J3zG2TGaHbHJ86fwIPzM+/+U9JZgNgPjQgYiZd
+RgHBfOhHntPFNI3/gLMe0pq3RLsK3yG3H7JPqiLzpmCpPJHXPWToLM7uzTp
7iAwCrwRp8Y4ACbe3lssezIKjgWGF9/U6QGZ30dKSxsnwYTTc3We/V3go4lG
xI3FGfDP+oiTgl8vwHwouLxvdudFKsB8aH0bP3sPOt9iPtSjqbSuhrcXEIO2
K9+qwMMM49zE3QorSKfl4Y2uGmbIrJ6n7+2/iSS+2JHi9pUAuzjEahOrcRSz
79+QoZ8skCG+euit+wrypXhO/OJfdvhE87WhYsga0BBUyhQY5YBEpbtdPxoY
4ZlSCdHyaU7IqGSY3baJh4bIkMMzGno+65h33+dkhrofrsmfWeGGp2yfDd3U
Ytryp7Rjnsq6SR0gUunT2o2AYaDnW7duaUwF+bUWMX/z0fpSKdsl9KwLzJQN
4bqHp8HsvDFXU1IXqE5qfriDZQ5UK5+d8sBTAeZPcep8DyPR+QrzpyyjDz0k
B3vBvTeXX2xqMcMBk6saZ86tIw9UopcsNAnQ5JnCeYlnOErIqEzBrdMs0MHf
8OaHA5vIv1d2A2qunHDvFTflZ4p4KLJ8fbzDmQv6avLfjULri6Ub1VDblxse
U+/9bmeJ3/KrTmPM59kMuCiYRzUq+LvofCEBObrLMHKOeRQsLQlOzsz1AEGD
a6PuupMA4F8/ZTqAvt9FfbpA/RygFDurSRlQAeZTPxq1NvDbUwH9avLm7XRm
GPHWcW6CcxPZReywdHlDgDY0V/KDNhzlVZaJg3czJxTRET116x8ecpAcXDMb
uaAwV3J7rgTz1v+3xPKb2M5D2RrrQ2D6T7DN0UEqwAHxA3xS42CQb9/Pp91d
wAbYH3xmOw1WdoTlLbp3gYv8LHz53+eBluBv4oo/FWCeNc1dS0uClQoSNdaW
V/YQYAhtXIRuiaNwmY26+B9ggZF8g3VjTDhK4frzZwUGnNBg0U92bZgJXhtN
PBxjwAX31+9n4FdnhkLVl0wtzLih9Rd2ZDwaD5MOfrp4T3AMuLv8yh0p6gZq
JxzCmEynQG0K90TDoS4gWZrJMKA3DxicS989caICzLvqjnTXDmhQQa1x49rR
QWYodf/iQ4Pfm4jQwUuDnqMEyLPq0i38Ake5WMd7LYPOAr2Ox48Gri0h+Lql
Jjw3ul/buS/ZizLDKKerl+7wccOhxTr+uAk8vGQYsZqsOgFeHNF6S7LpArFu
V8Ru6y6A7iLO2BY/KnA/KL348RIBKg2+YhMux1EaiBqv9oRxwbBkEm0DnY8x
75pnblyWFZe45VtFNi7EPTnFBTHfqirX4RKmi4cVzHui18PbAfWFQvgrjxWg
9JBfHXewFxAMRlO56TSQMXX/fprdAPioMxj4h2UIYB62ginxJd/NXoB52MLB
tkcdWl0A87A5RuN0AkM3wDzs5EWxiI0dvQDzsKfzQJepIhVgHtbW6phrpxcV
YB5Wea9ET11cL8A87IbOPqBg0AkwDxvVcGf57JtWgHnYCOpDxZODlQDzsD5L
ys+ejhVv+VdJA8krP34MbvlXl2+SwtrZtC3/ejyv/vCBfUtb/lWitOPL8vWN
Lf96U+2w355mHIXwcIDRM4QFXmN50uB6eh155Zfg9yGCDfZ5/FLeMB8B2f3u
m3fC2KH/k2iHp6Rl4Jg1XJLykgMOPOTzXK5mgDjBJ18vZHLCY0qv92Ql42FJ
2eMbx9O4IMP9pmwWNWao5Efp5P3ADTkkdK17xphg4GyV5w5zHui+oMPkuY8B
yvW39L5s5YEH+rpUPKuXAeZtbRTPtvG3s1AwXyv84KjCcYk2gPla4nbTva8f
/QSYry3Vu/V+RawOYL7WzP3bWqHWF2BsSdc+dEMANr/5FHr7fCnY9XmbDfOC
ACws+gf2rOeBUhO6bYWHIJzgv03LyHsNiv2uVjgtC0IjUQ25R2rBAPO5yXmP
RL7O3d/yuHxVssvRK0QYo+fDOP4MXbecnZr1Pjh412WFct6zE5zaYfq8RXYe
SOJ/yM6eQvuJP2/+VbOPgwtaUV9vWQ+Bk9ZVXhIf+sAl090TQrfHgMyKdnCr
RTfAfC9NZTKkVqcLYJ63x7wm3bO0F2CeV6fvx96DnlSAed5LpNpD87JUgHne
5gb28M29PQDzvFU6ODKxux1gnrepHDRy3mgEmMd9H/lGNkxzDrku16lhtoyH
Tz31fs9kriILYYha9RozLL2bxPiKgOajrhjzBUYWqOK1+Y/ZBUcRDyVm+LES
Ib7aNNGgYhEhvWhWrOVE59VDrnEXemfAlRvnm/fyc8DHTT9qFJc2AF5x22zt
Hk5YNXr/i9dNJlhn+ifWX4ILvn0Q2i4owwxrnIOtZvZzw+wzyoo9jXio4ubw
rkuIB44HJHQqFTPCiN20QcVYHriNxVKg2W0DYD64YltjtMIaOwXzwV6lzzc/
yf8DmPfNo+42SxF5hrzXphX5qVPB5RxSmabKFLgjHCbBe3kQuJf9Ef92aADg
ThRvD3EeBafP6FZLuvWA4LFHDyRzJsHFqueBh6S7gKDNx523hmZAfKCSnLdr
L8B88LKCSYPSeSrAfPCb/OEyqwvovPE/H7xP9DQ4LtYL8rZ/4uIvxsPXgt+2
rS0vI7tfPT1GqGCGJ41CbOg2m0h5MWfzdAUB/rqwk+zxA0chP/YxXfjOAjda
jw9/qltBHh0YGv7VzA4zrs/tIexfAx+ngkwLezmgj7TQUnQBI7xySOHg+DAn
dP6T+FV9EQ+PkR86bhvhgjnvFy+Hkplha/a353Yz3DAo4YjrPXOmLX984GDd
vdxfHUDJNd5h7MIw+JJ1mue0D7qfroSVvo0YB6b2ExoBb7pAY+eD+lO102Dy
40wqJaoLiGfpCIkvzIJOsWTx4bVegPlj/PwdtqdoP4H5Y64FoW1pU71ARnPT
K+4oM7wmLrSbd/86Uu8/qXJXjQC/GGl0RT/CUd7hRalrJ1jgE1nrTSOHTcTo
xofIv3accGc8+XX4bjyU9fbfYL3KBUcdg2e7NJjhqZo7RnWu3LC4NKtkyRG/
5ZffinD7GLFzUTCPDJs7pHB1zxGjiqDiqv4RUH/0bKYXXy+YcWEt6pGYBDJn
VXc0HuwCYR/gafXPc+Cdwe31K7poffqfT76WKb3s4EgFhzJWwNskZihzs85N
graBaOypC51IJEBXvbf4mnYcpUDCJiD1Gyd8982Oc7wJD1ftie6ytVww+5KO
BGU/M/xqwS9U2DUEKiUoJrocfYDcZWbcSxgHt1zG6k3nuoCaDcsqI5wGdE4r
RzWHLrB0bdW17dM8iFSXzplA6yXml5/9SCWb81IB9Z6Z6h5RAgS2nRy39HGU
g+7ticviLLDl04s7FSI4ivTvIQ0jbU74Ory++/UvJnjzaoZelTYXvOb19ESc
KjMkCjOd6zbghrwmUgfeoPm7oGE8+Mz8KCBaRzytb+sGAvZEc3fFKXDlaQnI
VOgCVVxJ1mxq8wCHNP0McaACzDfn6YTejNNB612spPrVLma4L9xq2ICyiRzR
O0Oe7SXAY4rl5YlvcRTREGSjZJQFyhzQtjpiuYwInsD3K7BwwSWHmuVjAszw
DoX5CoGNG87yKkiHzuOhz0TlblehCXCgQqL1jlMXOFhjHpSmsgDW72h6TqD9
VLF78GHqeQIU7Ds8mV+Io/QG6xecCeaC89YnKtjRfhPzzfEOM/eZ2BKRzNyT
+mX9E0Dvc1meoUoXcLrv39oYuwCc7jy4qOhGBfcsMkbHQglwLI1jTgLtD//y
nvRSKULjlcRedVmJGaoKf351s2oM3KjHFewR7wYzKTpR3WtTYAQ/NpBl1gWk
SQP7xRPmQeet7eucN6jAmche5slBgFY86eztkjiK+9vilUUSC3Q6ZEJQ0sFR
Uq0Qtx2HuKBtwMVciF6/MUN3Wp82CTZPKOBqZLrAXMkDkXMi8yAm1i+uxZYK
AoIOetCbCJA3dmeQ1Wcc5dgxEdaIRU5IxlFs51iYYZLkvuvsreOAZxTkrN/v
ArbXNY7ShRZAzpekT3roedRYUPkof4oA5SNK3QuTcRTircvtOV5ckDnyOMMf
NF5HZb5vxztOAssh/8fS6Py0OTF+YCqHACdOaNcMtKLrV/HVRbyNC6ZetNHa
vRvN1xS+wpC/86CU/y5nTQAVmLk8Fbcz5YIvNOn5OwEztNn7jfLMB90/h08M
lKh1gYirRanl5+cB68NfEWbXqeAOr9dn8iQz7FB1DRYb3UQWSJ7Fc3QCPOgD
TKTDcRSaweTnPwJcsCzyZoaQGDM0zLP83WI5Ac7HZhX8NO0CayJu1efMF8D5
jy1v3HypQGayqTjSkQD5fk8qOaHzWGmYcth8NNqfhqav3EWfB/PStEaWE1fE
X2756Gb12KELvlwQ89F/kywKfK7hYZBeYWbL9XbwL/Tsvf0pK0C/4+EbIbTv
o3JkRT3loYOVUO+yLrMBsLBmV5Sybwhgnvoo23CAXUgvwDy1YLT8iXTdLoB5
apNhdRVkGe0v/+epb7/h7ekQ7gWYp44Z8I+5KUcFmKfuaUrg/OdNBZinVnKx
5zFI6gWYp778UjXm2dVOgHnq7H9nW9brWwHmqe00rZ9VG1YBzFOv8ZvnKa0U
bfnp1P18Mqapg1t+etOWIzsukrblp09yXWrdzrq05ac3czidy6w2tvz07jX1
XU8acJRBu7IG/wcscP+fyp0enutIzLdv/VWhbFDUIpCfaXQYcL0a6z36iB3q
6yVp+PQuAQkBriduzzlgNttJxZVCBsj2m/TT4w0nLGoXtVJIQPP9kMUSPpkL
Trxe3G+D1o2V+elI0VxuaPNy/aDCLBPkCpH/dsCMB0pYlxG1lRngQu4Q7W4L
D2ywYpucn14GmNe+fr/DtrOYhYJ57VbpweJ989wUzGtzXbo0qgnaAOa1pcTE
L/om/gSY18ZF+13arlEHMK8t0xVdWGb9BfDhij+pegtAn7He/0PEfcdT3f4P
HMdBZB47aUlDQ5LI6rqStJVSSUZUEhpGKkW0tENWpayyK+PY45KElL2PfYyQ
cZJjFPl9fo/HfV3fP3vcd3Q+47reVz296j7czgbCWzQqJMdl4DjU8w1YnAxa
+VMeRV6SharZYh94hiMBV309t+ukLFy6e+1ypfE7AHvvk4KaB6t23yW+W+vB
+LxWRUH4VPily1K3OqA/mqy05DkXNEh51LjBpBWc2qSxkGnCAdBUL1hIhwU6
XDem0HV+gg9d3rPpB/qAC5turfuVBRzfas/NOQ4C2DrDs8mOWs//8+Ib575u
9KDON9iHR2/bNfk3rRNgH67j/mC1uHMXwD58nCP00kitC2AfHr6u7OAlrQ6A
fXhYx3Cnw0wTwD48qiPC27OuAmDf7Vwlv1Bm5TjSn4tTUaTW9dJjx+rUfP+i
BR+GTjRN8cHpfccFj/BwFRg4CLPT/vFDdz/3m8GXuQpoDh3O3nwCsGFo1+LE
6UkkMPjvdb2gEFTYJNxRnTgGitVqkzvFhWE5kssIr/wH0Bv4NXCJCHx6Jr+h
/xIN1kmah/spisLQmSVGRcrU+hZs0s5YJQbHPnCLLqnjhaEqXnzdMuJQdIl6
9UQBD1ycaam9PUAcHr91hFHj/w9gbz4R1ty8vkWoAHtz79jHFbp7mQD78cwC
HdfwigBU/MJmsf+6LqCfnftvwcURUJd+3XzP4V6wYYGn8S3jHjA/sFLV6cQA
4Au9GLL6bgcY+2PqaBU6DI7k3Li9iJovi3t//5hrGwNVr7foPbXvBNibu31q
PbjGtAtgb+50cDrWy4L6Pv9581j9uKbjazrBnaF7fzuTeeHCQb08Rts0MijI
t5TPps5/p2KfFR+eQ0YGd89+zOaHOoOKdkcquArG7fYv/fdlHmw+96soZOIP
Guy3/Pr0uxA8tt3OUv7vX+BiFrP2dqsw9GKcNix8ywMvjGds4ekRgVUgpOjT
GC9M33rsZ2u3KIw+GPm1Q5YPvlSe2u80IgbtL22n2djQiGevSNAIuD3SQl2v
+2+W7/sBzD2Ln66+3wUqUt+VP/X8CbLX8O1U/tAGdIePptxKGwXv4zbyjzxu
A3UbbndGD/8GZqM3x0SmOwH27I9f8j64Qu1n2LM/q00p0P/dCbgkyq1PbeGD
Q3V9j0KkZtHIK/njQZr8MHv4uf2gN1eBrv/zq7n686D8vR+3Qu/MIeHuZttY
GxHIXCmgckiOOm9s4hJYZi0KfdHZJcep+bJw1Lj6sYMYVGB5R0hT52rs4d9Y
pg5fHBQpwL4dblw+Muz1ApmJvPwaV9MPVn644FhO7RMnPZtfysgMg6OGP7Ke
bWwDTW3angcZ44A7qfXg6I4ugL27XcPY+IRDFzj+ddXJnJd80GUR26ez8x+q
Sdq2PDGEH8o7TV3opObL3J7eO9lFItD1+hlz5zJe6Ozf9Iv9SRSK2pqXyKnw
QflJXqPh8j7gZeTvvmkpCyxed8m2hDMIdGtG1qG5NhB7qbFTa8MocFxhY/ri
VBswCOC8GUzmANMtPif2U/Ml9vBKq2MdD0l3Ad53t8005fihr6fLycHtXAUF
/w6oZy2dBxXMbnorrqLWeygit2SbCEQ7+UO3fqXBe8tVTJq3icLO49aL1mvx
Qa/ttY3hu8WgtouMXn00L8xV4AvZ0jMATofyG5sPtIM7V5r0YhVHwJZ36AlL
tQ2IaoU8XbSJA9ieFgljtl0Ae3m9yrfRh/d0AZWMIxbXmvmgWwNzn1XaHCpr
LE1IaeWHTH3da0fecxX8PRf0FfXOg9uWaBt4PppGS3kfDu2micKrVkZjsxJ8
cGqwvqeUTwx+GwrQaKTOuV46LepH5w2BhYs9gxKc2sCN0UMfM1QnwHSRgL8l
Nc80+ycf4xzlhwoXjNNlk7gKBvVrcuy8ROHIPkFjO2pewl4+fLD6cEPhKyRT
sEBtrGYIvDdK6RKl5h178aohwWcT4B/PpP9Vpy4g9WOJd7wPP5zjO3G3r56r
4KDuAs6fJFEYu/kYS1eDDxrY1aecSh4El4Xmn+Da2A5OpshelR4aAandRlJJ
h9rAFb12M01/DljXHSCsQp3PnipvafER4IfKvpeaTy7hKuDZrOKfITYP2tjV
7FU15ipIXLjDfbOaKJRqfWxqo0atf1ly9bc7hoF+7JKQSmq+28by2mMvyQF6
WR9OcZ2k5nfRGMHkb/xwlcL1y/EFXAW7ZsIlon+LwH3c/DEcGh+MvQK9xwp/
gt/Si77ZPGkDH0J0HHjpE6D8ebuJG/U+npa1bdqxkzqPJPnpiL7iKpDQGegq
uiQKVyxoOFFIXa943Rc0nePDoPjSKs1p6vv7up/68j6OH+76195u3cBVENAf
PNJXIwpPMj4bTS3ngxI/hbtfV3PAjIUq6yx1P06ulVXxMBaFj89+TVm9lZqX
N4dEfz8zApSK7Z+v0WoDrc8+1lQd4oCqdbXKfxy7wFu1iNbVA3zw6jeTIIuO
OeQTMbifMcwPfzgbfzwQwFXwR8ileFhCFBqifSyjJXzQdO5yf9beIaC5zuBp
uVkb2G1o/9v+4AQo2ncoYQ31fhiJzja8teWH/rIxf3qo61O0JydQ2FcU2nR9
rzGCfMTfT9GXLl7RHorGOrNmrZKHgHyD0lOTbW1AnUcsSfkmP5xBs0ana7gK
oF/WxM1YUfh3sm/gKfW+iPvXZFrc4gA/KOKz1bUL1Dn4L0zi4ofWgdZryoW4
CmSYmeG/8obBieDNb32o/WKdctAW1c/88KMWJ1i9lKvAcHjD1zXcE2Bzar7t
C+p+KGWMj4/ZiUKBc7dOG1LX/46FVmWs5jAQ2qSxf49KG0gKPDS+LoIflsQK
JBlT60sC4N5W9IkDvAcyXlynzlfOMYrbEnaLQpOji5/06FD3/+gWZ22DEfD7
Z1xwpHobYL20NPaD1Pol/O+6HfX/Bxw8JltuyQ953m5tm5fFVdBQXByrfV8U
ass/3/6cWk91w67Z3hkfAsM6M9srN7eBsW+qh9b68kO9kToanfr+J0OuCspw
j4DllnsKR9e3ASmDnSLtSyfAnZhfb0Soz/Mvv60iiJrTxYWQdzn1eSoWTmuW
uw8DgezTdUHU9bhg5RqkksIPn4eHeInWchVcDZK7e6WLAwJtHjvTqd+/76PQ
wgPHReF03T3RP9R5IOnX5UCDkxPgx3mXS2+p85rg98igGxf4oVZowc6EEq6C
pIqPt9qDReE+Zze3V9Tzhv29L6PKxs7+NSL//illND9U9mk+9vfBqmEeieeL
SZ/0xaFJQdukGtIn9WZo3T2W1UD6pLM+zyfipppIn9T7dofw7V1M0id9M1rs
z+pgkj7p5afXuy6JtJA+Kfj0UphTwyR90txxRl+/DpP0SeeX0O6qKTaTPumN
pGW2tMhG0ieVGk3NP8GoJ33Souj7CmLLakmf9C/fX2PD41WkTzpboHr7hFIZ
6ZPGmXcHNr38TPz9oEtO9qbGHOLv/UecbvJ/Tyb+ftApojRHJ5b4++cjGldZ
1K+xv397z1TFbZZB/H3lgq4/KsmfSZ/0+4aqXkZrNfH39j5rXr2KbyH+XgE8
ivsk2k38/dnNPnnjjv0I+3s/tSypI+FDCPt71d0LVl3uHkXY38uG9nte+8JG
2N9/Bbx/V5ezEfb3JleDN53gZyPs77U29qbWrhlG2N8frVpZuGr1AML+/p2z
h9uiom6E/f2f25bNDgdbib+vMCtX1xWtIv7+xtRttqp8BvH3Gmt7vaTswgD2
9/mncv9tcMkC2N9r3P7R+ORJLvH354QOODk8KiD+/svu6iSJW5+Jv98xPG1u
WlhM/H3IY6XWjfFlxN/ntpU6OjytIP7+9dvE+zz61cTfKyrp20Y51xJ/v0GZ
zjzkVQ/wv5f5GKvc+FLcCHCftNMjOutOdybpk/bce60w+qOC9El/hTC0u/7W
Iezv2/rYvjo8TQj7e2XJd2F1uc0I+3uX287nLkcxSc90aZTFm928LaRnKq1q
nDg5wyQ905CRwsjM50zSMz14795tbdRMeqZNaXt11jg1kZ7pGYWKGR/q/cT+
XuFBPq38Wh3pk/7ea2r34n0B6ZNCjfbEGw7pxNc79s4sPF2ZSHz9kyaf0Sjj
aOLrh+9xa6979oH4+tCNVULh7bnE1zvc4XlWOVqGsK8PAxkfOE8bkEFiw6os
rvnQW3JVkFhNL/H2kZf3freLHkTY27OKeVZnOo0g7O0lWwJ7bC+zEfb2S4t2
1nh2shH29odkBSTU77AR9vaP9fY8ZH4ZQdjb/6k76pOx9yfC3n75+5qBN/59
pJ868/hef6DNF4T7qcOG8xTOx4Ug7PG3Rv/6lSCZCrDH3/OookNyYQ7x+Jc0
+e9ZvcwnHn+Ro2XZ57FPAHv5fr39KfffNgDcR+UcmMcs0IgnfVQ35ZHFg7/K
SB9Ve/myANHBWoS9fPAVmvv1c40Ie3nx6ZibFTbNCHt5vmUr3qm6M0lP9VSo
xZ0IDpP0VM0tPs0eF2ghPVUbvet3D6UzSU/V7NW1S7e4maSnetkrvfRceRPp
qepUpBrYbmwkPdWze4y28S2sJ33UmGUbpCeWFJI+qtecZfwloSzi4csDXTgL
xz8SDz89eYznYmM08fDz9n02EymPJx5+cVT+jrlXmcTDi0x2xy1eVIKwh9/s
ei7384o6FOlWHLAuTxDyq9cf0XPtIT7+4VOJjaO+Awj7+Gjrxq3OAcMI+3hl
1SnuPi02wj5+ua/KveImNsI+/v6Wg2dOfWQj7OPH8y7nL3QdRdjHL/U0f7fP
YAhhH2/1lDl0rvcH6bcObWxeR48tQ7jfGrT8bLpfaCLCft4kHyjziCQC7OcT
rmvGBT7LJn6ed+vpR3/v5BE/P3/5msA0rU/Et5+zpueFSTQA3GddSecaPZX5
iXh31o6r1j0q1Qh7d6kdtyV2D9Yj7N0bmldaOd9rQti7RwnklFQKMBH27ueH
3x5f/oWJsHcPlFlVoyzcQnqv0PewncZPJum9frqTa/XHnkl6r0verythujaT
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
2ucLJ3f2En9fY7J2f1MCg/j7C+uTI6U13iDs78dK1h9/7/qA9MPT3/3wy5l6
S/rh4lZhl7I1P5B+uPNd285vu1JIP1x5oWykwe9U0g+neQVeK41nkH64gXl2
BPzAIL5/NNpgj+VaBvH9PZbs28qTuQD7fofnvMPnFlUT35++Un49Y0kH8f26
oXWc29Ys4vvj8v7JZLxmEd9vn6M63reji/j7/fWGF1oK+0nf20OwzEz18yjA
vv7TGbU1axdwQdzvvgW0Hvhd4YGlGZ/VZrgE4eb++fczqPX0zcd5v37xzofG
Nc9SY2a4Ifb3Gd5bv3zfOUN63ls+HxlltU4B7O93KC/XfhU9AbC/57miJm/3
gAOwvz8tvVn8DDWvrJY9P9IpTYcawvkmH0smwA3Z+hecYDr8HhcPJKj5beZN
wtSihRJwxXnGvxCNCYC9vlCCRmSR1m+AvX7ugudHTy8bIj3w4qbPl++ubSZe
P1vkpb1ZcwLCXn9wnvSZK+bXkcqHYesf66j5Gg4POuWGggi6PuvNB2nozmzO
PigSD7bO8MrYb5SBiXoaBh4/ksDK+8u2JTJkYAz/Ut00mAp8s4vnG6rJwqKQ
6AwBOwa4Vfjq8CKGLPyU7f52BTVf5zuUPXfQkINa667O3XVnkJ8PeP9ir/W1
zFTy8wGRqUqmtA8l5OcDGPGRL7tDWsnPB2iPzjxhT3aRnw+oPyBS1ZXPQrgP
nuZToCUkwAN35QivzSyk1s9t34frqP1m5tqkxZlPgvDE1xuLF5n/rw8uvSeD
sYY6z2Kvz/p79Kp8FgfgPniubW6aGDVf+3bHjW4cF4evLzYXmQVMAFM3YY37
V+mQNSXke4U6/xhaaxwQnqbDc2efrTOhzlO3FKzhsKcEtLp04p/imnHi/Utl
NrWs8khGBe9MMi6KycAji066toolAYUiB4/fATJQevOXL/MqUoDRNc+hdZKy
8NvPnUpW6gzwsSd61MpfFl4Ps5M+Rs2bJ5dWlY3KyMHaVp8ssRAGGByysP7q
3ACe7V53AwZ2opW2Vy60G7YDzYfrvQSiWAj/fMGW4PQFPDYsJHne6QvvDgF4
MVu9jPsrdb0Y7toQCMJAXp0ZBRYP6Yt/bpmnlLdrAuCfB8iQGN0/RZ0HHXbx
nn6iIQ5pRW1vsrw4oHCP6vAzTToceaA/bv17AvxfUXceT9Xz/wHclqzZcyuU
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
dtfLLf/7+f8AK9IVhQ==
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{789, 757, 630, 631, 632, 633, 1189, 1024, 890, 
                788, 718, 676, 1225, 1059, 926, 824, 754, 1258, 1092, 959, 
                857, 634, 1190, 3634, 3635}}], 
               
               PolygonBox[{{644, 969, 859, 685, 643, 1199, 1033, 900, 798, 
                728, 686, 1227, 1061, 928, 826, 756, 1259, 1093, 960, 858, 
                1291, 1125, 993, 1324, 1158, 1354}}], 
               PolygonBox[CompressedData["
1:eJwV0D1PU2EYxvEH2oJAwiKJ+JIYBhmM8hIHF6IkojG4UdjAwfqCAkUdSJh0
0C8gFmkLH4CXhBmIFoS66qCALCyK4GRRMTjxO8M/9/+67uc55+Q03BnuSpeH
EMowhXnhJVIYj4dQioUwgAQKugzu4h7e2O/rB1GB5egO7mPC7rduCJVYic7j
rf4EXukuYEf3AFndHzmNY3iv+6xrwrR8DRO6d3I9xuSL+KH7Jl/BgpxEvy4n
/+XDqMIvuRNFvmr/hTdjRu5AeSKEXnmTn+PPeNa5gnkSrbrXdsfNoei7+KGZ
xEe+6+x3fhWL8hnnRnh39H6e4m3mtnzefCHfNB+6l+cH+ib5sVlr9kfPMqvl
Er+Fy/IH+aw5KneYa+6v8xZckmft682n8nUe4338K2/kz3nOnWXzFDL6On06
+h/8f/TN+MT3nNvh7ViSe/BINyn/409Qg6JuI/pHmJNvIO6Zt+Utnrdf4acx
Lrfgp24AgzgCFC9QRw==
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{789, 859, 727, 797, 899, 1032, 1198, 642, 684, 
                726, 796, 898, 1031, 1197, 641, 683, 725, 795, 897, 1030, 
                1196, 640, 682, 724, 794, 896, 1029, 1195, 639, 681, 723, 793,
                 895, 1028, 1194, 638, 680, 722, 792, 894, 1027, 1193, 637, 
                679, 721, 791, 893, 1026, 1192, 636, 678, 720, 790, 892, 1025,
                 1191, 635, 755, 825, 927, 1060, 1226, 677, 844, 946, 1079, 
                1245, 719}}], 
               PolygonBox[CompressedData["
1:eJwV0rlPVFEAhfHrgoVRQQ0FCSjQWFAYWWNBISQqLg0JYIcxNhQyygyixsbC
v0EFBmbAdhzt1YJlAIUCbVQo6JCwqBgTdvy94ss557tz8/Iyr+xOrLnzYAjh
ADLIGv/QjWHM4PShEB5jH68Ph5Dg/qDOTqKcm8QQN41T3CPsYZiPc79Ra/ej
jJtAmrtuv0OtPY/P3Em7B7sY4rq4W/pHNNpL+MV9tdv0XdTofSjVc0g5n7dv
60fyQrimv0WNPYdPzp/IUmeT/E39Lwr0DpnPP9TPyx2Z5h6402Q/1yvkAl8v
79pHZZvdIHvsEvkhep5ssH9izf3L9lO9XH5xflG22juotmOykOvVz+rjGHTv
mTzHz/Htep7epMf1Ij2rV+s/MOX3E/YNfT16F70b20jZ95236u9xyV7EKjdr
t+jbqNJf4Yw+hgHnV+03qLK/R/85d8JOYAuDXIxbQaX9EiXcKJLcFTuDSvtb
9A1wx6N3wCYGuOhjXMYF+wWKuRH0czkc47qwEX17/D3uP91hXms=
                "]], 
               PolygonBox[CompressedData["
1:eJwV1NdvT2Ecx/FTI8SoTUKC2lUSRMSmxLpQ1N5ae8RISCTCBbFatf0Btku7
dmJcofaIPWrvC3u/vhfvfj/vz/OcnnN+z69Ny52TPbtEkiQp6ObHYLKoZJIs
NzfjFErxGfiELaWSJFf3HBl8A2rqTmCT7iRK6qbjIzbrc3TP0JyvRw3dcWzU
nUAJ3TR8wCb9BF0x0vk6VNcdwwZdD74HLfn1+D26FD4V77FRN16XLR9BF16M
p7pLPFv+jmbyWlSTj2K99dt8tJxSOkky5d1owa/F/a2f4/3kj0jinmZFe6fI
7+Kz4OPs66NbJqebD/WdzFxe1hzEM80FvI5ZyNuaneMZ8cT1vfgiOc0sst4+
ruPf0JTPMqvqCuRWZlV+BOtcu8RspLtlbVQ8p9xdnifXknfJGfLVeG/7z/K+
8gf845P52zgnPpYPlA/HO8Sz4bGuCV+DKrwQa3Xd+E4051fieXR/MUn3Js5R
N4YXoBB/MFH/Os7B2mg+QD6EjnEfPNJd5APlr2gszzSreI98ubJ8GGvsW2w2
1N+M682R8T7oyrvzuXJNcwdvY6bzy3G9a3vyhXJd84z1dmYf/h6/rXeNM5Yr
xDnGd898ZRboRllfGt8n3QNdjlxGzpLny7Xlg3KHeB88tP8CHyB/ibOKvy2z
sn15ciX5EPLtu8FHyH/RRd6OZvKl2GP9NO8tv8MvnsNfxtnwkby/fCC+P3Ff
PNCd51ny5/i85NVIlQ8iz3pnvg1NeVH0up+YoHuBfN0Ifh8N+CpU1B3Aal0n
vhVN+MXodT8wXvccebrh/B7S+EpU0O3HKt1+fMc4/bN4Pv0wfhf1+QqU1+3D
St0+fMNYfXE8j34ov4N68X8M5XR7sUK3F18xRv807q8fwlunJsl/Gh2mig==

                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1nfclmMYBuCvJW0a2ilpUGloJ+1FQ5umlhYttJWRUWhnpJIG7a29RVE0
NKWiPdCgSXFcP38cned13+/79n7Pcz9f5Wnfs1GPRAkJCY0SJyRELvPHo/yg
D+OO/gpZeMp8VnYmMQ94z2dypfXU+rt6foro8+JzrO+O91HG2gVzLjnZXDPe
a75Lvml+XOaWheQcWU++YP9PvQ/lzWlkPjlD1pFf2U8vx5iryMKymFwY38/e
l7IkO/WsFj7S39T/lUPISkPzOdmFJKwyp/Ha9/QC8X7znngdv+nT6MFf5hdJ
yxZzEpbrpdilvxXXlFIkJVn8rCRnhdeUZrf+No0pzd2sjGvFHv0dmlCGH601
4nd9Oj1JwSprZflRH05TyrLXWmP+0GfQi5SstlaOvfoImlGOfdaacFGfSW9S
sSauPfv0d2nOeXNXkrLaXJ79elMu6Z/Th6vml0jH13FGWKtXYL/+HnGjhpqz
8bTxguxGMtaY09p/Xy8Y7zMfkM24rH8R19P+W+Y8cT/M1+TL3BNn0d5M+Y31
DPpYvaosIovLRXE241zZX6c/FvfPfMCcTX5srh5/vzmRfDVeI7PLh+Qs+aR8
xv5veve4tua7ZF45TdaWa+2nkyPjfTyiz4/Psn5QNueKfr/1KfqsOAv62/GM
xTU0X5d9uZet5oz2x8VnxRk0r5cVOaiPpAW/m58nOevMFTkU15k/9dm8HN+N
DfEMckgfRUv+ML/A3aw3P85P+jP8pc+hL/ew0VolftJH04pKHLbWgqv6XPpx
L5usVeawPobWVOZnay25ps+jfzzjbI5nnJ/1sbShCkesteK6Pp8Bca/5Ku41
R/RxtKUqR6215oa+gIFxLdlirRpH9fE8SzWOWWvDTX0hg8jE13E2OKZPoB3V
uY9vrNfgF/0D2lODzGy1XpNf9Q/pQE2ykDXOHdnJQU5yxbkgN3l4gLw8SD62
+axaHNc/oiO1+MVaW27pixhMfr6NM8kJ/WM6UZtfrT3L3/piXuGGuR/p2WYu
wHd6HU7qE+PxdQ5fM+fgOfNFGf+gpGBDnA37o/SH433m47Id/8TPZO9TfYme
Qn8nnhuGmG/K/mSggL3P5bdx7fXxca9kUVlCLpYNZUH72/UnKG0+FddSToz7
IT8xJ5Gvx7Mic8b3krNlXdnZ/iW9JynZaH6CE3p7butLSem1w80PMtR8Sw4g
I9/FGbA/QS8Wz7t5R/ye4HTc1/ge+iQ9qf6Gnosu5suyF6nis+1Nl5viedFH
x/MiC8micoFsIJ+0f1LvQFnznTgncmqcC7nMnEqOiOdT5pOF5VxZP36n2f9b
H0gFcyZZUH4R11Fuj3MrPzAX51F9SVw369/HdeNMnFXrk/TJejJ9mH4/Xc1X
ZG9Ss9lcl1N6R/7Vv+Q1/jEP4j52mAvxg16Ps/oUulGP09Y6Ef9pWS5epzA7
4+finP4p3alPER6hKMUozq64hpzXp/I8DTgTZ5lErDC/wW19MJn5Pp5XP+OH
cf4oqS9N9P//oUrY+w+uhhAI
               "]]}, Annotation[#, "Charting`Private`Tag$484475#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1mW4VUUYhuFNWCBICtKgSKmUIkpJiIEoHUqnSBzpsAMpRVBBWklbVLo7
lJZQGmmQRqTB+7v88VxvzMzaa689s87J2yKpVqdkiURidPJEonjaRKIO7Zcy
kdifIpFohH/ln/BBqD4V+upzY7uuLvrrDsiNcVH+Oa4Rqk+ND/R5sENXDwN0
B+UmuCT/EtcI1d+Jfvq82Kmrj4G6Q3JTXJanYa3ufozXlcGA6OU06C/nwy5d
AwzSHZab4Yo8Het0BTBBVxYDo5fTYoB8L/7hn8dv/G7je/jSmCZXR0Pdh/IR
vjmuyifkqlgiz5DX8wUxUS6HG3wDbOEHGZ/B34WBcrpbEolX+Pv4C/QFrOH3
mLeXfwzT5WzmdYt742/jm/O7+YL8u/yL5n9Ej+oe1LWgd9I2uvL0mvGT/FMo
JS81nov2kivTmcY38IVQQp5k/G76qvwELS/f5BvicXlrPC/6hvyhtTNpOgzS
p9e35/PHXqI1sJbfa96+WI8Z8gt4STdYPsa3xHV5VnwXNMLHxo7rW8VzlGdj
o64wJusqYHCskdPHvcj3Y5/uL7kMZso1Yq/qhsh/863j+8in5KexTJ4jb+KL
YIqcxffoHN+fT/Av8tv4+/g3+Y/jfmgGFNN9ZCwD7RD7LM4FrRn7R7cu9jd9
TX6S/mXtfr4sHpZnGc9Ou8sVaU359vgd4zvQPXIh+l78hrSJ9UP5E/o2SKNr
Kyf40/QZLOfnmvc7/wC+kisimbkvyX/wQ4zP4TNicOynOJ98Lazn9xs/wJfD
bLlWnEndJ/JJvm1cD/N0m3UP4mu5Eobq5sqZ4lnF/eOArhk+1Z2SX0ZyzI9r
Yp4+M4boCuOgrjk+052W2yEFFsQ1MF9/N4bqiuCQrgWG6c7IryAlFsY10Bct
Mdz4WX173IJFsQat0BqfGz+n74BbsTjWoA1GGDuv6xhnEUtiPhbos+AT3QM4
rGuLkbp/5E7xm2KpbovuIXwjV8YI3UI5Kz6NM4wjuoNxfjFHrh3PSzdKvsAn
4Q6ckZ/FCn6Z8a18UXwrV4nn6/duJP/J5+ff4keat4jeg+K6z4xlpB3jvuKd
S2tjA3/U3EN8BcyVc5jXg68Tn8+3jH1M98ZvRt+PM0XbWTea/1f/ULxLaFr6
clyLppLP8tXwqLxSzk17y1Xocuu3xdlCSfk741lplzhDsQ/4xvz2OPP82/wo
axbTbBimz6TvFM8j/g7EPWMjf8y8w3G2MU+uG3tFN0a+yHdGaqzQ/RHPCN/L
VWM/xfmTd6T4/2/oEj47hsvFcFzXHh0wFR0x1vglY13ivYyV8VlYqs+Bz3XF
8beuE8bpLstd42xjle7PeDfjB/kpjNUtk3NihFwCJ3RJ+EJ3Re4Wzxyrddvj
OeJH+WmM0y2Xc8V+kEviKl8Xm/iTxo/E+wjz5Xp4VfelfJXvjrtwTn4Oq/hf
je+Idxqmyvd4Vl3jfRTnjG/K7+QL8O/wX5i/guaO306fWZ8U6/lrtB4e0/0u
56Ovy1XpKeuO8pXwiLzAeE7aMzpaX05FW8W7i+6L9wPtG/cS73Xrx/PX9EVj
P8d3iT2rS8efp9Wxms+j78P/Zs3O+Dz8pH823g3Gmsm7+C+Nr+TzYLT8CK7z
9bE53svGj/GVsVBuEPtBN0G+zvdEeqzR7dKVws9yNYzXrZLzYoxcKs69rism
6m7IvZABa+OaWK3Ph7G6R+Os6bphku6m3DvOPNbFNdAdF9ADPdELvTHZ/AT6
xHnC+rgGftXdi3G60rEPdMfj7GKR3BB9dFNi3/o/8z+811oA
               "]], 
              LineBox[CompressedData["
1:eJwVy7kuhGEUgOEzmyUSnX1JJHQ6hdBrJiol0Ui0Mxdg9pm4DRrrGBJXoKaw
L41CrTQX4PmKJ+c773/+hb3yVikTEbusjEaM5SIesxHf+YhVbu2bnGj39kWO
7Gv8aQecaRkq2jhP2ikVzvUsVX2C53RPlQs9R02f5CXdU+NSz1PXp3hN99Tp
6gUa+jRv6Z4GV/oATX2G93RPk54+SEuf5SPd0+JaH6Ktz/Gp7Zg9s82Nb8N0
tHm+0j88aEsca+v0tV/7Bnf2bUYKEfv2H+9l70Pvotlx+w81lS9v
               "]]}, Annotation[#, "Charting`Private`Tag$484475#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1XccjVUAxvGLkDQo2mVUilK0t5RIZhKFljRQlMrOpkFGWRXKzGjJJlEU
Cu2h0pDR3iUtfZ8/fp9nnPe9977nPefcSm07N+tUpFAozC9aKDQoXihcVrJQ
WF6iUKiDrfIU3IOu+i269iiFNbqGaKZ/Ub4Y2+SpeFi3Wx6CKuij66b7ku+A
vbBW1wiX61fIdbFdnobRugLu1R2Lvrru8la+I0pjna4xmutXyvWwQ56OMboi
uE93HPrpesjb+FuxN17TNcEV+pfkS/CVPANjdUVxv64q+ut6ytv527APXs93
6cpivHwmmupayC/z9fG1/CTG6YrhAV01DND1knfwnbAv1ue7dfvjEfksXKZr
Ka/iL8U38lz5CEyTZ8rj+T0wVH6Lnofj+RVRPM8PdF1v/iu+MzbyZ2M/fjE9
Gt9hjryZ1scubMjvpwfgGzxq/D1aGzvzGfIqehJ+xkJ5C22Mf9HM/VfS1Vkb
tEHmnZ6OX/Ct8efpkZhubBO9GLP0j9DiGKZ/m56PE/iVUczjB2Vt8l/zt6MM
lsjH4Kk8p/GZfDk8Jp+Dy3VXya/wDfGdPBuP6krgQV11DNb1yXPzd6As3sh6
Qyv9q3IjfC/PwRD0zTPpumB/vJn1hdb6NXJj/CA/hXvRL/OuuxMH5P1l/aCN
fq3cBD/KT+O+rAVcbWxd1hp+kp/B/ZnnPFd+W74P17jutawh/Cw/iwfy2bjW
2Ov6ZvhFfg5D0V//ve4ulMu85/twnX595g6/Zg3iMV1JDNediGG6AfIP/N0o
j6VyFTzNv2N8Fl8eE+RzsZqvgUX8Ncavz5rjm2d/8WfgN/08WgEz9B/RulnX
+gl0z6xrjMh30Fr4PWtSfolWx4+YL39OG+LvvGf3D8xYzh3aNe+XnoNfcaC8
jB6bOcEz8qf0UrybNZNrMFH/Pr0we49/hdbEYv5a17XlN/JX4Hd5vlwRT8rz
5Il8KYyUa2C4bpD8E98NB2XPZY3pDsIk+Xxcp7tBfoNvgT/y2Zik2wujdDUx
Qjc4+5PvjoPzezPXaKd/U26JnfICjMxazv7U9cAh+CDPgRv1b8lX4k95IUbl
d+SzcJPxt41dhV3yIjyU+3CzsXf0rfCXvDj/E9kHmW9dTxyKD/M5uCXzLLfG
3/ISPK4rjYd0J2N09kXWCN8Lh+UMyXehvf49uQ3+kZfiCd3eeFh3CsZk72S9
8L1xOF6Qj8OzWWvZq/zBeFyuhVf5k7GEv8V4B/59/mqs58/M2Ze5pJUwU/8x
rYdl+sl0n5xZGG3sXXoB/sCp8sv0xLx/LJC/oI3wD8ZmD+da/Q56T84Yem7m
AEfIy2nV7EM8J39GG+AvfJyzhB6CJ/Je6UX5fn4NPQVL+fau68h/kH2J//Ku
5cqYlTmSp/D7Yox8GsblDJF38n1wJD7J+aQ7FJPl2uigu1X+MPsDu+Xl+R/D
MP2fur6ogM35HbhNvylrHgW8mP+HfA46GftIdz2KYEXO8tyTMXQOeXZjbVEU
K3N+4UH9LrkfKmZ/624P+k/kG1As50jOGgzPPMr9USlzq7sj6DfL7bBH3qFu
qm6/vDP5dEzUjcjZww9A5TyHXA1zczbljOYPw5TsA1on5wq/Nmsj64f/kjZB
F9d3oZ/qbsQG/iwU5xfRo/AtZuc90Esyt1jlvmm0DMYZOwOTsu+zxviBOCrr
Tndn0H8m34QSWJ19mH2fdS4PwtHYorsr6D+Xb0bJnIfZd7gbXdEN3dEDPdEr
Y+75IvsJe2aPZZ/k7ND/Jw/GMXn2/FfpDsdU+SKs40/DC/xW2jT3oLdr/wfB
5YWl
               "]]}, Annotation[#, "Charting`Private`Tag$484475#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1XfcjmUYxvHbfu2tzChbmWVvZWZHRVOaioYZhQYNq2GXvffK3iszI6JF
IUoqaaCl7/nH73Mdv+PyPu/rvs/reop16dGue6okScqlSZJrGZKkVaYkGZcx
SVIwKSVJ7kYl9NRv1JXHdv4SErTWj9dlxGR+D0brTvLW+I5XRi/dJl4BO/jL
SIU2+gm6TJjC78UY3Te8Dc7yKuit28wrYiffyrNgAB/I58q/yY/gKk+NtrqJ
PDOm8tU8NZ7nnfhY+Vu5Lc7xT/j1eIPfyvvIW+RKOC3fgo/126xZ8ZL+irUh
BunnWX/XdcVPcjX8pT9qvQH5MifJSHuJtTkvZU1jv538gT4tz2I9wUvH38Kn
2V8jp0E2/oL9S3Lt+Eze2f44+VS8A97O+j2vjO/tHbDmx5v6v6134DZ9X+tW
XWXs4tvj8/EyH8zny3/Ij8bP8bRor/uQZ8V0fh+qop9+m64KdvNXkA536Sfp
smEGvx/VkB4ZkIKMyITMyIKsyIbsyIEOPmOyn8+OmfwBVEdOdLQ3RZ8Ds/iD
qIEX9dvjHWIPfxW5Ypb1U3U5MZs/hJror9+huw17+WvIHbOsn6bLhTn8YdRC
HuSNWbU/3V5uzOVdUBsD9Dt1VbGPv4586KSfocuDefwRjNed5u3xA68TZyvm
jFfDfr6DZ8dAPoQvkP+UH8PPcnX8o//MWhSj9KnMQgv5On1n60xdOl1e60le
JuaCz7e/Vk4bv4P3tP+bXCc+i3e1P0E+E2eU3xV/J6+CQvy8/YNyAeTmb9n/
R26M4rxunHV5l746zsjl8Yl+pzVHnB39UL5Qviw/jn/5MV4M7/DrY97kWXI+
LOCPYqLuO94BP/J6GKjbzWvgAH8D+WP+9LN112Ehfwz1USDmyt6c+D1YxB9H
AwzS79HVxEH+JgrGrOnn6vJjMX8CDTFYv1dXC4f4WygUs6afpyuAJfxJfKA7
yzviAm8UZ0e3j9fGYf42Fumu8CfwHy8cs6ibzwtiKV/H06EXf4p/KJ+T7467
iB/iBfE2vz3OhLxfrhN3tFwBn+o/tubEYP0wvli+Kj+JX+QauKY/br0x5ss7
ftdeauudcW9Zi8RZkBfo0/NC1m942ZgTvsz+ejl9vH/e2/7vct1437yb/Ulx
f8Xdze+xnue34md7h2P2MCzmxNok7rU4tzFXuro4wnfxXHiFD+dL4j6O5xN3
MG6IM6hbKBfGcv40GqMoutpbpC+CFfwZTNb9wO+N58GbxPnWHeD1cJTvjrOA
V/kIvlT+W+4W5xKf85vwnlws5lheHH8PvpXL4SP9BmuGeB+eQR97f8j14rnz
7vanyOf1WXinmP+421GYX7T/aWTk4cNjduSmKMGb2h8iH9Rn4PWtZ3lFfGZv
T/wcXtNftTbCSP2yuGt0T+OiXBOp5S/ivON9+cY4W/ISuShW8o08BX15Dz5V
/lHujF95MwzVHeINcIzv5XnxOh/Fl8v/ys8gDW6Kc6pbGs8Rq/izmKa7wO/D
Jd487gDdYd4Qx/k7KB7nVr8s/mas5s+hRZzzOA+6RvG++LsoEedWvzx+N9bw
53FnnHP9kThb8Sz4eyiJp/QrdMWxlm/iGdGP/2mtH7MQ3+v2pss/6e+PO5i3
jPOvO8rvwJf8fZRCt5gRXQms4z3RCsPi/eka4ys+GqVjrvUrdSWxnvdCawzX
H9M1wdd8DMrErOtX6UphA++NNhihP65rihN8LMqiu361rjQ28j6YEeeVPxDn
m7fFSN3nvBlO8nEohx76Nboy2MT7YqbuF/5gzD5vh1G6L3jzuFP4eKzQ/ce7
Iy1ujjnQrZXLYjPvh1m6i/yhePa8fcyB7kveIs4e38fzYQifwD+K+y5mFuni
HcT5wWj5lpgXeZ1cDqfkm7FFv9maCS/qL1sbRNbPtv6qy+qdP2y9wKuiCL9s
/0jkmHs+wv41uRlKxndvzKH8lT4l7lvrOV4p7nZ+yv7+uJPj3uND7f8l346J
9lZaEzwbZ85aK+7gmJP4fIyRy8dMy+vjOWIr38Izoz/vz+fIl+QuuMI7xLzr
vuYtcTq+21ABL+g3xLPCNj4AHWOO9Sd0rXAmvq+wSpcKz8WdFPMol8LYOO/+
Py3lMtaK/u3/8W6hog==
               "]]}, Annotation[#, "Charting`Private`Tag$484475#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
D3Cdpmg=
               "]]}, 
             Annotation[#, "Charting`Private`Tag$484475#5"]& ]}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"Backward Integrate feedback solution\"", TraditionalForm],
          PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1c\"", "\"u1c\"", "\"x1c\"", "\"\[Theta]dot1c\"", 
           "\"xdot1c\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBWIQDQEf7JdmRa3mU1N2gAo4VCybvOrpU20on8Oh59G/
lxwvpaB8AYe0OaE22UliUL6Ig4quKX+9lROUL+HQ9LDO58IOYShfxmF++otm
yXPWUL6Cw411qgeNkwShfCWHyGcldy7lmUL5Kg5p+lzlKhv5oHw1B80H87bG
PzCA8jUcOkI1DsqpcEP5Wg7xKjqtGve1oHwdhwkh2zmquDmgfD0Hgaf6s994
qUL5Bg5c942++0ewQvmGDjPXXTGLn6QA5Rs5vA4ImrfwLxOUb+xQ4bhuSYqW
JJRv4nB6XrR1dBIDlG/qoB3c6jdFDeYfM4dnysyvmyR/2UP45g7ap+Qml7PC
zLNweHWWd8FVjo9QeUuHULteW1PXN1C+lUPdlzMuBRe2QPnWDpNWLezPnmQJ
5ds4NFR3TfgXpG8H4ds6BNnyppyK+G8DAMGGb8E=
          "]]}}, {{}, {}}},
      AspectRatio->NCache[
        Rational[1, 3], 0.3333333333333333],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->400,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 29}, {0, 36.45700254532338}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.8641430640893307`*^9, {3.864143094166597*^9, 3.864143104412281*^9}, 
   3.8642366895364823`*^9, {3.864399127566967*^9, 3.8643991927177773`*^9}, 
   3.864408290535779*^9, {3.8644084656048393`*^9, 3.864408535203203*^9}, {
   3.8644121372506638`*^9, 3.8644121664991503`*^9}, 3.8647400020413437`*^9, {
   3.864740112446008*^9, 3.8647401315408964`*^9}, 3.8647405821656713`*^9, {
   3.8647411204603877`*^9, 3.8647411572666073`*^9}, {3.864833847774952*^9, 
   3.864833885588805*^9}, {3.864833956755945*^9, 3.8648339894734354`*^9}, {
   3.864834046285186*^9, 3.8648340736853848`*^9}, {3.864834135424553*^9, 
   3.864834160853384*^9}, {3.864834242975005*^9, 3.8648342537785344`*^9}, {
   3.864834347334482*^9, 3.8648343648978415`*^9}, {3.864834756360094*^9, 
   3.864834773550572*^9}, 3.864836297439065*^9, {3.8648363491054688`*^9, 
   3.8648363583734913`*^9}, {3.8648364042357593`*^9, 3.864836411292493*^9}, 
   3.8648367773808966`*^9, {3.8648369316793327`*^9, 3.8648369608979464`*^9}},
 CellLabel->
  "Out[1220]=",ExpressionUUID->"fb1f62a9-b535-4bad-a070-25c26fbbdc57"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.875864985494676`"}], ",", 
   RowBox[{"-", "5.930523459061118`"}], ",", "10.46448048431526`", ",", 
   "10.46448048431526`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8641430640893307`*^9, {3.864143094166597*^9, 3.864143104412281*^9}, 
   3.8642366895364823`*^9, {3.864399127566967*^9, 3.8643991927177773`*^9}, 
   3.864408290535779*^9, {3.8644084656048393`*^9, 3.864408535203203*^9}, {
   3.8644121372506638`*^9, 3.8644121664991503`*^9}, 3.8647400020413437`*^9, {
   3.864740112446008*^9, 3.8647401315408964`*^9}, 3.8647405821656713`*^9, {
   3.8647411204603877`*^9, 3.8647411572666073`*^9}, {3.864833847774952*^9, 
   3.864833885588805*^9}, {3.864833956755945*^9, 3.8648339894734354`*^9}, {
   3.864834046285186*^9, 3.8648340736853848`*^9}, {3.864834135424553*^9, 
   3.864834160853384*^9}, {3.864834242975005*^9, 3.8648342537785344`*^9}, {
   3.864834347334482*^9, 3.8648343648978415`*^9}, {3.864834756360094*^9, 
   3.864834773550572*^9}, 3.864836297439065*^9, {3.8648363491054688`*^9, 
   3.8648363583734913`*^9}, {3.8648364042357593`*^9, 3.864836411292493*^9}, 
   3.8648367773808966`*^9, {3.8648369316793327`*^9, 3.8648369609779205`*^9}},
 CellLabel->
  "Out[1221]=",ExpressionUUID->"172b5b6d-a357-43b2-a7eb-032ef4951a7a"],

Cell[BoxData["6.9682008821618975`*^-15"], "Output",
 CellChangeTimes->{
  3.8641430640893307`*^9, {3.864143094166597*^9, 3.864143104412281*^9}, 
   3.8642366895364823`*^9, {3.864399127566967*^9, 3.8643991927177773`*^9}, 
   3.864408290535779*^9, {3.8644084656048393`*^9, 3.864408535203203*^9}, {
   3.8644121372506638`*^9, 3.8644121664991503`*^9}, 3.8647400020413437`*^9, {
   3.864740112446008*^9, 3.8647401315408964`*^9}, 3.8647405821656713`*^9, {
   3.8647411204603877`*^9, 3.8647411572666073`*^9}, {3.864833847774952*^9, 
   3.864833885588805*^9}, {3.864833956755945*^9, 3.8648339894734354`*^9}, {
   3.864834046285186*^9, 3.8648340736853848`*^9}, {3.864834135424553*^9, 
   3.864834160853384*^9}, {3.864834242975005*^9, 3.8648342537785344`*^9}, {
   3.864834347334482*^9, 3.8648343648978415`*^9}, {3.864834756360094*^9, 
   3.864834773550572*^9}, 3.864836297439065*^9, {3.8648363491054688`*^9, 
   3.8648363583734913`*^9}, {3.8648364042357593`*^9, 3.864836411292493*^9}, 
   3.8648367773808966`*^9, {3.8648369316793327`*^9, 3.8648369609819193`*^9}},
 CellLabel->
  "Out[1222]=",ExpressionUUID->"737c6728-c992-4934-b376-ea23f7889806"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8638909789768496`*^9, 3.8638909843991165`*^9}, 
   3.863891412317354*^9},ExpressionUUID->"e3b56381-3091-428c-953b-\
8049828b4235"],

Cell["Individual Test Benches", "Text",
 CellChangeTimes->{{3.8637030744782195`*^9, 3.863703080794203*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"78f72274-21f2-4a3e-a828-5906a5fe2643"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  StyleBox[
   RowBox[{"n", "=", "20"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Tau]", "=", "5"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Tau]1", "=", 
    RowBox[{"\[Tau]", "*", "1.25"}]}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"A", "=", "0.2"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"order", " ", "=", " ", "5"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"maxIter", " ", "=", " ", "30"}],
   FontWeight->"Plain"], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"-", "0.8345361209284734`"}], ",", "0.9821594008159469`", ",", 
      RowBox[{"-", "1.3929560809587587`"}]}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"InitGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}]}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
       "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
       "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "data"}], "}"}], "=", 
     RowBox[{"ffCartPendulum", "[", 
      RowBox[{
      "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", "order", 
       ",", "maxIter", ",", "InitGuess"}], "]"}]}], ";"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1b", ",", "xdot1b", ",", "\[Theta]1b", ",", "\[Theta]dot1b", ",", 
       "u1b", ",", "J1"}], "}"}], "=", 
     RowBox[{"testSwingUp", "[", 
      RowBox[{"ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "u1a", ",", "A"}], 
      "]"}]}], ";"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x1c", ",", "xdot1c", ",", "\[Theta]1c", ",", "\[Theta]dot1c", ",", 
      "u1c", ",", "J"}], "}"}], "=", 
    RowBox[{"testWithFB", "[", 
     RowBox[{
     "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
      "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A"}], "]"}]}], 
   ";", 
   RowBox[{"p1a", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1a", "[", "t", "]"}], ",", 
        RowBox[{"u1a", "[", "t", "]"}], ",", 
        RowBox[{"x1a", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1a", "[", "t", "]"}], ",", 
        RowBox[{"xdot1a", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1a\>\"", ",", "\"\<u1a\>\"", ",", "\"\<x1a\>\"", ",", 
         "\"\<\[Theta]dot1a\>\"", ",", "\"\<xdot1a\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Feedforward solution\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"p1b", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1b", "[", "t", "]"}], ",", 
        RowBox[{"u1a", "[", "t", "]"}], ",", 
        RowBox[{"x1b", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1b", "[", "t", "]"}], ",", 
        RowBox[{"xdot1b", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1b\>\"", ",", "\"\<u1b\>\"", ",", "\"\<x1b\>\"", ",", 
         "\"\<\[Theta]dot1b\>\"", ",", "\"\<xdot1b\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Test on dynamics\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"p1c", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1c", "[", "t", "]"}], ",", 
        RowBox[{"u1c", "[", "t", "]"}], ",", 
        RowBox[{"x1c", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1c", "[", "t", "]"}], ",", 
        RowBox[{"xdot1c", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1c\>\"", ",", "\"\<u1c\>\"", ",", "\"\<x1c\>\"", ",", 
         "\"\<\[Theta]dot1c\>\"", ",", "\"\<xdot1c\>\""}], "}"}]}], ",", 
      RowBox[{
      "PlotLabel", "->", "\"\<Backward Integrate feedback solution\>\""}], 
      ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"p1d", "=", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"data", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"AspectRatio", "->", 
        RowBox[{"1", "/", "3"}]}], ",", 
       RowBox[{"ImageSize", "->", "400"}]}], "]"}]}], ";"}],
   FontWeight->"Plain"], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"Grid", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"p1a", ",", "p1b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"p1c", ",", "p1d"}], "}"}]}], "}"}], "]"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{"{", 
  StyleBox[
   RowBox[{
    RowBox[{"\[Lambda]1ff0", "[", "0", "]"}], ",", 
    RowBox[{"\[Lambda]2ff0", "[", "0", "]"}], ",", 
    RowBox[{"\[Lambda]3ff0", "[", "0", "]"}], ",", 
    RowBox[{"\[Lambda]4ff0", "[", "0", "]"}]}],
   FontWeight->"Plain"], 
  StyleBox["}",
   FontWeight->"Plain"]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8637030916107454`*^9, 3.8637031163048553`*^9}, {
   3.863703146634164*^9, 3.8637031467241335`*^9}, {3.8637032271314416`*^9, 
   3.8637032981877384`*^9}, {3.863703344313999*^9, 3.8637033675275803`*^9}, {
   3.8637034246933155`*^9, 3.863703488801831*^9}, {3.8637035225560446`*^9, 
   3.8637036066221848`*^9}, 3.8637039678437643`*^9, {3.863704003356416*^9, 
   3.863704015206629*^9}, 3.8637041910564413`*^9, {3.86387938554615*^9, 
   3.8638794077180634`*^9}, {3.8638794473054113`*^9, 3.863879456186574*^9}, 
   3.863879487594535*^9, {3.8638795768290167`*^9, 3.863879601771044*^9}, {
   3.8638860815410876`*^9, 3.863886103615032*^9}, {3.8638861483497353`*^9, 
   3.863886172621978*^9}, {3.8638914447629833`*^9, 3.8638914562922993`*^9}, 
   3.863891796977415*^9, {3.8638918475872407`*^9, 3.86389184764522*^9}, {
   3.8638937946529503`*^9, 3.8638938135878987`*^9}, {3.863893847458075*^9, 
   3.8638938597471466`*^9}, 3.8638940187133408`*^9, 3.863894098689779*^9, {
   3.8638941539631133`*^9, 3.8638941576359406`*^9}, {3.863894255027814*^9, 
   3.863894255155772*^9}, 3.8638944064184275`*^9, {3.864132884995618*^9, 
   3.8641329073813734`*^9}, 3.8641331504876966`*^9, 3.864133195282199*^9, {
   3.86413327929601*^9, 3.864133287553337*^9}, {3.864133332576766*^9, 
   3.864133353182098*^9}, {3.8641334403238955`*^9, 3.8641334566426144`*^9}, 
   3.864133562247438*^9, 3.8641336317199535`*^9, 3.8641336640694847`*^9, 
   3.8641338838003726`*^9, 3.864133916131909*^9, 3.8641339918014193`*^9, {
   3.8641352038731537`*^9, 3.8641352725329356`*^9}, {3.8641417727182617`*^9, 
   3.8641418023916583`*^9}, 3.8641418403363776`*^9, {3.864143075053784*^9, 
   3.8641430827452946`*^9}, 3.8643991519070525`*^9, {3.8648340857095227`*^9, 
   3.8648342635533967`*^9}, 3.8648343410794935`*^9, 3.8648363787789373`*^9, 
   3.86483642145223*^9},
 CellLabel->
  "In[1145]:=",ExpressionUUID->"b5dee5c3-2101-40ff-b338-91333f517d06"],

Cell[BoxData[
 TemplateBox[{
  "FindRoot", "cvmit", 
   "\"Failed to converge to the requested accuracy or precision within \\!\\(\
\\*RowBox[{\\\"30\\\"}]\\) iterations.\"", 2, 1148, 49, 17533747568530898616, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8648363812901297`*^9, {3.8648364232176623`*^9, 3.8648364374171004`*^9}},
 CellLabel->
  "During evaluation of \
In[1145]:=",ExpressionUUID->"76a81809-20f4-4ac1-8b9c-1a5bd61e40b8"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
q+tPOkQ9dKXEmDzvR3TouzwtfKJUFBZ4P9sYvIAOkZfvybqeLCM4A5CXr232
nR5ijwPk5b0UlC0yrvcB5OV/nIqzsyCy/nNf/cCaaYfZKaO4rz6y0vaXvO4E
9vOb1Vx0PG7MYD+/WOe92brZDBL5+Q9124q/BDFJ5Oc391nqfa5hksjPe/4a
TZN7xcB99Ui3L4enDTnYy9O3y13bVjlOoL56gZzW+NN7owTqq9uM7L1/Q2uE
CF7VeC7gAhu4jSz9fMdymChkJ9o5XZ4EF4+qGBcsGyLet+3QiLg1BTaXjR6/
ENqP/f0pLq8kF4V2Ann6OUoLphodhwDy9C0nyquZUWwgGd19tHycG6qWBRAx
X6cA6rUrnA32J5VpEHn7cwsmbcWo9Sry9By5HTdpc/gg8vTeraVpD3xYEHn6
F+WV3P2LWRD5+cGjF83Kprhwf/28UUSL5dDf/vr726kOBkwG7q9Pac7MG6Pm
Ndd5vwNH/EVhSYsp79hZ6voe/G580QIxWCnwRjnLjTqP/vj7B2eWH5Oy5gDk
7cWeX6xLUWr6z/12rSidy3Jmo9jXP/50dOcafSaJfL346I2gfup6j3z9waDL
bfclmLjHPm0z0pk8M0rsur57X8jEBJivvFHu3a0hooazVBBMcUD7O6eM8YsD
xE4y1XR+MjfUs7eRed3KAcNWOlLT33nhLqeqfe1r6RB5+ve2tzx07vJC5OnZ
UdJG+w6yIPL0RhnGLqHHWbjPPtMxZidtwMR99lJN4f5AeQb0bYroUxwWgeaJ
yY9WJ9OhoYOgsudlUdh2IWKw5CY1HxxX3i/IFoUb2o8ulS6nwRsLj8Oeq2JQ
dXnYepmyKfBPf//lwfKSuwKfgUW8Uk32gTHs70WOhW+mezNI5O8XHF5+Kiaf
SSJ/f3rbh7a7n5gk8vFPTnZmhd7ng8jHq746uOoqdf9BPv5Ozuy9rd/5cK89
Yusg/VjY3177eNn3wtYmOkzXUui5r0LNZ97Jbv6hdPjy8/Mp80+iUMP+1AVl
LTqMq5Z6uW4rdXzMM/VInEWD/9Z3f2WdNqW8dxR7+ouTL1r1VzBJq9BxAfHf
zeDmgmvnX1D3T+ThvUvk94jLsiDy8Cc+PtdqcGJB1Guv7oyciXjAxL12Pbm1
dma7GPCbpsZFoyYRqDw75NWjdDrMlFnlXmglCk+odO3suEvN0+kuzsx2Ufhh
ZOieDocGkZ83Kzgre1v6IwidU7PPd3ECMBtr+/mWNob9/NJN3+gLkpgk8vMa
3azvm38xyYTDQq9ZGwShgP1EbHQAC75kdj7JDhOBzzf5VVwZpENhq6S9UW9E
4fut6kZXjemwVjnEc+2dt4B967O8ArV+RD6+zeZrQIIzk4Q/p6OuFbaA/SIZ
WWPtTOzfO3qrpWOoeRX5dymjKqXNO1gQ9d2VVu9/myDFhMZXBC6wuEVhv65r
C1c8HXZm9rdt8xSFb27V541epsPxS7d+phU0ge6CSD+zeiaJfLwkMzErjbre
+oZe9znqKAgTmn6/WeTP+teeu3Rr0cebe0aJuLmfmsYfNwNz4sDZyR4muemU
vZJSpCAUvHZ0IPgmC548lyFT5NMKKoMV/KRKmeSWXf1yI0sFYayccKT3Ixb8
lnSEuT7oFTD4/Y25xIY6PtS/uls8aAE/StWPPu9mYq/+Tl/Hod6SBY0y91kv
v9cEShK1n2WWM0nk0w2miwJzIpmkxP2T4nssBWFfyLskxacsuNwtcMDGPRAI
PTvR5qI/SiyW37xxnXgLmG96XmOAOt6QP3e7lyFxtPMlkD0jK7V4pyD8fNbN
Zpr68+MG8PczkVbw/pSKI62ZSSJvbph0qCTWgwWfyKTImok3g8Gb7lUurUwS
eXP9FyZyoveYJF9CMN9FT0F4iN05a88D1v+vd/5QudlYyMcRNMarDJ+jtqeB
3pP9Zx2aQUHcxfxI6vszUhp6z0gKwmrLX+K5fiy41jWov8y2Bfz8slt7gNre
tdwGZSkm1PHnrqooSp3f/Az9c5f8HwNJnuwPOftGiXRLyZDQYWr/6Hx9M0h9
3/76BU0P1QShhVZMrgj1/YL8lqgLD7SAj8cfar2mPj/y4YKPR6zPurFg5q+Q
Sd/BJsD7gH9dcBP1/f948SS+5XK7HjPJn7K+P1rcBOGTg80HO6n9+WHW3Yxx
Z29wt0EhPpuaPwWryxw9EpuBr5vC2zHq+n45b9rKTVYQ9jt5fyuj1gOtPLUS
Q7EtYPVqi5LhTiZ5UMJOr9BaEMo6thvUU+fTFk6dg7XNc2Bt8SRL48gocXnA
KDtlQwuQWLZ89zPq+yAfXvvcNmR60BNYDqmavNUWhJcTH82+TG0Pr4hv9gZ8
gpA5e7FTixcL/pv/3hM8sudWQif2398PRh2LO92B/XcpM+6AbHYD9t893gIj
kXKFuDdesFJl4ZmN/rg3/oA3XW/MOhUg/72zaLCwQTURIP8tO1N5aZL8hnvj
m+Tjh8SkGrD/djyj/joorAf7747g9WX7/Eew/yZPtZV3r5nE/rugxL9V5doM
9t/VFg5DjhvoJPLfrRK2cMcpOon8t1+4RdUTaRqJ/PeDYIuU2IgJ7L95bp+A
VwcGsf+27jxvWURvJJD/Ju0OkZ+3BmP/7bybdkH0biP2364v3dtmWfRi/y0v
tcu6v2YA+++AcFXr7U8GAPLfo32KyfMtewDy3x83DHd5WzUD5L8nnwi4/Kou
Ash/c8xaQ43ZLwHy3+4bixfIDb7GvXHmtvwuuncKQP7bq2Bg9unLVQD574qU
bOiv0g2Q/x62nIL1jcMA+e+u+AcP5L0mAPLf3uXzbI9VTgPkv99xZb8yl6Nh
/72FEF8KTaex/5YUn160MHcc++8T959MBxX/9d+FTTcrfSb+3/Hf5P3x50Wc
Tuy/y412ntizvBX773O3DSUZ1pXYf6vL7bwqfjIN98bLNnGlPX4YC5D/HsyK
0IjxIQDy33DjNp6XzX64N05aeI44vfyNfXeYQZrri+vj2He/vyUreuH6FPbd
F6IzYfdzGol8d+7SjXNK7ekk8t0RmzZ4QjaNRL7bXausSaLub388xWW2713+
MQJ5bq/I/br3PpVgzy0PDl3+pNKBPTcUPfpTsbkfe+4a7e0qsUsGAfLcpV0n
LTyt+wHy3K8zayIur+kAqDf+QfXOe+POGoB8d/KGqz4H9DMA8t3iESHvXxJh
uDdeP3nRUSHeGSDfLb9a//gF+QKAfPf7U2Ox9C/NAHluq0yTRab1YwB57iyO
o2YVmwOQ51aWOHnUd3gGIM8decfCV7xqBiDPvfBxQeEO1l/Prf+CP0eA+Ou5
jYfyfRfk/t89d73CkwSXBV3Yc+f5SCtNDbRhzy2od/d+x6w67Ln3ZL3pW/gy
B/fHd97tvb5FLwggzz08Z807uXUkQJ5btXGfVl95GECe+9Z3/dFNPvnYa2+P
0ONWnP3Xa291jKhqPc7BXpuw6BowUaGRyGuni2UcCDShk8hrD3twSru20Enk
tfeEPDmUIj+DvfaFiR+sFV3jBPLZhGvB3leiWdhnS6waGjGY1Yp99u/oi+bz
l/Vjn90vlZrHLzmIfbZ/VN+JU3MGAPLZd3OC7ucc6wKoP34w/kW/bFwDQF67
+eq6ox4yPwHy2usFw6IPxF3D/fHP6zT0v2U8xf3xRvPOmth3mQB5ba+YsrsD
0g0A+ez14SO1wWdGAfLZ1yOltJcUTgLks5f38NnNvzIDkM9efuMmU3DhX5/t
uKc+ZaXeX59tmM3SEaobxT7791RwXtTU/91nm9052aR/qhP77KndK89fm9WM
e+SWVqeyLTzjcY/c70S03rB1EkAeO+Sd2SWh3i8AeezLqbe3tH9MxN6a9+mk
pGc9G3trt9aBWb+8prG3/uozbWYxSCORt447VnjV8DKdRN46Npv3dc0zGom8
9VUuE2LeMQ721vy17fdfqddgbz38Kc52J60be+vkGzeKBC4PYG/dQx4mzgwN
AOStaYcqLtXDPoB65BlmtPz+veUA+evkg9emzLo/AuSvjU+HHDkrG4F75K+6
tKuiByMB6pHX5q25bvnkN0DeOgvU2qxWZwPkrfVNdFv2z0wB5K3De2N3cBbT
sLf+ePmIxNutMwB56/Pb6uLjPSYA6pWbSI1pG54bxP56g9unpDne/91f+1w6
8CiU3Yn99XjwCr/KpHbsrzn3px9PRNZjf71a946Uaf/fXnlIjMrB3rPnAfLX
0WzdTIGvBED+uv13iVjn4AeA/PXJ1xrO33hzsa/eeEfB4qfBKPbVIzF1csa5
k9hXw8VyYU6TM9hXT/iUdpRq0Unkq7Wn9L5vOkQnka+e3Sf3bmXaDPbVDLn7
sDGPTSBPLb3aolFW+Av21MHP3rZ/MmzGnjp09cI93cf6sKe2LXM8voQx+NdT
V4oyUowGAPLUvE9vzZmw6gaoV+62q11mRLgJIF+9VLDLbv/5AoB8tbbbr+VN
e70A8tXSRfUZW8XCcK+8VMu7cGB/OkC++qd6qMWiklqAPLWlIVGa93YEIE99
aeCRf7riJECe+qVy7uiowgxAnvqr2MLcOytp2FMnn3pzlL9uCnvqDNkd6npV
Y9hT25lYuc4a+eup3ZPKzv2el/yfPfUoq02cQXZiT32kgHdJl1QL7peTOfbb
53GScb88K3eE5lSRCJCf1mWOZGyTTAXIT8cEjkVP3IjAPjqnsbZUegMb++iI
FZK3p/mmsY+O7xPkXMulkchHm3h3Dsx3opPIRx99oLQ69xeNRD5a3n591ooV
U9hHT8z1s8qVqMA+2mBrgdbWt53YR49Mr9rbtmEA+2ibiqbJX7MGAfLRp0q/
J4QJ9APcL7+36+fheVUAeemoGDtnYY9UgLz0uWzh+CqrN7hfHlAkRjx6GgRQ
v3w6uapjfWERQD66+Uwp8H04DpCP3n5wh/LL61MA+WgBYmpbAHVdRD76IU9V
+u1HMwD56HXhrSpa+ycB6pt7zX2tUftsCHvppRc9+eb4/XcvHXBg8fxeav64
PqI1s3luJijxvCp+XLwN++nDfcPnF2tGAOSns17vXF+7kgTIT9fPm7ehO8sT
7H235F3ycjYgPA3ZhedoJPLTCg6rVV+epZPIT4dfHJbWWEwn5axPPSk3mAGp
aaqOjLvTxOedrdd18rlgm0VamuqHNoB8dZ6O/5Faz35gZAF32JbzQOntmbJl
ywaxtzY7bcvln9kPkLdW2p6t3BuSBZC39niUu/+40VPcPzerL553Oug2gTx1
2433GletOAB56piw6pqzqTMAeerL7+R80vn+emp+NUtN3wTOv3rq0I9v/Z4P
d+D+uSn/M97zOikA+Wm/kW6dY4JJgKlQ/MtJcQLkfnXKuzCHTs5X8Qg8voYD
vM64fDltSydVIxKm0zSnQf7GA6qOJ2gkJ77WkaXPA32tirU/xgwAjfh9B93M
eKFGmTrtV+4AQB5b+ILoit7cDwB5bOnWOvVYRgTunWv/Mv0p8TwBIG89bHvu
+QnbaYC8dZrqyEHtVTTsrRmzeIz3lE7/q7eWVU8xCazqxN7a8ix/bpd4B/bW
MU1cglabG7C3Xt147ay3SAHun8ccPikjzbmB++cKlcdWn5AjAPLW7jXaHbvj
4wDy1vwOIhvmGWdhT/3Yadmpc2Mj2FPvrGDf/+o6iT31LLU5U0WpM9hTv87S
WJ4E6CTy1FaPo2q4j9FJ5Knz3VLUjJk0EnnqnT+2V53fOkEgP20vXHxJ8Wgs
9tNRYxJBkpeasJ/eueHjPp2WXuynORHx2nEDA9hPey2pavvqNACQn+bvdO1a
2NENUP9cqHzNDZjSBJCn3i2WHxP+shAgT5396tt0tkwgQJ76W9TKbt8t4bh/
XhaSlm0ISYA8deriDvMfy2oA8tPWvqGrDu0eAchPG8puFxyvnQDITydvHfk4
xDMDkJ8us8vbZSVLw37aTixNyFnqr59ef0R9/umDf/00Y8snLo9Tf/30kcU7
Fyh6ZvxnP63NrnNmNnZiP+28YvOKxa9asJc+dOOeenhZKu6hG+7Kpkv/jAfI
S6/k5Xd73pkKkJeWIEIPKQuHYg+dfm3UurFyHHvodyVXPLu+T2EPnRUlxsxN
oJHIQ+efKBv0d6STyENLx+1L0W+mkchD7/z6bPFi9ynsoQNcJJ419ZRiD/3I
K3kzY6gDe+hvFYzmW0ID2EMLn/N8oU+tb5CHTs09ZLhyWz9APfT0hi/xq69V
A+SjJUP0TizZkQaQj954Z3U4V2E47qEXuDUFhCr7AdRDL6rl2Dx3LgTIQwvU
zwt9tXkcIA/99LBnOnvbFEAeOjfLSuYdNw17aPtPP7R/J80A5KGbxJ3KF0RP
AtRLb4/hJHGvG8Y++vyPhz+4FRr/s4925d275duSLiLO5lFMBfd30LQpIzP9
Vhv20nPO72hYVh8GkJeOG5c5E6hMAuSlSa3P1rvOPQUJm3MyGQw20CytPhVy
gEYiL533Ye0nZQs6ibz0ZxmtKIu1dHKbw88oE6UZICzv7tJWM03wXVukdCWV
CxrZGqrLNrYC5KlV3lre7zDoB0HPFodezOKBF+pu73ywZBD76l1pRXtW9/UD
5KtrGx+8SKvOAchXj4o+aDP56Yd76r5xFSMJyQ8J5KdVt7uOPVnEAchPy6so
yC9/MQOQn97xQIb3xOy/fprttacgjuvf/bR5YYDLQsVO3FMP8SpothtJBshL
18np+go8SgbnCNeOtFkTQHeL6ElPLjo5Ziir2yXEAYqCkWN8DnTSfW3UhTcr
p8FK5vcMp2s00kP14fiRHTww4YlLZf7jAeDVIR93ZT8vnK+u5BFcPwCQv1Z8
uDKs8lA8QP764NmlK1L0I3A/3Txa48a1gRiAfPXQipb+jZunAfLViW4BG09L
07CvPpMscJpf8N99tVj8Q1gh3EUgTx0TKzxKiJIg8N1DW+3iCSA6EXP710E6
6XricMXzIg5YarHQvVqTTkrxVRmfD+eBa3Mu2qlR859utttcmThe+PzQMsfd
mwYA8ti0ufZRMPAYQB5bavn16Sy7EAL56gyvolUmhjMA+Wq+mvfc6cv++uoH
h/nzP8+PxL76TPt2bZZ/J/bV7Epr49jkTwD56kf9S0LPz/8KttXmSx34yQa6
tb8qBepoZGyQ7dfpvEkgacieY0zNwws3PdOzbZoCRezQ6ZeJNDJIncOeWM4D
FxUOrD19eAAIG3Scd17DC8Po4iqrmIMAee3hPu1wwuMtgXy2yFdvHX4JGrTa
JL/Ia70YHHQXM5M5OwOQ16494H9zo0gXgXz2aNi+t8UMEshIMwNk9CbBqcqK
i+UX6aT2Pqc5fEenQJhl3GM/QTopsc68xa6DB0qFsozrqHkNee5PA3tl26ZD
cG/92qa45YcZVgTy2tWsK7s7KmdA3ORHu8siYtBK51aY9jg1J149KWBl8xVk
mzs5i8Z1EMhzl929Ra50+AqQ5+7x3rqe//An8DRkdZyi/gS4P9kSMleGTm6d
09hYps0BI3db+q6cp5M262THPpvzwKcJMb5k9gDguXJx9JoNL0xs6JCmxQ0A
5MHdL7qtOavyljj7RmX99E9RaLxQhBNC3Q//zYfb54q4b8zpxD7cYL4dfRHs
wD68XOjK6PXrDdiHZ5WHzs1+XoD77CKxm7Zt0PDFffZ9I+tUrxalAuTDuUy5
4t5w4gHy4R7Db6vOCWZi/71Pzea7fdYI9t+Bnno8Locmsf8u4ohrZLyYwf6b
lZX2JWUTnUT+e9eP+C0GJ6h5/Y//dnAqOiAnTiOR/1Z+7udRYTdBIO9tlmiT
+7z/Lfbe8k5jG9TpTdh731CKHWkI78Xe+8OjjjVb2gew9w61I611PQcA8t5h
txpdGat6AOqzx/B/Nbsj1gyQ/367h1y4AhQB7L+d8vbz2L0AyH/L+wqdnZJ5
jfvstcoGa4KupQLkv0OuPQ1O1K4GyHs32mjpJ4mPAOS9h+/NeVyYMAGQ934g
VTo40T8NkPfe/JHn1VI5GvbeJ7t3yBWBv9775dUx/w/3/3rvQCmTqWOL/3rv
2AWiw+/S/7v37omqYR7q78TeW+Tm4VOqzS3Yd58NzLnw3pLEvfYddtpnlBLj
APLdyUJigTrbCYB8NxSUF+TtDMR+O6DnhIdZ9Dj225yY47Mqw6aw367ffzjc
LYJGIr+dMTEZbUrdH5DfltzS+W6ql0Yiv/1Ls9NmMnYK++3bHa3GVcW/sd/m
KtyevuhJB/bb5+5IpKux+7Hfll9xprVt4SBAfvvgt+z5z6n7L+q1u4doXVyi
VAOQ5y50+d6urpkOkOcOmv9Z6krZK9xr7zdIaLgfdRugXvtls42V9kUFAPnt
JcqfuaKExgHy23z1E+DzwimA/Hbsjv2iq2g07Lc9Y0U0R3NnAPLb3w1NV8tU
TwLUcxcVNw887ziMPXdt0OEHH6b+u+cu0vO9/mZxF5G7bhMr4so38ODm59N3
Utqw7y4SX2U+SzgUIN99sFthTrgSCZDv5ktTuF78MARYMYJLVgyMA1VFZr/U
LhqJfPfukyv5fY7TSeS7Lxc6+VYp0UmNiWmVEGlqzlOxlE3gniFiFiUJz/nI
BQUTjNscnVoB8t8/T/NK12zpB18/ChX0pfJAj1UiGz9R+wt5cAlrRe+HjAGA
PPhYuknhg5lcgDy4sUr2g6WmXrj3XnCRWJ9z1J9A3jvOo0k4dGwSIO/tqmQ8
38FnBiDv/ePCsrWj8/56b9P1NuPmcv/uvbv9IjO5dDpx731d5fmJcZVkgHy3
61DdtbTdX4DUbb2xlmk2cF2QyRU8SSNbT7vKKUxPgg2uHcLG1PwvO7By1dO5
02Cu1LU7x3xo5E/nHtUbajzQbE3lM83bA/9fY3ceDdX/P3D8jphByBCyVepD
tlJCCb0upbQhomiRQlK0p1WLJUqRNkUpW4gkIsu4V8lSlGypJMo6QzUTirH8
7h+9b+f8zumc75/3HM7M3Hvn3tc95/l4DzwQVWsbWcbC5ycXdnpy+YB68c5P
I9Z71Z4A6sV3N/cI3GxT6fXd9fveZrRufgioBzfmZy6aoj4GqAdfNMc27asG
Rvfgapc23t2sOQ7/6sFjI8+UOYrxCNR/N6UGz8geICC0qGPN5efDYDpvbMMv
OwY5Q6vucmTJCCRs0d7DobYtZ7680BvLxFdH665QkhCATOjsdKM0Fm7bTbDt
VvIB9eMbbmrIEXUnAfXjsURo9om39wjUg6/5vGzv2NJxQD24hUqM+3bNvz24
1flp0XlXs+ke3PMG88fWdC7dg/e1BkYkv8kF1IOvruwMConjgCApcc7hwiFI
lpZe0luPkXczSqOXEEJ49oLxbTs1Dz0TKkp61o7Ch2f31nJLMLIt0HnRTDUm
Hi4fqSe6jA8G+5pih/6j5qGitzdbqM+H+vLYVW6GbFYKgXry87VmQ9hkDH98
ebRr+Rw5vL7tbKTL6XFAfXnGgmRJSSUegXrycA9vGc0pJEw2djrgYymE/1S+
Gnr4MUiB7ED18IpROOX5S/GuAoM0Xbl28s9WJn6yfZ6/1UwBoP7cP40HxSvu
0OvBty4gNupIBxCoL/eIs8kQrabmS8fQxSZScjiHOKCbI4LhRz7LcbUPF4Gt
FjtUob6HQP35s3hRS05XEaD+vO12+qadC56CrfcY4WQ1DFm5nJu71BmkvpZR
sZrFCHxtSLyoTs1vufuCFrS5MnGW4roPihw+zIp208R2svDkl482vCjmA+rX
R5b3rXZIp+bHK8XBspVs/PSlBjJFB/tnz/5y3k0o5HHpnj2na7/2jaME+D14
KXI4bgQ2MYJq1royyECXlB7uBSaebD1q4jjMB9S7J67SLRowTiSayp7o3m1j
48snRn02pl7vafKX2Kykx0CSV9w73nIJ1MMP5hZb3jpXDCfeeNtVxwmBZ3gv
4MwRat67nzv8S56FG8267TgwWQCol686da1VOz2ZaKqcUFl+j43nfTxVUiOJ
0f18dh+5+j11PUb9vGTEa78JhiT8cB7S6dcQgq/IMDfKm0EeP22wn/+GiQ9v
kcyM1RAA6uu96hwyN8+9TlwS1avPmiCHK2yTxxxkMLq3Pxr2krnmfiGg3j75
+qvP3IZ8ELdpOphMPRduLB4q3XaQQe58bRE4tp6Fb7HeU6PQyAfU47dLiHSf
XpRKjPpU6RuXUPtHzmRluBZG9/mTCx7uNlXk0X2+uZllluFMEsZ7ebO/ZTBx
RcEv33Bqf2R77h1PEbBx0QN7lJOmYTjq9y9Lvw+UFL8Fzy5M/5LfIoRKzkOZ
CdT3rW/R8GKhMQs3nHSp44GQT/f9V4+2BHzuSiF8VLqPBWRR1+9IiMlWxXAL
x4UGPvsy4Ookds9BFo9A/X+7iFvbqzcEmMhnFbVuFcJs73VhY/sZ5KD8gdx+
PjWfs21TH1L7E/mAKom9HefC4gnkA7ZzI2xu/OYA8gGJFZsefbPPBVvRSNaV
TSPwc3FG9HkfBu0Fdh91lBFLvE9EFj5q4dWw8csnp/kbUfPcv/zAjunDKVoE
l/YDAhdhsapTD+0Hgmp7n7UnttF+QOfaRJ+k9hp6vXypHY+bFajnfeQHglTt
ZGTiiwH5gXX7+pV3UddB5Acidz19ruf1gvYBMam2ITsyB2gfMMZ478SxFNI+
wP345wGpyHHaB6xSltyUYMIgkQ/w8cr6z8WTQSIfkDE/+LyvGkYiHxBSaqPd
dGmYQB7AfvvuiSYSibQHSJc4K1lf9oX2AP1B+rlJwd9oD4BVJ4rP+8qnPUBE
i1TU5gjqfPjjAVzFH4doL+8DtF5+sfvLhisW7YB8QKiY+YuGi7WAfMAUw3Oz
7JzvAfIBUtp8KU5EMr1evt60o8yAIA4gH5ASarvF6ctHQB5gVW3YhnphPyAP
cCJF/eWluGFAHqBf7Na+ko4xQB7A0X615lrq+CMPsDuu0EvLboz2AHERMZqM
jL8eIMsmcLfh0b8eYFqSqblgS8X/7AG4AWTp60Eu7QHUL5z52Dahk+7/PUs0
b8p2kPT6+SYb333I13wMqP83aos0795JAOr/7ypuC37Qdo3u+3/aXmhgRf+m
+/7ddWuzM6NG6b7frGqGBJGAkajv/+UavyzxEINEff+C2VuH9foxEvX9/U5b
DeMrRum+3y+5b/2IdQPd9z917c5R2dFD9/0u0wyJ6m8/6L7/uLTTiOdUAaC+
/7ZJm17ith+A1s9/75GpmxvxCVDvj732EX1d/QxQ7x90na/tYpdIr59f80Vt
hsOhs4DWz78T3aw1+1QNoL6/5IhPwqRfvwD1/cWqS+Q2TxwF1Pd75aVvPjdM
3U//9P2vzqo90awbB9T3Dw4qN74VCAGtr69UoTTiFNNP9/7vnbfmS3v8773/
Jd0vPx3VeUTjpQtPIk1LwVNPxczvXRfd/z816ll3wiwOUP/PvLkwfcp8ElD/
f0Q8tMHfNB6svEI/Pu3+DSeOhDQuX4yRqP/naZVq33ZjkKj/r8fSt++lnufX
mEeftFQbh5VeV9/ZK48TQb0hwtYsUfyuL6Z0bWknIB9wrCc4LMrgB9guDd6R
WcDEZRpumwhVBLQXsEyLcZWV4gPyAp1jIn06Ua8AeYF0icciK68H0+vv3xXx
CO5TvEkgD6CrdefSvnYhIA/Q+MRPpCWYmg//eIBh/lC+rMpfD7B+QlDZtsX/
9gA6sW+/u7ly6fX3L1xZ59xZnw+o/9dqlk2pjymEYa7ZmP/gEMyvXbJv4i+M
3Lxf86bDoBAko5aEtlPz/MlazyB5mTGYcjwhXO8aRn6LUXG5voCJF/UGpZWc
4oN51JUjRVYs3Kfhcy72nQ/IE/is0p6OT8gF5AkO9m/PWIin0uvtBy2SuMlM
SgfkBTyrDT1WUK+DvECp+XftE9Mx2guclFnGTZg3Dv/yAiYq8oXkOJdAPsDP
cdJA/gcCxksvFWYXDsPvLo1te9cwyEMs9jeJ/BFwHlutHerAIGsfWc5Mj2bi
H/eGNDwRE0DfDlF/82QWLlfnJn/TgQ/IF3h3lB2LvBgEyBdUnWXKnTwUTyAv
EGHcmz3JbByQF3CrWc8N1vrrBT7YF7BrG/96gXsvmsu9c7m0Fyi3vOgrcMoF
5AWUzE8HvP7EgSqJCGPx7CE4HzkgSb7BSKVcX6ZXnhBcBU+CVlDzhcKndV4t
laOQF5So11WOkaJJga4LpjDx3+v886Qs+ECO2RnlT2fhHpuKzL5LCQD5g+Zj
5S/KCu8TyBv4RBUGNLExvNHCq1pLXw630bDZfPn8OCB/MHInPq9AmUcgb6A4
MccjZzoJFyzGWsNNhWBjHNgp5csgrQWGugctR2GV464eTIVBvnxX8eBxMxM/
0B+TpkXN88gnNDZJq+5xiaXX55e95qpw0S2QQP5AWGme+/rFOEzH+DMVJOXw
O651Vq/EMLx+ko9L2O9CsLmSeyasvYdAPiGx5c5p2dgiQD6huzwram3CU9Cu
6i7rMh0GX72qZ/7KDDJhzic9MB6B5eqt0rb7GOT7qKz1A85MPO7iyL7RXD48
1XxXRHiw8N8tXwWtpXxAvqFIYLDK8WMKYSRxNlO5nI3rTuWxWNR8/S/vkPJi
yETwlUt7B1fOgXn1jgSUhIu7fb8+ArPyetc+3cQgJ3dNO5N2jomLHrFzVx/k
A/IQVXVHFLuLEonR/VNlT31m4wttFy5uoV5P4Z2plJz2Y4i97nN+9gcugbyE
312bWyEFxdD/js35fkMI38vePFGk5nkR4zlReZNYuF/82zQLJQEgT9F71k7V
wyqZKINyQU0cG9e62pO+QhyjfUVDivOSiGk82lfcCl/LwoxJ8HaLv6GoIoS7
HSo7vnkxSCmZ+xJZr5j4gshlgVnTBYD8xfllBSeixK4S2Y+u5Ecy5PDlie42
XFmM9hgXpkRpN9oVAvIYcjv7r3mbFMBp+zNfKhRGQMoXjHDqfju88YlKsSML
1yNOWu3/yAfkNUoLJ6/lr0wluK0RzosJNv5T0lfpHPX8jPyGl1VJWLUcj/Yb
U39K6murkhB5bPuLjFQmnmAWsGaMTZ2P7Pft536wcR3ekolLNKjP/8d3WCQO
PXeOTIBFVyvtmhuFgLs2c0yp71tAxb7GgnksfEp5fsHZcT7tP6Tc/Ss0ClOI
DZEPEs9lsnHXVwbjXGUMH8zulNY7nA5GahfPsqV4BPIhnAwXHY1eAh6quupO
cBHC8WVWNgPU+XjuHndNTh8Tnx6zKmXrDAEgP3LdRHNXdus9AvmR+a4L57Y+
5QDyI0XnBR9zmnKhTMr00JN1I/By8yghs5tBe5Kiw4rrz/HvEwHzDooPvGbj
U8kA11+62D99yen+82WZtVzal4QkX/xijRGw7NX3D+Yf2XjlXOeJ9dT/i9+P
v7x0TyfwzMKjPysR8KV7e7RRqBDGyDpLMer+MdNevcSExcJVOj7KLVAVAPIp
Qd5NjlIbkoiFx3PJ7KR4OLkra6U/db4hr1LQzVlQY0KCvs71hXOfM/GKAt3m
xdR85Odex5FmjoDL54XKnMMM2rO0DwUrtq1LJcqqFNPsC9m4wfTIHMOZGO1b
dDt7EjZK8mjfEpgUVj/MJOHRNYd+/XtMPN7BoXoJdX3U8EnLtO5l48fdB1Rn
/Ifh2kmqehrlQmAHLp7hQx1/5GGM3GfX5a+knt8OLXmVfioNZGMqxpvleQTy
MTvebkk2kCEhVj9dzGaFEMYHJ8qm7GGQKUXvT8zvoI7vy5JUXep6iPzMB0xG
5rbCXfr3FbZ4lTckV+QB8jInDARmmYeo80tduJH1io1fDbnoO4/a/zkqa6xL
vrLxvfWTFPZoY7hYOdGWdl8I3uGrLJuo77/97xHrR1HJsCfP2zqBmq+Qn5n2
vk40YTYJXEHeh3n11OffIWxxpM63y2DACtIcgePk77i9Bxi0rxE1yNy0a0Yq
ITsgPkH/ORs/mL+44MgsjPY2Q1aXG9Wp+wPyNuH3GS9adEjwczt4fc5jJi6Y
09rVoSgA5G92cRhj9u/CYFWg/8EbndS8Ie00mke9X+Rx9M8wZ/+WSiWCBGH2
qbsfQn/FoQQ3ER7hoOa+U2duJ3y7ER+e/IgAQlLcrthbCKdsTWf1U+/XK0Q4
1XiQidf7bzxWSV2PkOcxej0kv0k7gVhqkWE9HCmFL40vr+iwvU/EW/flfKll
49IWm/EN1PPN//c+yvaOg3EL5f9sy5Jdli6djqKiaBtPNkv6scKZQW/nX6sc
vD329+//D3JxMwk=
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               PolygonBox[{{402, 353, 321, 322, 323, 3293, 3296}}], 
               
               PolygonBox[{{304, 354, 286, 796, 641, 522, 916, 761, 433, 886, 
                731, 611, 372, 856, 701, 581, 492, 336, 829, 674, 554}}], 
               PolygonBox[CompressedData["
1:eJwV0DcvRQEchvGjLiaDQaJ+Ar1bTWrMyHVFHbTJwIarLAZ1MEi0waDcxWLA
RWyirNrEZFAWEr87PHnf9/nnnJyc/PBQ62BiEAQJiCCk1KEMBUlBsOiYhTN7
Gt2o5/e5SjzamyhHIb/EZePcjiDExexGfNo9aOAO7Co82ZP2mz6CLXvIvtPb
kIQKrohb1nOwov/KGD+uP+v9mLE77Qu9CRt6Kr74efkRf0aOyX2ZgVv0ujfK
Q/5YVst1mYjr+Pvdp+Q7fypH5Z5Mxw223YflPX8i2+W2TEOyvhD/BjmBqJ6J
Ss8UyxUuF6v6n7zgJ/QXfQCzdti+1JvxbfehiTuya/Bi72CEe7A7kBL/v1wJ
t6rn4dKeQxd3Zbfgx+5HMxe1a/Fq76Iapfwal49/BeFHrw==
                "]], 
               PolygonBox[CompressedData["
1:eJwV0rtPk2EAhfEPCIMsIlZwVbSADlrkL9CqQZkcgIJg4iAM0LoZBC/goCLg
xoB4GUq4mTg4gIDGCwsJiQESUEnADTe5uLH4e4cn5zznbZr3+9pjNzPX0rlR
FOUgi6SSwAkcz4uixw4LMcXvohbn7aO2M1jlQziJUvsT2yFM805ct33h1djm
dbhgG+NnscZfoM22xFPhMoiHO9ie6kX4wDv4hn4LXbyJf9WvYIfXI2kb5wn8
4D18S89gmLfzZb0BWf0AcvQBuSc78V4/irLwXLI3PI88LAflvlyQM+GdyE3+
WbbICXkQ33HPebP8Zp+TV+UbmY9F7DrvlX/t8/KOfCdj4Y5IOb8oJ+yV4f7h
rvhpfyT/2G7jJU/zFb0RI3oBcvXn8l94Xyj3uTh/pscwG34j/ltvxX1+g8/r
NdjjDbhkm+Tn8Iu/QgXK7H22I+H5+AM04rL9ra0K6/w1TqHc3m8rxkf+MPw/
cDp8n7MBewk+8e7w++I/I+xROA==
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{324, 325, 419, 478, 567, 687, 842, 356, 389, 450, 
                539, 659, 814, 308, 307, 355, 388, 449, 538, 658, 813, 306, 
                418, 3294, 3295, 657, 812, 303, 417, 477, 566, 686, 841, 351, 
                387, 448, 537, 656, 811, 302, 416, 476, 565, 685, 840, 350, 
                386, 447, 536, 655, 810, 301, 300}}], 
               PolygonBox[CompressedData["
1:eJwVz7cvRWEAhvGjDBJtMJi4LqMS/gFlwerqbMKAYFIXXRiM+mC4SCwGdZBg
Y9JtjGxIjBLld4Yn7/u830nO90U7BmL9iUEQJGAcpUoZGjGKY2T6YA7RpCAo
4Gt4QoltB1X2Bv6JWn6BdtsIP0IGn0WeLZ//oYXfote2ysNLvGGSP4aXkRso
tm2jUq+3Z8k9DNk+sKB/2JPlJmpsp/JctslhZ9cyA7vosp/LFzkiD51fyW++
JNPliZyRERkN3yqzsY8x+6X8kovy13mKjKPZdoMefcXep79igj+E79bX9SK5
hQo9Zh/U3zHP33m1fobW8J28U3/GMD/gafo0cnke/0ETv0a3bZnfo5DHUW6r
C/+DfaTappBjj/Al3OEflgdCqQ==
                "]], 
               PolygonBox[CompressedData["
1:eJwVzz1Pk2EAheFXmgCDJobBgU0E/QWCiG2VX0BLmW2NYCK1NbaLS7vJYBXK
VhVMXAC/EocqmDgYE2M/NAwkwmzxI7q4qGBivN7hzjn3eZ707XP0Qj6Z6wqC
4ABqSCsZXEUVH3DChfs4HQmCs/wpvmHc9hJT9jxfwHscty1j1B7nvXoGOyja
nti+4hzfQMqW43+R4m1css3zrN5Bmbf5kL6EUzzGy/pvLPIeeUiuIq1vo6A/
dq8v/C6Ktjfyh5yTX5y1ZATL4fvCN8l1OSmvON+SR/AM1+1v5U9Zkfvhm8Nv
4wEm7a9kS87I28435WE8wqz9tfwkS+E95//0mj4o72FEj9r7ZR0l2y9U9W55
UK7gvP4R18Lfdr+gf8cN/pnH9RdI8izfQ5I3MW27xZs4xu9i2HaGP8QuYrbn
SIT/m/9Bgjdw0VbhDQzwOzhpG+Nr6CBqq2PCfpnfxDv8B566U+E=
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl03ecz3UcwPE75xzXcS6jFHFGNkmZFZKZeUay4iip3GWvbDJSNtl7lJWR
XYSyomRVRsMIZRahlOfn4Y/n7/X9fH/fx+/x+7w/j29icmpSSmREREQuH6E/
MI+evEQVSpOGKNISTTpiSE8GYnmAODKSiXh+ZD69aMbzPMVZVjCEdtQlM8dZ
QG9epiqXWc9o3uJpzrGSobSnHn+yhXF0IYETLKQPzbnFF0zmBa6wgffpRBl+
4xOG8Sr/8iXTqM9ffMb4sHdD+067Eul6r2bX2WEGekwf5CSLwh7d6xvmqPv1
YW2ht9lOFuspYZZ6WB/VanqVjeG3rD8Ic9eD+oim6P/sJpv1zHAGelTLcp5V
vBvOzf1v9DXu8hXTacANPmcC3cKZe3afzgn/i1Ms5h1aUp1rbGIMqZTjAqsZ
TgcakpWfWEI/WlGD8lxkDSN4naSwD37mI/rTmppUCPPloTA7coQZhDmRk1w8
Rm7ykEhe8pGfAvzCxwzgFWpRkd9Zy0g60ojH+ZWlDKQNtXmGP/iUUbxBY26y
lYl0pyCnWcYg2nKHHXzIi1xnM2N5m/Ai7pFZPMsl1vEeMb77Vt/kP3Yxgyb8
zTYmEeu5Q9qDKNdfh5npXI3X7yPuv/OF9AzLSbAerNF6IMxWk/UfdoYztJ6q
cXokzFvraGeeoymFqUQRilKM4pSgJE9Qiso8yT08gYMj
               "]]}, Annotation[#, "Charting`Private`Tag$464076#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl00WsVVcYhuHNBRJciifYpbj7DC/OACh2oUCC64UB7l5cEqA4tLgHK+4k
QEJwa9FJCwMcJkCQ5w+D93z/+62Tffbae53UXsPap2dIkqS9j+IomjFJpqYk
STYsNX+U+/SjzA/MvTGCd+EnzU3xgrdFPd1fvCKq8xtYhhIoZm2aPjv285Fo
h/r6jbpKuMmXY6DuKu+EL7xk3JtuOs+BA3w0f2jug1E8jZ8yN8NLPpu/NI9M
+bG3BnyTuTJWmb/JW/op5v/MQ/EHH8SvmTtjozkLvuoXyHe6i3Jc7EEWwh2k
xh7lDP1hmVMuk5/kJXnQ+hj5iJ+WfeV2mSv2idHWu8rT+uOyuVwvM+GVtTmR
sU/sMefDr/qGcrOuClabE9zWT5X/69Kxgg/m181d8I2Ximeqm8lz4VDcH7rp
zvAWeM07oJFuC6+KO3wlfkaqfpYuN/7mY9ERNVA6fsP679byxDPh49AJjfVb
ddVwl69CmbimfrYuL47w8fhNd5a3xBveGU102+J84R5fjSG6GzwNCcrGPejm
mH/C0bg//tjcDxN4d37O3Apv4zzjF912XgP3+TT+zDwMa/hQftPcFZvMWZHB
vFC+l+PjbJoLo1zsS86N/cQ7k8vlZ3lZHotnIp/wM7K/3CFzx/nDROs95Hn9
CdlabpCZcSXOovW58rX+QpwhuVfmj3tEmvWmcoe+Ztx/3Cv+0U+Xz3XDsZan
81vmbthszoYU8yL5IZ4XyvteWT7PnD/Oabwj/tQ8AJN4T37B3Abv40yjmW4n
r4V/+TpUQDn9fF2B2B+fHOcPzfW7dLXxgK9HRZTXL9AVxMn438b5QKW4nrWF
+kI4Fec/3m+8T1RGlbiG7yyyXjj+g/Fu4/mihX63rg4e8g2oGtfVL9YVifcT
zyz2h5b6Pbq6eMT/RLX4Hf0S3ZMcSfIdvSGm2w==
               "]], 
              LineBox[CompressedData["
1:eJwl1EVsFVEYhuGhxRIgARJIcIcVbi0uYYNTyg539wUkyAZ3dwnF3aUkkOBO
IPgCd1lAglt4/rB4+/3vd26n05lzbrneIzKG50iSJN2PR/mTJEvWQtXUJFmU
kiTFcYpPQR/URh1Us77YWgmc5lPRF631e3X18YhvRCvURXVrS/QlcYZPQz+0
0e/TpeEx34R6qKFfqiuFs3w6eurO8Xb4zPujrW4/T8eTuFf+1jwKm/kIftvc
Falxb7qaumXm0lhu/i3P6SeYn5oHYQbvxc+b22ODOTe+6GfLj/E7cpzcJ4vg
FgZYbycP6LNlA7lWpuByXD+el3wXz06OlrtkIdzEFusj5R39SdlNbpH5kNO8
IO5BTsQhczGkxXuTy3VlsML8R57XTzQ/Mw/GTN6bXzB3wFc+EO11B3lDPONb
MUp3l3dHrpT/e6S2boW5LC7wWbEvdBd5R3zjg9BBd4g3wnO+DQ1i7+hX6sqh
J78YzxKD0dHaYX1jvODb0TD2jn6Vrjwu8Tmx13SXeCd850PQSXeEN8FLvgON
Yi/pV+sq4DKfG/su3gXPwA8+FBm6o7wpXsX+5O/NY7CTj+b3zD2w1Zw/9oN5
ofwqJ+GwuTga+3x9uUZXESvNf+UV/STz8zhXckhcWxbEDcyLPS2v6E/IzjJL
5sE1/Iz/X36KdyvHy/2yaOxxDLPeWR7TH5fN5DqZGtfE6zhH8kOcQTlW7paF
scvaGHk/3g22mQvE3zYvkt/k5Hi+PpfG15or4SqfzF+Yh2I+H8CvmjPxi8eX
TKYumzfHG74bY3UPeC/kjWevS9etM1fGNb4gzjC66I/rWuAt34Nmsa/063VV
cJ0vjPMTZxfN0QIt8dD32z+xYKRC
               "]], 
              
              LineBox[{3296, 402, 872, 717, 597, 508, 369, 854, 699, 579, 490,
                431, 326, 827, 672, 552, 463, 403, 370, 327, 328, 329, 330, 
               331, 332, 333, 334, 828, 673, 553, 464, 404, 371, 855, 700, 
               580, 491, 432, 885, 730, 610, 521, 915, 760, 640, 950, 795, 
               982, 335}]}, Annotation[#, "Charting`Private`Tag$464076#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1nfczlUYx/Hb3ntmlT0LaVlJw8iMKBkZ2ZsQZTRkb9mjpSjJSEUbJRkp
ElL2yiZ79b7++Ly+45znuX9+9znXo2Dbno16JEkkEkeTJhJ/JkskbqRIJJ7F
b8kTiR64G2mw09pNfTP8LvfEPUiLu1ImEq/oL/KT8RR22X9L9xy2yb1QFlXt
nanLik/ldCioGyxf4qegERroPtYVwQ/ybr/vNt8c2+XeeN6er+T7UE5+WJ7F
Z8NSOT0K6YbIl/mp6Cqvlx9BY7mhvJgvign8CbpG/zL/J98Qs/nL9C/PkOBb
8G/TP+x7ne6V+/Ct+a/5hfR+OoWeoZ/T8tar0dnyApqdjqZH6Gd0mfUX6VZ5
Ma1NZ9D/6CqawXphOlR+n16RR9CD8lt8N/5nvjqeju9A/oQvhrXyHs+eRNdS
3iH3xb14RDdHlwPL5YwoohsmX+Wnobu8QX4UTeL7kZfwxTGRP0nX6V/hd/JL
6FN0TjwnXU3/9vlJaSv5nXi39r9B98nL6ItyG/qNvIg+QKfSs/QLWsF6dTpX
/oDmpGPoUbrCWj/+N/5JzOQv0kz6ovyr/DV+JH+Inx5nm/+FfwxN5cbyp3wJ
/CgPlnfxjfCPZ08mP8/vjM9CW/lb+cE4f/Kj8jw+V3yfcmYU070mX+dn4Bk8
rVuqK4mf5L1+d3Jda3mX3B/34zHdfF1urJSzoLjudfkGPxPPYp+fT6Fvo98t
D8ADyIoS+jf0N/lZaIb99qfUt43zLL+EB5ENB6ylstbO2h55IB5Cdhy0dgiH
cQSp7XvBvr+tDUJF5EBJ/XD9LX42nsNR+9Po28e7jLuFSsiJUvo39bf5OWiO
Y/an1XfQ741zhcp4XPe27o64U3IulNaNkBOYK7dAk7hPcimsl4/7fel0HeV9
8d2infyd/BCqyE/I7/B54rzF9yD/zteJ70AuI4/kk2AUf5jOiznIb+Qfj3PF
X6At9U355fyHtDSdRE/Fdxn31PoQujtmIG0cz06v0q/ov543Pe0kv0v32z88
NO5ozDP5Bfq9/BGtGDOAnqNVrdXg3+XzYix/jH4ZZ4PfxteNdxizXR7FJ8X8
mNHyJv4JtIrzKq/gy2CDfMJzZdB1lg/IQ2PmIk/8LdCP1ieL2RizGSftz6jv
ojsoD4sZiLw4Ze00Mlnvav2Q7tWYR8gXfyv0Y/TJY17EbMUZ+zPru+kOy6/F
TEB+lNOP1aeIdxazBGftz6LvrjsSszruKWrq3tPli9kqF0B53Tg5Jd6L+x33
S/eZfDd+kc/5fVl1PeSjMb/QXv5BrhSzRK4lv8/nj7kn3xlzVjdeThWzW+4t
b+ZroF3cS3klfw82xnuV/4o5jvM+M5vckz8W5wAd5DVy5Th3cm15AV8A4/jj
cY7ibvPb+U9oPTqLXqJ3WavAT+BTY0Gcp7irus/lstgkX/DZ2XW95OPym+go
r407E+dEflL+gL8T4+Ps0q9jdsTfR74+Csr3yRP5NDG/5T7yFr4m2se9l7/g
y2FznBV5D98E/3mOHHJv/l9rI9BJXhfnPd6jXEf+MP5t+CZmkryDb4BCMVPl
SXzauJPxDmNW6L6Uy2OLfNHn5NT1kU/II+OsoK5uYfw78K1cOGasbrKcDgvj
veCSn8+l76s7KY+K84AiMWP1U/TpsSieH5ftzx1/+3Sn5NHxXaIorli7w1o/
a6flMfGuUQxXrV3DdeSxp789Z/Rj4z2geMxt/VR9hpgRcmfcsD+vfoDurDwu
/m0ogYr6t/QZ8bHcBTftz6d/SXdOHh+/R/5Rfhj15HryonjH+E4uiUq6aXIm
LJb7yr/ytdBVbimv4u/FZP40/TXuf/w/gV9Km8Z8pdfiPNFbniU/HRj3k56P
80gPyCviLMcz05/i+Wk1Oi32xeyj9a3Xpx/JhfG9XAqVddPlzHFP5G647bMK
6AfpLsgT0QClkUASJEUyJEcKpESquO9+7uU4s/wkNEQZVNHP0GfBErk7WulW
yxWwNeaZ/A//TMxj/nqcZZra2v+3nHth
               "]]}, Annotation[#, "Charting`Private`Tag$464076#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
               "]]}, Annotation[#, "Charting`Private`Tag$464076#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1WUYVEUYhuGlpUNSWgmlOyxQSkEQMAiVsgMQRUoFFExKBQSVRlpa6e5G
QkopQZRQusv7+/Fcb8ycs3tmz8wWbNO+cbskiUSiWrJEYkTqROJ02kSiHH5K
l0iMTpNI9KQr5ap8E/57fj5NTYfS3+lWetG15WkneTb9y/y+dKu8nn4ot6Uz
5KU0Px1Nj9Lf6K+uz0qbyGvM/ZRfz7fg2/Dj+Ky4S35M7sNf479BJ3m+fC9G
us8ZWh5jjN2PS7oK5nTWHZO7Y5sum66pbq3cErkxSn9WVwFj5QdwWbcdo3FO
XxE/6h/EFd0OZHevZvp1ulbIgzH687pKGCc/hKu6iuZ20f0t98BOXQ5d81gr
uTVelMfL2ZBXflzuy1+PZ+Z/4wfynfkF/H0Yzx+P7+1+F2hlTI37mPcRXSU/
zDflf+AX0DT0O/oH/ZVec20l2lX+mf5jfr/4feQNtKfcjs6Ul9ECsc7xe9Nd
8b1cn5M+J0+nG8z/LFRuw7/ET+CzI59cV+7H3+AH8rv4QXwXfiG/ihajE+iJ
WHf3v0irRGdeNVzXVTbeTXc8nhW7dLl0z+s2xnoiP8bpL8X7jIlyddzQ7cZ4
TMBEXDZ+PyYZfwQ3dXtwl3u+oN8Uz4ICmKS/onsAk+VHcUu3F7nNb6HfrHsZ
BTFZf1X3IKbINXBbV8Xc93Un5I+xT5dH11K3RX4l7iFPlHPgbrme3J+/yQ9G
V3mRXDzu7fpr9KHYz8ZqopnxYXJaJOSq8gf8Sb4/v43vxbfnZ/HLacF4p+gx
ujv2vPvmpa3kGbHHzf+cboz3n74a35VOkhfTnHQ4PUR30HuMP0EHyHPoLXkQ
3R3rSr+Vu9HFcon4nfiT8Qw+93q8w/FexxrpV/O1+Ob8cD4dksS+jzOHP8X3
xtvy7Fgz/OE++eTW8c4bew2vypPlXCgk15e/4m/zQzDVNTfkapgm10bSOB/M
6677l/8E+83Lr2uj2ya/jsKYpr+pqx77Qq6DZDign44ZmIlbxh+JdY1zDslx
UF/APV/Ub5ffQBHM0t/WPYqZcUYgRZxL5vbQ/RfnKA6ZV1D3Uqy//CaKYrY+
oa+hnxV7ESnjnIp9rjsdexeHzbtb97Jup/xWrJk8Jc7jOHflBvLX8U7F/4L8
vryELxnniOuTyDXjv8FYL34NX49/jh/BL6Tp6fd0f6wdTWX8YfqR/As9Iw+g
22NP08/lDvRneUW8V3E+0L/pHvqnz72HvhLrE2eT+V/QTXLb+G34n/jcGMEf
jnNU/yT/TbxHGMzviTNS/wG/lC8V38e9k8q14vnifcbz8kg5A+6Is0n+mD8b
n4sjrikU+yPOyjhHUQxz9Mn0teO+8e4hNY7q5yK5sTqxV2KdkQZ/6QvrX4s9
GfsVxTFPn0L/mH5uPAvSxjmn66U7x3+JY+YV0b0eaxX7AyXQUDdQlzR+C3m+
eSl1j8vzYhwvyKPkjLHf4nyUe/Pn+a/4HXwf/h3+F34lLUTHxf8J3Ru/kfsW
pW/Eu0f3xveim+UO8Y7zU/klNA8dGb9nvH+0pPFGdFA8I01Gv417xDkb/23G
P6TL5NW0dJzj9BTdF/+XPjsVrSvPj/OBX8s34lvwo/lMSB9nufwJf4Hvi3fl
OXJh/OM+98pvxn3jeVEKjXWDdckxTF5o3h26evKCGEcGHNffp39L/3vcG6Wx
SJ9a/0TsC/kpZMQJ/WIsQRrj9Y0v0j+NTDipL6ZvG2ec3BFlsFSfVt8gzmP5
GWRGDd2nuot8P5wyr7iunW6//B7KxufHmaxLEee4vMy8dLon4/eRn0VLeYyc
GVnkmvJn/CW+f3wXea5cJM5K15eQ2/MHjPXht/Cd4mzip/F5MYo/QsvFM/JD
4h2kKekQuo9uifPDeHe6XF5Dy9DJ9N9Y1+h9XnraMM7u2MNxVtN18lraRG5F
x8Z60iz0B3qA3mmsVpw1/GX+a34nPyDWh5/HF42z1meUlN/mDxrrHOekPF3O
h/Kx7vJQPlW8z/IK12TQNZKXyU2RFbV1X+iuxH7CafNK6TroDsldUAEr9Rn1
jfXL5WbIhjP60vp39IflrqiIVfpM+qfivJSbIzvO6svo39X/KXdDJazWZ9Y/
HXs4zmq0ln+MdYl3mz8Y/0k0h7E69Ev5aqwTzrm+rK6j7kj8J6Ay1uiz6J/R
r4pzEzlxXr8W67AeG7ARm7AZW3Cn656NfR3nEHLhgr6c/j390TinUSXeS913
cRbHuyT3kFfwZTGF/y/2Cd3q+v8BdZvR1g==
               "]]}, 
             Annotation[#, "Charting`Private`Tag$464076#5"]& ]}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"Feedforward solution\"", TraditionalForm], 
         PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1a\"", "\"u1a\"", "\"x1a\"", "\"\[Theta]dot1a\"", 
           "\"xdot1a\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
rYJoYEYrUePVfwQ0KMKU2TFzAyx3chzncWRC7YsDvO1u4ODuz6WzpReIqOtR
c9HAq3j4rIGsM/SdiAYQzkxftCFA9nt6CR6BRNSj5kvXU2sm+P6lFchEmFBt
21X8MXciPD72IIL1NAG94hB7iP8mL0zraPE2JLPCnMI9j/cM8MLg4BjJdHk2
iPhVK0de54MRSPL96SZ2qLe0EGQ8wgfzfioznaFywE8nAw6qxK+DsVZkY3c3
AZ25oHT+9PdNcHdfeNjmDBOqf5Gj0OAPDg7cS6n0jyKicSejbAiDePjY8fKR
MXp+60GjmspHCVCdnds+7j8iKrDxqS1gjgnKe6uhnwSY0N7ykLOfknlhnf50
F5csGb7l0rj4XJIPHn66/uwDDztspsAomMIHB4b9w28+4ICmgb+29Sfg4A6F
3QutbkQ0EGyoaiTi4TIzUU2THi8+9c33vUgnQKGYTVKvJRGt0vYbtfHhg9zL
r74kytOfd0ndS+Vb8VD8w5qI/kcimq1xIKxwFwGGv6wK8E4lon3NK+oC5XyQ
TEu7sIZyQG+V7I/Wnni4t9PGzpruH9scE0fmAwjwsYew7k13IlpRkMEetIGD
TfvUfBySiWiq2uDmH2YC1Lkn2RFN94/wE9qt0qV4eGdNN/Z+ERH98mQyFaeC
h96tJzcF6P797bTnrtdaBGhOc0NiXxPRYpePybus7IBGhrsOp+o0+La/5O7l
BzQQeuWFAXEfAY0SDX35KW4DFKz4PrK1ZkJ5U/vlEy/h4MmvpjFJ+kR0aVU/
j/8CHmqmFDjEfiOiyRarM/ZmBFj0Z9+MaTARdWRbqV4xZYIC8by38ZVM6AJb
RGejIxEqHi4U8jEkoAtbag+IXueFr6xYL6QtscA3wuwu6r28sOf4rLj9NjYo
rreYfOUqHyw+HDK7XMEOadwP9lgO8MGDMgHaBnMc8BIz88S+oHUwfMWCR7+R
gK623+p5lr4JGv0u6iOjTOicirm1XysO/rl2rOF4OBEVY3rM/KwLD9/KmOud
ofv3ivSplt4+Ajya2cE+AejP39HFitVRJujTMTF8ezsT6uJYeuZbAi9cXxz+
VCxEhpHWO7TeifPBx89VdByI7PBQmxWBOZEPrnOome5y4oCEu1LVfK9w8Dg1
eP3VfSLKtjnWXReFhxVz2Wn6dH+pU4v/m/qGAG2uvru7dpseX/gyzyt48sG3
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
H5xPdGA=
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               PolygonBox[{{349, 49, 273, 274, 275, 3535, 3538}}], 
               
               PolygonBox[{{44, 63, 240, 743, 588, 469, 863, 708, 380, 833, 
                678, 558, 319, 803, 648, 528, 439, 286, 776, 621, 501}}], 
               PolygonBox[CompressedData["
1:eJwVzCkzhXEcR/HHvrwAa5Iw9q1YkkCzKwIuQTDWIFxLMWME3MtoxlJtiSRY
CsVWJEEwY30F9o9w5nvO7//cmxMabh2KDYIgBnMoRQkSHD48dOOJL6IFpUiL
C4Kwexy29TAS8al78MyX0IoC30bcMnCsy5DuNqnjsaOb9AGvxYiu1hs8F1c6
CV+8Fy885P2cR3gD3+WVaNOFOsozMchv7Yl7Jz/6/42tt2H7YNdtufcMO6Vn
bYIdsJd29f//vTfbQ71g6+yEvbdrdtR7jd3U8zbPjto7e+2ti5/wRszwR5vs
/m1DeOV97hc8yhv5Hq9Cuy7SyzwLp7oCmW7TOhF7egy1bls6Hzc6BT+8D298
GR0o9t2KWzbOdCWy3GZ0Evb1OFLxq/vxzv8AHfxA5w==
                "]], 
               PolygonBox[CompressedData["
1:eJwV0U8s13Ecx/FvORPNn3PbD5WxxUHl1goVDj8kbtpC2jAlWwcHFK3iYrOZ
Xxthq27cFN269LN14EKSOpf8GQrV43t47vV6vt+ffX+/7+d76lZrtOV4EATH
MIE85GIXPyyiWLHsxhVEkJgQBO3mf/Qx3Mae8z/NKvGZ96AY2c4+M0vFW56J
JLN7/EAfRwMKzUbNIvjI9z1vQ6/CKu/FZWde8XMo4af5cz0N73gWTpjd54f6
S5TzaX4Rjfw8j+mZaNUXZdy8Vp/Xi9Glf5e//Ydfsho9Zl+cq5cf+JB8FN6J
fM2fynzZIZfliCy1PyMHeJ9Ml3flJzks5+yr5SwflJfkQ7kmYzLbPll28CO9
UY/rE3qFPqMXoYlf4C/0LLTpS3LBvE5/H95X+L28z6a8gTW7x+E3sn/DC3CV
n+WDegbmwztGitkD/lefxB0ceNaWWQ2+8j5cC98XJ53vNP+nT6EZh85vm93E
Ou/H9fD3cGS3Y16Lb/wJypCD/zN/V7o=
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{46, 47, 366, 425, 514, 634, 789, 303, 336, 397, 
                486, 606, 761, 260, 259, 302, 335, 396, 485, 605, 760, 258, 
                365, 3536, 3537, 604, 759, 257, 364, 424, 513, 633, 788, 301, 
                334, 395, 484, 603, 758, 256, 363, 423, 512, 632, 787, 300, 
                333, 394, 483, 602, 757, 255, 254}}], 
               PolygonBox[CompressedData["
1:eJwV0bkvRFEYhvGLytLgD2BsFaFA6KyVfSmUYyyFwpJoFGNQSNBR2aejpBsS
pcRSKCS2QqGyNXY6vymevM/7nXNyz703FBnrHk0NgiAFMZSiDIUGTZjFHbps
esWXtUE9jj9MmGWlBUEBP0SuvoQSs0Z9BrfoNHvBp/NneiFfR7V9A3ot30er
vq2f82H+y8d5Jg/xez7F6+UBevmB+QUf4TlyXi7KYtlgbVXe6pOyQi7KXdko
Y9ZX5LEeljf6nOzQn/HhvnH9gUdls1yWR7JPntp/yUeT30CuoYpHzGv4Hlr0
Lf2MD/EfPsYzeD6v4wn06Ak9my+gKPmeejnfQYM+rV+jXX/Cu/ud6CG+ikp7
+vVNfCP5c9PN8pLPQRRXaDN/xJvzYX0D/5HuQdc=
                "]], 
               PolygonBox[CompressedData["
1:eJwV0jdLXnEAhfFrA3vcrVlVsIAddXHRTYfYF1ETAyqY2MDBCg4iiK8NB0Gd
7ejiYqKCi6AZEggOGTJaP4G/Ozw855z/hVu4H7sGmwaigyCIwgYKUYQqQwc2
8IavLoqLCYI0eRwnSLHNIcdeqbdjHa/os8faP8i/kK/votY2ph8jWZ9Ftq1C
v0a2voZiW5teJu+jQV/TX/BFj9FT5Qb5Bzr1e/2P/E3O4x3UyKP2B3lMruVF
PuMmPnK2yrd6HyeF78QznMXlzrf4nz7BdbzE59zMV+E7h/fW+zmL53mVi7jV
+Sb/1Ue4lBd4j+vD65zfyN3ys/xZjpZT5P/ypFzPF+iQ7+y/5SE5l7dRLY/Y
a+RTNOqHeqI8jUy9TL9Epr6CQluLvoIn9NqibMnyMA6QYJtCRvjc+k9k6BEU
2Jr1CB7RE/5E4feTv2Mf8eHzI91eon/CMt4BlB1FSQ==
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwt01N3FwAAxuF/Npe9tFqXmSd7rRaWsawt21pYdmu1tGzbtm37K/TsnC6e
897/znmDo2IiolMEAoFvJO8ZljGUttSmPClJRWrSkJZ0pCcDGclEZrKQlWyc
ZTnDaEcdKnCDRCbSg+Zk5xwrGE4kdanITTYwiSjCyMF5VjKC9tTjIduZxQAq
cYuNTKYnrzjAQlrwlN3M5RMniOYth1nCV06Tkwus+t9tJO85yi868IJ9/GA+
nznJH+rziB18J5aPHOc3A3nDIX6ymC+c4i+Vuc0mpvCBY/TiNQdZRDjP2MM8
YnjHEZYSxEVWM4qOvGQ/C2jAY3Yym0FU4Q6bmUpvWpKLS6xhNJ1oSFXusoVp
9KEVublMPGPoTCOqkYe85CM/BShIIQpThKIUI5jilKAkpbjCWsbShcZU5x5J
TKcvEZTmKgmMoytNqMF9tjKDfrQmhGusYzzdaMoTdjGHwdTkAduYSX/a8Jy9
xDGEMlxnPRPoTjNqUZZQyiU3d6p/5Vpx9w==
               "]]}, Annotation[#, "Charting`Private`Tag$464160#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1EVsVVEYReFbmOBSbIZDcXcGuHuheII7tLgFd1okARKCFJcCE2SAwwQI
GiC4a4I7LS7fGazuvf5z3n3X+or1T4pPjImiKN6fj/JFpihqixu8T+YoOqVP
0xvpO/RKaMBL8EV6HhzkhZHFbBRP1ys41nrZF5/0l+btcJNPR0MUQVafSTTP
0FPRDzXM1pgVw1n+2edf6e1xi89AY3t28spoxEvyxXpeHOKd+SG9IYrybDxJ
/6YP0s/rG/Q2+l69DvrzmnytXhyJ+jV5zry7flxfIZvJ6fKp3CS/OL/XegfM
4bfDdcvTfKWcyZvINJ4sq8jx8o5cIxtbLyWT+QIZK4fLy/KwtS764XCdmKI/
DPfGPLs+Wv+uD9Yv6Bv1tvo+vS4G8Fp8nV4C5/lX5/tG74g7fFY4P5S2L8Us
H47w4shhNob/0DdhINJ9/q1ZJ9zls9E0vBOoaC0D76zF457ZHDQLzwg5HW+s
+U99c3gW+Gb/e7POuM/nojni7F1ilh9Hwz1CLrNx/Je+JVw3aputNyuJC/y7
433Qu+ABnxfOz55dvCpa8DJ8qV4Ax8K1I7fZeP5b34p2fD+vhyG8Dk/VSyFJ
vy4vmvfQT+jNMUN/Fu6Xc/goEzA3PLPwbsszfJWcH+6J3M1TZDU5Qd6Va2VL
62XlMr5QFpQj5BW5OryL1hPkEb48vENyqnwkU2Wc9TxyAv+jD9Ev6tv09voB
vT6G8rp8g14ao/Ub8pJ5T/1kuF/hebmeT7IrHllbEJ6R9T28Olrxcny5Xggn
wj1GXrOJ/K++HcPwy7E+m3XDY74QrcP1Itb+Seb/9B0Yjt/2fzHrjid8Ufi/
Dd+HP9a+mvfAU744vP8oj0rW/uIf0q33xDPz5PBsw28U8vm+yeYRdvIR4ccQ
GbwXnusp4Z6Fdxv57Z9iHoM0PhIx4R3mvXE1ZxT9B4ZDrek=
               "]], 
              LineBox[CompressedData["
1:eJwl1EVsVFEAheFXxT14sRVupTilC0ig3eDupUgJ7q4lgQSvAIHgG9xhAQlu
CzwBEiCBhOK+wuG7YfH3P+e8kc7MnamTOannxJgoitr6c6dUFE3gWHyLjaIh
KJRXoRuaIA7x+O7aULyUV6M7mqJiXBTNtcdirx4evKnHT+AftmF4Ja9BDzRD
JfeZZ4/DPn0SEvFTH47X8lr0REO3XWergnN6c1S2zdfjsT/8r/oJuQMm6+30
7XJd3NKL4Jc8Am/kTNevyevkLvIBOQW99Eb6erkqxst3+by9r3wm3Ic78Tx+
xts42fUqvEDP4QQeyzc5Pzx+eL/4pL6aU3kWP+GtPMX19rxDX8n1eAo/4Nuu
DZLPy12xSH7BRe2/ORNv5ZH26/J6uat8UG6J3npjfYNcDRf0FqhqW6gn4qA+
FR1sO/X6uKMXwx95JN7JG9AnnAu3y7VVx0U9BdVsi/QiOKRPQ3H81bPwPnz2
zkVueC/REtXdZ3F4LTisT0eJcDjto2wf5Dz0C2fKlmdLwiW9FZJsS/RiOKLP
QEnE2EfbPsr56B+e25Zvq4HLemvUsC3Vi+NoOJ/6KbkjZuqp+i65AabKD/mu
fbB8QU7HYrmQS4XvkTxG/iRnyTfkAjldPiSv4lbhsfkxb+EB4Uxzgb6Ca/IE
vseb+Ep4/Xw2fLbcmefzc97ObVyvycv05VyCs/lWeG4+Fr5HfFpfw2k8m5+G
M+haR3m33BDT5Ed8zz5EvihnoHT4HdDHyp/ljcjQD+utMVBP1jfKtXA15v/v
Sy1bjl4Sx/XZSLPt0Rvhvl4m/L7YsvUv8qZw3sN3GLXty8N7ixP6HJRFgn2c
7au8OXwe4fsT3kdHpxyXRwXc9vv2D0Y4jhs=
               "]], 
              
              LineBox[{3538, 349, 819, 664, 544, 455, 316, 801, 646, 526, 437,
                378, 276, 774, 619, 499, 410, 350, 317, 277, 278, 279, 280, 
               281, 282, 283, 284, 775, 620, 500, 411, 351, 318, 802, 647, 
               527, 438, 379, 832, 677, 557, 468, 862, 707, 587, 897, 742, 
               929, 285}]}, Annotation[#, "Charting`Private`Tag$464160#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
WplOpxfivRFnre//H87vvZc=
               "]]}, Annotation[#, "Charting`Private`Tag$464160#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
9Rz4MN4vsmr8TT0zmaz9D7zouD0=
               "]]}, Annotation[#, "Charting`Private`Tag$464160#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1nfcjmUYxvHHioxCKEpIRsgoGWVLVmZC9t6bMiO7rJA9Q8hIgyQjym5T
NBAyS1ZZDfQ9/zg+x/E7zut53/u9n+u+7jdXm571eyRJJBJ7kyUSKVInEhvT
JhI/p0kk5qRLJArzDnyMbgP/wLwEb4hX8pXmI/hivJ23Nb+TP4IX8ZfNX+TT
cRK5ntxb3ilPkFfLJX3mNL+Dmui76yfKv+iryO3lj/Wv44dwJTwDZ6NmeAj+
Vr7DfJN8SC5Ca3FJ80a6VbgdTo0L4KE4KZXSncEpqSk+iidTStqsO6wrSutw
eypNqWiL2RF9MfoQd6An6aw+FTXTH8NT4n7QJ/H36B6j9bgjpXEtBfXDdMno
Kd1v+E5qjo/jZ6zpgDfiqTg3roxn4iHyPPl+uXnca3kt34ff4Gtxap/Zyo/q
5uoe5x352Lin/CPzUrxx3KP4PsxH8iV4B+9knpYXwov5K+Yv8Rl4K0+O6/M+
+H2+C0/k7+AyPvt7XAO10PfQT5J/1VeVO8qb4lrxw/hpPAs/QGl02/AxuTht
wJ0pnXWP6ofrUlBZ3TmchlriE3haXDN9qjuue4I+xl2oXPwMuovups/iesxL
0EbclcpTetpudkJfkjbhblSB/tCnpVb6k3g6ZaAdupOxp2gz7h6/J54h/YjY
n1RRdx6no9b4FJ5Beayroputy04ZdTvxKbk0bYm9Z80LunfiXsb14yJ4JO4v
z4x9LD8n95V3y5PkNXIl6y/wu2ihro1ZT/463sJPm1eL7xu/yzebv8rfxnvj
Z5vn5c/gZXyO+ct8Pv6UP4hb8KF4Hd+Pp/F1+B6f3cVP656kTvpX8SfxzMhN
5DVxPXHfcVE8CqeiBrgf3iNXNr8o301t8Rlc3bxz/A14Fs6Hq+K5OAdl0u3G
Z+L5oq24V3xf1hXTj9bdSU/rLuH01A6fxbMpM+3RndWVoW24d5xLlIX2mv0W
+5A+xX3imaV76T763Px3s3L0Ge4be58u6zNQe/1veA5lpS9053TlaTvuRxld
62P6MbrUVE33J85IHfDveC7lt66abp4uZ5yPui/xH3IF2oGfsqZpfMdxLuN7
4kzAY+OZo+q6v+I7o474HK5hTZf4vvA8/AiujufjofICOZfcUh4mfydPlz+M
s8n6r/j5+KyuIu/MX4szje80L8Ob4dX8PfNR/K14R/CXzDPx4nhJ7BvzAXwW
3sbT4uf5i/gDvjfeE/xdXMNnr/BM1EnfSz857oe+ptw1zjD9fFwA18AL8EPU
Ks46/H2cR+ZfyxfkSrQL94+9Yc0T+td06aim7irOTJ3xebyAstM3uouxh2k3
HkDP0oP0rdml2IO0Bw+kWpSD9pld1lehvXhQ7Du/t4R+nO4uqq27hrNQF3wB
L6SC1tWM512XO/aEbj/+U36GPsdlrWkeZzceHPsWl8Tj8UB5djxvcsP4LuTP
5cnxPcl1rL/O76U3436a9eZTYq/wi/E38m74Pb7N/DW+In4Of9O8EH8WLw82
H8YX4s/4w7g1H44/5AfwDL4+9pvPfsf/0lWlLvpx+Is44+UWsR/iHRnPIS6F
J+D01Aj3j7VyXfMb8n3UDV/Ci+hRa2rpFunyxJ7QfY+vxPNHX+KXqV68k+P9
FWc4HbDmajxH9BUeSvXpb31W6q6/jBfHeUoHddd0NehrPCzOAb+7tH6iLkOc
57p/cDbqgf/ES6iwdbXjvazLS/l0P+DrsRfpm3iXWdNStxa/grPhJ/GkeMdQ
YzwAfxlnrfm/8cxST9zHbGrc49iPcvc46/Xj4v8++S19EbmO/Hb8zxC/I75H
nE9uI4+Q1/ODeGb8vxH3nef32R/lG/H8xR7gXfl43Sb+bbxreat438V7xHw0
X4p3xZ4wv58/FdcR7zHzQfFeirNLfkEeKH8lT5Hfl5/3mf/4A9RLfwXXNusR
+w0vxUVx3fiZOD89ovsJ/y3Xon14BD1gXRn95HjHxPOhu4mzU298FS+Lc4V+
1v0TzyntxyOpUTyfdMjsX30d+g6PosZ0S/8g9dFfw8vjWaHDuv9i39L3uKLr
aB3PBx4jL5N389Fx7vCyeIpZ5rgnuts4B/XF1/HbsdfpiO6mrh4dwGOoCSX8
jJxm/fQ38AoqpqunWxr3hwrrfsG35Pp0EFeK/zHiu8dj45zD5fBUnIWa4EH4
a7mpeRKcC7+I+8pvxD3X15F7ytv14+VV8kr9Y3J9eUX8zWbD+SJcQG4rj5Q/
4j/gWXxD7PH4f8lnj8q39Qvwc7wbn6DbHOvNK/O2eE3s17h+vhzvifdPnMu8
fPz9cZ1xbvK5cQ7G3yIPlr+Rp8ofyM18Jqn8kPySvp88LfaEvq7cS96hX4Uf
j2uK8xAXpHZ4FP5RLmp+TE5QA/wjftq8Hd4QZyvOiSvgafg+aq5Lpsut64//
xaupuK5BPLe6QlRMdxwniecE/4THUa54Z+um67JSC13yOJt1A/B/+J34PuhX
XVJqqP8Zj6eWlML6PPqB+pt4TfyddEKXjBrpD+EJ1IrusD6vfpD+Fn43rpdO
6pJTY/1hPJFaU0rr8+kH62/j9+gJOqVLQS/oj+BJ1IZSxfmjH6JP0PuxXvd8
7Cf8KLWPZwj/JM+WP46zJN671v4PQ7H+xA==
               "]]}, 
             Annotation[#, "Charting`Private`Tag$464160#5"]& ]}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"Test on dynamics\"", TraditionalForm], 
         PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1b\"", "\"u1b\"", "\"x1b\"", "\"\[Theta]dot1b\"", 
           "\"xdot1b\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]},
    {
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
j/xJIfNiqN27c8fZaGRejI6U1yg1+F9ezOy6qyf6PWlkXsyCDU3iYQOVqVwl
4TEwzgbdvrMPv2inMDF/+6eOV+j9oXmSv5XbUpP4w3uW5G+HqhQizNX+8bcG
i4/6vzJZJH/b4Ka59HYri+RvByS4RsPWzyDM377RNRfwJeYpzN8yl+57eUaM
hTB/a6F20wbqTyHM3yrveRowVTaOMH/rvOf1heVXRhDOuxlc92JvldMPhPNu
aHkpOVVj+Qjn3ait3eY5etoPYR43zbGkf1HoKcnjvvbIvnCa9yXJ404gsWEL
lTckj6se96rU8Ugqyc/etdh0TsW2EmB+9mdl5IYmxXCSn+3a/D73tgITYX72
sfTtvPVDXxHmZ+OuWWacW16NMD9rkMfhxa1UjWSOXQjy2d8J9B7LObSlVSDh
jp79hjq94PaBlPhjeWUI87WTlueYg54VJF9rXNWTIHL5O8J8bcW3o/J/t9Uj
zNd+WTUe+La6DWG+1qXi43s+pR6Snz1z5Krf+n3zCPOzrl8/MXe4UMj8nfg1
xPGiiErm79TNy76VvEkj83dyzt+cFnv8L3+HV1mSU5mPxrRu6/fc/IENRtvd
X3y8lsrEPK14/IpX0d/mSZ7W0l08crRnluRp2Y+to7B8Zkiedmn1t6j7lSyS
p+WJKM9WIv7GPO3hE9taSoh5CvO0z1RecaWIzSDM02pNz16UsmEhzNP+KsrK
pNZMIczTxt7lqIq5PoEwT6vgqdokf3YU4fygu66v/gxI1COcH1R3M0j0vl0x
wvlB5ajrRtiPVwjztr9HBreqrA4heVs0X9i1lvMFydsedRj0dx2MJXnb2/ue
mZz9m0zysVfc7DOsTSpIHvb3vuU11lu/IMzDlq8xaxJVq0SYh7Vyur2KcrEa
1dj6u7xQagco/f1q9S1VqD7eufaUcjcIaLc8fvJKOaqjodar9v0ga7MJq262
DGF+Vk3Gb2G3cjXC/GzB5qV31hr/QJifZf/82eWT0G+Sj/0TWDuTuHcRYT52
7dIvZtLyVDKvyFnhOuPnHhqZV/Q2ISr+0It/eUU7thg/sThDY9a2hutt2c4G
0w7QNQWjqEzM0/6uXnttV9UcydMG3xFSKFg3S/K0dhWydvx8/3jaVe55JW05
LJKnNTATdQqfIOZlPYqK82leaFu9Pih30wzJ10r8EDDf1MBCmK/9FiDJ8TBz
GmG+9qx5h8tp5iTCeUpmB1SLLk1/QzhP6e0zdxd/3myE85Qkf6ie6F3mRvK2
WZdf3Eu5HQpwnpKDjoMQ17cokr+Nzu7IzXWpApi/fXzYJZ57pz/J37L8q2D0
2lyE+dtnNgkR1Z2lCPO3icnRka0NVQjzt+qGbQoaR6tRtmrPvkNFHYD1SPG4
LF8lOnsqvelhfg/YfjP/ycqGMoT53HPblWxM5stJPndRxeJlwq9vCPO5n4Lm
JW0k6xDmc6+erCz5sLwNYT5368B6DtlT3SR/u0K075flpzmE+VvTe8df7dCg
kHlOPO2HNgwT9xfnOXGlReXSr9DIPCffafWzzmH/8pzSf6Z/i1xHY3r0HfOq
CmGDVz6P/VzcT2VifvfrppBWXZEFkt91ktw4Kr1yjuR3T9HOPYuNnyH53WvH
QiYc61kkvxsrZxdOKWaR/C5Nwl7+tdAMwvxu+djpVj3pGYT53W8nnmT2E+cv
zO9ejLPhtl06jTC/+2f/2axl3ycQ5nc9og/vTPg5inAelayTLqNttgHhPKol
Z+NLnI2+IpxHFRp8qmOl7VuE86iYjwwHhceCSd53zRKlZ7sSn5G8r4PECxvb
nzEk7/t+PWP925dJJJ+7pOIlz0BNOcA87tD9E/d/FH9GmMdNKl9IWXm/AmEe
d7lKgcS8TTUK4ZbMMU/9A2RP9mYUBFQhu+BxH5m8LrC8ZcdRoexytN79rmtS
Rx9oX37ku3R1GcL8rnn7nUG54CqE+V3ni9yRjMBahPld+ZZjn3qLmkg+V8Iw
0ZiZv4Awn1tTq9/ZQaOS+VcSR65ll62ikflXFi+f7foV9i//6s6eie2al2jM
qye53gcKssFtbfSu63nE++k/nlcr2DHvA+88yfPu/VnQLmkwS/K8dueva92T
+cfzOg0JcCblskieV83+Tmd3Hwu9fKc4NKjMC08XFLUi2RmS720Uv6xRPMhC
mO+dPFvUc7p3GmG+199rwGOYawrhfK47NoEBD5JrEM7n2pIv8mXjzzyE87nE
KwSXBhmbIcz7FjX3dmTmPgU4n8v+9cs163tekvyvXObjiICRSoB535ZkPrWX
f8oQ5n1ro4rXrADVaMUhtf3dr9rAFSt3361i1ejx+aE/H/M7gfnrSKcC4wpU
dEEqYWVNLzhUPy93P60MYT74K8/pm2LilSQffDcGCQcuq0E4zytUQzX5ZDeV
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
LWHZ7mJiveO8+OyUQrHmVxQofVD495y4IHy68LPw6PAiwD5Ls5dZal/kLMA+
i+iUCzWaMg6wz9JuZiF2oq0NYJ/lj6TNmVvVKQj7LHxlca7rCh8i7LNU5qul
jFkFkz6L5snP05xBr8l8+co2gfsKQ0lkvjzbrVeRauJpZL68bMCh4HmPdDJf
vmhuIkmMP4PMl6+WrtvVNptO+jF+95jZy8+nk36MeYxBkEL6JOnHrNz/a3C9
AIv0Y/JiqZNXQuZJP+Y3I18cxFGZ2I/RP1GmljZCZ2I/ZpFfZ4O/HoOJ/ZjF
D6bjig00JvZhGtl2cOUqzJE+jK7dqxmb+9OkD+P6+OKw79QE6cNMV0vXu9wa
RzhvXv1s0PnNsWNk3nxmyETC85RRhPurHdtn5kdah0l/ZrmrzKWs5X2kP7Nn
MebhpeJGhH0Zm4iXVsmqHQD7Mh7NO+/xKI0C7MugIdbPtLBpgH2ZAttbIn8c
58Dvb3MLDh/YoUy/THl20QLA/kxTVMtXXXcKxP7MmavKS6uHqRD7Mw41No4l
igyI/ZkW+2MCbIADYn/mQZ3YUb1ALoj9meKmN0W5VlwQ+zOj1LKOWl4OiP2Z
dKEbBQXWDIj9mfaFhW3Fqv/y6CcHJ7QeiP7Lo2dEvVU4lkaBOI9+L0vnnlAC
sf55I7f3TwrABx1yx3bvo0Ds19Bp+aafKfMA+zXjcaYXeBQnAfZrWH3Nuxrl
e8g8++LVUmt+eWQg7NccOOC1WGn6HGG/pqMsPyesxI/0a6wtFUqOLUaTefaN
ktcU3cQSyTx73TueRsJPUsk8+yvXOETy9vzLsz+7qbhnjljfOM/+h4Pl39u8
GaSv80LPOaErLJ3Ms3fYu4yh9W4KYX8nW7o8YJnwLOnrXAQS0s/HaEzs64iZ
c2duvsBgYl9H/mCh+fp8Oplnr8l4K8KuMUP6OHHLx2wTRKYQzrO33SwM3qyZ
QDjPPsNnt+Jt3nH0Q0+GbckQCxhs1b9zdNcYqnWrZL86NAuQPRtj5/QIwn3k
+3iS6sJvDpF+z2fryda1NzoQ9ne60qMCu+8PAOzvjJj68/PmTwDs75S+zVOs
K58BArmarm8V2aGjwarjlUnzoHwlN7+HKgcUXe54UPDXIsB+j/WND3NrV1Mh
9nukLUQXDYZpEPs8GsglTfIJJ8Q+T++wJjL8zQWxz1OymDufYMwJsb9z62Dg
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
2Ev42592YP+3alEko0C1H/s/ptlua9tKDvZ/QbIWdpE6HID8Xzb148mdDX0A
+b+86LqkzybtAPk/07oCZUrxR4D836FXW2DYmwycD/d4cnvg1cginA8XIOeb
v4A/FyDfl7dj8SvHuWGAfF/3vxPcosQkQL5vq2fs4mXqcwD5Psb7McP9NvO+
j20tbiVcN4t9X5yu1L1PU+PY9znIvjB3Du3Hvu+WsL6wqnQF9n3ntmzMVzmf
hvPh1POoPxbXMbHv27vFUEW3uRT7vtLEc+HvTlVi3/ee2jX9Vuwj9n2JQv7V
L79XY9+3bed3mezJGuz7HLmLW83esLDvO7lFJ4WXPN+R7zt3RetalBkb+z7t
qqpj39Z3Yd/XYdcU1PcoBefNbdvG3pZgWAqQ79OtTT/6NqQEoLw5t/AOtZX2
0djzZUm9PiZHmcCeL6ria7WmwCz2fJXCcxtXdVEI5PmksuLGC3OoBPJ8GReM
wn9sohLI81l8LIgx+jPDRH4vY8lrT27X79jv2dww7nHPZmO/d/zbkoc7aBzs
9/zOWEeFtXKw34tl1JocXzUAkN9zezU64ne/B6D8uXKCwlY//QMgz/c0/8b4
XfVYgDxfI58Pv65TCc6fC4bK5ZMS75jI68lBn4sJs2MAeT0jhRLdJ/tnAPJ6
PzdfK/quNO/1mBMVbG0FCkRez+jS0dCVZtPY6zXfn+3cUzOMvd7BZdoB6qbt
2OvJjTstcnV/i/PoJG12Hzn5LBcgr7fFadOLuGfF2Oupi70z7Csox15PsHTl
HaMfH7DXK/opoKS/uBp7vUsj95w7HGuw16uUvBx52pyFvZ5mc/iCW+R5jrxe
yOFDfOnkeY+8nu1gVtmnSDb2ets+vteOqejGXs9FtX17+DomQF6vzbf4X+WJ
coDy72K7diWmSQWCjB0fyhcsmAC1z5a2m7hRCOT3BleHTwVEUgnk9xIVC/8o
OlAJDfvqhFPKcyDFVHDyqvEc9nw0wSsJzY3d4OdJldlfZTyw+OYe5yqLARAW
KhlxrYIGtyzqGZDq44CjHyqZXZ95YY2T/n6u8gHs/+5+4F3x4AUBkP+7nL7Z
hbGZwPl4AkVTHzQqc5nI9xXKR2/7JzINkO/Toe+uM+uZA8j3dQ4kJw2dnvd9
53hfWM5mz2Dfd4cP3vlmE4L9nuvrYrdq+Rrs94bMdw2zFVnY70l/aTb577xK
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
/Lb16ez86/8HvZ5Qqg==
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               PolygonBox[{{499, 484, 454, 455, 456, 3807, 3809}}], 
               
               PolygonBox[{{468, 526, 524, 509, 991, 840, 721, 633, 573, 1019,
                 868, 749, 661, 1050, 899, 780, 1082, 931, 1113}}], 
               
               PolygonBox[{{437, 525, 419, 932, 781, 662, 1051, 900, 574, 
                1020, 869, 750, 510, 992, 841, 722, 634, 469, 968, 817, 698, 
                610}}], 
               PolygonBox[CompressedData["
1:eJwV0DcshVEchvHPZcCkhUUfDAaDFou6SCTKvRIrMZKok0G0wWBADAaJxKDt
yqCM2qwbDdpIGBj8zvDkfd7/Oec7OV9J/3BiKBZFURIm8UyukJ8cRZsW2pGB
F7Nrs3qc6eFQJY7M98wKsKV3IDPs17vwwGfwat+N3oBzfRhpKVE0pv/yKnzz
XrzyJeRan9JTcez8vizEtrVCa/O8kyfxAf7JK/gqzwp3yjiazB71Mrmoz4Y3
8QneJmOyRq7LHvnmrlveGN6rX9hfKhfCfXJET5fjeqv8C/9Crundslr/4X1o
Cd/Ty+WKvszz+DRPQx3fkCfuPJBF2LGnCzFrg/oXz8YbT+CJz+HdmbvwPlzq
o6jBqfmhWTF29Thy8GF+b9aMK30MtfgHkV0+4Q==
                "]], 
               PolygonBox[CompressedData["
1:eJwV0TtMU2EYxvGDYKuTiW2FhYHBQVASE68JCYNcJAGJJCwKCwMWB6ubg61O
DooMDAxIUUcFWiZGL2wkeFkQgnhJ2rK3MqAL/L7hn+f5v+93zunpaRnLDN07
EkVRHeaxpqzgLd6FrI+ik3jp0DXUo8T7saFnse3cOr+I93wcsYYoyvB9vRVV
/RZK+nMk7B/xo1gIz5IJzNl1oQFlPoDveg4/nPvML+EDv4O4+9zn//Q21PTb
KOuTSNpneQyLrl+QSeTtmu2e6t36gUyjy6zKz8mZ8Pv0iryBTrNNflpO8Zvy
MT8hH/I+WScvyLwcljue+UW/jA7+0fkW+SzcU6b5MfmA98j//Lyc5Wf1v3IE
Ff2M+bT+Qk/pOT2OJc9YlCnM2/WED2o/wWvhW2BXH8SW/gQ/XfOVX8EnPhHe
GXt8FLv6FArOLfFTeMV7w3+OX+bfzK5ild9FO4rmBbNGvObXw/vht/kyiuZN
eGPWh+P4Y34IUzFPBw==
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               PolygonBox[{{457, 458, 947, 442, 441, 440, 486, 527, 588, 676, 
                795, 946, 439, 561, 621, 709, 828, 979, 485, 3808, 3806, 436, 
                655, 743, 862, 1013, 560, 620, 708, 827, 978, 482, 523, 587, 
                675, 794, 945, 435, 559, 619, 707, 826, 977, 481, 522, 586, 
                674, 793, 944, 434, 433}}], 
               
               PolygonBox[{{499, 524, 549, 609, 697, 816, 967, 467, 508, 548, 
                608, 696, 815, 966, 466, 507, 547, 607, 695, 814, 965, 465, 
                506, 546, 606, 694, 813, 964, 464, 505, 545, 605, 693, 812, 
                963, 463, 504, 544, 604, 692, 811, 962, 462, 503, 543, 603, 
                691, 810, 961, 461, 502, 542, 602, 690, 809, 960, 460, 501, 
                541, 601, 689, 808, 959, 459, 572, 632, 720, 839, 990, 500, 
                647, 735, 854, 1005, 540}}], 
               PolygonBox[CompressedData["
1:eJwVzjsvg1EAxvHTi1FdZgOJFIlBkBgMVGJBly5qdU0MtTGwSlRiMAg1Gery
BVjwATASl037AbSbyeV3hn+e//O873nP27O4USglQwgJrOOa3OAKH0h6OIVT
dKTsuLTv63Us6E0M8BXcY1R/wnv8qNxCJh3CjmcHvJe/8FleR4IfyUF7k6/x
X+R43rbLu2RFH5ft8R9w4ftF/YyPybSck9uyU5a9X5CHer+s6TlZ1Btx0yty
yPbNp2VJb5HLepl38zs+wh/x5s4/fZO3xrv4M2b0GgJvYJX/YJKfoC3+L86d
39M/Ma9/oY8v4RbD+gNe4z2YsB0jE8+iasvq/46qNjo=
                "]], 
               PolygonBox[CompressedData["
1:eJwVzzssnWEAxvGPY8JioMogx+0MHQwSWhKDViOxiNuxYlUd0CbdKtoYDCec
oUMTiVHdRve7yW1268LEKW2Tijap+H3DP8//ed73zXdOtPttS196EARpSOCC
XOI3Ch10Yh6xSBCsYddeq7/HEV7bzvHLXqDHMYdy2yp27Ek9hR79H2r4Oxyi
QT/DT/c+69/RrqfwlN/hDc/ICIIOPosyfQXb3kzKF86y5FD4ho+7k+TP+DV/
Kbv1v+FdvU3/yivlg94oB/XsMPVmOaqXyAO9Tr7ST3Hrm3F9glfJiGySH2SO
/OR+gsf4efgtfo18/kVW2P/wXh7h7XyEF/EZXsqXseU7mfJj+NbZmLMrdOn3
eM7/Y4BnOR/g++F/1U9w4/2wfoZW/QpPwt+DaZToS9h0r1rvxx7qbcf4Yc8L
3+Ibim2L2LCnkGtrwRSi9gWs2x8Bm9lMUw==
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1WWYllUUBdAZukO6GVKkQ7ETERMJsUUBRUBpRBRxVJQGaUkRuzDBVrBb
UAm7Fbs71378sWafc56P+733vXeGokGj+o4sLCgoWOtHspsfb8pFDKYHXSlB
SUpRmjKUpRzlqUBFKlGZKlRld+u9JRczhEPzHUnzL+X1jOc4qrGH+dtyCWfS
k35mv8t7uDRrZm72lbyBCQzgFLMSPKyeRXW669+RSzkra+or8pT6MPqr/5D3
chlj9HXYkmfJZ9Rfyxs5jxH66rygPp5T1SV5JM8md2V2PisbsoRt+pmyE1ez
i35P+a6cK6+SF8imLGNonlVWYiFP6y+XbVlJr7wv+aecL9fLYtmKqeqxsi6v
qmfIjnRX95LfyJu4SN2ciepz8ky8qD6B09SleFQ9hxrspX9PLuNsDs87N/tL
bsjzZU+Zm30rb+Z8TqQme5u/L5czjCOyZtL8O3kLkziJWuxj/oFcwXCOzBrU
pg51qUd9GtCQRjSmCU0pohnNaUFL9rXuh3JlzpKj8l1Z3/x7eWvOgpNpxX7m
H8lVeU8cnXM3+1vexxVZM+uY/SBv48LcRQaaleaxnDOt2V//sVzNuQzVV+YZ
9TF5/+p/5P1MY5y+Hq/lWfL96h/l7UxRt2By1pI1eCl3ktPVZdiYey3bME89
UTZiKdv1s2Rn1uTu6g+Qn8h5uavZiyxiOSNz9rIKi3g2+5ftWEXvnLf8Vz7A
9Ow3+zL7Sa7LvSN/cGrycu4aZ6jLskl9JW04UP+pXMOo3Bl9VZ5TH5t7kj9W
PCguka2ZoR4v6/N69kJv9c/yDi5Wt2RK1pS1WMwreVbZgdUM1A+S5VjA4/qp
cjdWMD93WzbO7y479LNlF67J5/QHyc+yn8zkZNmM0bnPshrP54xle/rkzslC
HlLPZIK6AVvzPrJv9S/yzuyF0frabM55M1hdnifUC2jLwfqdci1j6Jtno4/5
r/IuinMGtOMQ88/ltYylX9agPR3oSCc608Nnv5DX5Z7SP/8+32H+m7w7Z5N3
yRCzCjypXsgkdRPeUM+RXQv//z+oi/4/ev62DQ==
               "]]}, Annotation[#, "Charting`Private`Tag$464245#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV00VsFVEYhuEpFA/FHRKaIMXdCVq0SCAhOAvcgmyA4AsgWCGQ4K5Fi7PA
bYG7a6EUdrRYkADlOYv3fvKfM3Zn4odO7D0hJoqi5n52YGfOKCqI1TmiqFxs
FM3jW/F/6Ah84v9Zl8Z3wX15Oh7prsr1cEoeihO6KnQn3aWPwxq5NbJ1j3FN
Vx+ndcNQFZ/kvkjjF2KXdbvlQlgrt8FffiQy+Qhv+a54wM9AQdc+Rc7mn9h/
nW+AM3JFs0X8cD4XP4HvQH/Idek6OYHPpP3QVvdWTqAr5N5hv1yUzpC70Vja
hG4Ne+hu50zhC6NFOKb15el8uTttG54jPwpZfE3dKj6Gf0eT8JCvpE/mZ/Jx
/FQ+wlPHv0Eb4qzZCFRDltwf7/jFSLFuj1wE6+V2yIFnocdJ7MW+oNYUxQbz
9siJ9HB/eMTPwnPrbsqNcE4eidyua6L8k6+Oz/wApPNLUMx8ppwL+8O5aDFs
NEtELN6H54LH/Gy8sO6W3Bjn5VHI4ziT5F98DXzhB+I9vxTFzWfJuXHA/v20
ODaZVTBbEP7n8O7R0UjUfZZr0dXh+vgM2gOtdU/kynSZ3IvOkQvRaeHdpzHh
+dNNtA996Zy3w3uAlvIF6+Pp4nBMOlrOSyfLHelvuR5dL9fkv9JByAj/pX4l
n8yX4GfzeXDQOQ7QEths1jG8/+Zj5C/hv8AHvmd4R/i5eGXPHbkpLspjwj3j
mzwYH/hlSLXuoFwSW+RO4Znjtf6urhkuyWNRG4f0qbpS2Cp3DveHN/rDOKQv
jW26LsiHtPDN4wiOhnXmZbDdrCvyh29Zf0/XHJflcaiDY2Gfrix2yEkoEL4X
/f3wneGKPD58x/guD8FHfjmOW/c6Lor+A0IbnoI=
               "]], 
              LineBox[CompressedData["
1:eJwV1FdsSFEcx/Gr9WDFHqW0tEZCQoxW7T1iq/mGerNqCy/2SEjMhIQQYu/Y
e4/aD7ZaiVVtbWqLz3n49jf+5/b03HvSGhmZ6WMKRVGU5MfzklH0it6OjaKW
uBgTRaPREIf1+3Tx2Cj3QCm81h/BURzDfvOrtCrdZN4TpfFGd0fXCpfkMWiE
4/oDumrYLPdCmbBe7oOH/EzkWHdXbo3LciaKFo6i8fJvvjEK+CHI4Zegovl0
uQhOeP4gTcAWswSz+XxvvhA/gv/C1+dX8mXDnrQv2uoeybXpYnlWOBM/le9G
Y2gKXUsH0rf2use3CeeVs6xPogvDfnSsXIxOkLvQP+Fd0NVyP9pE/s4PRfvw
++S6dLm8lK/Ez+CLIo1fT0/a8xBNxFZr+iDGbKT8lS+Ht3w6svnZyPXM/XA+
XJHHIQWn9Id11bFN7ovyyNM/0LUL31gej1S80J8O90BfA9t16aiAfP2ZcD/0
Sdih6xe+Dd7pH4Yz4po8AU1xNtwlXTJ2yv3DmcPfG94PHvNz8N66R3IHXJcn
orgzT5T/8mn4wQ9DLr8MceYz5WI45/njtCZ2mSWaLeAH8LH8KP4b34BfxceF
d0D74wlfR7+EnxvuLD+N705jaSpdRwfRD/bJ5juG+yvfsD6ZLgp3nE6SSwSV
u9J/4T7TNWEv2kz+yWeEs8p5cj26Ql7OV+Zn8cXRjN9Az9vzBK2F3dYMRGGz
0XJBeCZ8m3BWPOXn4aNnHsudcFOejOb4JQ9HPr8CF6w7KdfGHnkQquCT/omu
M27JU9ACF/WndHWwVx6MeHzWv8QlXEYWnvkf9B8k15Wg
               "]], 
              LineBox[CompressedData["
1:eJwVzLkyg1EcxuG/pcy4AGOLZcZObailVpgJYhs1LbXCFbiCXAFBqOwUtgR1
Mi4gVWyxzHgUz5zz/r75TnJ5bWq1LiIyvDRFVI2W+ohKQ8Q0ZfctXvWSPUnB
XmecG/1Y62XHTtPKm37Lid7HrjZDG+/6Had6PzltlnY+9HvO9AH2tDk6+NQf
ONcH2dcyJKnpBS70IQ60eTr50otc6sPktQW6+NYfudJHONQW6eZHf+JaH+VI
W6KHBL++lfUURXuDif837RUq7ts0N0Zs2gnG3LPOtPPZ/3/4Tzaj
               "]]}, Annotation[#, "Charting`Private`Tag$464245#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1mW4FWUUhuFNp00qaWMgggGCYAEiqIhJd8ehRBoEQUBSRLokLMAEQUnp
7ka6u0MEvNeP53pjzZx99sx83+y8tZIqNEuWSCTypUgkKqVMJCakTiROpEok
quCy/Cv6ojImmp3UV8UV+Tf0w3L9Xeimz4FtuiqYpDslV8NV+Xcc0T2FcboX
0F+3Qr4b3eWcyJTG+fJqfrv5v/wr+E1+Mz5fN1k+zVfHNTmdc97R/S1Pl4/y
BTBeftGsB1+Uz8s35Hfw7/DD+QGOX0nvQVXdZ2aFaVe5Jc0lZ6ZV5QZ0jVyO
fiV3pDucf51/FbXk381fpV/Ibehbcj7aQm5K98vv09FyNed+S8/oaqCgvr38
rz49X4FfqJ8hH+OfxjdyMQzUrZIzoYecGzt11fGd7qxcE9flP3BcVxAT4ppg
kG61nBk95TzI4jOryWv5Xeb/8a9huvw2HjNvKR+I/9f8e/4cXwuFzDrI/+kz
8O/y9egiszJ0kNyezjQ/wRdCTXmieXHaU/6YFpfvp43kJnSnXIGOkLvSL52/
hs8S10/+3LwI/VTOy2flq/Pr4nnhh/D/OOcGLYkZ+tf0ffny/ON8K/5gXC/H
/cCf52vjhpzR/D3dYnmWfJJ/BpPkEhisWytnRa/437Fbd1MuhT/iWYtrpPtR
vsDXwU35T5zSPYvJupfwlW6dnA295QewR1cbU3QX5bq4Jf+FIVivz44++gex
V1cHU3WX5HpIYLbua9TFNLPLuvpIhjm6oaiH+miAhvjJcVfMGyA55uqGYYP+
Xnyhewj7dI3ws+6q3BApME83HBv196Gv7mHs1zXGL7prciOkxHzdad1z+FZ+
GSN0m+Qc6Cc/gmzuSw15PX/A/BZfGjPjeUGT2L9iLfGNkQq3Oed93RJ+gfkZ
/nl8F/cynqXYa+Ka8435XfxIx23mc6J/7Ftm3fhH+ex8Tb4h3SC/Rb+WO9GD
zkvQ1+XadJZ5SdpP/iTWh/wEbS03o4fkD+gY+VPaNPZY/rq+styEPkM76lLz
t/Mf8Ev5N2JdxP7nnLO0ML6PfSiehzg31gA/ynwLnyv2vdiXcK95LXkjf8g8
mVxG/lN+D81i7451zTdFGizUjcZWfW4MjL0Bh3VJmK67EeciLRbpxqA5WmCG
+U19EtJhsW4stunzYFCsSxzRtYz9S3dLbo70WKIbh+2x5vFlXEsc1bXCTF0C
LXQZsFR3Ti6CH2L9Y7xuh3w/BstP4j7fvba8iT9mnlx+Q/4r9uw4Rv5YPsy3
Np/FJ4v3hJwRd5h/KC/jl5mf51/Aj7G2zXrFHhTrJe4vv5t/lx8Z+7rjd9IH
UD3eL2ZFaXe5Fc0v56B15EZ0c+zJdKjcmR53fgpaVq5DZ5uXov3ltvGsyPlp
GzmJHpE/pGNj3429iCaPz9I/q+/E38bfyX/EL+eXO+4CXxRT4u9jgm6X/CCG
yE/hhK5N7E+6FGgdzyvu8rcqyiv4FeYX+WKYGuvcrHes4dgf+Gb8nngG+VH8
RMf/Qx9CjVhnZsXifR1/nxaQc9K6cmO6RS5Ph8ld6Ennp6Tl5Lp0jnlpOkBu
F/ct/nf6idycHpU/ouNivTp3Nk0Z10r/nL4zfwd/N1+JX8mvdNwl/kVMk1+P
vco8Sd7LTzLfzT+MofLTyGVeT97KnzJPJb8pz43PR1vdHDkV2sT9wCrdZbk4
fpLLYLJuj/wIhskFcVrXDnNjz4jvEfcAq+N3B/bGPobhukI4o2uPebo08dzE
98Oa+E2BDpivTxvXTH8P1sbvAHREJ3TGAvN0aG+eCevivYp9unwYEXsZzuq6
4G9denTQZcb6eFdiv+4xjIxnEud0XbFQlwEddVmwQXdFLoGfYz/EFN0B+XGM
inuG3K5tfXkbf948dfw+k+fFveIH8hX5Anxb/hhfkR8fe7LjF9GMqBLrw+x5
2iX2GZo1rgetLNenq+SydHB8L7rR+Vf5l/CL2Su6PnxZ/lG+Ob+Pn+q4g/wT
GB2fgTzmDeTt/AXzNPLb8ny5ErrpFsd6jb1AzoZNumvyy/hVLodpukPykxgj
F8ZFXXcs0d0ea0WXHZvj3Y/PsDSedXSN9wW2xHsePdATn6MXeqMPljn2zrhm
sadia7zncViXH2N1RXBJl9Z3Ka9bIFeONSG3k4/Hd+O/4bvF72nH/g99s6M6

               "]]}, Annotation[#, "Charting`Private`Tag$464245#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
               "]]}, Annotation[#, "Charting`Private`Tag$464245#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
               "]]}, 
             Annotation[#, "Charting`Private`Tag$464245#5"]& ]}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"Backward Integrate feedback solution\"", TraditionalForm],
          PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1c\"", "\"u1c\"", "\"x1c\"", "\"\[Theta]dot1c\"", 
           "\"xdot1c\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 5.024993653200595}, {1.6835964329282076`, 
          38.08771481146853}}], 
         LineBox[{{2.3129098620234356`, 38.08771481146853}, {3., 
          4.484978691123463}, {4., 11.225834351124615`}, {5., 
          3.8916048484669927`}, {6., 12.02673560528023}, {7., 
          3.51205157318102}, {8., 32.21570027270748}, {9., 
          3.1750275504544603`}, {9.623089512626287, 38.08771481146853}}], 
         LineBox[{{10.375080759206115`, 38.08771481146853}, {11., 
          2.9016929418084154`}, {11.424186750130533`, 38.08771481146853}}], 
         LineBox[{{12.5748123674714, 38.08771481146853}, {13., 
          2.7572587494058793`}, {13.306357365409376`, 38.08771481146853}}], 
         LineBox[{{14.693982642629337`, 38.08771481146853}, {15., 
          2.8137604467158415`}, {16., 2.6815364145754117`}, {
          16.302868291996777`, 38.08771481146853}}], 
         LineBox[{{17.697821300953056`, 38.08771481146853}, {18., 
          2.7970608448736716`}, {19., 2.6211592174515297`}, {
          19.364834355919452`, 38.08771481146853}}], 
         LineBox[{{20.63591518528316, 38.08771481146853}, {21., 
          2.7357420621459014`}, {22., 2.5659789283609618`}, {
          22.566533750937616`, 38.08771481146853}}], LineBox[CompressedData["
1:eJxTTMoPSmViYGDQAGIQHdqc0cCTb+7wKkDb1orb2YEBDCwcSo7JOoQ9ZYHy
LR1Mtki3bGaB8a0cqoW+nQ075gDlWztUvCmwetDDDOXbOMRq2dzYZWQA5ds6
LLSV/Py0kxHKt3MQn36s4IKlPpRv7/B5k+sGw/R/9hC+g4Nhf2iOSa8mRL7B
weH5uyuX91j8gso7OhitqrsmbKYClXd0uObzeLHU0W9QeSeHpRHTZXu3ykPl
nRy+l57axfbzM1Te2eEM17FAhVMSUHlnh4aL0VHt6z5C5V0c7m4s/PE+Thgq
7+KQVMT7SbvtPVTe1eHQyu/CfxL5oPKuDjvUucNtrd9A5d0cYlI5j7mzcUDl
3RwKWW8WuEe/hMq7O2jE8D7MMIeGV4O7w+XHHkJMF59B5T0c9JUUUzPl/kP4
DR4OJxyULNaoPYHKezqs/6lRcrjzB1Te08Fpvvw51aiHUHkvh0jjC8+bp3+C
yns5GBc4ry39dAcq7+2QlGCxS7b3FVTe22HFuTD9TrXrUHkfh9XenjNOaUDN
a/BxaNv0w6409yJU3tehtvb/nT/Wl6Dyvg4Gp+3vF+49DpX3c6jmKjy+6cJ2
qLyfg6L8gwsP1f7aQeT9HTidFfVfLGawAwCtAbQs
          "]]}}, {{}, {}}},
      AspectRatio->NCache[
        Rational[1, 3], 0.3333333333333333],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->400,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 62}, {0, 38.08771481146853}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.864135238134066*^9, 3.8641352749121633`*^9}, {
   3.864141785675068*^9, 3.864141806351376*^9}, {3.8641418573518705`*^9, 
   3.864141877509347*^9}, {3.8641430855573835`*^9, 3.864143092071275*^9}, {
   3.8642366967041645`*^9, 3.8642367176523905`*^9}, {3.864399155322939*^9, 
   3.864399158330961*^9}, {3.86440857096957*^9, 3.864408661724055*^9}, {
   3.8648341044365063`*^9, 3.8648342718877172`*^9}, 3.8648343438895884`*^9, 
   3.864836382489744*^9, {3.86483642449925*^9, 3.864836438654703*^9}},
 CellLabel->
  "Out[1154]=",ExpressionUUID->"c1b3ee17-715c-4dbc-aa61-029e3bf5e59e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.7632024466059455`", ",", "4.909828194358805`", ",", "4.829469291927946`",
    ",", "4.829469291927946`"}], "}"}]], "Output",
 CellChangeTimes->{{3.864135238134066*^9, 3.8641352749121633`*^9}, {
   3.864141785675068*^9, 3.864141806351376*^9}, {3.8641418573518705`*^9, 
   3.864141877509347*^9}, {3.8641430855573835`*^9, 3.864143092071275*^9}, {
   3.8642366967041645`*^9, 3.8642367176523905`*^9}, {3.864399155322939*^9, 
   3.864399158330961*^9}, {3.86440857096957*^9, 3.864408661724055*^9}, {
   3.8648341044365063`*^9, 3.8648342718877172`*^9}, 3.8648343438895884`*^9, 
   3.864836382489744*^9, {3.86483642449925*^9, 3.864836438729679*^9}},
 CellLabel->
  "Out[1155]=",ExpressionUUID->"1111cdea-9364-411a-9d7a-48c656ad0aaf"]
}, Open  ]],

Cell["\<\
Observations:
The choice of n is critical and would determine the speed of the algorithm. \
Smaller n has higher speed but may not converge and hence would require a lot \
of re initializations of the initial guess, while a larger n would not \
require a lot of re initializations but would take longer to converge. A way \
to choose the best value of n for a specific system would be extremely useful.
Furthermore we have been outputting the distance of the initial guess \
propogated to the other boundary and the desired value. We are doing this to \
design a stopping criterion. 
Another useful quantity to observe would be plot of this distance as the Find \
root algorithm progresses. (We want to see if it is monotonic)
\
\>", "Text",
 CellChangeTimes->{{3.863704362873541*^9, 3.8637045081791234`*^9}, {
  3.8638919339126487`*^9, 3.86389212755976*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"4eb81403-a99c-42b7-b4a4-36ec4bd675dd"]
},
WindowSize->{1428., 735.75},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
Magnification:>0.9 Inherited,
FrontEndVersion->"13.0 for Microsoft Windows (64-bit) (February 4, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"f891f112-c914-4bf5-b27c-d7c0d8607b34"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 60917, 1511, 1740, "Code",ExpressionUUID->"b098c715-9c30-421d-bfce-eae26b7e4e91"],
Cell[61478, 1533, 354, 7, 66, "Text",ExpressionUUID->"9be2365f-c4bb-4396-8de9-0c9df9f460d6"],
Cell[CellGroupData[{
Cell[61857, 1544, 8155, 225, 249, "Input",ExpressionUUID->"53d64360-9130-4d93-aa11-669324ba78f7"],
Cell[70015, 1771, 41984, 777, 185, "Output",ExpressionUUID->"0a2e301a-2c13-46ae-bc1e-ab7827d66d7a"],
Cell[112002, 2550, 49618, 903, 186, "Output",ExpressionUUID->"d1422a96-2a32-4a20-91b2-ea51205fa35c"],
Cell[161623, 3455, 48351, 886, 185, "Output",ExpressionUUID->"03f4b302-9cb5-4d8e-8007-4a77d652049e"]
}, Open  ]],
Cell[209989, 4344, 258, 5, 45, "Text",ExpressionUUID->"b6d5a503-f5ca-471f-9280-ef8cf6caad0d"],
Cell[210250, 4351, 34840, 856, 950, "Input",ExpressionUUID->"af3ea33d-8e3a-4566-b4c0-08bbf9c4fe8b"],
Cell[CellGroupData[{
Cell[245115, 5211, 11813, 333, 506, "Input",ExpressionUUID->"3024c605-13d1-4af1-8ddb-6b0488dd66d7"],
Cell[256931, 5546, 1273, 21, 28, "Output",ExpressionUUID->"aaf55a68-5511-4526-96e7-eeb42df34e4e"],
Cell[258207, 5569, 250573, 4404, 361, "Output",ExpressionUUID->"fb1f62a9-b535-4bad-a070-25c26fbbdc57"],
Cell[508783, 9975, 1290, 21, 28, "Output",ExpressionUUID->"172b5b6d-a357-43b2-a7eb-032ef4951a7a"],
Cell[510076, 9998, 1138, 16, 30, "Output",ExpressionUUID->"737c6728-c992-4934-b376-ea23f7889806"]
}, Open  ]],
Cell[511229, 10017, 179, 3, 25, "Input",ExpressionUUID->"e3b56381-3091-428c-953b-8049828b4235"],
Cell[511411, 10022, 203, 3, 45, "Text",ExpressionUUID->"78f72274-21f2-4a3e-a828-5906a5fe2643"],
Cell[CellGroupData[{
Cell[511639, 10029, 10133, 274, 301, "Input",ExpressionUUID->"b5dee5c3-2101-40ff-b338-91333f517d06"],
Cell[521775, 10305, 468, 11, 26, "Message",ExpressionUUID->"76a81809-20f4-4ac1-8b9c-1a5bd61e40b8"],
Cell[522246, 10318, 264846, 4637, 361, "Output",ExpressionUUID->"c1b3ee17-715c-4dbc-aa61-029e3bf5e59e"],
Cell[787095, 14957, 769, 13, 28, "Output",ExpressionUUID->"1111cdea-9364-411a-9d7a-48c656ad0aaf"]
}, Open  ]],
Cell[787879, 14973, 965, 17, 149, "Text",ExpressionUUID->"4eb81403-a99c-42b7-b4a4-36ec4bd675dd"]
}
]
*)

