(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    791378,      15560]
NotebookOptionsPosition[    788865,      15517]
NotebookOutlinePosition[    789301,      15534]
CellTagsIndexPosition[    789258,      15531]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Remove", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
  RowBox[{"(*", 
   RowBox[{"ICs", " ", "-", " ", 
    RowBox[{"Initial", " ", "Conditions"}]}], " ", "*)"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Error", " ", "while", " ", "cosntraining", " ", "u"}], " ", 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ffCartPendulum", "[", 
    RowBox[{
    "ICs_", ",", "n_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "A_", ",", 
     "order_", ",", "maxIter_", ",", "InitGuess_"}], "]"}], ":=", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x", ",", "dist", ",", "xdot", ",", "f", ",", "\[Theta]", ",", 
       "\[Theta]dot", ",", "\[Lambda]1", ",", "\[Lambda]2", ",", "\[Lambda]3",
        ",", "\[Lambda]4", ",", "\[CapitalDelta]t", ",", "bcs", ",", "eqns", 
       ",", "sv", ",", "froot", ",", "xff", ",", "xdotff", ",", "xff0", ",", 
       "xdotff0", ",", "\[Theta]ff0", ",", "\[Theta]dotff0", ",", "uff0", ",",
        "\[Theta]ff", ",", "\[Theta]dotff", ",", "uff", ",", "\[Lambda]1ff0", 
       ",", "\[Lambda]2ff0", ",", "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", 
       "i", ",", "uMax", ",", "uMin", ",", "expr", ",", 
       RowBox[{"xGuess", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          SubscriptBox["xGuess", "i"], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}]}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"\[CapitalDelta]t", "=", 
       RowBox[{"\[Tau]", "/", "n"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"{", 
         RowBox[{
         "x_", ",", "xdot_", ",", "\[Theta]_", ",", "\[Theta]dot_", ",", 
          "\[Lambda]1_", ",", "\[Lambda]2_", ",", "\[Lambda]3_", ",", 
          "\[Lambda]4_"}], "}"}], "]"}], ":=", 
       RowBox[{"{", "\n", "\t", 
        RowBox[{"xdot", ",", "\n", "\t", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}],
           " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
               ")"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", "\[Lambda]2"}], 
              ")"}]}], "+", 
            RowBox[{"A", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", "\n", 
         "\t", "\[Theta]dot", ",", "\n", "\t", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}],
           " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{"1", "/", 
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"A", " ", 
                   RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
                 ")"}]}], ")"}]}], 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[Lambda]2"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
              ")"}]}], "-", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "-", 
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", "\n", 
         "\t", "0", ",", "\n", "\t", 
         RowBox[{"-", "\[Lambda]1"}], ",", "\n", "\t", 
         RowBox[{
          RowBox[{"2", "/", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"A", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A", "-", "2"}],
              ")"}], "^", "3"}]}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"4", " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"A", " ", 
                   RowBox[{"\[Lambda]4", "^", "2"}], " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
                  RowBox[{"4", " ", "A", " ", 
                   RowBox[{"\[Lambda]2", "^", "2"}]}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"A", "+", "2"}], ")"}], " ", 
                   RowBox[{"\[Lambda]4", "^", "2"}]}]}], ")"}]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"A", " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "-", 
                  RowBox[{"3", " ", "A"}], "+", "2"}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"A", " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A", "-", 
                  "2"}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"A", " ", 
                   RowBox[{"\[Theta]dot", "^", "2"}], " ", "\[Lambda]2"}], 
                  "-", "\[Lambda]4"}], ")"}]}]}], ")"}]}], "+", 
            RowBox[{"A", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"A", "-", "2"}], ")"}], " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A"}], ")"}], 
             " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"A", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A", "-", 
               "2"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{
                RowBox[{"\[Theta]dot", "^", "2"}], " ", "\[Lambda]4"}]}], 
              ")"}]}], "-", 
            RowBox[{"4", " ", "\[Lambda]2", " ", "\[Lambda]4", " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"3", " ", "A", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
               RowBox[{"3", " ", "A"}], "+", "2"}], ")"}]}]}], ")"}]}], ",", 
         "\n", "\t", 
         RowBox[{
          RowBox[{
           RowBox[{"4", " ", "/", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"A", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A", "-", "2"}],
              ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{"A", " ", "\[Theta]dot", " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}]}], ")"}]}], 
          "-", "\[Lambda]3"}]}], "\n", "}"}]}], ";", 
      StyleBox["\[IndentingNewLine]",
       FontWeight->"Plain"], 
      RowBox[{
       StyleBox["xGuess",
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       StyleBox["=",
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       RowBox[{
        StyleBox["Table",
         FontWeight->"Plain"], 
        StyleBox["[",
         FontWeight->"Plain"], 
        RowBox[{
         RowBox[{
          StyleBox["If",
           FontWeight->"Plain"], 
          StyleBox["[",
           FontWeight->"Plain"], 
          RowBox[{
           StyleBox[
            RowBox[{"i", " ", "!=", " ", 
             RowBox[{"-", "1"}]}],
            FontWeight->"Plain"], 
           StyleBox[",",
            FontWeight->"Plain"], 
           RowBox[{
            StyleBox[
             SubscriptBox["xGuess", 
              RowBox[{"i", "+", "1"}]],
             FontWeight->"Plain"], 
            StyleBox[" ",
             FontWeight->"Plain"], 
            StyleBox["=",
             FontWeight->"Plain"], 
            StyleBox[" ",
             FontWeight->"Plain"], 
            RowBox[{
             SubscriptBox[
              StyleBox["xGuess",
               FontWeight->"Plain"], "i"], 
             StyleBox[" ",
              FontWeight->"Plain"], 
             StyleBox["+",
              FontWeight->"Plain"], 
             StyleBox[
              RowBox[{"\[CapitalDelta]t", "*", 
               RowBox[{"f", "[", 
                SubscriptBox["xGuess", "i"], "]"}]}],
              FontWeight->"Plain"]}]}], 
           StyleBox[",",
            FontWeight->"Plain"], 
           RowBox[{
            SubscriptBox[
             StyleBox["xGuess",
              FontWeight->"Plain"], "0"], " ", "=", " ", 
            RowBox[{"{", 
             StyleBox[
              RowBox[{
               RowBox[{"ICs", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "3", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "4", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "3", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "4", "]"}], "]"}]}],
              FontWeight->"Plain"], 
             StyleBox["}",
              FontWeight->"Plain"]}]}]}], 
          StyleBox["]",
           FontWeight->"Plain"]}], 
         StyleBox[",",
          FontWeight->"Plain"], 
         StyleBox[
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"-", "1"}], ",", 
            RowBox[{"n", "-", "1"}]}], "}"}],
          FontWeight->"Plain"]}], 
        StyleBox["]",
         FontWeight->"Plain"]}]}], 
      StyleBox[";",
       FontWeight->"Plain"], "\[IndentingNewLine]", 
      RowBox[{"bcs", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"x", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"xdot", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"x", ",", " ", "n"}], "]"}], "==", 
          RowBox[{"Subscript", "[", 
           RowBox[{"xdot", ",", " ", "n"}], "]"}], "==", "0"}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]dot", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]dot", ",", " ", "n"}], "]"}], "==", "0"}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]", ",", " ", "n"}], "]"}], "==", "\[Pi]"}]}], 
        "}"}]}], ";", "\n", 
      RowBox[{"eqns", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Join", "[", 
         RowBox[{"bcs", ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Thread", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], "==", 
              "\n", 
              RowBox[{
               RowBox[{
                RowBox[{"1", "/", "2"}], " ", "\[CapitalDelta]t", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"f", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}], "]"}], "+", 
                  "\n", 
                  RowBox[{"f", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], 
                   "]"}]}], ")"}]}], "+", "\n", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Subscript", "[", 
                  RowBox[{"x", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"xdot", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]dot", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]1", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]2", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]3", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]4", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}]}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
        "]"}]}], ";", "\n", 
      RowBox[{"sv", " ", "=", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", "\n", 
             "\t\t\t\t\t", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "7", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "8", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", "1"}], 
        "]"}]}], ";", " ", "\n", 
      RowBox[{"froot", "=", 
       RowBox[{"FindRoot", "[", 
        RowBox[{"eqns", ",", "sv", ",", 
         RowBox[{"MaxIterations", "->", "maxIter"}]}], "]"}]}], ";", "\n", 
      RowBox[{"xff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"xdotff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Theta]ff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Theta]dotff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]1ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]2ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]3ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]4ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"expr", " ", "=", " ", 
       RowBox[{
        RowBox[{"1", "/", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"A", " ", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"Subscript", "[", 
               RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}], "^", 
             "2"}]}]}], ")"}]}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], 
           RowBox[{"Cos", "[", 
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}]}], "-", 
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}]}], ")"}]}]}], ";", 
      "\n", "\n", 
      RowBox[{"uMax", " ", "=", " ", "2"}], ";", "\n", 
      RowBox[{"uMin", " ", "=", " ", 
       RowBox[{"-", "2"}]}], ";", "\n", 
      RowBox[{"uff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Piecewise", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"expr", ",", 
                 RowBox[{
                 "uMin", " ", "<=", " ", "expr", " ", "<=", " ", "uMax"}]}], 
                "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"uMin", ",", 
                 RowBox[{"expr", " ", "<", "uMin"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"uMax", ",", 
                 RowBox[{"expr", " ", ">", " ", "uMax"}]}], "}"}]}], "}"}], 
             "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      "\n", 
      RowBox[{
       RowBox[{"xff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xdotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "\[Pi]"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"uff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"uff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", "\n", 
      RowBox[{"{", 
       RowBox[{
       "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
        "uff", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
        "\[Lambda]3ff0", ",", "\[Lambda]4ff0"}], "}"}]}]}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"testSwingUp", "[", 
    RowBox[{
    "ICs_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "uff0_", ",", "A_"}], "]"}],
    ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eq", ",", "init", ",", "x", ",", "xdot", ",", "\[Theta]", ",", 
       "\[Theta]dot", ",", "xs", ",", "xdots", ",", "\[Theta]s", ",", 
       "\[Theta]dots", ",", "t", ",", "J"}], "}"}], ",", "\n", 
     RowBox[{
      RowBox[{"eq", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"x", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"xdot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"xdot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"uff0", "[", "t", "]"}], "+", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
             RowBox[{"A", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]dot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"uff0", "[", "t", "]"}], "+", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
            ")"}]}]}]}], "}"}]}], ";", "\n", 
      RowBox[{"init", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"xdot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]dot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
        "}"}], "=", 
       RowBox[{"NDSolveValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"eq", ",", "init"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
         RowBox[{"Method", "->", 
          RowBox[{"{", 
           RowBox[{"\"\<DiscontinuityProcessing\>\"", "->", "None"}], 
           "}"}]}]}], "]"}]}], ";", "\n", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"{", 
       RowBox[{
       "xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots", ",", "uff0",
         ",", "J"}], "}"}]}]}], "]"}]}], "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{"CalculateSMatrix", "[", 
   RowBox[{
   "x1a_", ",", "xdot1a_", ",", "\[Theta]1a_", ",", "\[Theta]dot1a_", ",", 
    "u1a_", ",", "\[Tau]_", ",", "A_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x", ",", "L", ",", "RHS", ",", "xdot", ",", "\[Theta]", ",", 
      "\[Theta]dot", ",", "u", ",", "K", ",", "S", ",", "soltn", ",", "Af", 
      ",", "Bf", ",", "Q", ",", "fx", ",", "xState", ",", "R", ",", "Mf", ",",
       "x2dot", ",", "\[Theta]2dot", ",", "S0", ",", "sol2", ",", "t"}], 
     "}"}], ",", "\n", "\n", 
    RowBox[{
     RowBox[{"xState", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
       "}"}]}], ";", "\n", 
     RowBox[{"x2dot", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{"u", "+", 
         RowBox[{"A", " ", 
          RowBox[{"\[Theta]dot", "^", "2"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"A", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ";", "\n", 
     RowBox[{"\[Theta]2dot", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{"u", "+", 
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ")"}]}]}], 
     ";", "\n", 
     RowBox[{"fx", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
       "xdot", ",", "x2dot", ",", "\[Theta]dot", ",", "\[Theta]2dot"}], 
       "}"}]}], ";", "\n", 
     RowBox[{"L", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", "2"}], "*", 
       RowBox[{"u", "^", "2"}]}]}], ";", "\n", 
     RowBox[{"Af", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{"fx", ",", "xState"}], "]"}]}], ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{"For", " ", "nD", " ", "stuff", " ", "use", " ", "Grad"}], 
      "*)"}], "\n", 
     RowBox[{"Bf", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"fx", ",", "u"}], "]"}]}], " ", ";", 
     RowBox[{"(*", 
      RowBox[{"For", " ", "1", "D", " ", "stuff", " ", "use", " ", "D"}], 
      "*)"}], "\n", 
     RowBox[{"Q", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{
        RowBox[{"Grad", "[", 
         RowBox[{"L", ",", "xState"}], "]"}], ",", "xState"}], "]"}]}], ";", 
     " ", 
     RowBox[{"(*", " ", 
      RowBox[{"Fix", " ", "this"}], " ", "*)"}], "\n", 
     RowBox[{"Q", " ", "=", " ", 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"1", "0", "0", "0"},
         {"0", "1", "0", "0"},
         {"0", "0", "1", "0"},
         {"0", "0", "0", "1"}
        },
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}}], "\[NoBreak]", ")"}]}], ";", "\n", 
     RowBox[{"Mf", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{"L", ",", "u"}], "]"}], ",", "xState"}], "]"}]}], ";", "\n", 
     RowBox[{"R", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"L", ",", 
        RowBox[{"{", 
         RowBox[{"u", ",", "2"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"S0", " ", "=", " ", 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]]}], ";", "\n", 
     RowBox[{
      RowBox[{"RHS", "[", "t_", "]"}], " ", ":=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"IdentityMatrix", "[", "4", "]"}], " ", "+", " ", 
         RowBox[{
          RowBox[{"Af", "\[Transpose]"}], ".", 
          RowBox[{"S", "[", "t", "]"}]}], " ", "+", " ", 
         RowBox[{
          RowBox[{"S", "[", "t", "]"}], ".", "Af"}], " ", "-", " ", 
         RowBox[{"KroneckerProduct", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"S", "[", "t", "]"}], ".", "Bf"}], ",", 
           RowBox[{
            RowBox[{"Bf", "\[Transpose]"}], ".", 
            RowBox[{"S", "[", "t", "]"}]}]}], "]"}]}], ")"}], " ", "/.", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "->", " ", 
          RowBox[{"x1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"xdot", " ", "->", " ", 
          RowBox[{"xdot1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"\[Theta]", " ", "->", 
          RowBox[{"\[Theta]1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"\[Theta]dot", " ", "->", " ", 
          RowBox[{"\[Theta]dot1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"u", " ", "->", " ", 
          RowBox[{"u1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}]}], "}"}]}]}], ";", 
     "\n", 
     RowBox[{"sol2", " ", "=", " ", 
      RowBox[{"S", " ", "/.", " ", 
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"S", "'"}], "[", "t", "]"}], "==", " ", 
            RowBox[{"RHS", "[", "t", "]"}]}], ",", 
           RowBox[{
            RowBox[{"S", "[", "0", "]"}], "==", "S0"}]}], "}"}], ",", "S", 
         ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], " ", "}"}]}], "]"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"S", " ", "=", " ", 
      RowBox[{"sol2", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}]}], "\n", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CalculateGains", "[", 
   RowBox[{
   "x1a_", ",", "xdot1a_", ",", "\[Theta]1a_", ",", "\[Theta]dot1a_", ",", 
    "u1a_", ",", "time_", ",", "A_", ",", "\[Tau]_", ",", "S_"}], "]"}], ":=",
   " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x", ",", "L", ",", "RHS", ",", "xdot", ",", "\[Theta]", ",", 
      "\[Theta]dot", ",", "u", ",", "K", ",", "Af", ",", "Bf", ",", "Q", ",", 
      "fx", ",", "xState", ",", "R", ",", "Mf", ",", "x2dot", ",", 
      "\[Theta]2dot", ",", "S0", ",", "sol2", ",", "t"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"xState", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
       "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"x2dot", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{"u", "+", 
         RowBox[{"A", " ", 
          RowBox[{"\[Theta]dot", "^", "2"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"A", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Theta]2dot", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{"u", "+", 
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ")"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"fx", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
       "xdot", ",", "x2dot", ",", "\[Theta]dot", ",", "\[Theta]2dot"}], 
       "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Bf", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"fx", ",", "u"}], "]"}]}], " ", ";", 
     RowBox[{"(*", 
      RowBox[{"For", " ", "1", "D", " ", "stuff", " ", "use", " ", "D"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"K", " ", "=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Bf", "\[Transpose]"}], ".", 
         RowBox[{"S", "[", 
          RowBox[{"\[Tau]", " ", "-", " ", "time"}], "]"}]}], ")"}], "/.", 
       " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "->", " ", 
          RowBox[{"x1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"xdot", " ", "->", " ", 
          RowBox[{"xdot1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"\[Theta]", " ", "->", 
          RowBox[{"\[Theta]1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"\[Theta]dot", " ", "->", " ", 
          RowBox[{"\[Theta]dot1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"u", " ", "->", " ", 
          RowBox[{"u1a", "[", "time", "]"}]}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", "K"}]}], "\n", "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"testWithFB", "[", 
    RowBox[{
    "ICs_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "xff0_", ",", "xdotff0_", 
     ",", "\[Theta]ff0_", ",", "\[Theta]dotff0_", ",", "uff0_", ",", "A_"}], 
    "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eq", ",", "init", ",", "\[Theta]", ",", "\[Theta]dot", ",", 
       "\[Theta]ff", ",", "\[Theta]dotff", ",", "x", ",", "xdot", ",", "xff", 
       ",", "xdotff", ",", "uff", ",", "t", ",", "\[Kappa]1", ",", 
       "\[Kappa]2", ",", "\[Kappa]3", ",", "\[Kappa]4", ",", "ufb", ",", "u", 
       ",", "\[Theta]s", ",", "\[Theta]dots", ",", "xs", ",", "xdots", ",", 
       "us", ",", "J", ",", "S", ",", "K"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Kappa]1", "=", 
       RowBox[{"\[Kappa]2", "=", "3"}]}], ";", "  ", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"lqr", " ", "for", " ", "q"}], "=", 
        RowBox[{"r", " ", "for", " ", "balancing", " ", "pendulum"}]}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"\[Kappa]3", " ", "=", " ", 
       RowBox[{"-", "0.1"}]}], ";", 
      RowBox[{"\[Kappa]4", " ", "=", " ", 
       RowBox[{"-", "0.65"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"xff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xdotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "\[Pi]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"uff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"uff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"S", " ", "=", " ", 
       RowBox[{"CalculateSMatrix", "[", 
        RowBox[{
        "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
         "uff", ",", "\[Tau]", ",", "A"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"K", "[", "t_", "]"}], " ", ":=", " ", 
       RowBox[{"CalculateGains", "[", 
        RowBox[{
        "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
         "uff", ",", "t", ",", "A", ",", "\[Tau]", ",", "S"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ufb", "[", "t_", "]"}], " ", ":=", " ", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"K", "[", "t", "]"}], ".", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"xff", "[", "t", "]"}], "-", 
                RowBox[{"x", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"xdotff", "[", "t", "]"}], "-", 
                RowBox[{"xdot", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]dot", "[", "t", "]"}]}]}], "}"}]}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         RowBox[{
          RowBox[{"\[Kappa]1", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]3", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"xff", "[", "t", "]"}], "-", 
             RowBox[{"x", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"xdotff", "[", "t", "]"}], "-", 
             RowBox[{"xdot", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"u", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{"uff", "[", "t", "]"}], "+", 
        RowBox[{"ufb", "[", "t", "]"}]}]}], ";", "\n", "\n", 
      RowBox[{"eq", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"x", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"xdot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"xdot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"u", "[", "t", "]"}], "+", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
             RowBox[{"A", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]dot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"u", "[", "t", "]"}], "+", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
            ")"}]}]}]}], "}"}]}], ";", "\n", "\n", 
      RowBox[{"init", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"xdot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]dot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}], ";", "\n", "\n", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
        "}"}], "=", 
       RowBox[{"NDSolveValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"eq", ",", "init"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
         RowBox[{"Method", "->", 
          RowBox[{"{", 
           RowBox[{"\"\<DiscontinuityProcessing\>\"", "->", "None"}], 
           "}"}]}]}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"us", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{"uff", "[", "t", "]"}], "+", 
        RowBox[{"Piecewise", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"K", "[", "t", "]"}], ".", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"xff", "[", "t", "]"}], "-", 
                 RowBox[{"xs", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"xdotff", "[", "t", "]"}], "-", 
                 RowBox[{"xdots", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                 RowBox[{"\[Theta]s", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                 RowBox[{"\[Theta]dots", "[", "t", "]"}]}]}], "}"}]}], ",", 
             RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
          RowBox[{
           RowBox[{"\[Kappa]1", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]s", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]dots", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]3", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"xff", "[", "t", "]"}], "-", 
              RowBox[{"xs", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]4", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"xdotff", "[", "t", "]"}], "-", 
              RowBox[{"xdots", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"us", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"{", 
       RowBox[{
       "xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots", ",", "us", 
        ",", "J"}], "}"}]}]}], "]"}]}], "\n"}], "\n"}], "Code",
 CellChangeTimes->{{3.862753343189165*^9, 3.862753411389415*^9}, {
   3.8627553611496043`*^9, 3.8627553647834463`*^9}, {3.862755542386807*^9, 
   3.862755582254092*^9}, {3.862756179429644*^9, 3.8627562078485813`*^9}, 
   3.8627563320549693`*^9, {3.8627564690202875`*^9, 3.8627565488258357`*^9}, {
   3.8627568793814173`*^9, 3.8627568873778677`*^9}, 3.8627585165043135`*^9, {
   3.8627585965107956`*^9, 3.862758689290209*^9}, {3.862758834699833*^9, 
   3.8627588555911727`*^9}, {3.8627590963373947`*^9, 
   3.8627590998392787`*^9}, {3.8627594410134716`*^9, 
   3.8627594626865597`*^9}, {3.862759635094576*^9, 3.8627596377257366`*^9}, {
   3.862759669455618*^9, 3.8627597448635693`*^9}, 3.862759795914287*^9, {
   3.8627603319473376`*^9, 3.862760490473783*^9}, {3.8627605307139487`*^9, 
   3.862760536806006*^9}, {3.8627610047197795`*^9, 3.8627610478400292`*^9}, {
   3.8627611285982723`*^9, 3.862761147921111*^9}, {3.8631982964294224`*^9, 
   3.8631982970332265`*^9}, 3.8631983363504767`*^9, {3.863208693665881*^9, 
   3.8632086943846474`*^9}, 3.863210007245922*^9, 3.863271804426487*^9, {
   3.8632718412836447`*^9, 3.8632718583741503`*^9}, {3.8632719591337743`*^9, 
   3.863271959351703*^9}, {3.863272049174841*^9, 3.863272070205083*^9}, {
   3.863272113471178*^9, 3.863272123024109*^9}, 3.8632747752128673`*^9, {
   3.863274857845314*^9, 3.863274901443305*^9}, 3.863274985905165*^9, {
   3.86327502591031*^9, 3.8632751590365314`*^9}, {3.8632751952308993`*^9, 
   3.863275233662552*^9}, {3.8632753992893295`*^9, 3.863275415841012*^9}, 
   3.8632757933676972`*^9, 3.863276112914017*^9, {3.8632763683199444`*^9, 
   3.8632763983313017`*^9}, {3.8632764721665745`*^9, 3.863276525061578*^9}, {
   3.863278235705888*^9, 3.8632782777863655`*^9}, {3.863278324944213*^9, 
   3.8632783286160316`*^9}, {3.863552728717914*^9, 3.8635527298355513`*^9}, {
   3.863613419658352*^9, 3.863613423534114*^9}, {3.8636150904008484`*^9, 
   3.86361513154671*^9}, {3.8636152078133564`*^9, 3.8636152525520706`*^9}, {
   3.8636152893383236`*^9, 3.863615479516596*^9}, 3.8636157247782784`*^9, {
   3.863615879717803*^9, 3.8636159617646036`*^9}, {3.8636160220243616`*^9, 
   3.8636160299278383`*^9}, {3.863616069486206*^9, 3.86361607601912*^9}, {
   3.863699007217822*^9, 3.8636991515617003`*^9}, {3.8636996033223495`*^9, 
   3.8636996129842625`*^9}, {3.8636997844214835`*^9, 3.863699805489752*^9}, {
   3.863699907217247*^9, 3.863699944316393*^9}, {3.863700788168758*^9, 
   3.8637008845809517`*^9}, {3.863702046275758*^9, 3.8637020830100203`*^9}, {
   3.863702595245346*^9, 3.863702645292355*^9}, {3.863884194660141*^9, 
   3.8638842031804175`*^9}, {3.8638909914788537`*^9, 3.863891009810995*^9}, {
   3.863891113237941*^9, 3.8638911537729845`*^9}, {3.863891279619763*^9, 
   3.8638912855948534`*^9}, {3.863891344230113*^9, 3.863891351574766*^9}, {
   3.8638925953132634`*^9, 3.8638925989880886`*^9}, 3.8641412354391413`*^9, {
   3.864141550931038*^9, 3.8641416655529428`*^9}, {3.8642361939817247`*^9, 
   3.864236202546955*^9}, {3.864236595072028*^9, 3.8642366322340117`*^9}, 
   3.864236674617306*^9, {3.8643997929515553`*^9, 3.864399794341104*^9}},
 FontWeight->"Plain",
 CellLabel->
  "In[2116]:=",ExpressionUUID->"b098c715-9c30-421d-bfce-eae26b7e4e91"],

Cell["\<\
Check the performance of the new initial guess mechanism for the case where n \
= 40 and greater was required.
We see that n = 6 is only required here which is excellent!\
\>", "Text",
 CellChangeTimes->{{3.863702780704089*^9, 3.8637028585982*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"9be2365f-c4bb-4396-8de9-0c9df9f460d6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  StyleBox[
   RowBox[{"n", "=", "6"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Tau]", "=", "2.5"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Tau]1", "=", 
    RowBox[{"\[Tau]", "*", "1.25"}]}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"A", "=", "0.2"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"order", " ", "=", " ", "4"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"maxIter", " ", "=", " ", "100"}],
   FontWeight->"Plain"], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.048555026816794494`"}], ",", 
      RowBox[{"-", "1.560065966757075`"}], ",", "0.7613152376955525`", ",", 
      "1.9382391342292873`"}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"InitGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}]}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
       "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
       "\[Lambda]3ff0", ",", "\[Lambda]4ff0"}], "}"}], "=", 
     RowBox[{"ffCartPendulum", "[", 
      RowBox[{
      "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", "order", 
       ",", "maxIter", ",", "InitGuess"}], "]"}]}], ";"}], " "}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1b", ",", "xdot1b", ",", "\[Theta]1b", ",", "\[Theta]dot1b", ",", 
       "u1b", ",", "J1"}], "}"}], "=", 
     RowBox[{"testSwingUp", "[", 
      RowBox[{"ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "u1a", ",", "A"}], 
      "]"}]}], ";"}], " "}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x1c", ",", "xdot1c", ",", "\[Theta]1c", ",", "\[Theta]dot1c", ",", 
      "u1c", ",", "J"}], "}"}], "=", 
    RowBox[{"testWithFB", "[", 
     RowBox[{
     "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
      "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A"}], "]"}]}], 
   ";", 
   RowBox[{"p1a", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1a", "[", "t", "]"}], ",", 
        RowBox[{"u1a", "[", "t", "]"}], ",", 
        RowBox[{"x1a", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1a", "[", "t", "]"}], ",", 
        RowBox[{"xdot1a", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1a\>\"", ",", "\"\<u1a\>\"", ",", "\"\<x1a\>\"", ",", 
         "\"\<\[Theta]dot1a\>\"", ",", "\"\<xdot1a\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Feedforward solution\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}]}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{"p1b", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Theta]1b", "[", "t", "]"}], ",", 
       RowBox[{"u1a", "[", "t", "]"}], ",", 
       RowBox[{"x1b", "[", "t", "]"}], ",", 
       RowBox[{"\[Theta]dot1b", "[", "t", "]"}], ",", 
       RowBox[{"xdot1b", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
     RowBox[{"Filling", "->", 
      RowBox[{"{", 
       RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Theta]1b\>\"", ",", "\"\<u1b\>\"", ",", "\"\<x1b\>\"", ",", 
        "\"\<\[Theta]dot1b\>\"", ",", "\"\<xdot1b\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<Test on dynamics\>\""}], ",", 
     RowBox[{"AspectRatio", "->", 
      RowBox[{"1", "/", "3"}]}], ",", 
     RowBox[{"ImageSize", "->", "400"}], ",", 
     RowBox[{"GridLines", "->", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], "]"}]}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"p1c", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1c", "[", "t", "]"}], ",", 
        RowBox[{"u1c", "[", "t", "]"}], ",", 
        RowBox[{"x1c", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1c", "[", "t", "]"}], ",", 
        RowBox[{"xdot1c", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1c\>\"", ",", "\"\<u1c\>\"", ",", "\"\<x1c\>\"", ",", 
         "\"\<\[Theta]dot1c\>\"", ",", "\"\<xdot1c\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<LQR feedback solution\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], "\[IndentingNewLine]"}],
  FontWeight->"Plain"], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.863699832878002*^9, 3.8636998879424076`*^9}, {
   3.8636999587037973`*^9, 3.863699966845196*^9}, {3.86370068689312*^9, 
   3.863700742439372*^9}, {3.863700775571786*^9, 3.8637007771342835`*^9}, 
   3.863700945211579*^9, {3.863700998427576*^9, 3.8637010107976217`*^9}, {
   3.8637016473912125`*^9, 3.863701669091281*^9}, 3.863702035899074*^9, {
   3.863702126179226*^9, 3.863702160529252*^9}, 3.86370251869481*^9, {
   3.8637025705572357`*^9, 3.8637025888983755`*^9}, {3.8637026681560507`*^9, 
   3.8637026692896886`*^9}, {3.8637027081322765`*^9, 3.863702762285972*^9}, 
   3.8637029838601737`*^9, 3.8637033230088053`*^9, {3.863884225388322*^9, 
   3.8638842448491*^9}, {3.8638842916161537`*^9, 3.863884295082047*^9}, {
   3.863891061309538*^9, 3.863891063069975*^9}, {3.863891163269951*^9, 
   3.863891163428899*^9}, {3.8638912925906177`*^9, 3.8638912940581484`*^9}, {
   3.8638913677266035`*^9, 3.8638913686183195`*^9}, {3.8638926039804945`*^9, 
   3.8638926063767295`*^9}},
 CellLabel->
  "In[2131]:=",ExpressionUUID->"53d64360-9130-4d93-aa11-669324ba78f7"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{249, 1412, 197, 198, 199, 200, 201, 202, 203, 204, 
            205, 206, 207, 208, 424, 364, 315, 276, 248, 232, 437, 377, 328, 
            289, 261, 449, 389, 340, 301, 209, 425, 365, 316, 462, 402, 277, 
            453, 393, 474, 344, 467, 407, 478}}]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwl0ldsT2EcBuDzLxK7xo09EitI7Hljc2FFJcQMtUnsdWGFCjEjRmioTWJv
XdrSxowYQYii9o1ZxQ3l+dKLJ+/ve8/3nZOccxomzkqYGRdFUYzXHGN1mShK
Is+cyzWukkM2WVwhkwzSSSOVy1ziI7+p7sZdmcFRLuo+8Itq1l2YzhEu6ErL
BvRjceh4r28mB7OCTH7qqsrOTOMw53Ut5VCSyKEUo9jATerTl0VhP++cGSM3
cZumDGI5GRS5vkM+ZDhryaMKW7hLJ54ylUOcc6ZAJvOEseSzmTu04AXbeUAC
z1hFNnG8YiePGMlz1nODemzlHn1YGJ7JW8/dJR8zmo3cognbuM9AlpHOD/uH
yTXkEk9HpnCQs643l0NYSRYxRrCO69SlNwvCft4401gOYClpFOoqyw5M5gBn
opKfrg69mB+6WMk/2Ej2ZwmpfNdVku2ZxH5O6/5R29yTeaGjQPeNiuZ2TGQf
p3TF1DL3YG7ownvWfaWCuS0T2MtJ3V9qmrszJ3S81H2hvLkNiaRwQveHGuZu
zA5d+M66z5Qzt2Y8eziuy+cTZa1bMY7d/Af+x3rE
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{1, 135, 108, 88, 72, 60, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10, 
           11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27,
            28, 29, 30, 31, 32, 33, 34, 35, 136, 109, 89, 73, 61, 52, 36, 137,
            110, 90, 74, 62, 53, 142, 115, 95, 79, 67, 37, 138, 111, 91, 75, 
           63, 54, 143, 116, 96, 80, 68, 38, 139, 112, 92, 76, 64, 146, 119, 
           99, 83, 55, 144, 117, 97, 81, 69, 148, 121, 101, 86, 39, 140, 113, 
           93, 77, 150, 123, 103, 65, 147, 120, 100, 157, 130, 84, 153, 126, 
           106, 56, 145, 118, 98, 156, 129, 82, 152, 125, 164, 105, 160, 133, 
           168, 70, 149, 122, 163, 102, 158, 131, 166, 87, 154, 127, 165, 107,
            161, 134, 169, 40, 141, 114, 162, 94, 155, 128, 78, 151, 124, 104,
            159, 132, 167, 66, 85, 57, 71, 41, 58, 42, 43, 44, 45, 46, 47, 48,
            49, 59, 50}]}, Annotation[#, "Charting`Private`Tag$355270#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1HmYTXUcBvA7akgLiUgqJhSKpBRa0CKtylpSpKKipkVKZR9RRLRQWmxZ
hjJbiBrbMGYsM5p9n2kjKiottvL5Pf743Pd73nt+z7lnuSdmcGzPZ6IikUhH
H/HyIzmIKziNX3SlLOdj24/Qlpr8qitjhflZOnMex0LHJ+bBXMnp/KYr53Pz
c3ShIcdDx6fmR2nHGRzQVfCF+Xm6cj7/hY555se4ijM5qKtkpfkFbqIR/4eO
+ebHuZqz+F23Rr7GnTSjSpcgR3AzF4SLQ4JYIIfQnlr8oftKjuYumvOdLlG+
yC1cyFbe5AGiSGUC99GKRGsWyqFcQ202M5m+/On7tXIMd5PNu1xCBm8xgDw+
4Hv7J8mR3EoW73AR6UylhP7kMocKqrGeiRTRk928RxmXsZ0ZlPIw+XxIJUmO
u0g+QSHXspOZnE0aU+jHt7zPIWvWybHcw6VkMp2H+MH3yfIlutGYbUzjQU5h
A3H04nKSrflMPkkH6vCX7ms5jh604EddinyZ22jCqaToF8unok7+L87hb91P
fMkS28PoRF3+0e1hFavDMxWei3DPwrmF4/INqaxnAxvZxGbSiIuORLbIraSz
jQwy2c4OdrKLLLJZ6tjDuY56/KvbG36jeRTdiSGajUyiN63DfbXfMvk017OL
WZzLFt6gmPvJYTblHA7nIsdzLy35OZy7fIXbuZjq4R7r42V4wdxAfY7o9pFD
LnnkU0AhRRSH9419Y7mRBhzV7Q/X1/wqd9CUGmzidfrQhh28zUAKmEsVJdaf
AM+1rg0=
           "]]}, Annotation[#, "Charting`Private`Tag$355270#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV02WAVVUUgNE3M3R3gwwoiiClIlLKSLeDKKggDKGIgIp0SVoobdJ2YCPS
EgZhY6AoSnd3r/1j8Z2z733vzQ1SM/ql901KJBJj/bONrCmJxJLkRGI4LalI
IbY7toOd7GI3e9hLNp9Z6pwRtOJ6CrPPseyOLbMeSWsqUYT9juVwbLn1KNpQ
maKUMv9Rp9CV+hxwfk7zFdZP0pYbKEZp8590KhncxkHn5zJfaT2aO6lCccqY
/6zT6MbtHHJ+bvOvrMeQTtW4FrN/dA79KMFVZr/odLpTx/6QfkwDqtvv0LcY
yGHfncdslfVYGlmf0XbcYr1PP6Ba3B/7f3Uuza0v6qNxTdbH9PO4dusUSlqX
1V+1vc7QpnpeO2kPrauHtYN+Es9Ak+hKmn0N3al369vaQi9pZx2kaXpS79VF
cR81E0dcU15dbTaOxtZn9S5qWe/XBXEv4rnab9V5PBb32/64LoxnTar9Jn2R
ntSL79dPuYMb7XfpOwzmqN/OZ7bGenxce1xHvA9m/+l8Ho/3gnJmv+lLPEhD
jvl8fvO11hPi2uM34r2gvPnv+jIPxbPiuPMLmH9t/RT3cFO8B5xwrKBj31g/
HfeZm+O5cNKxU5zmDGc5x3kucJFLXI7/gM5PIpkUMlHI936rz9CRmnGvyExh
x77TZ+PZxHsU18rV5n/oK/SK50IWipiv0+e4L55RXCvXmP+pr/IwTchKUfP1
OpH7uZUqZv/r6/SP36KC2WZ9jd7x/sW9Mdut7zKEbBQz26DPx7sZ32d/QD+k
NlXtt+kbPEED+xP6RfyNXGv/l86kmfUFfYT61kfj/uhn2kaTyaBZPAvdE89M
39OWelkf0KHxfumpuCf6paZrZrqR3b64boz3Wl+I+6Pn4p5o5/jb9aB+RCvr
BF2oY19Nt+ubDIh7xXVmf+ss+tCcHJQw/14nxd9G3bhmcpKL3OQhL/nITwFK
+twPOpku1IvfoKL5Fp1NX1rE+2O2V99nGA3tT+ti2llnoTsF7a8AVpu07g==

           "]]}, Annotation[#, "Charting`Private`Tag$355270#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwNy2NzmFEYBNA3TWrbSG3bNtP2D3Smtm3btm3btm27qd2eD2fu7j5zw5u0
j2gXEgRBJE1DgyB/WBDE4ZV8ijVMpxnNaUFLWtGaNrSlHe3pQAH/4/JaPs1a
ZtCRgvZ4vJHPsI6ZVLGF80++z0E6UcgWn7fyWdYzi6q2jAQ80A/RmcJ6At7J
59jAbKrZMhHCQ/0wXSiiJ+S9fJ6NzKG6LTNReKQfoStF9UR8kC+wibl0o5g9
MZHyRTYzj+70oCfF3ZPwUb7EFubTixL2pHySL7OVBdSwZSGUx/pRelNST8Zn
+QrbWEhNW1bCeKIfow+l9OR8ka+ynUX0pbQ9BV/la+xgMf0oY0/JN/k6O1lC
f8raU/FdvsEuljKAcvbU/JBvsptlDKS8PQ0/5VvsYTmDGMwQhjKM4YxgJKMY
TQV/0/JLvs1eVlDLlo2oPNWPM4aKejp+y3eoL+cmFhHkpRH73Op6cxKDF/pK
asvZicYz/QRjqaSn5498l/2sYhzjmcBEJjGZKUylsj8Z+Cvf4wCrqWPLQXSe
6yepJ+ciJi/1Bt48xKYh+WjMNLf/NgR/2w==
           "]]}, Annotation[#, "Charting`Private`Tag$355270#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV03eAznUcB/DnbBkJlZVCkXAys2d2ZlzGicged/bmjiiZZZeyEyWyUsiq
kK1spbL3Ktm8vn+87v3+fO658Xx/3ydXm7hG3aMikUi0LzHJIpEqySOR1BzV
VzGDD3iLpjSjOS2IpSVv04rWvEMb2vIu7WhPBzrSic50oaq/8wTH9NV8wmi6
8rp9Go7r3/EpH/KmXTYu6r+wmG5Us0vLH/oaZjKGxnbZuaRv5Su6U90uHX/q
3/MZY2lil4PL+ja+Jo4aduk5of/A5+F9m1/ilr6PccSYn+OKvj28V70ISVgS
zkW+wj39YPhf9BKkIN5cUz7JX3oPWYq14fxkNI/0WeG89bz8r/eWZdkfzk4W
YyjJ6E9FhjM+PEeZk0FcNfeSZRjGr+G5yKIMISn9qEAi34RnKgswmPvmPrIc
h8I5yZKkZACV6GFfS2bgb72nLM26cB9kYSLMDvdH5uO2/lt4rnpxkjMh3D/5
PNf0HSwN98tckAf64fD7qW1+in/09cwJ99L8Mnf035kY7rL5Ba7rO1kWzoM6
dhk5qf/IXD4K994uFzf0XXwbzp437DJxSt/APD4OZ0Nd+8yc1jcyn0n0pZ79
05zRN7GAyfSjPwMYyCAGU99rn+GsvpkvmBI+i3a5uanvZjlDaGD3LOf0LeGz
p79KFH0pTwILw2dW5ueufoCpxJrz8K++hxUMpaFdFs7rP/El0xhGAokMZwTv
MZJRNPIzWbmg/8wiptPS7kX+0/eykvbmQjzUjxCvv0YqBlKZEbzve48BxDKa
Hg==
           "]]}, Annotation[#, "Charting`Private`Tag$355270#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"Feedforward solution\"", TraditionalForm], 
     PlotRange -> {{0., 3.12499993622449}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1a\"", "\"u1a\"", "\"x1a\"", "\"\[Theta]dot1a\"", 
       "\"xdot1a\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.863702134579542*^9, 3.8637021627135525`*^9}, 
   3.8637025210160646`*^9, 3.863702578124817*^9, 3.8637026714539957`*^9, {
   3.8637027226726294`*^9, 3.8637027640764*^9}, 3.8637029884806967`*^9, {
   3.8637033266226506`*^9, 3.8637033354478307`*^9}, 3.863879327529692*^9, {
   3.863884217207935*^9, 3.8638842652235885`*^9}, 3.8638842967265196`*^9, 
   3.8638860360506268`*^9, 3.8638906095889077`*^9, 3.863890848019706*^9, 
   3.8638910663699183`*^9, 3.863891132659732*^9, 3.8638911691100826`*^9, {
   3.8638913595922036`*^9, 3.863891384033392*^9}, 3.8638926082491283`*^9, 
   3.864131525163704*^9, 3.8641416796563787`*^9, 3.864143125130576*^9, {
   3.8642366677575245`*^9, 3.864236679721656*^9}, 3.8643991189557676`*^9, 
   3.8643998035201178`*^9, {3.86440821572911*^9, 3.8644082391544905`*^9}, {
   3.864412158578727*^9, 3.8644121612098713`*^9}},
 CellLabel->
  "Out[2136]=",ExpressionUUID->"97c49807-b8d9-4e9c-995e-a5aee0d9dee6"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
rqoJs1rYBWa9bCEV/P3+Ov6tMqvx/uKVQfxO/HVCb5D9O7r9QT4drj1grcmp
7AJhnjm3cPx1/rRnHsyTXXD9xaqoODwe5SjAp9c63aD5yKD2Jz4m9IarlSFr
0/H6qdtwsYGtUxfsSA6orcHvR2Wz8eA5vm6QOLw1Uh+/3mql9O3t+V1Qp7DB
IhAfZzoavqQpdsF7hgyXBH49W9rK7/nq3eD8alLnIP555zKjo5JvuiDp4tK+
8/j7mwKyKheJd0P/soTSLvz1hK+CAmGsLjDJeR7wCn+d9Peqn7Nm4/GS0Bc8
jjf283LPk/5ezwj3HMPLs6S/d+UJL64xsxnS33tFtvfCntAp0t9bPtBnGdUx
Qfp7GQspt8alxkl/79/Md/Sq1FHS31vBs0nM7+QI6e/df7H3gOGqYdLfW0m7
1rZdeIj09+aYnjFJ3DFI+ntHLIM3cFf0k/5eyqDj1KBPH+nvPXI8+pKEUS/p
7w2nKP+pt+4h/b1hbL3rhj7dpL83k+pecRmvowl9IYmPqpm3vYv092pOvisJ
c2KT/t7ZDQdfvGN3kv7ezQUH5a4f6ST9vW9z4uFDYAfp75VhVejLdrD++Xvv
L1y0dyWL9PdanWfljsm1k/5eJOPranKkjfT3ttx+tS5kWSvp7838uspZvZQJ
hL4w9yzohpZjExD6gk79IvezvPVA6Asbs1JtTxlVA6EvrDT+E6rEKQdCXwjd
+veaWl0xqS9Y3h+hei/KJ/UFiX5G9t6Yz6S+MOZ8bTLXI4r09761FueIy+SR
/l7aWp/eovnfpL/36cCOXAmZatLfu+v0hLvajWbS3/u8k3+JYkgLRugLFTu/
GJ6abMUIfUEhWM+rULcdI/QFjx/7X4YlsTBCXxjbs4c7ZF8nRugLAltvwIH3
bIzQF7aLHjQpXt+NEfrCUECvyensHozQF7pVTmarnuzDCH1BUPSSOBIawAh9
gWLVdIa6b47k6xcL6FpOivWkX5adcoC+ZZaJEXw9oMgxIEq1FSP4uOSDe8KK
u/oxgo+rGXVwesPnSD78N/LMdvbuWtJ/Omp8dHNMPBMj+LBjpq+c22ALRvDd
D+HHEg2z+zCCj2qOqR1M0Wwk/Z7bvz5/fVGjBSN46J5TE1UNb/oxgocepMtE
zP+ZI3ngqNnmkxK7akj/5Fjy+6vbZZmkf5LuwNZXLWzBCJ73QvtVYcaTPozg
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
94XbZods6mlx0NOb6XXKjgX/f3944/tfwgbQsg==
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{332, 1528, 280, 281, 282, 283, 284, 285, 286, 287, 
            288, 289, 290, 291, 507, 447, 398, 359, 331, 315, 520, 460, 411, 
            372, 344, 532, 472, 423, 384, 292, 508, 448, 399, 545, 485, 360, 
            536, 476, 557, 427, 550, 490, 561}}]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwl00dsznEYwPH3LbX3asyYQYjS2hd7XlDrYNe4oDUOVpDY86I1D1aQEDP2
vNgcrCAhRkWMIDatxPg8cfjk+/s975O8b/t/3wbZuVk5KYlEIkkBvylKTSQK
STOsQXWqUZUqVKYSFalAecpRljKUpjP9mcRaLvCLUnSiHxNZw3mKKMlwZrKF
mzHz4TrqPHZyL97XrK9OYDXnKKQEC9nDw/i89obpQZ5R232GbuZG7Lt30MMU
UNd9ru7gbvxt7n30LU2c9+lj0pzH60vqO6/SFnpWf5JKpvsHba5HNF1faD1d
oK31jTbW3dpSH8T/V4dqhr7TpnpAW+lTraXT9RUNnTfp9XhP5/b6nmbOh/Q5
dZzn6GsaOW/XO/HMnHvrXh7Fc3bP1pWc4QfFmc8u7sdztzNE9/OEmu7TdCPX
Yt+9nc5mG7fje2HWS8exgtN8pxiDyWUDV2Nmt63OYiu34jtl1lPHspxTfCOF
LHJYz5WY2c3UHoxhGSf5SpJBTCWfyzGzn6HdGc1STvAl+f8HMZAp5HEpZvbb
aDdGsYTjfOavlwfoZNZxMWbxnOnKSBZzjE/8sZ+uXRjBIo7ykX/Iy2lU
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{1, 198, 151, 113, 84, 63, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10, 
           11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27,
            28, 29, 30, 31, 199, 152, 114, 85, 64, 52, 210, 163, 125, 96, 75, 
           32, 200, 153, 115, 86, 65, 53, 211, 164, 126, 97, 76, 33, 201, 154,
            116, 87, 66, 54, 212, 165, 127, 98, 77, 34, 202, 155, 117, 88, 67,
            219, 172, 134, 105, 55, 213, 166, 128, 99, 229, 182, 144, 78, 223,
            176, 138, 109, 233, 186, 148, 35, 203, 156, 118, 236, 189, 89, 
           227, 180, 142, 68, 220, 173, 135, 239, 192, 106, 231, 184, 248, 
           146, 242, 195, 251, 56, 214, 167, 245, 129, 238, 191, 249, 100, 
           230, 183, 247, 145, 241, 194, 250, 79, 224, 177, 246, 139, 240, 
           193, 110, 234, 187, 149, 243, 196, 36, 204, 157, 119, 237, 190, 90,
            228, 181, 143, 69, 221, 174, 136, 107, 232, 185, 147, 57, 215, 
           168, 130, 101, 80, 225, 178, 140, 111, 37, 205, 158, 120, 91, 70, 
           222, 175, 137, 108, 58, 216, 169, 131, 102, 81, 38, 206, 159, 121, 
           92, 71, 59, 217, 170, 132, 103, 82, 39, 207, 160, 122, 93, 72, 60, 
           40, 208, 161, 123, 94, 73, 61, 41, 42, 43, 44, 45, 46, 47, 48, 49, 
           209, 162, 124, 95, 74, 62, 218, 171, 133, 104, 83, 226, 179, 141, 
           112, 235, 188, 150, 244, 197, 252, 50}]}, 
         Annotation[#, "Charting`Private`Tag$355381#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl03e8l1McwPHfLbclWrSIknJxu7mVQqFFoaibCg11taNbZouSFqGFtIy0
aVrRoCVN7YV2GWU0KW68v6/+eN/Pec7vvH7P7znnuWUyszK6JSUSiVv9ydY/
9GMG0II7qch5n/2pn/ASLanJTfzHckbRlQdizvrj+ikDaUUt0uNmORKJFTqa
x2kUc5zgMwbRmtpUIsn6lfoGT9A45jjJ5wzmUepQmRzWf6NvEg+XEXOcYgFD
aENdLrb2O32H56hCTnOr9C2yaBJznOYLhtKWu8hv7UZ9l57czEXmvtUxdKeE
6x/1Ix6kkOttOpnnYz1n+JKXyaSoNbt1BndzietN+h5ljX/SXlxpvE/nkGJ8
TKuSbLxa3+Ya4yPag5LGezRNZ+l1ejT2WZtqYd2uqTpFr9Wf45z1Bb1KD8Q7
ofP0ev0t9l2T9S8WcqPrV7S0HtLHKGb8vc6knPEvWo9LjTfr+/SmlOv9Opdq
5HK9RsfyJFe43quzaUYR1zt0Kv1iPX+ziGG0oz4FrNuik+jDLeQ2t1bH8RTN
Y46zLOZV2nNP0oX/kTycYwmv0YF7uY285It3Kt6LOLN4trgvBePcY3/j93IZ
l8c5x77E701OJIrHuxJnFM8YZxt7EXvO1bGXlInzjHeAf/iK1+nIfVSP3+iZ
1ul4nuahuJ+5nTqN/nGu/MvXDI/v9flh7URx4x+0gn6o5fVXTdcG8Sy6VT+g
LzXi2c2t1wk8w8NxxmSzlBF0piG3x3fGu0dKvEPcEO8MqXFfzrOMkXThfu6I
/XWfDTqRZ3kk9tHcLp3Oi7FXrg/q/Phe49+1iqbp/5XYjDE=
           "]]}, Annotation[#, "Charting`Private`Tag$355381#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV03mATWUYB+CLlGgvIpUUSZTIvu/bMGaGmbEvYys0EyrapSxlqVRSGGUp
O9mJFkWLvbJXKrsipb3I8/7x3Pf3vve73znnnnNKZuWkZedJJBIjfVTJm0jc
ky+RuJFv5TkMoy9VqUZ1alCTWtxrbQkOyHN5KvagNv3Mb+I7eR7DY32sMavG
n/J6XqMO/c1K8r08n6djj/idWXX+kj/ideoywOxmfpAX8EzsEb8zq8Hf8sdM
ph73md3CQXkhI3hR34yL+CL2jH3kmvwjb2AK9ck2K8UheREjmaBvTgG+jGPE
vnIt/pU38oacQRGm6iepyVzGXn0DcuTSHJYXM1Vuy9WM0r+ktuBi5tGDr8xn
qB1YTjEW0ZvsOD+1Nkv4L+6P2p2VfKJ/U81kGdeykF6sJjfui9qGpVzOfLJY
xT7fz1I7sYLiLKYPDX13v3orR+TZalfekXPVdlzDaP3LaksKslM/U+3IdeTo
R6l1OCt/yrS4//oUrmC/vhED5TIclZfwLK/okyjErjgnRst1OSd/FveGxgwy
u41j8lKeiz1jH7N6/C9/Hv8ZTRhsVpbj8jLGxB405QHz2zkhL2dsrKcZzWlB
S5JoRWuSaUMKqaTRlnakk0EmD9q3HD/KKxgXx6M9D5mX5yd5JeNjfVyLWX0S
bNJPpwND9HdwUl7F87FHXItZA/KwOZ4xOjJUfyen5NW8EHvE9cU9Jy9b4h7S
iYf1FfhZXhPvGhP1rbiE3bFnXIPciHxsjfNT21OUWfH+qqlcydf6t9TOXB9V
/4h6F6flOWo33o1nRU2nMAvoyQTzV9XWXMqeOM/4r+TGXMC2OAZdeFRfkV/k
tfEexvHoymPmlfhVXhfPcqynG4+b380Z+b14FmM93XnCvDK/ye/HfxLr6UEW
PenFk9ZU4Xf5gzjv+G3cJ7Mm5Ge7/m16M0xflT/kD5kUe8R9MmvKhezQz2aK
nMZVfBN7qF24Id5T+rIm3mffnQfxD8QP
           "]]}, Annotation[#, "Charting`Private`Tag$355381#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwNzkN6REEUgNHX6Y5to2NuJkvIApJBlhfbtm3bOIPz3fpv1aCibR2t7aEg
CDrpCgdBWSQIMojwqR+5oZseeumjnwEGGWKYEUYZY5wJJplimhlmmWOeBRZZ
YpkVVlljnQ022WKbHXbZY58Dyv0zk1i+9BO3VOlcEvnTbxxSobOI41vXm0Wk
0UgJzTy7qzULSCGGO7tqM48kAt7tjog6ZxPPj37hnmNOOOWMcy645IpK73NI
4Fe/8kCNzieZEB92dWYhqYRpoJh0miilhWtv/wHROENK
           "]]}, Annotation[#, "Charting`Private`Tag$355381#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1HegjnUUB/DXLkk0VColpGnvdW3ZXHtzrax77b23hpFZyGinQRsNDeva
u5IZTUVDisjn/PFxvuc81zue33ne/ClpyakZEolEun+KZE4kpmdJJB7kqPw8
I+hMUWaYP8Qx+QVG0oViFKcEJSlFacpQlnKUpwIVqURlqpBEVapRnce9/sMc
l19kFCnU4AnzRzghv8RoulKTJ82LcFJ+mTF0Y4VZDS7IH/E0tXjKrCjfya8w
lu6sNKvJP/LHzKU2M82KcUp+lXG8rW/ONezQ94h7JtfiX/kT5rFe34HcHNTX
YZZcnNPya3whd+d2xuvfUVtwLTv1PeOey7W5KH/KVrkPdzM/vp/akRs5zBgO
me9WB3JffF+m8Kj5bLUE3wf9fnUoq+Qv1R6cIS9HGMcfTHD9XbUlP5OdrxjJ
OXa5vkNN4zcKxJkxifM8Fmer1uFHLukPqsPZIKerfbmHBXEOaiduivfR71EH
UZi6+jlqSX6QX2ej3JM7mKh/T23FdezW94r9iXvAf/JnLIzz0nfmZr7W14t9
kUvF55TfYBK9Y8fivbksf84i6se+mJXmJ/lNJtMndsysHlfirHmGBrEfZmXi
PspvMYW+NGS+eVl+kVczlX40ojFNaEoyzWjOAn9fLs5NXsM0UmNnzerzf5wt
z9IivrdZeX6NfWZTnA93xm9A7CJ/Mt2199XW5GCPPi12V25Ago36xbSM+6Gv
EOcfu8wM+tMqvrt5Rc7GHsUzzwBax+cyrxR7FOcWzzwDWWXWkAxs0i+hTbyf
vjK/x+eL3wEGxR6YNSIjm/VLaRv/T18l9lj+IH4HourbcD179YPjrOXGZGKL
/rl45uQu3MI3+nbxunJS3CP5QzbLvbiLmTFT25IzdopR7DPfqfanICeZzJDY
GbVJ7A+ZOcQItrq2Te0XZ0V+jsd+8xfLXN+gpsS+kIdvGRv3hsOu71UHx33n
fk4xlb9pH99RrRrPUbym/oA6jLXyFrU3+TjGBGaZr1XbcUPcE0az33yXOoBC
DI3dVpuShXT9djWVe1kez6DalVvjc+s7sEyuxnl5XfxeRY3PSi4O6IfFsyEn
k5Vt+hV0ZLm+enw/eX38TjA8nguzZmRju35lPMNyN27jiH5fnAcPcJppXKCT
a1cBas39uA==
           "]]}, Annotation[#, "Charting`Private`Tag$355381#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"Test on dynamics\"", TraditionalForm], 
     PlotRange -> {{0., 3.12499993622449}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1b\"", "\"u1b\"", "\"x1b\"", "\"\[Theta]dot1b\"", 
       "\"xdot1b\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.863702134579542*^9, 3.8637021627135525`*^9}, 
   3.8637025210160646`*^9, 3.863702578124817*^9, 3.8637026714539957`*^9, {
   3.8637027226726294`*^9, 3.8637027640764*^9}, 3.8637029884806967`*^9, {
   3.8637033266226506`*^9, 3.8637033354478307`*^9}, 3.863879327529692*^9, {
   3.863884217207935*^9, 3.8638842652235885`*^9}, 3.8638842967265196`*^9, 
   3.8638860360506268`*^9, 3.8638906095889077`*^9, 3.863890848019706*^9, 
   3.8638910663699183`*^9, 3.863891132659732*^9, 3.8638911691100826`*^9, {
   3.8638913595922036`*^9, 3.863891384033392*^9}, 3.8638926082491283`*^9, 
   3.864131525163704*^9, 3.8641416796563787`*^9, 3.864143125130576*^9, {
   3.8642366677575245`*^9, 3.864236679721656*^9}, 3.8643991189557676`*^9, 
   3.8643998035201178`*^9, {3.86440821572911*^9, 3.8644082391544905`*^9}, {
   3.864412158578727*^9, 3.864412161339829*^9}},
 CellLabel->
  "Out[2137]=",ExpressionUUID->"30b2ca15-64f3-40ec-ac74-6d5d02e904a0"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
RpaZnVQc6qU817w3tkAno5/y3JOfJ/tFf/znuROCjrO/V//nufUJPlLHG0cp
zw2WDu6gOY9TnvurNvWY8BUe5bnJn1S6L/XyKM81LXC7rVz3n+e69n1dUHGM
R3nuwi98fCpm45Tnus8t9bDaNUZ57u+NrdsW/xihPLe69fmdyxuHgfTccwkB
Mc/8B4H0XNfR20vt3/YD6bkf44T83lT3Aum5lzqL+B6+7gLSc1cKjs+9m9AG
pOfGuTOXnOO2Aum5SafZ8z4TTUB6LmKY/bgcXQek57IY6150dP4E0nM/ez7Z
wJhdBKTnNr5RcPF4/Q5Iz+1eqbKrcPgDQXrux2tZ4995JQTpuccb/vZfflVJ
kJ5bOLX/zAJOPUF67k8TkRGxfc0E6blhvB3rWgTZBOm5F8vnxniItxOk54ZN
CBqaVHQRpOfKVJ+Uu9DTS5Ceyyf4xrv2ez9Beu75t9u1n70eJEjPXbZaOuvA
i2GC9Nw3GWXpYdJ9QHpuIGP/4mCtbiA9lykbbxqT3w6k565tWt1xqogDpOee
OZI3/+MPFpCeK9ttYGKk3Qyk50bU6dyMZDQC6bmc9yqG6l51QHruQOjtdaJv
a4D03A8P655VZ/4E0nMHaZn5G86wQGbyU/ik6mewiT7Y2enbAd7lmawjR/Nh
k2qidOfMXrgycHgOx7gWlo6ulljUOgK3BeSGVof8gVdLxCQ+ZoxBx6lMC4XD
TZCRWZW5RogHrmJXFY+atMBoiYBiUyEPhsVydgdbtcIrE59E9SEeBJ3/Ylx+
igPbrj2fN/WKB85+X+0VzrfBI5WzxTFt46BFM20Ks+0A+ai7iWJ1Y0D6sOYe
r96XUUME6cOubn5bbi7qB9KHrbbtNeMt6gXScxfVbdSviqkC0nM3r36U0D3Z
BM1dDaedhpJg9EAAXn60g0L32PDb47mw+q1qXOuSHpjH4u403P8bCnW2OhSZ
jsApYXn9x3cbQPLIgdUq+mMgryRH51Y1Qr8O7Wts/jhcsV73/lZVMxxddbPs
0kseZCef3fSlgwXIMyKnYpgHLgtWNN1kscHL65HOnzweLPli17y/kQsoRV72
9woeZPj0pOf2t0N30nR2g8w4kD7c/uxzecKqIYL0Yb8MbcEVT/uB9OFBhaAX
0mG9QHpua40ixzC6GiTzXHZ23YsGhrxnN92ZDSYiQTW3nDLgx9waZmJTJ/yi
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
f2IIso9tG6BP4PfR8NBwmDYCY8dPeZq8b4eVd4VinGeMgtcO7xuxuvj9rQb7
RoExUFn993Dzr7b/8q0Pkk4suPWByrfurDfqY0Iu4SBmpHd2ixDyNdU4Eq5Z
SPmpXkr0w+1QTHlns7bJH7Ub+VS+9Khg/6m898VUXjT0ne31A3p5lB96ps65
6M8upvKXdIU+lpZ2PuV7zrs9P6bzlVC+1xT59VHVxBSVh/RdWl8EX/uoPKT5
Fqb7BLuXykNeton2PL2xl8pDNqyvElfS7KHykBe8XKIf7egG0u+aFFq38G51
Ael3ooYKppbNnUD6nX14S5e9VSeQfufTbnB5y7xOIP2Oq2pm/P1LB1ysCDh9
4toQzD+2IaBxcQccXTL1J+bKMMw2KCicqG2H1nPpZS53RoA72+Lc5K12KM46
ssLh9ijU3T2ctXJhOxjt4nz5dX0Mqpnn/KsetsHD4uKW3LvjcFbPdH7gXy7M
etbeuM2bB8NZZzxTRLggKzHrvu2TCWi+qqMtPcymPPAArXThtJgHle9UXCkC
2UtzqHzn4sr1ttFqGQT5e3KHorsnwtXfAPl78o03OxQjb6UA+Xty8UuijR3b
s6Be8MPdF7ZMpO9muN9bOxf4qqr4HUaYqLTSNMlA6j8/VJ1b8VtGvQhI/1vm
Ec1uqO8C0v/Qx33ae9Z2Ael/9pCyYfeLTlgY32n8a3QIts8UuyQ42Q67rEV6
k6eGQV1Aal9mYjvQrf/auTNG8TyuXX7oEH5/n/I2TPCNQZa2SlV/bRvlgT5z
7ZfZ0D5QedB003WE0ZlcIsv6ywNrVSH0wHprmYJaIeWBG0IXdjZtLqb8Li7U
vq31RT6Vx1z7sTiZ/aaYylc+OOgpnC6eR3mYx7ZEqb6/xVReUax6m9lFkXzK
q6Rml8luGy+m8oB7g8fiNvnmU57UvXtf+EZmCeVJDN9tr5nDo1T+b32KtWFS
2AiV/3uSJen9oWeIyv853Ppc66o9SOX/7K2OdYu86qfyf/JsMQm38l4q/5d6
zFvurXg3lf/7uu3RjLWS7VT+L9B4NP/2XDaV/0u5/6rl4M5mKv/3zFc3THBr
PZX/O//MVuf23Uoq/0cL6FjbYvSFyv9NDkqa3vqSTOX/VDNgOtUgmPKkZ3/n
5b2XyaE8SU+j9H3z5nLKk+Y+Z76yKK2kPGkXzU2O37mW8qSFahoiG/b/pTxp
zkYp/428JsqT8kDl8e+pFsqTnmswOiqe/vd7WMUPPloj8ziUJ1keYU0lK3Ap
T5orPe/FiiEu5UnSjbvystzaKE8a2hpq+ySljfKkrZ/OWt8Lb6M8ycmyUbVO
sY3ypPDTW647XOVSnhTZdHr31ZMcypNSdHpq1WawKU+6sSIyT/Qyi/KkHcoK
aLFZM+VJoVu6Z39f20h50hmmi9Li9lrKkxT5U613qlVRnuTiNE9JRKmcyv/N
nRll4axOUPm/5ffPjpR25VH5P25OlNrm1eVU/m/DmNEMYdeflCdVqr5zm7W4
hvKklts196/71VKetFTVz2XseAPlSe+3Jx65QfylPGncz3hOxlQj5UmcWUGN
B1uaKE/SpC0pq0ptpjwp9tZCz4uHRgnSa3Zxmh5fqWZRXrN3QfFdrbNsymtQ
ZNHK1BgO5TUKXRvevw3hUl4zMHpfyn73f16zrVbmy3BUG+U1BYpmC8I+tlFe
syYy0PfcpTZo+NH0JkZ6Cla+mc5wqePCx5yVpldXTMO6hz1ebUMcmO4MNuXO
40O5LIOTxplsiD9Ydl8/iA/ZPE0cVt/TSnnPlr/or9bsIirPt+Si6SnnG5lU
nm/7UfGdoyollM+MqWXLxh9upnyGf8GVjTqvRwnSPxoXOQbF4X5K+sdU6/hm
fjqb8o8nFmpTIqc5lH8I/pbd9ucsl/KPIbQxhbv0P/8Y0S0OXvOojfIPJc+c
x0af2yj/EFdvqH/l3QZOHzQ0FzZOQlFDS9hNwTZYa7na5tnfqf8Vbe/hUGZ/
AMBHKZUohKJIyG1HoSJdvkMXVpLkTlaF2EQhVhcqtV2Un8raopR7yC1yv2Ya
EdpibGmzzDIzrxBFmPc1s2ef5zcn/53nPM+877l/z8f3hR7D14cDN/PBO0tn
ztkhEfQszL1qs5QHWeVlbKtQGkORNaU6J3cQ+4mWdH7copxWnH93Untb5SuF
Cpx/p+03p9zuPgt7R5RjN7N9JQd7BcxNW5ZSx8VekekVJ/r6iYe9YvBinI5q
Cx+4/dyqXTsFsHzb8C81vui+86O17+hOdL5SxxNWFhEgadZwZsSeguSFqx+4
5BHQbEfbFuE1C0fOJSp02KP+Gb8sZ3ZQCEp+MQfa8vhgrrLGYd9REUwyy7uH
n/Cwh6hX1Fzv8m7C+XT0vbad7t6N2D/WcUqraFc52D/kJxb/3NsxXS/2heKz
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
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{1598, 1597, 378, 379, 380, 381, 382, 383, 384, 385, 
            386, 387, 388, 597, 539, 491, 453, 426, 411, 610, 552, 504, 466, 
            439, 622, 564, 516, 478, 389, 598, 540, 492, 635, 577, 454, 627, 
            569, 648, 521, 640, 582, 652}}]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{1598, 1600, 399, 654, 585, 643, 527, 575, 633, 479, 
            517, 565, 623, 441, 468, 506, 554, 612, 414, 429, 456, 494, 542, 
            600, 398, 397, 396, 395, 394, 393, 392, 391, 413, 428, 455, 493, 
            541, 599, 390, 440, 467, 505, 553, 611, 412, 474, 512, 560, 618, 
            427}}], 
           PolygonBox[CompressedData["
1:eJwV0kdszQEcB/B/KymxghrlQs1DlSBBUEQJsfvaC6q0Nt26iJEKGkRir4u9
LmY52NTFKg5WSmLVuljFwajP//DJ9/v9vf/Le8l78Vl5kdzoIAiiqCFDGRYT
BEks0csopYRiilhMIQXkk0cuOWSzh+Pc5BMdfEAai/TzPOQXPdwy2a0fo4qP
tHdLZaF+jgf8pLvbTHbpz6int72Ao3ojOZBCbtgfiNMj4TN6czmUMl7YDWQ/
cqi0m8jBFHPfHiGX8UNfI7sxg532RjmacpqyjiGU8NTr62Uyy/lnr5W9mM8R
e4McxUoaUsEACrju9eFyKe/11bIdKeH77TFyFc1IopTn7iPlCqLpSzZn3RvL
QRRRbdfRVc9gh/6EvyTa8zisx8j+5HPNfkdbfXL4jF5DlN4n/F05Y9/jO13s
6WzXH/OHnvZcDulXqaWNPSm866e5yzc6u6WzTT/IFd7S2m0ic/RT3OEr8W7T
2Kof4DJviHWbwGx9FllksoX9XOI1rTwzPvxv6Se5zRc6uU1ls76Pi7yipdu4
8L+gn+AWn+noNoVN+iN+kxB+X/bqF3hJC3ss/wGoMm46
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1Hl8z3UcwPGdQtmwpcM2qaQsplELpSY6tLKtYW3rogPVViFKoRzl6KDS
oaL7cnfrEF2KLlcH5eigkCtKOXq+H/547vX5fPZ77Pf5fL+fx5r2qimtTkxI
SLjEj2gtP97XUVTRiTYkkUwKqfE5DqI2dajLwRxCPdJIpz4NaEgGmRxKIw7j
cI7gSBqTRTY5NOEomnJ0fJ+9zdPRsV/Ooi3HxD787gO9i0vpzMnxXda/0Ae5
lhKOjT1bn693cxldOCX2Zf1LfYjrKKVZnM/6Ah3D5Zwde7P2nU7hZgriTNa+
0klcz0Ucb22NvsBQjotnZe1DHcsV5Jmv1xmcE2c2/16nMohTzbfqmzGO52b+
tT5MofFurY53Zbwxvlfn6HnxXikzPkHXarG+GGfWvVquw/Q0/Uu76zt6viZT
SfN4t/qRXqjj9Az9W3tqL22tG+KZ6cw4h+7Xc+P9Gf+gT8V7M/5PB9POeJu+
FeO4C+bf6CPUxPs136Svxr5oYb5OX2J4PNu4b9Y+1vH0jjPHnbC2Up/mFtrH
HbO2RB/lBnrEMyHN+id6D1fSNe6ItVX6DLfSIe6ntaX6GDfG/TLfrK/FMyDX
/Gd9mTtir6Rb+1Tv5SpOMv9dZ8Xzjbtl/qM+G3fWeI8Oif0ab9e3472QZb5M
J9PJ+F+9Ke6s8Z9apq/H3jWJCsrNT9RftERfiXur+/RivVNP153xLPRdLdIU
qsg1r68LtZvep2fqP3o1+cZ/6Ox4x/HPg6K43/qTPsdt8ezMd+jc+D6yzZfr
4/SnwHyLvhH7oqX5rzqNEXEGGlj7TO/nGi6gubXV+jy305Ecayv0CQZQEX+P
htY/1wn0iTsc95dWZPjdIp1I3zhrnJM8Wsc7I9NnFusD9KOYQppY/1afZCCV
8Tet/abTGRn7Mt+l78W+jVMTD/y/zTf/H9YDkwM=
           "]]}, Annotation[#, "Charting`Private`Tag$355493#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV03e8jmUYB/D3nERUCJlRFMneo4gyK8Ihyc4mW7KPfY51jlEUpSK7jIhQ
dvbIlq3sbNkjvvcf3/f6Xdfzvp/3fu77ebI36xTTMSoSiRT10Zh3oyOR1JyQ
l/MdLfV5uS/vYwwf6V/kiryZeTThPbPn+Fv+je8ZS32zl7gqb2E+TalmloZ/
5N+Zwjg+phnNaUF130nLSXkFU/mcBmbZuSZvZUFYL++bpeOUvJIf+IKGZjm4
Lm/jZ1pRw+x5TsurmBbm+nw8kPcznkb6l/lP3s5CPtEXJorD+tbUlNNzRl5N
Z7kESZkevqPm56F8gAlh//WvcEPewafy66Rgkb69WoRoYqnIEfMealmeZRBV
aWNeS83AEM7qe6vlWSN3UUsSTzL6U4mRzHC9jVqAOP7X91MrMIK/9J+pZRjO
MwykCgl8GZ4FNSdDuanvq77Nn3J39Q2e5hd9B7UoT3BU31N9k5S01ceoGTkn
r6WrXIqnmKlvqxbkkXyQr8Kzpc/FLXkni2lHbbNMnJfXMYuJ4Xkze5Xb8i6W
hHOljllm/pX/YDaTwlmEdRNenk7hfMOehrXRLZxduM+wT+F8wj3Ri7JJnYPa
J+xJ2Fdi6c8ABjKIwQzhA/+dhQvyeubwdXg3zHJzR97Nr2Et+mIk4Zh+KHXl
F7gY/lN9iw1hjWpphpGcAVRmVNh7a/wx7JdciAiH9N+E91F+jbvyHpYSx4dm
Wbkkb+QnJhPPMIYzgpGMIoFE6vlNNi7Lm5jLt7Qwy8M9eS/Lwj7ri/Mkx8N+
quVIxWDeIZHRrj0Gdb+aRQ==
           "]]}, Annotation[#, "Charting`Private`Tag$355493#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1HmATlUUAPBvRqVNKalkKSUtqGghIYoWFVFKJi0KlcyobCEklN1sxhIz
lLSpLA2imtaxFbLNosXSJhRlF37nj993zj3vvvfuu995r3qntLapSYlEIsXP
uOREYkaZRKITV3LYeCNfMJ50Msgki2wm8Ia5T1CLI8ZFfEkOb6o9SW3+Ny7m
KyYyU60zdThqXMLXLDTuS1POYqfaJN6Sd+EqjhmX8g2LjF+kGWezS20ys+Rd
uZoEm9S+5RN5P26hAn+rTeFt+VNcQxI/xnxxOK24kEK1xWJ/buUc1pJJCv84
vlIczf1cyutq74hPU5dk1pDOQ/zkeKH4Kq1jnXEOF7GBCTzCz+Sy1Pwl4gC2
0JxSpvAbFVlHFtt4OO7BNP5gt/O/E8ewlXbxrEzld2pSxER+5TF+IS/mOPdd
8RnqUcJkyvADGXSItZq3VHyNe6nORnJ4lGWOfyq+RAvOZT3ZdGSP49+LY3mA
y2L9au+J3biWE2JdasvEEbThYparfSYO5DbO41+1XN6XP8t1nMhmtRV8Lh/E
7ZzPf2p5zJZ353pOiv2O/5fpfGCcyg2Ujb2MfY13KN6J6P3o8ejb6MXor+iD
2L94jlhLXD+uw4d8xBzmxtj10qjPyfE/xn4wL+YZ96ABp8R/pLaKAvlg7qAS
e9XmxzXlz3Ejp0aPqK2O91r+MndyAfvUPo77y5+nIadFT6gtF0fSlkuif+Md
F4fQksrsj3WI43iQy8mPNYsvcBOnRw/GnoujuI8a0TvxXRBf4S6qcEBtQTyD
vCeNKMefamvjWyEfyt1U5WB8O+IZ5L1ozBlsV1sX3wnyjXvThDP5S219fBPi
vY73Kvoy+id6Iu5vTh9upjw71DbEd0c+jHuoxqHYU3E87bmCYibxePQZ02Pt
FJh7HDS1yAQ=
           "]]}, Annotation[#, "Charting`Private`Tag$355493#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV0Xe8T3UYB/Bz3UtCCiFkZ2SlzJKRRMPq2qMUEcm9GYXIjEJWKhllVUb2
XmVUViErZGfPi2vLeH//eP8+55zP8/qd73k9eVsmxifERFFUwM+Z2Cg6HBdF
C/icFpTncc7qznGeCyRxkUtcJpkj5hYyiLd4lpxc0f0nFzGYt3mOXFzVHZWL
GUJLKpCba7pjcglf0IrnycN13XG5lKG8Q0Xy8j9b+YEe1OeG+RNyGcNoTSXy
cYe/+ZGeNOCm+ZNyOcNpQ2Xyc5dt/MQnNOSW+VNyBSN4lyo8wW3dabmSkbTl
BQqEs+rOyF/4knZUpWA4l+4u9zjr/ldG8R4vUoh7bGcqvWhExDlW8RXtqUbh
0KWMoh1yGr1pTAznWc3XvM9LPBk68zvldPrQhBRcYA3f0IHqFAmd+V1yBn1p
SixJrGU0CdSgKHFc5De+JZGXKUZKLvE7Y/iAVyhOKi7zB2PpyKuU4AFS8yBp
SEs6HiI9D/MIyaxjHJ14jafCeX3DP/Jn+tGMDFxhPePpHP7f3H45L7zD9cHw
DlkznEH+K+cwkJLhWz3bLWfSn+Zk5Cob+I4u1OJpMvEombnGRr7nQ2rzDFm4
ziYm8BF1KEVWbvAnE+lKXUrzGDf5i0l043XKkI1bbGYy3YmnbNiJb9gjZ/Ep
b5Cd22xhCh9Tj3JhT+b3ytkM4M2wG8/2ybl8Fnbk/oCcH/bk+lDYk8wh7wMb
OZtT
           "]]}, Annotation[#, "Charting`Private`Tag$355493#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV0neg1WMcwOHTHtJtl5Jc0lQaihRtpb2JBklLGlTKalDaFE1t2pOitAuh
lGgqTZEmLWkYz/eP537e93vPPefc9/0lt+vepFuKRCJR0o+kNInETb5kHN1p
QlWykJVsZCcHOclFbvJwG3nJx+3k5w4KcCfJ3MXdFOQfvmI8PWhKNe7hX7Yw
gZ40ozq3pk0k9ugcBvAshfiPr5nIizSnBpm9fq/OZSDtKUzC/BudxEu0oCZJ
5vt0HoN4jiKkMP9WJ9OLx+P/NTumnzCSR+OczPbrfN6kQ5yB2W+6kjEUJaXZ
Vv2A3nEu9qd1DU/EOdof1+WMolacv9lPuoC34pzsz+l6OsY525/UVZS0/kvH
xve3/lM3Ucb6uhYjlfU2vV+naHG9pA9qn7gnPaPlda3ep1f1IW0Z96y/aDld
oSX0ilbQ0XHO+oc+oBu1tF7T2vEcWR/QhdxrfVkHx11an9cNdIrnxv53/Zz3
4uzsL+jm+L6ktv9Op/IyT8azZ3ZCP+UdHiO72UFdxBA6x+eSxny7TqMvT1GH
HOY/62Lepkv8f6Q136HT6Ucr6pLT/JAuYSjPxx2Qzvx7ncErtKZenCXp/W6n
zuRV2lCfUnFWcVeUjfuJMyaD1/+gs3iNtjQgl/lhXcowusadkdH8R/2Q1ylo
f1bXxWdY/60V9WnNr7/qZ7xLQ3KbHdFlDOeFuEtuMd+lH/EGz9Aonpu4+3g+
4n2pxMM8QmUy+bvdOpv+tKMxecyP6seMoBvJZqd0Ne9TzP6ifhFnYn0j3l+r
6P+v7o5D
           "]]}, Annotation[#, "Charting`Private`Tag$355493#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"LQR feedback solution\"", TraditionalForm], 
     PlotRange -> {{0., 3.12499993622449}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1c\"", "\"u1c\"", "\"x1c\"", "\"\[Theta]dot1c\"", 
       "\"xdot1c\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.863702134579542*^9, 3.8637021627135525`*^9}, 
   3.8637025210160646`*^9, 3.863702578124817*^9, 3.8637026714539957`*^9, {
   3.8637027226726294`*^9, 3.8637027640764*^9}, 3.8637029884806967`*^9, {
   3.8637033266226506`*^9, 3.8637033354478307`*^9}, 3.863879327529692*^9, {
   3.863884217207935*^9, 3.8638842652235885`*^9}, 3.8638842967265196`*^9, 
   3.8638860360506268`*^9, 3.8638906095889077`*^9, 3.863890848019706*^9, 
   3.8638910663699183`*^9, 3.863891132659732*^9, 3.8638911691100826`*^9, {
   3.8638913595922036`*^9, 3.863891384033392*^9}, 3.8638926082491283`*^9, 
   3.864131525163704*^9, 3.8641416796563787`*^9, 3.864143125130576*^9, {
   3.8642366677575245`*^9, 3.864236679721656*^9}, 3.8643991189557676`*^9, 
   3.8643998035201178`*^9, {3.86440821572911*^9, 3.8644082391544905`*^9}, {
   3.864412158578727*^9, 3.8644121615417633`*^9}},
 CellLabel->
  "Out[2138]=",ExpressionUUID->"7b6282cd-6ecc-40d9-a228-1aa03d64f44b"]
}, Open  ]],

Cell["\<\
Understand the performance of the functions wrt random initial conditions\
\>", "Text",
 CellChangeTimes->{{3.863702871824973*^9, 3.86370289295422*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"b6d5a503-f5ca-471f-9280-ef8cf6caad0d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ffCartPendulum", "[", 
   RowBox[{
   "ICs_", ",", "n_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "A_", ",", 
    "order_", ",", "maxIter_", ",", "InitGuess_"}], "]"}], ":=", "\n", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x", ",", "data", ",", "xdot", ",", "f", ",", "\[Theta]", ",", 
      "\[Theta]dot", ",", "\[Lambda]1", ",", "\[Lambda]2", ",", "\[Lambda]3", 
      ",", "\[Lambda]4", ",", "\[CapitalDelta]t", ",", "bcs", ",", "eqns", 
      ",", "sv", ",", "froot", ",", "xff", ",", "xdotff", ",", "xff0", ",", 
      "xdotff0", ",", "\[Theta]ff0", ",", "\[Theta]dotff0", ",", "uff0", ",", 
      "\[Theta]ff", ",", "\[Theta]dotff", ",", "uff", ",", "\[Lambda]1ff0", 
      ",", "\[Lambda]2ff0", ",", "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", 
      "expr", ",", "uMin", ",", "uMax", ",", 
      RowBox[{"xGuess", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         SubscriptBox["xGuess", "i"], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"\[CapitalDelta]t", "=", 
      RowBox[{"\[Tau]", "/", "n"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"{", 
        RowBox[{
        "x_", ",", "xdot_", ",", "\[Theta]_", ",", "\[Theta]dot_", ",", 
         "\[Lambda]1_", ",", "\[Lambda]2_", ",", "\[Lambda]3_", ",", 
         "\[Lambda]4_"}], "}"}], "]"}], ":=", 
      RowBox[{"{", "\n", "\t", 
       RowBox[{"xdot", ",", "\n", "\t", 
        RowBox[{
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"A", " ", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
         " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"A", " ", 
            RowBox[{"\[Theta]dot", "^", "2"}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
           RowBox[{
            RowBox[{"1", "/", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"A", " ", 
                RowBox[{
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
              ")"}]}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Lambda]4", " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", "\[Lambda]2"}], 
             ")"}]}], "+", 
           RowBox[{"A", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", "\n", 
        "\t", "\[Theta]dot", ",", "\n", "\t", 
        RowBox[{
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"A", " ", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
         " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{"1", "/", 
               RowBox[{"(", 
                RowBox[{"1", "-", 
                 RowBox[{"A", " ", 
                  RowBox[{
                   RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
                ")"}]}], ")"}]}], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "\[Lambda]2"}], " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
              RowBox[{"\[Lambda]4", " ", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
             ")"}]}], "-", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "-", 
           RowBox[{"A", " ", 
            RowBox[{"\[Theta]dot", "^", "2"}], " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", "\n", 
        "\t", "0", ",", "\n", "\t", 
        RowBox[{"-", "\[Lambda]1"}], ",", "\n", "\t", 
        RowBox[{
         RowBox[{"2", "/", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"A", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A", "-", "2"}], 
            ")"}], "^", "3"}]}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"4", " ", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"A", " ", 
                  RowBox[{"\[Lambda]4", "^", "2"}], " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
                 RowBox[{"4", " ", "A", " ", 
                  RowBox[{"\[Lambda]2", "^", "2"}]}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"A", "+", "2"}], ")"}], " ", 
                  RowBox[{"\[Lambda]4", "^", "2"}]}]}], ")"}]}], "-", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"A", " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "-", 
                 RowBox[{"3", " ", "A"}], "+", "2"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"A", " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A", "-", 
                 "2"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"A", " ", 
                  RowBox[{"\[Theta]dot", "^", "2"}], " ", "\[Lambda]2"}], "-",
                  "\[Lambda]4"}], ")"}]}]}], ")"}]}], "+", 
           RowBox[{"A", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"A", "-", "2"}], ")"}], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A"}], ")"}], 
            " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"A", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A", "-", "2"}],
              ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"\[Lambda]2", "-", 
              RowBox[{
               RowBox[{"\[Theta]dot", "^", "2"}], " ", "\[Lambda]4"}]}], 
             ")"}]}], "-", 
           RowBox[{"4", " ", "\[Lambda]2", " ", "\[Lambda]4", " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"3", " ", "A", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
              RowBox[{"3", " ", "A"}], "+", "2"}], ")"}]}]}], ")"}]}], ",", 
        "\n", "\t", 
        RowBox[{
         RowBox[{
          RowBox[{"4", " ", "/", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"A", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A", "-", "2"}], 
            ")"}]}], " ", 
          RowBox[{"(", 
           RowBox[{"A", " ", "\[Theta]dot", " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{"\[Lambda]2", "-", 
              RowBox[{"\[Lambda]4", " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}]}], ")"}]}], 
         "-", "\[Lambda]3"}]}], "\n", "}"}]}], ";", 
     StyleBox["\[IndentingNewLine]",
      FontWeight->"Plain"], 
     RowBox[{
      StyleBox["xGuess",
       FontWeight->"Plain"], 
      StyleBox[" ",
       FontWeight->"Plain"], 
      StyleBox["=",
       FontWeight->"Plain"], 
      StyleBox[" ",
       FontWeight->"Plain"], 
      RowBox[{
       StyleBox["Table",
        FontWeight->"Plain"], 
       StyleBox["[",
        FontWeight->"Plain"], 
       RowBox[{
        RowBox[{
         StyleBox["If",
          FontWeight->"Plain"], 
         StyleBox["[",
          FontWeight->"Plain"], 
         RowBox[{
          StyleBox[
           RowBox[{"i", " ", "!=", " ", 
            RowBox[{"-", "1"}]}],
           FontWeight->"Plain"], 
          StyleBox[",",
           FontWeight->"Plain"], 
          StyleBox[
           RowBox[{
            SubscriptBox["xGuess", 
             RowBox[{"i", "+", "1"}]], " ", "=", " ", 
            RowBox[{
             SubscriptBox[
              StyleBox[
               RowBox[{"x", 
                StyleBox["Guess",
                 FontWeight->"Plain"]}]], "i"], " ", "+", 
             RowBox[{"\[CapitalDelta]t", "*", 
              RowBox[{"f", "[", 
               SubscriptBox["xGuess", "i"], "]"}]}]}]}],
           FontWeight->"Plain"], 
          StyleBox[",",
           FontWeight->"Plain"], 
          RowBox[{
           SubscriptBox[
            StyleBox["xGuess",
             FontWeight->"Plain"], "0"], " ", "=", " ", 
           RowBox[{"{", 
            StyleBox[
             RowBox[{
              RowBox[{"ICs", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"ICs", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", 
              RowBox[{"ICs", "[", 
               RowBox[{"[", "3", "]"}], "]"}], ",", 
              RowBox[{"ICs", "[", 
               RowBox[{"[", "4", "]"}], "]"}], ",", 
              RowBox[{"InitGuess", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"InitGuess", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", 
              RowBox[{"InitGuess", "[", 
               RowBox[{"[", "3", "]"}], "]"}], ",", 
              RowBox[{"InitGuess", "[", 
               RowBox[{"[", "4", "]"}], "]"}]}],
             FontWeight->"Plain"], 
            StyleBox["}",
             FontWeight->"Plain"]}]}]}], 
         StyleBox["]",
          FontWeight->"Plain"]}], 
        StyleBox[",",
         FontWeight->"Plain"], 
        StyleBox[
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"-", "1"}], ",", 
           RowBox[{"n", "-", "1"}]}], "}"}],
         FontWeight->"Plain"]}], 
       StyleBox["]",
        FontWeight->"Plain"]}]}], 
     StyleBox[";",
      FontWeight->"Plain"], "\n", 
     RowBox[{"bcs", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"x", ",", " ", "0"}], "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"xdot", ",", " ", "0"}], "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"x", ",", " ", "n"}], "]"}], "==", 
         RowBox[{"Subscript", "[", 
          RowBox[{"xdot", ",", " ", "n"}], "]"}], "==", "0"}], ",", 
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"\[Theta]", ",", " ", "0"}], "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"\[Theta]dot", ",", " ", "0"}], "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "4", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"\[Theta]dot", ",", " ", "n"}], "]"}], "==", "0"}], ",", 
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"\[Theta]", ",", " ", "n"}], "]"}], "==", "\[Pi]"}]}], 
       "}"}]}], ";", "\n", 
     RowBox[{"eqns", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Join", "[", 
        RowBox[{"bcs", ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Thread", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
               RowBox[{"Subscript", "[", 
                RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], "==", 
             "\n", 
             RowBox[{
              RowBox[{
               RowBox[{"1", "/", "2"}], " ", "\[CapitalDelta]t", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"f", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}], "]"}], "+", 
                 "\n", 
                 RowBox[{"f", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], 
                  "]"}]}], ")"}]}], "+", "\n", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"x", ",", " ", 
                  RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"xdot", ",", " ", 
                  RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]", ",", " ", 
                  RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]dot", ",", " ", 
                  RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]1", ",", " ", 
                  RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]2", ",", " ", 
                  RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]3", ",", " ", 
                  RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]4", ",", " ", 
                  RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}]}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
       "]"}]}], ";", "\n", 
     RowBox[{"sv", " ", "=", " ", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", "\n", 
            "\t\t\t\t\t", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "7", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "8", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", "1"}], 
       "]"}]}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"froot", ",", "data"}], "}"}], "=", 
      RowBox[{"Reap", "[", 
       RowBox[{"FindRoot", "[", 
        RowBox[{"eqns", ",", "sv", ",", 
         RowBox[{"MaxIterations", "->", "maxIter"}], ",", 
         RowBox[{"EvaluationMonitor", ":>", 
          RowBox[{"Sow", "[", 
           RowBox[{"Norm", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               SubscriptBox["x", "n"], ",", 
               SubscriptBox["xdot", "n"], ",", 
               SubscriptBox["\[Theta]", "n"], ",", 
               SubscriptBox["\[Theta]dot", "n"]}], "}"}], " ", "-", " ", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], "]"}],
            "]"}]}]}], "]"}], "]"}]}], ";", 
     RowBox[{"xff0", "=", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", 
     RowBox[{"xdotff0", "=", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", 
     RowBox[{"\[Theta]ff0", "=", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", 
     RowBox[{"\[Theta]dotff0", "=", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", 
     RowBox[{"\[Lambda]1ff0", " ", "=", " ", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", 
     RowBox[{"\[Lambda]2ff0", " ", "=", " ", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", 
     RowBox[{"\[Lambda]3ff0", " ", "=", " ", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", 
     RowBox[{"\[Lambda]4ff0", " ", "=", " ", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", 
     RowBox[{"expr", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"Subscript", "[", 
              RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}], "^", 
            "2"}]}]}], ")"}]}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], 
          RowBox[{"Cos", "[", 
           RowBox[{"Subscript", "[", 
            RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}]}], "-", 
         RowBox[{"Subscript", "[", 
          RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}]}], ")"}]}]}], ";", 
     "\n", "\n", 
     RowBox[{"uMax", " ", "=", " ", "2"}], ";", "\n", 
     RowBox[{"uMin", " ", "=", " ", 
      RowBox[{"-", "2"}]}], ";", "\n", 
     RowBox[{"uff0", "=", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Piecewise", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"expr", ",", 
                RowBox[{
                "uMin", " ", "<=", " ", "expr", " ", "<=", " ", "uMax"}]}], 
               "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"uMin", ",", 
                RowBox[{"expr", " ", "<", "uMin"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"uMax", ",", 
                RowBox[{"expr", " ", ">", " ", "uMax"}]}], "}"}]}], "}"}], 
            "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
     "\n", 
     RowBox[{
      RowBox[{"xff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xdotff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "\[Pi]"}], "]"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"uff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"uff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\n", "\n", 
     RowBox[{"{", 
      RowBox[{
      "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
       "uff", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
       "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "data"}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.863893336562357*^9, 3.8638935104547806`*^9}, {
   3.863893544100028*^9, 3.863893549383339*^9}, 3.864135408269006*^9, {
   3.864142771556004*^9, 3.8641427819726334`*^9}, 3.8642366861025925`*^9},
 CellLabel->
  "In[2139]:=",ExpressionUUID->"af3ea33d-8e3a-4566-b4c0-08bbf9c4fe8b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  StyleBox[
   RowBox[{"n", "=", "20"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  RowBox[{
   StyleBox["\[Tau]",
    FontWeight->"Plain"], 
   StyleBox["=",
    FontWeight->"Plain"], "5"}], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Tau]1", "=", 
    RowBox[{"\[Tau]", "*", "1.25"}]}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"A", "=", "0.2"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"order", " ", "=", " ", "4"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"maxIter", " ", "=", " ", "100"}],
   FontWeight->"Plain"], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotMin", " ", "=", " ", 
    RowBox[{"-", "1"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotMax", " ", "=", " ", "1"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Min", " ", "=", " ", 
    RowBox[{"-", "\[Pi]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Max", " ", "=", " ", "\[Pi]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]dotMin", " ", "=", " ", 
    RowBox[{"-", "1"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{"\[Theta]dotMax", " ", "=", " ", "1"}],
   FontWeight->"Plain"], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"xdotMin", ",", "xdotMax"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Init", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]Min", ",", "\[Theta]Max"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]dotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]dotMin", ",", "\[Theta]dotMax"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"ICs", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "xdotInit", ",", "\[Theta]Init", ",", "\[Theta]dotInit"}], 
    "}"}]}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"InitGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.1"}], ",", "0.1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.1"}], ",", "0.1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.1"}], ",", "0.1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.1"}], ",", "0.1"}], "}"}], "]"}]}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"InitGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
       "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
       "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "data"}], "}"}], "=", 
     RowBox[{"ffCartPendulum", "[", 
      RowBox[{
      "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", "order", 
       ",", "maxIter", ",", "InitGuess"}], "]"}]}], ";"}], " "}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1b", ",", "xdot1b", ",", "\[Theta]1b", ",", "\[Theta]dot1b", ",", 
       "u1b", ",", "J1"}], "}"}], "=", 
     RowBox[{"testSwingUp", "[", 
      RowBox[{"ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "u1a", ",", "A"}], 
      "]"}]}], ";"}], " "}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x1c", ",", "xdot1c", ",", "\[Theta]1c", ",", "\[Theta]dot1c", ",", 
      "u1c", ",", "J"}], "}"}], "=", 
    RowBox[{"testWithFB", "[", 
     RowBox[{
     "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
      "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A"}], "]"}]}], 
   ";", 
   RowBox[{"p1a", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1a", "[", "t", "]"}], ",", 
        RowBox[{"u1a", "[", "t", "]"}], ",", 
        RowBox[{"x1a", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1a", "[", "t", "]"}], ",", 
        RowBox[{"xdot1a", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1a\>\"", ",", "\"\<u1a\>\"", ",", "\"\<x1a\>\"", ",", 
         "\"\<\[Theta]dot1a\>\"", ",", "\"\<xdot1a\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Feedforward solution\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"p1b", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1b", "[", "t", "]"}], ",", 
        RowBox[{"u1a", "[", "t", "]"}], ",", 
        RowBox[{"x1b", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1b", "[", "t", "]"}], ",", 
        RowBox[{"xdot1b", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1b\>\"", ",", "\"\<u1b\>\"", ",", "\"\<x1b\>\"", ",", 
         "\"\<\[Theta]dot1b\>\"", ",", "\"\<xdot1b\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Test on dynamics\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"p1c", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1c", "[", "t", "]"}], ",", 
        RowBox[{"u1c", "[", "t", "]"}], ",", 
        RowBox[{"x1c", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1c", "[", "t", "]"}], ",", 
        RowBox[{"xdot1c", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1c\>\"", ",", "\"\<u1c\>\"", ",", "\"\<x1c\>\"", ",", 
         "\"\<\[Theta]dot1c\>\"", ",", "\"\<xdot1c\>\""}], "}"}]}], ",", 
      RowBox[{
      "PlotLabel", "->", "\"\<Backward Integrate feedback solution\>\""}], 
      ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"p1d", "=", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"data", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"AspectRatio", "->", 
        RowBox[{"1", "/", "3"}]}], ",", 
       RowBox[{"ImageSize", "->", "400"}]}], "]"}]}], ";"}],
   FontWeight->"Plain"], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"Grid", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"p1a", ",", "p1b"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"p1c", ",", "p1d"}], "}"}]}], "}"}], "]"}], 
   "\[IndentingNewLine]"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{"{", 
  StyleBox[
   RowBox[{
    RowBox[{"\[Lambda]1ff0", "[", "0", "]"}], ",", 
    RowBox[{"\[Lambda]2ff0", "[", "0", "]"}], ",", 
    RowBox[{"\[Lambda]3ff0", "[", "0", "]"}], ",", 
    RowBox[{"\[Lambda]4ff0", "[", "0", "]"}]}],
   FontWeight->"Plain"], 
  StyleBox["}",
   FontWeight->"Plain"]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.863702943662017*^9, 3.863703035828568*^9}, {
   3.8637035036430883`*^9, 3.8637035037600527`*^9}, {3.863703942891737*^9, 
   3.8637039537012815`*^9}, {3.8638793561155577`*^9, 
   3.8638793562315187`*^9}, {3.863890389284317*^9, 3.8638904368171277`*^9}, {
   3.863890551127593*^9, 3.863890597328827*^9}, 3.863890716823636*^9, 
   3.8638909523833485`*^9, {3.8638911861186466`*^9, 3.863891231675086*^9}, 
   3.8638912749332604`*^9, {3.863891409492258*^9, 3.8638914236697264`*^9}, {
   3.8638935298715763`*^9, 3.863893532749655*^9}, {3.8638935699717607`*^9, 
   3.8638935749001856`*^9}, {3.8638936191810327`*^9, 3.863893634085269*^9}, {
   3.863893921803315*^9, 3.86389396796556*^9}, {3.8638940391558075`*^9, 
   3.863894080084726*^9}, {3.8638941355729923`*^9, 3.8638941356839547`*^9}, {
   3.86389427077378*^9, 3.863894270855754*^9}, 3.864132937101755*^9, {
   3.8641329740867853`*^9, 3.864132993387539*^9}, {3.86413303407837*^9, 
   3.864133049119502*^9}, {3.8641330991942964`*^9, 3.8641331354165735`*^9}, {
   3.864133240558546*^9, 3.8641332475682774`*^9}, {3.8641337526108294`*^9, 
   3.8641337885471992`*^9}, {3.8641338280264225`*^9, 
   3.8641338296229057`*^9}, {3.8641417184758177`*^9, 
   3.8641417253026075`*^9}, {3.864141818165553*^9, 3.864141824729431*^9}, {
   3.8641420479491887`*^9, 3.864142073292987*^9}, {3.864142809081861*^9, 
   3.8641428223905535`*^9}, {3.8641428662393637`*^9, 3.864142907413038*^9}, {
   3.8641429688551536`*^9, 3.8641430039408007`*^9}, 3.8641430624478636`*^9},
 CellLabel->
  "In[2140]:=",ExpressionUUID->"3024c605-13d1-4af1-8ddb-6b0488dd66d7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   RowBox[{"-", "0.7570280093989719`"}], ",", 
   RowBox[{"-", "2.43780778468943`"}], ",", "0.3044371761907141`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.8641430640893307`*^9, {3.864143094166597*^9, 3.864143104412281*^9}, 
   3.8642366895364823`*^9, {3.864399127566967*^9, 3.8643991927177773`*^9}, 
   3.864408290535779*^9, {3.8644084656048393`*^9, 3.864408535203203*^9}, {
   3.8644121372506638`*^9, 3.8644121664991503`*^9}},
 CellLabel->
  "Out[2150]=",ExpressionUUID->"7e3ac001-d56e-48d7-b974-eee191ed592f"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1:eJzUvHk0ld//93+O8RgqHGlCIyEZigaqvUUqChkqJUKGCiHJUEKDSkkSilAq
Uua5Yh9zlPGYpxDOoQiZx9/1Wb/vPv3W+16f9b5/9393/7T2Osd19rX3vvZ+
vV7Px/Nab3FJ34qNRCJVcZNI//l/w6P5mEhxn32pm+ZOvvRmp2nlcuv02SCQ
LJH1anQtO61iyQ4ejjPV4Obu2zXDd9lo+x8doMXqNoEsRvOrpzVkmpX8zBLF
JZ1g2VeRBb1JEu2otNWIyMEe0NH4w+RV/iJKrbt+pWwXE9T6lR+44ziPVIVk
kjhu/ALvy3aEubycQTazQS/enBwGzE9IO+vpJLpUwtiedHQU3EgMdOy4Pobu
n+KSmLcbAytu7Dl6v3kYWZZ6WivaTgDr3jdS9qYDKJ971bGLxlNgIua88uWE
bqQo6B3S7zIDhGp+27pl0dHZP3tldezmQKBzj5TxuzfoZWSx6OTDBRD0cOeb
hOIqkBag0lqrT4LPDLJoD+mdwOXjXr0XR8jQxtPCcmk6E6DyN6P3TrPBI02H
bvvoD4PzB3fnnj/JDq9IJP2Rzv4DIuIUMy5e4ICfh06Tk6mT4PGfXB/Hq5zw
F+2wrqvgDOiLv+Jq68wFh4Y1d4lEzoEizaAwX19uWHHv0WysxCIg67Z0P/Km
wA/JqG1THAmS1DLJ0e48cPRJ42rBGDK8u2LyaK0fL1ygFKnJRrJBx1OWBZM3
+WCbMff0DVd22OWjdA485YfticLVEzocUPjJs5Z7L5fAR/FWDv5CnPCtgIx7
afhSuPL9L97Yj5ww33ntgc3vl8G7bR+/9Zpzwch10aJ7DQWgbqDjfZ5hLph7
bYZkWy0AHymy6cs5cMP12txzG08Iwvn8vNxsBjdMr5L2b64ThD2c+/3/HKbA
ByULCuvOCEHzsKUrrryiwCeX+y+cbROCPldETDS7KfDacvFlG4ypcNhj79pm
fh74Tpqz3KWTCmX03Nrs1/NArjHyqnxTYbhyq4bhLNGOVUjximT8bUtbxOvM
2y9ntVsP56Qa/fzbro3x2Aoui7DaU2nH9mwY/dtezHbOuOOwgtXWVtA8cG38
b7v0jPz5i5dXstqJyY6Ti4t/2+WPW52YNkng+59KdNmInbZuPitifscXYF9Q
K27Zwka7W5nbY3S8DkwuGd95dBsbjWtSdIhDuQ1sVkjr33CeTLvwMKxw4akg
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
EjO6TKOT3//th/vfr/8B/onHEA==
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{287, 1998, 217, 218, 219, 220, 221, 222, 223, 224,
                 626, 504, 407, 334, 286, 259, 648, 526, 429, 356, 308, 674, 
                552, 455, 382, 225, 627, 505, 408, 703, 581, 335, 682, 560, 
                731, 463, 716, 594, 743}}], 
               PolygonBox[CompressedData["
1:eJwVzTksBGEABeBx14ijdTRYFRWFsIVEISIKVyVBgRUdEkeNZFGjcFZUu0Sh
WCQWS7GioCAKjaN0lD7Fl/feP/PPlA2Md0YygyDIYIKbvCBIEXVYRMyDEb48
m7Gz2LR7qGLNLiehT3LhvUH7XV+gmV07xLWez7JeTFwfJaY38KB/uz+rZ7Nl
J2Qrvfq+rCOt38ouqvV1WfF/n1M7Kdt5Zco+lk0882SnZTdvJP1vSH44v5eL
8kSGeaHF3pO1pPQr2UGBviJLONTPZRtjelw28qj/+P6cnsO23ceBXs+dXsOG
XsmZPs2lO8P2p75EmEJWnZVypEf49d68ncuO3U+IP9ArPdM=
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1:eJwV0EtQTXEcB/Bz24S8a09eGVZselAaCzMWNl3uNUNRzKgWWVVeizwqxmPP
pZhhxaK6myYkElPDcFe1iBmhZERkKXz+i8/8vr/v+Z9z5pz8muMVDVlRFMVI
08eb7Ch6xXJlOZf4ylEHX7i+Ud7PHbJ0Z/itX2bfwUWmOaIf0j9nkGfMsdS1
Mtr5Qo1zT/W/WGIvpY0pql0b0BfISW4T053mp36xfTutTHJY/0S/QU7QGT5M
d4pZsd6eJs9+jRx5Gxf4zCFdv3PN8gD59hTr5Qxb5Qfskzv4x0n7D/eMycVy
mjq5h1z5KovkETbL9yiRd5qPOC9/okp+7DlJM8M73XuzjF6awjlzDy/Dd9rH
zNXcYF34n2ac17y1j5tbuM9e+0dzV/in3LKPmn/NE+Z3706E+xjVFZk91Mq7
zUG65ZXmFRbKw2yS71IsnwvvoDJ8m+c1yv2ssl9nrRznJvM062acOyZ3scJ+
mQXh/ZxlgoO6h86tkStI8Ycm/Td9tlxICx84oP8PR4Bg9g==
                "]], 
               PolygonBox[CompressedData["
1:eJwt0UtQjlEYB/C3NiF2bpUWFmqlCyObzFgUuTRNZlq0cMuGxFcsyyJUKwqV
JTZdMJM27mNMQzPhC92YZDIWZowZpNK45ndmLH7z/J/nfc8573e+1RWxXUcT
oyhK4CHxpCga5LX8ijFGGSHRS+kU084cNRYPh/XyKnbSxneqPRvybL18gOss
MWv6f+Bx7oc99RdJk3fQyiwxs5dePSH3k6m/wjp5jI1yLxXyNRbLjcxbM6Hf
JN/iWPgutZ974TvVdlLlUvUpg3K22s12+b1awAMuhPPUGTVc1gv7f1LLw29n
0vydupm71Ok/qCUM8Fg/rmZwmVz9R7WM54zq36p53GC/vkjt46qcrDbw17lv
9PnyTWrCfYX9w7lymtpGihwnS+5im3yeaY6EM+1TKz9ijf4SOfIIG+Qe9snd
LJJP88eaav0dUvWtrAzfyTm+URXu0XvZ8l66WGh2it/mMf1tUsKdskLeSgtT
HDaLey9L3kMnC8xO8st8uX4LzXyl0vyZ+Vp5Nx0kmdXz03yZvpCzfOFQ+K/N
f7BUX8AZPnPQsyfm/wAlR2jk
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              
              LineBox[{1, 153, 125, 101, 80, 63, 51, 163, 135, 111, 90, 73, 2,
                154, 126, 102, 81, 64, 52, 164, 136, 112, 91, 74, 3, 155, 127,
                103, 82, 65, 53, 4, 156, 128, 104, 83, 66, 54, 5, 6, 7, 8, 9, 
               10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,
                26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 157, 129, 105, 84, 67,
                55, 36, 158, 130, 106, 85, 68, 56, 165, 137, 113, 92, 75, 37, 
               159, 131, 107, 86, 69, 57, 166, 138, 114, 93, 76, 38, 160, 132,
                108, 87, 70, 169, 141, 117, 96, 58, 167, 139, 115, 94, 77, 
               171, 143, 119, 99, 39, 161, 133, 109, 88, 173, 145, 121, 71, 
               170, 142, 118, 97, 59, 168, 140, 116, 95, 175, 147, 123, 78, 
               172, 144, 120, 178, 150, 100, 176, 148, 183, 124, 180, 152, 40,
                162, 134, 181, 110, 177, 149, 184, 89, 174, 146, 182, 122, 
               179, 151, 185, 72, 98, 60, 79, 41, 61, 42, 43, 44, 45, 46, 47, 
               48, 49, 62, 50}]}, 
             Annotation[#, "Charting`Private`Tag$362467#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1WWYVlUUBtCPkUZCaWmQEqQRkBYElJCQ7k7p7i4DFQsMurtLurtTQmkQ
pCVEcJ3HH+vZ7963Zu49ZyZDs07VO0aLRCLvREUia9X66h8GgylELG6Z9zR/
Lv9IdTKyzryB+UV5CIWJzadmr7FYbs1t5/XS/yv/RA0yMcEsHRvkHvzqvIb6
S/JQijBd/xa75Th8Jr/OEnmr+gFt5KVqYU7Kh9Ra/OV+vdUXZifVn9VNarnw
DD7Wz1PzcpZD+v1qDa7zpn6imp5TbNTvVCtzmZ761WoJznNOf1itzXrPbhTO
MxsWfjf5Pd6VZ6g52CPH5XM5MUvltiyTi4Rnynfcp4/8Uv6FmszX5+OwnDl8
EzkDm+RebHBNY/0VeThFiccXZklYJrfjrvP66iNM0tciCxuNmphdlUdQjFe5
Z97PPBqT9bXJGt6peVOza/JIihOf++abaRbep34UJUjAA/MtbGUb22nuvBuO
jaYkCXlo3t88iin6OmRjh3kLs5vyGEqRiH2xIpFx5klZrm/PI+cO0L/CVH1d
soe1qM/IZrl3+LbOa6n/Ux5LaWbqc7JXfo0v5WSskDuwPHxTTst/u36gHJ1p
+s1qeerJC9T8HJEPhLUX1rX8s5opXM8W/S61Svh29NGvUUtyIawx/RG1Tvi9
2eV5rdRb5sfVT9X1apmwh8N6089S32afvEetGvaP/JWanJXyNvVDPpFXqEU5
Iz92/0FyDKbr67NQLsBROUdYk2GfsFXuy27XtNbfDnuVMiTma7MUrJLDH5wn
zhusj8kMfQNyhv3n++1xrE3Yv2FvUJYkPDXfS1vH7oT1zPsk5Zn5EPNYzNQ3
5O2wHszbmd2Vx1GOZPxjPtQ8NrP0jcgVnm/e3uxe+NaUJznjzVKyWu7Ec+cN
08dhtr4xucO3Ne9gdj+8YyqQgm/M3mCN3Jl/nTdcH5c5+iYskgtyTM7DJDkz
2+R+HHTNJ/oH4X3yAbP1udgvp+RbORVr5e1qRbrIK9Vi/Ca/cJ8Rcjzm6reo
FWgqL476/3/BOY6HZ6o1w74kr36ymiWsD7aH761+FP5W0F+/Vi3F72HN6o+q
dcOe4pDndlQfmp9Qx6sb1LJcDGtQP0fNzQF5r1otvDf5OzU168LeVyvRVV6l
Fues/NL9R8qvMk/fjCVyIU7I+ZgiZ2WHPIDDrumkfxS+ERVJxfdmafhV7kaE
Ufr4zJebkz/sR4c6m/0d3j2VSE208Ls71sWxx+HnpzJpiOKYY8c5wUlOccDa
P62e4TfOco7zXOB3urrfk/DzUYW0vMJo8wQskFtQgKn6bOyUB/KH67vpn8o/
sFF+P3w/ea6aJ6wPDoZ9o1bnGunC+Wpa1svdic4YfUIWyi0pyEXP6G72TJ5A
VdITg0uOXeYKV7nGdW5wkx6u+8d5E6lGBmIy1jwRi+RWvMM0fXZ2yYNYJ5cO
6y68W7Uet8K6c9//AD5iMFo=
               "]]}, Annotation[#, "Charting`Private`Tag$362467#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV02WAFVUYBuBhd+kG6Vy6u6SWElDAWBAQCUVRQVJUOlVKpQxQsAUFuyWU
sAU7QSkFwaC7fb4fD+97vjOXe2fmbPrAEZnDsyRJssg/+1OSpHpakvyWmiSP
cRPNKccBezXs/a4/zs20oDwH7dW0t01fwiBaks4he7XsbdeXcgutqEAH8xPy
bSZzLYddX9t8h/4Et9KailxmflK+wxR6csT1dcx36k9yGxlU4qi9uvZ26U8x
mDZU5pi945ygnmv+MHuaIbSlCift1bf3p/4Mt9OOqpyy18Debv1ZhtKeapy2
19DeHv05hsW9Up0z9s5yjkau+cvseYbH/VGD8/Ya29urL2MEHakZaX5KvstU
enHB9U3M9+nLGUknMs3S2Kg/QK2YW5+W7zGN3lz0+abmf+svMIrOdDfLykf6
g9SOufUZ+T7T44xYF+EH/bqg5+YL/SESmln/I1/kDgZYF+Qb/XJ66Nn4OJ6D
LM/cOCuyOD/ro2Vl6sRn5Fk5Vq6K5yvLMYV74mzKokzgx/hOWYnp9LHuI/Mw
ji/j+cp0pvJwnCFZkon8an2nrEIW/VL5r1wR50Evw2j9BlmIb/Ur4izr2flE
nxfnWC/BL3rduEY/J1dzL9cHs7xs0h8hhebW/8mV8TvoQr1I8/NyDffRl1Ra
mO+XL3EXXalPGi3tHZAvczfdaEBWspGdHOQkF7nJQ17ykZ8CtPL/HJSvMIYr
aRjfZX5BrmUG/ShIa/ND8tV4Z1xFo/h+84vyA2bSn0JkmB+WrzGOq+lploNP
9fk0ju+1TvhQnxXnKp6DdT42649SmDbWR+TrjOdG68J8p19DLz0nn+kLaBK/
Md436/TZDNKL8VO867g3PT9f6SNlBRbpg2UpJrEl3oGsyiV6W3k0npl8Qw6V
ZZkcZ9V6YFzHeL63HiUrMo1M694yF5/rC2kaz8Y6hfX6nLg3itDO7Jh8k4l0
pxlFKUZxSlCSUpSmDO197rh8i0n0iDMfz8k8lQ36/fFb431ZF+BrfTFD9NJs
jfMlq8XfY9yj9f+/S7sK
               "]]}, Annotation[#, "Charting`Private`Tag$362467#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwNzUOQZVEUBMDfMz22bdu2bdu2vRvbtm3btm3bVi4yqurcePGSNe9SvXNQ
IBD4yeDgQKB0qEAgDh/0yxxgK0MYyjCGM4KRjGI0YxjLOMr4Pi4f9SscZBvV
3JLzW7/HacZT1i0en/SrHKKenZ5gntnbqa6n4I9+nzM0trMQjtf2BMrp8fms
X6OFnpPIHLbrywyE4rm9gxp6Sv7qD2it5yEaZ+0mMivh6UJR3ri3k/mJSQ9K
MtG9vExAL77YHWUh+nHdbilz0YcodKUYAzjivYHMSG9C05ki9OeF97YyH32J
QXdKsNNbTZmKf3onWZiHehuZl+ics5vKbETgrd1eFiAWk+wKMiFf9RscpaGd
iTC8tHdRS09NgEf2eZrp2YnIO3syFfVEfNNvcozdTGEq05jODGYyi9nMYS7z
mM8CFrKIxSxhKctYzgpWUsm/EvNdv8Vx9lDbLQ1BPLYvsIrKdhJ+6Ldppecm
Kt0ozkBOeGskMxOWV/Ze6uhpCcET+yKrqWIn5ad+h5PsYw1rWcd6NrCRTWym
qm+S8Uu/yyn2U9ctHSF5al+iuZ6DSLy3O8iCxKYnpRjEFm//ARlvg5E=
               "]]}, Annotation[#, "Charting`Private`Tag$362467#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1WW4FGUYBuClQ0IECWkBxUBKOkRppCREuru7QUKklAbp7m6QUBCluyWU
TinpEO/vx329z/vM7Ll2d2b2pG/QtlKbKJFIpHzUSKRPjEgkd6xIZGPMSKQy
MTmkW0FfvqUf/cnjvJ8dr0IsDutW8rX+tL0j73FPN4C8+k32qsTmiG4V1fR/
2jvxPvd1A8mn32z/mjgc1bXS3ZWHUJDVum90Z+TOZOaBrrvupTye0nyny6/b
IlcjLgPsMZkhH3O8tXxPHkohRtmTsExe43h1+azchenyu3wQzjfjh/fKfPti
8xP+9Zoe5ivdBnOCOdfMzA7KhPdnpuAXVtuXmznYwyCvL2BuDZ/T/MacYqZl
G2/YB5qxwnVgpn2B+RHHvbaNeV83jFlyJgrLo823WS6vdV4N+ZzclQ/D+fYE
LJAfOt5T/k/+iS/5XlcwvGe5OvE4oWureyAP5zPW6Wrqzsvd+IhHusEU0v9q
r0F8TurWM4ShFA6fUV+TBJzSbaCW/i97dz7msW4Yn+m322uRkNO6duEayD9Q
hI262rq/5R5kCe/VnpCF8hPHe8mv5YnMC9eXsvIE8x3WyCvMnAx3fhHzt3B/
mLXNqWY63gz3nBk73PPMsi80P+aPcL97bXvzoX69+aM523wv/D0+t48xk4br
zwr7UjMbu8P19vo65oVwDc2e5gwzQ7j3wmcO74FF8lPn9pYjTLKXC9dSTsna
cK7jn4d7Uq5DIgbZ4zBbPuN4B/mRPIIv2KSrq7so9yIrz3R9dFGYbC/Pj7ov
7L/LdXmLs7rNjGAkoxjNGMYyjqLhe3JuPRJzTreF8RRzbKeuPkk4r9vKBIo7
tkvXgLf5S/cL9fSX7L3JxnPdT5QI36e9IUn5W/cr9fWX7X3IzgvdREqGZ9Pe
iGRc0HXUPZZHUpRtuga6K3JfcvBSN4lS+r32xiTnoq6T7kn4vaEY23UNdVfl
b8kZvkd7IhbLr8JvsRyVKfYK4X6VU7FOnux4aXmf3IQU4Zm1x2WOfMnxzvLT
8FvAHPl9istjzWSslJeZ2cP96PxG5rXwTJv9zJlmxvDM8Wm4L8y32MIS+xIz
a7gW4bcj/N8wo7GRqY7PNz8M9wUV7ZPM1OE3gfX2leHvhs/ntWXM/bqmTJPT
h2dRHhx+A5krX3ZeF/lZeG4owTh7clbJOxxvLF+X+5MrXC97YpbKr8P/NTk6
0+xfhWdZ96X9gNyMlFzRddU9D98VJfld10R3Qx5AbiLhverL6g/KzUnFVd0f
NNXftA8kD1GYri+nPyS3IDXXdDtppr8VflPIS9TwvOvL6w/LLUnDdd0uZlLB
sSO6VqTlhm43s6jo2FFda9JxU7eH2Xzl2DFdG9JzS7eXOVRy7LiuLe9yW7eP
5vrb4XeDfERjrr6y/oTcjgwMscdjnrzIzBKeZf5xbjfzRbhulGK/rkU4Fu5f
8hOdefoq+pNyezJyR3eA+SxgIYtYzBKWsoyqXnfK+R3IxF3dQVrq74R7igLE
CPeJLgbT5UrhuZLTsEFeZeYKzzLLvf5/+A9BUA==
               "]]}, 
             Annotation[#, "Charting`Private`Tag$362467#5"]& ]}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"Feedforward solution\"", TraditionalForm], 
         PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1a\"", "\"u1a\"", "\"x1a\"", "\"\[Theta]dot1a\"", 
           "\"xdot1a\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
B6KXErYo9AKs94L/iar9Ve4CWO892Klr+yiqGWC9p2LfXtR8qxZgvTfoffAf
1106wHpv2ELizB7RcID1np6tult2beKS3hOSa3hyUjFzSe+dPtTqXJP5EWG9
1903+PPxiNeS3tvT/1P8VsbnJb230tr/LWN32ZLe+yQgRZdlVi/pve4/deEn
UP2S3isvtNpyfT9zSe/5BDiIbApiLum9G+Rr2QKizCW9132sKGyEXQ+w3rN9
+kS6TqkOYL03JFeXMtbxDWC9V/nY3kirrgxgvZcj7NF59QMdYL1XeOrY+1Oz
6QDrvcjXnLE+p8IA1nubTizb6zPyFmG9F/sjJXHO5gvCeo8auSIv9UgJwnqv
e2/ijS8vqxHWe5fO+RwPtWIirPdeTPIfLepqQVjvpao50xetuhDWe6dLfp3e
va8XYb1XCz9MKjf0oyW9978/rPdwG+s93MZ6D7ex3sNtrPdwG+s93MZ6D7ex
3sNtrPdwG+u97KjrvTtiBgDWe9rxR+4omLAA1nufjJDG2hIWwHrvZXGTYcZ7
FriQmLy4Ua4XzPazciOGBwDHI7s9w2AAHCoY/cbj3w/u/jsrwrr4C3xZCFy7
zvMH8OTZOr4l5C9wu7HnL192N/A3+3qx5uokaLMMPsRzLR3ce1F1W85sGpxM
MNyUbUtDmlxXesJtZ8HybcraATHpiKPSLWaDyzxosX5tfI87HfFcfn2zJnQR
MPblKc0nh6LATXnUL7UcUMTGK9+gIAGEFdm9pTRwwihaxeM3xwuBqNdQ83Qr
F8zQS7oTrP4VcDnty7bo4YaF1pHFWY/rgFiN45q/wzxwdd9oMeUNAyjXrnow
OMYLy2aXKcZ5MEHjlMfTOzMkmP3yyQsVWybo1cpS8eIkw6hjrx8W+DEAh6bm
qDihS7/nzU77rq8H6olNW7I5lkHju3nMZRo1AOvbnsucrssnfyCsb/F8YH2L
21jf4jbWt6nryMr61gMA61t5rwT69wMsgPUtbNrpEP6ZBbC+rXynGtqezQLf
/zQ8SVjTA7i0i1Ye28kCMnqW/h5q/SDiuVXA84l+INrHVjuv9RMU/0i0BlJ9
4KqArG7Q8z8gofVchOu9HuAsvrHnUd8E0Psne62eOwdIfbXv1eqeAvTU5C3U
SQOQ5zWUWzQ6Az7rrFHysU5FCl1XzL+MzYFLV/b1cHtmIN2Hu4p7KYuArCfi
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

          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{325, 2178, 255, 256, 257, 258, 259, 260, 261, 262,
                 664, 542, 445, 372, 324, 297, 686, 564, 467, 394, 346, 712, 
                590, 493, 420, 263, 665, 543, 446, 741, 619, 373, 720, 598, 
                769, 501, 754, 632, 781}}], 
               PolygonBox[CompressedData["
1:eJwV0DksgwEcxuHPFRKLY3QkRseOOGYs+ExMSIQOrkQMBlorBseMxDEjccwY
nBNTSwyGIlFHDMTA0+HJ//e2/ZqmFf2j4UhmEAQZjBPLC4Io+15sIO6NRUrY
sCs50zO0c2y3kNSrvPqOObuQHXuQKx3yoWs50I0k9BJx3cufLmVTV3Guk+4w
UX3jdvOtv9wpOvSJ25p+nic75U6QnxUEa/aDHiDHzk4/zzQFdsrvnddF/LLr
849uhFzvD9nXuotP/e5OUqcP3Sbu9Is7xrJOuH3pP5Uye8ut5kLHuNU9/OhO
TnUbz3qdN48u2MXs2RHqObKbudcrlLNt13CpZwn5B3YlQMQ=
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1:eJwV0EtQzVEcB/C/akYpj1GUduXVhsqbvUKPwYYN6XpMi6a7sBEyyCNmyJ6i
FlHCJHsimclKC2rTVK64yjBjRqtMn7P4zO/7Pefce+Z/CmLxww0pURQtop8J
mtOj6DI7LJ7hBSscus2s/Wr9Eh8ostZJvryd0zxnubVbzDj/kyQ/WGNvG6d4
xjJnWvhuL0/fykl6WWr9JtP2qvQmhthorYNceQsxnpJl7QbfnK/UL/KeDdYe
sVq+xxh79FeUyrX0kKlfJ+H3bfo05foAFfIcR+URLsiDrJcfskr+T408Rqs8
ym65nxL5D4fkj5yQ68wpuuUl5jW+urvJnCOVtFRvZY7zIJzTz8q/wneGO80y
3nAgvKf9Rvkv//QU/Yj8ifN6hl4f3pR3+ry5jnZywpuF3zEvHzdHuSvHzSRf
5F3mS4rl3xyUh6mRn4Q75Obwbb7lvp5gr/6a/XIjb1mrt5Et3+EzO/U+Nof7
eUy6fpVJ/7dPP8cAheFNWClv4hhdLLZ2hQXFLl3D
                "]], 
               PolygonBox[CompressedData["
1:eJwV0U1Mz3EcB/BfNdbBZrZC1EjERSk3lUpHuqg8jC7ZOlT0NHNwMPJ48dwf
RzqEOIWobC5yob/a1IXEOhhtqDxVzOt7eO3zfn9/T9//959Z07jzUGIURQk8
43hyFJ3gn/yXeeaYZYObymilnwwPXuOPa+v1bbTQR7r1GL9d26ufY5jN1u6T
Ld/gY3in/pRSuZleVurt/PJ8hz5Juf6CPfI81fIoZ+Uh8uV7rJMTzQO843rY
lznJh7BPs58S+Yj5nRm5yozTJCcnRVGdPMGT8D1zBVf5aU9LXD8WfjsLWKjX
muPccv8i/bD8lS/hcPUd8gC79cX6UfkHc3qSvl8e4Ywe/pRPvJbzzC7Wyglm
DW/D2YfzCu8P35VLzT6K5Wkq5UEa5cekyVfCN23npv6Z7fpzdsmz7JPfcFqO
s0m+S5Yc4z0lei9bwz7pYbl+OZyjd1fppxgk19od1sjtjFEczpQi+SCPWKZf
YtrzlfpJXpFj7TaZciENPGSptYtMub9Cb+MlG611slouoJ4HpFq7EP5r96/S
t1BHNynWz/PNtf9Oemmd
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              
              LineBox[{1, 179, 141, 109, 83, 63, 51, 191, 153, 121, 95, 75, 2,
                180, 142, 110, 84, 64, 52, 192, 154, 122, 96, 76, 3, 181, 143,
                111, 85, 65, 53, 4, 182, 144, 112, 86, 66, 54, 5, 6, 7, 8, 9, 
               10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,
                26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 183, 145, 113, 87, 67,
                55, 36, 184, 146, 114, 88, 68, 56, 193, 155, 123, 97, 77, 37, 
               185, 147, 115, 89, 69, 57, 194, 156, 124, 98, 78, 38, 186, 148,
                116, 90, 70, 199, 161, 129, 103, 58, 195, 157, 125, 99, 79, 
               202, 164, 132, 106, 39, 187, 149, 117, 91, 205, 167, 135, 71, 
               200, 162, 130, 104, 208, 170, 138, 59, 196, 158, 126, 212, 174,
                100, 207, 169, 137, 80, 203, 165, 133, 213, 175, 107, 209, 
               171, 219, 139, 215, 177, 222, 40, 188, 150, 217, 118, 211, 173,
                220, 92, 206, 168, 218, 136, 214, 176, 221, 72, 201, 163, 131,
                105, 60, 197, 159, 127, 101, 81, 41, 189, 151, 119, 93, 73, 
               61, 42, 43, 44, 45, 46, 47, 48, 49, 190, 152, 120, 94, 74, 62, 
               198, 160, 128, 102, 82, 204, 166, 134, 108, 210, 172, 140, 216,
                178, 223, 50}]}, 
             Annotation[#, "Charting`Private`Tag$362551#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1mW4FGUYBuDlHLpDGukQkEaQFkQ6pEXAIAVEUrqkBaRLQbHoFpQWk07p
ku7uBu/v8sd9vc/zzczO7s7MnpOlece6n8SIRCLFoiKRk+ZnZhxmW2xGPpIz
w1pWfpd7UoVT9h9kLS5z9PfIzzK9OAfkL0jB13o2/pB7UZUN+lucladz2usN
1uMxV3+frfLb3JAL8JP8OgflS2ZHxsiHzPd4Jt83+/KS/I2ZPazzp37e/Dic
IzoS6a3vkRsRpd/X78i9SKxX03+TK/Gcc/o1syvxbZ+h/yu3JKYebT6gH2d8
liFhP+aFz2Z+xAfyNrMON+WCLJdLcEgey2H5/XBOOSUz5Rz8JffhH/mdcC65
Or/LlTkfvmfOOvdQPQHz9Q8pxAq9JIflcaTiWz0nf8t9qcE5xw+zlpAFenMK
k5rvrOVio9yPmuE7tf9wa4lYqLegCGm4YNuI8H2ySG9JUdJy0bZLXOYKn9sn
CYtta8VrpON7a6+wSe5PLa7af6S1pCzRW1OMgXEjkZ+tleKIPp70/KDnZrM8
gNr8oVfhQrhPwrX1mqP0ZCzV27BdrsstuTi/yKU5Kk/gSLimvJAz8KOchy3h
s5sdGCjvNRvzUL5r9g73tfynWTUcz0X9utktXDv300z9hNyKWHrMcDz9w+fW
r3u/o+XkPGGZ/c+YbcMzbPtH+g65Hrflm2b38PzIK80yHJMvm52YKB81PyTC
y/osMy9b5c/YJ7/LI7kOf8nVuBTuJW449As9BT/pbSnBKr0sx+VJZGS2/irb
5EHUDedw/W56jTHh+WW5tXaUJBO3bBtrPSUr9PaUIjNzrOVjuzyYety2/zhr
qfhZ/5jSZGGutfzskIdQPzz/9h9vLTW/6B0ow2q9HP/Kk8nKPL0AO+WhNAjX
1vETrKVhpR5+XMuyRn+DE/IUsjFfL8gueRj75SY8lhvyt1ydy+G5457Xnqin
ZZXekZ1yfe7I5Vgrl+ekfMXszFT5mNmcGGTXF5iF2B2eQ/MThssHzKZEu3+e
hHPKfcJzqTfSN8o1wv2hXwnXW/40/Fbo3+sn5dbE1mOF+4QB4ZkKv68OmySn
4ymr7X/WbEdc2zvpu+QG3A3X2uwRvjd5nVmBU+HZN7swTT5utiCKHPpCszB7
5BEclJuF88nvsEmuydXwm8AD72mynp41emfKs15/k9Pyl+RkkV6Ef+TPacxD
x0+xloG1ehcqkItHtk0NzxHr9K68ySs8tu0JT3nG8/C31L3/wozYHoMooolJ
LGIzzWtlZL3cjYrkZrG1ouyVR/Ium/VaXAu/S8QJn0XPxK/yObN9uH7ybrNh
uD9ch3vhuZF7kkh/S/9VrsgZ+SvysER/jX3yKJoQN2y3lpkNcncqkZd4xCcB
CUlEYpKQlOmOycJvcg8q8ypLo/7//2S/PJqmbNFrc12exSm5TbjvwvPDQJJ7
78ls+w/KAyRq
               "]]}, Annotation[#, "Charting`Private`Tag$362551#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1GXYVGUUBdAhpRHpFKRDQLoUpLtDQFrpDiVNQCkVQWmkGxRppLukW+nu
7tD1/ljP2fvc+zHM3MjQskvtzlEikUipqJFI4miRyK7okUhd7svTaUM5krDb
vh4P5Bm0pTxJ2WNfn4fyTNpRgWT8bd+AR/Is2lORm3afkYSt+hCSs1f/iMfy
bDpQiVt2n5OUbfpQUrBPb8gTeQ4dqcxtu94kY7s+jJTs1xvxVJ5LJ6qQitSk
4YDjjXkmz6MzVblj14fk7NCHk5aD+sc8l+fThWrctetLCnbqI0jHIb0JL+QF
dKU6b3PYvikv5YV0owbpycA7HHG8Ga/kRXSnJvfs+pGSXfoPZOSo3pzX8u/0
oBb37fqTit36j2TimN6C/+Q/6EnMGJHIT3a5OaPX5oE8gNTs0X8iM8f1lkRY
rPfiDX8/Us/DWb0OD+UvSMPf4fs7Z65cgZF6In2CXJTrehb9D7k6WfQTZiui
kMux5eaf4TrL0+UPKSRvCPeafSz5Zzkv78l/mefCd5YXyRXNqmZxc6tZ06zr
+CP5y/Dv6WnDdzBXmVXMveHamPP08mbF8P81N5s1wuc5/pY5US9rFjPzm2vN
G45llReHc3lf3m5mtT9pfkJUloT707EZcunwHOix9VHhe3Ber8dj+SvSsU8f
RWLnTQrfiZt6Nv6RPyUaS/Xe1OeJ/jVvs18fTXb+1VsTnWV6HxqQg1N2bYjB
cr0vH5GTXLxLbvKQl/fIR34KUJBCnPb3bYnJCr0fDXmqf0N6Dui/UJgzejve
YKXen0Y8078lAwf1XynCWb09sVilDyCO32a0no8LemOeywN5h0P6GIpyTu9A
bFaHd4W/nSmXCfewHlf/JVxbLuof80IeREYOh+fXOfPlSozVk+iT5RIUkNeZ
t8I1kv8M9x8fyDvMYvbnzY6UsotjvmuuMCuHezm8u8xZejmzrFnY3BieF/NL
x+OZv4bP4pLehJfyYDJxRB9HcS7onYjLGv0rmvJK/47MHNXHU4KLemfisVb/
mvg+b4xekMt6M17L34fnl2PhfeacBeE7MEFPqv8WngVuh/tPXyLXCjv9ktmF
+OR2bKW5zj6tPDt8d4rIm8J9Y59AHhuuk1koXGtzjVnNvBLeV+bv4ZqY1cK1
MLeFzzObO/6fPCQ8d3rW8O4wV5tVzePh/Wou1CuYVcJ1MreYEx1LJk8J1zD8
BvJ68054buSlcu1wTL9sdiUB6/V0js+Ry4d7WU+ojwvXk6t6CyJ2Q/VsnNAn
kdxuql6Su3pJrsjdSMgGfSBvOm98+J24prckit0wPTsn9cmU4qrenTfZqA+i
FVGdP9wuB//ov/Eh1/QeJGKTPphPiOb8EXY5+VefQmmu6z15i836d3xKdOf/
YJeLU/pUynBD70Vitujf05oYzv8xPBOc1qeRwm5aeF64F95J+jK5TviN5J3h
GoRnxbH/AdGXFgs=
               "]]}, Annotation[#, "Charting`Private`Tag$362551#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwNzWVTVWEYhtGNCrbYiUrYrT/FDkRFUSywu7u7RbALu1uxuzuxu7Db9WHN
9bz3zDk7Kj65flJIEASZNAgNgpCwILipu1jMVEbTkEY0pglNaUZzWhBLS+Jo
RTb/c0t3s4RpjCGv/ZEeZi3zaU12+23dw1KmU9j2Uk+xmbHksz3WI6RTxjtL
L7OA4t5v9RwV3L90O+XcX/QaVdz/tA053He0mu7VKP2utXSZltIPWkMvakX9
rXV0hhbRV1pdT2uM/tTaukXL6metqVe1sv7VceR3P9GjRLt/6Doi3J/0Cgsp
4f1Oz7OD8t5f9TrxhHrf1X0sZyZFba/1DFsZTwHbUz3GelJoS5j9nu5nBbOY
QDsSaE8HEulIJzrTha4kkUw3utODnvSiN33oSz/6k9P37usBVjKbiYTbn+lx
NrCIAeSyP9CDrKK090e9RCX3H62rc7SYvtGzbGMSBW3P9QQbSWUgue2ZeojV
zGUygxjMEIYyjOGMYCR5/O6hZrCGeUyhkP2FnmQTaZS0vdcL7CTS+5veoKo7
oB6jvP8DmUd+Vw==
               "]]}, Annotation[#, "Charting`Private`Tag$362551#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1XfcDlQchvGHzOxIWSHZMrKyd7IL2cRrJbz2KFvIppC9s7OlZFYoW2Xv
mb33rO/54/rcv+s+53mfdc7zZozqUDM6RiQSqRYzEskfJxK5FjcS6YBXsZEP
QUsUQEEUQmFct94RCbCJf41WSBgvEhmry4lTfAHexw3eCQmxmQ9FaySy/xtd
LpzmC1EEN3lnJMIWPgxv2zufl8F9/hkS677l7+IMX4Q8utW8OmKgqO6W7ILE
+DW8Jns2mOtiOM/EF5jL4gGvwHeYW6ANT8LHmXOjlvmwPKsvaf7N3Bifms/L
xfq85jXmdrKGrC9Pyp4ypqws94bXJNvI5vKS7CuLefxtc1e05knkR/KA7Bae
L3xGciOPlvVkI3lGjrD2jnmhuRzqmI/Jh/oPzDvNLfE5T8rHm/PgHC/Ffzc3
wRKej/8YnhuvoLjuTngNSIrf+Uhktm8RL49HvC2S6SbwvDjPf0AJ3OXdkQxb
+Si0C58j7ul64DVs46PRPrwu3A+fHZJjOx+DaLzmeb7T5cMFvhSl8YB/gRT4
g49FFnsX8wp4zDsguW4ifw8Xw2P51vBdYhl/j681f4wG5lMyFqqY94XPMZwR
8+VwLu1/KL/EZ7rXw+PkQfmntaLmTeF+yfrhzMizYX+4A9azyiW8rfwgnE15
PHwm8on1inJXuEeylWwmL8o+sqP1FHJSOK8yv6wtj8h/rZUxbzM3xXKen/9k
ronYqMr3h+cOd8D6I9kLKbGDf4ts9vzAK+Ip74TXdZN5AVziK1AOj3lvvIGd
fBw6o3y4W+EshveDD1EJlfEkvBe8iV18PLqgCp6Gu4FU2M0noCuq4pmuH1Jj
D/8O3ZDSa5uiK4jLfCWq4TnvjzTYyyeiO96wf6quEK7wVaiOF3wA0mIfn4Ts
9i7lH+IZ74E3ddN4YVzlq1EDL/lApMN+Phk57F3GK+E574lUuun8fVzjZfn2
8D1jTfgN5j+bayEOqvG/wm9MuKPW/5Nf4S38xYtZ3xzOLabwnHy5uTLqmU/I
F+E7MO82d5atZZT8N9wfa6nNM8I5l0XkJ/JouMPyeviu5R+8o4wK50teCN99
+O0I/zPkOt5e1pYN5enwt2VcWV3+LbvK9rKlvBLujcdGzIPM6cM5NR+Sf+uL
m7eEv4WpPBdfEe4kXobzxPeEOxjuFk/DZ5qL4kY4g/xPc3Os5YX4L+G9IV54
Ll0M3WBzBvzDp+Fd3cpwV/Af74W0ulm8GG7yn1ALMfVDdBlxgE9Hb6TTz9YV
xy3+M2rjFf3XurdxkM9AH7yln6Mrgdt8HT5BLP1QXSYc4jPRF3UQ29ow/Ts4
zGehH+oijrXh+sw4wmejP+ohrrUR+iw4yudgAOojnrWR+qw4xudiINLr5+pK
4g7/BQ0QXz9Klw3HeQn+q7kRmpjPhd8X+b213HJVOM+IhDOsyxDWzKVwl69H
Q7yqH63LjhN8HgahERqjCT5FUzRDFJojgceN8ZgcOMnnYzAy6ufpSuMe34DC
uvW8DuKjBv9HRqOV+Wr4vZEt7P0fvmwrpQ==
               "]]}, 
             Annotation[#, "Charting`Private`Tag$362551#5"]& ]}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"Test on dynamics\"", TraditionalForm], 
         PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1b\"", "\"u1b\"", "\"x1b\"", "\"\[Theta]dot1b\"", 
           "\"xdot1b\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]},
    {
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
ezHJb4ZWZp5+fZeBSX7TRizkjsilHkzymzJ3Ux/orezGJL/5/NA97QCL35jk
N6UuRJ+xLOjAJL/55r5u7/z7X5jkN2v8u/SrCpoxyW82nnvyvJHSgEl+syTT
LKRuqXaZ3+RNYg5Zf6pqmd+0adXXkftYusxv/mG5ns+fWLDMb36yuMhodPm8
zG/yyZkXKRcmLfObK3dHahYdC1/mN9tXM9VMZGsu85tG1UWuNekPgOQ3D11Q
OpOk7b/Mb7rsMlYO3Ba8zG/mGDvO1Kx4usxvDg1crL/r+2KZ3/xTDVoiyXHL
/OZ2MQUt/YjXy/ym8fejK76Fv13mN7NeUQ30WJOX+c3uzd0pBgIpQPKbIWYc
Yt5maUDymzuOOHPfGXyFSX7zV+PPnkmNPEzym/GS+cpuG0sxyW9eeZrixdFb
iUl+U9tj6MyttBpM8pt6+tuG2WvpmOQ3U2Otzbwcf2LXdc6SWpfGYEPuJU4W
3SZM8pshm1ylLrC3YJLf1A/bM3xcoA2T/KZ+4Ymi49fal/lM+0bV3gPvupf5
zPKMa5tbtjAwyWfenL+WWXWwF5N85pdnbFUKk72Y5DPbzDcsmB7twySfyT/f
mNDwXx8m+UwvlYbnDoW9mOQzM2dM2FKYezHJZxpQbR98nejB5H5uZoXMks63
qZjcz50eY3TEhJh/yP3cXadCtJ4WeWGSzzxQrbsxNd8VSD4TXX0+SvH2XeYz
k4N32WxKDljmM7N4j9aeGH6yzE8KKm9lh0OpQPKTWzTaItwuhmGSnzSJbI9f
cv6CSX7ytIm1+ZEdxZjkJ0+6CO6qvFSBSX5SSue/DTfX1GCSn9znFUg7fomO
SX6yyPuA7lWen9jJQirZo+4v6PnaXo2db8QkP1nz595Ib3AzJvnJ7as8A2of
tGKSn+yOSh6I5Wxf5iM/nig8G4C6l/lI6/7IE5erejDJR6ZpHDgQsMjAJB9Z
79PDc622F5N85K2DmgMbFPswyUeyOVzWMTnUh0k+kvXunwX+nl5M8pHqquXS
Dgd6MclHfuSaYYtWZGByfzoaHrg95JGOl/en2/mXecu+weT+9LLJ4EE7n0BM
8pF7i89cLthmCSQfGSQwgLxcfZb5yAEP/z9zSo+X+ciCm/P6lndDlvlF27/e
3BNJKcs8ogzF5VTFuypM8ogc58QKj2vWYpJH9D9YoaB/qA57fsp9I949BnYG
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
I1agzA==
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{356, 2507, 2505, 355, 828, 681, 569, 486, 428, 
                392, 850, 703, 591, 508, 450, 875, 728, 616, 533, 904, 757, 
                645, 939, 792, 974}}], 
               
               PolygonBox[{{2504, 2503, 338, 339, 340, 341, 342, 343, 344, 
                345, 818, 671, 559, 476, 418, 382, 848, 701, 589, 506, 448, 
                874, 727, 615, 532, 346, 819, 672, 560, 910, 763, 477, 882, 
                735, 952, 623, 928, 781, 968}}], 
               PolygonBox[CompressedData["
1:eJwV0M1LVGEAhfHrjPRhlAMKrdXq78icai9k1kpnso0xo9ZoGEmlrXSRmUJK
LQoUIpIZv6BAQRndRI22rFXmRsFGV7Uo/L2Lh+ec874X7r11qWxzJhZFUQWm
sH4yioqoMGaNyXgU5eVG7Os5/afcg3k9rZfkNryUj+G0PMhlfoSL7p3TR+U6
DMt/+Is9I3+XO/FKrsILeysXbXm+xuMcC1uw/pB3eZn7eZpr8Bldnr/MBfsH
vsTP+B+v8m/nvbytf+S7/IarseDsFm/aFridJ/k4zshDfMCPwz9x97z+XK7H
V30cN2zregvi6LZdsc3JTSjrffov+R4W9Q59S05hSj4R3kd+yof8BO/ks+F7
3L/AY7b33MAj/JdLzrLyD3mJ7/BrPoUNTDi/GbK9wNd5guPhnVGpD/Aer/AD
nuFa9Hj2Ks/bZjnJo/yf18J/cX6fd/RPnOO3nMCSs9v8zZZGAkdgWFPh
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{2504, 2505, 391, 427, 485, 568, 680, 827, 354, 
                390, 426, 484, 567, 679, 826, 353, 389, 425, 483, 566, 678, 
                825, 352, 388, 424, 482, 565, 677, 824, 351, 387, 423, 481, 
                564, 676, 823, 350, 386, 422, 480, 563, 675, 822, 349, 385, 
                421, 479, 562, 674, 821, 348, 384, 420, 478, 561, 673, 820, 
                347, 449, 507, 590, 702, 849, 383, 521, 604, 716, 863, 419}}], 
               PolygonBox[CompressedData["
1:eJwV0jlPlGEYBdAPiQVCKCxE9sWfoCwiMwP6BwARKxVJEFnVaENiNFoo+6IU
tBYWyurSWEhYFVS01goqcAE6aRQ9b3Fyn3s/hgwzFDZeq+08EEVRErMcd3xI
iaJl6jxY4nxyFD22r1GgD3PMltBfsU2lbYYz9k79EZ/Itw1RZI/rHYzwkTz7
IIWexfQKTtHOcHgf5Ho+QIGfKdfbGGKVHHs/+Z6d1F/yi4RtmtP2Vn2QFbJt
feTZy/QX/CRum6LK3hI+CPdZFqm3Ddjek6X3kmsr1dPcl/hCo23G9oOYPkml
7ar+j1p9gXO2fr3V/Y0O/Z2+F363O1P2kOMusR+Rz7hr2+W+O1UelGNcdL+W
n+VlOR0+G5nOE27Y38gNeUt+93xe/gnfi6wI71VOyIRsDt+NPMxTuuxvw+vk
bbnveZIcpcY2T527z97i/kq7vqz/Dn+L+6jsJttdbL/j3uGefkheYI0Gfcrz
6+51bupb4X/CPU5cv6L/pVqfC9+TrVdfIkN/SJbthD7JJuW258TsTXoPi+Gz
tT0g0/4fqKJfgg==
                "]], 
               PolygonBox[CompressedData["
1:eJwV0TlPlGEYBdBPxYWERok/gERlR/0NCs4ww2blSmHcKNyi7BJNNFrR4DLs
aGJhaWKUHS2IyhALFVAhWqqFNICgNnre4uQ+937MZIbJOXHh4Pn1URStI82r
zCh6TY2hmioqaeMhC5R4QT97N0RRhX6VB8xTbO9jj2dJ/QV/SNrGqLK36gN8
psjWy257Qs92n2aOOtuE7TcJfZRKW4u+xX2UaWpt/bbwRb5ySf+kF7p7KNHL
9ZvuFW7r22Sm7OWU+7mclWfluL9Ny608oil8dvlDtso1zydlxJ3w3vYnckRW
yGbP38rtPKbN/lIuyutys8yQKY64n8q0PC77vDZLDnDO9oWL7o/2v+52d4Hs
ptgdt99wL3MrfGZ5khnO6GOeN7q/06Kv6nH3MMnw3cLv5/7JNX2TPMwUx8L/
x/M58vUuimwxfZRfxGxDJOyNeg+z5Nk6KbQf0Edo0L/RbFvR/7k7wnM5SLm7
wb7RfYg34Te2ddtmyNVTFNjK9Hq6+MAu+33yPSvVh1mmLPy2xO1X9E7es9N2
jzz7fn2IJUptz4jZL+sp3rHDdpdc+z79Pz3Naik=
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1He0z2UcwPEbGV2yrq3iItllK5UtK0pmRtlS3WuGhlUUhexRRhGZoWRr
qZRZpCGUVYQyG0Zen+OP130/z/19z/me3+d5zi+5U2qzlBsSEhLK+xM9zlIG
05ZaVOAfNjCGnjxMGk6wjCG0ozYV+ZeNjOVJmpGWP3iPobSnDpW4kZMsZxgd
qEtl0pGeDGTkJhLJRGZuJgtZyUZ2cpBETnKRmzzkJR/5KcAt3MptFKQQyRSm
CKdYwXAeox5VKMppVvIij/MAVfmPTYzjKR7hdv7kfV6iI/W5m0t8xOs8TXOK
8RcfMIJONIiZO6QvdCr9uIfLfMx4UmgRs/LcVn2TQdzBGVYxks4xO8/s0rdo
GOdj/6VOo3/M0H6vLqAaV/iECTE/nx3Q1Ji79W6dR8s4I/ttOjNma/2rPhtn
Yf2DltKFMV/9TctpcT3LhzEr+5fjrPRnLa1d4pz1Gy2ub8d56WEtq43iDukW
nc4z3MtVPmUiveJ+eGaPvkOruEv223VW3AHrQ/pc3BnrH3URJTjHal6J++Oz
/dqVLNbfxjM6N+6PHtE7tbGm069i/joj7pv+omV0gCbp91pS3417p8f0Lr1P
/+ezuA/2k7SAHtTeZLf+TueTbH1UW5NovUNn8zy57X/SxfEezrOGUXTjQdJ7
5mt9g4HcT/wgbJbJ9KFNnB0XWMtoutOE6nFOXGQdr9KDptSI7xvnFHOJ7xZn
zt+s5zWe4CFqxmu993OdQl8eJZP/7dQ5vEAe+326hKLWvydc/w0rr9cAHZyG
lQ==
               "]]}, Annotation[#, "Charting`Private`Tag$362636#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1nfYjmUYx/EnbynSRqnsIjLK3kK2bBUhK0IyK2Rkj+y9yt6Unb0liSI7
o4xoaymr+pxHf3yP3zjv53U/931d1yNzs/a1X78lkUjMTJZI5GfSJSUSA/m0
2CEPwSsoqV+kK4aL8lIUwMP6QboHsVMeijq6rXJN3JRbopRusVwcl+TO8td8
B3wgN5H38Y2QEn3kn2kvFDR/RB7MP4Qh/BW6S/8af5xvjXfluvI2vhbG8bfg
H30P+p1uE+1G59L7sRetzEvTJfqltAQdSW/QbfE58y70G3kd7Uhn0ruxBx+a
N6X79atoYzqJ3oY7+b70F9obC/m0KOQzj9IhunQYyv9FP9a340/wbTBMridv
52vjX/lVPKNbKpfE9/IyNNN9Lr+MVCisS68byj+M3fJwPK/bIddBIp6drozu
A74UfpCXowgy6N/VPYJP5BFog7LxvXWl8aO8AkWRUT9M9yj2yCPRFsWQyWy4
Pj0+lUfF+0NxlIg1hsyuGWGeAXvl0fE8Yv0gi9lIfUZ8Jo9BLN5y+mW6Z/CT
vDLeJ7LqR+kyYZ88Fi/odsp1Y/2ksD5oe/2z+uV8GfwsvyGf5TvFO5Wby1/w
TTCZT467+H70Mn0n/n3XPSaP5jPHeuT/pvvjPvmv+LZ4j0+JcfoX6S7dclqP
jqfJoguVe9Lv6Wbanc6jD+AzdPD58nRF7CFalo6iN+n2WHPmb9Jz8nramc6i
92C1WQt6QLeaNqVT6O2xrvn+9NfYh/FMXPu4PIbPgs/l8aiv+1h+HknoqKug
W8mXw2X5Lfk83wVr4iyRD/LNMJW/I+6HH0B/i72CRfyD8X1cn42O1S2hWWM/
0Kv0C7P2/En+I/oafT/2G3ZjgnmD8PoV9AU6gSbFPePWOFvoD3QLfZvOp6nR
yWcr0lW6D+mzdHScI3EmxnMx70ovyBvoG3Q2vRcfxXlHv9Q1x72xp62zcvrs
8c7lx3BAnhjnICrF+9CVx2/y2liPeEI/Xvc4DsqT4hxCZf0aXQX8Lq+LdYAc
8b112fClPDnWcbwT5DSbqM+OQ/IUvKT7RH4Rt+FNXZX4DnxFjOH/pX/ou/Hf
xjWxluL54EndJPkJHJanxvtGVf1aXSX8KW+I74hc+sm6HDgiT0PDOEPl+kiO
3vKPtAe6mleT1/GVcUXuLl/k38JGuZV8iG+B+zBQ/j32ZXzGPLc8hc+J4fw1
elTfgT/Ft8N0PhXe0zein+pW0gZ0YqyV2Bexx+lPdCvtSRfQNNiHbj77HF2v
X0ar0LE0EedNnO3mb9NLcd+0K51D74t/D5viXKeHY5/QV+g0mgL384PoH7Ev
UcW1eeSp/JM4JneUT/Ovxz6QG8t7+ZdwB7rrqus28FXxt7wZrXVH5JZ4IGa6
vLppfC4cl6fHvaOGfqOuGq7KW+L94Kl4drrcOCHPiN/beB542ux9fR58Jc9E
z7iX+HuoiVrYbY/UpnVQN37z4ncqzus4I+OsQT5/a7q/kxcn5VnoFX8jnp/u
OVyTt8ZvlO6o3Aqp0UCXXzeDfwoj+Ov0lL4Tf4ZfS9vTGfSu2BuB+5rtmpfj
zDVriBSxTuO+dZv56rgub4s9hQJJ//9/6mmclufgnVjrKGg2S58PZ+S56BPr
DoXMZuvz42t5HvrGu0Rhszn6AvhGno9+cV8oYjZXXxBn5QXojyYoajZPXwjn
5IUYgKYoZjZfXxjn5UUYiGYobrZAXwQX5MUYhD2eR3NawnyhWVF8Ky/BYNTW
b9HVwA15O9rqjsmvIg0Gy3/SAVjMP4T9aOHa/wBk7lj+
               "]]}, Annotation[#, "Charting`Private`Tag$362636#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV02WAVVUYBdA7zAzd3TB0dykKoggiqICoSKlgIDGUgYViK4IioBK2CHag
oihhgU13d3e36/uxZu/7nfPem1sZvQd1zkxJkmSqPwtTk6REepL8mZYkT9Oe
MqSwyFpJa3/pz9CBsmRhsbVS1v7Wn+U6ypHKEmulrf2jP8f1lCeNxubb5Tvc
wyUstb+M+b/689xABuk0Md8h36Uvl7LM/rLm/+kv0JEKZKWp+U75HvfSnOX2
lzNfqL9IJyqSjRXWVrKK8vYsMhtFZyqRnWbmu+T79OMyVtufYb5Yf4kbqUyO
OCfz3fID+nM5a+yvYL5EH00XqpCTtdYqWluqj+EmqpKLddbWs4FK9iwze5mb
qUZuNlqrbG25/gq3UJ08cb3M98ipDKAFm+yvYr5CH0tXapA3rpf5XvkhA2nJ
Zvurmq/UX+VWatLW7KT8mofIF9fGbJ+cRmaci+N05ulXxHOin5ff8zhbfHc1
s1X6OLrFtXechdl6La7RT8kZ3KEX4OH4P2QOftPvlkXJH9db7o/7L6fL22NO
JoPi2smsDOBnx3fJIgyhVTyv8kLca/mD7C0Lxmd5wnF3mYuBzI/nWBZjKFud
T3W52nw8vfS8dI9nRKYyR69NO/20/IZH4twd5+R3vUDcK/2A/IjBcV8dZ+MX
/cp4T/SLchYj2ea3a5it0SfQgzpca3ZGfsujFIz7anZQfswQrmK7z9c0X6u/
Rk/qUijunfkh+QlDac0O+2uZr9Nfj3OlHoXZaW0Xu9nDXvaxnwMc5BCHOUJt
37Pe597gNupThKPW6ljboE+Me0kDitLK/LD8lGFczTH765pv1CfF80JDisU1
Mz8iP+M+2nDc/nrmm/TJca9pRHuzs/I7HqN4XCOzo/Jz7o/3xnF2fo13gY56
wo96H1mIJ+M+yNws0E/4vfr6Zn1KnKuejz56F5lGf+Y6vlMWZjCNHXeQ5+RM
RlAi7oPZMfkFD8S7wkm/0cB8i/5mfA9NKBnXyPy4/JIH4xnklP0N49nV34r3
gaaU4rS1M5zlHOe5wEUa+cw2e96O949mlI7ran5CfsXweP7oZJbCT/pT8Wzp
efhD7yuLMyyun+P/AZXnzvY=
               "]]}, Annotation[#, "Charting`Private`Tag$362636#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1HfgVWMYB/AbSpRVCmWVTbJV9oyIyEhGUpHVoD1+Ddo7ZERpSLKjUDSk
UNoaNFBG0yw76vP943Of53vOvfec+77PuZUatajbvFihUCjy0rp4ofBYiULh
MkqwUn6XF2lDW9rRng50pBOdKaILXenG4z5/OXvyhfwe4xkr38RBbJQ/pTtP
yDUpyZfyh2orzmKK/JbahGP5U36JF/Q3czCb5I/V9pzDXPl9tRmnsII+FJhP
FzZwEWsZzM884nPD1Cv4hr1YnOO5X1Y5P0ttzXecnd9HP7Yw1fm31btZz3Es
oxd/OTdP7cwFrGYgExwfp9bjEJbSg82Of6J24FzmyR+ozTmVYjzq2JPqleyd
78zvZpL+Ho7nb/nl7KP+FirkXuXP6MFTci1KsSbX4BV60ove9KEv/ejPAAYy
iMEMYWjmJ3uf/cw65t7y/TzNMwxP7zpXUTprL0/j1cyHXJ+KbJXn82w+J1/N
Pnwlf6S2oVpmhf55P9Odm6w25QT+kV/LrOhv5VB+lBfwXO5Frs2+fC3P4HUm
yLdxGD/JCxmRe5GvYb/MhjyTN7K28u0cnhmSFzEy15CvZX/WZaZ5M2sr38ER
/CIv5vlcQ67DAZmdzBnv6O/lRP6VJ2at9A04kl/lJYzKNeXrKMO3Wac8v/r7
OIkdeY6yJvo7qcRv8tLsgb4Fp7Ebo3NP6vWUzazLs9W2VGd2nmn1fqrwX+Y+
66dvSGW25flWO3Ien8vT1Zaczkr6sjsL6MrF2WOGMCa/S62b9eNAlmTm2cT3
zs9R26WnBqsYkH1mjvNT1AeyHpzMcnrn2eL/PANqET9wYeafQdl3JmV/1bs4
KvdPT7Y7PlftxPksy+yoD3EGe7CQblzCWOdHqzdQLtfKfxVT9Q9SlZ2Z3cyH
vhFH87u8PP9zjJFvpDwb8r+Q2cg8yI05hj/kFZlL/cOcSXEW0Z1LM+cMzdwx
znt3ARUX4P4=
               "]]}, Annotation[#, "Charting`Private`Tag$362636#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1Xe8z1Ucx/HfJdfeDRq4ZnYkIUVR2aQpq0RlXmS3jGSVmb2JUkbD3qJh
RVFUZkMpI3tk9Pz88Xq8x/n+fvf8zvecc1NapTbulJRIJHanSSROJScSGTIm
Eh0zJBL/pk8kRqAOCuG0sTM4i3PI6LlOnjtlbCTqojDK6t/T34Klchec93wm
farutDwK9VAEd+nH6vNgmdwVFzyfWd9Zd0YejfqB7jPdPdgtF0U53Tg5L5bL
r6C57gv5YfwuX/R9WXRd5LPyGLSVv5UfQwO5gfw5XxE/yL3lA/zzKCaXl8fz
t2IIf4KuiN/H/8gvok3oJHqddjPWgt/Iz6OP0FH0PF1N/zD+Jv1dXkxfotPp
DTF3XDLnrLSrfjY95/mB9O9Yp1hjuR3dIc+njelYepk2NNaQX8zfi3f50/RH
fR/+IN8Kd8p3yxP427Ay1l/ewz+L7nJLeRP/KI7Il80rm+4V+bw8Fo0C3RJd
JeyRi6OCbqJ8O1bJPfCfz2fXd9NdkMfhMZTAFWM5jHU3dlEej8YoiavGchrr
YeySPAGPoxTu0U/S3xFrK/fENc/n0vfUXZYn4on4W7qlusrYK5dGRd1kOR/W
xB6S9/JN0Ut+Tv6Sr4XR/AX6p75vvEd+CX2ZzqDp4v3727lpL9379D/Pvk3/
iT0ac5Xb053yAvo4HRfP0bX0yfjddJn8Aa1Ch9MzsY70J+Ov0kPyZ/QFOpWm
QRlj99IpuvwYyp+M79V3i8/yzdBbfl7+iq+Nv+QEbtT1lq/wk/FUrLNuue4+
/BxnHJV0U+UCWBf7Ckm4Sd9Hd5WfgqfjjCMN0uIGpEMy0iMDMuJmn3vV567x
U/FMnG1kwi3GXjN2nZ+GJnEeUVk/TZ+C9bEmyIw8+td1iThT8rOxz1FFP11X
EBvk15AFefVv6JLiHcpNY+/iPv0MXSF8Ib+OrLhV/6YuDWbKzWJv6VbIVfFL
7ElU1c2UC2Oj/AZa6b6W6+ConA236frKaTFL7iB/xz+B5vKT8kr+fuyLecuH
+dZxX8n3y7P4IhjG/0s36bvzP/Of0OZ0Mk3E3I29QL/RfUTr0jH0Yuz/uGOM
96NH4g6nbeN30uS4z5Dd+O20n35O3Fl0ED0WdyKdbbwj/V5eGPuZjqdXaIvY
U/wq/gGM4M/S/bG+/K98m7i35Afiu/ii+DLuD/mX+A70lVvLm/l6+EfOgTt0
/eV0cfbi/oo9qFstV8OB2LuopntfLoav4vciJ/LpB+iS47fF2Y99hur6OXFn
4mu5P3Ihv/4tXXrMjTMV+wwP6ufqiuMbeQByo4B+oC5DnO3YD7HP4twhxdjb
+oz4MN5R7KE4UyhobJA+E+bFb4/3HucGhYwN1meO9ym3ibWLc4PCxobos+Bj
+cX47XhI/4GuBDbLb8W5QRH9UF1WzJc7ybv4pzCBvxrnPf5fxRmla+TqOBhr
hBq6D+WS2CIPjPOFovphumxx58kvxxqhpn6erhS2xj0Z5wvF9O/osscektvG
nPGw/iNdaWyTB8X5wZ36d3U5sEhuF3PBI/qPdWWwXR4cexfF9cN1OeN8yO1j
LnhUP19XFt/KQ2JPoYR+hC4XPo0zGnNBLf0C3V3YIQ+NPYSS+pG63HFHx3mI
e0u3Vn4Qh2JuqK1bKJfDTnlYvD/dFrk+jsUeQyndKPlGfB7vJe413Tr5IRyO
uaOObpFcHt/JPeV9fEu8E+9f3so3wPHYx/KffDsUkEvLo/mbMJg/ThfrU/nd
/NOYyF+jqXFX8utjv9IadCQ9R3+N+47/LeZLX6TTaFpsQC3jdekncW7o3TE/
eoqujLvDeC+6P9abPken0KT4e/Gujb9Et8W+pg3pe/QSPRHnjf+Lb48UuYw8
hr8ZS+TO8g/8M+gcd3jMi6+J3+K9oJ7uU7kCdsnDY9/qtsuNcDLOjXyU74BZ
fHpsQkFj/wMySHHS
               "]]}, 
             Annotation[#, "Charting`Private`Tag$362636#5"]& ]}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"Backward Integrate feedback solution\"", TraditionalForm],
          PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1c\"", "\"u1c\"", "\"x1c\"", "\"\[Theta]dot1c\"", 
           "\"xdot1c\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 4.438784071232018}, {2., 0.}, {3., 0.}, {4., 0.}, {5., 
          0.}, {6., 0.}, {7., 0.}}]}}, {{}, {}}},
      AspectRatio->NCache[
        Rational[1, 3], 0.3333333333333333],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->400,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 7}, {0, 4.438784071232018}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.8641430640893307`*^9, {3.864143094166597*^9, 3.864143104412281*^9}, 
   3.8642366895364823`*^9, {3.864399127566967*^9, 3.8643991927177773`*^9}, 
   3.864408290535779*^9, {3.8644084656048393`*^9, 3.864408535203203*^9}, {
   3.8644121372506638`*^9, 3.864412170519843*^9}},
 CellLabel->
  "Out[2159]=",ExpressionUUID->"5aa2d4ef-7821-47e2-a8cd-a3de64bd8204"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.13490016743646485`"}], ",", 
   RowBox[{"-", "0.6512316318998003`"}], ",", "0.4432869867748815`", ",", 
   "0.4432869867748815`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8641430640893307`*^9, {3.864143094166597*^9, 3.864143104412281*^9}, 
   3.8642366895364823`*^9, {3.864399127566967*^9, 3.8643991927177773`*^9}, 
   3.864408290535779*^9, {3.8644084656048393`*^9, 3.864408535203203*^9}, {
   3.8644121372506638`*^9, 3.864412170596818*^9}},
 CellLabel->
  "Out[2160]=",ExpressionUUID->"f8509359-eea7-446a-8df0-dd04a04b2e77"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8638909789768496`*^9, 3.8638909843991165`*^9}, 
   3.863891412317354*^9},ExpressionUUID->"e3b56381-3091-428c-953b-\
8049828b4235"],

Cell["Individual Test Benches", "Text",
 CellChangeTimes->{{3.8637030744782195`*^9, 3.863703080794203*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"78f72274-21f2-4a3e-a828-5906a5fe2643"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  StyleBox[
   RowBox[{"n", "=", "20"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Tau]", "=", "5"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Tau]1", "=", 
    RowBox[{"\[Tau]", "*", "1.25"}]}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"A", "=", "0.2"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"order", " ", "=", " ", "5"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"maxIter", " ", "=", " ", "100"}],
   FontWeight->"Plain"], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0.5000307373763397`", ",", "2.5501485950165375`", ",", 
      "0.041887636891990265`"}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"InitGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}]}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
       "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
       "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "data"}], "}"}], "=", 
     RowBox[{"ffCartPendulum", "[", 
      RowBox[{
      "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", "order", 
       ",", "maxIter", ",", "InitGuess"}], "]"}]}], ";"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1b", ",", "xdot1b", ",", "\[Theta]1b", ",", "\[Theta]dot1b", ",", 
       "u1b", ",", "J1"}], "}"}], "=", 
     RowBox[{"testSwingUp", "[", 
      RowBox[{"ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "u1a", ",", "A"}], 
      "]"}]}], ";"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x1c", ",", "xdot1c", ",", "\[Theta]1c", ",", "\[Theta]dot1c", ",", 
      "u1c", ",", "J"}], "}"}], "=", 
    RowBox[{"testWithFB", "[", 
     RowBox[{
     "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
      "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A"}], "]"}]}], 
   ";", 
   RowBox[{"p1a", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1a", "[", "t", "]"}], ",", 
        RowBox[{"u1a", "[", "t", "]"}], ",", 
        RowBox[{"x1a", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1a", "[", "t", "]"}], ",", 
        RowBox[{"xdot1a", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1a\>\"", ",", "\"\<u1a\>\"", ",", "\"\<x1a\>\"", ",", 
         "\"\<\[Theta]dot1a\>\"", ",", "\"\<xdot1a\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Feedforward solution\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"p1b", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1b", "[", "t", "]"}], ",", 
        RowBox[{"u1a", "[", "t", "]"}], ",", 
        RowBox[{"x1b", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1b", "[", "t", "]"}], ",", 
        RowBox[{"xdot1b", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1b\>\"", ",", "\"\<u1b\>\"", ",", "\"\<x1b\>\"", ",", 
         "\"\<\[Theta]dot1b\>\"", ",", "\"\<xdot1b\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Test on dynamics\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"p1c", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1c", "[", "t", "]"}], ",", 
        RowBox[{"u1c", "[", "t", "]"}], ",", 
        RowBox[{"x1c", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1c", "[", "t", "]"}], ",", 
        RowBox[{"xdot1c", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1c\>\"", ",", "\"\<u1c\>\"", ",", "\"\<x1c\>\"", ",", 
         "\"\<\[Theta]dot1c\>\"", ",", "\"\<xdot1c\>\""}], "}"}]}], ",", 
      RowBox[{
      "PlotLabel", "->", "\"\<Backward Integrate feedback solution\>\""}], 
      ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"p1d", "=", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"data", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"AspectRatio", "->", 
        RowBox[{"1", "/", "3"}]}], ",", 
       RowBox[{"ImageSize", "->", "400"}]}], "]"}]}], ";"}],
   FontWeight->"Plain"], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"Grid", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"p1a", ",", "p1b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"p1c", ",", "p1d"}], "}"}]}], "}"}], "]"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{"{", 
  StyleBox[
   RowBox[{
    RowBox[{"\[Lambda]1ff0", "[", "0", "]"}], ",", 
    RowBox[{"\[Lambda]2ff0", "[", "0", "]"}], ",", 
    RowBox[{"\[Lambda]3ff0", "[", "0", "]"}], ",", 
    RowBox[{"\[Lambda]4ff0", "[", "0", "]"}]}],
   FontWeight->"Plain"], 
  StyleBox["}",
   FontWeight->"Plain"]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8637030916107454`*^9, 3.8637031163048553`*^9}, {
   3.863703146634164*^9, 3.8637031467241335`*^9}, {3.8637032271314416`*^9, 
   3.8637032981877384`*^9}, {3.863703344313999*^9, 3.8637033675275803`*^9}, {
   3.8637034246933155`*^9, 3.863703488801831*^9}, {3.8637035225560446`*^9, 
   3.8637036066221848`*^9}, 3.8637039678437643`*^9, {3.863704003356416*^9, 
   3.863704015206629*^9}, 3.8637041910564413`*^9, {3.86387938554615*^9, 
   3.8638794077180634`*^9}, {3.8638794473054113`*^9, 3.863879456186574*^9}, 
   3.863879487594535*^9, {3.8638795768290167`*^9, 3.863879601771044*^9}, {
   3.8638860815410876`*^9, 3.863886103615032*^9}, {3.8638861483497353`*^9, 
   3.863886172621978*^9}, {3.8638914447629833`*^9, 3.8638914562922993`*^9}, 
   3.863891796977415*^9, {3.8638918475872407`*^9, 3.86389184764522*^9}, {
   3.8638937946529503`*^9, 3.8638938135878987`*^9}, {3.863893847458075*^9, 
   3.8638938597471466`*^9}, 3.8638940187133408`*^9, 3.863894098689779*^9, {
   3.8638941539631133`*^9, 3.8638941576359406`*^9}, {3.863894255027814*^9, 
   3.863894255155772*^9}, 3.8638944064184275`*^9, {3.864132884995618*^9, 
   3.8641329073813734`*^9}, 3.8641331504876966`*^9, 3.864133195282199*^9, {
   3.86413327929601*^9, 3.864133287553337*^9}, {3.864133332576766*^9, 
   3.864133353182098*^9}, {3.8641334403238955`*^9, 3.8641334566426144`*^9}, 
   3.864133562247438*^9, 3.8641336317199535`*^9, 3.8641336640694847`*^9, 
   3.8641338838003726`*^9, 3.864133916131909*^9, 3.8641339918014193`*^9, {
   3.8641352038731537`*^9, 3.8641352725329356`*^9}, {3.8641417727182617`*^9, 
   3.8641418023916583`*^9}, 3.8641418403363776`*^9, {3.864143075053784*^9, 
   3.8641430827452946`*^9}, 3.8643991519070525`*^9},
 CellLabel->
  "In[1978]:=",ExpressionUUID->"b5dee5c3-2101-40ff-b338-91333f517d06"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "ncvb", 
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"t$330220\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"t$330220\\\", \\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"2.753828541797338`\\\", \\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"24.37258670607529`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"0.000025015495347347006`\\\"}]\\) for the integral and \
error estimates.\"", 2, 1983, 100, 17530945072416953697, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.8641418424896803`*^9, 3.8641418769335337`*^9}, {
  3.8641430843027887`*^9, 3.864143091483465*^9}, {3.864236695261631*^9, 
  3.8642367170755773`*^9}, {3.8643991538514185`*^9, 3.8643991576771736`*^9}, {
  3.8644085702957897`*^9, 3.864408591862775*^9}, {3.8644086270313363`*^9, 
  3.864408661022281*^9}},
 CellLabel->
  "During evaluation of \
In[1978]:=",ExpressionUUID->"5697606a-50aa-43ef-8682-a9939e181bc4"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
Hhih5aDS/mkvF/wnydI4YEL146wGL77d3HAkOHOLo8Y0njftxBa05YcHl+yT
TH9gwKn+xnE/JgDnd/z382IZ1V8tJ50l3Sl88kxKhC+bRL39HyKxICF48sNI
RfYFiQLKkkzXXxCBuiKeJ9+o+8zlHOqxMxCFFTtXppVjFF7RdE5pJkRhjwHu
uuD9DEJnb9Re2MqBVaxtke2hVH7+zy+g9vReX/FyJvHf+YfHT/X+y0/aPzDb
r/o3zBIjaP/APKMa/+rvDIL2D6hvmrx3M2sCZ//WcPy0sxGVkz3Fiik1iJ39
YL7W+b/opJjg2T1VwyjipvRyVf92dO1aw6DTiRl0rqpDanlJN3q22bwugoo/
aePx1aNe/ciM9wfn4DIMMp5NiKc4D6IITx/BvvMYmGfKnsi4OIwW567Ymi9D
IvvbilyGYaNoi3qXNo/6ODL3dl4l7zuO2o+LLYzU+IP29NX9to6ZRG92rdnq
MNqJ034G9p0dibLmMzjtZyivNcjN9cQI2s/gHvfnIRd1/7Sf4ZmPYa0vhS9o
P4PPxZbm2pfknJ+h7cw7yee3yDk/w1G7mSvvSzCC9jOYR3e/jZJhECkeN6Qd
QrihyGh8z72wCdz47epTR6N5QFdptFTh5U98sXD538VRvIBNTt+x9etA9mY+
SiERfKCrqDDa4zmFcuv078fcoOKlLs1qCx8D2hyD9ASvC4BthHFo9iUMhqvj
BNgPBCE2pqtEmKr/PXHB2aqZQjDccc3O/TOVH7YdpwvTheHXeZkjgfwYPAw8
7DH9UgRO71n8vITCGzZlLRWkhSh8L9h482sdiVK2Pia+1IiCxWD4zthf08jB
fWIPeUgMztx45lovODTnz6jKiFy7WaQbp/0ZXunv77EtZ3DanzHcz3BMmWIS
tD9DQi3gquMqBlHVZtlnZvevXoy6cZ7r+P2LP9q/0TgQJavDzyRo/8bu5s8r
t3WT+LhFq1XJqWZklikirqvejXL5siwEAluRYt6zotTaCWSW1/vGJKkT6QtV
nDfYSqKPJW1W2+p60ZEP71+yqf3eebKU6es2gNbJOsrJOmJQNBEuYBo4hLpq
xE/HUfNmqV3NBZOIERR86KPCQfdpdHO9x2RT4Bhqt19U81RvEInOLDVvDp9A
i9cOCOyPwPGTjS9XiEdNobSfjz3GF4zhtL/kQOzagaWLMIL2l9w8KdQ3vBQj
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
BpGg/uJQiFQnslONbtMfmEXrjewvsvb2onVj9ZuTqf6zbtnx7YfXDyGBtoaD
Hccw2GZ2RoLXYgbJ4FpXw4tJXNqWGbTbm0Q1f09rBm/ECNrvuGzUVa1/gpzz
O1aoizd8iCbxvoGcWyZVLEhp4JXw/U7idnzPKmUb2SCsJFmzYw2DKNtdOa3X
wgWlO45UcPZhRH2COOt7Hx9kb31ZO+pDokqP1oylo/wg5aOuNyjFgMw6tflh
UwJgp65dNMSFgd0LbDyRXwj8bKNA4yaJ2BXjn9giwmCSqBZWQs0n0SePHzkr
LgIuTyQ2jlDzy8XW0bczgqJwpVFJsZSqL90PwxqvRIjCsMXfcjk9EvFKVW04
KCAGEuKPDi1TnES0XzMtTvrP7AYWURRwTMDetRBpyvQeHxWk5s2tetufTrSh
u7L7dpm8mkZHzK5MJa3rRmXnmhwkuki0SUb7BGdNP3qSedRjhziF/84Exx1S
G0R6yWrhvNS8Yew6bMhrOoymDVNsiqNJpC/R3Pxj2zQ63Mw0ttSfxrvlCy/V
n5xFKpljNo9PY8Qr8VO2EpsoXJBTN2lFzQ/5YT0PMX0G1Jv2FJVT80OCSBRx
25gFjwol71+8QuLNaiM6SbZcsNL/bkjVBgaxmF97eZ8nP3wwGLrC6MbAwVmq
c8U5QUgW7jG+kU4ixiZt7TdRQiBf/UixniBRkoyNsWacCNwwv+9eQfXbFQvI
c7u2iYLRgeic9DESHXpfO7z3Pw7kXjy1PT2TSdD+1YXkKetTvxlE0O2LT1eP
/avHtJ9Vv2258El1jKD9rH0xFl1ObQyC9rOqyCqUjMpN4jphEvqYeiMy33Pq
ePGF7+hhb2hoiu1fdHGTokOsB5UNq013TB1sR2+3J4SuQDPIZuDCn9ikbsR9
UVbxOUkiItmwc7t9Pxp9XTK+fykGogUu99IODSKuPR+NVcMwGOASf/vdbxgt
PVWFr11PItvMqlUFXqPIDa6zpAKpuR4MNm9xGEei/ZNw+OpftAlTK0g5N0nl
y9DVVQ87cNpfe+9P6klcfAan/bW7BB78d94LI2h/7UT2roUrqfui/bUclXCV
/5v3aH/tEosJGVOcnPPXKhTPRtyOJef8tQ1Hhx3O52IE7a89vfqE9m4lBvHm
yvktHT7ckHxvv/h39iTOHfaX6R7BA7aslSM1q+vxKLXPR83DeSGcrez6yrYd
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
508aJf3oGpcO93pHjIGFlnNaZhRkYOrnkSgpvTHSl26Y0HkW1bMAzh8vPO9w
tjl8EOD8cXFFah2vaRP43+aPYZOW/fWdrxHOHw+efbn/3v4mhPPHXQdRhldT
L8L5Y5mfWzWaaH/I/LFJY0uywFkGmT/uqAq4q6DCJPPHPDvaH6w5ySTzx5dT
zviY8bHI/HH17HJFH4MRMn88sfhNnPKaMYTzx+P6fsMGayYQ9qd/Z+/iK7ww
jbA/3c0q39jKkoOwPz0mgrrX8B6X9KcHPdsz3dE5S/rTr8r3rk54OoFwXnnL
Jbm6wR4G6Ucv5C3R3+XXS+aRbX45BvIVjZJ55Eltz5grx6cB9qNPRws71GRx
APaj85UHPbvdzQHYj86r1rnfLH2GzC/bFCzjxulOkn50/qJBgfHMMYDzy7NP
0g1nBEcAzi/TZa7+urWSSfrRW8Vn+ue6M0g/ul35W0mDQAbA+eXoSJFnxFEJ
cH55x5SueEkxi/Sja7202GpjMUr60Tc9FNfc6TUGjovH6dLZ0lDzbreA6fkx
0pfOrrlnaRY/AnC+edspAQEfs2GA880vNzeI3tnbAf63+eajXsm9hb5VCOeb
Fd1iJZ7d7EQ438yMvsp/RpeO+tKEgt5ptICL9s3xtx8Nkz71vuOVai3tDDLv
/L4u2jfPnEnmnb36/ZWcnzPJvPMs69PekzdYZN7ZqLzm3Ns5owjnnYdkuzQu
RLER9qdPd3J9FNgzCPvTdW0aPmxdzyX96czKDS2K+lzSny662DNOJHma9J+3
CH6lyXoxAPaff9b02h5yeQJg//l6q0np9rOzoEJFVMp3vSD8uemoRNRyLsA+
dHrryIOHvBwyH22Vo75lbOsowPnoG02q3x0mmKTvPI2P5p6aziB956EXPCa6
nBgA56MT4p/6VLQyAM5HH/p0OTlblAVwPtozMlb2avAI6Tufn6ImUDIxCm6v
cNFwz5KGXi+Do1QSx0BdyI1gCSMZmL2vOObS91HSh/5Z2CdecoAJcJ7asb41
end4P8B56uEltiqftX6A/5qnhoZnW165BiKcp3YK7axbfPwXwnnqJ4tp35f3
9CCcpw62tuuPWvWH9KMbetvKC9owyDw12htO1ZBlknnqKOeyu9tdmGSeutqV
5/f8ASaZp3YSDiwNFx4h89Tr3um/FescRThPrSMfGrixYhxhP7p7boh38pxp
hP3o54LCrN5NzSLsR58/76XMjVtc0o9u7d2vW2/DIf3o94S3vn7oNYlw/rr/
ukrVkUEm6T+3U4qIpEl2k/lqo1nFPS35I2S++sCSnxE1xVMA+883n14mcc6H
A7D/XCiiI/emABdg//n9+RscvgvPknnsbHaOjdHbSdJ/XvMwyuGgPHE//zuP
7WAafNvYbgTgPLa9DeCpdmSS/vNwlWfPrX0YpP/8Friy8vpZBsB5bFc3u18O
pkyA89h35pk81I9kkf7zk6JOQwNzR0n/+XnnYZcCxzFw+1TXgY5uaXjC8EFl
5a0x0od+ahttiMMeATiv7TESzpsMGQDntaejFzp/cugCOK/tpXtO3Gv1u/+c
186I/Kof01aOcF47Qe5tR8uWDoTz2lXPa4Vvew6g8ap7hvtWNIOX9z1pG3WG
SV/69mnJ3l9fGWR++9oEFZkbM8n89tE0o81DkUwyv71rLUPx9iEWmd82S2J7
JjeMIJzfloqMzK4xZCPsR+f3qPe/GzODsB89ZGeYYoMEl/SjR9Z6aAY7cUk/
+h++ssasLTOk37zdvvbVlrtDAPvN1dZXl/DEjQPsN189fUxFSmQW2ISVfD2v
JAgdWl9mKi7iAuw7z7U9A79s4ZB57952k/ec+FGA895HuxKWsPVYpM+c2j3R
olrCIH3mKd9e19buZwCc9w64O3R75Rdikv077z3LYBvZtTIBznu3XKZ5ue0Z
IX3mRq7BvHurRsFMs+/ZrCRpOLt88JVL7BiY7q/M4NeSgZr7Hb/mCYyRvvPX
loIS8a4sgPPhJ74ccpVRoAOcD5eaphyzLKsH/698OM5/11r2xmcW9SG5BSkJ
L41+A5ubR6xtNw0hpW0bzHoT2kH0gnpu0QMGwvnwd8VjnnmaTDIffvhjbufc
i0wyHz5T0bBFWZWFLF+ovPiwaBLcOLs8MjWCg7DP3MP3gp5hGJf0mWd+slTq
dZtF2De+NEjtVCbPDHB0hWZeDQLQTTjjRkgvBzRuORlR0i4I3w+27dv1kQOw
b1ylfZ8J/ROLzJMXmQf23xBikr7xoDW6cctdGaRv/Cw7zn7rQwbpEzebOhun
dW4UNBhnSltcl4Yjn58sTgsaAxvTHYRHBWVg3rK+feXE+j1dkr2pIUwGDgsd
+XAPjoD/mTf/FehXJaLaCpY2qaTFjQ8jqfJx3UbUCV7UwWrKGIP0i4dJR7wW
28Yk8+ZU842+1XlMxLvqx7cLq6fAJ0uDmM+HuAj7wRuO6sk5TnEQ9nUnzJwO
e1A7CyzeWe+64iwIs16DpTnaXDC17a5hpbMQFOh7cWhZ9iyZPw8IVas2I/5e
nD+vXN//S/IQg/R196hKBe3nMMCut0m+VpukYWEwT1LngjGgdmXjL7UiaVhb
tKvOKYH4/jTM9821koGXjkRGzYaPgn/Lp1PcI+oubLpD5tNdP66Vy+mpRzif
/qGrs0/9SA/C+fSuiarD27sGSV93W7eiba0Rg8yn11OcPzwSY5L59IK+qMKU
vUwyn77yVvnl2WYmmU/3fsjetWWERebTRUPTlp7PG0U4nx6WM7LywqNxhH3d
N2lbZK61TyHs63aWYYb3f59F2NdtUMiYsg3mkr7uXQXSG6jXOKSv2+3ktoG6
ukmE8+xKRxj6ue4s0sctnORxcGdtJ5lX3/f++v0nBiNkXr1Ty1my3GMKYB/3
t289qY9s/8rd/V8f9+2CkxqexNyPfdxm+jE3kvVnyXy7gH96r9XwJOnj3kA/
94THgg1wvv3M3IL2Xr8RgPPtMc9M00S9mKSPe1q73zrdl0H6uFeJbFp+/jQD
4Hz7bsE6mvkqJsD59o3twWovr7BIHzfH071PgztC+rjdhX7q+W0jvh+V4LH9
zdJQMWW+y8cHY6Sfe8NKQzsplVGA8+8K5zY73wljAJx/P1GY5Vhp0w1w/v3j
pnmPdyXl/ef8u82lDkHVkhKE8+/s/LKE4MR2hPPvL5IL5hwSHUCczvr7b942
gUOiPGeEpodIf/cl77X8KYhB5uGXWj/261zLJPPwT2T2pXfcZpJ5+OVVNd++
27LIPHwnhZ7c8XEE4Ty8cZOUf4koG2Fft+rezT58J2cQ9nW3TZ9gR4xwSF93
cet+XYtTXNLXnZPtRH3wcIb0bfu8DhsbcPsDsG+7PGGiKk17HGDf9vvEptlH
32fAvYIkzXOigrAvz8FDQZELsH878PrhG+xjHDI/7171KGbZt1GA8/PnitYm
HbVjkX7ti8vTWQPEPRfn59/pdWr7EvM4zs8/+JG953oOA+D8vJqixIvcMibA
+fkebZaRORgh/dqPDL2FBD+OgndZoUqNT6ShdUGUslj0GAiP9rTwV5WBIav3
Aq7yGOnfrjno/+Z3HAvgvL3Ft/dG9bV0gPP2PnarJ+VFGsH/K2+P8/QLDH1n
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
D3T3CZOfJ/wZ+kf48/8DdVrWSA==
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1:eJwVzS1PgnEYhfEbUJFi0ZnFSNGmQZObxQbOYQRJDHGarHwA1E2eZLTwARBx
QvFDyDRo8CUYMWj0Zzh7znXd578nXz0qNtMRkZI9+ZyL+JIK0Z+KaGQi2gZZ
2ZiOmOB5uXdP44H+5NbT6/YlvaEv61tuH/qVfmn/4tvhsjMRN3bXbvvcNl7B
JZzDBVywe8YXuILfvF/Cj/wi/rF/wKfuRXyMW3gNr+Oy3QR3cdXbW99D7swu
4XfwrL6pf/MLMrTL4Lv/f7vtSod7tU24Pl6Vdy5vN+Z+8YkccAO7JneOczLi
EqnJH3GbLdk=
                "]], 
               PolygonBox[CompressedData["
1:eJwVzbsvw2EchfFXW5fJZTAS3RQzYWNiQbvURmxtRUerhQpJ67LZdDG6VJn9
CaKkJS6DxYSE0eVjOOnznPN9+4sv5lPLkRBCk+TkGby2h7Dmtx4LoRgN4chB
Qh50VfnWV/Q13bREZF3f0Jf0x3xAHnU9zSFc6z75/4fOdT/uznQ3fEaybvp0
47ooH+VvuFM2+S6ftGd4wfs7vI1PbAe2NB/ESdyK+1vEXudFPs+fvOvlNX03
/3J/yVfsSZ7nq3yYj/C0uw9+yJf4hfe/uKrv4LfuK/aMbhbncBxP2F/wPo7p
x/C7rkuucEG/pd/DUzir3/Df93gHn9rKtjk+hFO4DSd8M2Fv8BJf4H9hwzng

                "]], 
               PolygonBox[CompressedData["
1:eJwV1EdwVXUcxfFLAlgQBEINwTKjKCSg2FFCIKCAYoEZyyCkvGRrEhARBdI2
IrhSESkmIYiiArqzbIS0lxCwzOgOpBNAaVbAgp/f4sf/fM85v3vvy32Pm1OV
8yoykiTpZdb55+SAJOkxDaF7OzOT5GuFSeYMr8K08Jfx1/OyTJrXr0+S7OYd
wQtMI++UXiNvF37QzNcZyJvI20+/SZ/VG0sf5GX39RDONF4pe9XOa3Q+XcSv
1G2lX6E3yIaYQvlFPNJ0yq/DLfRR2ef0C/oL6Sp6DD1T1qR3mm6id8u2yYrw
Q/Tz9CD6LtkB+i36nP44+hBvlGfsFffC1bKn8XJ7q/CUuAYulv+Jt+MKXGW/
LT4PPwNv1H9X/gRvOh6Kp+NL8ltwtvMHvFreZbc/3co7pldkFuHbZLN4m+U/
05vpFtlHsmI8Od4DPZjOdc275T/ht3EKn7eXiw/zc3CGswvXyJ/BK+y/jgvi
WrhE/hfegSvxIvvt9HJ+Jt6kv17+JG8YPYO+HH8vs0d3AG6jj8uKTTPvF91m
XivONwt1snj38C7I8/ARerTrZ8Z1cK18pe5qeiqdLyuVXcQ7cRVebLeDXsHv
jd/T3yB/ijcDD8cP47/lt+Ic5494jXwB7rZ/PW7nn9D9gq6QldCL6dvp2bIt
emfoLXSb7GNZCZ4S74keQue53r3yg3gt/tXOePpoPJup1n2Rl47PhRvwCPOI
zj/x2c1e+UDcQffIvqQr9Utjlx5LPyo7STfQ7+ufjZN3tfu3630iK43vPy6I
d4CH4vH4Pr1D+B1chn+zPwEf49+A+zi7cZ38WVxjfw2eFp8Vp+SX8Kd4id1O
ZzWvUW8jfy4eSc+k/41rmn16g3A6nluWMkvwON3HeFvl5+it9DXu0SHfLk/F
9x5PxSV4GL5f53f9O/Bxuq+plb/E65LXxG8eZ5tZOv/hG8038sG4kz4l+4qu
ir9B7NK59JzI6Eb6A/3zcfKu9QxpvR2ysvg+4Gm4FA/HE/ADeofxOlyO/7B/
Jz4R98dXxbvF9fLncJ39N3AhLsBl8sv4M7zU7h5nbfzm9Tbx5+FR9Gz6Cv8m
861eFu6iT8vKzVKcp/t4eHQT/aHehTh5/dyrU2+nrJxXGO+DHkFPiv/LdCfi
nvg+mXr5y7xueR1uxjnmO942s8zsldXHb4Q/2nzP+x8oTc9+
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1:eJwV08dzTXEAxfEbnUgzQ1giyowavY02WLFRUzdmCCKiJepKG3Z6+k4ZrLWU
lwTJH8AGkYiS97SdhNF9fouTe77nnN+8+17uHbu1dP2eflEUJdEIf+KpUZSg
dn6EopIO9Y+i1gFRVCI7go/z7QOj6B8/ZlAUdekn4y/6mXyaPhcv0MeoTpaQ
1enz8RtqkQ2zaZNl4Aoql7XY7ZYdxn+pUzbJ7rNsPm6iWlncrlaWh7upWTbU
7olsNP+dVuB03VUqw83OFOsL+SX8Gf0h3R96JZuIP+ln8Kn6HDxPV8jf5Bv5
Gl0PrrGrc03I18gm8KV8rs1u/h7/ms/w+8T0Q/Dj8P3xOf0znCkfj7+5Lsdp
9ivxOn0FvoKT8EF9TLbL+RJ8h+/TF8gX4cX4NC6334iP4Tb8G4/GHeH+8Efn
L+g6+OmyFH4LP9eugL/BN/DVuve42j4Hd4XfXTZY/0iWii/TAVmT3c7wvcK9
8KdsynQbfO5R/AT/wpn4pU0W/mA/jR+u34zn6PP563w9X6V7h6vsipyr5eO6
1fJsnIX34C22a3Exvos7cTputBuEW8Pzgc/qn+JR8nG4z3UZTgnndVf5S+El
0O3XNcp2OHvbtVeXJ1vIn+QP2h3hH/M/+Rfhf8gn7KfyybpNeLYuj7/GPwzv
ke4trrRbFc6E90m3OTx71CAbiFv0I/leWoqH6y7SPtzgTJH+luvX8KyF+3LP
C/AJfMDuBz0P3xPHbaeE90y/Ec/SPQjvmuxNeMb0m3AH1csG2DTLkvEF2iur
t9su66Fs2f3wPsm7w+8mi9Ew2XkqlT+Ub5P9Bwbhji4=
                "]], 
               PolygonBox[CompressedData["
1:eJwl1EdwVnUYxeEbSDKDSpwRELEAEUjcKM02iggDAU0gibQZF7gA0sAyKkXF
giQ0IZYdLuidJEACOwTZKqRDAuhKN0AKCColAXzecfHmnt8553+/+819v2Qu
+GDW+32SJEkxX/tzKSNJLpsK+pj53TyjcMhU9k2S9tQkKeel4Jmm1dTxe/lH
+fPoF+iv0pLkPdkN08J7Ev8mz6bT5YU4W1ZjNvHaeKvlG/DDuNu8rJPgSfQw
eRmeEfcztbweXp0zc+nn6S/l78qum2beE/iiPItOkxfgLNk8ejtdTW+UnUv9
/7sfc73HL+VNTk+S6fgHvF5vLd1EZ8gyZV2uL+H7zhXjH+V/4tf5Y/BQXIrz
nM3DpfGsuBln4CN6d3i1zi/Be+lr8jn8F/F4/AVeol+Il+NT+C88EDfpPY4v
OD+KTpXn41HyufQ2uor+RnYWr9I76nqXX8Kb5B7T8Pd4nd7beA1uxP3lw3Fn
PAu+52wR3iz/A0/kj8ZP4RKc63wuLonvg5twf3xY7zbviPN7XK/KZvPG0Z/T
i/WW0T/T1+hG2RD6vP5Iuq9sJh4pO2g28Fpjt+R3zZtxJnaTf4t/mDcr9s9n
j8UrnS2TF+Cl+CS+iht0HqPb9UfQfWQz8AjZAbOe1xL7FO+WzqG/k6+VPYQ7
4jNwr/y12G15MX5DXhzfl26Irs+tkd/kHdJdjHfT3fK3YmfxGPxZ7Jx+Pv4Y
n8DdeACu1xuM25x/B1fK2/HT/GycgvOC9efQW+n9dLpsnU5z7JGzda69siLe
VPpbeo1eBd1AP8i/Es9E9+hPiN+PrAhP16s31bx/eTXyMvffRXfJC/nj8Wj8
aeyX7kf0T3QXfUb+KH3OuUy8L35PvKbYA14FfgBfjvvo3eG9GvstX4SnyYvi
/dJn6CrZP7hab6drJ78g9sozPIc/wcXx/wl/iI/jTvwIPq03CJ91dj7eJG/D
mfwsnOBcPFw/B8/GW/BenBa/Eb3G2C3na117ZIt4U+hKulyvnK6n+/EvxXPR
t/Vfif2WLcQ5eqdjr3l/86rkpe6/g+6Q5/OfpVfEO9PrML/yBuJW3WF4T7w/
XkPsEO+WmRq92GP+Df5BXosZytsdz8avj/fEu2mm8H4x+/nX+Qd4/wE+8smY

                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1Hl8z3UcwPHZRkWHrLYusSkNjbKWxjRm06pNs2i1ZZYIFaNDji5nig5E
EYoUlU7dB7pLytmtCx0UFTok6fl++OO51+fz2X7f3/f7+XwfS+9TWz64TkJC
Qo0f0Xp+LNNSvVXz9A+9UC/RLP1By/Up7ar7tJcWabp+oWW6QAt0j1bp9Xq6
/qo99SU9R5PINk7VVTqTfOO/dShtjX/W5+JzZJp/p48xjkQOsLZcb6NP3BcZ
1r7Uh7iB00iztlpncRUXkMSB1l/XSVzKWeSQzEF+94ZOpi/F8RzUjf2K747P
x99RnwYczCEcymGx7hpv6u3042zacZT1NXofV1NBw7iG9bf0Di6LfeIMjra+
VmdzTZwLh8f3WX9b76Q/59LM2gZ9mBvJ5Rhr63QO13IRLaxt1MWMp1Hcu7V3
9C4G0Nr8R32aEk4w/0oXclM8i/lv+jLtOdZ8vc6lk/FuHUa28S/6fOyBcSKV
xi11k3bXx7VQ9+rFOiGuqTvjvPS1eD5Npjcpsc/6rnbTKdpR/4zn04HaRn/S
8/WZON942SmVE/VrXUQX43/15thv49/1FTpwnPnHej/Xxftkvk1foIpW5pv1
CW7hiDh7a+/pVC6P+6O5tW/0EUaTR2Nrn+gDDI/n5sh4F6y/r9O4gvPi2UiN
c/e7FXo3V1LGmaTFexXvSpx3nEXce3wHx9OEpqSTEe9JnGfsQ5y9a36g0xkU
50F+fM76pzqPEfSK5yDF+kqdwWDK47zjO6x/pvMZSTUnxZ5Y/1DvoZZTzLfo
kjib+Bvzb/VRxpBrvkNfpXPct/nn+mDMjf/RUeQYb9cX6c3J5t/rkxQZ/6cT
4xyNd2mFLtUSrVtn//+/zNhz/Sj2We+N/dS/tFKH6Km6VXvos1oc/zeppof5
WAqooUW8T7SMdyPuiSxa0yaePa5HIW35H3DblCY=
               "]]}, Annotation[#, "Charting`Private`Tag$335357#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
MP6PXkN3de5jzf8fmnObhg==
               "]]}, Annotation[#, "Charting`Private`Tag$335357#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1nf8V2MYxvFv0URRStmlhJaGPROSkWSUKEqoUFSo7FGkaKNsLclqIE0q
TVltI4oKDZuo5H398Xnd13Xd5zm/8zvPON8q7bu26FKkUCjMKVoodCteKPQo
WSisLlEotMEe+Jivj3fp+foT6QoYyZ+J0bIn+X/p+1Adq/lT8QH9g/4HdHW8
yu9Ur0VzeoPaFB/T3V13O72Gbouf6UuxJ/2J2gCVSxUKU/ki6vV8TXWBcZPo
inku/hn97fTVqME34tfR5+BQfjFfSr2Fr6uOMf4peoe8HH+/+gffCkfSa9TT
MIcurt+Z/tGYOeljgvwSbKTPxyd0D/076C/oa1AMC2WTZQfgWf4sjJU9ze+k
H0AN/JT3gDvlX/LX5u9ikWxc7oueel/J2qEEFstewQj5Lv5BHIXNuQ96yb/m
26MklsimyCrhOb4xxstG8v/RD+FofMGfjrn0Fv25ead4jd+ltkMLepN6Aap6
P5/y+6i38T2N6a2ule0ru079hb8M1fhS/Kd0QxzIv8cXVW/ga6kfGf925j3z
yz+v/w/dBkfxZ/Pr6XNxGL+EL612yVoz9hl1t+xh/ElfiWPoL9UzMI/e6rp5
uR9e5y/NmqUvxGd0L/276G/oDrk/PuOPwzR6qf47eX68wJ+DCbJn+QL68DWx
TfYhfzTe4C9Db9nd/Lf09dgr+032Gp6TF0FfWa3shzwH7pGt42/A3tkbstfx
vLwoHpHVznvOvXGvbD1/Y+Yl71v2Ru6THu7D/amu+06/I8rkf5S9iRfke+BR
WR38KnsgY2Tf851QFp/L3sKL2bPoJ6uL32QPZoxsA985awHLZO/KDsKL/LmY
KHuJL4bH+GPxFX0mPqR/15+fOcSb/OX4kb4In2fd5m/RG+mb8qz05dgvz6ce
j+k516yRG+nlrp+qHpx9KXtJ71+6beaJb8J/RzfB4VmPmSO1K3+sOsn4l+ni
KM/31/+Lbp2zga/Hf003wiH8/OxX9Sb+D2MX5AzDW/L/1Pa4ImeA2gzLsnZd
9xC9ib45Z1TeHX8CZtAr9N/L/fEyfx4my0bxJTCAr5/1L1uYfYWJfEv0kT3M
/0DfgvJYKZuWsxKj+KaYIhvNl8TjfIP8n7K+6JPzkO+C/bEqexaPpK/3k6wr
KmB19goeRT88hv651nWb9W9FRazJ2sCAXKu3RXYbDsiZlDnDGHkpPCFriL9l
j+e+sq18N1TKXs/7wVh5aQyUHYftsifyDLJtfHdUznqTTc95gtH8+ZiWs5ff
C4P443MOyRbxtTGJb4WB+X/4n+keODDzL5uR9YMx/AWYnvOa3xuD+ROwlj4L
C7IG9RfTdTCZ361el/OL3qxenLVLD8o7on+hb89ey/rJnqKXqydGW28z+T3V
jnleda1xM+kqqMSP1d9BX5O9xV/If0+fl2v4pTlr1Fv5euoM48fT+2B/fkje
P31V/ib9jdoYC+mS+jfTO4xZotbFFHlrbKGbYwU9OPNH/0rfgYOztvmTMCv3
1J9FV8U4/iLMlL3Kl8FQ/iTslA3J3Mp+4+/EIfg24zFBXhbDZCdjl2woBsp+
53viUKyTzcYwDM9vHAzKvtXrhcOwXvZ+zmv5vhguOyV7Ob8pMFj2J98bh+cs
yW+hnNc5k/Ck7NTMb34H5Lllf/F3oUr2In8yZmc+8jz0EXiFb4Y5Ocv5cniK
Py3/J302FtEFfJSzCm/Hm4sOmSd6q3pJ7idbyZdRu/H11RF5J/Tf8v34u3P2
8i1Rna+afU6fkrOTf58vpnbKmlU35L3Q1TBe72LMzfck5ySe5k9HEYzMO5Zt
p+/BEdiYb3K+3/mO5luY71u+Rfm+5BuRczfzYtw/rr8X1bAp39h8h7IuMUJ2
BopiadYu3qGvxja6BVbRZT1zd7qBOsr4/wEgu4E0
               "]]}, Annotation[#, "Charting`Private`Tag$335357#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1WW4VFUYhuFBOhQxsFFQQcSWEiWkUbq7BemQlFJAaQMwUSkTFQHpRrq7
u1O6JL2/H8/1vc+7Zs6Z2XvtNZkbtqnYOkkikciaNJHImTqR6Jc2kdicJpEo
gW38EzTBX/qbujZIYKouF/rrt/CS2M4/RVNM0N/StUUSTNPlxgD9Vl4KO/hn
WK97HJ/rsuBd3UR+W26HOzBdlwcD9dv4W9jJP8cG3RMYqnsSzXSTeALteVLM
0B3hOfEzz4O8ukF8u/w2dvHLvCim8qF8o5wZw/hTaK77myfBezwZbstlME+e
af2onAu/xP/Aa7rBfIdcGrv5MGzSZcFw3dNooZvM70AHnhyzdMd4bvwafwv5
dEP4TrkM9vDh2Kx7El/osqKlbgpPio48BWbrjvM8+C3+Fl6P+8x3yWWxl3+B
Lbqn8KUuG1rppvJk6MRTYo7ujbjvut28HPbxL9Ea0/TJ0VmfCnN1+eO+6/bw
8tjPv0IbTNenQBd9aszTFYj7rNvLK+AA/xptURBDre3TV8RB/g3aYYY+Jbrq
02C+rlBce91+XgmH+LfYqnsaX+meQXvdTJ4K7/O0se/TuT58vrzA+gk5L8bF
vrPWTn5dvkuuLa+Rc8q95TfjHpkH4h7qKpv3m410pc3D1q/IxWL/8WnxOcxO
vKI5wvo2OSsK8K+tZzJb8nJm9ri+ZlVe0lzGXzJ7xj713llmanTTP6x/V04X
z6ZcTl4gPye/L//j9SfN11BI93vsfbM9f0NOL9eR18qFY6/IB+UqOMK/w3Zd
NnyjexYddLN5GnTnd2KhrkjsFd0hXhVH+ffoiKKxL6wd1lfDMf4DOqEYiqNE
7AWvOWK9Oo7zkeiMOfq06BH3BIt0JWN/6I7yGjjBR6EL5sY1Qc/4jlisKxX7
Q3eM18RJPho7dM/gW10OdNXN43eiF787zi3XqXxcT3mJ9VNyPvzB88cZphvB
j8u1cIpf5cUxnY/hO+XsGMEf9/dayc/FsyFXk5fLL8u9Yp96/XzzrtiHug+s
PWI2i/PJzBBnoVkh9pm5kD9vduOVzaXe/2+8N/Yr/zPOJfM9Xt4sEN/LrMvf
MtfxXGYf/nbcd/OErjYy6hvzf/X/mSUwQz+W75KfxXfx/+PZ9NrqfIXczfoC
OT0+5Pdgme507D2M5wXjHI19wk/KdXCa/4juKBP7xNopfV2c4T+hB8rG/ojP
pa+Hs/xn9MQ/+rvRW38vluvKxf7Qneb1cY7/gt26HPhe9wJ66RbyDOjD78MK
XfnYL7ozvAHO81+xJ+4jftC9iA90i/g96BtnA5K5LhX5Inml9TNyfvzFCyGD
9Xp8fZyL1sfIZ+WGeMDaO/yC/lqcCZipz67vHGe/fq/5PArqRlp7wmzNX4rz
Tq4hlzJX8ldiP/Fq5ofeu1i+N+4J/8j6o2ZzXtbMyJOblWIvm4vjGpndeRVz
lfefjXMMhfkE61nNDrHv4p7L9eUNcm65b5yB3jPWPKdrhAf1TfhF/fX4nJil
H8f3yS9gVDwb6K1bwu/Dx3FtsFp3Lr47JsY5Fr8HsYf4ebkxLvHf0QdL9fej
X/xvrNFVjn0V15i/g8v8D/TFMn1G9Nc/hLW6KrHX4jPzJrjC/8R+3YsYHdcZ
H+mW8wcwIM5rrNOdj/MYk3iROC9jL/JLclNc5Tfi2cRsPp4fiPuJMTyza9ZG
flVOJ9eUV8mvxj2Na+P1K8wHY5/pBlp7zGzBH5FTxO9WPMvmkti3Zg9e1Vzv
vRfi/qEI/9t6NrMjr2AWjWfKbBBnhbmR54m9w6vHWRbPhXxZny9+n+K6mU11
/1m7Ge/DnPg90XeJ50B/0HwZY/VZ9G3lnPH7IteSV8v9vG6l/BAGxV5FSutV
+FJ5g/WLsRcxmReL3xLdb/yK3AzX+AQc0r2CH+PsQ3/dKv4wBsf1wkZdDYzT
XeXNcZ1PxACsjuuJIfpM2KSrGXstvitvgRt8EgZijf5RfBK/AdisqxV7TXeN
t8RNfouXxlyew/frKleKe2HtcNx3/BTPFAbp1vLH8Gk8+9iiqx17Unedt8It
PhmDUQd1UQ/10QAN0QiNMd77bnhPa9zmUzAE6/SZ8FnsQWzVXYp9gim8eJyX
PmdDvknOK38s14gzzGv/B7c2q0c=
               "]]}, Annotation[#, "Charting`Private`Tag$335357#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1nfcjlUcx/EbKVkJSaGSIhIlhBYhlJ3sEQrZykxSdtmr7L3JysjOHtnZ
m5Kyyirt3r8/Pq/vONe57+e+rnPO9WRv1KZq6ySJRGJA0kSidupEomDaRGJK
mkTiGZyWZ2MAqujX6Srib3kL6qCQfqquAM7IczAQVfXf6CrhH3kr6qKwfpru
WZyV56K57ojcFPdhkO4N3Xq+Mv6VB8v/8AOwTe4iX+A74jFMkFNjLF/P+HP8
dL4gzsl95Jt8T8yTW8hH+Wb4ks+CTPwXNDm+wwh5Lc2LweZUoxt022kVOpve
H5+D/4wPof/q99GBdCV9Amew3fgH9Cf9LtqJLqaP4DgelyfSNDiIcfJ6mh/1
zS1CZ+gKYTqfAd/r+9Jbul7xO+SW8jH+XdyPUfKdGMkPMf4mv5GvigR26Lrq
fuY7Iyca6IrqZvKF8YM8H0NRXb9J9waS4FvdWyimnyU/h/PyAgxDQzRCY7yN
51032zVF8KO8EMNRQ79ZVw1JsVP3Dl7Qz5GL4oK8CK3insnNkRkjdDV1W/g3
kSzuse5D3UW+C3Khie5F3Vy+GH6S+8m/8b3jecit5RN8C8zns+IBfjS9C5/z
I11Xi9/KV8ccPjPu4IfGWqD76SC6iubGWew2rxu9pN9NP6Bf0ezxnbFW5Ek0
LQ5hvLyBPh3PGk3Nf4nO02+hz9MZNGM8P2Of0t91fbCMfwxf6dvQk7qWWMBn
w4P8GJoCX/Cfu642v42vgeQYJidi7fN7jH/EX+a7InfsHd3Lui/5F3BRXoK2
ulNyK2SJPRVnRewBvibuxF7duyiuny+/iEvyUoyKMyH2aKzneN7xXFDCtQtc
9xIuy8swOs4V/Q5dLdwV+y9+M17RL5RfxhV5OdrpTsutkTXuga6e7lu+NlLE
s9N1113hP0QetNWV1C3ii+Oq/Jl8m++Lr+X3Yq/zbZANY+W7MSq88fr8Tr4O
5sa6inF+OE2CIfxqmifOH9d/TK/qumEJ/yie5CfTe3AYE+SN9Bn8gHbmlaKL
9VtpCTqT3ocj+MV4f/pHPFPajy6P8yfWCFYYfz/Wa+xt2pYupA8F/DiaEqP5
dfSpOKvMaUB36eoiZexJOSmG8geMfxLfzX+EvHhPVzrWJ/8KfpVXor3unNwO
D2N8nC+xd/h6SIWD8TfiVf0SuSSuyaswIT4DHdARndA53hdx/qKMOUtdXwrX
5dWYGOeUfo+uPlLjUJyLKKtfJpfGDXkNJsWZpt+ra4A0OBznDcrpl8uv4qa8
Nv6W2L/xm/FIPL84D3X7+LeQNs4UORmG8UeM9+B/5btjKZ8j7jU/habDRH4T
LYBurn+Nfq3bRsvQWTQTbsX7m/4Ze45+GmuV5ow9inVxn2Lt6HfS9+ki+jCO
xdkUz4CmwgGMkb+h+eI5YUqc63S/fgdtSOfF+RJrNM4VegeG82ti/eKoOT3p
Nd3HyIep8r2YFGvE+OuxFvmy+C3+p5D/4j+L74/nKp/n2+PRmB/vi9g3fCOk
wzFdL911/hPkj/upK69byZfD7/J6TEOT+I26xrgXx2MPooJ+lfwabssbMB1N
9Qd1byM9TsQ6R0X9avl1/CEPkv/m+2MFnyvOIGyMtUl/1HdADszQNdMd4t9B
BpyM9YBK+jVyefwpb8LMuJfxO9EbfdA33mvxPogzCpXNW2tOBfwlb8asOH/j
DNE1QUacis/Q3eB74GlMk9NjMr+ZPhv3Hf1d+z8wFnnn
               "]]}, 
             Annotation[#, "Charting`Private`Tag$335357#5"]& ]}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"Feedforward solution\"", TraditionalForm], 
         PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1a\"", "\"u1a\"", "\"x1a\"", "\"\[Theta]dot1a\"", 
           "\"xdot1a\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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

          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1:eJwVzaEzw3EYx/HHZo4ZpugqZ4GAf2ACSZgwKytzAgVxhUYguVvRNoE4JLe5
I6n+AObOlhYF7ngtfO553u/P8/39Zsv7m3uJiBiSgvxMRvxJk0inIlrJiHcH
RTnH+eGICjeFCziDF/DoSMSjvcG3+CP7Jb/K9+1fvrfId7kiN2Z+41tdDR97
18AlXMVVfc78xE1zWX+gn8O7eF0/Y77iuvmsf9Of4jN8o8+bv/jOv8d1be7D
Xc9+xW/bL+xr9h1dFm/hCZzD17jr7RLXw2k54VbkkJt3t8G94Ht3Ge4Jd3BJ
pgf/4h/kH7SfLq4=
                "]], 
               PolygonBox[CompressedData["
1:eJwNz7svw2EchfGX3pTE5g8wiJKWuAx2JIwqQcLkMoiEEDbFTNhqYkEttbG2
hNFqoULSumw2Fon4DCff8zzn/aVp6+xKdrk+hFAnS9IP/ppDeCTSsRCqkRAi
kuN7JCljfCIaQoo/wRPy5H2Gr3FR2eJ6ZZVr93aEu8WNkuUauA7uFJfxOs7j
SbyPB/E8fsEf+AiXcMXvdOE3PSbfetG27V1Bn9Y342JLu1V86fbZ1+wpvIhH
7S3uPS64d/YH+y7ew0X7sPuLb9wm+7g9iedwpz3hlvCZ7dq2oR/yA/yXPsUf
8EP6At/GV/RX/pM/1sv8s//Ujd/1uPzoF7Yd7871GT3n25wt49bwlfsPNQU3
4g==
                "]], 
               PolygonBox[CompressedData["
1:eJwV1FlUlWUYxfEPNG9Sb0qmA6Kpa9md8wiUU1kOlXOOZc4DYnXRpKBlg1Mh
Co6laa1VuRSZ5DZAMzUVRG5yumpyDBAntH7vxeve/72f9/kWx/OdrnNXTMiO
j6Iozinyz6OOUdTqNPIZT9A2UfSUs8nQMKdKniA/LbuBFzoxZ46sU9soGiAv
xk3mMmVN+Glns+wQnmdmHe7VLor+4IfLV8n78tmySboYrcVndL/r8vkSebWd
ifg3/qZukVOIx+qXy1LxGzgBD8RP2vMzf0ReI/+A3yVvticLN/OdnFa+RPel
ucP8fP5TeW/3/+RHyFfL+/ErZJPDs2gd/oGe1V/Ubwk7cKn+ZRrJqmiN5yXx
Z+RT8C3z1/G35ovwYlyEx+H3cLa5nvQyTtO9qUvkB8lL8DH8Id6N79j9HL7D
JziP+FLdV+aK+QV8rl2f6frQv3AFHanP1ffHOXiKPo2exz/Sc/pL+oKwC5fp
x9A4WTU95rnJ/Fn5VHzb/A283/wSfjs/Pnxe+s54Lk7Cg3EpbnH/eVkLTnTy
ZUfwQjOf41E4Dw/AK+2fGvbQelyru6zbyufLynVjabyshh63O4U/J5+G/zV/
Ex8wvx0vxTvwK/h9nGPuWXoFF9N0/Vv6ZDxE115WxZfJj8s/4vfI73rOMHyX
T3Ie82W6LeZK+EV8nrtf6PrSv/ELujW6gfw0eR3+xZ6YrBY34mXOTvxq+Ntl
XfA8nIKH4g52VfPl4a58Ff+1PEPeyN+zb7j8nmymLJn+h8vD9x8XuFeKF+M1
eL2+H/0HH6Uv6tfqB+G38ev6dHoB/xS+I/or+m3hb8UV+nG0jeyEZ6fSOlmT
uVv8d+H95Hfxr4Wduq54Po7hDFyBT+DV+Bt8354R+D4/y+4UGoVnhe893Wq+
TL8Eb9CNxh/jwXg6rse/2pEmOx/eeRx+6HbjCWbekT2DF+BUnIk7hnc1fAbh
rjyX3yvPlDfxD+wbKX8gmy2L0Th6NHwf6Db3yvVL8Vq8Ud+fXsOV9CX9J/oh
4fl4Rvi/pQ34YPh89Vf1hbgg7NWPp21lJz27M60P77y52/z34f3i9/AT+Xd1
3cJvMk7DWbgSn8R5eB/Osq+Zf2jfKPlD2RxZKo2nlbpCdyp0y/hN4bcMr8ND
8UzcgE+5ny67gFtwjtPdaZWfdrroGsI7Ilvp9HD+B9ZX3AU=
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1:eJwV0kdwjWEUh/FPnVFSXImInQ0bJCFBEm0nYXRm1CQSzJBgFwlm1KhRRhus
WCnpSzWJlqattGGnpkl2iPb7Fuee8zz/837vbWPzty/d1j8Ign4q4qUvOgh+
qzHkJtWp2gYEQfygIGiUP8MvB8oHB8Eyfqs+Ge+Wz5Ed5ApwFS7HEdyrMnGv
8zVcGo6zk8Ml4o2qQ7WGnmuw9xQvxSn2dnGz8XE1gutRGVyPvWouFY+0t44b
jYvwfHweb8DtqiXcwfXO1JlPy9/hNtkSnIx34ln4AM7HlfgYrjP3mWP57yrd
/N1zevlMn/8yV2p+yFfZbzAP5afwG/UIXitLkNXgD3i8Xijfoc/D5+QF8gv4
Ku7A3/AK3Gwvgu+7sxH/k2frtfxJ/RR+K2+1fx2/wIn6YnmRnoRL5TPln8xJ
3H7ZenMFf5SvNf8yx/Ddarq5232Vssl4hHwNNwrnq6+qKfTcvfB3Dd+LnTe4
RXbNHc/xaH2RrFCfhEvkM+T7uDx8Ex8JvxfzT3M036Wmmbs8945zPbIM/RJf
ppfgB/IK567gejxET5Fv0GPxanm8vBq/x+P0LfJiPRufla8Pz5vbzV/My2VP
7MTiu+7+K8viqrkT5td8s71n5gR+IT/RvIPP5PfiXHwDHw7vNv8wR/Gdaqq5
03Mvhr+7rBHftJeMY/AqHIc34yx8Bufhz+pxuIPvOP9HNtf9VeH70svxK1mT
vQXcBFyMM/AenIOv40N4OO5QabjDs25wSTjazkpuJM4N/yfqUei52/bScZka
xrWrVL6dj3A56qN6yEfxt/j/72mP8A==
                "]], 
               PolygonBox[CompressedData["
1:eJwV1EdQVXccxfFLeU9XJmq2lgcIColmZTYqii32SozOaJTMJMYCNizgxopt
LImOYgEFjGUmi7hRmpqFJRp7wy4pu2ShSeygn//ixznfc/73vnsf//9LFBSN
L0yOoijJrPCnpV0UtZomvq3iU7PcJKdEUbPJiUXRHV2+7IDJksVTo2isvA0+
itfjG/gXPBRn4nm4Fy7FU3ANLsVJ+InJxrfd96Hsa5xnzSbZRLwdL8SNeD/O
xDE8BsfxEbwOX8en8RDcDRfhnrgET8bVuCQ8I/8fH8kfmx78rfC+dHw8ihpk
O+ge6/6SPXDNPT5DVqArpgPwRt0EXR3+B39Gf9Cvpgtwg75SXxnuieO0m76A
puLR+pj+FH6NB9HD+g20DF/Tn9LX4Av4IzpYP5Nm4EL9J/plsi9xFV4Wvg/+
X/4d/0jXnb/p/drQca6tl22nu637U3bfup/wXZxOZ+gX0f54Q/hO9LX4b9yb
fq9fRefjen2FviLcF8fCs+ln0BQ8Sp+qf8UPlB3SreWvyk/Kf+U7ygfJ0/m5
8o/lS/EkfAAvxa3moSwL3/Au4/A+ky5Ltm6kPAX/GPaf+62RXZE1yqrxedyB
DtSn8XN0Obol+Au8Hy/BLeZB2LP4us+p48v1f+B7uuk4F6/HY/E2PA/X4b1h
L/CpPidNPp0m4RG6ZN1J/BLn0YNhz9LV+LK+QV+Fz+H2NE//LU3g2fps/THc
jHPoYn0pzceV+sX6w/wz/i0/RXc/nAN8zXvEw/PKamW7rPsd37WuiU+TfyXv
x6+Tj5FvxUW4Fu/BCRzh4TgJN7rmBR5Aa3RldBW+pK/Xn+U/DOdE15WfJe8h
LzZvwnmSZ8iuerYmPA33ta5MNhpvwYX4BN4d9h+f4n5d5e/MsHB+5c/l/eXV
YV/Rlfg3XV34fcJn8AdhL+u/oV3wd/ru+p/xE5xNi/UldCKu0C/Sl4f9ip/i
13hyOCNhn+IrnjsWvivZCdlO65rDb6N1d/iEfKq8D79WPkq+Gc/Fx3E57oJb
zefhrLpfg2v+1+fSKvkK/qKu1tpc3BnPxFl4YThT4f8X9rPssutH4l2ms6zF
DJW3yjNlC8zL8GzyhPySfATeaTrJ3poh8hb5exXBxu8=
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1Xe4zmUcBvBj7723Y++VvTdpiEpZDWTnkGQUHTJTqERFyN67stqDkpXR
LrNSkU2F+nyv/vic+/4+r+s9v9/zPOeS2COp46AUCQkJm/2IbOnHr3KBfENO
lVVZzUDzSFmEZRwxz5YNWEdbc1+ZmUV8Yn5B1mKG/owsy1F9rmzKLXpneUO+
xTS9BmP1MbIE3+ndeUzPyz79NVLSynxaLuRRbqWftSx8Gr+fmnQx35RvM44H
SEVr67/JRQyiHbVITRuf/S4Xk8Rt1CYNaUlHejKQkUxkJgtZyUZ22vqeP+QS
BnM7dcgRz+uzM3IpQ7iDunS1/q/cEvvGg+SM57N+Vi6L/eBO6tEtDo+tYjwP
kSue2dqfcjlDaU9/a1nZqb9I/djfOH+26RN4mNzxrNbOyRU8zl0MsJaNXfpL
NIj9NKdkuz6Rp/WSfK/3iN+t52O/PlPWZU78W1mBE3qeeH/9vFzJc3o1humj
ZFGW85X5FdmQ9XQwD5TZWcxn8V6yNmuZGXsiy7GSY+bXZTM2xvfE/spUcefZ
YZ4ed5NJerIsxQ9x72RjesZ+yPwc0F+W9ZirT5IVOannjTPSL8hVPMGT5mJ8
rXeMe6vn4PP4HhrF+ZlT844+mV7ki/OzdlGuZjh305j8FIjz8fkluYYR3EOT
OE/raXhXn8IjFKSDtctyLSO5N/4OrOVktz6LpnGG5rS8pz/LWL00P+q9GaYX
4MvY23hmvRKn9ELxnvoVuY7n9eqM0p+SxflGf1U2opOeJHOxhC/insk6zI77
KcuziuPmebI5m+JMzT1lOhbyvnmGrMkapprHyTKs4CfzHNmEDfSJM5IFWcrB
2ANZn3mxd7IyP+uFY//1q3J9nCujzYl8q9/HYD03e+LO0jzO0pyeD+KO0zfO
0lyIQ/p8isTZma/JDbFP3M8Qa3nYG/tFizhLcwY+jL2lH0XjLK39JTfGc9GZ
lnFe1jPykT6N/hSjk7W/5SbG0IVWFI938dk/cnP8bdOV1iRSgpKUojRlKEs5
ylOBilSiMlWoSjWqx3v57uvyTZLpRhv6WM/Ex/p0BsSdNhfmsL4g7qJehV9i
32SLFP//X1bD/B99QcJA
               "]]}, Annotation[#, "Charting`Private`Tag$335441#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
Hcfn8ZTYw7ixz5wKb5bPmvd/zOOjEg==
               "]]}, Annotation[#, "Charting`Private`Tag$335441#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1Hcc12MUxfFfe2hPVLTRTqWpolRURinRHtJSaBuhaJKWtAgZbRSaNGhv
7aVStPcuxfv+8Xmdc+59vvMZ+dp0a9A1SSKRmJI0kViZMpFYkDqRKIzvUyUS
z+FuXJHb4jQ/BteM2yvXwR9y3xiXJpEYJGdGFTmF/Br/Lz8F98lj5HuwyvUL
6X34Qa+k3iS+CZ+Ff5tPg2r8TJpL/Spth6fVzsjl6VdyS/qxnJ9+FPegd9Ha
9Me4hl73vH3846gvbzW+DP1cbk5fl3PRwXJjmoXWoN/Th/VS8t35W3xlfir/
FX9/PJu/F6s9YxG9H3P0nkdW/XfktMgd/42+iLP8WNxwzX75CWyT30BVrFFf
rPYA5sovIA9uqv+pVhfb5TdRDWvVf1Ergh/lprgH1+X2OMd/gn+NOyDXww75
LVRHKu/ZQ+02/zXWGferXBQ/yc2QzZh35Tvie+Pd6Us4z49DAf0R8t3xn1x/
MP41duqV1fuC78fn5ofwWVGT/4E+op6a78k3pP/JVeg0uQ39Rn6AjpWb0rzx
z+i8eAe63vOW8MXi2+SfjS9FP5Wb0eZydtpffpamo9XpLJo3/ivtgAt8BfWv
+fF8QX5krL/4N55xiD6JXXpvx5zoD5Wz4VE5jdyLT+BbeYNrlvLFMU9ugXwx
D3JHXOQn4D/j/pKfwm75HdTARvVlaiUwX24Z6xwJHI69gD38u6iJTcYvVyuJ
BXKrmBckwRG1Z7CX74/HsNn439RKYaHcOr4ZSbFF7w9sxTb8bkxpLNJrg0JI
hu16K9QfxGK5LQojOf5Wa4B9/ADUwg7jV6qVwS9yuzgb4rzAPzH/2M+/h9rY
afwqtbL4VX4x9h1uyZ1wiZ8YexRHY37xJ/8+6iCtOemtlgRT5V3ut5ovhyVy
+1hbuC13xmV+UuwJHJMb4QA/MPaUew2Ts8dZIt8h9+GTYppcRP6Ezxfz6Dlr
6ENYqlda77NYr3wOfkDcm6aP9U9n07a0SKwHvkvMl3xFrhh7QG4Vazr+PR0l
P09z0zr0pzhbaGr943GOxVqVD8rl6JfyIP5e/gM+Bx7j58ReUk/H9+WTxZnH
T6fT1Yvy4/j8sdZ801paHsv0OiCn/ntyhjgvYm3KL/NX+c9iT+CE/BwO8YNR
F+nj3FVLjhnyXvdex1fAcrkjisX84aRaE/zFD0E97DN+vVpF/CZ3QvGYE+yP
cxIb9Crhd7XOKBHfiVPx73CYH4r6OGD8RrXKWCF3QcnYO96zq9o1fnK8N07L
L+AIPwxP4qDrN6lVwUr55TiDYi+5vpvadf5zZMCZOMfwN/8B8hrzoZwzzoAY
I7/Bp8DM+A/yeL5A/EPP2RxzhFV6D+pN5rvyd/Lv8xnjPOK/iz0b+5R/JfYi
vSFXot/KreNcjv1KR8c30TyxtuMMpe1pRv2zfLN4N/kf+SE6RW4R7x1nGh0e
c0zvpLXo3Dif9DLyb/IpUZWfQWfFXPET+IIxr75pS/SxWq8b7tIfKGeKsyXO
E/lV/ib/JTLhnNwcR/nheCbqxr2llgqz5cNxjvHVsEZ+BWWQGefjG3CM/wgN
cCTOPLXqWCu/irLIggtqLXGcH4GGccbF+Rh7GOvk12K/IWucZ3rbYy6wXu4e
/w7Z4qzSO4bjOIEdxtTABr0eKI/ssfb1dqrXxEa5JyrEGYKLcSbgBD8Sz8ba
Nn5X7G1sknvF+RH7FJdiznGSH4VGsZaN3x1zhs1y71gfsZZineqdxTmcxwVc
xCVcxhXscV1tbDG+DyrH3OGyWhuc4kejcfxzc9NPLTW+i/0oT+QLoS4/n3ag
V933f6FZXho=
               "]]}, Annotation[#, "Charting`Private`Tag$335441#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1nf8V1Mcx/FvZbQIlR2yK1nZRZSVrSVKKCS0EJWR0JAVskoTLRpUGmga
mZUGKg0yWtpDCc/3H6/H5/1+n3O/v3Pv/ZxzfxWbtanbukihUBhTtFBoWaJQ
aFGqUPimZKFwPXbwH6Mv7sZdxr6V18Xf/Cd4Ez3k62T34RD8LLsHLeXf8fWw
k5+Ct2TF8ZzsDPSTPc3/Rd+PQ7FUdm/+pnw2Xx+7+Kl4W1YCz8vORH9ZT349
/QAOw1f8KRhHLzM+jj4E/flL0Crr4+fQDfAPP40/DiP4afw7dEm8wJ+F+fS5
mEIPMP4MvYFuj9/pK3E4/bV6KsbTy80bTx+KAfx6tT4upRepNfEp3Tr3S8+l
G+IX+jLslk9Xj8e78q3qTZguH6KWQi/5avVanE0vUM/DVHqgec/SG+kHUQHf
8KfhQ3qF8Q/pwzCQ36A2yN+mF6sX4jP6P/V2tDG/lfq97Ab8Sl+Of+Uz1BPw
nnwGP5QujRf5Nep1OIdeqFbHNHqQec/Rm+iHcAS+5U/HhDwH4xPyXDGIvxxt
Za35eXSjrI2fiWGyffCS7FwMlj3Pb6Y74MisV9YObeTz+RtRwKfpS7wg38J3
xFFYKbsPbeUL+JtQBJ+lD9FLvpXvhIr4TXZ//oZ8Id8YRfF5+gkP5PeM/SBr
gmL4Iu8SL8q38Q/j6PSUrH1+T/4jfzP2wCzZcNm+eJk/D0NlL/Hb6UdwDL7j
q2Ei/YfxiXQFDObrYAl9ET5Pb2Rt9E9009w3XQd70jPVEzGS3qY2xpfmj1DL
ZE7pQqG3sbX09diPr87/QNdIj/LTs8fo21CeH+b6l+kdeT78o1kjf1Xuiz+W
n02fkb3OT8p5QzfFn66dpB6Bt+Qb1Ya4IueOWgtfpJ/y/OhF9C3YK++Zr4RR
OSOMv5v14hW+BobLevN/04/hOKySdcCD8sX8rdg7+zzPAB3xkLElsttQPHss
v41OeBiP4FE8lt8y92dzmqFE+l32Hl6R7+Q74/jsaVnn/L58Kd8cJfNeM1+2
P17lz8dI2av8LvpxnIA5/JmYnP1nfDJ9JN7mN6k35Myil6q1MSvXZs30Mvr2
9HOea95hel6tjOLex2h+O90EB/CzXTcyGnvxrxlfR9fNOvkL+B/p83Mm8DP4
3XQzHMiPcv1r9D/ZE3wX9U/+6vQePVc9Cx/RO9VbsNY1H6lH4R35ZrVReohe
pl6cPqW75B3Qy+k7UDr7ka+CMXlOxkfRZfE6XxOjZa/zu+knUCn3I3si71K+
gr8T+2RtsjF4Ek+hK7qhe965ub+Y0wL74nvZ+3gjZyb/JCrjr3xD0x/yX/m7
UAbzZB+gj/w//ilUwfp8M9Mf8pV8S+yH+bLRsnJ4g78QY/P95gvoyp+UddBn
42N6Q77xdEUM4a9GT9nj/G/03dg/5xR/Et6nF+Ses5fRJ+tX6+U8oX9SL8hZ
7D3O5P+lm+Mgflz+X6CLYA++W/YXfU3OEr5q7pk+ByX5T/hd9K25J35j/ueg
j8be/FDjW+gb8xv0cvUSfEUXjN9BP+OaLurvsntwQM5Qvio+oBfmnaQP0Zev
hfGyfnxRdOdPzp7JtzQ9IPuDvxdlc87lG5rvWHog55OsFcql5/P9Qn95MfSQ
nZJezbcp/SJbxbdG+Ty7nNMYkOeDp2Wn5h7zbUpvyVbzbXAgFqU/8mzxJl8b
k2QD+T3Rkz8NW/O/F38MhvHXolf6lF9Dt8VB+JI/GWPpHerN2Ree42Jzx9IH
o5+xizFZNij7Pc+YPx3b8h3Ltyjne87SnGs5m7K/s6fS+9kb2b/mt8PBWJK9
jMF5r3hWVi1njGwqfyyG89dhBX0pvqaLWNudWZfax9z/AYfUiEg=
               "]]}, Annotation[#, "Charting`Private`Tag$335441#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1Xcc1WMcxfFb2VJZ0d5pkL1bVqWFKIpIRlN7iBKFFoqMkIpERYvsZGsS
stNOZoXshPf54/M633Oee+/v3uf5Pt9bpXPvNr2KFAqFTUULhTLFC4UjSxQK
Iw8oFIphJn8dWqAsjrJ2q3wPzOJ7oSVay2fIamA5Px7lUE9+m2xPzOZ7o4ts
Md8Qm/lWOE/2BF8TK/h7+O/U3TCBH8y/r26Nnfx0/m/1DSjPH83frt4LT6uL
4Sn5KLpOdjn68F3519SN8KK6JLbIJ9Odsi20P11Jq+EPtLZ+Pn1S/ik9gj5L
98P3WGl9Ymr5BtqdLqEV85m42/r1dJV8DT2PLqaH4ldrj9NdshvxQT4fFeTH
0FGyvTFHvQeelo+m62VXoC/fjX9d3RhfZy9xgWwmXwvvZT8xRPYBfz5+4yvi
WNlofp88g++X34pKOM7aGPm+mMv3z+eiMqqgKqrheK8b6zX7YR4/AG2CfJas
Nt7PHqE6TpCPk+2P+fxAXBjks2V1sIq/FzfIPuQvwO98DZwou4MvjgX8GH6D
uhMG8d35N9Rn4CV1KWyVP5L9lg3ARfxF6RF1XSxU75/9yXPpD7KNtAddSivl
vbjP+o30I/lXtA19jZbG9vSL9Rn0H/k3dCj9kNbCX6hp/SR6p/wTekD2lu6J
Z6yNpRtlV+JtdTkMlvegb8rOxMvqA/GNfAr9TTYQbfm26RH1kXkufz+Gylbz
F+JP/gicLLuLL5FeTn+iHWrhFGvj5SWzL+kbXIzaqIO6mRGZBbnfONXrJ3ht
KTyXM8Ml+Tz5HNlR+Ih/IPcUp+VOyA7E89lP9JS9xZ+Fb/n2eaZsLl8Pq/n7
+B/VPTGJH8Z/nLPE6+rDssfyJ+hu2TAcw5/O36M+KP2p3gsvyMfRTbL1tDN9
h5bHzzm3zD36tvxLejZ9hR6EbZlN1qfS33Pn6KDcM1odf6JD9oDOk39Gj87e
0OL5zjmXfI7sOixTV8aD8pvoJzlLvKE+PHNO/iT9V3YTjuXr8xPVB2eO8Xfw
m9VX5XdnLvPvqM/B9/yl2VPZ/OxJeo9/KHccDeT3yg7Jfcl3wGW517mruW/p
2fRMegMNcw+89tD0Ij8cHdMHaGTtfnnp7Bd/My5HB/mCfPfMUP7h9AEayx+Q
HYZF/C35j5C9yzfBD/wV+f65H/xx2c/0Uu6buhcm5zvwn6rbYVfOHGfIJvGH
41X+Tn6L+mqM4PvwS9RN82z1wekv+bTcY9ngzC11DXTKntBnZZ/T49O7ub+Z
Ffjc+iS6Q76J9qbLaZXcTzySvaCfydfSi+mbtEzek3lhfSb9L/1Ph+fO0Nqo
b+3M9IesTGamem8slt9Fv5Zdg5F8X36puhm28Y+mH9XXZ6bknPiF6hPwBf8g
/5O6D6Zk//Nb1Jdgd3oDZ8ke4stm1vG3onPOVf6c7MTckdyH9AbOlj8sK5d7
yd+Gq9IbOMfaZHn59Dd/O67OGcufl52ENTmD9AaaZO9kFbJf/Hh+q/pavKuu
gF8wylo/ukx+Lrbz16BT7jp/cuZ19iN9gabyKbKKeIsfjf6y5Xxz7OCvxZWy
F/lTcm78Yxgh+4Jvj39zNmgmm8pXytzmx2CAbAXfAj/xXbJvspf4U7EudzDz
Rt0X0/mR/JfqDviPn8UXcHNmI3+uepq6Mhao98k9l0/I/4GsC8byA/mV6pbp
ffUheU6+f2akbCsdQlfRmuiaM6Ivpy/oafQFWiJ3AutzZ7PX8s20H11Bq2YG
4vH0BV2T30Uvzb7Ssumv/AZ+Ni2S2Ylb+NW0Tmar9zanj8qq4Bn1vpkB8rvp
t7KuGMcP4t9Tt8IvfLf0j+wV/nRs4Gek52Rf8ZehSOagrIXsMXVVLMnMRPf0
iXyRrD425v8jfYeW8umyalia+YEe6Z2cd84CrfLbrVfHstxH9EzvyF+VNcg8
yPxOr8vW8h1RFE/xRTFC/TGtm1mP5l77P5ZHoJg=
               "]]}, 
             Annotation[#, "Charting`Private`Tag$335441#5"]& ]}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"Test on dynamics\"", TraditionalForm], 
         PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1b\"", "\"u1b\"", "\"x1b\"", "\"\[Theta]dot1b\"", 
           "\"xdot1b\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]},
    {
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
vyvh9GcOF5YYHBWgAb/StVrbO2x8Iq9TYJ13Ljr4bGtODyc/3bAuQtcP0OAf
fafYD05+rblXQXGeloDy3tOXn3P6p9gt7VYC0efRcbtheSnO5032NjbstqdB
ZlYzHs7JFxr+BUTeg/uoNkPVZTPnPosfZunyr6WBaYxXlEY+J/9ixq7nEm6h
u7wv5w9yfl966jsrNIwGSZuLWRLlbDz3rf3uLG0amDi0mrA58/lToah3U36R
qMNG6vsxzs/zeZqNHfemwVV+/o7DnH6vNbxYu0mdBtIK44aJZZz+cu6Pt5vH
XXQgqGChn/P53tOCu7xNaGCkNXO/gXMeJx5tffBpXgKE1OUHed24gdSrH1tF
JVAoFILUq3W49f9EbqURpF59VO3txUGDOZzUq9dLDyVt2NONk3p1hmPogqIL
G5F6df7Z/Wt8748gUq9O144a6U+b/U+vDt/6Onf04uJ/evWj62FpzAkKkHp1
5b7s9StsMCD16sXg05ObxTEg9epS7FG+sd78f3r16l1jcVM+vf/p1b9unr+y
IbMDJ/VqcWG755l2czipVy8MPNxSV0glSL060CRcelkYjSD1ao2iOo++IQZB
6tX8s398O29yE6RezQ7PuRLA5CNIvTqwJ2lzQ5ogISuS6FWz5Dei/O8fqVc/
w/R9JEx5CVKv9vz3NZKnewon9WqZFZvm5nif/adXm0tuWL95auw/vdqdVptS
LkMBUq8eWj/Ff8SbCqRe7VqxK/+9IQakXn1FtGf99TzOvfyfXl3wbSx06Uc6
kHq1kiLXgI8bA0i92ow2XGLvwvhPr7bvPkJ8CKf9p1ePpZ5x974/i0i9esrm
VMShi52I1KtF9tcxtpW24qRe7enVTrz8NY2TejVWrJCSqokRpF6toshjey6C
SpB6dfGrnMl51IJIvZo//Ud2hnMTIvXq0VcftXX0viJSry5f47z0t/JnROrV
vp1GtBfPPiBSr76hWqHUdLMckXp19zZ1YuJbKSL16vKlUeFB+/MRqVdLbRN7
o3P8ESL1ao30d5o/R+8gUq/WG/lhk/8HI0i9+oFG/G9DDypB6tXFTV3fiOgx
nNSrDftxKvtaLW6e+3RxtVIbkmNHTOjUdyFKkMemIdSJFi6ZPN9ePom8R41F
uyz/oXvPWZ1h8/PoEl1hXP72AHriEc17zJACvbYlTkrGw6j/ReDhl5VUCBA+
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
FT+an0PGOmrRbOoibrDjduBuqUWUmJhlJKKMEeR+zfFXMfv2fOEjyP2aByek
cl0ShAhtotRmWRED/qh/PXH/B6d/9520tn/LAyb7z28rPDqNDH/8hZoPvKCR
9swIz6PAv26b99E1fOA4EXK6NIYKbmOFGli7AHw+oxZ7XZAOBbuO9jb/FYTf
V05JlzAYkKg4ZeAxwJn3VzRsPMmpf+KrdEM0zgnDJUfdoINKDIj5mz2oNiYM
KofrxdjenH7BLazp4rwo1AimZa/0nv9v/0f/qLm67w+MIPd/DDIOf191pw2R
+z+lATpTkyY04uBjtC6puAY9LheNYDxZxK/wX01ZfaALvb2+IjwOm0G1eQ8+
RV/oRX/69+9zallAO/pNX4TmD6KW8NMyd2Mp0NT5aAwah9HUgv5X7lUYNGy4
2JLZP4oi924ZOmeLQcvuNfKHhsdRodqaPokHiyhXWaq0tX0S3b4pfagzYgRZ
e669c3hiFu3XkNg1/HwaD6y3v8QSXEDS1wre26tRicb5rfb8YhQQkZmsGBzB
iIGkZebxW5lwkr9ym2EhPwEdSy9d0OWFJ6K2Z6KrFlDZjOT/EXXn4VRubx/A
2TJU5jEZQlGkQkScWktKk1TSQIMmJaU0EEKJJqHSJKkkU6hkDlnbLEnmqQgh
Y3swbfO73+vqfn5/n865sq39PPe6zvdzfydaNs3FV7UkDUWteHEeY2dlwGkx
fOro+/3G3Hnw9KZZxwNXce9Ll6zOX+J+PzS2uwxuSxbHAab5c4aNZmF/8jqh
w0QKbzlqe8fqGC8dvJO+e7r+42s0OninhJjU9HrVcATe6djbhUduy/PSjW4p
zyufl4fCI3vOPu+h0ddJVWjKhrKR2dT8ZDkPGm5oNvbekTKEktMMjT7V8WIX
QYm/sz9NosSTkQ3GP6aIxrHhI/j+LOxo/JemuFSMztyxJ3hj/BwcVvcqouMS
D57MX1RrHzcXFxiUVdFu8uJSsUuMonIx7OZXZP8f934YXJu9KNleHF/Z5GF9
aRs/Lti8ydn2tzjWOerTGcrDh60enfioeUYKs7/qJc55xZ1n//mrEmV/w2TC
Qwd/ZbGRsV90JR891rm+dfUKBgrbwDEausCD3ba15b56xkJxLL4qBocX7zho
p/b57SASVnC5bcu9/65/NPyy9+Mwqpi1UPqiLQ8O9yu5lhk9inbXGUlOvBxC
cmlOAifSJ5BvIbmy6OkokWm2PtHyZQrNjw95JNfEQ6+fazyq1jmD+j/1WB1P
otHBex2md33dPFeEPivK19ZwHvf9fOjOtgO1InTn0nvGGRpzcHR/sOQS7j3z
+IUAC1vNuTji1em2E6t48TWz6vrwzWL4OuOnY+xGfuxrkqefoSGOB4qkp6u5
83kEX++Tkjfi2Nxu2znfG7OwxVIFNwtt7nxWg2LMqnno4MuGslOP2n6l0cGX
HQh5XPvqCo1+6QnHapdtEZK5sL1OZpKXviVDLrpHdRDdeR+Quph7P+xwmffY
p3oWdou9P1gxKEZfnr77oHsj955qe3DY/7AYvfzR1Zilv2fjkmcGvTyLJ1Dc
kfOMHb1zME3kVrVFNw9uEHn2Of3vXNyc/VFr6hkvVpnl37+ZTxRLZb7d62I4
C6eqrq0TERTHc86btFh4cp8fZ6qbP/uJ45KivTxxU7PwQRuVw9OBUth7c3FR
4jD3+SvmaHOHk4WODf7nFbOLjz6kOpdhU/oHZaxW8gpgj6M/+n25nUpM1Lk/
d9OCXB5sfM11cbssGz1ucT6huJ6G99BiXt7XHUKZX7O9BdbS8JvlzUuRwSTS
OvvkwzbjCaLsG/P2mMNcbCHdtDnkJC8WCKsodQsUw2FdfBIv7fnxrt3mD4+a
i2Px4HVa4+78uGjXkjbPrVJ43an6gapfvHTwd/kX7ESWitHo4O9Cdm0uymsO
Qw58Dl/OCOUiYVoG84kEH51HK2eLqhsbXb++ebL3LA37fRTcv/PZXKzu1yz/
+iovbqfp0Vk5YvhqauuCogv8uGLFZVfmQXHsm/jyV/R+7j1rYcaNlGNSeFDM
mKZ4mXt//uf3fAtPXqlZwEsHv3f3auNlJWk+uuilbWYlt7i/X+tfGyO495c+
qVcisfkzCNvO0W4Mo9FDfz1qrRrhvqfPBd2I/iZMD9I0+nFLSABf25Orb2sj
ShczUH3xTVkc35RTXiXLPX8a75b+PhgjhXsWPL3NaKfRwQOqDNcs+bWSRhf6
zl88NMNGBkXvIjZw7x+fTOa0fPnCj/fLTGxd+VqMfnjiitmb5rm4uhGfc33M
izdNhktGD4rgRLZ+8f2Fs/D1VcZe5tNi+OX3R3dmXPnx/O7z+nduSGFpp62l
V7jz2sbKItm5tExkZ3jK5x73fngjXlYhhsNAfgbOImqRPFha/jF5LjaENqf+
mf95Ow0n8RQdGObjIFXrwBUuZ1no2g6f9hKZSbTOJKLCxm+cMHMOW73eNxeH
xLGj/Q7y4o4NEuXXPcWwckDzrL123PemZdTE5bXi+D+BP+Ea17hz04XOB3pf
pHDU22zXBgsa3W+yTWhuNhsN7ta0XcC9fycppimHtYjhUn5hpy/cv/9jfpnm
l5ekcIzKzXk9hPt5/fOOuy02LP2wm4e+3PraA1GZNJSmZqsRvImPHmx+njfp
6yBaHXefzJyj4XYfR6YlHw/eK7p75V3u93nU9FhZxHJx3DQ7+foE9z6YcO+2
8aYMKcwdH/ti42h08JL14v1RqRk0uv9rzRstZoPIVts66vQ9Go7Ue/1zSQ8/
Vqy0L7suJ0ZfFWFWJjo0G/dIdHiXTE8gS5U0w7IZ7nmciYu++pIXay755cQR
Fcer8hVEjH34cXhp+d2LT6Sw0LeD6+u598EjliJhgozPqNkwXuSeOR89LsFC
zmV2N7JJq8pUOjyBlrDvFZ99KYYlIjhq/Kf5cfH+P1rbLMVxqFny2frz/Bj8
5pI4tvc33efoWq6w2n/X6Oi8cLb2KTU++tnJ+0sE08XwzYwtAau4f/67YXdv
lfZHpLT8qzIfL/efXy2o/uY6iAKW35lYzJ2vak4HKyTyCOBNxbM/eIWI0ms/
7tjZMF+c+1zTiNDgfl5+l6y3LXwjhSU9RITtuefJoclz7/hfNlKR3h5+NICG
RXWede4f4c4zCZOJO7nzjPuH0JeWPlLYcdnF5c6/aXRePZfhrwKfUN5085OG
vXz0w2VpXdL1DKQ+7bCj6TkPfi97PvD00CjSfL80YSEvG509Uv1ZRGASJTOb
q3Q0xknU15oP143F8VulbW23uPfrDkGbZ+LxbLRyjYh0uzf3vikrc+tjnRjO
Ctv6QYV7fobK1mw87iyF8xqki+wSaXTnsJA/miNS2HBs/znWXR56d8py5+/y
qSjrWAeLs5aP/u2W4JnW4RkU2LjLR+8zjf45J/jaOy1xfNz0vVgY9/s7Z+/H
SJEUKVysTvPXzKbRexPCZTr0uO/D2DUWC7jPf+mnMeOmo3NxgFCi+n9hvJgR
KarGN1ccPy1J8ezz5sfTD0aHjYKl8HMZKcYX7u9f4UOWR8lgNmo4yjqtaMlH
t/yz1PdPzx8UZvoj2WfpBNozu3rvzyIxLMMvXK50iR8nOtQl5YUMIodrHjOH
fLjP4whr5tEZPrxEwOkyu0uYvjmD1Z2nJo4volbbaO7ft7iT5h4SL4Wb7RuW
rm+g0WPzg1YxxAeR0c6CJ7e551n/2uOZyxMiuLWyuXBi2Sx85aWT/zw+cVwz
PbSee2PH2SqbS/PvSOFDf9fxPeLeB4Kc5xltmcpE/NvbfTS4v7/dG7JiFEWY
aHVZ8Z+2jzxYg+Xoxv+NjfZf6kj+epOGNRbuTbvZJYatH5+3Mfj/+fbU7QTR
aSn8F2U87lDkobsMViZtE09HTxwe1/7ezkfXLVw5L0RPHBOtV9sZN/ix9pOk
oQbrQWQcUCwwm/s87I2NOnRtcja+5vaff9SJSeT/tuDSHiFhPKox+ks7lhcf
jf/waUBSHMesCr1i4MuPTfmiVd+HSuGpDa+vVHDfhzEDhz6b9+agFH1T0dlr
+OjghRMreY4EHgxFVN41xGV1u/L5teCFOx6arZqajETgheknphc9S36DwAs7
d82cl884jcALf2tQPX30WDQBL7zdUFVquiyNgBeevaB3dcjlbAJeuNx1/tUC
y0wCXtj+epbnb7V3BLwweqMz1SbxlNpvefanhVLl7Xxqv+UmxS3Tr9fVUF7Y
2fRP4+HTrZQXFt8+POEo3E3tt9Tab9/cpcmg9lv+XnkjQZl/kNpvOU/Xy6cs
fZjab2n1ZMz0sdcoAi/su/Tb3zJ3DgIvzJd9unH4NAeBF66c2xGlqDeKYL+l
ctcd+b1vhxB4YYk3a7U6hFnUfsvL0o9l0ld0U/sttySn0/bZ/KS8cP6LA1kT
1XmUFz5nvXSXR1YuAS+crLPW9uqGegJe+Lx4lcezqTYCXjikzr/Ip7iLgBdW
UFTJtOjtIeCFhYT7ji+p6CPghXO2fozwWNhPwAvL8Tnui5zXR8ALK4vXMAeD
ugl44cd/rdtE9TsJeGG/I9dzE5X+54XzGo4W39T+QXnhM7MvPVkhVUfAC5em
FXVGX60m4IUbar0W+U1XEfDCWcuP+dixKgl4YUW5yuUWpyoIeOGkC328Z0y/
EfDCX1KHdpmXlBDwwoozhm8vLC0g4IW32QU68yfmEPDCR9R2BadmJRPwwntt
Ay6vPBtBIB982dxqLSP2BuWFDwYu0hM4EYrAC1vez9SchWIQeGEcZTNgbB2C
wAu7XS1vOGb4iPLCU8FY8v2VjwS8sHatxfEfzpkEvHCo0qnXg/ezCXhh2nVz
sZF3qQS8cMEhg5POdk8IeGGPoiPDe7tTEHjh2Q8UvYWOfkPghZe8uBjSa9GE
wAOfW+fYPW3HQuCB129c+eO96xC1b9NK/PTNB8kjCPZt2qbiS6mKHAQ+uGXd
6q2WwRwEPvidSbXW5Ogogn2b2pJ2+47PH0Hgg7f47Cn5yZ3rwAdvcwvbfHPP
AOV9rQd7t+jZVxDwvmLFGc+PzjQT8L4m4QHJQ/c7CHjfm190Ekquc8/fP++b
d2fppxmxPgLe94XVy/rfGv0EvK+bpJ/6g5I+At53y7Lo3R7TPQS874p5PHFb
OF0EvG/kYlWFKf8Wyvs6iLytctrdQMD7ms299/Pb4RoC3je5irY/fEM1Ae+7
X9ze2cy/ijh8edf1TUsGC862+H3SpJLQ6j5ee5sgg8Mjbso5KH0n4IGv/viy
31/Dn4AHntzdsHfveAACD5x6aYtkSmc0Ag+M1Q4T5qFwBB54HlnG+o2uUR7Y
s6PE63BjAgEPHHfRVb/8WwYBD8yY2GS661s2AQ88Qj+Wut8ig4AHzq50uCOd
E0nAA/cLhPndHXiLwAMHnZpvYrm1BIEHfjglfMF+VT0C7yu7wboizpuJwPt6
mW/RfJ8/SO0vPVTQIZ5oMoJgf+ny12zJZbWjCPwvv0xwy+dADgL/6yN2f0WX
CQeB/9VEtI26H0cQ+N+s5/eWoJZBBP73kVfQsQfFDMrzhvz4c/L7mS8EPK8K
XWbF/swmAp43cqvV4q9Wvwl43vo/LP+bH/4Q8LxS7iKf6Hd6CXhewxntt0Sg
n4DnDVT2FSnn6SfgednL8lTHnvQS8Lwyl4YOHir9Q8DzvuDLlKhe1kp53j8d
rkfUEhspzzuo8kyyd0EtAc8rd/z7Cdr+agKeN3brbx7jL1VEyOuD3qrZMlje
z1xWKbSSyCq+P7krUAaHFK2cUJv6TsD7ClxcmlY7GULA+5az52SsKX2NwPuy
6Ly4Vy0adb73qZq2qkPF2lU8P/4GIPC/lUeP2ChYpBDwvynuy/i2JWQR8L+Y
552P2+csAv63gFmp9d45iYD/1Vm9Y1bAyFYC/lf/qeniR88/I/C7tOCE8m+G
bAR+d32/qlaw0jC1//XN2YcCvAtGEex/1U/PyczYxUHgez0eikho3eIg8L06
ntg74tUogv2vb1WWWuo5DSPwuEeiBmau+rcS8Liny6wODKR3EvC4yxfzOM4z
7SHgcW3v33zf5NlHwONKKk6u8dLpJ+Bxiy7scJ99pY+Ax20XKk4K3NFDwONa
ulz3bSn/SXncrPg+BTmVegIet27ypNCRumoCHreNc2pHpEY18T6yQf1koTQO
YJ92VF9XRcDnbroc/MBD1YqAz/14v5gjYOiNwOfyXqxtu7koGoHPnf+2e9Pr
xREIfO5k5NntytNHKJ9rn4D3M6PfEvC5705KF7k0pBPwuWezHOUOpWQT8Lkb
wzpobYc/EfC5u2MVaEtl3hLwuTo+yT+/341A4HO9p7vfu/0qROBzpZiOJfwZ
tQj87dzxuq/Fc5gI/O3znX3u5faD1P7bWOPT6w0nhqn9t6Ny4Y/2x48i8Lhn
O29cSLjBQeBx5zemuh7ew0HgcWU7pwVshkYQ7L8NG77r+5/5EAKPu6x20Rpn
Dybla6O0eu6FvCwk4Gvvti8yZvE3EvC1Mwu0TCTi2wn4Wrl7rkrya/8Q8LUb
VF8hrTW9BHyt57xn9qZ/+wj4Wq07x3c1SvcT8LWydom7s5p6CfjauO1GrMvL
uwn42p9y13ZORbZSvrbj0I/OQ45NlK+d/zY3Q+lhLQFfa9qz6e4Kh2oCvvb4
eOpipc4q0rAncZ8jRxorBTacSi6qJCpIe3+slww2OfH371P9CgL+VvSiYQT/
35eE8rdOIjETu18h8Lc5cg5qCc3RKC3n1f4461pkq/raZPO9hwg87n97ZIUq
+pMIeNwRvtPqsopZBDzuYIpKjZ1xNgGPm/28SfrgwhQCHve//f1VFY23CHjc
jAd5EdGanxB4WubaDT6Lv7EQeNrCLMH9CV+HqP3BYhlr1rT0jiDYH6y7+kK3
pTEHgbdtsM7bnBHEQeBty37F+pwsH0WwP1iw1WD4RdEwAh+72rlyq9L9XwR8
bOYJ+wW2izsJ+NglX41PP+joJuBjm5X1XMM29xHwsY2qmhd9l/cT8LEmK2u/
O0f2EfCxTWeeuMjF9RDwsXPcr7YJxDVTPnZ2vL1YW2o9AR/L2rJ5u5BMDQEf
u3ab2nxLw2rS637PbWuKNDYuSjTbebKKgJdNk1uHOU6eBLxseoD8Q/niRwi8
rOKFhP2t62KQTcsPJ9591WiZ3594m+wwBH5WokQ0JCn+EwE/2zo+JfI5N5uA
nx17deV7nXg6gX3HP2xdI8fHRxHsO/4+HY9HH3AQeNdvgWoeLtx5Erzrjdfm
bve59zjwqbX23p2zK3oJ+NQvST2Wr+X7CfhUS9VEzUN/uN+nfz7VXtfe49q2
XgI+9VTTW/9d0w2UT039k7a06FMNAZ86rLBlacDOapIXt3CBdLA0tkpLru+L
qyLgVf9qqGw3uP8GgVdll6Q2mUpFIfCqF98nSlxUySbgVTdG29+hy2cR8Kpp
Uz4nbz9OJLCPuYW9PrDLgYNgH/PA/pGxp1c4CPYx37IxDgw+PYrAi2b5Gbim
vu0j4EWfLZyI/q7dT8CLjvXOkna06CPgRf+ORkudflRH7XMe2jO97n1kNcm0
Vbs3aimN+ezMAz9KVRPwo+6HGZlhRy9SflTB6/Q2y8qzCPzoz3KlqvgXUQj8
6EvHayWewxEI/Oj8ovx55trrEfjRb0FpslMCsQT8aEfZyN8Tu9MJ+NGUS0ql
DqHc+8w/P8qZG8r3+ucnAn60IcvWW009noAfDZMYeaE+9QKBH82S/Tjk9bEA
gR9N+yskozNZg8CHjhf72uiFMxD40A0/BTd+Nxik9k3PSeLo/mocpvZNS+we
ER95NIrAi3r7xNcbXOMg8KK/T55IKjrCQeBFl9tqDXdKjSLYN23VUN1ywm0I
gRclje/ZBgVMyn9ebdLeGPUhn4D/tHabc8l4cQMB/xl+s+mn8O52Av5ze+bS
DRf4/hDwn86d/hxf6V4C/nOQtkG++1cfAf/Z9MfYs16xn4D/NDeYmDkz3kvA
fzpuEd2/zK6bgP/MnBvot7StlfKfEvOFW7xKmyj/uboVPQuqrCXgP8uGR9Sf
X6gm4D9tWj8gVXYVoecnnp7FlMZ2S1e/2PizkkTu6KupcpHBF4X3DihuryDg
Q+3qRvxK2eEEfGhoWKyr2FAYAh8qFlY9WiIfg14VLVe5VluDdi5ecS9n8jEC
L2pi/dRh76okAl604LLTrJIvmQS86NmKt92nHbMJeFHJJb+cogdSCHjR+ZVn
2cdWPyDgRe3czk8O0NIReM+eaOfbbU9YCLyng5J78L3XQ9S+7sBCf4uw7yMI
9nXfqnMxFdTmIPCgepnuYbzc5xl40HgfA+e636MI9nVfagxazX3xIPCcQgU8
zcZfWgh4zrJY3y1tPzsIeM6ti23Y1indBDwnMep8+GxZHwHPua8ywshhaT8B
z1m579J7rfQ+Ap6zgr3+P1ZND7UPvM81t7FKvoXynB5bdzq6zGog4DkFnv62
2rC6hoDnfGshPC9/bTVRuakf8TleGn8akb4v6c69v/7znXY/zftWrvAj4Dsz
VS8I6ac/QOA7W5fItb9SiUHruhz16huqkLSoDe1u6UsE3vNpf5RDPvpEwHsu
SpzwWFSWTcB73poOmvROTiewX1zIT33T4+5RBPvFNf+uW7nnPgeBz9T+8iTv
G/f3AT6z4L/thg8CRxB4yp/vm20/vOsl4CkX2Zxd0iHeT8BTMp7kmOUN9RHw
lAPnD/3HutBLwFNWbN6wQn1PI+UpPTcb3F7ZV0PAU6Y9fsZ6sqeacNJKNt28
I43rFr1YY5dZRcBXmvFvDDqeEYHAV755Ua18MioKga+ctyrandWTRcBXeh2L
FvF2ziLgK8PsPY7p3P5IYP855+D3pvpDHAT7z1Vlb+N2Hw6C/eePPdghG26O
IvCOU5W+ZdKP+gh4x2ZXvlP7V/QT8I6TuS50u+N9BLyjY83C+tGGOmp/uvVo
iOlAVjWRDtIrldwojauFlDQuKlUT8I+cx68WSiYdROAd24OPHix+EI3+U7G8
P8Tfg2zybnYcKswmcttO9ZzfNIAKn+lfdfuRQWDf+tHRnNsr/DkI9q0vTeGZ
lbuZg8Azvlx9l09/oo+AZwz0HHx7bW4/Ab+Y8/FybcfeWmo/+0h0f9Oew9UE
/KJG7amE3MJwFHT7x21Vh6/ocYnDiN7daKS2YFWC6VQX6nz9YNubk1mEBy1a
JqnZh47kXsnI4ckmsRs6Z34J0PCB0jXP/DdyEOx3t3Sl9Tvf5SDwhIsuuCcL
cj8/8IS59sH6Btz7IHjBheyJX5JD1aR0yApvNuTe1weu/2e2opqAF/wyTMv4
aRGDXq74dMhXrhcFJM25LfQ+m8A+eDvxzk+vgjkIvN/6fIn0EZV+At5PZGjx
p4iGPqKX91A7TU4aPxZo4O3YWk3A+7mx7h5O3xmJvj5NzY9++x3tvFDepeAU
icD/NWwxG0jenk2OWt6bCDfuR/QPl5m6nzJJ5uarS55v+f/+CJvjv89zEOyf
92udl7T5EgeB5zt3NZXWtKSf2ke/NrFAP/R+NQG/x7P43o0im6uU31vvcTfH
UckOgd+r7JFwDN4RhcDvxep/zL675w0Cv7d0u+XVj06HEfg98RNvXocaxBDw
e2bnVeqaJNIJ+L2gtv3m8/2zCfi9lWzRoE7ZTAJ+r/vIx6yNGgkE/F7n9Rev
wn1CEfg9g0tf3nkpFiDwe7HyP0MWvKpB4PMMPgaka9ozEPi8JU3PxgOUBqn9
+M62X0UHSoap/fjlefOHjt8ZReD1ng7Rny3w4iDwer9mdAT5T3IQeD2znw1d
SxeOItiPr6L40UrgwRACv7clMTQisZtJebynDwyerkrLI+DxDBNrH39Oqyfg
8UovNvP7aLYT8HjzJ72XvensIuDxNBecPh0600PA4333fytowD1P4PF6+Upd
rbnnDTze2RfhqzJm9xHweDXyBwaXX+4m4PFyhmVHjs20Uh6v5H2RrvlEE+Xx
eksSUsZYtQQ83rbg+8vK3KoJeLzegdSJE5wqoj+u41LZJ43/oGmD312V5ERj
qUT3eRkcL5i1Dx2oIOD1ordj9buJrwl4PdoDduGdpOcIvN4DC225rSti0KMt
rrS+xzVI/eWLl9uXPkXg9w69+8/Hr/EjAb9XvDX6wMKXmQT83veHHet+eXOf
B//8XuTxU5nC21MJ+L0d6juN9CsfEvB7Xe8Up5SHUhH4O++v9+/6XmEh8Hc0
vuJHhtw5FvoFxBvDez7kjiDoF1D5+fH61UUcBD4vU2X8fDF3vgCf91ZGd7vk
31EE/QI0K8+0Mf4RBL7uCIPm8u54CwFf99JpwlE+vYOAryuQLs3JeN5NwNdV
HDzjMaPcR8DX0ZeOauzS7Cfg68iiCmcheh8BX3dNKHJza08P1V/wpuru7TVW
LZSvS1/4fSxKu4GAr0v83Nr7yqKGgK/b8HK0fP26amIiLJjuGiONj6HiZZ99
qgh4u/1f1zhOat0i4O0SXji3Oyy4j8Db0fVu/l4vEINWOSZJr3tWhVhNf5sj
i18h8He2HiozNwU/EfB33wY6X7V94943/vm7S8PrxDR4Mwj0IVR8ljvN+2sU
QR+CqtSp5iX3OAi83DfvrRU++hwEXm7okptO4KsRBL4tX6X+Wu/zXgK+bY5s
ZcU09/0Evq1i3BsPjvcR8G3658Keqd3oJeDbHiR57Pt1vZHybY2/hzrU+WsJ
+LaRrB2prfuqidSa5wfRDWk8IPKj5lduFQHvJmfOt1FxfQQC72Yh2fumqCsK
gXezuFgWw1uWRcC78V+aQ9cLySLg3ZQn3AuTpz4S6GsoXJBg6mjDQdDXoDks
aRftx0HQ1/DCRDVU+eEoAn+26lZNe9ztPgL+bDvquS/Pff+BP2NHlf7Xcq6P
gD+bUH/eaDBZR/U9ZKR5/iUl3Pt3TOZJFTNpHBnN36Wkxn1///NoPNE+718r
GyLwZ0oO3gl7DkWjHTnX0vJ+dyP1vy5Ppj9nE7bT7NRfGgMoYE5m4NEFnwj0
Q8y51eMjfJuDoB8i73mLgNEODgJfJro+L+gPd/4DX3ZG2NF8H3c+BE+Wp/+k
Q96lluqT8DYLeMs6Vk3Ak9UdMCpbbBKOos2vtTF/lSLTSZt3eunRqNhGZl5K
cxfSP6vPk74ui0g379nVKtCH5IXqmXnK2USDvyrUYZoX87xVsBU15SDoo2gK
mHNRP5A7z/7zXfEp56T493Lns3++63H62Vt3uPMb+K1QwYqORbNqyGXRH817
VkrjDE2NLftXVhPwW2ER3fNbt8SgpG99fjuHe9B5ldZ3Ip+yCfRXrOqaFeXI
nS/AW+3WMuJzV+on4K0OalzYvLS1j/z6oVCaLyWNdz7dGfnVspqAt5rIOOhC
Bt+gjt22iq6q35GrklBuZF4kAn+F1uoenzLKJq79uarn5vUj6eje/1J6M4nR
7DP5C9fRsMAFk623nDgI+jI+jzDPSrhxEHgqRa/FYjTufQf8lMJzqysotJqA
n9p8/O8biUPulJ8qZtA37uiIQq7jnTS7V93o66iP67XYbHLu5ZuBtRdp2LlQ
9rqYLweBl3KyNaLzyfdT/Roni6IWSzpVk7q8L8H3vn9BJ2SznYOmo5GxfPYr
z7xeZMv6z+XprmwCfRtXD0y8mOQ+L8A/tan78Sxc1k9Ckxl75wQVovWmNcHf
9WNQw+ydlQOJPSg1WkpdviSbhHptanVNouG2D7bpG7jPd/BMSmvYcedk+ol0
1Ztv0hLliC11vqTlUBTqG2u8z//8D0q/oHBznkA21d/x8nusX7M3B4E/kt2R
X7hueT8Bf7R6Z17Rnw/VZDz+euZGp3yE+4oFf+dEoyXXFRw1lvSg4zMPpDxL
s8ks0ZGupmAa7ujztZMJ4CDwRgkDU0sOHqwmrqWrdKyYX9EHo+OmxCYaQf9H
k3PiDac7HAS+yMxx7sWb3O+/UdaB4bL3xehdkMv8jk0xyP/BTaPU1b3ouFz9
pvjwbLJiILRRsoqGHy4us37CPX/ghW7ZL903f1E/AQ8Uv85S7+Fx7nn953/K
nK/f3KvRT4RYy/SNf0phG9fHep9vVVP9IuaxGu4/4q5THkhf7+z0frPtCDzQ
fVHJmKeLoxB4oLP9vjkPb7xB4IFezrt7YEbmBAIPdP/UgaGnZdEEPJDISxft
J4w0Ah6IuCLPBT7ZBDxQsorBa9WVmQQ8kABxu6MRlUDAAwmv38K7uSQEgQeS
917a71mVj8ADnX4XcrjcuQaB99mgxed5byP3HvjP+zB75lvulxik+k7+1gc+
OEofpvpO7g409vj5jiLwP0V11757XeEg8D8fX3op3jrFQeB/pjSLut5rceeJ
f30nIcOGgUYvhhB4IE3dK3bV40zK9xxK1VSlrc4j4HuyFJbHrvKuJ+B7XtFV
00Kk2gn4Hq+hTXlhdV0EfE/hzUQZnuEeAr5na03dn9U1fQR8T/Wgykm2aj8B
3/Prg4aesUQfAd/T/uurlLxvNwHfUzNr/p9bom2U79HNEg+pl/pB+R614otH
rtDqCPieX5Vqqxd5cu/r/3zPePpwtMdEFTkrwxpL75HGeczhTer9laTkhXEi
+5wM1mRVuJUcrSDgf47n8xw9KhZBwP+4//BXjhF5jsD/yO0r+dZmGIOChEMv
qrjWoCXbVV096U8ReKCGmzt1PsV9JOCBFlwIuZF8K5OAByp1Gl1mcDubgAc6
OnSqv8I7lYAHMqfjvX7yjwl4oI7EXTeanFIReB7dvdcFipxYCDzPjSeeW919
hqi+mFH7hKHozBEEfTEyLRW5ESocBN5HW2xPliT3+wjeR+TBdjeJwVEEfTGf
USwyFh9B4HUOy59KW6DXQsDrLB1Ii5WM7CDgddAGRZ2t97oJeJ2TGXbbAuT6
CHgdC1HNIg3u/RG8TmAW49zegj4CXmfGnTVpONRD9dHoda5vDT7bQnmdL0c/
zhvFDQS8zue+0Ythe2oIeJ2nROHQqFk12bTd2XRXFHeeeufeMutmFQG/83yn
UkNp7G0CfqfyPJ/C8ldBCPwO80zMj/yRaKSjXXfjsnsVctm1MbRCNRyB5zlq
xKhu7OXOk/88zxa5ptTf3HkTPE83p5kjujiDQL/Nq5D4LQuaRhH028zrui9+
JYiDwN+gdn3WGiMOAn9zKnXpSsfYEQRexuO05ur24F4CXqZpX7yr4+x+Al4m
8FTS2b6pPgJext6jwFQ+qJeAlxF/tqXt3LNGyss8svz+zUmyloCX4Xtm/GjE
ppqoXJvVreArjbNHvLMfFFYR8DPMwAtlvwQjEPiZM/x68334oxH4mZPvTv+0
y+bOl//8TN3Hn4cXxmcR8DO6b0SnfAyTCPTvbBWQG3u2h4Ogf2cmLn4d8wYH
Qf8O3yFezdPPRhF4lonUr/e/X+8j4Flmf01P28N934BnUd2rudHbpY+AZ6ly
a1giKVpP9ffI56mGun6vJiEp3qsWm0rjUx2339ovqibgW1rvlstapBgR8Cze
9u9XmqyLRrYioV/eVnWjdyvdtV2589Nh78ZQWdkB1FQ7svAc/kSg7ydrb+W8
jpscBH0/Py/WCe/ZxUHgVS6vXpb4itVHwKukuba9eiPZT8CnWKwwodH8aql+
IJXKu0qT9tUEfIo4cTt6588rlBRVFdjwvBTVL05cp/o1Gs0fnWU58K0LGTXc
+RW2IosoazufKB7uRUVOs7VbtLNJx/FN3drjvPhq1SAtfQ0HQb+QjeCNndPc
eRO8iM8nU9+DO/oIeJGCeZFfJLjzJniQ52pH7D2Fa4ilwquEg7rSmP7W/aCN
QTUBD2LoIOD9emMMylbkDzHq6EF+S4cYH7jzOfQRlfstyDTiPl/Ab1jmCjuE
KHDnpX9+4+SMwIXvv/tIWvevkFIJaax1g+e7zo5qAn7jhZ9ERULeG8RMSSg5
2FyODBujhYP7IhF4jtSNT7zZ3J/3mskP/T2C/ejJPg/BO7QsMurQLt69hoaP
rB/2Qqe588a//qNSvif1P905CHzG++B+zSHuvAkeQ3Le7ucHX1UT8BgJx6/3
WB52pTzGudry1WW5Ueja5hkZ86Bu9Mrp54es19nEc4f72a3naPioU4ZpnA8H
gb9Qv3jIhTO/n+pLWhg8n557rpq0qyqiy3e/IKUgw/Q24Ri03qE26djHXnTg
9JHBbXbZBPqTHGU0+G/d5yDwFE3WD7p2aPeTaMl1s9ibC1Gh1+ULnktjUPs+
x46aVz1IazqfOHDnu5gVykd839NwkpVUUi333wcfEeIdvshAqp+o6I64T5Z9
Q7z1Zt+KrkehtU+/FK29+we5hidYr+VkUX1M+Kft2MlrHASe4aR/zYmm////
2f88w2DMc1ZFajURmFt7YoVmPtKwmdBe8DYa6VXqe4nI9aDVcgqiq7jzryT9
68k/QTRcHPVcUesuB4Fn4DkUwFd0qJpc17zzc3XCV5RQEuCscTEaQZ8TTSXZ
8LI/B4FfOPBmVPUU9/u/fv6H1ymOxcj6qbzey60x6FHrq61hS3pRmpO/eFRM
NvnvlbPtgnIaTs5HjRHc8wceYZ96S+lDtX4C3mDNmU9xh2yzCfiCTG8tycjF
/STdel2PYpMUHov2IJIB1VRf1FHHjyU/lvqgR390/5M+040U11osvx2cTSZ/
0Z+a831BGUNXldepx6D+C2d313TS8Iq2wFNnuPM+eILGpeYcB61+klPRdSA3
twA9Mc90NZKOQSMjYXPeePWgcxyxtxbc90newy9Hw6Jp+MQoLy7m3jcg///5
6/6yQu73U+WLO5kOz0Oz5mlZNLlFI/NzJ9/8GOpGJiydwZHcbKK96PIpnls0
LKjVEqvOndch/z+VbTcudrSa+LTTLZ35+XDbjquxttz5H/L+eVed43u5//0D
DbvGfduLUIL9OsYLixgU61113lGgF0mcWTlWm5xN9vIpHjAqouFt84QnA7if
b2CD7K+9W8RxTqXx3jHNfnImvoxxObEbDbV0fEp7n01Kj13uipEqReeunTeq
/BuN0uLkrCKGaVh27MiRo9yfD/L7djtlb7Rw71NB1i/i1aoKUf+VvpHQ/2JQ
eaZhjkBeD1LIlLM1KMwmAV8v2Dmm0fDAofE10dzPV77KZaPTOnHMZ1pw4xH3
31deSduLVvegI/73QnTKuPPVv/x9lfN+IcUD1QTy9l6KaxYHcs+T9oE5mzvZ
xWiVisDyxPUxSM2kcJ9AHQ1v1jVe7MH9+SAv7ye0XaRd04/Ky/fe+t2EL0Qh
yMuntqaGXCqoJpCXZzcUfTyn2kn1a/Esn47MVu+n+rW8dJfsqXzLoPLy9dm/
pFqvM6m8/P5zK7IZWUwqL3/0vdD6DkMWlZePbCkQ6N/IpvLyWWUXciN6Bwnk
5etzM4Qu3xshkJd3fieXa/1zjEBeft4OHhPOqSkCeXnvHrZmuhAPHfLy/FVG
wfu+zlD9WljYyLvyxCSBvPwao4VvdjNGCOTl9c8vj/3hziSQl9epSyliNrcS
yMt3p9d/fy4RRCAvP7UlbmG+5m8qL/+r72Z/zMH/5eUVpD6ZWcdMUXn5eP4b
x3KceTHk5c01yLW5urwY8vIBFjtYyl3TVF5eIicgRGH7OIK8vJVClp1z+AiC
vHzL+u1GavcHEeTllR9OZRU7sBDk5SdGT+ovXsxEkJdXXiG3fPZaBoK8/M+X
axRY3xkI8vKWje8nY+uZCPLywdbHzhSrsal+rWLH6F/DdDbVr0Usx9stPrEQ
5OW1K3dy+GYNIMjLK0RrOliTdgR5eaNbv1av0ypGkJff9cljh5Msofq1zAMV
bwjr5lP9WmnPhltUrxRS/VrBdeKmx1OKqH6tzODRRaG4mOrXOhbHGtqsV0z1
awnsS+2ozy6i+rV2CLC3xf4ppPq10r4L/LfyTwHVr7Xb2Lfd4EU+lZc/XvhL
77sDnUBe3jFbYyWt8BeBvLzS6PKtfoo9VL+Wvvh4G+/6v1RePsbtx+SOjUwq
L2849tnM+jWTysvLW3v9belhUnn5HKv8hMo4FpWXLy87rS3PN0jl5VGzvnuX
0jCBvHx6NBr9vIBDIC/P6DQZ/h4zQaBfS6Mmv6dJYIZAv9bcuT3sV5o8dMjT
L/YXSHnrPE0gT//sTAQa/DVGIE8vXN79ZXHDIIE8/NfH8sdsdo1RefhNCmPy
x2/zYOjLSrJ48mnOU+55/teX5VI5dCTOiQdDX9YB3jfbTB/9ry/rgEfVFYeD
HETl52eu6U+NDyHIzzsccN/FPMJGkJ8fq8s+/yCRiSA/b2CqczEsiIEgPz+7
Qe76jT0MBPn5JQolLhWWTAT5+WX2mRstfVgI8vOuL610DzxkI5Wt0i2T8ySx
xgshM80bbKo/K2mOvSn7BBNBnv5tRpE4fWM3gjz93vM/chkeDQjy9IrPrul/
isik+rMkPvQ+LQvMRZCn/+n113ebRwGCPP37svfh8TpFqG5E3nnLCllcavIp
2FqiGHUu7UpJTJLFQ/eMVWI3FSPPVe1u1jpyWHTSIOoFrRhFXTrgxZskhxXe
S3sk7S9Cs4uN6y/qz8N5C2dSVZwKqb6uB0f15ueaF1B9XWkd5rg6L5JAPl/W
bvY9qe5GAvl81t7WSY01f6i+rg1P3i2zsByg8vl/lntKF8oyqXx+46+5U7kP
mVQ+f6j2xYFb35lUPt/efrfotjMsKp/P6BJ8bxXOpvL5vPo9KRGeQwTy+e2h
cc0bdo4SyOer925pr6aPE+jrSu3ddeip+TSBvq4z/u8GHNV56JDft3yQd3Xc
YIbq67rjdWJZje4Egfz+gns5qvedhgnk749H7dc783uEyt8PxbxcFBkwg6B/
q+tMq1YF9zxD/9byh513gxt4MPRv/d2z2vYFmaLy+jUhzRm8O8YQ5PV9zY7G
cAqHEeT1/95cmn+CzUaQ1z9yJNG2SoCFIK8/sPbIuUetDAR5/dbc1aXruc9r
yOsHHc41vyzLRJDXL7g/fNJ4KQtBXr/9Q1lyMPf74ijySr9vRALrCPpqWiaz
qT6unRUxFcFqLAT5ffW2N3Pv5fciyO+f4EyvNBL9hSC/H6FQ2ZSklEH1cX0Y
9u9b9IyOIL9/KezDe/Nf3HP0L7+/ceiUr/fPQrQv/JTEDhFZ7PHM9/ZQdxH6
eVKHNRosi6t0l0Ylcs+z8fAzWxMJ7nlenrDztFIxqnpyUn79fTlcp+7dWx9U
hOKuYFGO9Dy8aCJSZyi+kOr/ahvSMVgfUkDl/zOknAM/vGonkP9vLbN/xs7p
Jd1xQjeSF7egTuM/NS5zGVQf2JjlXzltRyblAWY/euoy+Y5JeQCeqUiencIs
ygO8l3wc3DvIojyAub8fY9R5kPIA5147kYryYQL9XxfXdqf1BUwS6P+KWt6W
fSpihur/Oid65S6vNA8d/IChh7jA8atTBPq7VqaM3g1+PoHKFswV91wriH8b
HGqKkuXF0OdVoPblxuyL3PP4r8/LcnElj0rvDNXf9fXrvBElt1HKC2zZ9vyN
/9ohBF5g9YqPihktLARe4LVw0Bse7vMNvEBUrf3M+X0MBF5g3Gvm+K5bDARe
YGXFrHL6Pe7z8J8XeHNmZ4hRLQvdW35k8ZlUCZz5uUHMPoWN6m7fuSVqIol9
k7f0VemxqX4vtz8NQT+EufPHPz8g8cbkb/5AJQI/8OvA+73pQ9kI/ECTtIBM
pGMeKpFJCLW3kMFu/NOqa/gK0d97qc9mvspg1Zp9CSfcipD1ttLy9Ttl8ZcK
tf6ty4vRX8Zzt1NVstj49Yw7v2kxyrms9dRpuxy+27MwfCv3XuBmtbMtp1oO
H2xbK1a7sIjqD1NxM7s0xs6n+sNaGyRDxq7to3xC4cIxZ/HmOgI+wfOssX3G
qi6qP2xBrcrv1/R+yic47uw/4MpkUD7hgStT/PddJuUTotaFT0wWMCmfYKcS
79y8g0X5BBeB1tKWC2zKJ8zie7k7X3eIgE+o/Rg369PfEQI+QbtD74Kg5TiB
/rDTrPy6rT+mCPSH3Xoj2Uebz0MHv6DiOsppvjlD9YdpH/kvTrdigoBfKCsR
XiqkO0LAH7z8/kTxbMQw5Q9Mmo6r+EZNI+gDe6DiP8/vDi+GPrDRSX6/M4K8
GPrAfMZfG43smqa8wvgTtFOifAyBVzBQk/D7T3cEgVe4evzO51A0iMAr+H2r
urt3FQuBV/i41tZ0ajYTgVfYorZYVcuEgcArZJfIPqqfYCDwChUJrcs6eVgI
vMKsTbnpD8zY6N7ZDrv2Tgms/P37XeZnNtUP9t+83nzf/+/x+OcXdt3sln7Z
14fAL3hUL3AM1mhD4BfSzsn0p3vnIvAL3S9qu87K0BH4hWMOruIR/vkI/MJ6
En7g+rtCNN9Fot1qUga7lN+7gCqKUP2N3fcUfGWxt9mgbNKGYvSsxuXre145
zDgqa/VqSTHqXux00v6qHA71lPX0jS5C47vzNY355+G/flqtq0oLqT4ypVWr
z0jRCyj/oLPbdmRsYxsB/6Bxj6a/fbiHjFYErz6wvBk9oh9V1X/3l4CHmPhu
tdXElkl5CJ7CJxmvY5iUh0j0fnqFNs6kPER7pMaNWeUsykPcEO+cE2o0SHmI
8198Jo5dGibQR3a/PWZl9/xJAn1kso3mNZk2M1QfWf5Tr21yajx08BOrFcTv
rJmaItAnVjOueELZexztCCj+6qYoiBd9cfoqU8eDoV/saZ11hOr/n8d//WIi
n4abvurxYOgTO926uUWiZ5TyEsm+Q/tmQocQeIkUPXOdBGU2Ai8haVRSU3WH
icBLXFVGd0WcGQi8RPOou0P7aQYCL7HwtYzbtrNMBF6Cb/ve5K/xLDTZ7OmS
GiWBeXl03uhHs9FET3kSv5YkPlc7lJJxmI3AU3x6KBNwc4SBwE/QAnVXl+vU
IvATnRHmJv2VWQj8xHytukqFmVwUwkigPzORwRHSjnKj3N8/J2lloHW2DH74
e46o8J4iJKN24dVGLIv5g4rldFWLUa9Irmxgniy+eLSXk8s9b0p7BYTakBy+
WhHeqTxYhIJ+71nRmieHizz3Du3CRVSfWbP5mKmqUgHlL77o9lq46ncTGaWY
iHcmP9DqhfNb//s+QBS3rTP7E9GGOrWrGsd1mAR8xubpz57fQpmUzxCteWeZ
/4NJ+Yx+n/xZ6/1ZZGv8gvjMhWPI9W1l8de4aQJ9ZT92NvEkavHQoa+MNus3
R6ZxmtjaY7MLDQK4C2++krSMBzdtdnpU3CaIZcdiFNTCeDH9y5m/w81C+Jqc
h4ZyFA/VN2YQv3uxSROT8hzR7oPCC1K4n/8/z1FkWRljtZGBwHNs2Lzuo4cu
EzX8lyKx6aYE3prx2mOXJxttSLCZPSQoicPD/qj5h7PRueI084YASTxldt/I
/gsTgecwK2h9X3DiEzJ6816YNl8Gh/d4P1ReUYCEx1Zcmg6TwTo2wVXLhbif
99dcvE1ZFsc6rmx7MV2EWjfP3VUTwb3/StuRmM3F6IdMTk+xihxOER4JyhIv
Ro1+3hVzVH+h0sE3vefsGES8dFS/ifxGKv3BSQ8vM6n+snNxOuffpjApDyLy
PbauW4VF+HSqv7nrjqPPW5vHWL9mCPSPffy2yttkhnufTLa0vnpYENcXtrxW
2cKLx7c9WF1+WAivz10VeH43Lx7i2Vd41VMU3yn12Ki4gUn5EFc+e/ti7ucH
PuQLLdgnM5b7vL66oVGtUAJ3lbgyXLnP34+L1x+Qs+Ce/z75bUoTLNRxxjA6
7ocMJq/nClc9LUIP3dSmTY/K4qi2sYpso2I0WOnatKFdFlscmVtz3bgYgRcJ
sH4Wb1WST3mRs3v4Xhy68ITyIuNPpcyWWdUS8CL7ch7Y9LzrpPrGnpo9d2y5
1E/1jelYyAYcL2dQXmTBFrLv7i0m5UVoN+rxFjqT8iLaP8yWSa1nUV7k7c4V
8bIH2ZQXabt981a2yBABL6L02F39Xc4IAS9iFzlZzSczTqBvbEmelqbVmykC
fWMxbx8ry0jy0MGTXNJpkHsfN0P1jcWlt4pcV5wk4EmsFct9G+6PEPAg5pF/
Sx15hikPkuemp2ugOY2gP2yJDs/Dy968GPrDes+uejagyIuhP+xGhOe5Iy+m
KT8i7zNP1Fh0HIEfMZvZELLXYQSBHwm1j667eHIQgR958rvkgt52FgI/cimr
4fLCeUwEfsRBOLmukfs+Bz+y1OpxmHEnA4EfCdK8W6vUz0TgR4pTjhzwXslG
agtuDR9slsCWY5ftDtHZVJ8YvSB18dynLASexMR3fWylez8CT9Klw3d9YLAN
gScZuiGqqmxZgMCTJFdpWFhEEASeJOmsYMHlQ/kIPMlDz+c69EeFyMPOfkvN
oAzeEk42ZOQVoRpph0PLrsjioIQ5ZxzNitGmgt++3WOy+IR0b2z0smJ0iXlO
dMRVDm++fMir8WMRUsv3M9w/JYe9nTr3z2kspPrLkOmmP5+qCyiPUn2uUqTt
SSsBj5KRvFC80r+HTP+uf5j48SeKrSRBfB5/CfiUE8JrXbR3Mimfkh1WmOEV
yaR8Co+WoMM7FpPyKXPCdgXLZLMonzJapnHiqtIg5VPK1XNdYjYNE+gva29Y
iy61TRDoLwu0ctH00Z2h+ssCBoVOJ2jw0MGz3A0SidliNE2gj0xySlHLuHcM
BedFaV6eK4jx9UvLWxN5MPSTzcWsco0H3PP4r5+s1jDp4qsd3Of3vz6y3pvq
VyrVOJRf2fnE7ENA6RACvxJ59saODsRG4FfMzgbH14QxEfiVZa/l/Fy9GQj8
imBBWce5wwwEfuXQ+m2TFoe4f/6fX1llEdAb/YSFklP9FZtecJ//d9yGd79g
o6DQ85t8VLn3HbnU2/KX2Ah8C3tjgJ6pHhOBZ0mbpyVjU1uHwLPEi30w7jTJ
QuBZ5B61N60ozkXXDryrXrlSBmvebS/TeVmAvArYAldTZLDzLMvxz2ZFyFW4
SPCLoSze80PvYZg8dz4Mq+58mSmLx38GNTlvLEZl5pfo843k8NmT757OnihC
8xNs6pwz5fApmWSFJZZFVB/aFNMpm6ZXQHkYk5u6AamZf4iiTv8kL2lCLQfG
j++6P0C8X8zt3GTXhnQfH9I9tohJwMv0OS5Ye/Apk/IyEcux0plaJuVl2P/V
vRnxYJEU4y9FNNoYMuK/6xDlPk2g70zJSVK7dgkPHfrOsjUeafLOniFhz5Vf
OxcL4L/LjgWojc6gPV9KSFelIDaKaH+z4jkvDp9ztf94uRBWSLxQcYTwUH1l
tVKMiiVMJuVrph8P+Fz5wkDga2447LwgvI6BwNcMLaCvTljIRPek8zLOeEvg
sbHzIUe5z+mGA5Mvz81I4AH1ysOcODZ6qTjPrMNPEmsGP9m+aJSJwNckdYts
78zPQCriHxaESchgoebBiS+CBejBHMbAkscy+NPy6Rc57ELESZV5Wy4ji3fv
SpXQHCpCLQ1Kal2hsnjj62ThM9z3uT+/dgSvvBxud+wSXSdXjFqf5mvZRbag
A2cdJD+uYpAL83PrTDx/IwUvAXWt80yq/6zu94tn6z8yKZ+z7NdDmpUsi5wh
nj25YuPIRPer3+u8GQL9ZcnJkaY35/DQ/Xu0k7y2C+LZp9bZ8+nxYtdv/ccH
dgjhvS0CZ9XsebHC2Nm+H2dE8ai+5xud3UzK6/zI+lm4djsDgdch7yaObXnK
4N53dl3b+FkC/5K9qvbsExutb+hiBZtJ4pYjTwZWzWOjU94jC2qrZfAL38U/
3G5z799HXU/k28jidS7B+g0rixHz8J23e5tkcemr5u6JNcUI/I7Y6Ui71OZ8
hNe+XCLc0IrWz81mSAgxCfidqVXp8mKlTPIs/uEFi+pxRGSzwy6r8NChr2zh
tRKLQbsZsqPkqqx6kiCutRctZHGfJ8JSDufelotiRZQaeGqMQXmey/tyGjjc
989UfrNA2lkJnLGquZhtxUaTn01LT/yVwI3HnG2ec38+8Dy3wypzRj0+o0/+
n90rZ8nik7pe86Z+FqGmkXX02XdlcXVPr8NF7vext0NQymW2HFYcaXljsLAY
6Wftmj8z1I5uPewruHuUSda2fFexKhtDi8QfqzlcnSHQP8ZcuOJliwIPXXRP
j5PHMkFstzliP43Dg8+WvclaqiuE05ruPxe/+r/+sE5VTfcjxxgIvI/0rIti
TW4MZC5wrvz+Owl8LNNoa887NnJYra3kryeJ626n3hvfwkYphsqGRZtkcZp5
4goZ7n2z3/v9xiulsnhqnZ3PC+77S30RX4j6zgm063rdpmHu/H2oVOJULEsQ
h7QNTH4K5cXBp+2P+kiK4fvfdm2/Gs6gPNDrqqocdUsGUrWPdlwYJIFRj+n+
PbfZKGki7aKbuCQeZJ18O/SQjdozOb55cbI4Z9+PfHvu9yE0XDNJd9c4ott5
maHxGQJ9Xh+LsnbHds0QAS/nkWvnBXHwMVFeATte7F1uIPrBWQhLn4pbIrL+
f/1en5vXLJrL/b6fjjHUmy6TwJpaJ9kMwkZ6QeWP6Y6yWG5E687kf8VoZN3x
ufq9sjguwMA4bFUxAh90BF+8XJWUT/mgftV7P0MPhlM+qDZeZ3/E3RoCPoh5
mDOk4tBJ9XsZnXRRz9zWT/V7PW1PZJzJZlA+aHOafhW+waR80JKxlHOSOUzK
B10NPXWpew2L8kF1kXm1TlZsygdtNdHVkZwcJOCDIgc3rRyNHiHgg1wl7/WF
c8YI9Hvxq/9Z8P3mFIF+r66h34EPRXjo4IcumfO8c8iaofq9nvh4zuoznSTg
h8IViOA6+ggB/+O3INtM+cP//E/26qrawe4pBP1d6vKJtqzLvBj6u656Pl6j
tZgXQ3+X1d5RkYbcacoLyU15qjxaPo7AC0XK5uiu9xtB4IV8S0b3JF4ZROCF
cl62VXTuZyHwQpzr1bF3FjAReKGfmoJXcv9jIPBC7w6fmHZsYiDwQgscqnY3
tDEReCH/IAOnVUvZ6PTlfXSFRgk8S1+q/Dd3ngQ/JLjnhvOlWBYCP3RpT/Ci
M6QfgR8q8mIH/bZpR+CHsr7rGXzILETgh2SENTcXHyAI/JCcnN6D3o35CPyQ
o+qVz8K3C1Gc9b3pRwwZ3PH1olRsVhHadYC1YdVlWaw+2/ia1LpipJI9/zD/
iCyu6/bqm6VTjDKtWUdyLnCfLxeV84+lF6E0d/uc02Ny+JNzqvzh1kKqP2xt
6uqtns0FlD9aW/x+o9yaVgL+KLH1Zcwi6x5y3WmcbnvxJyKD6mqH7P4S8Ejo
SbKujQWT8kgLIw6s7o1gUh4pf75dWOoAk/JIvsFMm0PJLMoj+cVO9BiID1Ie
6RKLJ3DxymEC/WG8bsbM6IIJAv1hS/aOPHFXnCHQH+bM+qRty50XwC89MN8u
WWk9TaAPbGXLuYfyr8ZQSvOjfSM0QexXcCBizgseDP1gv5/1rjn0iHse//WD
aTdNySM7Hgx9YGaKNstomEN5pSElK6/Y9iEEXumLvGX99x1sBF7pvsah5OfR
TAReyST3bPPOmwwEXkk2x91v834GAq8kURFT67WHicArdetlS/MEsFDQawnn
/mcSuNl/7MaVEDaqZ6+TQkqS2MrnVmGvJxuBZ0qXmuX224J7vv/5pTUBPLdF
Y+sR+KXJ3J+BKYxMBH7JckfKlXdxuWgoeFkzzwoZ7PCKPedYQAHC26rMHiXK
4EfhB3y3GRehaF5m1p2VstjW6MTKezLF6ETHgW8xabL4IWv9A4VNxShybXyY
ob4cRtV6d1umi9Bh8R+aq9Pk8AeDA69GrIuoPrJHpj8On/ivgPJP/HGs0pOe
f0j4J1GthGtNSP7j76cp5wbI+w3MVPc1bdw5yLApVYlJwEfxaTo+f/yYSfko
93WmZaermJSP2j232ivwIos40F7WaLA4KOPhkLHN4WkCfWPC+def7lzMnW/+
9Y0VVZ6Y1bxghnxOE6lg5AjgVfK5BbF5M0j6juvukS+CePoW6235M14svvT2
6bAiIVy3ekeBUhkP1ReWL1i34MQEk/JUjHc+ThU1DASeCrd8Nh1DDASeithY
bZxW5N5PeTYLX/WQwM8nbz157MBGqqnfTi2bkMB9uoOH7T+w0ariTaa91yTx
8/kpAeoiLASeqvpJroHh+Qz0yHyF5ikRGfxsNPji+8F8ZP2wXGvtAxmc+/hC
TsafQrQkHh28JyGLPz14ORz9twgdVImZzXgii9n+Gs7K3Pfn0amj3soycrhJ
Xf3i0fnF6Lhq197ZJ1rQ60MXjx5XZZCIvKiYM7a/UWVppX+OE5PqHxNSiHF+
8YFJeawrt/+bWivBIiq3do52To+hxw83ZLQmzRDoD3tZZmXuIsZDj5+l2DZp
LogXLjkl+HkRL9YPDB2f3CSElZkHn+44w4uXu3hMz7YXxbtNhnR9DjIpn7XD
X6E1fBcDgc+KcJ+8uOAeA6Wsa6q2+SSB3WVvjS1JZ6NAnYzsHUgS6w2FitSo
s5G2YN2B3u8y+PBkkPita0Vo0b7w+X67ZfGckn16i3WL0blYyQeH62SxZemG
vCBUjMBrXfet276/Ox+d77o+9l9aK7LYbN23lYdJwGtdCJH44F7MJLezO7c9
yB9HETu6+84o8dChL0w5/qnu14szRPT2sgT9OEG8+Md0lUgQL544KXR+eZEo
HtoRtHkNH5PyWzM5r/OOcOfJhg/HbUscJfBbnXeuNlvZyFxW6vGiXglsF+vY
zZfNRuC3QnIUfq5RpKPeq3+WBfPI4h2Ku0zT64rQvrVlMZK3ZHHI88YTb8yL
Ud7PtYwH/HKY8SIxbkS9GNkfM+pbUd2OVvntPOdxiEnYUZHLXbPGkLXhRt7O
M/9X1J3HQ/X9fwDHEEVCmVRKZYksbRTCOUQlWVKytFCSpZRQolDSJi1KhZJC
SAspW+Ree4msY8lOsg9G1jH87vf3+JxT/3k8KjNzz73nfXg9H685AvV/ZSVF
nN8gxUVuOFf/fEqGH4o3NWmc7+aCSsH79m1XEIBCd5qAdeC//q7degm9/s5D
APmuH2topcru1DzHGlsT80YUajJ/yKpR56OUEE73LhUxyOPBJyJ3kAV+K+3u
v6FPh2d/HeHKlCkGp4q2bQgsokOl61dMc/SLwRI1Cw8XXTZIXF+exqfIRUoG
EbPpvdT57lyMYgZ1vrtK8p2Yt2ARvH3G/tHSxCHsv9z6LlwJ2jMEZsyUc9SC
ROEDd9NnHgHUfL7/ls5WITHILZOkfj2CBY7xBJz6EUeHV6a5LZ9Q94OJ0yxh
oTcNxPfLZ/oMzhGoP0vH/nOT4egcsS7MVpbLmR/y6vW9mjrADbXudcbkOAnA
u99Onfy791+fVt4RJeZHfWqefpRzXeQ7dT3rBFltOSxw/Nqk4dWTdPhLQnLl
iGYx8AwaZGn9ocO6zW7LItWp8/l/HswtPHTDk6/5wKHlNu+K2Gmw9/TWaE06
9bziv123P4IfOnEdjTIP/NefFW88ttz8f+unKHX9y3ZRGL/1jKU9Nb8eLGu5
IONPhzpJFRujqM/zcrmTaVkUG8RwKnSeyHCRCYLvL9ssE4CtT+ctdLzLDf/k
7bDp0VoE26+bOy3wGsIerGPBUZNJB+r//077XvxKFHJWL4rqfUWd1yz2zD7O
oUO/J7+0Eqj1NnxwSuHvGjZIqdP881eBiwybv2J9XQM/rAkMPDJGXS/kw6Ro
/Sf8qM/nHq9izUeaGOwO1tThi2MB25BQzeYXdChhvzE7nLoezj+1r81a8sNl
Xp9fe+v866vKqz0Xa2REnb9cSpXUckWhr6vgl09ZLFDgujeF5ygdnl9SYmRL
zeeJEbpP+TunAXf4w7E10lzkQ4GqK+Jf+GG1kmXXpsfcEPVVHZeu1Rqi5r9P
Dm5zCSxROB0t9uNzGgv7Mf/FWmf1Cr+AQ0mZ9Vz36dDb7p7DWmq/y7uzuiOz
hQ1KqnQ/yEhwkclC47KSGgIw2d3AfY83N6Q2Ax+/j9T631K6zfQjC7huk7Vz
/0mHWm27y22p+Wzr4o/ZbXZsEHb5mZIfdV56ueBEddgUP8zMofOtD//XP7Xg
6EoFGfMhcMLj7PPMD3T43eP9Tjr1+XQdu1rM7cMPz0UHLN/lxA1R35T/pUWD
VdR+8yAruaW/QhSea1iqFE3Npzzhse1zZ+jQLnX1mVadYoC8WaOLVDx/Qj72
ZtNJ3Y6s3mjszXpznV6tkq8hkDdzv5do3qXfhfunukN0X9dqDOD+qScH2pq2
fBrC3my5h7Hp4sBh7M109U5cnc0ext7MvFX0QbvmCPZm7ya6xOSNWdibNbM6
1+wfHSWQN3N8d9lu47NxAnmz001b/3j1TRGof+pkymiX60UOgfqnYsTSojcK
cpHIo92zZs33yZ/D/VPq7qapZw7MEMijKRKmsbV14wTyZFobM8Ydb/zzZOoh
ISdMv3EA6pcy95F54OrJDVG/VDbXR085JW6I+qUcfMMI7ppZ7M9+JtVqV+lM
A+TPMje17Td/OA6QPyOmzkV0XB8FyJ+FT94cM6PmYuTPlrZkXNsnPQyQP4vO
8jWz1h4CyJ8did5pKM0YAsif+Z6hlX5toubB//yZWG7xR9o6Fnggnft6ulYU
yqg3r2JT6wN5NM8UkyxW8ghAHu3i5M1b9e0DAHm0g8vL1r4P7gDIozHGZ/et
cC8CyKOt4HXlS9UgAPJoe94vS76ulQ+QRztVXaD74moh0DONtTo/KA6nlLpj
hTKKgBhXWqbmeTr0vLRQ9pBuMRBS3/pz8V9qfnmeF7Ge2q+b5qXciXZbCpWf
Gz1f/aUIcDEY3J4TSyEj7mI33+9C3G+1rzJS1bqjAHs2PcejTl2L2gjk2e5d
ejfjrt5L6KfcqdtwoAmczmrgKd7HJJBve9o6U9loOIx929nAjhdS1PkF+bb3
tXyKRf3D2LeVdHumiiWNYN92SUB+6tX8UezbeC33K/jLjxGo32pk77wArTQ2
gfqtpE7FtWeLzhGo34rmuE9gAfX8RB7OpuoKrD4+S6C+qk2pSQv3ek8B/VNC
w6mz8+CPhUoelQ+5IOqvKt2tSSuinm+ov+qT6R/XSye5IOqrknXqiP1gMon9
G/tLX+YP5l+A/Ju36MAFa2sWQP6tNWVB9oO3wwD5t9tJNdA5aAgg/+b2+Nvm
RqshgPzbbFtCW7T5MED+jW10wTXhxgi4vJQRPvZUFKboQJu/j6n9+MXbyZUr
xGDSi687JK9Sz+//fJyyaoAZx3oYIA931HJG/JJoPUAebtLqvLHZ9y8Aebix
+5e7dj/PBSofBo91K4lDpYnm3ceuFYBXonodLz6IQxiwpjBArQjozPDSXTbR
4fpte0K8FhcDuVtrdN99psPy0fxXDtTz/MGXogU7Ny+FKgUutSRXMQjIe7Z/
5eel0PaNbtdBqyLclyWpKd8cqluAPd3ROJ/MrsPdxPHZKHj12C8QzqpMW2Y7
SBSFH1/1UKkdbFPT59m5fJhA3m6g3c72fegw9nbHRTRlxiuGsbfraBXY0nN2
hNA7easxo2cSrCnJz7mxf5ZAfVj+X5lhLnJcJOrDWqf1JpGmOEeY6F93TPoy
Dz6yoN+ui58Df52MV88WUvM2vw3oDOOGu7OEFDPyBGBo0IzqsSou3GclvumG
HZ17BPu8wTzZ4NhfQwD5vG0eXoqLqf0E+bwN2QWtqcuGgdUFoa23LorC2vRd
+csdqHn12FZToSlRGDffStGF2u8CJI/BQT8xmDm58C1z6QhAPs+F7dZzf1cG
+Hls6L2poDg0bIxeE9ibD1Itdb7vvi8Oj6T5bl7bUQjI1wfSzy6iw7QXT8qr
+4uAZMEp39FQOtQ4nB7aT10vE2+/AaXFS+HCczdqe1dQ1/Ok15mWnS1g+Sel
gKv0IeILXULkumEn+BTDs3v61DDux3q04cP20g/D2PdNy7BO5AuPENN922e9
xqcAd21JQVbiHIH6rcq7Dt35JspFaj18dDFbjzoPCv95/GMlN1zseq6Q10AA
xoXf6sg6yw3Vt3AJrDkmDOuPZAlnHRvG3s9+0dl7bIshgLyfV4L0TeU7QyA6
I5JzPF0UCttl2VamUvNx0+roDdpisC7CcrOjEnWe+WHA/lsmDmcbjNIvXy4C
2eapnif20+Gpqb3NORuKgcreOl6HGjq8HHsizhgWA+T/jusXHHk7mA+CNMeO
WbxuA7UnxXgiJocI5P+M56vsVS8aJuYK7mV9ypoGctyzBfkruEjUZ+WQF7XP
1XeOGHTk9dKK44eRC7b/bL7DDd0f1o8M5wrDfZ4Klk/mDWMPaFnQxaVJzZ9F
svKBlU7UfFigsevSLhZwybvkQ+sRhfemzJ/M/8oCyAM6PrP8Mq+MBAE+Mzfd
Z8WhZOiNqKvVRUCi48GKpdfpsP/aukEVap78YGVz5CVtKbxdlr7QZF0x8EtP
3L87rwMEOSV+sjs8TJTOv68m8GkKuNWzgk/YzxGon2pl3KB/8moukpw1Vc1c
zQ9HN478aG3hgoKn5SV3yArANedyY8tu/OuXGrz5sjrj9BBAXnDXxjcT7DPU
fuqUafQuXhQaqTub6ySwQK32yTI5JTHYJu/tEHCIBS6vO2LgqEeHMtHWt6fX
FoP1LjPRtwroMCWwvnSHAXWe1J5tC9ZgA1/l7NBuar5jOz/5TnTxwztCTVVz
1Dw82cf4/Y1vEbyhMeS8MGkIe0KhV6tlOnYPgb6i4W6dW6IwkDYjccqfBVZz
jUiLLxCDrrEL+MIjqa/jdraWx9JhddPjv9HUPChf2lPUrTENNGSuvPn5Z45A
/U7y+Z6pVlNzRIZsXTZxgh/m/vn8I86UG6448+VM0QkBeGO9gTPc96/vyenH
hSqVnUNAdX5A0rJiUTh6Zp3qNur8Mu27MPbYCToEQpESTRrFQFUl5aTubzp0
bx08+oj6GvlChpK15VhePmj6s9ld+/k0CD0ae37LEi7Suds2+tATfljI8HPw
ufqv3+lPmeLs7f/9PsV9lYh/qyg0sLuW8r+fv4ufi+mT96XDhnvfhOdT55e/
daJfh56ygaKkivMHWS7yZv+1XcfFBaBcxe8yy/vc8Ojg4sZE9UXwlZXbvRSf
IewL98P45nX21PoExayKKFGYPiCWmxDFAvJTwu4R2XT46dAtfZFdxcDJNvop
fTkbnHxd+OActf969Y78bWHwwy5Xt4LX1PVC3jD4zzU/jR3UeSH5UeYDbjEI
KzU/3qfWxyo16w/tz+nwUg9/yw3qekwfSl2es58fCqjP97NS/9enxB7dbLnN
mLq+bfcP6hDU+UXIT/vjFxY47HRMqPMQHTZ1zE6sVisGa2P6eNc3TgOFtLjf
9Wu4yHM9CUYr0/ghfxb3xrhH3LhfyUP/vLQTdX6pF234fXNYFDbXu4xuy2Bh
j9h79v2ylVLZYPl+v718d+nw74A9rZx6v5qh302batlg7c76EuHlXOT9gdJh
aTUBmOlzRlD7Mje0evA29maSKDTWt5KLS2IBpcbe6guldOgSUgR5dlD35wqb
9TRrNlAK93paRK1v/z7NFy/H+KHp7E8x3oh/fUliAmYPJcyGgPRSVZGcd3To
sN67RZf6fC4MTR7NPc8PG/h/tBH23BD1I50wnNjWDoeA3yZPgbGfovDGbaGC
A9R8GvEoc3vbaWoetJiaN6pdDJBfXEITHXZ9nw9QP9KTDmrHpj6PnT+Gfmk1
isI/KvxxSdS/7+ixD1O9xQY/ePTMH6zjIg3ebmo+t1AAFowrZFU/5IbxMMw6
JoMOv1Uyxr9Tn89Bt7/uhxawwdiJwgopeS5S7U1UELOMH8YI6H56SL0/1I/k
/MFo3gT1el9c7njcF0aHLP0V0JB6f0Wl9ESzLFH4c6tszCnqeoh81mo782Ma
HJWr0pldxUVuSDjYrvSBH2bYvnFY8oAb9x3Vq9849oq6H9a4JCYZDIjCnEWR
oJVaH+ER/KrCt+mw1I1+dxH1+p4rvePbbcgGoa1hJgsUuUjtxJ4tyYP8UNSu
wNOIWq/RR79OFCXQoVFaFvMq9Xokdm38Pvp4EbzlrZpqRq1fq5XsQ/w/RKHD
FvqQx/9+XvBfP5Fuiqb8Zur7f15ubJDbKQrb/toIZlL3P18x0Z4YzwYtCc7t
9tR52tvELLtSgQ06y8oW21LXP1NB37a8mR8qcWWmr3rODV8OlhfVv6TDRGuD
pFjq+4uMCdCU8kVh0n2Roy+zWWDLwzCFrr5pwLK1/2Auw0WmyLNTF+ZQz6db
HdKPn3DjviHCy1/mHnW+Qd6x5e3iLA/XTPBccOzEzAM6fLveK8yVmgeIBQKm
OU5ssOj6sekV1OvJXX9XIITDD60VPdcqUfNPbHmifGoyHZ73fcDbSf199cih
wt64RVB0ixps06H2Y4PBzx1V1Pt9FcGqo9YL8pEdWSteRUXnYx+pWFNRDrja
sI+0iXEeHD1ZgPuEHPpZeW3dRdhHHpcS/RsgXod9pM1Gn6XlffXYR/J7P9Jl
RFViH9l0/7F8mFUK9pEXmuvulgmXAOQjv8YvEz0w3QqQj2yr3dm0NrsX9wkd
rjGuqAhm4T4ho7RRe+PsCdwn5Fyzj3aynI37hDLsBQyW3+TgPqEG4yOL/v5i
4z4hXuuwzswzE7hPSMDJ2ELn9QjuEzKT3JGsc/cP7hNSK30/QjT/wH1CgxI6
Ybv/VGIfGfLtxWuvVQME8pEmG9ujT7+eJJCPrC56X/BinItEPnLB4Lr+Be00
EvnIlXpGjn0reEnkIx2YkieHwnhI5CPVWBvzTLvncJ+Q9ut5DqPPpnGfUPhy
470bBcZwn9Bj7TO9nBkm7hOqaMtcPLjrN+4TuugfomQYVYH7hCwzPwScfJiB
faQhMygvZ64R+8iE2PUX05b0YB+pO+8Mn+ivQewjW6ILnmgEMrGPrNFm/I05
3ot95PH7XWkq31uxj7RwJXc2y3zFPnJbQmB628M07CPtIrb2iDb985FvvEfn
i4WUYB+5N7lnU8n1cuwjV2wiOvfWV2IfmXrOK3rcpBr7SF2Y/sDocA32kYU6
hr+KpRnYRyZk9vvdCWVgHzmyMSokuJSBfWRZRHeB+g0G7hOScrEvtVkShn3k
+77rS576V2EfGaEZNFIl24B9ZGyulLWxeS32kS92ibyesS3GPvJuRxev0Msk
3A80PMHyu606hvuBspWuZ6yfnALIOwb3/Dr4ZAUHIO/4Jb+itncxB/cHrar1
vLDw9xTuD7oVb+Cn8e4v7vv5lrbyWsk9DoF8Y5pC+tKZQh4S+cbcj5zYfn1q
Pf7nGw0ax6fMAmkk8o06OUz3a5bcJPKGKpyE+T+dO7E37Li+4vFwQD/2hqLp
q7yvTDOxN3y4N97cI2oAe8MXWwRrlop1YW+Y0DKpp+lTjb2hiNO5ireRidgb
NrjtumAVRWBveCn3tauTUzH2hm1z9xU9NpZhb9i3oHnZirYK7A1XernFGr6q
wt7w2fHv6t/aqrE3PPG50H75jxrsDTuCJ6/CEwzsDa/by68az2Bgb+jiZT61
eOIX7gMSju8e+1qQjPuAZGvWi2ne+Ym9oTf4rRfrXI+9IYicd+lzdx32hn5+
u32bYsuwN/R83+fe4OmN/eD+3a/1qjtGcb/PjOhXf53fkwD5wc3QcqD3/gxA
flBOoXM4xJGD+38Mqp4bZIxM4/6fbVHSnxPo//p63N64ykpJswnkBdXWnfl7
ZZSbRF4w4G5oP1uWl0ReMHnucapaE41EXvCgjmS50Bw3ifxeXrdP32hRG/Z7
0uJBn8r7e7HfM87Zx37+jPnP7zUryQXmDGK/t+shvbXZphv7PR83ZpPs5wbs
90y89uYavH6J/V64912yXj0L+70PPr7lakmF2O+9XaTaadv3A/u9ZyT3lf0H
K7DfS3wh3mYFq7Dfs4YCiUUR1djvPbvCgk+f1GC/536makBqJwP7vSt9yQFj
CQzs96TDbYlNfFnY78kxzv1WWcHAfm/elp1Xv5s0YL+XsFzoF9hag/3epPTF
/AU3SELp9KqDJ3rHQFT7ZP5hv3GAPN7Jpjd+rqPTAHm8RQ5HZn6e4QDk8Vhi
1+Je3p3BfT5Jzr9CKtImAfJ4l5Qtek7XzxHI4+18YyPT5EIjkccz/3rL/iqk
rvd/Hm/50Djj6lIaiXyck79I1LKmLuzjgM1cnEzNAPZxB5KUFfePMrGPKwhf
Nj6u0A9Q386R51yqcSEd2MsdDnuu0xJcgr2chrs3W1o4BXu4d3+u3uM78RN7
uJjcT67RdpXYwyUtTa47ya7CHm7L2PMl29bUYA+3PPlnhvh0DXASU3s5tF8C
pups7bLwY2Afd0w71DevgIF9XMA6+gaJ4Gbs47bCtoIdb7Nxf89uy/03zFpK
sI8zHrgQ+qOqDvu4pDAHOe3L9djHNf6dUzmlX4F9nOxG2XTWyljs3YL2ufjJ
qY/iPh5+v/prfuaTAHk3yd02H2epczDybovNZEt+U8995N1Iwzn9TafYuK+n
55VOkErhv36dJ6mtriVdUwTybZLOBqNLfLhJ5NvSfVV/Ognwksi3rQVXTxjN
0Ujk26wUc4UHjXlI5M3cxjZ9CvvZgr1ZwmuzR838vdib3Wr/qNe9k4m92c2r
8RVvlJjYm+XXPtZzcOzB3uxxgptvXmET9mYN2wpiX/mmYG/mvrZz+/hgBvZm
14TvF7K+FWBvNu7WpqgEf2Bvluq+vrBuYQX2Zp1T+ZOaC6uwN7sS5Ayfn6/G
3gxGvg9W8anB3oyXTWb5qjGwNxvP7li+L4qBvVmc9OHk74XJ2JvV5XuIe7RX
Y2+2Q+hsutXeBuzNLu52arQ+wMDeTLDcx8CKt4AIyRkq47wZA6bW2za+/zUG
kB/bcff6HWXvaYD82INtFzln93IA8mPiEwck/9bO4P4dRm743OJ9UwD5MV6t
lIIzmbME8mMOC3Z4aa+ikciP2WoZTrB2Utf7Pz9Wt+SK334zGok8V4TytZCo
N7+x52rTlGp6pTqAPZc6f8VgFW0Ie651wXxa+kP9APXjiJzPS91Q34l91wPC
6nbC4Qrsuw68zNPvPpWE/Vb51hTNq6Vl2G8dAVM+V9ZUYr/1WnzISKW8Cvst
cXLQ5QN3DfZbPF3hc/qdNSBjID1rk74E7ONJbf9+joE910rBw8m2BAN7LpFv
UvGLxyuw53podvfTxV/12HMlpx08GapSh33WIb534FnTDEA+68aKVbTN+hyA
PNbEQSlgdJyHRB6rZ43XTUFNXhJ5LN+je2yWfKKRyFMV9din5RJ92FM9Wqr/
OLqOiT3V7c+7TvNoDmJPdXSt+4vZ5NfA5tVXVqoMtd/w51l8tmCA5qabq6QT
JGDtD4MQ/48MsCTK3nD/vjqQ4ujecE+plkBe6kCMa/akcgP2UmoKI6zgqSoi
zbZwsf6KSZA3/6Wm9Ek2QD7K47TKedcADkA+Snmz69Fh9RmAfJSv6qFrRW9p
JPJRhE8ZSdvMSyLvpDw/9VGV3SD2TifXL82o+MYErJXv7C+WisF2FbkiFbM+
IKGeEvjeXgIqbv4y03ubgX2T6Na/6TLfGdg3aYj+4qooacG+qfL8tftqh3Jx
H46+mUXwioFv2DeJ9RruYl+sw75p1xKjpzYZ9dg3bd6yMZh/rAL7prVOr/hS
Pd5hr3RJ4XpQUAcL99tYH5nT7+efBMgrzU77x+rwzgDklXwkui9LB3Jw/03V
kq195rFs3H+TagScI5b/66uJPEw4/TGYIpBP2sDe4vdAg5tEPqnlhZPgxBiN
RD6JiGz3dBPmJZFPIrTv2Y148JDIC32RnHRgOzVjL/T5efxn6Qc92AsZOLak
XljMxF7o+HeLkJ2HmNgL2d8dqdTq7sFeaPPu3zuCDFuwF5pm5S7l5KdjL3Qh
ZP52r7x07IV0hF22W+0vwF6ou3Wpg3ZvCfZC7k/W7j5cWY69UI3qaPAsqxJ7
IYfOw/u8j1djL+QqX9dy+lQN9kKL+ytfFioxsBd6ZbKiXSyCgb2Qq6LxTZ/e
OOyFHOwzOwPUqrEXmqel4vJauwF7IT/qFbrVMbAXiq2RVHiTVkgUONbf3hM0
BtTU4xvbb44B5H9c33UyfDSmAfI/uRnvncvUOAD5n9kPF3dzTczgPptFHlbX
rj2bAsj/eDXlvXSWnSWQ/zm0oDnn3igPifzPREs6H98uXhL5n2sC4UtGqXkM
eZw5x0ENM8Hf2OPcux1lwNvSjz0Os/mTsB3PEPY4nSdVVwvsGQCob2Zf26HI
sgu/sc8Js0g42t1XiX1OaayX+j2B99jfuA9lVgj5l2F/U2jnw7OUuxL7G7l+
FQH3jCrsb0piWOccR6qxvykdOX/mUF0NaLP2/m6uJQH9JY+ryp5iYI+T3kCT
3pvNwB5HyqxU/s3aCuxxPKbmpRbH1WOPc+q91oOX9+uwrxkN7J0eSZ8ByNfI
MspeXLXkAORpthzweaqnxEMiTyNYzye1YRMviTzNMYWgBttvNBJ5mO3JFYsY
ln3Yw/CGhArnZDOxhxkDZxQW+A9iDyP7rNF94YYYECDsz1UnKQHPH+7yFzRh
gA/FMQzrKAkoEezheOQ9A8zEsRYqVNUCGbMJOJjAIJB3eaIV6ZWl14C9C/Ni
ounLZ9VE8p0V5zfOTIB3Aa9Lq5XZAPmWJRzakLcPByDfkn3/3OurJ2YA8i00
A67PxcE0EvmWjQyJldrU/oO8Sr2IikSb5CD2Kp27uVL2tzPBWo+FdoEFYvD8
BnjmKbUfwdceD38ekoBHDD2f6gQysE/ZsJBjuLiYAZQOXviYWNgAvqjecZhb
W08grzJ+QJQvems9ccNacvZhziRwbVm09hH1+pBXCZUUunDUkwOQT9HN3XXX
UYKXtAuO6dFLEoDjmv5vbzFpJPInOb932pl6MsFs0a/tM55iUGR0q7Dj5CD2
KEF1e12uv0kE5pGNO4rvSsBfY1H8u2IZ4GeayNOaamqfN1njZn2thhj+atzK
/7YZPGnWfD/PvAH7E7304nQPWw5A/uTTkz+SFZ9mAPInxEcrQdpOGon8icaD
rKd5+rwk8iWrp6Lff7oxgH3JtrQh9cpZJijaORMkWiMBlW3PB2/KYwDhBcd3
W2c0AoWVLr0lvA1Ex4oL990NpkD/crePtZwZ7E2uqJcOxytzAPImYyLK7c+o
8xfyIykWp6W1B5hA8WlNoG9FHVBZnuiyJK6WqDqncSEtshV490vlRok0EMiT
yFbLHIq9wQHIj9h4etk3FtNI5EcWjOxy61zHSyIvwnCqHeuJGgSrvF4VPTtA
rQd6sum3N0zsQ/ylcu5OlDCwD4HdwVJ1J1uxD3kjU+bq0JaH+2NsBblD1AeK
sQ/pstG747m7DvsQyzeq8aVV9diHcBKI+vVGldiHnJqzMP22Jxl7D7uWIzHJ
6SzcByOox/NYq2MCIO9xzSFDWbWPDZD3CHYzKuOn3j/yHqZag+l/CTbui5l+
JRJZo/+v38VosdfdzLFJAvkOp0uqLfYS3CTyHUc7Sj5U9NNI5Dvo48Vv7MV5
SeQ7DFKPrHh4g4dE3iLwc2RJ6ecm7C2yuC81tpv3YG9xLjpI8erEIPYWjZfO
3jjvxsTeQr9mmeQV2V7sLUSr3d72zm/F3mJJ1OIle899wd7CzDc8fINiOvYW
Dj1yVX1LC7C3OOT/ztv0awn2FmbLtIyz3pZjbyHPI+vxuasSe4vZAFHuAmpO
Rt7Ce02gdo99DfYWy75P+pnKM7C3EHIqOm71lIG9xdzt24f0rr7C3oJboczm
R2MV9hZbgptD2zc3YG+xkkv6Uq94LfYWjFBOoVdwEXEku7TbzWcM8FmxD+48
OgaQn7BpLdzBt2waID/BkLDPllag5vH//MRT/UhWAx8H97+kntngMI+cAshP
qHyOFz76i0MgPyG4gXVxTTMPifxEqdP1BzrU+Qj5idKovwI/vGgk8gwC2nsM
R790Ys+w1iKkmP9jP/YMPFWNh7XnmNgzGNl/LHA+PwBQP8sa4+3JrQW/sW/4
6WTo4JNShX2D9ZDosUU1b7FfkOSYVf22LMN+4YOy5/m3wxXYL3g5tZ3qf1eF
/cJlhn7/2t5q7BdA9OUeg8oa4CliY2avTp0f4pP/fHFkYM+QVNZ36c0XBvYM
mSusBN66lGPPMG+iyszhdj32DN4l2udLs+uwTyhRzqy0ip0ByCf05j3jjFDP
V+QRuhvLB7aJ8JDII4i/c+VvV+QlkUdwISZNfapoJPIEa+jCY/vX9mFPoG2m
svnvOyb2BBwLqfPe1PMKeYIjNz3iZftfAXqh7c1uCQm4SbtTYtUeBlj6ddOm
sQgJ+ExOTnPzWwYYXq85/OhhLXhZU2C1z55BIC+wXeL00C/DBuwFatMOprX3
VhPvXxW9jhuYAD8bm8uaRNgA+YC9hiMTy89zAPIBthe2pzt5zwDkAwTzjB5t
uEwjkQ/gdi/Lf6FNPS/+y/tfZL0wWj41gPP+1QeqCOl+JviyUudoECkGLzbS
kp3H+kDNoQPLWi0l4K03Nax9Vxk43x+5mt3IKmSA5NawlgM3G4DhXS5ViZk6
AuX9u7+bPn1uU09orhkRTH8/CZ6H3ghIMp4BKO8/cD3LN8ibA1C+f2FxPF+a
CC9Z8e6do0+8AEy7ueeP5ASNRPn9Xvc3V44cZYIn5wQ1ec6Jwd9GM8Na1HkC
5flpdwt04kqSQNZD56jjtyUgLVdpIeMVA+RpWnmDUAYQMvSfid9SQ3juchNK
Od0MIvb2ZJqYNeD8vkC6iNXJgxyA8vuPo9P2FRTOAJTfT15+9YXvZhqJ8vvz
RxWzV1L3J8rnP82uvqd9dADn8zMK06TXUPOwilbQn3flEtBqj9K3CpIBHj4K
PE/zaQTeyzuOlA7XE08690Q+UZ0CG/5ufxY/OIPz+v2Klyf3a3AAyuuvvWZ4
9Tl1/VD+fkLAaSizgwlWr5B07HlQB6Z75GtCXWqJg+xDMXa2rSBQ4cPKI6sb
CJTHZ63eX8R1nQNQ/r5bcrhX+QuNRPn7lHOhjzYoU/PFf3n7OxNTXtNXBoFT
uXuItdn/8oX3zVZ+YeJ8PQj26RWn9uPqrXufvXBvA2dTbQ39ntUTKG//R0dW
yfUqB6C8/fRseLnfHI1E+forzxJ6mMpM4GOTenLecBPYHCxhu2ZnA3FYzWRP
TvgUMFPzHwjR5QCUrxdc1f8cUucTfb2XvvmyYlBmfd/DbtoQCIv7Xm7J+QUW
yAhbluXWEyg/P20c7qprwgEoP8+gtVzrVuMlUV5+8YHZ7MkS6jwq/IrzuaMF
+D2W/XFGo4HImIhvjFw9DV4vZbP7/DggYyEob7YSgKOXqzYe3cpLTvuLr2Ps
EoMjJnP5HQzqfrm0NVegTwLyPzjeJv2NgfPyimbbO+zOcADKyx/bE3PZT4qX
RHn429d8ZePCXoPTqoopR3qp9Wi6sv7avgYiiM4WU2meAnZZxgNPHDkA5eE3
qUxqderxklLtNualW8WggULppo4pJgi6AlYkjTcCkb8BvRfoDQTKv8tIP1sh
uIOXdI7pSviyRAwCxf231/9lApMeuqFQUyt4/o59sWC2nvhTfyB24Ylp4Du9
N8byJgcwVlWwm63E4JfCTWGVT5k4305evvn1+w8Gzrevt3w1MfmpFefb30pY
plyLycd9Km0q230iXIpxvn29RqSM4YY6nG//Nsy3TrK1Hufb1YK1fZPOV+J8
u6BwmIm4+UecV68zqbXVjWbhfpT2tfF9e8snAMqrkx/mO3Y1sQHKq8/Z5+m+
peYvlFff3FdRd6uMjftT1ueLzlRa/+s7MXrw7tuTskkC5dOH/r7dGMrPTaJ8
+pPn+UVX/9BIlE9/YeeR8pk6P6B8+pnU2b3f7/OQKC+eI/5S+ZhNE86Lu23f
LNe7pQfnxc92B8DJnkGcF//eH8IK9GHivPiNP/GKW/V7cV7cTHr1w2TnVpwX
1x+VP2hekoXz4jPmQ3IKrWk4L160TrFWcPpfXlxJ0jhDM74E58XfpBwsKQ0r
x3lxy+lbh3lbK3Fe3Lrew6JtfzXOi7+RKuiTtKvBeXHhSp+WhXIMnBdPuw7B
38cMnBc3sbkwJXE/EufFl0cx3nF9qMJ5cZNboUUxSg04L55Id7M/qlr7Ly9e
67c4cLyISPxTRA90HwPOnszxU4ZjAOW/pTMtvGIFpgHKf0c7+Tl6r+UAlP8W
udWtwhbi4D4U4bnUe8uqpgDKf/PD/RMxnzkEyn+b5p78+rqSh0T5753dcnlx
Brwkyn/r6j0+JOFHI1Ee20cj67T3w06cxz4aeMxSKqIf57HZX7zXiHGYOI/9
MWvV+/CgAYD6SmoObzB72v8b57P1laI3H6RX43z20SnRg8s13uL89R+NUA01
/TKcv7Y1jfnt2FOB89cns3KGVsZX4fz1AZaW9eTvapy/rrs52735Zw3IOVXy
6NRWCRjhF5Ix58DAeWwV41NdlZkMnMdWd5bTvMP+ifPYNCeZLxXe9TiP/WEf
177bVXU4X71q5cD49ogZgPLVvwz0hJvsOQDlqT2OJzWMcPOQKE+9a8+as9wK
vCTKU7cEn5qzr6ORKA9tdSlTYDN/H85Ds6eCpHximTgPnSwT46GYNIjz0Ny0
wFbP3a+A3eqKkiG6BFQsq5dcs5sBStMnW/LCJOAO4ChKT2SAvoEjx76714J9
t7M7HwAGgfLOxyVN7oTtbcB55wHzC4+NRWqId0qSOe2/J0BNgvVCVWquRPnm
YLn0O2LuHIDyza7vWAHPr80AlG9++23BrkgPGonyzZoh0SKrAS+J8so6L9jG
hX8GcF7Z68Do9bNDTDDP4+CRuzlicF136sqGRf1gVXrB4W4LCbjlyNVfDH8G
zifH1Nq9O0zNX+4y68cUnBpA1Auh9znddQTKK/8c/3k+41Q9seR6o5jh60mg
LpL7bFh3BqC8cvxxo5bKSxyA8snrfI6NRAvxkgLam9Y9iRGAt99VTEA2NQ//
lz/2djzwvcqcCTqKpDX4zorBDafKb69ezcR5ZPNY/3u3Nn4Ebnc3Gm+8KQGL
DmQeePySAbJnLvV5elLntF+0/uYFNcTWYG7pm8bNwK6f/eGZSQPOHysJNKjd
2scBKH+cfFOq2fPnDED5Y51H5o2e8jQS5Y+91mRsCqfmL5Qv3lpWrR1qOIDz
xbpqq74qU/NBx9Z9oT5lErA2THf3cmr+OlAvHlxv0wik5YstBrvqCbddarHy
SlMg7iV9SqtrBueNL8+Ab006HIDyxgcf9Jn82c5Lovxw0rqId3bN1PO6GdSv
PFcHYk9cfN9hVEtIwMFMNdgK1hv1Hzu7jjpf/pcnbmqbJ8S4Rs0T/+WHFwmc
8hX9RCNRfrijza4wYQMvifLCkp823l14bhAEX2q8oG4iBrczore8zWXifLCF
3sCOqO8MMBCUQ0s/1gYsXG8c00isJ1BeuLWH/2lHAAegvPDHva8//ZymkSgf
LD9e/bqDun5aUTt9GyuagOyuV0pKeg3E1nD1fWYhU+AH33yH0u0cgPLBqyvk
FqtS85czU8A+WloMjsvp7LSkPl+bfps/Si2/wDankYnHn+sJlP/95cC8wDbn
AJT//dnykRW5hZdEeV8LceGTCwuo9bN/85Kg/BYQM1saZKPTQDw89LBjg8Q0
IE0/6lRc5oCng+IRXQcE4LLHEVuOqFPzj5Kf0GcDMeip3G5T3sgEZy5wztR2
U/N+9ZN7kcUMnPede5H6y/scB6C8r5jc9Z3zJHlJlOcdlstJ45JKACre2d82
lzQD948mjkLmDcQJn65lZM0UYCqHx0dTzy+U572vkGjRSc1T+nfzt71VFYPH
XWIT7s4wwd7Cik2BdY3ANvSDaP/CBgLld7nWl57q0qXmTVOTe+FiYvDW3pjE
k8NMIKKcYNue3QqYc4cjx/gbCFILvI06NA1U5r0UkaTmr+kS9fbsg2JQskRL
jvsVE+dzRYNfPzxOzV8/JgKNA4Kp6xuT2LGB2tdIeefE6w+bQNpUxYdg9QYC
5XGtTD/DT9T9kbLzl7KdFHVekMkV5OEeAih/q135piVChXoeNR3QVb3eAvq3
mi4NoebvndKOw/v5p8GQlKB0jxcHWLzP3zC2VwA6zWqkcqj17xRoWndOlzov
JiyuPPuHifO4J3RtPghTfz+Fp3Ws6U4z4HAL6rpT86zxO58bW5QFoCTP1tIr
1H56tyuUx3kjdf90SPO85xoCFSajR1XCGwF3o+EqOrueQPlb7vCNxirU87Iu
XsraUlgMinJ/kP/QzQShaSXBd/xaQflBjnOeRAPhybskM3/PNDj/MihkmPo8
mIy2J5Nvp8GbohPb8/2p+01cxmzTomag3uzicp06X39XrP1ovlIAWhyyr1v/
v993PNkW9nudGLwtqscQ4R0CEd8Xdbdyt4LQZcyUyS0NRMujrzWCCtNg3NR8
SckVDs7PrlP4Qdyjx4DEofBntwRawMogXydX6jxZqSR1aIm2ANw8+ywwj7r+
06qs04PqYnDqtHr6z3EmQHnaE9vXSS3Up9bTxOX8RroYvLntctCtCSYQOu8S
een0NNiVISP0v3kc5WcVab6iyqUMYNEuZH+9nhdy/f8fEVKy7XN123s+/PX/
AdtJL1M=
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1:eJwVzStPAmAUxvEjSLDgbRq8BAwm7aBJP4JRgwyrQtGmG1QvQaNuqJ9AkEr2
UiToDG5WgxtQmIW58SM8O///c867N1MobRUTETEieamAsmLfnBuNyCYjTvmE
XPIHnpAn+wIv43e7T9zD27iG33BGujgtVfcb5q7u33x01zLbPIuruInTqYhx
85ePyTLveHuMr/Up3nb/zfvDP/ghb/IvPstXzD8+I6v8wPt5nNP3zTP3L+YP
n8RXuIaT8ux2j1fwh92O1HmLL8mt/SbP44ZdTrq6E92NrsOPpKhb0K3pzvnU
8E/dnZRk0W7d7kI/La+6exkAshAy3g==
                "]], 
               PolygonBox[CompressedData["
1:eJwVz7kvRFEYhvEzZoSEkUjoJEZCRWVrMLVagtgTtRA6W01lLSj4D2bpTYOE
ygyNQqJDMotoRKPhd4sn3/u83znn5nYtr02s1oUQYljBOOnGkWIkEcJMPIQM
70dZd40F/ba+pJtEE471o/pZfZYPoKLb1J3pqnwdN7pF3Y7ukU8hxx94J5r5
Ac/If/Ie7vgbH8KJ+2N8Ts7ZFeWaPChfyFfRG/UhJM0yb0DVnS3zXJewqzn7
yn95im/wAn/h7bzX/OFt6OO37i/Ju/oYf3L+mX/zDj7N87zIW3nK/OLJCLtD
M6sL+JDj2Nffm++6YZz6RprPy3m7kvwZ/bN8KRfkpLdbzApvRA//B9MVOKI=

                "]], 
               PolygonBox[CompressedData["
1:eJwV00dPVGEAheHPgpqYKBtrgoqCHY1/QaRKk5+ABRSYYSvVEruyw240EZAE
sc0sbTDoHuyKlL2JskGs8NzFm++c93w3uZPcyayKV8bmhhDmIIX/wmM8JXdj
Wj6KTfNDyJsXwhUuA2+4Wu4cN6LvRy9Xwh3hnum56NQH9GX4ZT+l35UXpYUw
ZZ/QZ/QWuV8ek3eh0d3Ner581bYGHXpCX4C39jr9vPzVdgD3uVKulnuu70GX
ntKX47f9tN4p/7S1oonbwhVw1/S1eMfVcxe4Uf0g+rgyro57oQ/J3+U8uVse
lJf6TSuc3/TF+OOZM84ubtq9NjRzW7lC7rq+Du+5B2hBK7bZi+w3bJn4wD1E
OV/Pv+Ty8Zdrw3a+mL/JrcdHLsZd5Mb0Q3jEVXAxrl8fln/Iq71zgX5Pf6Wv
xD93jyGH26vfsm/AZT2pL8Qne1y/JI/bqpHQh/SaJSEcRpr+2b0GZzs/Eb2b
PBXdkZPysJyFSTkdT9zf54xzM9G3E31rzkm9SO6RX8urot3ds3p39G3ZjuME
t4Mr4W7r2fjCJXASO22ltjv8RoxwSVTyDXyKK47+EJgFkD5snw==
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{584, 670, 413, 1326, 1049, 1274, 823, 997, 1223, 
                649, 769, 942, 1168, 527, 601, 722, 895, 1121, 453, 493, 567, 
                689, 862, 1088, 412, 411, 410, 409, 408, 407, 406, 405, 452, 
                492, 566, 688, 861, 1087, 404, 526, 600, 721, 894, 1120, 451, 
                627, 748, 921, 1147, 491}}], 
               PolygonBox[CompressedData["
1:eJwV00dwTWEYxvEjbpjJBlEienIxNsqaVIm+s9ZypVroRBukKCstYYU0fRej
G22pX2YIoq1kYYYrEjYYv2/xzHn+//c9d75z5tycxLqla9OiKBogPVKndErN
wChaEouiS/pLGWfphJTyU/lt3C78D3/G/frg9Chqx434t/kI/YF04GLz21KN
F+OL5gncLQe5NdwLbiw+LiXcFK6W24n7pI1r4H5xw/X70o6LzG5JFV6EL5iX
4XdygKvhkly6flma8RizZpmLJ+Ot5rP0j+F38Q6zv/on/afeqteH57SX4fpV
Mrl70qYX2sn2/N9wEt8M78a1Ei90Pe++aeZD9JTE+UycDGfCq+yPx/24C7/F
aXg/rsbP3R/HMf2LxPgM3OnahLPt9+gP9Sa9WI/rW9w3U/8Qzoq3m/VKC67D
febD9LvSigvMbkgFXoDPma/Eb2QfV8U940bjY1LE5XKbuRn6+/Bb4fswy3W+
P+Gd4h94ED6N94Z3an+ofkdacL75dSnH8/FZ8xW4Sxq5Su4pl4WPSiGXw23i
anFKTnF7uF4uD1+T1dw87gy3HL+WBq6Ce8KNwkekgJvEbQwufL8yncty5u5w
zvCN2PsuJ/Hu8Ex25+CrkuBKuQ5uGX4l9Vw595gbiQ9LPjeR28ClZDZ3Rcr4
Er6dexT+O9whyeMn8Ou5/4SJeic=
                "]], 
               PolygonBox[CompressedData["
1:eJwV1Edzj1EchuF/KokstBlGHQYRNRL9K+gJEWVlpxNJhKXee7fSRVkSiTaj
pbHSGUTUmLHBjG5cv8Wd89zPOW/Je07Sa87igkXJiUQiCb39+Ic+iu3G6/iA
YfwsilMSibGpicQ2XSafintYqZ+tv6ZfwluwT1ehe6/LkqtxmOeaO4PpfAzf
an4d/xfP0G3VZcg95Eac54X8LlbwWfyqawbIT1DDF5v7iL18OX9nvo18CYf4
UHOf5LtypVwkj5a3WNfZ+BPDdc24Ja+1Jtn4Fn/ljDTvbG4Lb82zeZb8Gd31
bXmD8RwvMN+Vf+EPeGN8XF7BZ/IrnjmQd5C/IUffkT+Ob8RjM3ryn/w5/8BT
+B5eHu8U+8PTYw6Z+ja8yniQD7G+M2+J78dP8z/GaXyUcbPrOxl/IF/3Gjfl
NdYlGd/gj1yp3yy3krvJ9TjLp/AGLOcz+GX3W8jfY7euLO6hG8xPxRnRjdRt
0qXzyahHub5YX6PvLz+K/eILYu+9/w/+LPaS75JL5WZrB/GTKNSN0G3UpfFJ
qEOZfrq+Wv86vrXuBAr0w/UbdKl8ImpRqi/SX4oz5bnt5a/I1nfgD41VfL61
3+WnsQfyTnmZ3OS6DPkiDvABcRblBvm4PEXOl9dblyc34QZfHecifif8lk/r
N8kpcX7kOpzhE/gdLOPTeJX79IuzFc/k88y9wQ5ewl+Zby1fwP44X+aOxXfn
eXyd+VX8V+yPbqMuWe4i16KSj+e3UcKn8ouuyfEt2slf0Fd/P54hz7WuOf5f
8KX8ZewnPxp7ohsWf0+6JD4Ot7BUX6i/oH+BbN2R2BN9bpxF3X/er5ek
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1Hecz3UcwPEzjjvOuusqilxyw2hQJFqOoqTr7koukpN5HErRFJWGUdFW
yWhnZVRKRpktozKyS0RDUVRKz/fDH897fT5vj9/v+/t+v5+HjOKB+aVlEhIS
SvyJpvvzqXbTxzVPK9CLHvat9Yj20IV6vValL23sz9V92l1n6rVamZHWV8QF
WCZdNJWm1pm6RSdTYJ3MEOvL9Kguie+hlf3v+i6PUpYTzT7TJ7iZtpxntl9n
cX/8JrLMtuoUbuM6ynGS+ec6np5xzfg85TnZv32hE+jF5TQjkQpUJIlkKlGZ
FKpQlWpUp6bv+VKfpDftaE62+Tadyu10oga1zNfoU/ShPeeTY75dpzE0nj2p
nGK+Vp+mbzzn+J1mP+lsHqAFDcx26CsMozMXmh3U9xhNGqeardNn6Eeu/V/6
EVfGb7f/Wd/hwZjF2WG59QU0tN6pr1JoXYk74vnpv7qUG6xrUGR9kR7SYn0/
noNWoQ9j7K/ScvRkpX1XTaMfJ9jX1vV6kz6r12hFelNi30b/jvOhi+K+tRod
4rnqLzonzoR1CqOsO2hZVli3pJH1Ln2NO+Md2v+nH8e9cLH9H7qAsaRTx+wr
fY7+cR/xHsx+1bk8FGeaxmbf6evcRZc415xm/rU+zwA6xvviTPPv9Q3ujucR
55i65t/oREq5Op5tnOM4g3Gu4qzE+41nFr8vrhGfI4PTqccZ1I+Z79ugLzCQ
vLhPzjLfrW9yDzeSGZ8336gvMijeA5dwtvkP+hb30o2suJb5Jn2JweTH+TE7
oPN4mEs5x2yPvs1w2tsf00/incc17P/UDxgXz8m+PKuss+N+rDfrpLiGdRK3
WLfVf3QxRdbVKYj3rb/pfB6hNU3M9up07qM7OTSgYZyPeI/xbuL5xD3H747n
6HPf6svcSiG5NDX/UWcwguK4V7PD+iGPxfuzT2R1POM462WO/z/dxP5/iFWY
ng==
               "]]}, Annotation[#, "Charting`Private`Tag$335526#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1WdUlmUcx/E7xIadA6YCpqICZVbSeOcegOBonV62VLYLG2pa7lmmlbNy
AY5sO7DNbE9H5lawN3ZOJaCpWY76XKcXP6/f9/u/bp+Hez0puRMeLLkqiqL9
/hknHWKjqGeLKFoUE0WtZSneimPkK/NcPEvfZ3ZAP6s/pG/Td+kp0qTHyXr7
B1lHcJetO+zbbT2Fe+rr9Uo9rmUUxVt/w9dJN9zo2Gn6ar4lPmX/cXwxfAae
iCvxEZyIe1jP4wRJx+Md31HvxV+0vmD/N9aT+AZ9mb5NbyFf25uHZ+s/mz0s
2/FunCql5hl4pF5h1kuauOncGq4RT5JwIjtxvbnFuE34TK5MJkiyWR+zJXxb
+ZYrl9nyuHQ272v+olk7+Y7bIJn8KH4n11uauSekC9+Pf4lLkO+5fG4Otx8/
Ihu5LC6Xex/3kdPcDG5tuFZ4slThozjJuUu3/oUT5Ul7u1r7cy/blyg/cAXc
XO4AflQ2cYO5PO4D3FfOcDO5dVwzflqe4lK4AdxSnCQ/coXcPO4gfkw2c9lc
Pvch7ieluAq3lj/NZ4V7TL/adz5tXo8vhWuGp+BqfAzfIRPtT8UD9WVm7WUX
V8TN5w7hEfI6l8MVcB/h/lKGq8N9I2fD9cKl+hmzqVKDj+M7ZZJ5Gh6kLw/X
WP9Vv1Ffrm/XW/l+sdaTOFbS8G7HFesLwrOGD9t/EJ/DyXgk3oH34DY4LZxT
HC/d8RbHD9EL+SvWj+3fY20Mn20+AJfjmnC8/K63Cv+/4+ZYy8I5tadBv6w/
o9fq9fpdMtm+m3CGvsKsg6wIz3R4PmWP+Wi8UD9iNkre4IZyRdwneKBswLW4
bXhezefi8nBezZ4N9wh3M5fJrcQdZS83hnuOO4pz5U1uGFfMfYoHhXsd1+F2
4f41n4c36Nf4+8+Zn8BX8DR9ink3nIVX4U7yE/eWDOdH89v1Sj5DLuhT5Raz
wWavcMmyjxvLPc8dw3nyNncPN4arwpnh+cCf4QT523w+3qhf67udN/8F/4un
63V6g353uA72dsfZ+qtmnWUlrgj3fXhfhfc2XqQfN8uXd7h7ubFcNc4KzxP+
PLwr5R/zBXhTOE9mM8K5527lcrjXcJeY/38Txod3J1ePC+Rd7j5uHFcTro3e
pA8Oz47+hR7vb0qy/oGvD+9sxyy0buYu2DdTpnG3cUO41bhr+D3h3gvv1fB+
ktvNh5qvMUsJzwO3Ve7nx/O1XLZcCu8Z6cEP49dyqXKIK+EWcw24MPxOcQ9w
JVxduOZ6s97Bd87BW/CXuH34zQrvGEnnhuN15mmyCu8M95UcDu92vEQ/YVYk
FXgvLo6Lov8AcSv22A==
               "]], 
              LineBox[CompressedData["
1:eJwV1WdUl2UcxvEHBTUV07STNu0cN4YKiu16meUC3KvxKhsiuLVxSk1ME7fg
OG0XqA0HYBMRJ1aOUlsqGCDoOWpDrazP/eLrfX2v333/1/M8ePczGWnjYqIo
uuCfsc2iKC42ik7K460L6kfR6XpRdFz+U35W3iofltvhotwcn9ifas3Q/Wct
se+I9SLvI6+Xy+Q2YW5vNl8rXzV7Da/rEnV9dW/z9vhR9ylmoptZP7N39B3w
k24r0vTj9bt0jyPCdf0sdDfrb/auriN+1m1Duj5TX6p7AjGYre+hH6B/j3fC
L7pMXY7uDB+LbfwIb49Lcgt0joui7fYOkrP0u+3riw18D78V9fhcvk6+Fr4v
3nAmSTdQ9z7vjBV8G2+EX82z+EK5wuw5bOdHeQfsMB/MJ8hlZv2wke/lt6E+
f5Ovl/+Wz8gRZsol1lP6JMzxOsk8Vf7AbL9cLXeRc+Xt8g04Zd8EvkiuNDsh
/yU/L++Qj8kt/RYdrZf5TejCC50bIk/U77G3P2KRre+pT9N/yBNwWleEofpJ
+r26AYgLv5++lz5dv5Z3Dd9JN1G3WHeWn5SvyHd63xd4If+ed0KxvcP4ZHmf
2UA0CL+RPkU/SL+O34MK3STdEt1v/EXs1A3XTdHt56nI5/v47WjI5/EN8j/h
NeQYzJJ3WU/rk3FFvgXzvF5v6+CwP1wn+w5Ya3hrnz+R5/EdvAlvbK3iDdCO
Vzo/WV4arjWvCs8Mv8rv4uN4Ef+Bt+Kdrb/zlkjgnzk/Qp6qj/gB+4/yS+H+
4Wm8gO/nzfkd1vO8KTryRubz5Y3h/uD/8kpeD7PlUusZs57hOZdbY773vNc6
RLfBnoPyObmbvFIuDN81XEv7pvBlcrVZBor58XBf4nPzkXyafNAsHZv4gXDt
w+fhb/F8+Xp41oI7c59uqG4j745VvIg3DdfZfCpfLteYjccXulG66bpyPgiN
sUB/v36YPp/3QJXuS+SgHV9ofcCe4fYU8CRU677CaP0M/SHdYDTBIv2D+hH6
TTwZNbppuhW6czwTX+vG6F7SfcOHYDM/GK57+C7h8/GC8LdWnoPdvIL3wmLn
H+Ij5c1m5XJtuE7yark4vIbrGR9+e94wXCNnpltzdbFmteFvML/G2/Ks8Hzw
E/xmnmD9g7dCV17i/JPyy/oY/q39x/jl8OzwoXwLL+cteFvrBR4fMMuxbgr3
abg35PrI1pdZK3UpWOI9Huaj5C1mh+S68J3lNfJOOd5rNwvXlzdCe/6Yea2z
M3ieWR2fEJ5Z3VO6V3Tf8WFohqX6R/Sj9R/xFNTpSrEMy7ECucjDSqzCajzq
3BjnPnamN87rduNp/av6w7rhuDHcP7rN4ffCXL6Hn5V7h/9D5DZI9PnXOP8/
9CQEVQ==
               "]]}, Annotation[#, "Charting`Private`Tag$335526#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1XfcjlUAxvHHptKkXaI9FSqbyh6VlT0btKy2KLuFdmkpGjQkmip7r9DS
Lg1KRYim9L3++H3O9bvO/bzPc9/3Oeet2Ktf675FCoXC9qKFQuUShULnUoXC
ayULhdOwnN+GCbo/+ACURU/dMN1nclv8xpfyiniMT+WvyGUwglfAJ/IZeFE+
3XwX+XW5MtbLNbFCP8d4MPYoXSjcZ2673AK3m3vS+KeupLmBxk38vFzP9+bv
yydjX/4s/1tugwq8l88Plz/XF+PtjBt4PZTnW80vkyvhcXN/GC/Ey/rp+T0Y
qd9sbIyj5E+NVfCSfIbruspv5P6wkt+Bp3R/8WuwDy7WjdB9IV+EbXwaqqCb
/s38Lazid+ISVEV3c2/pq+A9fhcuxUj9l7r2eVZ57qiGHvqZuqpYzcdgou5v
fi32xWW6Ubqv5A74nS/nR+MJPp3PkPfEKL7F2CTvWf7MWBVT5f+M7XGm63sa
39YV9UyrGb/ltVCOrzE/Vz4kf5Pfn++UW+JwPtb8JPkffSl+nfFn3iCf4fvx
D+RTsB9/jv8jt0Vvnx1t/FrXERvl+tihX2E8BhP0M/ir8l4YzSvhc7la3rV8
lvle8jvymVjL5/FD8QAfx5+W/5Wvx/7ok32i+0buhJ35DrymK4vbdEfjbN3F
/N18T9YrvxuX43b9el3nrL18FtXz/vWz8tncO78HV2Rt6b/VdcGf/HXUyJrQ
z9ZVx4f8XlyJmrjM3Bx9DXzE78NVqIXaqIPerplrviY+5vfj6qxF/Xe6rviL
v4G66KOfp6uFdfwB9M361H+v65Z9yN9Evdyrfr6uds4E/iD6ZX3qf9B1zzvl
b6F+7lW/QFcn+40/hGd0u/gNOAD9dWN1G+Qe+Jev5MfiST4zz0feO+cIPwZf
ZL1imnxOnpG8UK6L7+TaOd/0842HZb1Ybw+a2yGfj4fNPWv8T1fa3I3GX3jD
rBVeLs9fPhX788n5XXK7nB18gM+Pkzfqi/Oexh/5OTiQ7zK/Sj4uv5s/lfcs
t8r+yvM37oM7cv4am+Z+5S+NZ+EV+dy8X3mRXC/rnC/IXsNDfDx/Tt4t34Ty
GJg1qftR7pW9zd/J+8u5ijt1x+G8rAu+WK6f58kfwWRdAYN0B+bcy5rlP+Xs
w27+LhpkneiX5Pnnd/NHcS0aZk2YW5p7wFf8MVyHRmiMJmiK/q5blt+Dr/nj
uB7NMMDccn0DfMOfwA3ZE/pNuktQwCxdcwzUr+ANsZ5PwI3ZJ/qfdZeiCGbr
WuAa/UreKOdc/j/hpuwZ/S85X3MOYo6uZe5Nv4o3zhrL/wZM0RXBzbqDMCh7
iP8q90axnPf8eEyU52Zv5PzDXfx4nJ9nw9+Tm+B7vpAfkXXKJ/Ln5aIYzH81
NsLBOQeMp2GKvMt4UX5L9qVxs66EtdfH+BM/Fwfx4ny1fELWIJ+UM0FujSP5
PJ+fmXWPMnyM+a1ys+wlfkLeqXw2DuDTsy7kDrgg78+4Wtc09yLXydmgX5S/
j/H6SfwFuRiG8ENyXsmV8bw8OGeFvEW+PPeB+bq3850Yy0/EhVkTfI3cDBty
vuNFXXHcojsUQ3QP89/kK1ASC3Stskb0a3lzbMz5hFvQGm2yJsy/b65F9njO
DdyK8fqtuitRCgt1bTFI/wFvmeeePYqXdCVwq+4wDM1+49vkq3IGYVH2qq4c
xvGT0E53M/8w6wSb+GJeAY/wyXyqXBJD+eEYlr3It8tXowzW8BPxtLw4e1gu
j7v5NmNznJw9aKyOGdlb3m3HrCnXDzZ+pLsAP8h1s6f0S3IeoqxrHzW3M2sg
a5dPMf+yXArDzB2BdfLpeEEennNB/l3uiz2wlp+EZ+Ql5mflPMU9/BS01w3h
H+fd58zO3sA0XWkM1x2JETlL+A65H/bEUl2HvFv9Ot4qeynrECPRMe/V3Cf6
1ticdYRR6ITO6IKu6IbuGOr6T13bBlvynjE6Z5V+p64/9sIy3ezsP9zLT82Z
JtfAqzmXPK9OckVjD9f+D2zQkVU=
               "]]}, Annotation[#, "Charting`Private`Tag$335526#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1nf8lmMYhvE3RUtSMlLR3ktTA+1B2mW091SSNu1dtKRBW4OGhqZRNETR
oInQEtqKksr3+uP4XOdx3vf7633eZ5Wtdff63ZIkEonJSROJ7CkSiS9SJRJ/
p0wk6uF7PgQNkQNbrf2jr48DfCga4YI+Bwbqk2CFLie26a7xBjjIh+H+1IlE
Tf17ujxorLvIc2IQvwMf6nJhu+46b4hDfDge8Pmn9Qt1efGc7hLPhcE8KVbq
CtvXWvcpr4Dcuh38X7kRDvOn7Omp+5aP4A/yZ/ging/P6y7z3BjCk6GWPYP5
D/Iq60V4G/4ZrxjHpPuS34hjwxE+Eg/ZV0u/WJcfL+j+4nkwlN+J1bqi9rXV
beaV4hh1O/l/caw4yivY86puDx/FM/Jn+RJeAC/qrvC8GMbvwhrdY/a1023h
leMYdV/xm3Gs+IGPxsP21da/ryuIJrqrPB+G8+T4SJcfX+tuxfHgRz4GTfG3
Pj9G6FNgra4Adulux3fET3wsmuEffQGM1KfEOl1B7NYl0ER3jI9DcxTCN/ok
aGrtZz4eLXBNVxCj9KmwPq4HfKu7A810v/A3kMmx1tF9oCuElrrrvBBG89R4
1p4h/Ed5g/VivD3/nFdBcz6Zn5OLWN8jJ0Vz3sHaO/Kv+opyL3m6udfaAPPD
+J3NN61nNuvyKeZS66+Yi+JaNwvH+TfH8Vnm6bhmzY18hdnK5/+VC2MiH2O9
qzk37jXzbl7bHMp/kofIa+WNPldc7iB/oa+KFnwKPy8Xtb5XToYW/DivZL03
38cn8Cy8Hl8Wx4/Wuhu8CMbyNNgU1x/26e5ES90JPhFt4jfFfv1daGXtJJ+E
tvH9UAIlUQql8Z19ydHa3lN8MtrhP11RjNPfg491j+N7XQq00Z3mU/CI711f
tzyOE+11N/ljGM/Too49w/gx+ZP4Hrwj38r7xHmSq8V1I78lX5DHyJ/KZew/
YKZEW31H/bvyb/rKch95hrnf2mvmyrgO4+9Yf9RswN8yV1jvaS6OZ5P5WNyv
5ng+2/yNjzQ38Q/jXPr8LbkYJvE3rL9kzuP3ynXl4fLP8lB5XTwn4/eVO8nb
9NXRik/lF+Wy1g/KqdCOn+FTkdWehvHv6orFMepu8+J4k6fDZ7pyOKRLjfa6
3/nb6ITyOKy/Gx2s/cGnoTMS/n4J/QR9emzWPYEjujToqPuTT0cXJLG/ZNwD
+vuwRfckjuruQSfdWT4DXXGH/aXid9JnwOfxXsAPurTorDvHZyKbvY10K3XF
4zfVJdWV1k3m9+OLuEZ1nXXbeY14/+h+jN8eXfh5XsWevvw7/g7PzhvzVbxE
PE/jvPEzcjfryfjj8WwIl+fLD8j15BHyL/LWuDd4F76D95WXyTXjnpTfluea
l/hY87P498yKPveTnC7OGe9qvZM5i883L1ivavbjM83vrb9uruJL45q2nsN8
jk81V1t/1VzCS8azPp5v8u/xvpI/lrv7zJ1ymbjG9d3lBfKDcn15ZDwz5W1x
/8Z34l/yp+O9qDvG0+MlfpHPQk77ntet0ZXCy7q7dGXje/GHsD3uPfysuw/d
dJf4bPRAcvvL6d/WZ8SOOFf4RZchvrfuMq9mX39+gM/hufgL/CNeOt6ZfAL/
I57j1lPw8nxafC/5PflhuYE8Sj4uD5PXx3HaX0Z+KfabO631M5fzJfF/FN7G
nMbnmZf5OHMzX21W9flf5fvjvuEvW+9szuYLzL+sVzcH8HfMg9YHxnmL68Na
bvlFea2+l/y+/LjcVJ4o/xnPI/tS8ififcYzoSEfzU/IO62X5d34V7wWqumO
x3WLHvwKn4c89jXRrdOViWtHl0r3ZDwfeWZ8Fd8ZJ+IawSu6q3w+eqEGTuof
Qk9rf/MF6I3U/tZTce3qs+BrXU2c0mXEq7p/4m/Y9xo/xAfJa+KdFufKWl6z
KV8fz8J49uvu1lWI35A/gl26p3E6zi166a7xheiLNHGv6d/VP4rdumfwmy4T
euuu80XIZ28z3QZduTj/unt0lXSzeFZ8o6uFM7rM6KP7ly9Gfnub6zbqyqO/
Lq2ucrwzeDZ8G89lXXfd1/zZQPc7z4K+/Eb8Vva8zg/zJbwAb8E38ScwQHev
ropuDs+ORvF/EH5S3hPP+LgO+a74LvFOk2vLbeXp8l/yeHlL9Pb/YT6Cfvou
+jnyf/H7ygPjNzSPWBtsfsSXx3VqvaDZMu7feM5Y721+wBfH9cSbmZPie5pn
+Wjzk3imx7n3+XRx/8Tz3JxrvYe5kOeQG8tj5VPycHmDvDfeR3IPebe+Dtrx
GfxKuPU/5UfRn9+Mc259ED/KP+CFeCv+CX8qnq269LpqcX/znNinq4uzuqwY
oLvFl2Ig7rO/ejyv9bmwX1cP53TZ8JruNl+GQaiP8/rseN1aAst1g5HB36oR
zwpdbnwX71DdK7pveF205zP5VfkN+fN47poN7P0fST7fQQ==
               "]]}, Annotation[#, "Charting`Private`Tag$335526#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1Xf8V2MYxvFvEW1JaWsqLQ1JJZLSkCYairZQKqVIIioamopoGg3tPbWj
jYZo7z2p0Pa+//i8ruu6n+d8z/md89z3L3eLDvXaJ0kkEvOSIlUiMStNIpEZ
41InElWQHMfV52O2ehaMV6uKFDihvk2tHFbJr6EQFqjPUcuKb+RqSInzcn3s
43vjpH3b5cexWn4d96VNJLrLSVFYvkFb4Qw/DLmt95PTYaHr59Js+NZa9Xgu
62/J//GpcIFvgP18CWtf8X347Hxv/kWailakP9BTfnMHLY/qamvsLUpHyI3p
G3IG+r5cj95Bn6ATaHNaxPpNvjVqymflR+kY+RX6uZyH9pcb0ntpZTqNLnLv
eTQ7vrOvoPpQ/tl4f3wn/iqfGhfjehzgP8Fp1/4ez4K1ctt4btySX8U5fjgW
x/eUc+B7uQbS4Iz6TrUn8ZPcDg9jifoCtQcwQX4OaXFWfSl+xDIsx0J7cmKi
9Zq4B+fU/1CrgJ/lN1EMK9QXqeXCJLkW0sUZUf9T7Smsk9ujOG7LbXCeH4GV
9i2Wc2OyXDu+t3fUWb7G34u/+EY4yH+KHNb7yKlxwfW74rtjffyt1r7gO/AZ
+R78nfE++Im0hHqCf42vRS/IpelYuWlcK+elA+KeND19hk6P909Xud8SPg+q
xVmLXqHD5Jdonfiu9G25Lr0ul6Pfyun5v2MfDvEl1b/m+/IP8J/waXDRPXbT
p7HBWkfcb/0DORlKyknk12Mv/yVWx3eU82KKXDd6MN6d+h61Stgov4VHsCa+
uVo+TJXrRT/E86mvxU/4GeuwHhvifNj7IKbZ93y8X1xS3xtnH5vkTiiFjXGW
1PJjuvxC/A2xP/oPh/l+uGzfvnjH2Cx3RiZ/24fyXXhUThr9yv/Fj0Q++TP5
vrin61fQAphhrXD0ZsyD6Ae+C3+Df5z/js8U96RN8JzakXgfdJTcn8/Jfxrz
jaaNb0CnxOyiV9xrP18lelneEj1Av4zfi28uZ6Y95efp3dEvdBJtQUtbv4O2
lWvTv+XH6Dj5K/5BfiCfId6Fe62kD2GmtfrRr9a7yjfjPrjCv4yj/AD845oD
clX8IneJ38cW9VVqBTFLboAs+Ff9F/yK37A1/g/ELI/ZGXMIq11TCLPtb4is
+E/9YJx//Cp3RRnsVF+jVhhz5EbIFs8VMxPH+M9w1b5DcnX8Jr8Tz+Nv+0hO
jrLynXI7/hL/NfLLg+SM+CPOKC2CudaKWBsefRWzin+HvxX/G+JvjL7G8TiX
1kbzA/lcfF++Ab0n+oNOpa3pNb9/OL4xashbY3bRkfG+6bvxHujH8gs0Rcw5
Opm2pOWsJ6NvynXo5Xg/dLw8ii/AD+bvj7PEz6B/Rs/RophnT+OYo3Ev+XbM
vHjvfDOc4AfhumuOxDNim9wtzjnucl17tSv8aOyKXpYfxny5Scwb3FA/Gn2A
7fJ7KI/d0fdqxbBAfjn6AjfVj6nVxA65O57AnpgRasWxUH4l5rZn6CYnUJ7/
Pp6d5orvzzfHSX4wbrn+uFwLv8vv40nsjbmjVgKL5KbIjdsxM7AxZiEWqzVD
npjt2G9tk/ojWCI3j5keMxMnovewk++BCjhg/2a1Ulgqt4gZE3MHJ+Mbxpnj
P8BTOGj/lphN+FFuGb0bvY1TanXje/IfoiIORZ+plcYyuVWc5zjjOK1WD7v4
nngah6Mn1R7Dcrl1nJk4UzgTswW7+Y9QCUeif9XKYIX8Kh7CtZg7OMUPiXOB
s3FmsYf/GJVxt+/SQe0ffgyOxiyIPsRKuQ3S2/OenCTmSJy9OOs4zQ+N38C5
mLvYy/eK3ndNLzklnpGTyx35f/my/Df82HhWfgifKWYXP5O2occ8x//D03jr

               "]]}, 
             Annotation[#, "Charting`Private`Tag$335526#5"]& ]}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"Backward Integrate feedback solution\"", TraditionalForm],
          PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1c\"", "\"u1c\"", "\"x1c\"", "\"\[Theta]dot1c\"", 
           "\"xdot1c\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBmIQDQEf7DluRlrzpxg4QAUcGFAAh8PtnQvNXzToQsUF
0ORFHFzVV5+e26sFFZdAk5dx6L727MKtp+pQcQU0eSUH21ULr5wXUIWKq6DJ
qzn8WZNxvEBNESqugSav5cDZ6bJIZqo4VFwHTV4PjW+AxjdE4xuh8Y3hfACY
WiMI
          "]]}}, {{}, {}}},
      AspectRatio->NCache[
        Rational[1, 3], 0.3333333333333333],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->400,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 19}, {0, 16.390857419429295`}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.864135238134066*^9, 3.8641352749121633`*^9}, {
  3.864141785675068*^9, 3.864141806351376*^9}, {3.8641418573518705`*^9, 
  3.864141877509347*^9}, {3.8641430855573835`*^9, 3.864143092071275*^9}, {
  3.8642366967041645`*^9, 3.8642367176523905`*^9}, {3.864399155322939*^9, 
  3.864399158330961*^9}, {3.86440857096957*^9, 3.864408661724055*^9}},
 CellLabel->
  "Out[1987]=",ExpressionUUID->"a3f0d844-f0d0-49c6-9aec-9096bfdd98fd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.19443402919507904`", ",", 
   RowBox[{"-", "2.280340908712783`"}], ",", "2.155211345714832`", ",", 
   "2.155211345714832`"}], "}"}]], "Output",
 CellChangeTimes->{{3.864135238134066*^9, 3.8641352749121633`*^9}, {
  3.864141785675068*^9, 3.864141806351376*^9}, {3.8641418573518705`*^9, 
  3.864141877509347*^9}, {3.8641430855573835`*^9, 3.864143092071275*^9}, {
  3.8642366967041645`*^9, 3.8642367176523905`*^9}, {3.864399155322939*^9, 
  3.864399158330961*^9}, {3.86440857096957*^9, 3.864408661822021*^9}},
 CellLabel->
  "Out[1988]=",ExpressionUUID->"29395889-b45b-4a60-9609-ce27b11b116d"]
}, Open  ]],

Cell["\<\
Observations:
The choice of n is critical and would determine the speed of the algorithm. \
Smaller n has higher speed but may not converge and hence would require a lot \
of re initializations of the initial guess, while a larger n would not \
require a lot of re initializations but would take longer to converge. A way \
to choose the best value of n for a specific system would be extremely useful.
Furthermore we have been outputting the distance of the initial guess \
propogated to the other boundary and the desired value. We are doing this to \
design a stopping criterion. 
Another useful quantity to observe would be plot of this distance as the Find \
root algorithm progresses. (We want to see if it is monotonic)
\
\>", "Text",
 CellChangeTimes->{{3.863704362873541*^9, 3.8637045081791234`*^9}, {
  3.8638919339126487`*^9, 3.86389212755976*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"4eb81403-a99c-42b7-b4a4-36ec4bd675dd"],

Cell[CellGroupData[{

Cell["Constrained Control Fixed Time Case", "Section",
 CellChangeTimes->{{3.8644079255894756`*^9, 
  3.864407937402635*^9}},ExpressionUUID->"d0cd4743-bade-4381-98cd-\
015d59d84cb0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Remove", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
  RowBox[{"(*", 
   RowBox[{"ICs", " ", "-", " ", 
    RowBox[{"Initial", " ", "Conditions"}]}], " ", "*)"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Error", " ", "while", " ", "cosntraining", " ", "u"}], " ", 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"{", 
    RowBox[{
    "x_", ",", "xdot_", ",", "\[Theta]_", ",", "\[Theta]dot_", ",", 
     "\[Lambda]1_", ",", "\[Lambda]2_", ",", "\[Lambda]3_", ",", 
     "\[Lambda]4_", ",", "A_"}], "}"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "u", "}"}], ",", "\n", 
    RowBox[{
     RowBox[{"u", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"Subscript", "[", 
              RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}], "^", 
            "2"}]}]}], ")"}]}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], 
          RowBox[{"Cos", "[", 
           RowBox[{"Subscript", "[", 
            RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}]}], "-", 
         RowBox[{"Subscript", "[", 
          RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}]}], ")"}]}]}], ";", 
     "\n", 
     RowBox[{"{", "\n", "\t", 
      RowBox[{"xdot", ",", "\n", "\t", 
       RowBox[{
        RowBox[{"1", "/", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"A", " ", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"A", " ", 
           RowBox[{"\[Theta]dot", "^", "2"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Lambda]4", " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", "\[Lambda]2"}], 
            ")"}]}], "+", 
          RowBox[{"A", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", "\n", 
       "\t", "\[Theta]dot", ",", "\n", "\t", 
       RowBox[{
        RowBox[{"1", "/", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"A", " ", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
               ")"}]}], ")"}]}], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "\[Lambda]2"}], " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
             RowBox[{"\[Lambda]4", " ", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}],
           "-", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}], "-", 
          RowBox[{"A", " ", 
           RowBox[{"\[Theta]dot", "^", "2"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", "\n", 
       "\t", "0", ",", "\n", "\t", 
       RowBox[{"-", "\[Lambda]1"}], ",", "\n", "\t", 
       RowBox[{
        RowBox[{"2", "/", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"A", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A", "-", "2"}], 
           ")"}], "^", "3"}]}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"4", " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"A", " ", 
                 RowBox[{"\[Lambda]4", "^", "2"}], " ", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
                RowBox[{"4", " ", "A", " ", 
                 RowBox[{"\[Lambda]2", "^", "2"}]}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"A", "+", "2"}], ")"}], " ", 
                 RowBox[{"\[Lambda]4", "^", "2"}]}]}], ")"}]}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"A", " ", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "-", 
                RowBox[{"3", " ", "A"}], "+", "2"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"A", " ", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A", "-", 
                "2"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"A", " ", 
                 RowBox[{"\[Theta]dot", "^", "2"}], " ", "\[Lambda]2"}], "-", 
                "\[Lambda]4"}], ")"}]}]}], ")"}]}], "+", 
          RowBox[{"A", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"A", "-", "2"}], ")"}], " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A"}], ")"}], 
           " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"A", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A", "-", "2"}], 
            ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"\[Lambda]2", "-", 
             RowBox[{
              RowBox[{"\[Theta]dot", "^", "2"}], " ", "\[Lambda]4"}]}], 
            ")"}]}], "-", 
          RowBox[{"4", " ", "\[Lambda]2", " ", "\[Lambda]4", " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"3", " ", "A", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
             RowBox[{"3", " ", "A"}], "+", "2"}], ")"}]}]}], ")"}]}], ",", 
       "\n", "\t", 
       RowBox[{
        RowBox[{
         RowBox[{"4", " ", "/", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"A", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A", "-", "2"}], 
           ")"}]}], " ", 
         RowBox[{"(", 
          RowBox[{"A", " ", "\[Theta]dot", " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{"\[Lambda]2", "-", 
             RowBox[{"\[Lambda]4", " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}]}], ")"}]}], 
        "-", "\[Lambda]3"}]}], "\n", "}"}]}]}], "\n", "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ffCartPendulum", "[", 
    RowBox[{
    "ICs_", ",", "n_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "A_", ",", 
     "order_", ",", "maxIter_", ",", "InitGuess_"}], "]"}], ":=", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x", ",", "dist", ",", "xdot", ",", "f", ",", "\[Theta]", ",", 
       "\[Theta]dot", ",", "\[Lambda]1", ",", "\[Lambda]2", ",", "\[Lambda]3",
        ",", "\[Lambda]4", ",", "\[CapitalDelta]t", ",", "bcs", ",", "eqns", 
       ",", "sv", ",", "froot", ",", "xff", ",", "xdotff", ",", "xff0", ",", 
       "xdotff0", ",", "\[Theta]ff0", ",", "\[Theta]dotff0", ",", "uff0", ",",
        "\[Theta]ff", ",", "\[Theta]dotff", ",", "uff", ",", "\[Lambda]1ff0", 
       ",", "\[Lambda]2ff0", ",", "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", 
       "i", ",", "uMax", ",", "uMin", ",", "expr", ",", 
       RowBox[{"xGuess", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          SubscriptBox["xGuess", "i"], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}]}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"\[CapitalDelta]t", "=", 
       RowBox[{"\[Tau]", "/", "n"}]}], ";", "\n", 
      StyleBox["\[IndentingNewLine]",
       FontWeight->"Plain"], 
      RowBox[{
       StyleBox["xGuess",
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       StyleBox["=",
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       RowBox[{
        StyleBox["Table",
         FontWeight->"Plain"], 
        StyleBox["[",
         FontWeight->"Plain"], 
        RowBox[{
         RowBox[{
          StyleBox["If",
           FontWeight->"Plain"], 
          StyleBox["[",
           FontWeight->"Plain"], 
          RowBox[{
           StyleBox[
            RowBox[{"i", " ", "!=", " ", 
             RowBox[{"-", "1"}]}],
            FontWeight->"Plain"], 
           StyleBox[",",
            FontWeight->"Plain"], 
           RowBox[{
            StyleBox[
             SubscriptBox["xGuess", 
              RowBox[{"i", "+", "1"}]],
             FontWeight->"Plain"], 
            StyleBox[" ",
             FontWeight->"Plain"], 
            StyleBox["=",
             FontWeight->"Plain"], 
            StyleBox[" ",
             FontWeight->"Plain"], 
            RowBox[{
             SubscriptBox[
              StyleBox["xGuess",
               FontWeight->"Plain"], "i"], 
             StyleBox[" ",
              FontWeight->"Plain"], 
             StyleBox["+",
              FontWeight->"Plain"], 
             StyleBox[
              RowBox[{"\[CapitalDelta]t", "*", 
               RowBox[{"f", "[", 
                SubscriptBox["xGuess", "i"], "]"}]}],
              FontWeight->"Plain"]}]}], 
           StyleBox[",",
            FontWeight->"Plain"], 
           RowBox[{
            SubscriptBox[
             StyleBox["xGuess",
              FontWeight->"Plain"], "0"], " ", "=", " ", 
            RowBox[{"{", 
             StyleBox[
              RowBox[{
               RowBox[{"ICs", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "3", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "4", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "3", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "4", "]"}], "]"}]}],
              FontWeight->"Plain"], 
             StyleBox["}",
              FontWeight->"Plain"]}]}]}], 
          StyleBox["]",
           FontWeight->"Plain"]}], 
         StyleBox[",",
          FontWeight->"Plain"], 
         StyleBox[
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"-", "1"}], ",", 
            RowBox[{"n", "-", "1"}]}], "}"}],
          FontWeight->"Plain"]}], 
        StyleBox["]",
         FontWeight->"Plain"]}]}], 
      StyleBox[";",
       FontWeight->"Plain"], "\[IndentingNewLine]", 
      RowBox[{"bcs", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"x", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"xdot", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"x", ",", " ", "n"}], "]"}], "==", 
          RowBox[{"Subscript", "[", 
           RowBox[{"xdot", ",", " ", "n"}], "]"}], "==", "0"}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]dot", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]dot", ",", " ", "n"}], "]"}], "==", "0"}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]", ",", " ", "n"}], "]"}], "==", "\[Pi]"}]}], 
        "}"}]}], ";", "\n", 
      RowBox[{"eqns", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Join", "[", 
         RowBox[{"bcs", ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Thread", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], "==", 
              "\n", 
              RowBox[{
               RowBox[{
                RowBox[{"1", "/", "2"}], " ", "\[CapitalDelta]t", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"f", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}], "]"}], "+", 
                  "\n", 
                  RowBox[{"f", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], 
                   "]"}]}], ")"}]}], "+", "\n", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Subscript", "[", 
                  RowBox[{"x", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"xdot", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]dot", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]1", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]2", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]3", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]4", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}]}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
        "]"}]}], ";", "\n", 
      RowBox[{"sv", " ", "=", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", "\n", 
             "\t\t\t\t\t", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "7", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "8", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", "1"}], 
        "]"}]}], ";", " ", "\n", 
      RowBox[{"froot", "=", 
       RowBox[{"FindRoot", "[", 
        RowBox[{"eqns", ",", "sv", ",", 
         RowBox[{"MaxIterations", "->", "maxIter"}]}], "]"}]}], ";", "\n", 
      RowBox[{"xff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"xdotff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Theta]ff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Theta]dotff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]1ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]2ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]3ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]4ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"expr", " ", "=", " ", 
       RowBox[{
        RowBox[{"1", "/", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"A", " ", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"Subscript", "[", 
               RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}], "^", 
             "2"}]}]}], ")"}]}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], 
           RowBox[{"Cos", "[", 
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}]}], "-", 
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}]}], ")"}]}]}], ";", 
      "\n", "\n", 
      RowBox[{"uMax", " ", "=", " ", "2"}], ";", "\n", 
      RowBox[{"uMin", " ", "=", " ", 
       RowBox[{"-", "2"}]}], ";", "\n", 
      RowBox[{"uff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Piecewise", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"expr", ",", 
                 RowBox[{
                 "uMin", " ", "<=", " ", "expr", " ", "<=", " ", "uMax"}]}], 
                "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"uMin", ",", 
                 RowBox[{"expr", " ", "<", "uMin"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"uMax", ",", 
                 RowBox[{"expr", " ", ">", " ", "uMax"}]}], "}"}]}], "}"}], 
             "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      "\n", 
      RowBox[{
       RowBox[{"xff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xdotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "\[Pi]"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"uff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"uff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", "\n", 
      RowBox[{"{", 
       RowBox[{
       "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
        "uff", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
        "\[Lambda]3ff0", ",", "\[Lambda]4ff0"}], "}"}]}]}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"testSwingUp", "[", 
    RowBox[{
    "ICs_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "uff0_", ",", "A_"}], "]"}],
    ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eq", ",", "init", ",", "x", ",", "xdot", ",", "\[Theta]", ",", 
       "\[Theta]dot", ",", "xs", ",", "xdots", ",", "\[Theta]s", ",", 
       "\[Theta]dots", ",", "t", ",", "J"}], "}"}], ",", "\n", 
     RowBox[{
      RowBox[{"eq", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"x", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"xdot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"xdot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"uff0", "[", "t", "]"}], "+", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
             RowBox[{"A", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]dot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"uff0", "[", "t", "]"}], "+", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
            ")"}]}]}]}], "}"}]}], ";", "\n", 
      RowBox[{"init", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"xdot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]dot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
        "}"}], "=", 
       RowBox[{"NDSolveValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"eq", ",", "init"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
         RowBox[{"Method", "->", 
          RowBox[{"{", 
           RowBox[{"\"\<DiscontinuityProcessing\>\"", "->", "None"}], 
           "}"}]}]}], "]"}]}], ";", "\n", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"{", 
       RowBox[{
       "xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots", ",", "uff0",
         ",", "J"}], "}"}]}]}], "]"}]}], "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{"CalculateSMatrix", "[", 
   RowBox[{
   "x1a_", ",", "xdot1a_", ",", "\[Theta]1a_", ",", "\[Theta]dot1a_", ",", 
    "u1a_", ",", "\[Tau]_", ",", "A_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x", ",", "L", ",", "RHS", ",", "xdot", ",", "\[Theta]", ",", 
      "\[Theta]dot", ",", "u", ",", "K", ",", "S", ",", "soltn", ",", "Af", 
      ",", "Bf", ",", "Q", ",", "fx", ",", "xState", ",", "R", ",", "Mf", ",",
       "x2dot", ",", "\[Theta]2dot", ",", "S0", ",", "sol2", ",", "t"}], 
     "}"}], ",", "\n", "\n", 
    RowBox[{
     RowBox[{"xState", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
       "}"}]}], ";", "\n", 
     RowBox[{"x2dot", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{"u", "+", 
         RowBox[{"A", " ", 
          RowBox[{"\[Theta]dot", "^", "2"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"A", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ";", "\n", 
     RowBox[{"\[Theta]2dot", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{"u", "+", 
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ")"}]}]}], 
     ";", "\n", 
     RowBox[{"fx", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
       "xdot", ",", "x2dot", ",", "\[Theta]dot", ",", "\[Theta]2dot"}], 
       "}"}]}], ";", "\n", 
     RowBox[{"L", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", "2"}], "*", 
       RowBox[{"u", "^", "2"}]}]}], ";", "\n", 
     RowBox[{"Af", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{"fx", ",", "xState"}], "]"}]}], ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{"For", " ", "nD", " ", "stuff", " ", "use", " ", "Grad"}], 
      "*)"}], "\n", 
     RowBox[{"Bf", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"fx", ",", "u"}], "]"}]}], " ", ";", 
     RowBox[{"(*", 
      RowBox[{"For", " ", "1", "D", " ", "stuff", " ", "use", " ", "D"}], 
      "*)"}], "\n", 
     RowBox[{"Q", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{
        RowBox[{"Grad", "[", 
         RowBox[{"L", ",", "xState"}], "]"}], ",", "xState"}], "]"}]}], ";", 
     " ", 
     RowBox[{"(*", " ", 
      RowBox[{"Fix", " ", "this"}], " ", "*)"}], "\n", 
     RowBox[{"Q", " ", "=", " ", 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"1", "0", "0", "0"},
         {"0", "1", "0", "0"},
         {"0", "0", "1", "0"},
         {"0", "0", "0", "1"}
        },
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}}], "\[NoBreak]", ")"}]}], ";", "\n", 
     RowBox[{"Mf", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{"L", ",", "u"}], "]"}], ",", "xState"}], "]"}]}], ";", "\n", 
     RowBox[{"R", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"L", ",", 
        RowBox[{"{", 
         RowBox[{"u", ",", "2"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"S0", " ", "=", " ", 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]]}], ";", "\n", 
     RowBox[{
      RowBox[{"RHS", "[", "t_", "]"}], " ", ":=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"IdentityMatrix", "[", "4", "]"}], " ", "+", " ", 
         RowBox[{
          RowBox[{"Af", "\[Transpose]"}], ".", 
          RowBox[{"S", "[", "t", "]"}]}], " ", "+", " ", 
         RowBox[{
          RowBox[{"S", "[", "t", "]"}], ".", "Af"}], " ", "-", " ", 
         RowBox[{"KroneckerProduct", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"S", "[", "t", "]"}], ".", "Bf"}], ",", 
           RowBox[{
            RowBox[{"Bf", "\[Transpose]"}], ".", 
            RowBox[{"S", "[", "t", "]"}]}]}], "]"}]}], ")"}], " ", "/.", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "->", " ", 
          RowBox[{"x1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"xdot", " ", "->", " ", 
          RowBox[{"xdot1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"\[Theta]", " ", "->", 
          RowBox[{"\[Theta]1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"\[Theta]dot", " ", "->", " ", 
          RowBox[{"\[Theta]dot1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"u", " ", "->", " ", 
          RowBox[{"u1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}]}], "}"}]}]}], ";", 
     "\n", 
     RowBox[{"sol2", " ", "=", " ", 
      RowBox[{"S", " ", "/.", " ", 
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"S", "'"}], "[", "t", "]"}], "==", " ", 
            RowBox[{"RHS", "[", "t", "]"}]}], ",", 
           RowBox[{
            RowBox[{"S", "[", "0", "]"}], "==", "S0"}]}], "}"}], ",", "S", 
         ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], " ", "}"}]}], "]"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"S", " ", "=", " ", 
      RowBox[{"sol2", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}]}], "\n", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CalculateGains", "[", 
   RowBox[{
   "x1a_", ",", "xdot1a_", ",", "\[Theta]1a_", ",", "\[Theta]dot1a_", ",", 
    "u1a_", ",", "time_", ",", "A_", ",", "\[Tau]_", ",", "S_"}], "]"}], ":=",
   " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x", ",", "L", ",", "RHS", ",", "xdot", ",", "\[Theta]", ",", 
      "\[Theta]dot", ",", "u", ",", "K", ",", "Af", ",", "Bf", ",", "Q", ",", 
      "fx", ",", "xState", ",", "R", ",", "Mf", ",", "x2dot", ",", 
      "\[Theta]2dot", ",", "S0", ",", "sol2", ",", "t"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"xState", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
       "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"x2dot", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{"u", "+", 
         RowBox[{"A", " ", 
          RowBox[{"\[Theta]dot", "^", "2"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"A", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Theta]2dot", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{"u", "+", 
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ")"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"fx", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
       "xdot", ",", "x2dot", ",", "\[Theta]dot", ",", "\[Theta]2dot"}], 
       "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Bf", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"fx", ",", "u"}], "]"}]}], " ", ";", 
     RowBox[{"(*", 
      RowBox[{"For", " ", "1", "D", " ", "stuff", " ", "use", " ", "D"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"K", " ", "=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Bf", "\[Transpose]"}], ".", 
         RowBox[{"S", "[", 
          RowBox[{"\[Tau]", " ", "-", " ", "time"}], "]"}]}], ")"}], "/.", 
       " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "->", " ", 
          RowBox[{"x1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"xdot", " ", "->", " ", 
          RowBox[{"xdot1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"\[Theta]", " ", "->", 
          RowBox[{"\[Theta]1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"\[Theta]dot", " ", "->", " ", 
          RowBox[{"\[Theta]dot1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"u", " ", "->", " ", 
          RowBox[{"u1a", "[", "time", "]"}]}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", "K"}]}], "\n", "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"testWithFB", "[", 
    RowBox[{
    "ICs_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "xff0_", ",", "xdotff0_", 
     ",", "\[Theta]ff0_", ",", "\[Theta]dotff0_", ",", "uff0_", ",", "A_"}], 
    "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eq", ",", "init", ",", "\[Theta]", ",", "\[Theta]dot", ",", 
       "\[Theta]ff", ",", "\[Theta]dotff", ",", "x", ",", "xdot", ",", "xff", 
       ",", "xdotff", ",", "uff", ",", "t", ",", "\[Kappa]1", ",", 
       "\[Kappa]2", ",", "\[Kappa]3", ",", "\[Kappa]4", ",", "ufb", ",", "u", 
       ",", "\[Theta]s", ",", "\[Theta]dots", ",", "xs", ",", "xdots", ",", 
       "us", ",", "J", ",", "S", ",", "K"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Kappa]1", "=", 
       RowBox[{"\[Kappa]2", "=", "3"}]}], ";", "  ", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"lqr", " ", "for", " ", "q"}], "=", 
        RowBox[{"r", " ", "for", " ", "balancing", " ", "pendulum"}]}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"\[Kappa]3", " ", "=", " ", 
       RowBox[{"-", "0.1"}]}], ";", 
      RowBox[{"\[Kappa]4", " ", "=", " ", 
       RowBox[{"-", "0.65"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"xff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xdotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "\[Pi]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"uff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"uff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"S", " ", "=", " ", 
       RowBox[{"CalculateSMatrix", "[", 
        RowBox[{
        "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
         "uff", ",", "\[Tau]", ",", "A"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"K", "[", "t_", "]"}], " ", ":=", " ", 
       RowBox[{"CalculateGains", "[", 
        RowBox[{
        "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
         "uff", ",", "t", ",", "A", ",", "\[Tau]", ",", "S"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ufb", "[", "t_", "]"}], " ", ":=", " ", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"K", "[", "t", "]"}], ".", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"xff", "[", "t", "]"}], "-", 
                RowBox[{"x", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"xdotff", "[", "t", "]"}], "-", 
                RowBox[{"xdot", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]dot", "[", "t", "]"}]}]}], "}"}]}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         RowBox[{
          RowBox[{"\[Kappa]1", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]3", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"xff", "[", "t", "]"}], "-", 
             RowBox[{"x", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"xdotff", "[", "t", "]"}], "-", 
             RowBox[{"xdot", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"u", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{"uff", "[", "t", "]"}], "+", 
        RowBox[{"ufb", "[", "t", "]"}]}]}], ";", "\n", "\n", 
      RowBox[{"eq", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"x", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"xdot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"xdot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"u", "[", "t", "]"}], "+", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
             RowBox[{"A", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]dot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"u", "[", "t", "]"}], "+", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
            ")"}]}]}]}], "}"}]}], ";", "\n", "\n", 
      RowBox[{"init", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"xdot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]dot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}], ";", "\n", "\n", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
        "}"}], "=", 
       RowBox[{"NDSolveValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"eq", ",", "init"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
         RowBox[{"Method", "->", 
          RowBox[{"{", 
           RowBox[{"\"\<DiscontinuityProcessing\>\"", "->", "None"}], 
           "}"}]}]}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"us", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{"uff", "[", "t", "]"}], "+", 
        RowBox[{"Piecewise", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"K", "[", "t", "]"}], ".", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"xff", "[", "t", "]"}], "-", 
                 RowBox[{"xs", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"xdotff", "[", "t", "]"}], "-", 
                 RowBox[{"xdots", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                 RowBox[{"\[Theta]s", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                 RowBox[{"\[Theta]dots", "[", "t", "]"}]}]}], "}"}]}], ",", 
             RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
          RowBox[{
           RowBox[{"\[Kappa]1", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]s", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]dots", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]3", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"xff", "[", "t", "]"}], "-", 
              RowBox[{"xs", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]4", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"xdotff", "[", "t", "]"}], "-", 
              RowBox[{"xdots", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"us", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"{", 
       RowBox[{
       "xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots", ",", "us", 
        ",", "J"}], "}"}]}]}], "]"}]}], "\n"}], "\n"}], "Code",
 CellChangeTimes->{{3.862753343189165*^9, 3.862753411389415*^9}, {
   3.8627553611496043`*^9, 3.8627553647834463`*^9}, {3.862755542386807*^9, 
   3.862755582254092*^9}, {3.862756179429644*^9, 3.8627562078485813`*^9}, 
   3.8627563320549693`*^9, {3.8627564690202875`*^9, 3.8627565488258357`*^9}, {
   3.8627568793814173`*^9, 3.8627568873778677`*^9}, 3.8627585165043135`*^9, {
   3.8627585965107956`*^9, 3.862758689290209*^9}, {3.862758834699833*^9, 
   3.8627588555911727`*^9}, {3.8627590963373947`*^9, 
   3.8627590998392787`*^9}, {3.8627594410134716`*^9, 
   3.8627594626865597`*^9}, {3.862759635094576*^9, 3.8627596377257366`*^9}, {
   3.862759669455618*^9, 3.8627597448635693`*^9}, 3.862759795914287*^9, {
   3.8627603319473376`*^9, 3.862760490473783*^9}, {3.8627605307139487`*^9, 
   3.862760536806006*^9}, {3.8627610047197795`*^9, 3.8627610478400292`*^9}, {
   3.8627611285982723`*^9, 3.862761147921111*^9}, {3.8631982964294224`*^9, 
   3.8631982970332265`*^9}, 3.8631983363504767`*^9, {3.863208693665881*^9, 
   3.8632086943846474`*^9}, 3.863210007245922*^9, 3.863271804426487*^9, {
   3.8632718412836447`*^9, 3.8632718583741503`*^9}, {3.8632719591337743`*^9, 
   3.863271959351703*^9}, {3.863272049174841*^9, 3.863272070205083*^9}, {
   3.863272113471178*^9, 3.863272123024109*^9}, 3.8632747752128673`*^9, {
   3.863274857845314*^9, 3.863274901443305*^9}, 3.863274985905165*^9, {
   3.86327502591031*^9, 3.8632751590365314`*^9}, {3.8632751952308993`*^9, 
   3.863275233662552*^9}, {3.8632753992893295`*^9, 3.863275415841012*^9}, 
   3.8632757933676972`*^9, 3.863276112914017*^9, {3.8632763683199444`*^9, 
   3.8632763983313017`*^9}, {3.8632764721665745`*^9, 3.863276525061578*^9}, {
   3.863278235705888*^9, 3.8632782777863655`*^9}, {3.863278324944213*^9, 
   3.8632783286160316`*^9}, {3.863552728717914*^9, 3.8635527298355513`*^9}, {
   3.863613419658352*^9, 3.863613423534114*^9}, {3.8636150904008484`*^9, 
   3.86361513154671*^9}, {3.8636152078133564`*^9, 3.8636152525520706`*^9}, {
   3.8636152893383236`*^9, 3.863615479516596*^9}, 3.8636157247782784`*^9, {
   3.863615879717803*^9, 3.8636159617646036`*^9}, {3.8636160220243616`*^9, 
   3.8636160299278383`*^9}, {3.863616069486206*^9, 3.86361607601912*^9}, {
   3.863699007217822*^9, 3.8636991515617003`*^9}, {3.8636996033223495`*^9, 
   3.8636996129842625`*^9}, {3.8636997844214835`*^9, 3.863699805489752*^9}, {
   3.863699907217247*^9, 3.863699944316393*^9}, {3.863700788168758*^9, 
   3.8637008845809517`*^9}, {3.863702046275758*^9, 3.8637020830100203`*^9}, {
   3.863702595245346*^9, 3.863702645292355*^9}, {3.863884194660141*^9, 
   3.8638842031804175`*^9}, {3.8638909914788537`*^9, 3.863891009810995*^9}, {
   3.863891113237941*^9, 3.8638911537729845`*^9}, {3.863891279619763*^9, 
   3.8638912855948534`*^9}, {3.863891344230113*^9, 3.863891351574766*^9}, {
   3.8638925953132634`*^9, 3.8638925989880886`*^9}, 3.8641412354391413`*^9, {
   3.864141550931038*^9, 3.8641416655529428`*^9}, {3.8642361939817247`*^9, 
   3.864236202546955*^9}, {3.864236595072028*^9, 3.8642366322340117`*^9}, 
   3.864236674617306*^9, {3.8643997929515553`*^9, 3.864399794341104*^9}, {
   3.8644080419266376`*^9, 3.8644080880716295`*^9}, {3.8644081383982606`*^9, 
   3.8644081392199936`*^9}, 3.8644081944530296`*^9, {3.8644090722745247`*^9, 
   3.8644090926229067`*^9}},
 FontWeight->"Plain",ExpressionUUID->"c0c6a652-079e-47f0-8b2c-5267e8fb41ff"]
}, Open  ]]
},
WindowSize->{1440., 747.75},
WindowMargins->{{-6, Automatic}, {Automatic, -6}},
Magnification:>0.9 Inherited,
FrontEndVersion->"13.0 for Microsoft Windows (64-bit) (February 4, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"f891f112-c914-4bf5-b27c-d7c0d8607b34"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 60256, 1504, 1802, "Code",ExpressionUUID->"b098c715-9c30-421d-bfce-eae26b7e4e91"],
Cell[60817, 1526, 354, 7, 66, "Text",ExpressionUUID->"9be2365f-c4bb-4396-8de9-0c9df9f460d6"],
Cell[CellGroupData[{
Cell[61196, 1537, 8156, 225, 249, "Input",ExpressionUUID->"53d64360-9130-4d93-aa11-669324ba78f7"],
Cell[69355, 1764, 41894, 778, 185, "Output",ExpressionUUID->"97c49807-b8d9-4e9c-995e-a5aee0d9dee6"],
Cell[111252, 2544, 47483, 867, 186, "Output",ExpressionUUID->"30b2ca15-64f3-40ec-ac74-6d5d02e904a0"],
Cell[158738, 3413, 47943, 880, 210, "Output",ExpressionUUID->"7b6282cd-6ecc-40d9-a228-1aa03d64f44b"]
}, Open  ]],
Cell[206696, 4296, 258, 5, 45, "Text",ExpressionUUID->"b6d5a503-f5ca-471f-9280-ef8cf6caad0d"],
Cell[206957, 4303, 29565, 752, 764, "Input",ExpressionUUID->"af3ea33d-8e3a-4566-b4c0-08bbf9c4fe8b"],
Cell[CellGroupData[{
Cell[236547, 5059, 11471, 323, 489, "Input",ExpressionUUID->"3024c605-13d1-4af1-8ddb-6b0488dd66d7"],
Cell[248021, 5384, 567, 12, 28, "Output",ExpressionUUID->"7e3ac001-d56e-48d7-b974-eee191ed592f"],
Cell[248591, 5398, 184803, 3315, 361, "Output",ExpressionUUID->"5aa2d4ef-7821-47e2-a8cd-a3de64bd8204"],
Cell[433397, 8715, 587, 12, 28, "Output",ExpressionUUID->"f8509359-eea7-446a-8df0-dd04a04b2e77"]
}, Open  ]],
Cell[433999, 8730, 179, 3, 25, "Input",ExpressionUUID->"e3b56381-3091-428c-953b-8049828b4235"],
Cell[434181, 8735, 203, 3, 45, "Text",ExpressionUUID->"78f72274-21f2-4a3e-a828-5906a5fe2643"],
Cell[CellGroupData[{
Cell[434409, 8742, 9978, 272, 301, "Input",ExpressionUUID->"b5dee5c3-2101-40ff-b338-91333f517d06"],
Cell[444390, 9016, 1055, 19, 26, "Message",ExpressionUUID->"5697606a-50aa-43ef-8682-a9939e181bc4"],
Cell[445448, 9037, 280626, 4904, 361, "Output",ExpressionUUID->"a3f0d844-f0d0-49c6-9aec-9096bfdd98fd"],
Cell[726077, 13943, 633, 11, 28, "Output",ExpressionUUID->"29395889-b45b-4a60-9609-ce27b11b116d"]
}, Open  ]],
Cell[726725, 13957, 965, 17, 149, "Text",ExpressionUUID->"4eb81403-a99c-42b7-b4a4-36ec4bd675dd"],
Cell[CellGroupData[{
Cell[727715, 13978, 182, 3, 59, "Section",ExpressionUUID->"d0cd4743-bade-4381-98cd-015d59d84cb0"],
Cell[727900, 13983, 60949, 1531, 1865, "Code",ExpressionUUID->"c0c6a652-079e-47f0-8b2c-5267e8fb41ff"]
}, Open  ]]
}
]
*)

