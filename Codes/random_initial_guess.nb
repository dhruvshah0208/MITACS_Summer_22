(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    737765,      14183]
NotebookOptionsPosition[    735491,      14144]
NotebookOutlinePosition[    735927,      14161]
CellTagsIndexPosition[    735884,      14158]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Remove", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
  RowBox[{"(*", 
   RowBox[{"ICs", " ", "-", " ", 
    RowBox[{"Initial", " ", "Conditions"}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ffCartPendulum", "[", 
    RowBox[{
    "ICs_", ",", "n_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "A_", ",", 
     "order_", ",", "maxIter_", ",", "InitGuess_"}], "]"}], ":=", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x", ",", "dist", ",", "xdot", ",", "f", ",", "\[Theta]", ",", 
       "\[Theta]dot", ",", "\[Lambda]1", ",", "\[Lambda]2", ",", "\[Lambda]3",
        ",", "\[Lambda]4", ",", "\[CapitalDelta]t", ",", "bcs", ",", "eqns", 
       ",", "sv", ",", "froot", ",", "xff", ",", "xdotff", ",", "xff0", ",", 
       "xdotff0", ",", "\[Theta]ff0", ",", "\[Theta]dotff0", ",", "uff0", ",",
        "\[Theta]ff", ",", "\[Theta]dotff", ",", "uff", ",", "\[Lambda]1ff0", 
       ",", "\[Lambda]2ff0", ",", "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", 
       "uMax", ",", "uMin", ",", "expr", ",", 
       RowBox[{"xGuess", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          SubscriptBox["xGuess", "i"], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}]}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"\[CapitalDelta]t", "=", 
       RowBox[{"\[Tau]", "/", "n"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"{", 
         RowBox[{
         "x_", ",", "xdot_", ",", "\[Theta]_", ",", "\[Theta]dot_", ",", 
          "\[Lambda]1_", ",", "\[Lambda]2_", ",", "\[Lambda]3_", ",", 
          "\[Lambda]4_"}], "}"}], "]"}], ":=", 
       RowBox[{"{", "\n", "\t", 
        RowBox[{"xdot", ",", "\n", "\t", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}],
           " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
               ")"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", "\[Lambda]2"}], 
              ")"}]}], "+", 
            RowBox[{"A", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", "\n", 
         "\t", "\[Theta]dot", ",", "\n", "\t", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}],
           " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{"1", "/", 
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"A", " ", 
                   RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
                 ")"}]}], ")"}]}], 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[Lambda]2"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
              ")"}]}], "-", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "-", 
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", "\n", 
         "\t", "0", ",", "\n", "\t", 
         RowBox[{"-", "\[Lambda]1"}], ",", "\n", "\t", 
         RowBox[{
          RowBox[{"2", "/", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"A", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A", "-", "2"}],
              ")"}], "^", "3"}]}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"4", " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"A", " ", 
                   RowBox[{"\[Lambda]4", "^", "2"}], " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
                  RowBox[{"4", " ", "A", " ", 
                   RowBox[{"\[Lambda]2", "^", "2"}]}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"A", "+", "2"}], ")"}], " ", 
                   RowBox[{"\[Lambda]4", "^", "2"}]}]}], ")"}]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"A", " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "-", 
                  RowBox[{"3", " ", "A"}], "+", "2"}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"A", " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A", "-", 
                  "2"}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"A", " ", 
                   RowBox[{"\[Theta]dot", "^", "2"}], " ", "\[Lambda]2"}], 
                  "-", "\[Lambda]4"}], ")"}]}]}], ")"}]}], "+", 
            RowBox[{"A", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"A", "-", "2"}], ")"}], " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A"}], ")"}], 
             " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"A", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A", "-", 
               "2"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{
                RowBox[{"\[Theta]dot", "^", "2"}], " ", "\[Lambda]4"}]}], 
              ")"}]}], "-", 
            RowBox[{"4", " ", "\[Lambda]2", " ", "\[Lambda]4", " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"3", " ", "A", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
               RowBox[{"3", " ", "A"}], "+", "2"}], ")"}]}]}], ")"}]}], ",", 
         "\n", "\t", 
         RowBox[{
          RowBox[{
           RowBox[{"4", " ", "/", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"A", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A", "-", "2"}],
              ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{"A", " ", "\[Theta]dot", " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}]}], ")"}]}], 
          "-", "\[Lambda]3"}]}], "\n", "}"}]}], ";", "\n", 
      RowBox[{
       SubscriptBox[
        StyleBox[
         RowBox[{"x", 
          StyleBox["Guess",
           FontWeight->"Plain"]}]], "0"], 
       StyleBox["=",
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       StyleBox[
        RowBox[{"{", 
         RowBox[{
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}], ",", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}], ",", 
          RowBox[{"InitGuess", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"InitGuess", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"InitGuess", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"InitGuess", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "}"}],
        FontWeight->"Plain"]}], 
      StyleBox[";",
       FontWeight->"Plain"], 
      StyleBox["\[IndentingNewLine]",
       FontWeight->"Plain"], 
      RowBox[{
       StyleBox["xGuess",
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       StyleBox["=",
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       RowBox[{
        StyleBox["Table",
         FontWeight->"Plain"], 
        StyleBox["[",
         FontWeight->"Plain"], 
        RowBox[{
         RowBox[{
          StyleBox["If",
           FontWeight->"Plain"], 
          StyleBox["[",
           FontWeight->"Plain"], 
          RowBox[{
           StyleBox[
            RowBox[{"i", " ", "!=", " ", 
             RowBox[{"-", "1"}]}],
            FontWeight->"Plain"], 
           StyleBox[",",
            FontWeight->"Plain"], 
           StyleBox[
            RowBox[{
             SubscriptBox["xGuess", 
              RowBox[{"i", "+", "1"}]], " ", "=", " ", 
             RowBox[{
              SubscriptBox[
               StyleBox[
                RowBox[{"x", 
                 StyleBox["Guess",
                  FontWeight->"Plain"]}]], "i"], " ", "+", 
              RowBox[{"\[CapitalDelta]t", "*", 
               RowBox[{"f", "[", 
                SubscriptBox["xGuess", "i"], "]"}]}]}]}],
            FontWeight->"Plain"], 
           StyleBox[",",
            FontWeight->"Plain"], 
           RowBox[{
            SubscriptBox[
             StyleBox["xGuess",
              FontWeight->"Plain"], "0"], " ", "=", " ", 
            RowBox[{"{", 
             StyleBox[
              RowBox[{
               RowBox[{"ICs", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "3", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "4", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "3", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "4", "]"}], "]"}]}],
              FontWeight->"Plain"], 
             StyleBox["}",
              FontWeight->"Plain"]}]}]}], 
          StyleBox["]",
           FontWeight->"Plain"]}], 
         StyleBox[",",
          FontWeight->"Plain"], 
         StyleBox[
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"-", "1"}], ",", 
            RowBox[{"n", "-", "1"}]}], "}"}],
          FontWeight->"Plain"]}], 
        StyleBox["]",
         FontWeight->"Plain"]}]}], 
      StyleBox[";",
       FontWeight->"Plain"], "\[IndentingNewLine]", 
      RowBox[{"bcs", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"x", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"xdot", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"x", ",", " ", "n"}], "]"}], "==", 
          RowBox[{"Subscript", "[", 
           RowBox[{"xdot", ",", " ", "n"}], "]"}], "==", "0"}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]dot", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]dot", ",", " ", "n"}], "]"}], "==", "0"}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]", ",", " ", "n"}], "]"}], "==", "\[Pi]"}]}], 
        "}"}]}], ";", "\n", 
      RowBox[{"eqns", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Join", "[", 
         RowBox[{"bcs", ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Thread", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], "==", 
              "\n", 
              RowBox[{
               RowBox[{
                RowBox[{"1", "/", "2"}], " ", "\[CapitalDelta]t", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"f", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}], "]"}], "+", 
                  "\n", 
                  RowBox[{"f", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], 
                   "]"}]}], ")"}]}], "+", "\n", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Subscript", "[", 
                  RowBox[{"x", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"xdot", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]dot", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]1", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]2", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]3", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]4", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}]}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
        "]"}]}], ";", "\n", 
      RowBox[{"sv", " ", "=", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", "\n", 
             "\t\t\t\t\t", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "7", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "8", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", "1"}], 
        "]"}]}], ";", " ", "\n", 
      RowBox[{"froot", "=", 
       RowBox[{"FindRoot", "[", 
        RowBox[{"eqns", ",", "sv", ",", 
         RowBox[{"MaxIterations", "->", "maxIter"}]}], "]"}]}], ";", "\n", 
      RowBox[{"xff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"xdotff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Theta]ff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Theta]dotff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]1ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]2ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]3ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]4ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"expr", " ", "=", " ", 
       RowBox[{
        RowBox[{"1", "/", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"A", " ", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"Subscript", "[", 
               RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}], "^", 
             "2"}]}]}], ")"}]}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], 
           RowBox[{"Cos", "[", 
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}]}], "-", 
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}]}], ")"}]}]}], ";", 
      "\n", "\n", 
      RowBox[{"uMax", " ", "=", " ", "2"}], ";", "\n", 
      RowBox[{"uMin", " ", "=", " ", 
       RowBox[{"-", "2"}]}], ";", "\n", 
      RowBox[{"uff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Piecewise", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"expr", ",", 
                 RowBox[{
                 "uMin", " ", "<=", " ", "expr", " ", "<=", " ", "uMax"}]}], 
                "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"uMin", ",", 
                 RowBox[{"expr", " ", "<", "uMin"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"uMax", ",", 
                 RowBox[{"expr", " ", ">", " ", "uMax"}]}], "}"}]}], "}"}], 
             "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      "\n", 
      RowBox[{
       RowBox[{"xff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xdotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "\[Pi]"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"uff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"uff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", "\n", 
      RowBox[{"{", 
       RowBox[{
       "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
        "uff", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
        "\[Lambda]3ff0", ",", "\[Lambda]4ff0"}], "}"}]}]}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"testSwingUp", "[", 
    RowBox[{
    "ICs_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "uff0_", ",", "A_"}], "]"}],
    ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eq", ",", "init", ",", "x", ",", "xdot", ",", "\[Theta]", ",", 
       "\[Theta]dot", ",", "xs", ",", "xdots", ",", "\[Theta]s", ",", 
       "\[Theta]dots", ",", "t", ",", "J"}], "}"}], ",", "\n", 
     RowBox[{
      RowBox[{"eq", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"x", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"xdot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"xdot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"uff0", "[", "t", "]"}], "+", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
             RowBox[{"A", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]dot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"uff0", "[", "t", "]"}], "+", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
            ")"}]}]}]}], "}"}]}], ";", "\n", 
      RowBox[{"init", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"xdot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]dot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
        "}"}], "=", 
       RowBox[{"NDSolveValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"eq", ",", "init"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
         RowBox[{"Method", "->", 
          RowBox[{"{", 
           RowBox[{"\"\<DiscontinuityProcessing\>\"", "->", "None"}], 
           "}"}]}]}], "]"}]}], ";", "\n", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"{", 
       RowBox[{
       "xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots", ",", "uff0",
         ",", "J"}], "}"}]}]}], "]"}]}], "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{"CalculateSMatrix", "[", 
   RowBox[{
   "x1a_", ",", "xdot1a_", ",", "\[Theta]1a_", ",", "\[Theta]dot1a_", ",", 
    "u1a_", ",", "\[Tau]_", ",", "A_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x", ",", "L", ",", "RHS", ",", "xdot", ",", "\[Theta]", ",", 
      "\[Theta]dot", ",", "u", ",", "K", ",", "S", ",", "soltn", ",", "Af", 
      ",", "Bf", ",", "Q", ",", "fx", ",", "xState", ",", "R", ",", "Mf", ",",
       "x2dot", ",", "\[Theta]2dot", ",", "S0", ",", "sol2", ",", "t"}], 
     "}"}], ",", "\n", "\n", 
    RowBox[{
     RowBox[{"xState", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
       "}"}]}], ";", "\n", 
     RowBox[{"x2dot", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{"u", "+", 
         RowBox[{"A", " ", 
          RowBox[{"\[Theta]dot", "^", "2"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"A", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ";", "\n", 
     RowBox[{"\[Theta]2dot", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{"u", "+", 
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ")"}]}]}], 
     ";", "\n", 
     RowBox[{"fx", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
       "xdot", ",", "x2dot", ",", "\[Theta]dot", ",", "\[Theta]2dot"}], 
       "}"}]}], ";", "\n", 
     RowBox[{"L", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", "2"}], "*", 
       RowBox[{"u", "^", "2"}]}]}], ";", "\n", 
     RowBox[{"Af", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{"fx", ",", "xState"}], "]"}]}], ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{"For", " ", "nD", " ", "stuff", " ", "use", " ", "Grad"}], 
      "*)"}], "\n", 
     RowBox[{"Bf", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"fx", ",", "u"}], "]"}]}], " ", ";", 
     RowBox[{"(*", 
      RowBox[{"For", " ", "1", "D", " ", "stuff", " ", "use", " ", "D"}], 
      "*)"}], "\n", 
     RowBox[{"Q", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{
        RowBox[{"Grad", "[", 
         RowBox[{"L", ",", "xState"}], "]"}], ",", "xState"}], "]"}]}], ";", 
     " ", 
     RowBox[{"(*", " ", 
      RowBox[{"Fix", " ", "this"}], " ", "*)"}], "\n", 
     RowBox[{"Q", " ", "=", " ", 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"1", "0", "0", "0"},
         {"0", "1", "0", "0"},
         {"0", "0", "1", "0"},
         {"0", "0", "0", "1"}
        },
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}}], "\[NoBreak]", ")"}]}], ";", "\n", 
     RowBox[{"Mf", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{"L", ",", "u"}], "]"}], ",", "xState"}], "]"}]}], ";", "\n", 
     RowBox[{"R", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"L", ",", 
        RowBox[{"{", 
         RowBox[{"u", ",", "2"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"S0", " ", "=", " ", 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]]}], ";", "\n", 
     RowBox[{
      RowBox[{"RHS", "[", "t_", "]"}], " ", ":=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"IdentityMatrix", "[", "4", "]"}], " ", "+", " ", 
         RowBox[{
          RowBox[{"Af", "\[Transpose]"}], ".", 
          RowBox[{"S", "[", "t", "]"}]}], " ", "+", " ", 
         RowBox[{
          RowBox[{"S", "[", "t", "]"}], ".", "Af"}], " ", "-", " ", 
         RowBox[{"KroneckerProduct", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"S", "[", "t", "]"}], ".", "Bf"}], ",", 
           RowBox[{
            RowBox[{"Bf", "\[Transpose]"}], ".", 
            RowBox[{"S", "[", "t", "]"}]}]}], "]"}]}], ")"}], " ", "/.", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "->", " ", 
          RowBox[{"x1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"xdot", " ", "->", " ", 
          RowBox[{"xdot1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"\[Theta]", " ", "->", 
          RowBox[{"\[Theta]1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"\[Theta]dot", " ", "->", " ", 
          RowBox[{"\[Theta]dot1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"u", " ", "->", " ", 
          RowBox[{"u1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}]}], "}"}]}]}], ";", 
     "\n", 
     RowBox[{"sol2", " ", "=", " ", 
      RowBox[{"S", " ", "/.", " ", 
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"S", "'"}], "[", "t", "]"}], "==", " ", 
            RowBox[{"RHS", "[", "t", "]"}]}], ",", 
           RowBox[{
            RowBox[{"S", "[", "0", "]"}], "==", "S0"}]}], "}"}], ",", "S", 
         ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], " ", "}"}]}], "]"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"S", " ", "=", " ", 
      RowBox[{"sol2", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}]}], "\n", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CalculateGains", "[", 
   RowBox[{
   "x1a_", ",", "xdot1a_", ",", "\[Theta]1a_", ",", "\[Theta]dot1a_", ",", 
    "u1a_", ",", "time_", ",", "A_", ",", "\[Tau]_", ",", "S_"}], "]"}], ":=",
   " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x", ",", "L", ",", "RHS", ",", "xdot", ",", "\[Theta]", ",", 
      "\[Theta]dot", ",", "u", ",", "K", ",", "Af", ",", "Bf", ",", "Q", ",", 
      "fx", ",", "xState", ",", "R", ",", "Mf", ",", "x2dot", ",", 
      "\[Theta]2dot", ",", "S0", ",", "sol2", ",", "t"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"xState", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
       "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"x2dot", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{"u", "+", 
         RowBox[{"A", " ", 
          RowBox[{"\[Theta]dot", "^", "2"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"A", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Theta]2dot", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{"u", "+", 
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ")"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"fx", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
       "xdot", ",", "x2dot", ",", "\[Theta]dot", ",", "\[Theta]2dot"}], 
       "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Bf", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"fx", ",", "u"}], "]"}]}], " ", ";", 
     RowBox[{"(*", 
      RowBox[{"For", " ", "1", "D", " ", "stuff", " ", "use", " ", "D"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"K", " ", "=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Bf", "\[Transpose]"}], ".", 
         RowBox[{"S", "[", 
          RowBox[{"\[Tau]", " ", "-", " ", "time"}], "]"}]}], ")"}], "/.", 
       " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "->", " ", 
          RowBox[{"x1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"xdot", " ", "->", " ", 
          RowBox[{"xdot1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"\[Theta]", " ", "->", 
          RowBox[{"\[Theta]1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"\[Theta]dot", " ", "->", " ", 
          RowBox[{"\[Theta]dot1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"u", " ", "->", " ", 
          RowBox[{"u1a", "[", "time", "]"}]}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", "K"}]}], "\n", "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"testWithFB", "[", 
    RowBox[{
    "ICs_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "xff0_", ",", "xdotff0_", 
     ",", "\[Theta]ff0_", ",", "\[Theta]dotff0_", ",", "uff0_", ",", "A_"}], 
    "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eq", ",", "init", ",", "\[Theta]", ",", "\[Theta]dot", ",", 
       "\[Theta]ff", ",", "\[Theta]dotff", ",", "x", ",", "xdot", ",", "xff", 
       ",", "xdotff", ",", "uff", ",", "t", ",", "\[Kappa]1", ",", 
       "\[Kappa]2", ",", "\[Kappa]3", ",", "\[Kappa]4", ",", "ufb", ",", "u", 
       ",", "\[Theta]s", ",", "\[Theta]dots", ",", "xs", ",", "xdots", ",", 
       "us", ",", "J", ",", "S", ",", "K"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Kappa]1", "=", 
       RowBox[{"\[Kappa]2", "=", "3"}]}], ";", "  ", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"lqr", " ", "for", " ", "q"}], "=", 
        RowBox[{"r", " ", "for", " ", "balancing", " ", "pendulum"}]}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"\[Kappa]3", " ", "=", " ", 
       RowBox[{"-", "0.1"}]}], ";", 
      RowBox[{"\[Kappa]4", " ", "=", " ", 
       RowBox[{"-", "0.65"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"xff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xdotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "\[Pi]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"uff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"uff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"S", " ", "=", " ", 
       RowBox[{"CalculateSMatrix", "[", 
        RowBox[{
        "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
         "uff", ",", "\[Tau]", ",", "A"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"K", "[", "t_", "]"}], " ", ":=", " ", 
       RowBox[{"CalculateGains", "[", 
        RowBox[{
        "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
         "uff", ",", "t", ",", "A", ",", "\[Tau]", ",", "S"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ufb", "[", "t_", "]"}], " ", ":=", " ", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"K", "[", "t", "]"}], ".", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"xff", "[", "t", "]"}], "-", 
                RowBox[{"x", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"xdotff", "[", "t", "]"}], "-", 
                RowBox[{"xdot", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]dot", "[", "t", "]"}]}]}], "}"}]}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         RowBox[{
          RowBox[{"\[Kappa]1", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]3", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"xff", "[", "t", "]"}], "-", 
             RowBox[{"x", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"xdotff", "[", "t", "]"}], "-", 
             RowBox[{"xdot", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"u", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{"uff", "[", "t", "]"}], "+", 
        RowBox[{"ufb", "[", "t", "]"}]}]}], ";", "\n", "\n", 
      RowBox[{"eq", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"x", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"xdot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"xdot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"u", "[", "t", "]"}], "+", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
             RowBox[{"A", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]dot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"u", "[", "t", "]"}], "+", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
            ")"}]}]}]}], "}"}]}], ";", "\n", "\n", 
      RowBox[{"init", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"xdot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]dot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}], ";", "\n", "\n", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
        "}"}], "=", 
       RowBox[{"NDSolveValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"eq", ",", "init"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
         RowBox[{"Method", "->", 
          RowBox[{"{", 
           RowBox[{"\"\<DiscontinuityProcessing\>\"", "->", "None"}], 
           "}"}]}]}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"us", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{"uff", "[", "t", "]"}], "+", 
        RowBox[{"Piecewise", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"K", "[", "t", "]"}], ".", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"xff", "[", "t", "]"}], "-", 
                 RowBox[{"xs", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"xdotff", "[", "t", "]"}], "-", 
                 RowBox[{"xdots", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                 RowBox[{"\[Theta]s", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                 RowBox[{"\[Theta]dots", "[", "t", "]"}]}]}], "}"}]}], ",", 
             RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
          RowBox[{
           RowBox[{"\[Kappa]1", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]s", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]dots", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]3", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"xff", "[", "t", "]"}], "-", 
              RowBox[{"xs", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]4", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"xdotff", "[", "t", "]"}], "-", 
              RowBox[{"xdots", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"us", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"{", 
       RowBox[{
       "xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots", ",", "us", 
        ",", "J"}], "}"}]}]}], "]"}]}], "\n"}], "\n"}], "Code",
 CellChangeTimes->{{3.862753343189165*^9, 3.862753411389415*^9}, {
   3.8627553611496043`*^9, 3.8627553647834463`*^9}, {3.862755542386807*^9, 
   3.862755582254092*^9}, {3.862756179429644*^9, 3.8627562078485813`*^9}, 
   3.8627563320549693`*^9, {3.8627564690202875`*^9, 3.8627565488258357`*^9}, {
   3.8627568793814173`*^9, 3.8627568873778677`*^9}, 3.8627585165043135`*^9, {
   3.8627585965107956`*^9, 3.862758689290209*^9}, {3.862758834699833*^9, 
   3.8627588555911727`*^9}, {3.8627590963373947`*^9, 
   3.8627590998392787`*^9}, {3.8627594410134716`*^9, 
   3.8627594626865597`*^9}, {3.862759635094576*^9, 3.8627596377257366`*^9}, {
   3.862759669455618*^9, 3.8627597448635693`*^9}, 3.862759795914287*^9, {
   3.8627603319473376`*^9, 3.862760490473783*^9}, {3.8627605307139487`*^9, 
   3.862760536806006*^9}, {3.8627610047197795`*^9, 3.8627610478400292`*^9}, {
   3.8627611285982723`*^9, 3.862761147921111*^9}, {3.8631982964294224`*^9, 
   3.8631982970332265`*^9}, 3.8631983363504767`*^9, {3.863208693665881*^9, 
   3.8632086943846474`*^9}, 3.863210007245922*^9, 3.863271804426487*^9, {
   3.8632718412836447`*^9, 3.8632718583741503`*^9}, {3.8632719591337743`*^9, 
   3.863271959351703*^9}, {3.863272049174841*^9, 3.863272070205083*^9}, {
   3.863272113471178*^9, 3.863272123024109*^9}, 3.8632747752128673`*^9, {
   3.863274857845314*^9, 3.863274901443305*^9}, 3.863274985905165*^9, {
   3.86327502591031*^9, 3.8632751590365314`*^9}, {3.8632751952308993`*^9, 
   3.863275233662552*^9}, {3.8632753992893295`*^9, 3.863275415841012*^9}, 
   3.8632757933676972`*^9, 3.863276112914017*^9, {3.8632763683199444`*^9, 
   3.8632763983313017`*^9}, {3.8632764721665745`*^9, 3.863276525061578*^9}, {
   3.863278235705888*^9, 3.8632782777863655`*^9}, {3.863278324944213*^9, 
   3.8632783286160316`*^9}, {3.863552728717914*^9, 3.8635527298355513`*^9}, {
   3.863613419658352*^9, 3.863613423534114*^9}, {3.8636150904008484`*^9, 
   3.86361513154671*^9}, {3.8636152078133564`*^9, 3.8636152525520706`*^9}, {
   3.8636152893383236`*^9, 3.863615479516596*^9}, 3.8636157247782784`*^9, {
   3.863615879717803*^9, 3.8636159617646036`*^9}, {3.8636160220243616`*^9, 
   3.8636160299278383`*^9}, {3.863616069486206*^9, 3.86361607601912*^9}, {
   3.863699007217822*^9, 3.8636991515617003`*^9}, {3.8636996033223495`*^9, 
   3.8636996129842625`*^9}, {3.8636997844214835`*^9, 3.863699805489752*^9}, {
   3.863699907217247*^9, 3.863699944316393*^9}, {3.863700788168758*^9, 
   3.8637008845809517`*^9}, {3.863702046275758*^9, 3.8637020830100203`*^9}, {
   3.863702595245346*^9, 3.863702645292355*^9}, {3.863884194660141*^9, 
   3.8638842031804175`*^9}, {3.8638909914788537`*^9, 3.863891009810995*^9}, {
   3.863891113237941*^9, 3.8638911537729845`*^9}, {3.863891279619763*^9, 
   3.8638912855948534`*^9}, {3.863891344230113*^9, 3.863891351574766*^9}, {
   3.8638925953132634`*^9, 3.8638925989880886`*^9}, 3.8641412354391413`*^9, {
   3.864141550931038*^9, 3.8641416655529428`*^9}},
 FontWeight->"Plain",
 CellLabel->
  "In[3595]:=",ExpressionUUID->"b098c715-9c30-421d-bfce-eae26b7e4e91"],

Cell["\<\
Check the performance of the new initial guess mechanism for the case where n \
= 40 and greater was required.
We see that n = 6 is only required here which is excellent!\
\>", "Text",
 CellChangeTimes->{{3.863702780704089*^9, 3.8637028585982*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"9be2365f-c4bb-4396-8de9-0c9df9f460d6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  StyleBox[
   RowBox[{"n", "=", "6"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Tau]", "=", "2.5"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Tau]1", "=", 
    RowBox[{"\[Tau]", "*", "1.25"}]}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"A", "=", "0.2"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"order", " ", "=", " ", "4"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"maxIter", " ", "=", " ", "100"}],
   FontWeight->"Plain"], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.048555026816794494`"}], ",", 
      RowBox[{"-", "1.560065966757075`"}], ",", "0.7613152376955525`", ",", 
      "1.9382391342292873`"}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"InitGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}]}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
       "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
       "\[Lambda]3ff0", ",", "\[Lambda]4ff0"}], "}"}], "=", 
     RowBox[{"ffCartPendulum", "[", 
      RowBox[{
      "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", "order", 
       ",", "maxIter", ",", "InitGuess"}], "]"}]}], ";"}], " "}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1b", ",", "xdot1b", ",", "\[Theta]1b", ",", "\[Theta]dot1b", ",", 
       "u1b", ",", "J1"}], "}"}], "=", 
     RowBox[{"testSwingUp", "[", 
      RowBox[{"ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "u1a", ",", "A"}], 
      "]"}]}], ";"}], " "}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x1c", ",", "xdot1c", ",", "\[Theta]1c", ",", "\[Theta]dot1c", ",", 
      "u1c", ",", "J"}], "}"}], "=", 
    RowBox[{"testWithFB", "[", 
     RowBox[{
     "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
      "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A"}], "]"}]}], 
   ";", 
   RowBox[{"p1a", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1a", "[", "t", "]"}], ",", 
        RowBox[{"u1a", "[", "t", "]"}], ",", 
        RowBox[{"x1a", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1a", "[", "t", "]"}], ",", 
        RowBox[{"xdot1a", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1a\>\"", ",", "\"\<u1a\>\"", ",", "\"\<x1a\>\"", ",", 
         "\"\<\[Theta]dot1a\>\"", ",", "\"\<xdot1a\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Feedforward solution\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}]}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{"p1b", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Theta]1b", "[", "t", "]"}], ",", 
       RowBox[{"u1a", "[", "t", "]"}], ",", 
       RowBox[{"x1b", "[", "t", "]"}], ",", 
       RowBox[{"\[Theta]dot1b", "[", "t", "]"}], ",", 
       RowBox[{"xdot1b", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
     RowBox[{"Filling", "->", 
      RowBox[{"{", 
       RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Theta]1b\>\"", ",", "\"\<u1b\>\"", ",", "\"\<x1b\>\"", ",", 
        "\"\<\[Theta]dot1b\>\"", ",", "\"\<xdot1b\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<Test on dynamics\>\""}], ",", 
     RowBox[{"AspectRatio", "->", 
      RowBox[{"1", "/", "3"}]}], ",", 
     RowBox[{"ImageSize", "->", "400"}], ",", 
     RowBox[{"GridLines", "->", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], "]"}]}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"p1c", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1c", "[", "t", "]"}], ",", 
        RowBox[{"u1c", "[", "t", "]"}], ",", 
        RowBox[{"x1c", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1c", "[", "t", "]"}], ",", 
        RowBox[{"xdot1c", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1c\>\"", ",", "\"\<u1c\>\"", ",", "\"\<x1c\>\"", ",", 
         "\"\<\[Theta]dot1c\>\"", ",", "\"\<xdot1c\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<LQR feedback solution\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], "\[IndentingNewLine]"}],
  FontWeight->"Plain"], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.863699832878002*^9, 3.8636998879424076`*^9}, {
   3.8636999587037973`*^9, 3.863699966845196*^9}, {3.86370068689312*^9, 
   3.863700742439372*^9}, {3.863700775571786*^9, 3.8637007771342835`*^9}, 
   3.863700945211579*^9, {3.863700998427576*^9, 3.8637010107976217`*^9}, {
   3.8637016473912125`*^9, 3.863701669091281*^9}, 3.863702035899074*^9, {
   3.863702126179226*^9, 3.863702160529252*^9}, 3.86370251869481*^9, {
   3.8637025705572357`*^9, 3.8637025888983755`*^9}, {3.8637026681560507`*^9, 
   3.8637026692896886`*^9}, {3.8637027081322765`*^9, 3.863702762285972*^9}, 
   3.8637029838601737`*^9, 3.8637033230088053`*^9, {3.863884225388322*^9, 
   3.8638842448491*^9}, {3.8638842916161537`*^9, 3.863884295082047*^9}, {
   3.863891061309538*^9, 3.863891063069975*^9}, {3.863891163269951*^9, 
   3.863891163428899*^9}, {3.8638912925906177`*^9, 3.8638912940581484`*^9}, {
   3.8638913677266035`*^9, 3.8638913686183195`*^9}, {3.8638926039804945`*^9, 
   3.8638926063767295`*^9}},
 CellLabel->
  "In[3602]:=",ExpressionUUID->"53d64360-9130-4d93-aa11-669324ba78f7"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{249, 1412, 197, 198, 199, 200, 201, 202, 203, 204, 
            205, 206, 207, 208, 424, 364, 315, 276, 248, 232, 437, 377, 328, 
            289, 261, 449, 389, 340, 301, 209, 425, 365, 316, 462, 402, 277, 
            453, 393, 474, 344, 467, 407, 478}}]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwl0ldsT2EcBuDzLxK7xo09EitI7Hljc2FFJcQMtUnsdWGFCjEjRmioTWJv
XdrSxowYQYii9o1ZxQ3l+dKLJ+/ve8/3nZOccxomzkqYGRdFUYzXHGN1mShK
Is+cyzWukkM2WVwhkwzSSSOVy1ziI7+p7sZdmcFRLuo+8Itq1l2YzhEu6ErL
BvRjceh4r28mB7OCTH7qqsrOTOMw53Ut5VCSyKEUo9jATerTl0VhP++cGSM3
cZumDGI5GRS5vkM+ZDhryaMKW7hLJ54ylUOcc6ZAJvOEseSzmTu04AXbeUAC
z1hFNnG8YiePGMlz1nODemzlHn1YGJ7JW8/dJR8zmo3cognbuM9AlpHOD/uH
yTXkEk9HpnCQs643l0NYSRYxRrCO69SlNwvCft4401gOYClpFOoqyw5M5gBn
opKfrg69mB+6WMk/2Ej2ZwmpfNdVku2ZxH5O6/5R29yTeaGjQPeNiuZ2TGQf
p3TF1DL3YG7ownvWfaWCuS0T2MtJ3V9qmrszJ3S81H2hvLkNiaRwQveHGuZu
zA5d+M66z5Qzt2Y8eziuy+cTZa1bMY7d/Af+x3rE
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{1, 135, 108, 88, 72, 60, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10, 
           11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27,
            28, 29, 30, 31, 32, 33, 34, 35, 136, 109, 89, 73, 61, 52, 36, 137,
            110, 90, 74, 62, 53, 142, 115, 95, 79, 67, 37, 138, 111, 91, 75, 
           63, 54, 143, 116, 96, 80, 68, 38, 139, 112, 92, 76, 64, 146, 119, 
           99, 83, 55, 144, 117, 97, 81, 69, 148, 121, 101, 86, 39, 140, 113, 
           93, 77, 150, 123, 103, 65, 147, 120, 100, 157, 130, 84, 153, 126, 
           106, 56, 145, 118, 98, 156, 129, 82, 152, 125, 164, 105, 160, 133, 
           168, 70, 149, 122, 163, 102, 158, 131, 166, 87, 154, 127, 165, 107,
            161, 134, 169, 40, 141, 114, 162, 94, 155, 128, 78, 151, 124, 104,
            159, 132, 167, 66, 85, 57, 71, 41, 58, 42, 43, 44, 45, 46, 47, 48,
            49, 59, 50}]}, Annotation[#, "Charting`Private`Tag$1561597#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1HmYTXUcBvA7akgLiUgqJhSKpBRa0CKtylpSpKKipkVKZR9RRLRQWmxZ
hjJbiBrbMGYsM5p9n2kjKiottvL5Pf743Pd73nt+z7lnuSdmcGzPZ6IikUhH
H/HyIzmIKziNX3SlLOdj24/Qlpr8qitjhflZOnMex0LHJ+bBXMnp/KYr53Pz
c3ShIcdDx6fmR2nHGRzQVfCF+Xm6cj7/hY555se4ijM5qKtkpfkFbqIR/4eO
+ebHuZqz+F23Rr7GnTSjSpcgR3AzF4SLQ4JYIIfQnlr8oftKjuYumvOdLlG+
yC1cyFbe5AGiSGUC99GKRGsWyqFcQ202M5m+/On7tXIMd5PNu1xCBm8xgDw+
4Hv7J8mR3EoW73AR6UylhP7kMocKqrGeiRTRk928RxmXsZ0ZlPIw+XxIJUmO
u0g+QSHXspOZnE0aU+jHt7zPIWvWybHcw6VkMp2H+MH3yfIlutGYbUzjQU5h
A3H04nKSrflMPkkH6vCX7ms5jh604EddinyZ22jCqaToF8unok7+L87hb91P
fMkS28PoRF3+0e1hFavDMxWei3DPwrmF4/INqaxnAxvZxGbSiIuORLbIraSz
jQwy2c4OdrKLLLJZ6tjDuY56/KvbG36jeRTdiSGajUyiN63DfbXfMvk017OL
WZzLFt6gmPvJYTblHA7nIsdzLy35OZy7fIXbuZjq4R7r42V4wdxAfY7o9pFD
LnnkU0AhRRSH9419Y7mRBhzV7Q/X1/wqd9CUGmzidfrQhh28zUAKmEsVJdaf
AM+1rg0=
           "]]}, Annotation[#, "Charting`Private`Tag$1561597#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV02WAVVUUgNE3M3R3gwwoiiClIlLKSLeDKKggDKGIgIp0SVoobdJ2YCPS
EgZhY6AoSnd3r/1j8Z2z733vzQ1SM/ql901KJBJj/bONrCmJxJLkRGI4LalI
IbY7toOd7GI3e9hLNp9Z6pwRtOJ6CrPPseyOLbMeSWsqUYT9juVwbLn1KNpQ
maKUMv9Rp9CV+hxwfk7zFdZP0pYbKEZp8590KhncxkHn5zJfaT2aO6lCccqY
/6zT6MbtHHJ+bvOvrMeQTtW4FrN/dA79KMFVZr/odLpTx/6QfkwDqtvv0LcY
yGHfncdslfVYGlmf0XbcYr1PP6Ba3B/7f3Uuza0v6qNxTdbH9PO4dusUSlqX
1V+1vc7QpnpeO2kPrauHtYN+Es9Ak+hKmn0N3al369vaQi9pZx2kaXpS79VF
cR81E0dcU15dbTaOxtZn9S5qWe/XBXEv4rnab9V5PBb32/64LoxnTar9Jn2R
ntSL79dPuYMb7XfpOwzmqN/OZ7bGenxce1xHvA9m/+l8Ho/3gnJmv+lLPEhD
jvl8fvO11hPi2uM34r2gvPnv+jIPxbPiuPMLmH9t/RT3cFO8B5xwrKBj31g/
HfeZm+O5cNKxU5zmDGc5x3kucJFLXI7/gM5PIpkUMlHI936rz9CRmnGvyExh
x77TZ+PZxHsU18rV5n/oK/SK50IWipiv0+e4L55RXCvXmP+pr/IwTchKUfP1
OpH7uZUqZv/r6/SP36KC2WZ9jd7x/sW9Mdut7zKEbBQz26DPx7sZ32d/QD+k
NlXtt+kbPEED+xP6RfyNXGv/l86kmfUFfYT61kfj/uhn2kaTyaBZPAvdE89M
39OWelkf0KHxfumpuCf6paZrZrqR3b64boz3Wl+I+6Pn4p5o5/jb9aB+RCvr
BF2oY19Nt+ubDIh7xXVmf+ss+tCcHJQw/14nxd9G3bhmcpKL3OQhL/nITwFK
+twPOpku1IvfoKL5Fp1NX1rE+2O2V99nGA3tT+ti2llnoTsF7a8AVpu07g==

           "]]}, Annotation[#, "Charting`Private`Tag$1561597#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwNy2NzmFEYBNA3TWrbSG3bNtP2D3Smtm3btm3btm27qd2eD2fu7j5zw5u0
j2gXEgRBJE1DgyB/WBDE4ZV8ijVMpxnNaUFLWtGaNrSlHe3pQAH/4/JaPs1a
ZtCRgvZ4vJHPsI6ZVLGF80++z0E6UcgWn7fyWdYzi6q2jAQ80A/RmcJ6At7J
59jAbKrZMhHCQ/0wXSiiJ+S9fJ6NzKG6LTNReKQfoStF9UR8kC+wibl0o5g9
MZHyRTYzj+70oCfF3ZPwUb7EFubTixL2pHySL7OVBdSwZSGUx/pRelNST8Zn
+QrbWEhNW1bCeKIfow+l9OR8ka+ynUX0pbQ9BV/la+xgMf0oY0/JN/k6O1lC
f8raU/FdvsEuljKAcvbU/JBvsptlDKS8PQ0/5VvsYTmDGMwQhjKM4YxgJKMY
TQV/0/JLvs1eVlDLlo2oPNWPM4aKejp+y3eoL+cmFhHkpRH73Op6cxKDF/pK
asvZicYz/QRjqaSn5498l/2sYhzjmcBEJjGZKUylsj8Z+Cvf4wCrqWPLQXSe
6yepJ+ciJi/1Bt48xKYh+WjMNLf/NgR/2w==
           "]]}, Annotation[#, "Charting`Private`Tag$1561597#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV03eAznUcB/DnbBkJlZVCkXAys2d2ZlzGicged/bmjiiZZZeyEyWyUsiq
kK1spbL3Ktm8vn+87v3+fO658Xx/3ydXm7hG3aMikUi0LzHJIpEqySOR1BzV
VzGDD3iLpjSjOS2IpSVv04rWvEMb2vIu7WhPBzrSic50oaq/8wTH9NV8wmi6
8rp9Go7r3/EpH/KmXTYu6r+wmG5Us0vLH/oaZjKGxnbZuaRv5Su6U90uHX/q
3/MZY2lil4PL+ja+Jo4aduk5of/A5+F9m1/ilr6PccSYn+OKvj28V70ISVgS
zkW+wj39YPhf9BKkIN5cUz7JX3oPWYq14fxkNI/0WeG89bz8r/eWZdkfzk4W
YyjJ6E9FhjM+PEeZk0FcNfeSZRjGr+G5yKIMISn9qEAi34RnKgswmPvmPrIc
h8I5yZKkZACV6GFfS2bgb72nLM26cB9kYSLMDvdH5uO2/lt4rnpxkjMh3D/5
PNf0HSwN98tckAf64fD7qW1+in/09cwJ99L8Mnf035kY7rL5Ba7rO1kWzoM6
dhk5qf/IXD4K994uFzf0XXwbzp437DJxSt/APD4OZ0Nd+8yc1jcyn0n0pZ79
05zRN7GAyfSjPwMYyCAGU99rn+GsvpkvmBI+i3a5uanvZjlDaGD3LOf0LeGz
p79KFH0pTwILw2dW5ueufoCpxJrz8K++hxUMpaFdFs7rP/El0xhGAokMZwTv
MZJRNPIzWbmg/8wiptPS7kX+0/eykvbmQjzUjxCvv0YqBlKZEbzve48BxDKa
Hg==
           "]]}, Annotation[#, "Charting`Private`Tag$1561597#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"Feedforward solution\"", TraditionalForm], 
     PlotRange -> {{0., 3.12499993622449}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1a\"", "\"u1a\"", "\"x1a\"", "\"\[Theta]dot1a\"", 
       "\"xdot1a\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.863702134579542*^9, 3.8637021627135525`*^9}, 
   3.8637025210160646`*^9, 3.863702578124817*^9, 3.8637026714539957`*^9, {
   3.8637027226726294`*^9, 3.8637027640764*^9}, 3.8637029884806967`*^9, {
   3.8637033266226506`*^9, 3.8637033354478307`*^9}, 3.863879327529692*^9, {
   3.863884217207935*^9, 3.8638842652235885`*^9}, 3.8638842967265196`*^9, 
   3.8638860360506268`*^9, 3.8638906095889077`*^9, 3.863890848019706*^9, 
   3.8638910663699183`*^9, 3.863891132659732*^9, 3.8638911691100826`*^9, {
   3.8638913595922036`*^9, 3.863891384033392*^9}, 3.8638926082491283`*^9, 
   3.864131525163704*^9, 3.8641416796563787`*^9, 3.864143125130576*^9},
 CellLabel->
  "Out[3607]=",ExpressionUUID->"2b61f7de-7bc6-429c-89f2-e460939b40b7"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{332, 1528, 280, 281, 282, 283, 284, 285, 286, 287, 
            288, 289, 290, 291, 507, 447, 398, 359, 331, 315, 520, 460, 411, 
            372, 344, 532, 472, 423, 384, 292, 508, 448, 399, 545, 485, 360, 
            536, 476, 557, 427, 550, 490, 561}}]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwl00dsznEYwPH3LbX3asyYQYjS2hd7XlDrYNe4oDUOVpDY86I1D1aQEDP2
vNgcrCAhRkWMIDatxPg8cfjk+/s975O8b/t/3wbZuVk5KYlEIkkBvylKTSQK
STOsQXWqUZUqVKYSFalAecpRljKUpjP9mcRaLvCLUnSiHxNZw3mKKMlwZrKF
mzHz4TrqPHZyL97XrK9OYDXnKKQEC9nDw/i89obpQZ5R232GbuZG7Lt30MMU
UNd9ru7gbvxt7n30LU2c9+lj0pzH60vqO6/SFnpWf5JKpvsHba5HNF1faD1d
oK31jTbW3dpSH8T/V4dqhr7TpnpAW+lTraXT9RUNnTfp9XhP5/b6nmbOh/Q5
dZzn6GsaOW/XO/HMnHvrXh7Fc3bP1pWc4QfFmc8u7sdztzNE9/OEmu7TdCPX
Yt+9nc5mG7fje2HWS8exgtN8pxiDyWUDV2Nmt63OYiu34jtl1lPHspxTfCOF
LHJYz5WY2c3UHoxhGSf5SpJBTCWfyzGzn6HdGc1STvAl+f8HMZAp5HEpZvbb
aDdGsYTjfOavlwfoZNZxMWbxnOnKSBZzjE/8sZ+uXRjBIo7ykX/Iy2lU
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{1, 198, 151, 113, 84, 63, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10, 
           11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27,
            28, 29, 30, 31, 199, 152, 114, 85, 64, 52, 210, 163, 125, 96, 75, 
           32, 200, 153, 115, 86, 65, 53, 211, 164, 126, 97, 76, 33, 201, 154,
            116, 87, 66, 54, 212, 165, 127, 98, 77, 34, 202, 155, 117, 88, 67,
            219, 172, 134, 105, 55, 213, 166, 128, 99, 229, 182, 144, 78, 223,
            176, 138, 109, 233, 186, 148, 35, 203, 156, 118, 236, 189, 89, 
           227, 180, 142, 68, 220, 173, 135, 239, 192, 106, 231, 184, 248, 
           146, 242, 195, 251, 56, 214, 167, 245, 129, 238, 191, 249, 100, 
           230, 183, 247, 145, 241, 194, 250, 79, 224, 177, 246, 139, 240, 
           193, 110, 234, 187, 149, 243, 196, 36, 204, 157, 119, 237, 190, 90,
            228, 181, 143, 69, 221, 174, 136, 107, 232, 185, 147, 57, 215, 
           168, 130, 101, 80, 225, 178, 140, 111, 37, 205, 158, 120, 91, 70, 
           222, 175, 137, 108, 58, 216, 169, 131, 102, 81, 38, 206, 159, 121, 
           92, 71, 59, 217, 170, 132, 103, 82, 39, 207, 160, 122, 93, 72, 60, 
           40, 208, 161, 123, 94, 73, 61, 41, 42, 43, 44, 45, 46, 47, 48, 49, 
           209, 162, 124, 95, 74, 62, 218, 171, 133, 104, 83, 226, 179, 141, 
           112, 235, 188, 150, 244, 197, 252, 50}]}, 
         Annotation[#, "Charting`Private`Tag$1561708#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl03e8l1McwPHfLbclWrSIknJxu7mVQqFFoaibCg11taNbZouSFqGFtIy0
aVrRoCVN7YV2GWU0KW68v6/+eN/Pec7vvH7P7znnuWUyszK6JSUSiVv9ydY/
9GMG0II7qch5n/2pn/ASLanJTfzHckbRlQdizvrj+ikDaUUt0uNmORKJFTqa
x2kUc5zgMwbRmtpUIsn6lfoGT9A45jjJ5wzmUepQmRzWf6NvEg+XEXOcYgFD
aENdLrb2O32H56hCTnOr9C2yaBJznOYLhtKWu8hv7UZ9l57czEXmvtUxdKeE
6x/1Ix6kkOttOpnnYz1n+JKXyaSoNbt1BndzietN+h5ljX/SXlxpvE/nkGJ8
TKuSbLxa3+Ya4yPag5LGezRNZ+l1ejT2WZtqYd2uqTpFr9Wf45z1Bb1KD8Q7
ofP0ev0t9l2T9S8WcqPrV7S0HtLHKGb8vc6knPEvWo9LjTfr+/SmlOv9Opdq
5HK9RsfyJFe43quzaUYR1zt0Kv1iPX+ziGG0oz4FrNuik+jDLeQ2t1bH8RTN
Y46zLOZV2nNP0oX/kTycYwmv0YF7uY285It3Kt6LOLN4trgvBePcY3/j93IZ
l8c5x77E701OJIrHuxJnFM8YZxt7EXvO1bGXlInzjHeAf/iK1+nIfVSP3+iZ
1ul4nuahuJ+5nTqN/nGu/MvXDI/v9flh7URx4x+0gn6o5fVXTdcG8Sy6VT+g
LzXi2c2t1wk8w8NxxmSzlBF0piG3x3fGu0dKvEPcEO8MqXFfzrOMkXThfu6I
/XWfDTqRZ3kk9tHcLp3Oi7FXrg/q/Phe49+1iqbp/5XYjDE=
           "]]}, Annotation[#, "Charting`Private`Tag$1561708#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV03mATWUYB+CLlGgvIpUUSZTIvu/bMGaGmbEvYys0EyrapSxlqVRSGGUp
O9mJFkWLvbJXKrsipb3I8/7x3Pf3vve73znnnnNKZuWkZedJJBIjfVTJm0jc
ky+RuJFv5TkMoy9VqUZ1alCTWtxrbQkOyHN5KvagNv3Mb+I7eR7DY32sMavG
n/J6XqMO/c1K8r08n6djj/idWXX+kj/ideoywOxmfpAX8EzsEb8zq8Hf8sdM
ph73md3CQXkhI3hR34yL+CL2jH3kmvwjb2AK9ck2K8UheREjmaBvTgG+jGPE
vnIt/pU38oacQRGm6iepyVzGXn0DcuTSHJYXM1Vuy9WM0r+ktuBi5tGDr8xn
qB1YTjEW0ZvsOD+1Nkv4L+6P2p2VfKJ/U81kGdeykF6sJjfui9qGpVzOfLJY
xT7fz1I7sYLiLKYPDX13v3orR+TZalfekXPVdlzDaP3LaksKslM/U+3IdeTo
R6l1OCt/yrS4//oUrmC/vhED5TIclZfwLK/okyjErjgnRst1OSd/FveGxgwy
u41j8lKeiz1jH7N6/C9/Hv8ZTRhsVpbj8jLGxB405QHz2zkhL2dsrKcZzWlB
S5JoRWuSaUMKqaTRlnakk0EmD9q3HD/KKxgXx6M9D5mX5yd5JeNjfVyLWX0S
bNJPpwND9HdwUl7F87FHXItZA/KwOZ4xOjJUfyen5NW8EHvE9cU9Jy9b4h7S
iYf1FfhZXhPvGhP1rbiE3bFnXIPciHxsjfNT21OUWfH+qqlcydf6t9TOXB9V
/4h6F6flOWo33o1nRU2nMAvoyQTzV9XWXMqeOM/4r+TGXMC2OAZdeFRfkV/k
tfEexvHoymPmlfhVXhfPcqynG4+b380Z+b14FmM93XnCvDK/ye/HfxLr6UEW
PenFk9ZU4Xf5gzjv+G3cJ7Mm5Ge7/m16M0xflT/kD5kUe8R9MmvKhezQz2aK
nMZVfBN7qF24Id5T+rIm3mffnQfxD8QP
           "]]}, Annotation[#, "Charting`Private`Tag$1561708#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwNzkN6REEUgNHX6Y5to2NuJkvIApJBlhfbtm3bOIPz3fpv1aCibR2t7aEg
CDrpCgdBWSQIMojwqR+5oZseeumjnwEGGWKYEUYZY5wJJplimhlmmWOeBRZZ
YpkVVlljnQ022WKbHXbZY58Dyv0zk1i+9BO3VOlcEvnTbxxSobOI41vXm0Wk
0UgJzTy7qzULSCGGO7tqM48kAt7tjog6ZxPPj37hnmNOOOWMcy645IpK73NI
4Fe/8kCNzieZEB92dWYhqYRpoJh0miilhWtv/wHROENK
           "]]}, Annotation[#, "Charting`Private`Tag$1561708#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1HegjnUUB/DXLkk0VColpGnvdW3ZXHtzrax77b23hpFZyGinQRsNDeva
u5IZTUVDisjn/PFxvuc81zue33ne/ClpyakZEolEun+KZE4kpmdJJB7kqPw8
I+hMUWaYP8Qx+QVG0oViFKcEJSlFacpQlnKUpwIVqURlqpBEVapRnce9/sMc
l19kFCnU4AnzRzghv8RoulKTJ82LcFJ+mTF0Y4VZDS7IH/E0tXjKrCjfya8w
lu6sNKvJP/LHzKU2M82KcUp+lXG8rW/ONezQ94h7JtfiX/kT5rFe34HcHNTX
YZZcnNPya3whd+d2xuvfUVtwLTv1PeOey7W5KH/KVrkPdzM/vp/akRs5zBgO
me9WB3JffF+m8Kj5bLUE3wf9fnUoq+Qv1R6cIS9HGMcfTHD9XbUlP5OdrxjJ
OXa5vkNN4zcKxJkxifM8Fmer1uFHLukPqsPZIKerfbmHBXEOaiduivfR71EH
UZi6+jlqSX6QX2ej3JM7mKh/T23FdezW94r9iXvAf/JnLIzz0nfmZr7W14t9
kUvF55TfYBK9Y8fivbksf84i6se+mJXmJ/lNJtMndsysHlfirHmGBrEfZmXi
PspvMYW+NGS+eVl+kVczlX40ojFNaEoyzWjOAn9fLs5NXsM0UmNnzerzf5wt
z9IivrdZeX6NfWZTnA93xm9A7CJ/Mt2199XW5GCPPi12V25Ago36xbSM+6Gv
EOcfu8wM+tMqvrt5Rc7GHsUzzwBax+cyrxR7FOcWzzwDWWXWkAxs0i+hTbyf
vjK/x+eL3wEGxR6YNSIjm/VLaRv/T18l9lj+IH4HourbcD179YPjrOXGZGKL
/rl45uQu3MI3+nbxunJS3CP5QzbLvbiLmTFT25IzdopR7DPfqfanICeZzJDY
GbVJ7A+ZOcQItrq2Te0XZ0V+jsd+8xfLXN+gpsS+kIdvGRv3hsOu71UHx33n
fk4xlb9pH99RrRrPUbym/oA6jLXyFrU3+TjGBGaZr1XbcUPcE0az33yXOoBC
DI3dVpuShXT9djWVe1kez6DalVvjc+s7sEyuxnl5XfxeRY3PSi4O6IfFsyEn
k5Vt+hV0ZLm+enw/eX38TjA8nguzZmRju35lPMNyN27jiH5fnAcPcJppXKCT
a1cBas39uA==
           "]]}, Annotation[#, "Charting`Private`Tag$1561708#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"Test on dynamics\"", TraditionalForm], 
     PlotRange -> {{0., 3.12499993622449}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1b\"", "\"u1b\"", "\"x1b\"", "\"\[Theta]dot1b\"", 
       "\"xdot1b\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.863702134579542*^9, 3.8637021627135525`*^9}, 
   3.8637025210160646`*^9, 3.863702578124817*^9, 3.8637026714539957`*^9, {
   3.8637027226726294`*^9, 3.8637027640764*^9}, 3.8637029884806967`*^9, {
   3.8637033266226506`*^9, 3.8637033354478307`*^9}, 3.863879327529692*^9, {
   3.863884217207935*^9, 3.8638842652235885`*^9}, 3.8638842967265196`*^9, 
   3.8638860360506268`*^9, 3.8638906095889077`*^9, 3.863890848019706*^9, 
   3.8638910663699183`*^9, 3.863891132659732*^9, 3.8638911691100826`*^9, {
   3.8638913595922036`*^9, 3.863891384033392*^9}, 3.8638926082491283`*^9, 
   3.864131525163704*^9, 3.8641416796563787`*^9, 3.8641431252565355`*^9},
 CellLabel->
  "Out[3608]=",ExpressionUUID->"3f60af30-6841-4ab5-ad56-ad90687a8b8e"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
zzcqxOeHwBqG37IuyA7h+jnj/XrXLrpGsnigYNDLvoG3Sa9t//MlYBe7jvLa
8D1NPSK0KSq/GDh3cWmu1V8qvxh8RifL+Cafyi+u3fW1y+LnGJVf9Jyf4PdQ
d5TKLwYlZXudShmm8ottiZMHS42GqPyi2a+JmY3Df6j8Yi1x8H1+8QCVX/y5
VsBkeUU/lV/c8DcmSqKzj8ov8m4wLjE39FH5xVsK9l7Ju3qp/GJKTIU2b2cP
lV9MOzo/rh73W9JrFbSkzgUxu6j8osium8vHHbqo/KLlp3Kha7ieSa81+t7Z
WvSVR+UXv0z6xe8K5VH5xTnTPnsjUx6VX6xo2Motk+VR+cXX239cXNfYSeUX
zQI7R5zwOoz02qR8y+OjCzqp/GLnlrFvhyK5VH4x9LxP5402DpVfjIqZafps
FofKL15lHrtcMc4C0mvRja02Ju86gPTaWwobDt/aywTSa+PDp3pzb7QB6bVG
47P2RcW1AOm1tVldFqcUmoD02r86vQ9s59dTXuu/YGlidHsl5bW3Xv+4MuNg
KeW1nrNXbdJYn0F5bcyaSa2NXj5UfnFAY4hX2ZpL5ReJB/KHa65kEaTXflK3
cnqyPIEgvVa3XVnNOtaD8tra/g0yf5kJlNemSJjF1R9Lp7zWc9ru3cpLcyiv
Fdrq6yEI+ZTXrlBl2rBmf6a8lpDS6Hq1rpjyWoueXO4ziVLKa72PyNfO3DhJ
5Q3PL/q8YaVpP5U3/Hjv9Nfuu31U3vDGJDdDsbKXyhtGerXIueT0UHnDquU/
ntf97gbSYx33jASUrOkG0mOvdxmKL4vrAtJjvzzgfZbc3gWkx35Wv7o8qIcH
pMdWeHwVk3vNg23f53t1DQ6BSZnJMtHJTqgZvXbTbXwYLKMs4hemdkLb3nTN
24KjcEIk8tLIAdzedHUH5v0dhdApZzvBJi7sfFm7IkNgHFLzH2/Q0ebCxObV
oh10Pkhdd45r8uGAUo9eWLT4BAikxNpH+rPBc7rtE5uFf4E5oieWa8GifDer
NGV/59UUKj9ZpWYbmH89nyB996N18jGBwVSC/P/510LLErKepgD5//MmQ5+F
S89+AvL/52VLHnj2fcqF565HvQXfMRBjnVyGaVYBTCveWueiLooOijPk3639
z4M/fWILe6uVUB4865jVLcXHk1R+Ujg49A83tJ/KT5r/8R0dyuij8pNt8pbZ
oTP6qPzk0cuWYy8Eeqn8ZJPze4X+WT1Aeq/6vfgT1ke6gfRe0bqiRlTQBaT3
Js9Lz9uH5wHSex/t1FjiLNgFpPfen3n6bFIWD0618nxU04fg1QYURkjwoPnH
xOS59GFQ1X2F9pR0QpWuIo+ePwKvzw19cT/TCb56IZ1VOaMwttnRhDPBhacX
isJXZY9BYf2SvLnnuKCtNDv5V9E4SK94osRP4cC+uLqkPSV8OOkoab23gg2q
Rd8ED9RPgJXHdy+x1yzKjz++v13vp/WMyoP2TAv4GF9cSJB+/MVos+klxY8E
+XsAXQWGPz+uew3k7wFUKR+ejHL+CNTvARTUqMjXElAZYTt/ZzADJQVcC30t
VABJl9CMUSlRtHJ3wi+F+P+8+YdGTkR5WjGQXrxHxTn4Wko3kF4c47L4crso
/s7+vxcr59bLzL/ZBZLZuz2S1g/Dvgcnnf27O6Fssdgsr+0joKewUOv2w04Y
2KcbLK41CkbbNYerN+H3t3NqzFxjDE4FCV9Zjb87SD9WDGzqcg/MoPKjX2QU
18w9kkvYzd4Q02ssih72JkV8Syui/LgwIVhE6FkJ5cc73q8pFPsxSeU/H51g
ym1O6afyn+MRE/uJH31U/lPrUkOGgEIflf9cYh5StHppL5X/PHp75GWwSg+Q
Prw38ecZdL4bSB8+ZXDo8ZOqLiB9uHGx+Mk/Vl1A+vCk8cSTA2L4O+T/Ptz5
w4ajWMgDr04T3+8RQzAUldJ0RJoHJ7ZnfHIIH4afAbssbSrx+9v9S2vn0xEY
XNJYHufeCehbGivlySiIZD77pizeCT/Mt+udih6DMxrNBoxrXOh44jdx6MU4
rFsuJB76hQOWlx+ly8fz4Zzc2rKWPjaIKgqmlqRPQNS1loymahblzelrOIk3
JyKoPGv7gZ0NGlX5VJ5187YIBWf9TwT5+wamO3RazMKSgfx9g8Jyk+R7Zz4A
+fsGHj32aVJTOcBZcdb25GUGUp9/N23R03wYP1igvJUuisZtc+g+Fv/5tM59
pflGbsVA+rLSUcu3h0q6gfRlq8Tt9wVlu4H0ZUeLTzut7uF1XdFbTz2pYYhM
3eLGHOoEQ//ir+6yIzA/I3+mYEIndOpNsfYuGQUti7KeaB38/oqWDm+RHYOA
B5udD5VxKW++3mmsceVaGpV/bTiiPlpxJo/42PUhc+1OUTTC1vmS5FpEefMj
X7ftufYllA/7JAyPCMYVUPnTOP2NDL2fJZTvBq6sE1LunKTyosmaAarRuf1U
XpQjMf9zTVMflRfVXSP+tX1lH5UXDSu6duybei+VF31+YNq1+E09QPrtr4vj
P109u4H028HPoXL0xi4g/bbY8dXtzpNdQPot4aMeeGxWF5B+u/ZCRnYfXueK
nJ8mKH9zCJ6t6ZwrM58Hca6RMvbXhsFoeOMXk7pO0C3eeNY6dAR2m1wWi/Tp
BPkZJUz54FHwepq768mcTrAz8Fx+7c4YFPSWjmsHcCH9l+bz8MhxSAr/Hh5T
ywH2Gd9t4vf44Psj0LpRgAODlQ/EhOMn4OQTJ/YAm0V5sGjfK4vDIYFU/nVL
d+rtoZ95VP711bOppnWnMgny9w0crhydNmt7EpC/b/B4VkjOeXY6kL9vYPAn
QjErJAdc+87PGL7AQOlbOl+1OuaDQoHfJvO/DGSrHCTmtPk/P54z41bJTpNi
IP338v1pmwWru4H0X+I38/X3Zd1A+q9BhH5vysMuSNl7kh8tPAx/m5OeTYx1
Qmj+c+WLYiNQk1yUd/9VJ5z6ajbbXnIUmJzPfYf24ffH2DiYID4GFyUGfTOr
uZQHl4nJLe68kkrlZZ+9TPWIHc0jWo54lB7YJop4QhpPTxsXUR4cHvbG7Ld+
CeW3ExV81eUbCqm8auK1bdInc0qo/Ol3sQtK8d8KKA+9dyix//2fEspDl0wj
FscMT1L5TpGlCdnmJf1UvlP0ardvd3sfle9c+/3QmRa1Pirfqfg98957zV4q
3+n/NHpKe3sPkN55unv/F3lf/B3/f+/UvJ/6TKelC0jvnHFYVLvXrgtI78zz
+a3aOxvP5//3zkKu0OWGUh7sS7HW0r08BKXvbOP/4O/Ez0E3dnM9h2GtSFzf
55+dIHKTKeRyZwTyZpicvHmlE4JVf1ib3hoFRsRas/3zOuH9bplwyatjsMb6
S71RKBeeeDzwSA0ahwEF5byoRg68bHeauuLPh4VP2s8UiXLAPon9IfbRBNT8
ioy162dRfqrWPamn0nGDyqtKzVxdSljkUXnV/vuE24s/mQT5//8tue5zBUIT
gfz//+4/i24ciEsH8v//WYesFR+Y5cAnk/7j/34XQzP+saqIaT6ke5zMcRhj
oK9NJ70zl/3nrb7p7Jw7O4qB9FK3gCU81s9uIL10+LVkVpFKN5Be+nZm6Snb
GPx+/QmNwokheGf64A9tAr+PpnDTYaEROHks/brF205QvCua4DFtFFzGa32S
9uP3twJcWoTHYM6ogklbPZfy0/mHlxydd/UdlW8dWJlQwIB8wnWWmaH1ZlF0
3zjk00PtIspP522NPr8dSijv9LQ9nLHVp5DKlx4I+K5d8LaEyosqP5bx3mdY
QPnh9iGJM0GsEip/qXA8mqmrV0j5XsyvV58yBUop32PFlt2rmZik8pCszl/F
UNZP5SFXyzKuTLD6qDzk8tUvrh9f30flIUMeVEuqavdSecg9Yx4v7mn1AOl3
95rbNvOvdgPpd3ZHlKxOt3UB6Xf8ntZuF3v8Hfx/v4v/aey0WaoLSL+bum9j
XvGFB+cqg48fvTQELInw4JaFPDi0aLI54QIef7UXFU80dELHqcxvnjdG4MP8
T6f+Xu2EkpyDS139RuEm60GO4vxOMNvJ/lLvPQY6KvFBNeFcCC8pac+/Ow47
FkZJh/zmwIwnnS3bbvEhuPLe9XRxDiyfOyPQ8f4EXD9wUU9umPWfB44unT41
6xqV71R9kL09d3Eele/skjm05sXWLIL8f/Lv6rOmPdJIBPL/yU8GWajFXk0H
8v/J41tnRPC250CjyLu7Tx0ZCKpd/t7SyweBmhpB1xEGKkq0ZprI/ueHYrHK
KfIaxUD63/Gjz1lNjd1A+t/387v1dq3uBtL/Oh3er9N52gXzX3eZ148OwTzn
c+dF/nbCTgfxvrTJYXj+22lPdkon0Bx+O1+hj0Ju0P1yIyP8/j4UrJsQGAOb
6os1Aw1cygOd8RfIGaF3VB5U6oZqmNmJfCLH4UuYw0ZRtCrh7LKVW4soD+xB
l8paN5VQfvejd19hx9NCKo/p8kYqnJVYQuUrj2xTEsuULKA8rF7g/bz+3yVU
XlGYy7I+J15IeRVdLnzltvESKg/4nBGXvOFOIeVJL7bpPVvPKKU8iX5nWzxj
eJTK/yXXOZimRo9Q+T//CJlb73qHqPzf53UfG7z0Bqn8X/PBwz3izweo/N8F
Hcm5vuV9VP6vQPSW0kvJHir/dyPt3rTVMp1U/u/XqdFCvzksKv9X+eh5u8GO
Nir/pze8P1pkSyOV/4t+4qjvd7eayv+VNXSubjf7QuX/jqTKWF39kkbl/zTs
nk9mmET+9/uG0wUL3srnUZ5UlZT7tm1TOeVJJ6Poz+2+VlOetIzlrSTo0UB5
UuLndeLr9v6mPMnR/mvQen4r5Ul9UlURPyfbKU+SbgrlVT767/9hnX9N3zMi
xaY8yfnZ4ak0FQ7lSU5+Xk+XDnEoT+J9jC3I8eVSnvQ2udvxfjqX8qTL6186
BDzkUp50feXSTb9WcSlPYj1z8na9yKE8KfdVlM5FSzblSZVi8r+2TmNRnrS8
uKxAwolJedLzoANooU0b5UkhEVKzKla3UJ7EcctXXdjZQHkSjUs/s2NrDeVJ
KyYaVcVVy6n83z0xm9MeGgSV/7O6PDi/rLuAyv8tsglJ37iinMr/yW53lxLz
qqI8aXHQzOAZC+soTzqrkh3u7d9AedK6Pp792JEmypOSp50J8yF+U54kpjy0
KGuyhfKkt7T3Pw3aWylP0uqz+VaT0UZ50pvg+dfPGY0SpNd89vGMvFDLpLyG
W27or2vNorxma+KOZRkJbMprmjVj3r6M4lBeM6etT9ZF5z+vmRnm/mU4jkt5
jVJ/yrzo91zKa9401945dZ4LTT9aExPkJkH0s2a25y8OvM9TtLq4FNfnaaVb
3CE2THVFWnGkBJCz1HVL82wWvDb4FnggVAAtvvJ7WGNXB+U9DT+e/tadWUzl
+Tqzld56+GRTeT7mtSaJUfVSymcS/OcveW3cRvnMteUX1uvHjxKkf6xlzAxL
xv2U9I/hxFubBWksyj92hGZMih9nU/4R+jpqW7M1h/KPu+oP0jmL//OPSt+l
USvvcSn/0KiQjDT7yKX8Y63Dsqbnt7jg/k5Te37LX9h4VOHhZREu/K9oew+H
MvsDAD5FiwrVrPxQ2pSQ2KJQtN9JaayVUOSeVYqQoljUSkkXErkkd7mEIiIj
93IXuo5f2SITM/Mqt1KY92V+Z5/nNyf/nec8z7zve8733D6+R8tTzTujfw56
hhYe8t7KB9c8tflnhoUQs6bvstkSHuSxKthMfxpD3F11xfzCIewnDkOt1xcW
dOD8uzwJefFOeiXOv5N4ztWxSG3B3rGy8WpL1woO9orLVzTk0uu42CscIiRp
k5942CsM1Sg1pXY+cAe4VSa7BBDPMg+qcUfnnd9N3Ud3kSBt2Ri/ooQAcYOG
kBFLCuZOe6cduEtAqwVte6DLLOyOeUPvtkTtM3FxqYHzHCT0NOzrvMuHbYoq
1nuPCiFt4FPP53s87CGKEqqRr10bcT6dd1vwpIPrY+wfXcHtD2iXOdg/ymcX
H+vrnq4X+cKEqkO/sd4g9oWBuE7GTy+GsC8U/zefHW3Iw77Q59M7+prJx75A
v2Iup7Xohy+cYA4qX4kksC+8Gb/C0UD9KfIFJ6u9YbviCGi57RX9omEW1iUp
RhkrEjBck+9XVjsHk3XUq1Vono+Jys5+0SGE2poXpjP6PFDx1gx6cojGWLji
d8bG3iHsE2+Y7uvWHu/E+XA6H2ObLxZW43y4nMhE65fMH57QGJn06yEaB3vA
QY1C3RuxXOwBzhomekMdPOwBu87fND9Ryge5VpeToSoCsPikbcGwJcD+cVWF
pyoJf8dLJiij/ltOj7jUpE0BNeK2qBD1b+Y93dERo1l4WJd+udmVgJiBMufx
7XNwgRP6yKCJD1M+2XaHTITgNrTEUfElD3uDpg5XKWdbM85vs4tYrG62rAH7
wvecSUX14xzwj7Xo+9I3A7otCgU2uuh8UpJh78oVgFdJd25uGgHb2pdm+A2T
UFFsoKLJImC/R7LlPzMUbJT5uLP0DIF9wm1nUb9xdxWwqOPii48IYFxC+R3X
nwD6Szbd/zAJS/8csRsvI+CLk8B3uT8FRWc1w7LR/CXyDAOJgc9bszjYMxQ/
WSvf5kzXYy8wVDMsVhzEXuCV1REZxxrCXqBvfk7ziDoPe0HIkp+VPdB4FnmB
Y/xmSWvaDy+QH+EPmkYQ2AvMYm8lX0PfJ/ICk6d7C+hJBIwkny/XKp1F++Mz
GuVrCGg7QpyuvTcHRYuZ8wM8+JAf+ucpqkoIZYrybi5/8MC1ZahD6Ehj2HS+
ndc7MYS9YRlHcKrOogvnn71i3l+lfKoW558F/mbTFpbShH2gLbrDeXRiAJ/v
Szk3xBKCufh8/8ztaOuXRzx8vieYSVc35aLz5KNk89SlAigMUeoQsyBg/az/
wTtyJBhEyHJ+zUf9S/OULllJgdul05XdDwi45ti1W2PDLGQdD2AzPFD7vO24
YK49B9cbF0kKn/GhR37Q0WezEFi8I3VagzzsB8OGo5Mpqi04n4z3RGjd9rIO
e0H6tsRjQlcOLAy/+ki2ewZCZfbS2zXQfuSz3fz0HgEoJg+XX7tFQGPF5FqX
tyQwNRL5o6j9d8hvLlhOULDahmfVc57A3iAnk/PIyu8RWIwV9qvbCGCFUcgY
6U3AoPT1mpL9JGiutW3WRN8TYvb+2zw3CqYjmto10PeKfKJ7r5lSaTwHfj78
dJ8CSwDnOl1cQ2MIYMdWbdzCImFSb4vhcTS/iPwihFHeVdL3CC5fnCezYQsJ
5lbm7CdFqL1Us+e9BQrGmsIWaBUTUPqPtsIlkgSVLl89WbS/Mk5c4bXlFAnr
k0/uOPaQgGO+8sPrwykY7jeuasok8P3ZNvYyj5QiDvaQiIq4D66fp+tF3lC3
4yH36eJB7A3yH6y/16D1R+QNXe0moSxlHvaGuuHOCnkdPvYGpcslvzUL+Ngb
wv9WWnLtAoG9QSpAJUwZtbfIG6ILcvQckwmgyUe3OhbMQiClPd9KnQBW9ZVA
4xy0PuZZ6dFO8GFzUMO7pWVCyOX1O0zu50Ho1yf+ynY0hnLxUGTc7BD2Cida
Ai+6rgvne9EXVPvQ7epwvlfmtWv1r3Y1YV94ev7Q9+zhAewD9oE6xdPHudgH
pO6ye11KedgHDmT8p38qnQ/TDwyq1ksJoG2BylTz72i+SXmu2yJNQqD196zU
PAIOBzo8V5WjYIsaNV6P5h9xXcWvLWtmwaPjiVufFwEdNj2JwevmIC/5/ZYW
Nh+avcOdv2gKodOMlbh8hIf9wfXgk6cpyS04f4u8Epk6oV6HvUEsRfa9owMH
bM+qq6U3z4Bc9wanj2vR/H71YU9NtwBWK8/75P7v/3u1uLxXz0kQpk09/hXF
W+XoOZvyDxRIuUW1tl0ksFeYHpeq+rOxEpL5pntY5gLQMNvSdMSTgK67n2Ke
mZOwtaIjVKuUAMbj7spAezReqjIfPy0gcD7WnjNj752jOUDNU1c3uC8Au8mm
UOloFN+S974WFqP57nmm9AH0fJF/5Ngv7eE0VcGJNS4cMy0S3se5iQffI8A6
Nb7JQp+C699V4gPuExBg/cs76gsJYrt6N+WjeF+/OQj2e5PwYb9/dgXaf2pz
JYsyQyiYlZTXrr9N4PuyFga/xfre4YDK9+igxDQUf0+zqrko/nqvBJptW0fB
2WAf71b0PXMg5sYfIKEAjKSSUD3lq8OPdSLB4t7tQ/Ko/5YotfvU15Pg8SXB
0xe9v8hn9r+sqR6bqoTPh7fbLhWnIF/eVNsVjT/76frE5WdIYPiqblqE3lfk
N4YRvkG1ZRzsN/cdLproT0zXi3xk/nVu7esFg9hHMuN2HjTLGcI+wtRVS3ir
wMM+slbuo7inNh/7yHbxhwunpvjYR7JqSg3U0Xwm8pGksiZWH3ofkY8scfmF
CkghYCGb/sIvdxZkP648mbT+3/a0nxbPnIOZNWHytf58EHwbi1lxXwjPjSR1
Ku15IHN1U5uWLY0hIPnBnmI/fKUuccHEge9dON/KyKPB9k17Hc63olveV3VU
aMIeYja1s17AHcCe4ap7dvkaTy72DP3MMQOZIh72DAntRX+9TuFD+n2JiQlx
Aby/VL8+g4n2Z8NzaWwpEg6yJaQ6c9H+TOdV6YclFDTSA3ZvRPFRn85oT1g1
C5PhnmtyfQh4TXfKjFWZgxe3nLtvv+GD0c39feVqQljsvq/z/AQPe4kYFVFM
vW7B+VMP+P3s9le12EecHnqY/HQAxXvQlLP74xkolBHkeagQYPH2I6OzA50P
ZKOW/ZGI9od8l/boThJMor58ZqL48Xe4o3nhHQXXZCzntl4isK/Efl2Ucder
EhhD8uF/mwrgr00XjeOPEvBEoED2mZJgta/X5Q7an90+w0zWsaFAfPibX3wh
gfOhWJ8SIzZGcmDc0vYG864ALsoYZnRFoXhuXMt2LyThQmqh/k70fJHXlOn1
bWrRr4bDflHmDhokxPkczexG+8HyA9J5UroU3HRKXUZHz3sjfauWNUpCNW+v
12cUP8oX7hQc8iBhfHXuKxvUvjFZYdGOgRSMnMlTKs8m8H3YjJodMzY5HAgv
lXC0ukVCWNru4Ro0voxMxjW/raYg/BL1eg9aP13JkJ3Z70kwsm3c2oLqx+tc
rbPsSHjmf47IRvV+PTv2Blej+pVHb5xE7y/ypDf5NFU3L7Q+/1Kh3ylE/V8k
c6oKjT8L5iht3V8krJrYKFuLyiJv2rZ6LL+ohANm6jMrW2NIKOt83mmHnrfO
z+cnBTYJCv3DcsvQ7xvs0V02/oCEfne9w+6o/PPNO4Id/96DTcs67YK+v2Hb
8qR/skhI+HpKZhGqTw2/ek6LS8KO+g7bw+j3ig9aRok3kbAhJrLhKKoX+VYO
2RhnH16J77dmKST2dlRwIMBMV9iH1nPa//+CVoHxOqEYQ1QW+ZeoLDr/i8r/
AzWd4vY=
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{1598, 1597, 378, 379, 380, 381, 382, 383, 384, 385, 
            386, 387, 388, 597, 539, 491, 453, 426, 411, 610, 552, 504, 466, 
            439, 622, 564, 516, 478, 389, 598, 540, 492, 635, 577, 454, 627, 
            569, 648, 521, 640, 582, 652}}]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{1598, 1600, 399, 654, 585, 643, 527, 575, 633, 479, 
            517, 565, 623, 441, 468, 506, 554, 612, 414, 429, 456, 494, 542, 
            600, 398, 397, 396, 395, 394, 393, 392, 391, 413, 428, 455, 493, 
            541, 599, 390, 440, 467, 505, 553, 611, 412, 474, 512, 560, 618, 
            427}}], 
           PolygonBox[CompressedData["
1:eJwV0kdszQEcB/B/KymxghrlQs1DlSBBUEQJsfvaC6q0Nt26iJEKGkRir4u9
LmY52NTFKg5WSmLVuljFwajP//DJ9/v9vf/Le8l78Vl5kdzoIAiiqCFDGRYT
BEks0csopYRiilhMIQXkk0cuOWSzh+Pc5BMdfEAai/TzPOQXPdwy2a0fo4qP
tHdLZaF+jgf8pLvbTHbpz6int72Ao3ojOZBCbtgfiNMj4TN6czmUMl7YDWQ/
cqi0m8jBFHPfHiGX8UNfI7sxg532RjmacpqyjiGU8NTr62Uyy/lnr5W9mM8R
e4McxUoaUsEACrju9eFyKe/11bIdKeH77TFyFc1IopTn7iPlCqLpSzZn3RvL
QRRRbdfRVc9gh/6EvyTa8zisx8j+5HPNfkdbfXL4jF5DlN4n/F05Y9/jO13s
6WzXH/OHnvZcDulXqaWNPSm866e5yzc6u6WzTT/IFd7S2m0ic/RT3OEr8W7T
2Kof4DJviHWbwGx9FllksoX9XOI1rTwzPvxv6Se5zRc6uU1ls76Pi7yipdu4
8L+gn+AWn+noNoVN+iN+kxB+X/bqF3hJC3ss/wGoMm46
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1Hl8z3UcwPGdQtmwpcM2qaQsplELpSY6tLKtYW3rogPVViFKoRzl6KDS
oaL7cnfrEF2KLlcH5eigkCtKOXq+H/547vX5fPZ77Pf5fL+fx5r2qimtTkxI
SLjEj2gtP97XUVTRiTYkkUwKqfE5DqI2dajLwRxCPdJIpz4NaEgGmRxKIw7j
cI7gSBqTRTY5NOEomnJ0fJ+9zdPRsV/Ooi3HxD787gO9i0vpzMnxXda/0Ae5
lhKOjT1bn693cxldOCX2Zf1LfYjrKKVZnM/6Ah3D5Zwde7P2nU7hZgriTNa+
0klcz0Ucb22NvsBQjotnZe1DHcsV5Jmv1xmcE2c2/16nMohTzbfqmzGO52b+
tT5MofFurY53Zbwxvlfn6HnxXikzPkHXarG+GGfWvVquw/Q0/Uu76zt6viZT
SfN4t/qRXqjj9Az9W3tqL22tG+KZ6cw4h+7Xc+P9Gf+gT8V7M/5PB9POeJu+
FeO4C+bf6CPUxPs136Svxr5oYb5OX2J4PNu4b9Y+1vH0jjPHnbC2Up/mFtrH
HbO2RB/lBnrEMyHN+id6D1fSNe6ItVX6DLfSIe6ntaX6GDfG/TLfrK/FMyDX
/Gd9mTtir6Rb+1Tv5SpOMv9dZ8Xzjbtl/qM+G3fWeI8Oif0ab9e3472QZb5M
J9PJ+F+9Ke6s8Z9apq/H3jWJCsrNT9RftERfiXur+/RivVNP153xLPRdLdIU
qsg1r68LtZvep2fqP3o1+cZ/6Ox4x/HPg6K43/qTPsdt8ezMd+jc+D6yzZfr
4/SnwHyLvhH7oqX5rzqNEXEGGlj7TO/nGi6gubXV+jy305Ecayv0CQZQEX+P
htY/1wn0iTsc95dWZPjdIp1I3zhrnJM8Wsc7I9NnFusD9KOYQppY/1afZCCV
8Tet/abTGRn7Mt+l78W+jVMTD/y/zTf/H9YDkwM=
           "]]}, Annotation[#, "Charting`Private`Tag$1561820#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV03e8jmUYB/D3nERUCJlRFMneo4gyK8Ihyc4mW7KPfY51jlEUpSK7jIhQ
dvbIlq3sbNkjvvcf3/f6Xdfzvp/3fu77ebI36xTTMSoSiRT10Zh3oyOR1JyQ
l/MdLfV5uS/vYwwf6V/kiryZeTThPbPn+Fv+je8ZS32zl7gqb2E+TalmloZ/
5N+Zwjg+phnNaUF130nLSXkFU/mcBmbZuSZvZUFYL++bpeOUvJIf+IKGZjm4
Lm/jZ1pRw+x5TsurmBbm+nw8kPcznkb6l/lP3s5CPtEXJorD+tbUlNNzRl5N
Z7kESZkevqPm56F8gAlh//WvcEPewafy66Rgkb69WoRoYqnIEfMealmeZRBV
aWNeS83AEM7qe6vlWSN3UUsSTzL6U4mRzHC9jVqAOP7X91MrMIK/9J+pZRjO
MwykCgl8GZ4FNSdDuanvq77Nn3J39Q2e5hd9B7UoT3BU31N9k5S01ceoGTkn
r6WrXIqnmKlvqxbkkXyQr8Kzpc/FLXkni2lHbbNMnJfXMYuJ4Xkze5Xb8i6W
hHOljllm/pX/YDaTwlmEdRNenk7hfMOehrXRLZxduM+wT+F8wj3Ri7JJnYPa
J+xJ2Fdi6c8ABjKIwQzhA/+dhQvyeubwdXg3zHJzR97Nr2Et+mIk4Zh+KHXl
F7gY/lN9iw1hjWpphpGcAVRmVNh7a/wx7JdciAiH9N+E91F+jbvyHpYSx4dm
Wbkkb+QnJhPPMIYzgpGMIoFE6vlNNi7Lm5jLt7Qwy8M9eS/Lwj7ri/Mkx8N+
quVIxWDeIZHRrj0Gdb+aRQ==
           "]]}, Annotation[#, "Charting`Private`Tag$1561820#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1HmATlUUAPBvRqVNKalkKSUtqGghIYoWFVFKJi0KlcyobCEklN1sxhIz
lLSpLA2imtaxFbLNosXSJhRlF37nj993zj3vvvfuu995r3qntLapSYlEIsXP
uOREYkaZRKITV3LYeCNfMJ50Msgki2wm8Ia5T1CLI8ZFfEkOb6o9SW3+Ny7m
KyYyU60zdThqXMLXLDTuS1POYqfaJN6Sd+EqjhmX8g2LjF+kGWezS20ys+Rd
uZoEm9S+5RN5P26hAn+rTeFt+VNcQxI/xnxxOK24kEK1xWJ/buUc1pJJCv84
vlIczf1cyutq74hPU5dk1pDOQ/zkeKH4Kq1jnXEOF7GBCTzCz+Sy1Pwl4gC2
0JxSpvAbFVlHFtt4OO7BNP5gt/O/E8ewlXbxrEzld2pSxER+5TF+IS/mOPdd
8RnqUcJkyvADGXSItZq3VHyNe6nORnJ4lGWOfyq+RAvOZT3ZdGSP49+LY3mA
y2L9au+J3biWE2JdasvEEbThYparfSYO5DbO41+1XN6XP8t1nMhmtRV8Lh/E
7ZzPf2p5zJZ353pOiv2O/5fpfGCcyg2Ujb2MfY13KN6J6P3o8ejb6MXor+iD
2L94jlhLXD+uw4d8xBzmxtj10qjPyfE/xn4wL+YZ96ABp8R/pLaKAvlg7qAS
e9XmxzXlz3Ejp0aPqK2O91r+MndyAfvUPo77y5+nIadFT6gtF0fSlkuif+Md
F4fQksrsj3WI43iQy8mPNYsvcBOnRw/GnoujuI8a0TvxXRBf4S6qcEBtQTyD
vCeNKMefamvjWyEfyt1U5WB8O+IZ5L1ozBlsV1sX3wnyjXvThDP5S219fBPi
vY73Kvoy+id6Iu5vTh9upjw71DbEd0c+jHuoxqHYU3E87bmCYibxePQZ02Pt
FJh7HDS1yAQ=
           "]]}, Annotation[#, "Charting`Private`Tag$1561820#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV0Xe8T3UYB/Bz3UtCCiFkZ2SlzJKRRMPq2qMUEcm9GYXIjEJWKhllVUb2
XmVUViErZGfPi2vLeH//eP8+55zP8/qd73k9eVsmxifERFFUwM+Z2Cg6HBdF
C/icFpTncc7qznGeCyRxkUtcJpkj5hYyiLd4lpxc0f0nFzGYt3mOXFzVHZWL
GUJLKpCba7pjcglf0IrnycN13XG5lKG8Q0Xy8j9b+YEe1OeG+RNyGcNoTSXy
cYe/+ZGeNOCm+ZNyOcNpQ2Xyc5dt/MQnNOSW+VNyBSN4lyo8wW3dabmSkbTl
BQqEs+rOyF/4knZUpWA4l+4u9zjr/ldG8R4vUoh7bGcqvWhExDlW8RXtqUbh
0KWMoh1yGr1pTAznWc3XvM9LPBk68zvldPrQhBRcYA3f0IHqFAmd+V1yBn1p
SixJrGU0CdSgKHFc5De+JZGXKUZKLvE7Y/iAVyhOKi7zB2PpyKuU4AFS8yBp
SEs6HiI9D/MIyaxjHJ14jafCeX3DP/Jn+tGMDFxhPePpHP7f3H45L7zD9cHw
DlkznEH+K+cwkJLhWz3bLWfSn+Zk5Cob+I4u1OJpMvEombnGRr7nQ2rzDFm4
ziYm8BF1KEVWbvAnE+lKXUrzGDf5i0l043XKkI1bbGYy3YmnbNiJb9gjZ/Ep
b5Cd22xhCh9Tj3JhT+b3ytkM4M2wG8/2ybl8Fnbk/oCcH/bk+lDYk8wh7wMb
OZtT
           "]]}, Annotation[#, "Charting`Private`Tag$1561820#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV0neg1WMcwOHTHtJtl5Jc0lQaihRtpb2JBklLGlTKalDaFE1t2pOitAuh
lGgqTZEmLWkYz/eP537e93vPPefc9/0lt+vepFuKRCJR0o+kNInETb5kHN1p
QlWykJVsZCcHOclFbvJwG3nJx+3k5w4KcCfJ3MXdFOQfvmI8PWhKNe7hX7Yw
gZ40ozq3pk0k9ugcBvAshfiPr5nIizSnBpm9fq/OZSDtKUzC/BudxEu0oCZJ
5vt0HoN4jiKkMP9WJ9OLx+P/NTumnzCSR+OczPbrfN6kQ5yB2W+6kjEUJaXZ
Vv2A3nEu9qd1DU/EOdof1+WMolacv9lPuoC34pzsz+l6OsY525/UVZS0/kvH
xve3/lM3Ucb6uhYjlfU2vV+naHG9pA9qn7gnPaPlda3ep1f1IW0Z96y/aDld
oSX0ilbQ0XHO+oc+oBu1tF7T2vEcWR/QhdxrfVkHx11an9cNdIrnxv53/Zz3
4uzsL+jm+L6ktv9Op/IyT8azZ3ZCP+UdHiO72UFdxBA6x+eSxny7TqMvT1GH
HOY/62Lepkv8f6Q136HT6Ucr6pLT/JAuYSjPxx2Qzvx7ncErtKZenCXp/W6n
zuRV2lCfUnFWcVeUjfuJMyaD1/+gs3iNtjQgl/lhXcowusadkdH8R/2Q1ylo
f1bXxWdY/60V9WnNr7/qZ7xLQ3KbHdFlDOeFuEtuMd+lH/EGz9Aonpu4+3g+
4n2pxMM8QmUy+bvdOpv+tKMxecyP6seMoBvJZqd0Ne9TzP6ifhFnYn0j3l+r
6P+v7o5D
           "]]}, Annotation[#, "Charting`Private`Tag$1561820#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"LQR feedback solution\"", TraditionalForm], 
     PlotRange -> {{0., 3.12499993622449}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1c\"", "\"u1c\"", "\"x1c\"", "\"\[Theta]dot1c\"", 
       "\"xdot1c\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.863702134579542*^9, 3.8637021627135525`*^9}, 
   3.8637025210160646`*^9, 3.863702578124817*^9, 3.8637026714539957`*^9, {
   3.8637027226726294`*^9, 3.8637027640764*^9}, 3.8637029884806967`*^9, {
   3.8637033266226506`*^9, 3.8637033354478307`*^9}, 3.863879327529692*^9, {
   3.863884217207935*^9, 3.8638842652235885`*^9}, 3.8638842967265196`*^9, 
   3.8638860360506268`*^9, 3.8638906095889077`*^9, 3.863890848019706*^9, 
   3.8638910663699183`*^9, 3.863891132659732*^9, 3.8638911691100826`*^9, {
   3.8638913595922036`*^9, 3.863891384033392*^9}, 3.8638926082491283`*^9, 
   3.864131525163704*^9, 3.8641416796563787`*^9, 3.8641431254604692`*^9},
 CellLabel->
  "Out[3609]=",ExpressionUUID->"657363ae-f808-46ce-9153-03b58f122ea9"]
}, Open  ]],

Cell["\<\
Understand the performance of the functions wrt random initial conditions\
\>", "Text",
 CellChangeTimes->{{3.863702871824973*^9, 3.86370289295422*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"b6d5a503-f5ca-471f-9280-ef8cf6caad0d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ffCartPendulum", "[", 
   RowBox[{
   "ICs_", ",", "n_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "A_", ",", 
    "order_", ",", "maxIter_", ",", "InitGuess_"}], "]"}], ":=", "\n", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x", ",", "data", ",", "xdot", ",", "f", ",", "\[Theta]", ",", 
      "\[Theta]dot", ",", "\[Lambda]1", ",", "\[Lambda]2", ",", "\[Lambda]3", 
      ",", "\[Lambda]4", ",", "\[CapitalDelta]t", ",", "bcs", ",", "eqns", 
      ",", "sv", ",", "froot", ",", "xff", ",", "xdotff", ",", "xff0", ",", 
      "xdotff0", ",", "\[Theta]ff0", ",", "\[Theta]dotff0", ",", "uff0", ",", 
      "\[Theta]ff", ",", "\[Theta]dotff", ",", "uff", ",", "\[Lambda]1ff0", 
      ",", "\[Lambda]2ff0", ",", "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", 
      "expr", ",", "uMin", ",", "uMax", ",", 
      RowBox[{"xGuess", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         SubscriptBox["xGuess", "i"], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"\[CapitalDelta]t", "=", 
      RowBox[{"\[Tau]", "/", "n"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"{", 
        RowBox[{
        "x_", ",", "xdot_", ",", "\[Theta]_", ",", "\[Theta]dot_", ",", 
         "\[Lambda]1_", ",", "\[Lambda]2_", ",", "\[Lambda]3_", ",", 
         "\[Lambda]4_"}], "}"}], "]"}], ":=", 
      RowBox[{"{", "\n", "\t", 
       RowBox[{"xdot", ",", "\n", "\t", 
        RowBox[{
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"A", " ", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
         " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"A", " ", 
            RowBox[{"\[Theta]dot", "^", "2"}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
           RowBox[{
            RowBox[{"1", "/", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"A", " ", 
                RowBox[{
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
              ")"}]}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Lambda]4", " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", "\[Lambda]2"}], 
             ")"}]}], "+", 
           RowBox[{"A", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", "\n", 
        "\t", "\[Theta]dot", ",", "\n", "\t", 
        RowBox[{
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"A", " ", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
         " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{"1", "/", 
               RowBox[{"(", 
                RowBox[{"1", "-", 
                 RowBox[{"A", " ", 
                  RowBox[{
                   RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
                ")"}]}], ")"}]}], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "\[Lambda]2"}], " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
              RowBox[{"\[Lambda]4", " ", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
             ")"}]}], "-", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "-", 
           RowBox[{"A", " ", 
            RowBox[{"\[Theta]dot", "^", "2"}], " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", "\n", 
        "\t", "0", ",", "\n", "\t", 
        RowBox[{"-", "\[Lambda]1"}], ",", "\n", "\t", 
        RowBox[{
         RowBox[{"2", "/", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"A", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A", "-", "2"}], 
            ")"}], "^", "3"}]}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"4", " ", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"A", " ", 
                  RowBox[{"\[Lambda]4", "^", "2"}], " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
                 RowBox[{"4", " ", "A", " ", 
                  RowBox[{"\[Lambda]2", "^", "2"}]}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"A", "+", "2"}], ")"}], " ", 
                  RowBox[{"\[Lambda]4", "^", "2"}]}]}], ")"}]}], "-", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"A", " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "-", 
                 RowBox[{"3", " ", "A"}], "+", "2"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"A", " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A", "-", 
                 "2"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"A", " ", 
                  RowBox[{"\[Theta]dot", "^", "2"}], " ", "\[Lambda]2"}], "-",
                  "\[Lambda]4"}], ")"}]}]}], ")"}]}], "+", 
           RowBox[{"A", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"A", "-", "2"}], ")"}], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A"}], ")"}], 
            " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"A", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A", "-", "2"}],
              ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"\[Lambda]2", "-", 
              RowBox[{
               RowBox[{"\[Theta]dot", "^", "2"}], " ", "\[Lambda]4"}]}], 
             ")"}]}], "-", 
           RowBox[{"4", " ", "\[Lambda]2", " ", "\[Lambda]4", " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"3", " ", "A", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
              RowBox[{"3", " ", "A"}], "+", "2"}], ")"}]}]}], ")"}]}], ",", 
        "\n", "\t", 
        RowBox[{
         RowBox[{
          RowBox[{"4", " ", "/", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"A", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A", "-", "2"}], 
            ")"}]}], " ", 
          RowBox[{"(", 
           RowBox[{"A", " ", "\[Theta]dot", " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{"\[Lambda]2", "-", 
              RowBox[{"\[Lambda]4", " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}]}], ")"}]}], 
         "-", "\[Lambda]3"}]}], "\n", "}"}]}], ";", "\n", 
     RowBox[{
      SubscriptBox[
       StyleBox[
        RowBox[{"x", 
         StyleBox["Guess",
          FontWeight->"Plain"]}]], "0"], 
      StyleBox["=",
       FontWeight->"Plain"], 
      StyleBox[" ",
       FontWeight->"Plain"], 
      StyleBox[
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ICs", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "3", "]"}], "]"}], ",", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "4", "]"}], "]"}], ",", 
         RowBox[{"InitGuess", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"InitGuess", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"InitGuess", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"InitGuess", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "}"}],
       FontWeight->"Plain"]}], 
     StyleBox[";",
      FontWeight->"Plain"], 
     StyleBox["\[IndentingNewLine]",
      FontWeight->"Plain"], 
     RowBox[{
      StyleBox["xGuess",
       FontWeight->"Plain"], 
      StyleBox[" ",
       FontWeight->"Plain"], 
      StyleBox["=",
       FontWeight->"Plain"], 
      StyleBox[" ",
       FontWeight->"Plain"], 
      RowBox[{
       StyleBox["Table",
        FontWeight->"Plain"], 
       StyleBox["[",
        FontWeight->"Plain"], 
       RowBox[{
        RowBox[{
         StyleBox["If",
          FontWeight->"Plain"], 
         StyleBox["[",
          FontWeight->"Plain"], 
         RowBox[{
          StyleBox[
           RowBox[{"i", " ", "!=", " ", 
            RowBox[{"-", "1"}]}],
           FontWeight->"Plain"], 
          StyleBox[",",
           FontWeight->"Plain"], 
          StyleBox[
           RowBox[{
            SubscriptBox["xGuess", 
             RowBox[{"i", "+", "1"}]], " ", "=", " ", 
            RowBox[{
             SubscriptBox[
              StyleBox[
               RowBox[{"x", 
                StyleBox["Guess",
                 FontWeight->"Plain"]}]], "i"], " ", "+", 
             RowBox[{"\[CapitalDelta]t", "*", 
              RowBox[{"f", "[", 
               SubscriptBox["xGuess", "i"], "]"}]}]}]}],
           FontWeight->"Plain"], 
          StyleBox[",",
           FontWeight->"Plain"], 
          RowBox[{
           SubscriptBox[
            StyleBox["xGuess",
             FontWeight->"Plain"], "0"], " ", "=", " ", 
           RowBox[{"{", 
            StyleBox[
             RowBox[{
              RowBox[{"ICs", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"ICs", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", 
              RowBox[{"ICs", "[", 
               RowBox[{"[", "3", "]"}], "]"}], ",", 
              RowBox[{"ICs", "[", 
               RowBox[{"[", "4", "]"}], "]"}], ",", 
              RowBox[{"InitGuess", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"InitGuess", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", 
              RowBox[{"InitGuess", "[", 
               RowBox[{"[", "3", "]"}], "]"}], ",", 
              RowBox[{"InitGuess", "[", 
               RowBox[{"[", "4", "]"}], "]"}]}],
             FontWeight->"Plain"], 
            StyleBox["}",
             FontWeight->"Plain"]}]}]}], 
         StyleBox["]",
          FontWeight->"Plain"]}], 
        StyleBox[",",
         FontWeight->"Plain"], 
        StyleBox[
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"-", "1"}], ",", 
           RowBox[{"n", "-", "1"}]}], "}"}],
         FontWeight->"Plain"]}], 
       StyleBox["]",
        FontWeight->"Plain"]}]}], 
     StyleBox[";",
      FontWeight->"Plain"], "\n", 
     RowBox[{"bcs", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"x", ",", " ", "0"}], "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"xdot", ",", " ", "0"}], "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"x", ",", " ", "n"}], "]"}], "==", 
         RowBox[{"Subscript", "[", 
          RowBox[{"xdot", ",", " ", "n"}], "]"}], "==", "0"}], ",", 
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"\[Theta]", ",", " ", "0"}], "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"\[Theta]dot", ",", " ", "0"}], "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "4", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"\[Theta]dot", ",", " ", "n"}], "]"}], "==", "0"}], ",", 
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"\[Theta]", ",", " ", "n"}], "]"}], "==", "\[Pi]"}]}], 
       "}"}]}], ";", "\n", 
     RowBox[{"eqns", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Join", "[", 
        RowBox[{"bcs", ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Thread", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
               RowBox[{"Subscript", "[", 
                RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], "==", 
             "\n", 
             RowBox[{
              RowBox[{
               RowBox[{"1", "/", "2"}], " ", "\[CapitalDelta]t", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"f", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}], "]"}], "+", 
                 "\n", 
                 RowBox[{"f", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], 
                  "]"}]}], ")"}]}], "+", "\n", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"x", ",", " ", 
                  RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"xdot", ",", " ", 
                  RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]", ",", " ", 
                  RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]dot", ",", " ", 
                  RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]1", ",", " ", 
                  RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]2", ",", " ", 
                  RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]3", ",", " ", 
                  RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]4", ",", " ", 
                  RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}]}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
       "]"}]}], ";", "\n", 
     RowBox[{"sv", " ", "=", " ", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", "\n", 
            "\t\t\t\t\t", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "7", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "8", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", "1"}], 
       "]"}]}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"froot", ",", "data"}], "}"}], "=", 
      RowBox[{"Reap", "[", 
       RowBox[{"FindRoot", "[", 
        RowBox[{"eqns", ",", "sv", ",", 
         RowBox[{"MaxIterations", "->", "maxIter"}], ",", 
         RowBox[{"EvaluationMonitor", ":>", 
          RowBox[{"Sow", "[", 
           RowBox[{"Norm", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               SubscriptBox["x", "n"], ",", 
               SubscriptBox["xdot", "n"], ",", 
               SubscriptBox["\[Theta]", "n"], ",", 
               SubscriptBox["\[Theta]dot", "n"]}], "}"}], " ", "-", " ", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], "]"}],
            "]"}]}]}], "]"}], "]"}]}], ";", 
     RowBox[{"xff0", "=", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", 
     RowBox[{"xdotff0", "=", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", 
     RowBox[{"\[Theta]ff0", "=", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", 
     RowBox[{"\[Theta]dotff0", "=", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", 
     RowBox[{"\[Lambda]1ff0", " ", "=", " ", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", 
     RowBox[{"\[Lambda]2ff0", " ", "=", " ", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", 
     RowBox[{"\[Lambda]3ff0", " ", "=", " ", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", 
     RowBox[{"\[Lambda]4ff0", " ", "=", " ", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", 
     RowBox[{"expr", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"Subscript", "[", 
              RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}], "^", 
            "2"}]}]}], ")"}]}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], 
          RowBox[{"Cos", "[", 
           RowBox[{"Subscript", "[", 
            RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}]}], "-", 
         RowBox[{"Subscript", "[", 
          RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}]}], ")"}]}]}], ";", 
     "\n", "\n", 
     RowBox[{"uMax", " ", "=", " ", "2"}], ";", "\n", 
     RowBox[{"uMin", " ", "=", " ", 
      RowBox[{"-", "2"}]}], ";", "\n", 
     RowBox[{"uff0", "=", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Piecewise", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"expr", ",", 
                RowBox[{
                "uMin", " ", "<=", " ", "expr", " ", "<=", " ", "uMax"}]}], 
               "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"uMin", ",", 
                RowBox[{"expr", " ", "<", "uMin"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"uMax", ",", 
                RowBox[{"expr", " ", ">", " ", "uMax"}]}], "}"}]}], "}"}], 
            "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
     "\n", 
     RowBox[{
      RowBox[{"xff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xdotff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "\[Pi]"}], "]"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"uff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"uff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\n", "\n", 
     RowBox[{"{", 
      RowBox[{
      "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
       "uff", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
       "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "data"}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.863893336562357*^9, 3.8638935104547806`*^9}, {
   3.863893544100028*^9, 3.863893549383339*^9}, 3.864135408269006*^9, {
   3.864142771556004*^9, 3.8641427819726334`*^9}},
 CellLabel->
  "In[3431]:=",ExpressionUUID->"af3ea33d-8e3a-4566-b4c0-08bbf9c4fe8b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  StyleBox[
   RowBox[{"n", "=", "20"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  RowBox[{
   StyleBox["\[Tau]",
    FontWeight->"Plain"], 
   StyleBox["=",
    FontWeight->"Plain"], "5"}], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Tau]1", "=", 
    RowBox[{"\[Tau]", "*", "1.25"}]}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"A", "=", "0.2"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"order", " ", "=", " ", "4"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"maxIter", " ", "=", " ", "100"}],
   FontWeight->"Plain"], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotMin", " ", "=", " ", 
    RowBox[{"-", "1"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotMax", " ", "=", " ", "1"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Min", " ", "=", " ", 
    RowBox[{"-", "\[Pi]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Max", " ", "=", " ", "\[Pi]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]dotMin", " ", "=", " ", 
    RowBox[{"-", "1"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{"\[Theta]dotMax", " ", "=", " ", "1"}],
   FontWeight->"Plain"], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"xdotMin", ",", "xdotMax"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Init", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]Min", ",", "\[Theta]Max"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]dotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]dotMin", ",", "\[Theta]dotMax"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"ICs", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "xdotInit", ",", "\[Theta]Init", ",", "\[Theta]dotInit"}], 
    "}"}]}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"InitGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.1"}], ",", "0.1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.1"}], ",", "0.1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.1"}], ",", "0.1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.1"}], ",", "0.1"}], "}"}], "]"}]}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"InitGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
       "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
       "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "data"}], "}"}], "=", 
     RowBox[{"ffCartPendulum", "[", 
      RowBox[{
      "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", "order", 
       ",", "maxIter", ",", "InitGuess"}], "]"}]}], ";"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1b", ",", "xdot1b", ",", "\[Theta]1b", ",", "\[Theta]dot1b", ",", 
       "u1b", ",", "J1"}], "}"}], "=", 
     RowBox[{"testSwingUp", "[", 
      RowBox[{"ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "u1a", ",", "A"}], 
      "]"}]}], ";"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x1c", ",", "xdot1c", ",", "\[Theta]1c", ",", "\[Theta]dot1c", ",", 
      "u1c", ",", "J"}], "}"}], "=", 
    RowBox[{"testWithFB", "[", 
     RowBox[{
     "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
      "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A"}], "]"}]}], 
   ";", 
   RowBox[{"p1a", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1a", "[", "t", "]"}], ",", 
        RowBox[{"u1a", "[", "t", "]"}], ",", 
        RowBox[{"x1a", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1a", "[", "t", "]"}], ",", 
        RowBox[{"xdot1a", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1a\>\"", ",", "\"\<u1a\>\"", ",", "\"\<x1a\>\"", ",", 
         "\"\<\[Theta]dot1a\>\"", ",", "\"\<xdot1a\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Feedforward solution\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"p1b", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1b", "[", "t", "]"}], ",", 
        RowBox[{"u1a", "[", "t", "]"}], ",", 
        RowBox[{"x1b", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1b", "[", "t", "]"}], ",", 
        RowBox[{"xdot1b", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1b\>\"", ",", "\"\<u1b\>\"", ",", "\"\<x1b\>\"", ",", 
         "\"\<\[Theta]dot1b\>\"", ",", "\"\<xdot1b\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Test on dynamics\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"p1c", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1c", "[", "t", "]"}], ",", 
        RowBox[{"u1c", "[", "t", "]"}], ",", 
        RowBox[{"x1c", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1c", "[", "t", "]"}], ",", 
        RowBox[{"xdot1c", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1c\>\"", ",", "\"\<u1c\>\"", ",", "\"\<x1c\>\"", ",", 
         "\"\<\[Theta]dot1c\>\"", ",", "\"\<xdot1c\>\""}], "}"}]}], ",", 
      RowBox[{
      "PlotLabel", "->", "\"\<Backward Integrate feedback solution\>\""}], 
      ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"p1d", "=", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"data", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"AspectRatio", "->", 
        RowBox[{"1", "/", "3"}]}], ",", 
       RowBox[{"ImageSize", "->", "400"}]}], "]"}]}], ";"}],
   FontWeight->"Plain"], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{"Grid", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"p1a", ",", "p1b"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"p1c", ",", "p1d"}], "}"}]}], "}"}], "]"}],
   FontWeight->"Plain"], 
  StyleBox["\[IndentingNewLine]",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  StyleBox[
   RowBox[{
    RowBox[{"\[Lambda]1ff0", "[", "0", "]"}], ",", 
    RowBox[{"\[Lambda]2ff0", "[", "0", "]"}], ",", 
    RowBox[{"\[Lambda]3ff0", "[", "0", "]"}], ",", 
    RowBox[{"\[Lambda]4ff0", "[", "0", "]"}]}],
   FontWeight->"Plain"], 
  StyleBox["}",
   FontWeight->"Plain"]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.863702943662017*^9, 3.863703035828568*^9}, {
   3.8637035036430883`*^9, 3.8637035037600527`*^9}, {3.863703942891737*^9, 
   3.8637039537012815`*^9}, {3.8638793561155577`*^9, 
   3.8638793562315187`*^9}, {3.863890389284317*^9, 3.8638904368171277`*^9}, {
   3.863890551127593*^9, 3.863890597328827*^9}, 3.863890716823636*^9, 
   3.8638909523833485`*^9, {3.8638911861186466`*^9, 3.863891231675086*^9}, 
   3.8638912749332604`*^9, {3.863891409492258*^9, 3.8638914236697264`*^9}, {
   3.8638935298715763`*^9, 3.863893532749655*^9}, {3.8638935699717607`*^9, 
   3.8638935749001856`*^9}, {3.8638936191810327`*^9, 3.863893634085269*^9}, {
   3.863893921803315*^9, 3.86389396796556*^9}, {3.8638940391558075`*^9, 
   3.863894080084726*^9}, {3.8638941355729923`*^9, 3.8638941356839547`*^9}, {
   3.86389427077378*^9, 3.863894270855754*^9}, 3.864132937101755*^9, {
   3.8641329740867853`*^9, 3.864132993387539*^9}, {3.86413303407837*^9, 
   3.864133049119502*^9}, {3.8641330991942964`*^9, 3.8641331354165735`*^9}, {
   3.864133240558546*^9, 3.8641332475682774`*^9}, {3.8641337526108294`*^9, 
   3.8641337885471992`*^9}, {3.8641338280264225`*^9, 
   3.8641338296229057`*^9}, {3.8641417184758177`*^9, 
   3.8641417253026075`*^9}, {3.864141818165553*^9, 3.864141824729431*^9}, {
   3.8641420479491887`*^9, 3.864142073292987*^9}, {3.864142809081861*^9, 
   3.8641428223905535`*^9}, {3.8641428662393637`*^9, 3.864142907413038*^9}, {
   3.8641429688551536`*^9, 3.8641430039408007`*^9}, 3.8641430624478636`*^9},
 CellLabel->
  "In[3574]:=",ExpressionUUID->"3024c605-13d1-4af1-8ddb-6b0488dd66d7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   RowBox[{"-", "0.2646132555114047`"}], ",", 
   RowBox[{"-", "1.4275626355595605`"}], ",", 
   RowBox[{"-", "0.3420849966999038`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8641430640893307`*^9, {3.864143094166597*^9, 3.864143104412281*^9}},
 CellLabel->
  "Out[3584]=",ExpressionUUID->"04a5e842-2400-4c07-936c-36bdbe66d939"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
NX3F5pt+8o6+3BiVzeabTkfmWkw8KmHzS6p1Bx6udu5AmF9yvXTs7gNmF8L8
kkbJo9LcdmJ8//JLRfGr/P6c7EOYXyrJWqv/awMdYX7JoXO1igYxPzG/xPPy
ZJCiEh1hfmnGg0N92KMPYX7p2pB6AFLsRZhfciwK0/a/1s32v7aUc5hueFKK
sP9Vfatq5ILTZ4T9r8eSit6c3JSKMN/0Zy/DvLLpLptvupE4k3fi8ti+/y3f
VNmZNnjlQCTbHytuGbt1ovkF2x/L5x5RWNyXxvbH6m5+q1R8lsr2xy5qfBfk
Nkhl+2NNovW/Hc7IYPtj3znmpBfWv0EcXTED4OkY2Lf/xVuV68HoXt6firlX
E4CZ1KL+ttwAxS2SfjQRxwLvNTmPMkoNQLK9p1pMyhQ4LKGwZo/ZNYR5qXB9
ibHD3fFsXupDd1F/1jSxX/zlnSTeBqq6TXUjzDsdeNxC907rRZh3Oqg5NuT7
kxjPv7xTk9R8waKzdIR5p2VHHdSLLegI807Ggi+zEnv7EOadNt73V1fu7mX7
fRfLCO9zK8pE2O97tzSh68vapwjzULutltUm17v8jzwU5p8enhncGCn+lu3/
DR+83+Q7ksH2/w4/+BSYxaSiyEtDnZ8KeoDZWa6OIVkqOn0hIldx8wRQW89K
Bfk2KBC5SSfLsMCSeWWz9FWngO7rVa+zZadAuvCNDJuf9ohLK1kvbdsMWLJl
s3uV1kOE+SfHrPsiSQ/6EOafRrjCWT5adIT5p5BKg5vLnegI80/vPsUnbBGl
s/3IO5LfZYWdfYGwH5lDpvnqu+oA9F/5KMxDqZ4TuCSXl872H2v5e39rS6Wi
xd9YSk2oC0g/3rx/5xcqKlt2pO3bRib4+Gn4SMVuBfDetJiiuYK43zwUXXRS
bzfgVqyp8Nw2DSxmGMdVZYPZfFTxI48HMRx0hPmo3IHq/gfE+QrzUTVhB2rM
j9HZfmdToXb5adFHCPNSi84nRkrln/xveamEJMuOuiNmbP/zUPzoqycm8Wz/
c++tTpVnV16z/c9vAzJzw2EG2/+celhE+fAvKtv/LDEjmj1xj8r2PxeKHX1r
k57O9j9fmTkq/jE2BaWnTYk9cxwFCks2rKcT5xXjjJWX0kPHQUJ5lsSLlV7I
OnYd74EgJvi+M+y4yOFjwNjDUVn26iSAwm/jN5kdQJi3OnjReXOy5l02bzUf
vl+yfi6ZzVutavXz2BTxic1bRcekLTs0V8zmqfjzqKrJmh0I81Q2D7SPL67t
QpinWnP6m/GSLz2IzVN5m6TLafYhzFPRfp9u6JWmI8xTPTi5e+VpZ2J//MtT
qe0125+/h44wT7Vh+5PVqrf6EOapfGjKzTd0ehHmqWiLSI+nHnWz/eDlW1dE
boBlCPvBf618ol3jmouwH/x9l7LmEuobhHmrODtnSlpjBJu3ssyU067llvlf
81aVd3KStVzvsf3i0t9faNWtfsH2iytaDcQ3eKSx/eKjdqOhVw5Q2X7xT4Ur
y6ZGqGy/+I5vmTKSPzPYfvFDPCkiG7TeorypYEHd62NgPnbCMVcnBBVdbLh1
KGQCjL9KFDwFzqCHe65Md1xngQbbGxnarYZg8ZyMcWfwFLjrtKpTycQTYX6L
Y2LliYLOJ2x+K3SH9mp7aSrC/NVDO+kC7uZuhPkrDaqLWcKDXoT5q0McOyPW
fiHG8y9/ZSlIW5A3piPMX4UFSEq7WtMR5q8MAkjnJ0f6EOavko1aLodO9rL9
70UfZ3pd3mQh7H/P7t58NMkiEWE+y8mvv73xrPv/yGdhHqupJXvD/P03bD98
3Hh5XG1VBtsPXyPhKnp4nIpa2lKz4/x7wHr38D1MNSoKE7rqeU1wAuSua3aU
sHNEvozy65HcLBBKMVgzfd8YZKp+LeHiItbTxT8pjvSLqP2iLu9usRkAevjb
voREI8xjme97X8oT3IcwjxVUoPfgAaAjzGPJcezn9ifiHfNYbYYVps+W09n+
/N+TH6WkviQj7M8nLwoO/D0ViP4rr4X5rABnt5dBYelsf/4zjYy6ilgqclle
8GuPdxcQ53k3dfYnFU0XKscsJTOBU7czl9GAJEq/vcJVcZYFKNOqawULNIEd
8u4vWDQNPlPNlLPDb7J5rXcgSMR8gnifv7zWS9rqkixifDGvlS55br++IZ1d
D+Dn+UL/Y/tjEea3okrVr99aa/Z/8VtwX9xGoQYa8A1PsbPspyKnr5tsrHl6
QKnlt5KbNlR0RcNT3a6YCeyOWkQsen4SBJ6Smo/ImwQJLg385zROs/kt+zU7
PTUU6QjzWy4bxr9FE+czXF/g8PdVOqqDdxDmufScnZ1Fxhez+S1+nw/CGleo
SCnnxPKF8U7geX89F3cPFZ2T4BfL+DoBzhplXhH9qIuedZXuIuexwKnwIkM9
bn2AeS7X6TMsZ3M6wjxXLRD1uWFGZ9cjWHkt1Dol3B5lz3o8vdnbATa+FLu3
kkVcniJX52bvZ4HMnnsXNvGdArRgk+HA3yQozBVS332Yzua7nL4Fq6x2oKNq
591u75+0g/LBQ7NrP1PRW0+FSA/ubvDn+b6GbZnE+czJQsZHhwkcOCIupi7f
Dz7vcKQaqRL7Ja2/7KjkcoB5rz9fTO9P2xPj9Zf32qw1cbfzIJ1d/yD15ri+
7qlD6L/jv3wN7jVQTI6x6yGQZpa2Aq84dj0Euesv10nKv2bXQzB74kU/Ip/B
rofAWf6mTJWIR8x/ud7JPNEQQ2XXQ3CYDuq3Kkln10Owf/x9a29DClqc45T0
6twoIJ2Pluo5fx+N8IqV/vIeB/fbqY4ngq4iq4yfyjnuTHB+VDF4QPEIEIKa
Gto2xPuTHJIfP1BDmB+LOc/jGboynM2PbV9kn/XrWDKbH+OR/9MsQvnE5sde
8+xqiEorZvNhhvIjBzQVOhDmw8yYuvkJhV0I82GZ96NmbmX2IMyHfdTS/C6+
pw9hPkw7JWTLPmK+Yz6setBSLe0/56u/fNjXP8sETIj1AvNhgpULefL3+hDm
w5Sc7pXsMehFmA871vLVXvxlN7s+hJ3sTSAWUYZwfYg/sxIFtlO5CNeHmGi9
KfnU8y3C/Ngxt/1VPzoj2fyYf5HPZodviv9rfkxz5LJpeshddv2IsjhruWcF
z9n1I7TCacsGQBq7foRZsmT8YxUqu35EonZq18IYlV0/QuOwTQWzLYNdP+Ks
+5N6H++3aCUvx+NjDmMg6Y6MqvC22+js5/I+J68JcFXzUo28uBm6f3zVZmMn
FojwULLbnGwEiopYlnweU8CDY3mHr7M7wjza5u9bY+7QH7N5NKlCgxdHqRkI
82ThESYLd753I8yTST44NeF+uxdhnqyz4RSnxmdiPP/yZOMU5snbJ+kI82Qh
N7ffWWJDR5gna3ur9sKN1YcwT7ZCoJ0UzNXHrocxdm/9QRPZ9wjXwziw86KV
EikJYd6s3shJurzc83/kzTBfZrX24jW1k2/Y9TGib6qkHC7IYNfH6LmTGnVy
lIr8loWuF73QAywCxsYGdKhog7ljfdLMOBC/Oh70gOGErnF6pJPHmWC8Ye1k
s7gxsOaKq10/QpwnNzl6cq23RJUeT2jXuGaAIp9Un9y7+wjzZWp86uOcvn0I
82XfZ6IPjBHnOcyX1Ve+vztP7H+YL0uq/GC5fRWdXa8jxKJuj47nS4TrdYTE
ZGsqJAaj/8qfYd6s2GBX7LRrOrtexxOyVtLDCCpKLHyebGfSBbzV7Tz2Euft
yKVyk3unJkDwb7trHz5tQ2+eljx/McgCjVKFkS+XHwSrg46zeuanwPadRS++
nrjB5s/mzwytvPeHeJ+//BlD+t5P8Yt0hPmzupCSXPFTdHZ9kPpCgYCPZo8R
5tFu9XxjZMpe+L94NOde/ym19zSw22XVhAWx30jwkH81dXeDOI6DqkxiP3I+
tfZyZxYT6Ll8VHkUZABU14wIfngzCWiZ3i2h+YZsHm1t1KT8Snk6wjzasOz8
7evE/ofrjSD1eU39b+EI82kRr8yEuhcJs3m06Wjxc/suUZHlBRXG1ppOwPOx
MmCaTpxPL8041n+aAFKTwvu7NI6jp1Mu1tffsoD8qn26mVdPAMyn+S3aNnDM
lI4wn9Z42mTi/Xk6uz7JRyOHn7/ynRDj2VmX90UdIMZLzXMTsf/devX9t+J2
FnjjUyx3c8MpcOzVBce8HhKcXsorXkjsR5hXa314I2OrIxE/M6eTzEzbwUGe
waU5xH7XvoZi8aqjC/iJahz9k0NFW4uNfZ+pMEHPDlPOphEV8Ong8q4KOWL9
1xM5LXFEEWB+beEQr1yjHR1hfm2qZphb6QidXQ9FyU1pGdx1HP1Xnq1m5+HY
OBcakBE+XNzQTEW2N71qK6OZwNNB4ltm03GAebYPy3cUdhDxjXm27U+MdbZy
k1DpO84798I7wXarTE+3P1QUu+7rV9twFpBWfbRMn34SYJ5NYdGhk2lWdHRk
Yr24pF8HMFtBUymYoKKAujVHV1JYYLsiaYfQH2OAeTaTWPPnNGL/2O/SwisY
1wXyeU35+L5R0TtXJ81swUng6+Q9MlYMAebZDkyFfd9JrE+4PkuC+dVK4xIT
tDj6k1HzFA20tc596BykIvctlaLMWuI8UbZfmuexIcC82zo+E65bRHxh3m1B
JXG6R44EeCiOByuXdIHQKd1Hd2lUlFwhxR9ZwQIn78ySTp87BkIMon4akDrB
shmD4xFMKgq/5hqqeZwFNjy6JKeWYwww73aeZ8OmQWJ8MN9mSdmrPEucf3D9
l37T6BVm6hrov+PdIP/7PzpmkF0P5nfuil2HyHHsejDUVwFTV/hfs+vBuM7W
LeGQyWDXg5EM4FjNUUFl14NR03hcLRtPZdeD0ToX5Klelc6uBxM6/meDISsF
5cNUW3nDUWBuWfDp+bP7aJ+iELP/yjjg/hisYbfPG1morddjOjLBsYNS5k3m
uqA3SeFQozkRn8ymrFNtygjzcla94idLbcLYvJxQuuBvo5kXbF7uwnqj3TM1
H9m8XIx/T1tncDGbhzvDM3SGLNuBMA/34fCQcNunLoR5OLuBudfKb3oQ5uG6
UxdmvHf2IczDpXVLx7QupSPMw2m3RR/XJeIL83C2gk3nV+ynI8zDvVy2w3HZ
/T6EebjnRllAyKQXYR7uanVD5LK0bnZ9HLf7Cc/W5JQhXB9HtzEzxn9PHsL1
cXw8x3m2tr1FmJczWd7jWnIpis3L1Tqfir9orPy/5uXMtlZolojfZdfPUdnh
HJ107zm7fs6VM3rN4rJp7Po5lR9Xp/Bsp7Lr56imalXXEPdFzMtNVBpIaPZm
sOvnyFdcW3L5wVtUHrLHosZyDGhcb2sSfXEbpfSWLLnhMgG+5e/pOihujqJa
rmhEWrPABX2am/isEYjb2Gn30HEKfIzbeORNgBvC/J0q7Fyx1P4xm78rD5zP
K/TOQJife9Jy1Dn3SzfC/NyryMo9J2/2IszPBddFnyv+SIznX35uvtvEVsGA
jjA/92arZlwjMf8xPxfIYfJYbroPYX7up5pMqSd/H7sekMnn5g3J594jXA9o
avfRJV0mSQjzdVS5C6ay/6e6Mw+rqX3bf+0GMtQuCZUiochcJOW6K1JRimjQ
JJQUokGIyFB6QqJBiJCKSgNpXu1oQCWNSvPeu3bzoHn8rff4fdftOJ7neA7v
+/73+i/Rau+91n1f93V+zvMSuvhHvo7i6Tz6zndeUozF+UAnojPkalMScD6Q
binEy/clEuXJF81197Mh77HhHoY+eR78y57/w68BOK0qtn3Y5wzh4VdUsKOT
PM8K2XPZ5RqDhq3PzxQOeT68sT9f+PsRYudVLf1nY2MgHvfdZEQ7kKB4upTC
nqe/LrYSFE/Xf8m0T1SFQ1A83cNKJu86cn2jeDou+e2zTy3l4LwiIRbyUKqI
Iqi8olzFY0kOF28Rf+ftKL7uwODLZTfs43FekdMtj6zS24lEmthC+g0dJri8
qq+e/pFINKrLrjTsG4R9M5UnDsduIWIUJLOaWMMgykh+sHb5bhhr3zZ1bmgU
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
Quwl91LtStyvv6ClNjuDWYv79ZYOdBknkd/zPI60nQ5x0Wfifr1CGTMrOomF
+/XOhdXSc/eycb/+joF+GJpk4X691azaKKt4Ju7Xj7gornwl9rtfv+ji5rOh
DTW4Xx8y98tSR8Xf/frrzF2wb+P/nX79xc5F2aeuFmO/vvUQ98m7XJfwfI6g
Wj1/JYG3eD4HTdd3zq3daXg+R8SmvYZ3bmcDNX9225KL7p3aDKD8+8I5c+v4
hLKA8u+vcFwcXNabCJR//4pngOPj/aewf/+Ei9ySTYqp2L//bNezpN7bRdiv
X/BiSaTyqybs14/M5xLlbWDj+R4LX6nnrj3PwfM9xE8O5LBqOQSlH3DVHb7C
a9yK/f3DhJtzvBgL++sV2zdm9D1vwPM2NBq4zAV2NeN+f5qqntmyhSzc71fX
T+XdIsHG/f5123hXxGizcb9/MsuEj/8cC/f7ueymPvT5NeN+P3/8pvMhFfW4
3z+w9d2vUfPf/f6XuTs/8sb/7/v9gqusm9MlSrD//of89635CVew/375F1rC
XGYUntfhzixeHV71Ac/raDbXL+hpJoCar5sdUnVzrzkDKD/+dhC8K1BLAOXH
L/9UU8LRSQbKj//g9GfgOIdgP76P+Z248ugE7McX+z5zcPaKz9h/3zrT/4a0
YyP235dZeV15NMLC8z4sgz9b7plsxfM+/ipz8ro6yCEo/eHQrtYn21pasV8/
5PMmzVHu33757My3Qld16/H8DdOlC/ilE5uwXiARkx+SncLEeoHQRqWfSWQ9
R+kF2j/yfjoYsbFe4LDPKIQ3h4X1grvf9XTz5JhYL0iGtPO2ur/1AoFX0x1B
iT+wXrBQ+dHOv9D/XC+g/PJt2QdkaQ6JQPnlX8yKbVdxz4DoyRUhqS97oL+g
JDFrKhti7+8rdizpAxXFR/JTMxlA+en9BecdqPiaDpSf/q6/8/2ObXFA+el7
f20Ub0wPwPM9HO47+Y2VN+P5HiqCjTW8MS14vodWfX77qa8cgtIn9Bhfuiyj
OASlTxhpvn0YGtlCaPTdEFa2EEROWxASd2sEFXGZfXvthNBPQVCKKmnGeoPe
pSURYw4srDd47Kwv/LqNjfWGa2duKT1dzcZ6g9rW8bldEiysN+goZnra1jZh
vcG6xPdhaXctUH774e0yH5rryrD+cC/8+dx39v99/eGT4QPVWzdLsH9eQTMg
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
WlY=
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{408, 2495, 337, 338, 339, 340, 341, 756, 633, 534,
                 458, 407, 378, 779, 656, 557, 481, 430, 805, 682, 583, 507, 
                342, 757, 634, 535, 833, 710, 459, 813, 690, 861, 591, 845, 
                722, 874}}], 
               PolygonBox[CompressedData["
1:eJwV0L1PU1EAhvELBLCMoDMtsMCkCdaggLQkJkQSAy4YSDQkEksL/BFAy8fA
iLKBLSNOkGChLA4mJoahgDtfBWdhA393ePK8zzln6G1sfGZ4ujoIgiqsoBQJ
gn10OXiOF+jGqUefUItdnUUKd3oWUZT1OnpwplOow3edQ2NNEKzqTlT0JO7t
OcRwpB97s20PY0M367ydwD/dpUv2KHr1OU+iHi/d/eCi83Z7y34dYh/ygvMm
+7P9jp/yK/7FE3zlPs5F/YFHeIiPOcPp8E/ieT3CLdzPP/lj+M79E97R7/kt
v+Eyf3UXtQt2EgP2b74J/2f7wB4Lv0FfcBoPsKc73H+zB7GoH+ovdhzXOoMq
Z1ndihOdR8zZZvgbcav7cBl+CyLY10t45N2afoa/egrVznK6DX90AQlU9BQa
UNLLmEYS/wFq5UYc
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1:eJwV0ElLlVEAh/HXYeMmdeuIK1s5p65UAiFdhAMkKEheNQNBP4Hm1CdQ22g5
bXVhmZYgCC6CIEcEwbIStX26MMd+Z/Hw/J9zXr3vvTmx3oae+CiK4jCNfGM9
KYrWUG6X4SVe4xMSPdyFY5TqLoxgBQnOXuA3Hulp7CFbD+E23OthLCNed+IX
SvQUdpGlB3ET7vUfFNtvkJrgf+mPiNMd+IlifYEqew5Znnun6+0l5OsdnWkP
4Dr8rW7i1fC+7s90kT2OFD2oa+0FPNRLesOusCNuxxGKnB9wo/NmjvEal/N5
+P34m37CldzCs5zJb913855+ynXcyh84j7fdd/AX/ZgzuIlf8VV4B/f7XOfs
GX8Ov6V96vyrXW0X8hiS7QHnNfY8csPn6HvE9A8U2n9RYc8gwzOTegvpuh//
wnfUJyiwR/EgvJN+jzu0OfuOAnsCm0jTfbhEm+7HIm7x3Nkh/gPb9FKK
                "]], 
               PolygonBox[CompressedData["
1:eJwV0zdPVmEYBuCjoAhiQSzIZkWBCQdQGEwEbBRDwESDJshAXPwAaf4DC8W+
KLJRLAlMMhA6lsSEOBlRwVU6uggT1xmu3M/9vG9Ocs6X78CNSMmtjUEQbGCc
wdggGOKSRTFF3OE5n9njchP/KNSbeMYndts18pcCvZGnfCTRroEVLurv+E26
3kZclHP9CR/YZVfPMhf0t8yQprcS6369vkyO3kGy3WN9ggS9jiXO69flCDnu
rOn55h4O62/0MnM/J/Tp8F3NueZU2cIWc539N3OJ+YqskAMyUy45q5Jf9LMy
W16Vr+R++cj5Tfk1/DaySJbLPpkux51Xygn9tNwpL8vbcpFzzr/LUrtrcphs
86r9ZPiNzHmym0Pm1/al5vdk6L/04+ZmYsLn6ouc0ttJsnuoF5p7SdPH9B3m
WhbC99L/k2vu4qA7PfpPjukP2GxXqy9wUn/JPrs2fZTteg3z5Ovd/CBFv88m
d2v0ebL0F+y1a9VH2KZXM0ee3sUUR/V7RLtbrbcwTLxdhNnw99Q7w+/IEf0u
Ue5H9GaG2GoX/iH+cEZfB1kxYX4=
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwt03e4zmUYwPEjiqhsKtlkr5aVFZWRkk12qCh7JMooGQ3ZZIXMIlv2Jjsj
o6Ioe2e26HNfV398zvd5zvs777ne+3ne7C3a12yXKCEhobAf0TN8Qx8aUZHH
uckqPqUNL3MXZ5lHXxpTiUTeaIuOoQtPcIvVDKEtqTxzQGdQk6T2O3UiPUnM
OebTjybc55m9OpVn4//bf6djyWR9TLuSzvpH/Yon+ZM1fMbDXvtV3yS19UHN
ozM1m57UQlpLk+kuza2T9BE9rgW0l2bQnzWvztHseur/WSbR8ywgp/37+qAe
1abcb71PvySL9e/6XHxu6636Od1Ib/+Tfs1T/MVahvIWabx+SGdRm3vtd+sX
vMvdXGAhH9CM50niuW06ju4U52/WMYx21OEeLrKI/jSnMiX4h/UMpz114xy5
xGI+pAVVKMm/bGAEHagXM+YySxjAq1SlVHwWrrCUgbSkGqVJToq4EzFLHiBl
3Ks415gLaeMuxAzjrMgYZ8BDcQ/izsSZkjnOgKxxB+IcyRHnRi7+4FsG0YoX
eDruBVdZxmBaU50y3GYjI+lIfR7lGsv5iNd4Mc7IWWzX8bxNWe6wiVF0okF8
Zs99r5N5jzxcZwUf83rMwTP7dRovxfnZ79AJ9KAc8UXfLKPpHHOyP6yzaRhz
td+jU2I21r9p75if9RHNp3NjRnpa83KDlTEvv/skZqy/aH59I85Gf4gZ6PSY
tZ7QglpD36E8r8T7UyH+lgLxDIUoTBGKUoxneIz/AG6ahcs=
               "]]}, Annotation[#, "Charting`Private`Tag$1554950#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1GW0lVUYReFDSSPd0t0grUhII91d0hKigLRKqLSkCNLdoHQpSCilhIA0
CKh0N/js4Y851prv3uferzO26V6nW5RIJFIuaiSSXzklW+GFvhqD0BqPzQYi
NQ7yaSiA07w1XuprMBgJokUiE8wK4C/eBk/0QUiDQ3w60to3m7+Du7wgzuht
8Er/HtntWcar4FP+Op+oF0QF/Vd52bywvlFvgFr6MdnW/KkcjIZmaWU5uUe+
L3+znk9+z1vIWrKGPCK7yO+svyHn8KaytKwsD8iO8p714nJrOGbZRNaVJ2Qh
a2fDMSASztF8p/zBPIe+XK+Kz3hCPin8Bld4Eb4pHHM4Tv4snDvewO88v/Uf
9NqYwdPxuXoZ3Odv4lz4LaJgLf8cieybzN/EVd4Oz8MxIB0O85nhWuI8b4eo
WMeHoD1e8M+RHkf4rHC8uMDbIxrW86HogKK4aNYB0bGBD0NHFAvXD1tjRyIl
ZEm8hbdxKVxjxMBGPhyd8JIPQQYc5bNRCn/xTngNm/gXSOx8p/DC+Jt3xit9
KDLiWHiG7Vmr18Ecnp7P08viAS/Bt4X7H+4hvyw7IyZKW/tZbjbPqa/QqwXC
syW/NE+if6M3lkVkRbkvXCv5T7g+cnN452SjcE/lH/ID2SW8mHIYbyQzyXfl
3nBvwr7wzsh1vKWsK2vKo3KutQz6/Kj/v9tV9IPyYbjO+na9WTgHfiU874iF
LTyX9ZX6e/iKJ+VT9aL4l3+AKGbDeWYc5/OQ0WxBOEY84mVwNZwLYmMrH4Fk
9n3Li+Ea74qoZl/wLDjB56Ms/uZdEQfb+EiED1Y5bPPcvCv/sdYNcbGdj0J3
RPM3vzTLipN8AcrjX94d8fAjH40eiG7/V2bZ8CdfiAq4xnsgPn7iY5Dc3mm8
OK7zDxHDbATPjlN8ESriOv8QCbCDj0UKe6fzErjBe+I1s5E8B07zxchktpCX
x2NeCTf0nngdO3lue1bp1TGOpwzfLr0kbvKPENNsFM+JM7wQX6/XwxKemS/S
K6Cqfkg+Ce+j/qPePOzVT8rK5jflR2hgllCWkbtk2/BOWM8jV4dnTNYIz5L8
Pbyj8mvrqeQM3kS+JSvJ/eE7IW+Fb4PcwlvLxuH9lMflx9Zi6aP1XOG66L/I
s+G7p2/Q62Mpz8IXh3cOT8N3hf+ktwjvA78V/h4SYRcfj9T2zORv4zbvhdhm
Y3hunOPLUBW3eS8kxm4+Ab0Rx/6xZnlwni9HNdzhvZEEe/hE9MF7uGvWB0mx
l0/CJ6iOe2afIBl+4ZPRFzVQE7Ww3btQW9ZBXdRDfdz3m75Ijl/5FPRDXMc4
ziwvLvAVyGq2JNwLPOMN8EDvhxQoa3233GeeV18TngtZMzx78rDsHL531tPI
WbwU7vD+iBfuPc+Hi3wlGuIh74+U2M+nYgAaoTGaoCmaoTlaoCUe2T8AqXCA
f4uBiO//jDfLj0t8FbKZLQ3PLp7zUnyH3jI8L/qf4TsjW1n7D6AwGqk=
               "]]}, Annotation[#, "Charting`Private`Tag$1554950#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1Xf8T1Ucx/GvlRkZSWaozBAqCpGWpGySPUMR0lA2oUFlZ2TvLXvvSCE7
DTMUisqmnp8/Xo/3OPf+7v2ee8755W3esWaHJIlEom/SRKJDskTihRSJxPrk
iUR13JA3YALa64/pOiEnjus6oqp+g1wDN+WNmIjX9cd1nZELJ3Rv4kX9Rrkm
bsmb0E93Xf4Ij2CS7g3dCb4LcuOkbqguNUbLT8e76KrJm/hauC1vRn/dDflj
PIrJug66k/xbyIPpci7M5U8ZH8anwZfyM1jEF8Ty+A3GX+I387Wxki+B//Rf
0btxBFONfUMr4HdsMf4hvak/RD+hG+hjOB0qz6P341d8LX9Pn8YFTIk5pqf0
B2hXupaWxm+4T55Bc2Mev5M+FWPuG07TYox+M30cz/KLaSGsiLl13cvxnnwd
JDBBzopp/FbjA/hb/Kcog6nxHeMZ/NvIi9O6t1Bdv1WuiyTYppuGTvF75XeQ
D2d0XVFDv02uh6Qxd7rpeBvvoKbxb/T1kQzbdTPQWX9Gfhf5cVb3Lmrpt8uv
IDl26AbqbvODURYzdV10Z/n3cH90ch7M5383PoJPh7Hyc/iaL4yVcY/x2vwO
vgFW8Q8jBT+R3oOfMD3elz6JP/Ct+wbFmtEfpkPoRlomfkt8H3k+fQBHsUTe
RZ/Bn5gVcxzrSn+QdqPr6CNxDz8r1gMW8N/RyvFc94ykd2Kcfgt9As/zS2gR
rOK7ua5OvCP/Ku6IPShnw4xYV8Y/4hP4TH4Cs+MbxjP49/EgzulG6dJjvFwl
xnR15Z18Q6SM99N9rEuCz+VymBPfXT7Hf4ACOK/7APX038mNkCr2iG5urBH9
ebk7CuKCrjvq67+XGyN1zKNuHnrgFWO7dE2QBrt189ETvdAbfdDAdbuNN0Va
7NEtQF+8amyPrhnS4QfdwliDsW/lHiiEP+NsQ0P9D3Jz3Im9ukV4L76t3BOF
8VecXWik3yu3QHrs032iS4ov5PKxj3Xd5L/4XiiCi7rRugz4Sn4BH+oay/v4
lsiAyfK9mMnvN/4pnwxD5QpYwD+IpbH2jb/PX+R7o2h8ezkvFvKXjH/J34UJ
cWbQcqjKL6VFcRyrYw7pcxjgniZ0f/w22oqupiVxMv6WPIVmx8+x9mMv04qx
PnDA/YNpcvyIYcY30bKxr2PPyQtpARzDsvjOcf7Fvoo1RS/p+mA9/ygeijVI
82ER/7frxvAZMVF+EcviOqzhBxpvGu/Ct0bG2Je6IXEWYLhcMeYg1qT8N98X
xfBPnAVopj8ot0EmHNIti3Wq/0fuh+L4N/YfmusPya8hc5wjuuWxl9DC2GFd
W2TBj7oVsW7i+8Z8xbvhM3yOljF3rmuHu3FEtxJfoJWxI7r2yIqfdKtij+j/
lfujBC7H/2S0jjNPfh334Od4ju4OjJArxfeN/SVfjjWJh3FFN1aXCZPkahim
axPfnX8D2TBVzoHZ/C/x/nxKjJSfwprYt/IVfgBKYq6cH4v5q8bH8ZkxWd5G
y+MlfjkthhNYG3s5zsf4fu55jf4Se4R2iOfQUjgV+0eeRnPGNZgjf0srxZmE
X2MuaSqMMlYZa+Nska/G+kEpXIv/N2gb98gdkR1Hdevi/I4zNfZ17LNYkzFn
8XswHu3cd9T1byIHjunWxzmlvyYPQmlcj+t1WTBFfhkr+OJYF2cSrRLnSZwd
rv0fR/NlQA==
               "]]}, Annotation[#, "Charting`Private`Tag$1554950#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV0negTmUcB/Bzce/FtffmKklLRMOKipIRFxlpWddWRNmZLSOrNChUZoPQ
jtKk0FKUaAlF2Xt8fn987vf7/M593+e8zzmZXQZk9U9JkmS4PwdSk6RSepL8
nJYkc+lNfS7goGuHOMwRjnKM45zgJKc4zRnOco5M3/eLz79AHxpwIQmVXdsu
X6Qv11OFOuZH5NuMpz0pcR/mv8p59KMhLcxys0F/mouoa31UvsOE+Lx1EX7Q
O9Baz8cm/Tk66cX5Sc8R96fvkPO5Uy9Ff72tLMi3eiNa6nn4Sr9blmG23lEW
I5sfrbvKCvSmqnU9eUx2l+/Ku2RpejIx7lEWpQdbrLvI8nTUs2R+Nuv3yLI8
r98hS7BVzxnnqO+UCxhAO+tCfKffwG16Xr7Wn+HieNbWx+V7PBLnQq44U/Pf
5Evcx41Ui2dpfkK+z6NxD6RS1fx3+TL3cxOXkEY6uWM///OHfIWBNOZS8sR3
u/anXMggmnBZvB/mJ+UHPEZn8sZ3m/8lF/EAN3N5vB/mp+SHPB7PkozYx3yX
XMxgbuGKeKbmp+UanojnQr7Y2/xvuYQhNKV6nKP5GbmWSfEOkD/2Nt8tl/Ig
t3JlnJv5WfkRk+P5USD2Nt8jl/EQzahBQQrFXq7vla8ylObUjHM1Pyc/Zgr3
Ujj2Mv9HvsYwWnBVnLF5wjp9arxXFIm9zP6VrzOcltSKczdP4RP9SbpSNPY2
2yffYES8S9SOczfPwaf6NLpRLPY22y+XM5JWXB3nbp6Tz/TpdKd47G32n1zB
KFpzTZy7eS4+12fQgxKxt9n/8k1Gk8W1lIx9XDsgV/Iwbbgunol5Kl/oM8mm
VOxjdlCuYgy3Wxfm+zhfWY5etI3fITPYqD9LnXh21ml8qc+iJ6XjfswOydWM
pR11KUNZylGeClSkEplxrz53WL7FuLgf6sU7YJ7Oev0pesVvsy7AN/ocOusl
2RbPQlakD5WtzwMeIrAJ
               "]]}, Annotation[#, "Charting`Private`Tag$1554950#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1Hf8TnUYh/EH2ashlFFmRnbJJqSMiEjKFiVC9kohO9myMsoMoUKLUEZZ
FZWQlbL3CIXe9x/X63N/rnPO7/mdc77fk6t15wadkiQSifpJE4mOKROJ/KkT
iQWpEonHcVH/GjPxGjqhM7rgIectdE5VXNLXYBZeRwHHFvHVcFlfi9mozm/k
WuBO7OW6oiD/kV4dV/Rv0JT7Q++FApjDPcFtMrfEXdjHdeBOm4fiMXTjCnGL
zU/gqt5Dv2oei3V6M/2AuTcK4gOuBrfZ3Ap34w39lpyC/Y531M+Yh2GyOQvK
xO/KlJgT/6PMje7OLyyXcPNkDfmOTI9P8I/jPSP5xXKcnCrvx2qsd7y5PMgv
lH3kBJkJK1FIHyzvwDLM1GfKB/Cha5+UW7jWGGO+E/eYB8jb8Vv4I96pftY8
HGXj3vRU+MDcw/GHzUvNT+Ka3ku/Zh6PDXoL/ZC5LwpjLvcU9725DTLhQNwr
ivAf60/huv4tWnKH9X54OJ4VV5P7wfwS7sXB+F0UjXvVa+KG/h3moxa/lWuL
zDjE9UYxfrleC//qG7EAfVDcsRV8bfynb8JC9EU/lIj35Fgd3NQ3YxFq89u4
dsiCw1x/lOQ/1Z/GLX0LWnFH9P4ogo+4Otx288vIiiOxp7hz5hEoF+uOK8V9
Zq6L23E/+vVYA/heb63/GeeiaKwh7mluh/mVWOfmu3Cf+U2ZiGePafr7Mmdc
H3tZnudG4j1zVpSP9SBTxzOK9RT7Q+bBVxjgukdiHfLzZT05WmaIZxC/pfeR
N+QSOVFOk9nwebxb17eRR/lF8ffkRHkvipnflskxyzxLPhj7yDV15U6uPcaZ
7479Yn5LJsF089H4NpkvmEehQtw/9yi3yvwMkmAr9xL3VxxHcSzl6nE/ml9F
NvzFvYXSsS/1+kiKbdzHGIhBGIy3MQRDMQzDMQKPxX27pgGSYTu3DM/wP+kd
kB1/cyNRhv9CfxZ3YAe3HPX5n/WOyIFj3CiU5b/UGyI5dnJtub/j2aAEVnAN
uF3m15ATx+NbzV2MbxMqRnLl4j2bGyFF7G39XzkJPzreTj9mHoiS+IR7lttt
7oQH4pieFDPMJ+Ibb74U6wRTYl2iUqx5mQZzzR/KvBjt/PLya26BfE6+KzPG
nohvbXwv5H/xzuRkOV1mj+cWz9T1L8vjsefkoPjfZeZYAyilD5Ep4vuA2fps
mSvWr2sbyl+4zhgf381Yg+ZBMhneN590Xjfz5fjfUDn2kJ4W88I5XsG8xtwY
qfAz9wp3wjwYj+AzrhH3q7kLcuEUNwYV+bX680iNXVx77mTsETyKldxz3G/m
15Ebp7mxqMR/ozdBGuzmVqExv0fvijw4w41DZX6d/gLS4hduNZ7nf9e7IS/O
cuNRhV+vv4h0+JX7HE34vXp35MM5bgIe5zfoTZEe/fWb8d3BDHOOWMdxL859
VZ6K94TS+IJ7gdtn7oH8OM9NRFX+W70ZMmAP9yUmYTLewxRMxTRMxwxUc913
zm+OjPid+wov8vv1nngIF7ju3BXzGFTBKD0d5pvnynyxXmNtOPd//f5Cmw==

               "]]}, 
             Annotation[#, "Charting`Private`Tag$1554950#5"]& ]}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"Feedforward solution\"", TraditionalForm], 
         PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1a\"", "\"u1a\"", "\"x1a\"", "\"\[Theta]dot1a\"", 
           "\"xdot1a\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
S/im9ujNC4PnMLl55R+/OPvw1mggfNPB9vvdVnmZQPimvpdzx0tvGXHzyivu
KY0sjYjg5pWfux+6q/3kHTevvJzxTv/yriRuXllXev6cutRkbl6Zc73eed+m
ZG5emZffgp/Jn8jNKydE+V+ZoNbDxIS/0q9thmEynj/qTZIvPpm08Eqi/wjw
uxnq92y0B7PQZYJ774xBh4fboRbr+3DSxWbTUrdxyH1Ra61S+4DLRykdmB46
sNwcCB8VJcyjND/3OZePshFJ2BZZmsLlo2wOKhlZHyvk8k8ZA0GJQqvaMeGf
xKuz9GNzOzHhn6Z91B3H47ox4Z+uMyUUfyn1YsI/ZUTy3Nfm9GLCPzHfXjjF
pvYrhH8ylD8WycvLxIR/6trWECi7pxcT/umAzb7XsWPdmPBPmXuVPjZu7eLm
t4sv7s938ivCJL9df7O95fz4R0zy2xzHVr/5s59gwkfl8fsOHtR6BoSPSntp
bLnCJAYID5U3Z8uoWecnIDyUvZLIg6LXD7n57aU3+z7M0nrLzW/vS/OZHL+f
wM1v66RvCNu7JZmb3x7deHO/V1oyN7+tn8OvdVQvCef+9RXT9fgDSps1tw0+
NMdFlxvu6vhR+5V5d81KZG/Ds+0OE+0eHDj1bki7LSoQpKYUT3b4/oULRmm+
PPvvcHmqM71hNxdQ+1nCU9EPdpzRTo/h8lFbPJffOO3TgQkfJbbl6tJ5RV2Y
8FHdF4qf3HHvwYSPYoZf1PWJoNrvPz5KPMVM/oAKExM+qtZdLGVgAxMTPkqu
tllvRXIvJnyUxp/ipmPve7h59PiwX9H0Q7GY5NHj2y6lFPyw5vJTyyMbN1VI
vgbCT4VN/LLheR4LhJ/6Fmz3Z7ZAJpeXkqj+eb886T03j/6kL/UW+pbEzaPf
eSJZpViajJtb4zPDvbsh8RPd3aYiCQeIu127LjYKWyNnuYT8uwGerG8eQfwc
OPdp7hK54QfwcdvnEj6+v9DaUOl0ydcf2i7rCm6V/gdq7lXx4cLGmPBScts/
WweZ9mLCS7nDfpl2WSYmvFT7ixqt+zuZmPBS9SNKMxdaern5eBtXi3DRW5Fc
fkrpUMiRXYtiubyUkuqT/fmPE7l5eM04g8ii28nYfl5+/Xb3TtC6tyRh5FYy
nijYFDKHNgZpUqkbdpTchcR78x3XTXIgXKukJu5VIFhi9778WRNwLkXtYHm7
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
/R9ax+P2
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{409, 2461, 338, 339, 340, 341, 342, 757, 634, 535,
                 459, 408, 379, 780, 657, 558, 482, 431, 806, 683, 584, 508, 
                343, 758, 635, 536, 834, 711, 460, 814, 691, 862, 592, 846, 
                723, 875}}], 
               PolygonBox[CompressedData["
1:eJwV0rcvRWEAhvGDRB2V2VUWJhIlekskQiJYCAkGov8TuFpi1SZ1ZCLRF4NE
IgZt15mx8TvDk+d9vu8k956bG+mfaBuPDYIgBotYSwqCVZQ5KEcFKvHkoSHE
41BHMYw/PYkIbvU6qvCsh5GAIz2D1LggWNJFeNcj4Yc6m9JZuNMFet9ux4bO
1Ft2Hb51mT6zu1GtX3gEiahxd8HHzvPsXbs5xL7hWedp9rLdxcXcyFc8yB/u
S/hY93Ent/E9j/Go+xie1p2czQ18yQPhc+4L+UD3cge38i1vuovY23Y9muxr
/gl/Z/vc7gnfQb/yKJJwovPd79ktmNPpesUuwaceQ6yzqM7Bg95ClrOd8Dvi
V9fiLXwXJONUzyPDc6u6FF96HHHOZnQuHvU26vCuwz9MCs70AiZQj3+llkVm

                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1:eJwV0T1PU2EYxvFTqgOTwqotsskkhYJ0KsaEBB0MxAQSSAzFSkkIfANKq/gJ
VAa1orLqoLxq4uRgYsKLNiYmKqgR3NHBF6q/Z/jnuv73/bTnyTnNuan+yboo
imKYR6tSqY+i28joXRjHdazhsMMFfMVpXsAsVnHIbAxf0Mnvo4oT/CpqYc+v
YQVxfgWf0cHn8RZNvIyDsOffkdbn0Bj3X3wZdTyPHaT5T5zRF9Dk3D3ery+h
lb/hSb2Ev+G3fFA+D/e13+Pt+i008DI/rz9GC1/iL/WsHpOXsY128/fyovmQ
HJUvZEb+CO9PrvNe2S2H5UOZlBX7CVnlF2SfvCQX5Sm5ZZ+Xr/hZmZCDckb+
CXewfyf7zAbks/Au9V3z13qP3iZv4qheMj+nP8LJ8Jzw4cOd8QltfB9Z/QES
ztzlmzjOi/gdzvNvSOk3cCTciT/FP+TMPiKl38EGjvFp/EKOF/EENYyYfcB/
bGNR5Q==
                "]], 
               PolygonBox[CompressedData["
1:eJwV0TdPllEYBuBXUSk2BEXRiWAXJhgsMJAIKEoRgyYaNSEOxoEOAv8AlWLD
BdBNiprABAMJIIKamBgng2BZVaoswML1Dlfu537OyZe850sqLS8u2xgEwQbG
6YgOgk4uWRRRSCPP+USCyw0sU6A30M5H9tjV8598vZ5nfGC33T2WuKi/5Tep
ehtbI5zrT5kk3q6ORS7ob/hFit5KjPt1+iKZ+ksO2D3RJ4jTa1kgT78lx8h0
Z03PNfdySH+tXzEPka7/DL/VnG0+IVuINtfafzNfNl+TpXJYnpQLzu7Iz/o5
mSGvyxdyv3zs/K78Gr6NLJQ35IBMle+d35YTepbcJa/KGjnPeedTssTuphwl
w7xq/yV8I3OO7OGguc++xDxImv5DP25uJir8XX2eM3oXiXaP9AJzPyn6uB5r
rmYu/C59hWxzN8nu9OozHNMfEmlXrc9xWu9kn12b/o6dehWz5Oo9THNUf8AW
d6v0WU7pHey1a9XH2KFX8o8cvZvvHNHvs9ndSr2FUbbbVfA3/D/1V+E7clhv
YpP7FXozI2yzK+cPZ/V1sQVh/A==
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1HfYzlUcwOHXngnZeyR7lmTLasqWnQgpI5mpzIZNCZGGUdmyNyEru5Ss
EGUUaaFk3N/LH/f7Oef3nOu5nt8553rzt+/RqHuihISE0v5EL7KEIbSmJvfz
P5sYz4s0JDGXWMpQ2lCLFL5ot35AXx7gBpt5h65ktuaIzqERd5l/o9N5jST8
zjKG0ZaM1hzSz6hNSvM9Oo38xr9oP7Ib/6gLKGR8Qctzky28Sz7Pf9ZuZDE+
qsV0rt6r57WkNtZ0+q0W1RlaQM9qCX1dc+pJLa6L9D79VUtpUr3McoqYv6F5
9LQ+wz3GP+jnFDQ+p3VIZbxXP6Q/OcxP6EIe5BZfMYHuZPX5MZ1HE+42P6gz
GUgy/mAFb9KOuqS2bp9+xCtUIC7CVnmPHjQlOX+ykrd4lkd4KJZbv00n8hLN
4g7wF6t4m/Y8SsW4N9Zv10n05Ok4S/5mNcPpwGNUir3gH9Ywgud4nMrx+0lD
2rhDcVbx7qQnQ9yZ2GMyxZ2Ls469Ilvck9jXOD9ykTvOhrxxP+JOxVnHucSd
4AprGUlHnqAKhbjKOkbRiSepShLvukMn8zLN435wjfWMpjP1qEZS63fq+/Si
BYX5lw2M4Xmeive2dr9+zACqxzl79rVOoXe8p/lxnU/L2Bfz73QWg+K9zU/p
FxThPzYyNvbBZ2e0S+yf8WGdTf3Yb/MD+gmvUoOiFKM4JShJKUpThrJc50vG
8QINeJjkvm+XTqUPreL8PPteP2VwnI/5T7o49sT4t4Q7/7fK6W2QGoX8
               "]]}, Annotation[#, "Charting`Private`Tag$1555034#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1GW4VVUYReHDRUpSSjpUpLtTSkJEutML0g3SpYQSCiilgIRBKCiNEgqo
dEhJd3d3+K7HH+OZc3xrnXv32WftnTm6a+0uMSKRSPmoSCSfclS+j+f6EgxB
NB6ZDUZa7OLTkR/HeDRe6EsxFIljRiITzfLjHG+Fx/oQpMNuPgPp7ZvD38Id
XgDH9VaIYBnPZs9C/R18xJPwSXoBVNK3yfPmhfXf9AaopR+Qrc2fyKFoaJZe
VpCb5QfyH+t55TLeQtaSNeQ+2Ul+Yz2D/JY3lWVlVblTtpd3rReX68I1yyay
rjwkC1o7Ea4BMcJ3NP9TLjfPri/Sq+Fj/gqfHD6DC7wIXx2uOVwnfxq+OzJg
D89nfbleGzN5Rv6dXg73eCGcDJ9FFFbwYUhq3xReCBd5GzwL14CM2MtnhXuJ
U7wNYmIlH462eM6HIRP28dnhenGat8VLWMVHoB2K4oxZO8TCr3wk2qNYuH+Y
Fi8SKSFLohRK42y4x4iN3/gn6IAXfDgyYz+fgzI4xzsgDlbzT5HM953KC+MS
7xgOutkI/hoOhDPMV+h18C3PxL+P+v95uM9L8N/D7x9+Q35edkRclLX2l1xj
nkP/WX83EM6WHGWeXP9KbyyLyMpye7hX8nK4P3JNeOZko/Cbyn9lZ9nJegw5
kjeSr8uKckv4bcK+8MzIlbylrCtryv3yO2uZ9R/CmQ/Pj75LPgj3Wf9Dbxa+
A78QzjviYS3Paf0XvTpG8xT8a70orvDOiDL7hL+Bg/x7vGY2N1wjHvJyuBi+
C17GOj4GKe2bxovhKg8voJhmn/IsOMR/QHlc4l0QH7/zseiKCuEd5NxUlJet
dUUC/ME/Qze85G+OMnsTh/lcvI0rvBsSYj3/HN0Ry/7RZllxhM9DJVzl3ZEI
G/g4vGrvdF4c13gPxDYbw7PhKJ+PyrjGeyAxNvLxSGXvDF4C13lPxDEby7Pj
GF+A183m8bfxiFfBdb0nkuBPnsuexfp7mMBTh3eXXhI3eC/ENfuM58BxXpCv
0uvhR/4Gn69XQjV9t3wcnkd9vd487NUPy6rmN2QvNDB7RZaTf8vW4Zmwnlsu
CWdM1ghnSe4Jz6j8wnoaOZM3kaVkFbkjvCfkzfBukGt5tGwcnk95UH5oLZ7+
uZ4z3Bd9qzwR3nv6r3p9/MSz8AXhmcOT8F7hG/QW4XngN8PfQ1L8zb9EWntm
8dK4xXvjZbNxPBdO8oWohlu8N5JhE5+IPohv/3iz3DjFF+Fd3OZ9kByb+ST0
RXXcMeuLFNjCJ6Mf3sNds35Iia18CvqjBmqiFmZ4FmrLOqiLeqiPez7TH69i
G5+KAUjgGieY5cFp/jPeNPsx/BZ4yhvgvj4AqVDe+ia53TyPvjScC1kznD25
V3YM7zvr6eRsXga3+UAkDL89z4sz/Bc0xAM+EKmxg3+NQWiExmiCpmiG5miB
lnho/yCkwU4+DYORyP/50iwfzvLFyGr2Uzi7eMbL8I16y3Be9CPhPSPft/Yf
meQahA==
               "]]}, Annotation[#, "Charting`Private`Tag$1555034#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1Wf8jQUYBuBjhaTMEIqSUSkrMipbRVZTRmUUkr017V323puyZcvIJlmV
kayWXUYZpev5cP2e+7nfc/yP846Tu2Gr2i2TJBKJFkkTiVbJEokyKRKJ5ckT
iWrcsG9gCvX0P+hacB8ndK15Wr/C/iI37RuZSn39j7r3yc5JXRue0a+0V+eW
fRMddJfsvSjKNF0D3SG5JTk4peuh+08eRjna6p7VrZJr8K99sD01E+3f2DvK
f8q9KcZ03Zu6w3IrcjLCno4Z8mnHe8q35eEslgtSXp5i5mCRvNZ8inZeX9Zc
rdtg1jRnmQ/GZ3XsM/NOtjHJsa/Mwhxgs+OdzL/0m80+5gLzEfbxpH28mYVd
fGFfFX18t/F5vf8t84h+k9nanGfm5X55pJmemfIvXttLTjDCXoGpck4Wy+0d
LyevkWtx276FzrrL9r4UZ6bubd1RuQ0P8GucQ8rr19prk2CrblacAyo4tk73
EknYppsd///4G1R0/Gv9yyRlu24ODfU/xbkmF7/pulBJv97+CsnYEb3uityP
EszVNdIdk9uRm991vXVJGGmvSFddZfsG+VWS87k9DZPlnY53la/K/VkoPxrn
X55gZmU3X9pXm8WZ5z2NzZ/jOjTbm1+Y+dgb14d9lJmBncyyrzSLxX3GH97f
x0zKVkY5vsR8nP1UivskzjPfssS+zixJN++tYm7UvcZs+SFSyEPMu5gi7/K6
bvI1eQAlmWjPxvz4vI43kY/LHXiI0faMzJbPON5XTsZoe2U+0D1n3yS/zh3s
1n2g+1seSCm+1L2jOyF3JA9ndR/yvP4bex1S8q1uPu/qT9o78TDndB/xQtxL
9jdIxR7dAj6mqmNbdHVJzXe6hXzCp3SP5wrV4nt2vB53sle3iKb6U/bO5OV8
PB94Me5pe33SsE+3mGb60/Yu5ONC3HdU12+3N+Au9uuW0Fz/S1yD5OdiXJ/U
0O+wv0laDsR3o/tHHkRplure0/0qd6MAl3T9dMkZY69CH13NuM7kt7ibofa0
TJUPxvcoX5cHU4ZJ9vtYIC9zvIX8W5zfOHdy/nhOyWPMTMyR//S6/nGdMTY+
n/kEz8nTzQfYw1L712YpDtHX+2rFM06/0XzbnGPm4TvusQ8z747vkGn25WYR
DvJ9nGvzhn6L+Zm5yHyMp+XJZnYWymvMEnzlPe+bv+s+ZL5cIO5reayZmbny
X143QL6Dcfbn4/miqx33vNyQdPwQ15TuZjw7eCY+o65l3MvyRzzG5fiOeCnu
W3sj0vOjbgWt9GfsH1OQK/H3eTm+O3tjMnBIt5KBvBLfk64JGTmsW8Wg+D2M
3yA+ZwhDeTWeQV73Dpk4olvNMF5zbJ/uXTJzVLcmfuv1Z+2f8DhXdcN5PZ5H
9qbcy0+6tfFbrz9n/5QnuKYbQR39AXszsnAs7kPdLXkIz7JO11Z3Xu5OIcbZ
743nqvx3/L/llIyP69MsxAvyDDMXy+SRXvdGXCNyc+bKD5NVHh7XVdxjTLev
MIvGtcTP8Vww/437hLJxvera6S7IPSjMP7pRjGYMYxnHeCYwkUnUjX/X698j
G8d162mvv2jvSRGuxznTpWKCvSoz5dxxvcrrzdIcZrLX/g8WgVCR
               "]]}, Annotation[#, "Charting`Private`Tag$1555034#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV0negjmUcBuD34JxjbyozI5ui7JEZJRRpCEmlaZZZkVEpZDRQZlQqFA2Z
lXZaRtPee+/d9fvjOvfvud/nfOd87/OU6NqzbY+UJEn6+rE+NUkypCfJirQk
Gc7tlCEHGzzbyCY2s4WtbGM7O9jJLnazh73sI6PP/NJnjKAtZclJYf3fcgqP
cSP77c+k/8r8PO0oR2XdXjmfZ8hFEd0/ciqPU9P6uPyChlS1PigX8hx1rE/J
pRzwd1Ktvza/QH3zWXkHN5iPyM9oZL4oy1PFvE82lx/F/yvPy5byWVlbnpQ3
yyWyqUxoTW7rovJfeZOcJhvIc/IW+YSsJU/IFnKxbCIvy1aykawmD8lP4vuZ
L8ih1DWflss46HulWa80v0h7qlsflZ9TgWut98uPGUweiun+k9PpTmMO+ax0
/TfmkdxJRfJy2LMjHCWzPd/qXuIuKpGPY55l8ew788vcHedIfo57ltWz782j
uCfeLwUorl8vZ9Aj3gMn7M+m/8E8mg7xPSjI1foNciY9471z0v7s+h/NY7iX
67iCEvqN8m160YxT9ufQ/2R+hY5xf7iSkvpNcha94/w4bX9O/c/msXSK8+Eq
Suk3y9n0ifvCGftz6VeZx9GZ6ynEWc/OkdvzX6zHc1/cQwpTWr9FvsOTcT84
b38e/a/mCXSJc6YI1+i3ynd5Ku4jF+zPq//N/Cr3UyPuJGX02+R79I37yEX7
8+l/N79GV2rGPaGsfrucQz9acsn+/Po/zK/zQNznOEvK6XfI9+nPrVy2v4B+
tfkNHqR2nCVJnKtna+REHqJOnBvl9TvlBwygFSlxrvq1chLdqBvnRgX9Lvkh
A2lNhjhX/To5mYfjXVgfk4tobL4U/6esF/dGHpALGBLnS0XdbjmXQbQhY5y/
/k/5Jo9QP86PTKSSRjqZyUJWssU98Ht/ybd4lAZxjlTS75HzeJrb4t7oDstP
GUY96zNyOc3MKbQhu/X/bh+5LA==
               "]]}, Annotation[#, "Charting`Private`Tag$1555034#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1WXYFGUAheGlu5RuUKRTQBokRTpEGkTpEulO6e4uQUIBQUq6QxpRUlEp
aZRQ2vv98VznnGd2rv1mZ3a/TC061+4UJRKJVIkaidSMFYnEiBOJjIwdiWTG
GXsBhqAWaqMO6uIjxPTaUV73Fn62F2IoMvNLudL4296GeojFj+bexi/2IhTj
ttsfIw6GcW9xX+tl8I+9HR8jNj+Gy4Kz9mIU53bY9REXX3Jvc8v09/HQbmT/
pvfCDruyfVRvhW76vzIlWup/ySEYoEdBfa+PI8cGL9+R7eU9eS58Hvov+mj5
uewpn8mp8ivHS8id9nDZQHaRj+RkGU9+Iq/KcXKA7Cdfy5lyuPOzyOXhumRZ
2Un+LR851li/rPfGTvtD+5jeGqnC9dk35VA0cDyuPU7PivPhPtpnw9+EJXZJ
e5feEPExgnuHW6GXw2N7F6pwx+02SB1ez8XjxuvZcMFeilLcbrsREmAkl5Vb
qZfHE3t3uD+Iz0/gsuOi/TVGIRv/DVcB/9p7wnUjAT+Ry4FL9jKMRhMkdGwS
nxO/2ssxBk3RDIkcn+xYLvxmr8BYZOe/5SriP3svmiMxP4XLjcv2SpTm9tiN
kTDcPy4Ht0qvhKf2PlTlTthtkSbcby4JN1XPg9/Dd8k+p3+Bb+wy9l69CRKh
hX1NDsR4x3Paq/UP0Fn/Rz4L167/rvdBX/2V3M9X00/qo2Q72V3+J9OGZ0W/
JSfIYeE9ZFTMQgvnviGnhWdI5pUd5H05Uf4RvtfyvD1Gdg3fMflcTgufpePv
y33hWZJNwzXKxzIxPtWvy0Hh/b02l71Gr4zn4X6F9wjXggN2dftU+P4hXTif
e5ObrufDn/YqlOX2282QJPytXG7uO/1DvLAP4jMk5Wdw+XHFXo1JaIlWaI02
aIt2aI8O6Ihkzp3pvAK4aq/BZOTh13JV8NI+hE5IHj5X7l1cs7/DFOTl13FV
8co+jM5Iwc/mCuK6vRbluAN2c7wRfme4fNz3ejW8tn9EDe50uF9Ij8+5lNwc
vRBuhN9U+4LeDevs8vbB8IzizXAPufzcer06IuEztf+U/XDE8Zr2T3pH9NCf
ygzht0G/Lb8M91ePhi5en0rO5YbJwuE8+UBOCr+9jteXF+2xsrvsLV/I6eEa
Ha8gD4XfkvB8yq7yiZwik8rP5I3wPZGDZX8ZCc+IcwvIDVyN8HnoD2WU8Fnq
V8JrcTT8r7PP6J2QMXx37TtyeHh+HU9tz9Pfw027gX0pXD/W2xXtw+H5RDLM
4N7lNuo1ERXHuK5Iw8+3i+CWvQGVuB/DtSA5ZnIFuU16LUTDca4b0vIL7KK4
bW/ELBTiN3O1ER0nuO5Ixy+0i+GOvQmzUZj/gauDGDjJ9UB6fpFdHHftzZiD
9/gtXF3ExCmuJzLwi+0SuGc3tH/Ve6KP/jJ8HuG9HPtAHrFbIgXmckW4rfpH
iIXTXC9kDP9P7ZK4b2/BPPRGH/RFP/THAAzEIGRy3hLnlMIDeyvmoyi/jauH
2PiJq839rHdGJrSz78oRGKxHD9/H8Fx57f//rjWa
               "]]}, 
             Annotation[#, "Charting`Private`Tag$1555034#5"]& ]}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"Test on dynamics\"", TraditionalForm], 
         PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1b\"", "\"u1b\"", "\"x1b\"", "\"\[Theta]dot1b\"", 
           "\"xdot1b\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]},
    {
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1:eJw8nHk4VN8bwJFlrMmMpVIJCa3SIqlzaFNKKkkk+96C7EuWZEsRQpKsIbIl
IhxrdtnJOmQZhkIYWX/3+zy/O3955pk7996zvec9Pp/n3W3w6IYxEwMDgysn
A8N/f0WD1hJidnqe4flXtqjStYguF7OpjpkikKvX+MPQhIYauY+zM+s0Aylu
E/F2RENKQedLk691gx3StCqeDhoyPrTMLcNNBiefP9x0LZOGrkoZzwpcHAGb
bkUrsJ6noZx2N7taOQqoS8iToyUuolN80pnM7lMgcy3AMv3LAjJdCXmXpDkD
QuLZVw/6zaNH38dlM6/OAY20pcbUI39RgBbrnrX782B76igbr+ssMqx2MZEx
WwRtOz+HeCr8QWVsW69b3lkCwVHn5yEbFcls8QifsF0G144xeW7+Por0/p7e
r3p/FQjsNKPMiJNRXEyVMO3FOiD+CVPq1m5Fn1/K97beYIBB54vT+1aTkW3h
abV3VxjhZ9mAvIq2GoDqkub8tZngO/ES1d9e/cD84slic81NkLgh5XHz2RiI
TpH5YmnBDHlZRxVsjH+DV3+LPa0cWOADhsYtewrmwNhHO3szG1ZYwjUYwZCz
ACovhER6ebFB4lYJcbvIJcB4rWc4yIMAI5Utk2fYVwCDYh5jrBM7PLIuaHhK
fg34CdKutvpywOPh3YZRFhvASsuwnPaUE2bEVNcEpjLAIc+jRuA1F5Tgsnmj
n8gISaFvevzjuKE9ITjOLZgJfuCVdqp+ywNvP/SVJppsgmU2u87vTdsMf31n
tvt8kRnGiMQKn1bnhTnh4JYJiQUWuy4zmDXzwrrqv1t/dLDA3Spsq2K3t8DQ
vfx+TNGsMPeH1POf7VvgvScnfM6dZ4OB39cPi+jwQck+Nl2mUTYY+njCQq+P
D0qHXXCLvkuArvw7N4veIUIuBUH50xkEmCrFUmdLJsKQxc0U83YCZJ1n3Fp2
jwRvfz6UXNhMgMmHs5/EjJNg3dSJHevYZymDj6prD/gheNmrT+kgwN5LBTm3
qPzw4hNHTfV+AmxNcD4AHgtAg7jxffrjBLj0+bqC6JwALNra4jE0S4AbX22+
+DwUhPIMPTmZqwSocvjCedcFQbhlnMztT2CH1TqHzC0fC0FHs22HTInsMCPL
iraxIQTPfHJY5dnFDute9VpTTDMBY9J5Bl4JGhJZy49eO14DDnMcrvn8lob8
mopHbmm0gwfCRwNWWmiIlSb8m/lYH4gp4JZ6UEtDd9IzN8SkhwGJJ3RbghcN
Mbhby86AMfAte+KH6uoisv97k29cexIwoNTy3mOLyJtZcmFv5G9w3kCiVHbv
AqLqFZtJ35wFIbrb5upH/iIRFdLAqhAf/POLPyInkg3y7pi/WhrNB2f0+iIH
xQnQr3LT6bJtRBhqL8GqE0CAIe9f3a+PJkI9jR0F8TUE2P3y6WzULhL057mi
VNlKgBohP+sPJZCgSkT65B6sv81qP401SvNDq4NTYsvY90yd2R6p6fyQVpJV
dPsnAXYubrW6fEgAdj0om5UYJkB5NrWsLwVC0Jw0+0J1KzuslX9aMGX6Hmjs
/ybnzEBDw9P9+o4LFaD6WMG1w09pSPr3v8X0O63gsfW9ldo6GhI/K3NbQ6kH
xCx+G+XG+m9wut3n4/YhcKBj0w0hrH8l1C1Dnp4dBbdju3zcRWmINEI5q3l5
AtRX7b8d+GgR6XFK3Qh/Pg28mlL+uFstIKmDkpsoHTPgtIyA3XW5eWTB/f4o
dXELfDMfmdz0iA02WTuBGVc+OMzftHeUhQB5ohfbglf4oGzVYflkWwL07ekq
XnQmQsPp1iTJYgKEdyv72RhI8JDQuK4pNl8PVjywWfIgwfqJbI8zWH8R3DKP
HGfnh721Bb09LQQoIJxhevMFP7S/UOIT2EWAmrHmW9S4BaCrvSc1Y5AAPXJQ
YHC4EAyqP6uuK8AOhSqcz06/yAfHvPYksCvTkA5XSJeXYwNYV3xyiorF09EM
z9b1G50gx0hwwRSLt5SPhGef9w6AV68FThwooaE2iwDHd3K/wCOl7qhZYxr6
merQfldhHDjqaAvZty6ibiZEtntABbx2DGZjtAV0o+bh3eAiPni7nqzUqoiN
7zTvh9mTRPi6M4H49h0BxhipbI8tIcKv5nzM9lj7HpUpsRwEJGiz94z+C6x9
T/TP7zGtIsEdBgcemWHf1/CnRxlf4Ye7fr4duIX1z7w2ua2nTwhOTWYyHxVm
hzWBrcoLpkFAJJN/5NbUIjo3ZlX5pb0MbI0wXr1hR0Ora4IemtotoH7Q2be6
ioZkzb9xbij/BATCp9tebTQU/9K07kEYGYRly0V/S6KhwjMUxatVI+A305az
ckdpyPDu577gMgo4ap8RVhewiJpepnpcZZkGfQG/N96ELqCaMJ3mCxEzwLxg
8Ueu3jwKejiiOzy6BaYnuWoXabHBA8IKcoQHfPB4nPRoxgIbbGazer9E5YPC
lQf1J82w/llyNuGyIMIZad7uHXlY+8pHbp6ZIcIOJiA3gLU3qje/qu8RCdpV
eIU8wvqjWyNL02KJBJmcpr8bYv0lAvZrp7jxw4DSevUvnQS4zW7L8I1Vfhj5
uiXXbYAAxf1oy2veQjCh8/L1ERI7XD9/tGQm9jPYVL35hccJGiph3iNfersO
eJapHbjzgYbySt5rf1TvAAY3DjyUbqchWnPIybsH+8GLTAkOxUoaCufcUaSX
PQxuO18sabGlofth808lSsaAQELCra7xRbTXxd8pY2QSeLStfzAXXETZNjK3
UtL5IGlwdfytLAFWaQZY35EmwqOv58HVMAIU8vpd8eUTEd5U25HB3Ii9r6Sh
i9EhElTOnm3cjsWHSacgR5VcErQsU1RRwNof+Se99M0pfriJtac5to0AI2SE
lJTrhaDrjskX5dvYoefC5Q15ge8gItNVdyUIi48DvQ8YNdtAs4/N3d4mGuLf
kRz/6VQvyL+t55zdSEPCV5XOjscPATXPcRNj7HqVw24EKU4iDIP1/U3uBMhV
fJR/6DkRuh5/tfd2BQEGLiSYtmwmwZ/a28t9seeXfxTbRQohQaVtV9QksPeT
S8jgYtrGD9dNZF8ZYO+/StywPf+mCWj2xCWaf8Xiy3vDSzevd4E9bKvEXGy9
/fR+0syxexDkmhq3yuTTEPCM6PG/RIQ2w/Krih+w/riYYhPwgwj5NV4//YPd
r1BLNIimSoIPv/KuC2Ljz3dppcWrkwT/XR/RTMWef90nxfjBbyHI+je/N34H
O/x+2NqU1cwdFFwlhE0PLSJbg0I79cpS4JAAo9Ye0NAIS/K5g33NQOuX+Sy1
nIbkXRlMbjZ0A+vGviBjbPyZBw/f/6FGBqMTV9WSP2Kfcz9sPeIzAvKNbkYX
KdBQQKSQ1AE3ClA4zrBjUyS2vzRPCEqVT4FBY6+9lYkLSEh56fiiA7YjDU1t
vLSdR6K7fBd0+rH9nlN9mEuNDd61fneUZMwHt+/UP2g6zQZzivc/2z/CBx8e
WrjaYUCAyKdBPkKfCMnuRYMXcwhQdXH+5R0KEaZEd/KUYeujefzuH1VTEmS+
b1T3Cmt/aUWWJfMMCW5+rpB/EOufRDVqe6sdP8y3r35+FVsfzrrGl9v/8kNf
BtFNFGx/X7Qh5hx1FYJndY2YJLD1YcP2ysXmYzZ4nTlycPQgDf3xeEi9d7EW
dFAzyZJxNPT++0ERj452MDecLCGDxY/1X12hWdl9YFH4+5b57zS0pD2mU/5g
GCRO77vc54KtJ/bP2pzuY0DeaU718NwiUs3/XXU5dhLkBin/rJRYROTqkOu5
iXzQs9botOp+AvzAc/H2C1EifHZeU9I8iAA7eGEkTCLC5KBz6rN1WHzUfpzn
vpcEZ/9dzL+PzQcRn6PxxWkkWOt878ZBrP0edz+1ycryww6iTIIKNj/NhI/+
e1IuBB/dTusnYOsjxzos6ydLFXiy10viqz+Wb49ZHOnqbgU5ldbNMw3Yejg8
tcqIesCnSrUM1x809OQd56iy7hC4+/VRg95rGto/dvL33U1EeGev1cJVZwKs
U/GZsHxKhKxOVj3apQQ4JpkbP8VGghEB4yt/secv5dUo+/iT4HkfnXuHsPcT
4c3cFb2FH+bYR2YIY++/P1hZYsSvEax3a09cycXi9Yc5bqnWTtBg3SuTjq0P
ckSFtG7iAJgVdLNtKMTyoxPqpcWKRNhYrJq1KZ4Ahzr+XeCvJsJraeJHWrHx
Jr08Usd3kQR3fdWMuYZ9Vr4VuzLfSIIERkUtH+z5otaVwomjQnC/WlgVFds/
iIt+37x6WoAoiBgyqcHap2Gf/bHqJ6jzCd1p3EpD58ylQjxtiDDvmvK9kgIs
Hge1C4ktEaGBY0lkKTb/jH7wRVs4kqCtiGbvTez+MxOZ55sZ+KHWz00y77Dn
v/Tr9dttVg+GJo4knkujoaY83oj2tg7go3Hp3ji2vmaKrw6ypfWDuK3n+dXL
aEj7b/Qf6TwiHIg2JPc2Yf07fwNeOkGCTjuembRg98t9MKn6swib3wnLudew
51l1Xknd19UG1k+rvvVvpiEeDgPlO197waVTM1fS62no2sFfUCOMCD+YJ33d
+h2LXzFPFuKiSJA46HtUDPv9voh2b7fmLsCVMRjljvW3yVeNmI0uIqyPnOZt
xMZPby+fep8GCTbnxOuNYdf3KWik8A6SYHLjQdWW/+bb28CM4zQhaOp16dyd
neywzDEjUdLsEfjF+I+S0LeIAkV0m8QUSsFzgf2KJy1oqNv/t8Sb6Gbwy9rk
lSnW3hIWsdC1F93gkyGwLMP646gv/2mGQ2SgLOH4cdMnGkr5/exZoskIYFXe
XkmBNBRzXOXaihYFhKx0fX0Wg+Vns/6/wmOnQLdC/DP4aQGVxp2fvGo2A/ZG
i5w1eTKPLB00S7f/3AL3D2bUpF1mg/Pbm45s0+eDqY8VDeQm2GC8EKfjBTIf
vCK/pF6sS4A7VRcS7+oQ4YHCKwKXsrD4vdltv+kIEU422WdEY+NNfXCImWCI
xfucCf0krP1Hlw/btVBJ0H296Sc/Nj4mP+u2UKz5of+/pbhtWLz5qB60HvaH
H7I6jFLfYfHmnlkcd7ODEIQO21K/Y+eB/WZASzYzC9TP1Dd7StMQARDPHUQ1
4HeAyrR9DA2FXbZnor5uB+9ZR4bfYfPR68FyqdbjPsBamNR7Apuvksz1B/+q
DAPVehNpZXds/pwLqXbTHQP3/OcGLtAWkcGt3VNCTyYBsz/o0jy4iBxtKq4V
xvLBC/seMr2VxPZP8z2Xk3cS4b3J+M2UQKw93WZMrHFE6F+drddSi80Pu5Wb
L8RIUJU98kMEtl5PcbHl2yeToFjsHQsprP3zIQf6GQ7xw4gXF+6LYvOlZUu5
+rYSIcgZHFybhuXrdYdOsqe6VYJ9ARxNrj40dNwih6T0phUIeFX+HsHmZ2wB
j3S6Rw/YO1fpfwWbvxnnZ744nR4CFz4UcZ6PpKEdikJD9htYPrml8ZK7AwFK
EjNvyrgTodz1mkO1JQQYqqQAlzeRoMjSg+/7sfEhnn6rA56R4InkUunj2PuF
XTgkZc7NDy83f1RcwcbnnOr0k88MjYCt40SWeA62/qTlZ0JDsHijVBnzCpv/
RrvHbrObDABvcwKfdxENbQk58rnrNBH+ErOJb3+P5evvRLN7yokw6T6g7MPu
V55caCpylgSNPFwKHmCfDXtteDNqSbA/x770v/z2uckNRzAkBGtEri4HYfGG
4Nz8bjqqBdBqrxbtrKahrMHIAXXfn0CgUnplGRvfhMM3Vi88JMJx5q6O+XwC
vJh6N+/wPBEy8bk0dWLtc781miVmS4KdhVsn9LD7G4kcvvZulQR9uLTm3LHn
f7jgMTQzWAcCDgh6d6XQULm8phMI6wBfOq5ZB2Pry/aiFVfO/X5QKSPd2ILt
94WFVXdmsomwkz+hh4blXw48vf0aslj/2SzXL2D3+/G3yDDkKwnqnmJXP//f
87TCnodHtIHAO/kshdj+EBLqbbfJuRfUWySL5mH7R8YCZ9r2YCLc0T8ahiqx
87b4dQ7tcBL8tnsvq/h/8X+7sCkluAu0bh40iMP6u8rdnVDVRoQq7rrXTbD5
w60YNTtxgwRPuSxb/Xc+p5VLFtf2kOD0kad5RdhnSvA2jtY5IXicj7xnHctv
8ub65VI5fgLW/nnZFWw/juu7P6syRYRr1YN//uuvL/oBPa8tSdDhxdY+d+z3
H5XGT/PzdwB3qcO3vmDX218SPOiSSoQ10zkOTA0EyMJg8II5iwTlMjJjjmLX
qxqIqd0XagOshj3vp7F8sf/womzjCxJMU2QSlP7vfCaWtq9kSxfoK7+UkY+1
x4unpe9aPRGe9x6qNMPWy4EfjWOnWkkw99QfuQjs+pSGm94MzD2gooqrvBQ7
j07bXXHhXyVCz+U9bm+x9710Cfpmu5KgZFy+kTJ2fc+R2lxzYie4yUo5egi7
/5txQXmRMqw97hwW2tj3rjdYqksF2gFMHxe+jN3PWiidTIkhwXM/Dbr+i+/H
iS/i+Xi7QXfO5DdV7PeE2QNH5fuI0FI0L14Me57gh/Ubb1eEoN3WqOO5WPzO
J0jtemCmC/jJ2Z///VxEMhsGCwIzCGy2ME9TM6OhVhW+yCbXZvDXxqnofSkN
eVzOTW192A1OLuVQJrD5daXXN0loJxmEpko47MugoeXndt/6NUaAg+YtjX9K
WDx/ZmQwfIkCeiJuRpfGYecpRq3axqApoFMZ4uuYvYDCVKcqnPRmwL1zuVZX
ns6jYLGypOXOLbCx5iV16SIbhNZjMjt0+aDe+YgLO8fZ4LYLztY3B/jgdVvq
poP3CLAxm10LaBOhajVj7blMAmwVVlx5MEyE4hZWAs+w9i5lRb4c0SNBcDyw
KRPrn4f8s//yJ0iw549MFzs232veyWfNPeKHPDav7zNi8VvpWqKm3TQ/bNwb
tsUJi998hmbf3tkJQTHn/TPhWPz2iwyvDZXJApl6hXmXJbH8PsZ4ht+lBhy1
GfAQfEdDL7miHovYt4OKKPE3qv/lEznPuw6p9wH+mt/X27H4DTVPR3CeGgZs
Ca9KaR7Y+hnyXMu7NgaeW9xLa/i3iO4nym9s3J8EnB9VHgkfWUSV1b2qxTF8
8Gu2y40SCQLkjQg7mytMhNsyB6sTnhPgr1Nu+ZQYbD7xFA6dwuI3kxcSDdtN
gowsH0o+YfNR+ZqV4s0kbD2Zn3Dbi7X/YMa0/vh+fnjIQ0CaB1t/Plz+TJRv
QjC7Ku2wGxa/O18+/xJ8shIoij793O1NQ4f3dz5zcGoFuzvB7TtY/DZYfw89
9XuAx5PPbJlY/P7+xmBnyP4hsNtzS1PWG+y8+NC35+kaH9zwe/yAZI+dX+0r
CCQ3ItTYy5O0XEyAFtcYNjMykaCiCcvPS9j4iHgwU7Y/JcFtu4C4PPZ+Tfp/
Pl3j5Iei5LjpSWx81D6BfW+LGoCBrPwOjmwampzS0a+16QRfNFD6E2x+S5g4
PBy4MABq11IeaxVj5xMUlz5yCjtP31yQKoghwD8MJ0yKS4nw/c+E8db/zpO5
T47vVSTBX9f8td2w+1vt7IsKqCbBsq1+D/87b0P9rRLcg0KQLbGC2QCL30wK
8zxiLi1gx/eGTXZYvm8jLr0gZfYThPVZOUEsntwIM8mWuk+Ef0I4mDmx+L0z
T+TZiTkibKKe1u7D2hcYqXqKwYYE903xcvz3/42YUzNtT5dJ0GaGrdAae35O
UuuL7rd14Pg7O/eoZBoqWnWZtLXtAApDT27oYuvreCCjmO/VfqD8kevU8woa
Mt/Zw9OWSYQNzRZ7PbD4rbr9fbqODAlevCLxhoCNd99xid8P80hwh79uIsSe
d0/462q9Qxtw+vIs9AoWv9W7+QO7tXqBVOWlmGNYfNO5I6K3/oIII7ir9nBj
8TvXtDDsRBgJ5hyirPwXv7f1g+4d1l2gP0k55r/83PZXaHFyCxH2pBpP7sfm
z8jVe6UzaiR45nYGGyfWHmbWkIsfurH2asmRc7DfRz8fyn8/IwT7jp3xacbi
t+OJR9eeULuBpBRN5gjWPseJw6U3Jonw48ne5kasv8oT/xrZmJPgMkkvxg/7
fSIzZ+blhXbwyDpSxA7rb4lP+37pJBMh8WhTmUs9tj7P1gsOfSJBGjxzRQa7
Xln8YlncUiuoNXbYZo21b/KxbknqcxJ8oHw7YD/2PdNoU/Tf2U7AMEFp/Yy1
54jN6KsjtUQYefC47S6s/+T5TlgLNWP7ufWxuJfY9RZbRqM6Rn4CI6RSSsLW
c6UX72XhZSLMmlCZyMTeVyMwdctLZxKWJtyfvopd3z4/tef93w7wydh4Pzd2
/w/SnpWrJSSo4AyMb2Hf25Ok5BYX24Bh9PsSKrZ+nmjzW1ZFY/lMw4fb/8Xv
wx1ZROWZLhAtcJ7HHPt9vrrShHAPEc4oOeovY/3dEFvFYP5PCOY+Xy73weL3
aukrV8lP3eDQ9rirr7H+3LOpQEdvjAi5bq+mZ/33/8Xad/ujUkmwse5V9j7s
/qzLMm0GviRYlJ8UegT7vGgm4H4vpxPsqBCrj8WeZxUdOS61iOUfPIUv/xsP
Gz5XiYv2JMhrzHVI67//zzkeJXDkdoCCM+F1xdjzoobG3Z9EYvu3p+/D/95f
4s7SQk5WF9g3WKQfgt1PQNjy5nAHEeawjua+xd6/7keK6PnfRBgwVGD23/pY
KlpikswhQfObMpfksN83TwemzgSRYIBa+yZJ7DOPvm+hn0wX8H2zUvHffitg
7pfOs46dlzW5rj/Ffk+2Sjp7VLYTvGttcrj6Xz7XoaTBFUeCOhHyn/+bvwrX
zWX6D3WDeKsfCYex7zVfbHW/PUCEfurdzcrY7w3STiQ1rglBozHh90NYf+L8
ymQ+7fkrpQGA86tM4iZvTQYywPlV37eb78Y+kgHOr4zM/2qoFpMBzq/a1XnP
aouQAc6vstSdozjO9AOcX0lZB4RltHQDnF9ZcUUu7ddtBTi/Ij/hFFM4UwVw
fvVHzC173Dse4Pwq0fJn/B6vEjq/8joq3hYS0kLnV/DZee5orj46v9Kdv7I5
+d0vOr8SurtubqhLofMrcc+UcM2XVDq/uiF3QHw/2ySdX/1NsPhjfnEU4fzq
MvkOz4uSHoTzK80TPfILyVUI51cN4TfD+F/n0fkVp3vJ27n6Tjq/Ome5vmmP
xDCdX52J7828FDNO51c2zJsUXasm6fwqm+e075YTU3R+pUL6B71vTNH51bHm
tKsLKlSA8yviae2gvdITAOdXBR0557N3jQGcX4lei7jk6T4McH71+l5jXfyj
XoDzq8ED9yuX15sBzq8kZjh2TezMAzi/+jzsHTStWYpwfhXhdxCRhzsQzq/A
wi6Dg+RhhPOrjI93qc2DkwjnVxN6td/ZCmYRzq9eYCebHuoiwvnVt7LYNy5b
awDOr0pnmvk5b5UDnF9N7J3w5nP+BnB+dbQz8Ru7dS7A+ZXeSHLr51vpAOdX
fmM5pq+y4wHOrxoOMwxypL0GOL8Kbuh7p3vkCcD5FRQQVVuttEA4v5I7M1Q2
VhiAcH41FXPjtoXEIMD51dF2j8I8IzLA+dVm60q/8BoywPnVLHBcEfIhA5xf
sTNeOEP6NwBwftV1fv05Va4X4PwqVenM08W6DoDzK53qqM1L1xqBMpPu0Fur
FXBLc0eGC+sYYqj1TBR1WwNGZy3uCvhOIuZ778yb3mwAmQOsx8zUqChMvIj/
6w8GuM35TPu7tXEUVW4dR2xnhOHVWon87UNI4cdW16l5FqjK63trUXwAdCw9
9bVbZoUOaipRCztGwfDlvNP+jAT4KPDpvQMOE4BBWXlOcA3bx48WPXJJo4Jz
6Z17Cxg44BT3hHWN1RRYlTtAGGXhhNa7XfIbf1OB5G+V0LdcXNBps3sR5c4k
cOYwfW+0nRs6hx4c0i8fB/0tQ6kpO3mgzXbmXxUmIyC3TFzXQWwzXHhi4xZ1
ggxw3sZxehqbmPMI520/vLo3FR+tBzhvU9XV+MTNWwVw3kbZulenuAMBnLcV
ndNr5qrPBzhvu2Fow6m1JxuM7hvLzcoRgN7pO04zXk4GrseHHdUPC0Iu08VH
yfvegSTbu26MOdj8KOfSUPUJBOzV8l2Pj2LzQ8OmzSxeB+C8Lpi9s6ngpCfC
eZ3TC7VnJ3MHAM7rpFP7b0cfIwOc1zXxev70LiEDnNex3cp6p5dMBjivM4TS
XDBtEOC8jmfZUGvoYh/Aed2du8EGxtpdAOd152u2a9i/bAZF/n++lc8tAzNh
MXGdnyPo8ICu2df5VcB1+4b3j5AJdOOJTMUwcQN8aTB77BpBRYl3XBzPv2KA
yr+swrK3TyDfki5HzWBGeJFy8NeBt7+QyRD1ycE8FsjvHsLdF9gDBlpW1x/m
scI79mpixzN/gTZlcSpLORtk7+GOMIyiAA+VV5NtJQQo+3KO8fg5Koi3/x62
v5gdPsnQOxqgOwWUJPnSer9zwCrKS4VhySlwJbHr46UaTthT/qiFtXcSHPze
yHijmwt6pYXvLHejAMec00pbydywyah4U6fyKDhgvvf++0Ee+JLJNeuTwRDA
+eL9+TD2I4tzCOeLmvmz6wJDDQDni0n2t38bBXwHOF/MLTAeXRMsAzhfnIln
7TaIKAA4X6xQfHjYozQH9JkenqWFCMAm87QTBaWpQH7hjdapLYLQSjTKoTAi
FrSGm249FywICXDZoGnwFfjoAnmWSELQ6vW2fQ0BNgDnkx5RUXu3HnZEOJ9M
dvVJ3Bc+CHA++Wjo1oBCIBngfLKXNPfaEIsfOJ/k9jD5KHmHDHA+KWec+JZJ
egDgfLLSZGLOc0sPaHduYrX7vQJijuZrpoiMo+bPCeRAlnVQkDh258URKuqJ
YSb0b2aA2uToN9MVk8j7z2qONA8jzGW/6nM3dwylf+esaxJkgvMnrXw/+w+i
LcUXnT7KssKovqYbY9j8bNjFyet6hg2GCRi0xDwcA3NXlIO5FAlQyKST6+K+
SeBxbuOf9il2uHiR0UB0lQrGhsYKz5/jgCU32RhZ70+BvEvKxr/PcUIBssL6
fCIVMMuVukyrccEnUs32/HUTAOelz+A2x9SXCwjnpfXXnrw/9a4W4Dw0OHil
L36rD8J5qMHGYVkxlwGA89CPm2/FJ28nA5yHvlEZauj5QgY4D30remWo6DMZ
4DzU/+SpU4H/BgHOQ+1z2wVJ3/sAzkMj2q/69G3tBjgPzRgK/RHh1ALsG09I
dX5eBvfXFM/ynR5BNRTVy0+zVgHP61PtlxkmkPPLlT9TzesgPI9zjfUdFe2f
75HismGA7fy/eGQjJ9CTooAR54dYPOYR1eeyG0Guk+oeP8JZILPDv/nZrG5g
cKag0DKMFebHPHD9Mj0MGi72Kp6LZ4MzNwe+yIhQAGz8Mpb9ngB180+caWej
ghbtMyomb9khpepkvrLqFBh9772qkcwBHXJ3iDSCKXDP/V2eyAdOeOP82U+R
/FRAEGf8XJPHBSef5Rt2d1DA93jLly2l3LB2ibKp8csomCxKsflczAP5Q3VF
f80NAZzfbg950mqtMYdwftss0ba2LRTLh//Pb+/yVdSdu1YNcH6rtvlLimNu
GcD57R5vxfD+Z4UA57e03fuDWMI/g65nt4K2PxWA8mlDTBpsaeBNu119BqMg
HHAZlAiPiwOUvQ9Mjd0FodFjSvBjFAqWb1VIybMIwVLRkhbfq44A578zngGd
DL02COe/V/rZcr7fGwQ4/93uMBvu6UQGOP/NuvtFrLmWDHD+e+OpitA2azLA
+e8f/T88Uq8HAM5/L+x7UXompQe8LBGw9ctcAYEkZj+58DFkVhJSfrtsDUT0
b/5tOTaJ+q62KVT2bQAvJlbGss1UxBVw12j2NwP8N+ytNKEzjhIqS47NLjBC
/uk+WU4KGUl8z3JWIbHC+IzGLzZVg0AtsLreUZgNBlBzgxTrsPFQ2Ri7vBuL
r1zsvJ7tEwB+F1s8iZ3TJRhK4sM6qYC/+p61uygHvPmrgJnXegrcKSvMM9/D
CTV/Zyf/qKcCAaKPb+VBLjjmpX+EjTQJcB69dYTNyX1kHuE82rZu34aNSR3A
eXPzol3n5+ynCOfNP/bNHWZVxfKZ//PmkMIN+/pKMsB5s0AN3+MDkWSA82a3
9YT3VbcGQWSblc+03BpQ8HsY5Mk/ifY9NA3v1tgAvzMu/+hwoyJhtL36SRYD
LHHrj/IJoaDgUnHu4zmMsCrZ3TO+cBj1XHoQVj3EBl9Wz5m2cE2A0tr7vxf6
CbDzFFGr0JkKHr9SHZgbYIc7GoqOrFlMgfdZ7+/ojXFALZYT6z3cUwDn2Yci
D39VIDQAnFcHxafdL40mA5xXe8ie4D2DtQfn1aXOKwxnzpCBXGruetmldVD+
uD8lz4KKvoe/n70twwDN3t4lnXw4iUrLe9bctNihVQDcpCQ8BfJXHzJzmXDA
lysxrg36U4DY2kF8bMQJ8zp1BtWw98V5d+eLzT+/nVpEOM+W1Jd7Q7H2QzjP
TlE49bDi3gDAefbLScczkjxkgPPsZ7q/NVKyyADn2XCgT2rgKxngPNtx6rQ+
02bs8/95tv19W/Uupn6A8+xVjgT9aPtugPNswwbJr/zTLUD9T++gbtgyELip
nfB1+hciPbzwzezlKlDZKrnzeTYFvQzXY7XJXAdvvLZZHY+kIquyAK9HBgzw
46HI6QctE8jplNG2QB1GCNgztsoPjiDWR+yMIr4sUIaf87cX6gKJthFCFk9Z
4RWFwoQPAcNAufr4A8MQNih+RnKrLHkciPDUjIgEE+CRUXYfs/FJYKbqLPE0
gB06HSEoPzyL7Se9p5PCIjhgXVPCx6xLU2D8vocC12tOONwn26sqQwXzrVGc
zB+4YMItXz0nhgkwHeWVeyCbG4olvenZTR0FNSYTdsXpPPC2qn5A0slhgPP3
u1JfQx+zzSGcv3cz//XfBWgI5+9/sov6cj5XA5y/U0t1OU4zlwOcv2sP8z8/
s1EIcP7+rr5FvYMpF7STzO4dcBGAgd6Wlf6f0oBy5a+nlH8CcDXB16JRMh7Y
zjziWbQXhNFWPyWKPocB0QrvE9prglDknHVv/CkXgPN7kdgDmvJiVgjn97mC
x/uzlQYBzu+dDgwEaT8iA5zfV4i5dPpg8Q3n9wZc3Ho0FzLA+f2+Hd3MrDUD
AOf3WlE0Ds3ZHmBJLpTmC14B8ndD3i2rjqHcswGyp9+vgW+HBOy2FkyimVty
Ny992wCxZaFlVlh+oXabq1h9kAHyfDrxmTtzHMWcjbRkGmWEriFMZgX3hlD2
ZeOVt8ys0Kai48fLtQEQUp4k5cDJBskPyuyIdqPApF6Lz2ILAfb0QP6PHyaA
CNvx+RQudmhreV3xWxkVpBdEXYnewgE789miI7H4Jr32WDeZnxPyzN70rO+n
gvcM5txZO7hgkU1LhPOJSYD7BNvEHos5BM8j3Ceo3vfG929DHcB9ASstoFri
4IVwX0A7wDyCRYkMcF+Ar+2R6GIZFs/+7wuE63WGi8aSAe4LlCwQVcw9B8GI
phmtVWAN5NtQnsp1TqAz9g3pOsc2gBXnwxTJF1SkF1i/azgWi/9dGQ3x3RQU
CNaVLsYxwr+kXR9y9v1CGrU1aKyFDRYHyFiHtlNALIf7lFETASYKPlc8okcF
HN4BBZub2CEX7xrvijF2/p/SZIrp5ID3tB1LydunAO4jtB4YObr6uAHgvoGf
2gnuGizPwX2DkL1mnKnfyQD3DeAB4T6+K2TgfTD9UfLedSCn6Lhn33Uqat7W
6holwgBjN5pHL7+dRLGbplemLrNDfb8gwQGuKaD65+Og5C0OaFiWIfzCdAqM
cAcVZalzQle2R8vbgqkA9xVg4gWrtpEFhPsIkhW0mtyLvgj3ETJzJrOdC8kA
9xH2XCwdonwiA1fD2z/fta6CUpYL16xVJpCJT/hP07l1wEptfVQTTUXy5kxW
l9LZ4a6sroKk21OAZFR/c2s+B/yknJTSd3QK4P7CWrPFj+ZxGsL9BJ6Yui9i
T8kA9xMKQ2QGHmHrQ/jk2+s2v9bAtVP6vjM8VFRz/qEEWN8Amo0pWx9TJlHK
+dGNQVYmKFJ04pq8PhnpPduyVLePHXqq7BTlnKSCJ+2i4QayHJA98x277CNs
fP7vK8g2ivQwVpOBkAmTx03HDXD0b6NOsDkV9cXwber8ww4bXh+yff1wCtRH
fKn4kPoDjO/ittqdSAa4r8A+csBbBJt/U2LFL/os14GEgM3ZXe5UVMT3wIRf
iQGmfFIPa1aYRGTPmg0eC3Y4+EJm9Lr0FBDhkJX6Y4/lA68fy9VoTQHcX/jK
EOZ9OdIf4f7CcIDxSILaAMD9hVMRIayX2cgA9xc+PE6S/omNB+4vNDmEXdr/
jQxwfyGFPfJwvSD29//+QiLlOnOCSD/A/YVjtzXstRO7Ae4vGNdbGKtKtAIl
hoPfEr2XwURUylBV1S9UeLj8sbYbdl6FhiJDfhQUuS30VW7MOrDPeL5ICaUi
vpThg3FaDFCp5/rxkqkJtLis9oV0ixFOtqYnhBJH0ZVsQ0Vldxa4niEet3q+
C1QF+VyccGaF3ExFO0M1hwGr7wjT4wA26C91xtsFjYPggy2Gmn4EWHouNT6+
cxLkXhQK2+LFDmNqvDysTmP5g1OU0+cgDqi2Mz5JAcun039Zb3gGcsKGp39l
K89QgcXH8fy4d1ywfGpu+CH/BGAQfFmtncoNC8NaL3mxjIH8b/4OSok80LX0
m0rW3WGA+xZGF68H7SPPIty32NztamDCT0O4b8H2Yirccqwa4L7FtRzGGK/9
5QD3Ld7ebxl0UvgGcN9CoPBkUvnJXHDz7uz54w4CkMtFPk6XMR2IFG3TY1kU
gPHhmV5r9+NBofqsfomNICw12LSH6dBrkOdkXGL5TxAyJHnfoX5xBbiv4XF6
Q/Sf7wOE+xoTHKe+hR4dBLivMS1mli5kQQa4r8EvzGwihq0f3NfgGagN2eVJ
Brivca3DeeE7eQDgvoYu2PX+Bn8v0JrlYr3tsQIMDjdsH5YeQ1qsrFOHXq4B
v82NDOmxk2j5p8XA848bQOPdJBuLEhXNnTYy9+ligKK2y1c/do4j4U3PWJ/3
MUL1hL+ZIW+G0GIgOlW5ygLLvS/9+Bg2AHL7wzQXmdjgZaWmzLJLo0D8OSHF
iZ0AqcNxEyJBEyB4L3hMZmaHZ4YmdGvyqGApR65Qmp0D+gk9GdXG9hfi22bZ
79ycMCVvYslyjAqMHLSa9/BzQZ38SxatypMA90dI+ReNc03mEe6PSNq/Hs5g
qAe4H1J6dCLrzE9PhPshQTqMGf2nyAD3Q5gvPaxXKyUD3A+5Jv7CvDuBDHA/
JLK/6ejL8EEQsH0ks4plDbQdV9Zl+TKBlJfXT8SKbwAbQOX5G0JFTI/FGohv
GGCk2tOMF8sUxLEx2f8jkhEmjVVzJRpi+Zu//a3FWjbIGbfjW0E+BfDu87OM
/k6A6v4DPQY3qEDDTXJvTBU7nM0Vr5kxwM4PAV86i5o44L/EYFkv0SmA+ydP
A0tGdD42ANwv0ZhO8Q4LJgPcL0n5cVghGot3uF8iVvPyzZcbZCA9u1cySmAd
9Iz4Gbph49lx17L8lBADDKUsvtiXNYl4xRedxc+yw6xVZps0Zix+U5Sv5l/h
gKlFuTVz5lOgMY0a/OMKJ1y22RD9EEUFuJ8Sqr57+kPBAsL9ExHfgTuS2T4I
908irILOncbyYdw/yfQMuT6B5cuiEm2vgstWQev39WPqEhPIiqPW6OPQOrh5
8+tbf+y87mMQ29+VwA4XGBojJG5OgVVGSUm5TA5Y9sD5hr38FMB9lRr3lxr3
imkI91FInk9tDZ+QAe6jvF/v0P6CrY/yFQEO49Y18ORld8yllUnUWhub7Tm9
AXRLeNnSVyeRBEtrlNk6IxQS31srl05GzUnbHJjE2WH7FTkWVzIV1DWWbpqV
5oCaFs8bVaymAO6n/LD++Xm5CmvP5FHOcNMNwCdwyl3NlookI7OsjMbZoU9f
otLifWx/vqUlbL/7B3hlWLfbG8tfcD9lVbK8uKqcDELG5C780FoHodsaDwbb
UVGZOmt63kkGeP+CGTuPxiRSi295csGAHcbG7jhpKzYF7m9qCXd7yAHN/XiD
bO5NAdxXYTDmJ4Sy+KMZT12Diu0twJGtNuvmZ+y8/X9/xUlkc4VhHpZv8B10
OVS6DviO3Q+Eb7Hz362+r/Mh7FBm0s+FE8vncb9F5zajAqs5DeE+i/p0jE8p
1p8i3mnNTtOMUCZ2LuK52BDSK10d4N7GAVNEG0TdsfWL+yz9HPtcbSuw/Wru
ze7tF7D+Odb+aKcPFZUETKl4drJDgYidaalmUwD3W65yny7xx/pzwPJwfq7c
OnCJfaAadg9bX4tcNlE6HPAhW6Nnh9EUuMtkpLpn0wb43re3uyKKin4/MmL6
lssO3x+zLfiuPQVw36W2Y+ivDd8Swv0WgQTKvY0aMjjS6y3ZfooDyt+ZV/r+
YArgfstRNoFQMrZ+eIZ/zPP6b4AXUz/dI3SoKDjJ9vXFJXbYyb9ZrxfLL3Df
JaH4025VRAYX9BU7JlzXwZ+wEDcDXyrCfZdIpqDXvNIBCPddejjOj0deGgC4
73L72VRc2yYywH0X7ZQVZaN0MsB9F4mn8j+UisgA910sAyOvbRMmA9x3aZW9
om54qB/gvktC/lgg3zcsT/i/76LnJvmvRqkVFBK6JKtdlwHDWHDft+xfiJuP
obnddhXsYdJTV7CloOi7+7tuha+DgzUC2y69oiKDtzwshRoMkJC5O3XL8gT6
olXN9FONETasM1kEHRhFD1uD9e+6sEDyP+UfbOxdQGPH+kCKPSt8FyGtZAqG
wajJt0ZnHzY4PMDUM5sxDmpKbonZehNgTKmM7/amSaB1bryu240d6u5ckL2K
reewmppf5c854KkTD1jM1aYAz/tJsoIfJ7wC2q4an6dieRfPS6s3XLBncltn
664JwNFBbLFJ4obP9Cto7/nGwMGxO0vMsTzw+Gocs8jDYYD7OYy0p1KvG2YR
7udEOmUWRDHQEO7nmHrcSaJsVAPcz+GbrrYrgeUA93PGVnXd5bW/AdzPUTJu
m9a6lQv4GPIK5O2w8+PZC7+c9qUDLrnjTcR5AdgplTErHxQP+lhznsdbCUI1
wZuCv++/BgwdHYy2NEHYnGfSOPjYDeB+D7QYVODcex/hfo//rkNaHgcGAe73
ZMsYBliakgHu9xSHFe0axuYv7vcctD+/Mx7Lp3G/56azIs/q1ADA/Z5DSklX
9+3tBS3/vjx2clwBTo2xbl+FxtCn8bPKqc/WwLkllnmWsEm0sZ1Z/ED8Bnbf
rD93L1HRWZlg8L6NAapWUq1OTo6jXoOVm9e6GWFiQvLmwbwhtDVjSrt7iQVm
PXZwmLg7AM5Zcs18WWeFzl+82yZlR8Emy0EbTxYC1AE6vkefToCa/Iojqwzs
cPHEwOED2VQQk8k2O8vMASnLF7l2YPGCMLn+roOdEw5oG+cmYvn89yNt2WRe
LujU/rfK+PokwH0jDhP/fb+uzyPcN1rZ6H6Vtq0e4D4RJesPwzt/T4T7RGFL
SeKlcmSA+0RkuZT3j7D1ivtE8ErB0fgkMsB9Ii+13R4LsYOgf3U3F1hbBQ9z
M2w4EifQVYVIN0XhDTBLsJ7TfU1FN02uxe9/zQDfhtsXynFOoJp7+vvCwhhh
5sEwLnv3X2je7KrIehUbBDLqx3amUoDyN659X8sJ8FWFmJimChWsOtF0jMvY
YbHA3S2X9LF4+fMXbKjjgH2Hey0K90wB3Fdq3rvZJbOqAeA+Umi12r4HL8kA
95EIPaG6LNh8wH0kuduCAgu3yMCt1dibyIPtJ3m+np/kqah77YQxF4kBNs2v
hh4unETKuc7yELBDcdn+EmuGKQBHBb2fKHNA0xMO31gtp0D58taVAWVO6Pat
YWfHeyrAfabyzZF3RBMXEO4rlc6Edngb+yDcV/p0PSWBN58McF+p3f9WjmYO
GdixbfnNXrAKzn5TyL5PnEB2Vww+qvxcB7bNdtVW//1/XvcR6f17dji0dat/
Bbb+Z9Q0Qi6mcUD3brRNGjsP4H5TaHtj0/EUGsL9Jaq5ROaiCxng/hJTnvOW
Gmx/4u9XNxmoXQMfknItGWcnURenPE10dANQaMtntFmpaMRImbJ/mRGGfDt4
YH8dGRGOvz++U4Qd/m5cNgztpQKruiD5rxIccLLz8dOv2H6P+0wvSfV8Ztj+
JLG/Se2E7gbY1u4YK+9ERU1h7sn7frHD63UEBhZsv5/JTa/R6W8CKR0inMkx
ZID7TNenC919sf1wtNo+XvnGOrCs2hp/xYqKKhdaVX2PMcCEPh3iBYNJ5HdE
44zBPXbIEzifN7prCos3sY3nLDjg4MRAlJTeFMD9JqF7ehf7vvmhybNP25ZW
moHZ7Z3PmLD+xn0n4vRbrw/YePirV5c2568Dmn/Zn19vqKj8etqfby/Z4eMU
t0nlC1MA96GEbfWkuNVpCPefXi9VU1Ow/hz8tXvnmQlGGDoSNbdfcQixFtfz
d/BzwCTmj9Hh2PrF/SdqDOlYIZbPnDwqa1p0egMo7bS3rvenIiPfb17KrexQ
JFaoTsd0CuA+lE1Z2tTO72Qgc/Uh8eDhdZDhR7QmaFJRylxviv4dDsjYgLxP
mUwB/XNrod+X14GsaZLfbyxfCbsve9Irix0mfBeZL7szBXA/SuaEya/tazSE
+1BeisqbTmPv3911U/ftCQ7Y4rN1py923sd9qP6y1Ev22H5PFDeXz/HYAJvv
1g0XGlLR8fizDTzz7JDzqrT/WWy/x/2o3by7VhWw88IbJXcZQ9t1cMJ+s7XF
UyrC/SihC6R4lSF/FNr9T4WYvA5+SPkKyYVTUZTfjVdfvrQDi9MC17Ww97mR
Z/7UkJsDPqC4bH6G9d/Zr8Zz6/s3wAXO7ZPHgqkoy+POTGctO2QVP37fE8t3
cF9K0IQgJom97zzVSWBGjQN+37sgV4flT5Y1h3axT66DN6rqLtex9YT7VE2W
Vz+8aqUh3J8iCqYtRWDPN03SvprIxARvOa9J2viRkXjLbIPUIQ64U8RtvhZr
r0Wk1Tb9/DbwRBRee4qNj9fboZPvqOyQYy6LuwXLlwDLysQtw3UQqZKy09OZ
itybw469rFkHjrp+p69E//f+FQ2DRztA/7nM6EbseYUVB1Iu7OSA+8sKwA2s
vbdL6wjenBtA8Ub6Y2VsPuJ+VdjleL7OvUsI96vkRbZR8rD4FjjwZZYLckCr
ZIL/DLa+vIKHbj0/3g7cjD+lQez7yZSkex6r7HCa5TSXDrZe5903OVk9WwcO
D84qsj3H8pn/+1aHnw8GvbEJQLhvxcDbFFS/06AE963aFsDbc73v6PUCpqd2
sV9gS6PXC7A6sKuvf2c2vV5Az7hkodnXHHq9gFSmoOizJjn0egG9fq/0Z02z
6PUCEsreX34en0qvF5CcEFc52hlLrxfQp+KwlJkYTK8XYGDn2kKKOU/3rUiA
aDQk4glw34ocdjrNpNoT4L7V87ZM31MVNnTfKpXFSvqrWBzdt5pyr73Xyp9H
960K71JSPr+spPtWOke8XTq8f9B9K/881QWda51034pmWpeh8aCP7lt9yM5T
bbg4hHDfKpHZa6N7+BfCfasnBh1bYvtGEe5bPTxZoTVvM45w3+rUw3+1AgYU
hPtWAflqF22qKQj3rZYunh+Ziqcg3LfSEVIKj1wdR7hvZd/vKMJYNoZw3+rT
7anwAzyjCPet3P9++/1a4BfCfau+nMmPwtFkhPtWLYZfuCu29yHct9oeKH2z
rq0T4b5VGfFuQB5bC923cnjOK8/+rpruWyne1P6VG1lI9636P97mu9edSPet
EnS55gON7ADuW0nyqo692BILcN/qbGt94EOeBLpvdWdRTLQpN5nuWwWyasQ+
qv1E960sn0mJap/KoftWbQpNgZIgj+5bqR1oOGAJC+m+lezKk6w29RK6b9V6
01ml/34Z3bcKKGcY5AmsALhv5VbGT+4fqwK4b0Uci+YyDgui1wuonIwnr/om
0esFJNrmPOgQzaTXCxC4utdlv2QOvV7At743+/yac+j1Alo+5ypphmfT6wVs
9dp9Ps73E71ewLDIwIeue0nIlddhv4bOX2DzdPbG8kkPtMhbdj7CYgFIl/i8
1TJ4DEJM67Sb9Gjg2RvutEAeb+AU2PBY2vQfeCkcUtFWZEX3tQhWwgHbT76i
+1qOwuNGN/Z8ovta+7kfJ3hPldB9rRKjSwdvddYigSaH7b9nmOGFFzN5EonD
dF+rTEEjq+P3CMJ9rZThyrD+wjGE+1qHxnK90lfGEe5refc61e9LoiDc10qD
fyLmsPmN+1qfPe1+X9alINzXqnQL7st/NI5wX0uJeCP00OIown2t/pPLJ8/t
GEF4vYQRpDhwYHMOwuslXOZV47ZPD0K4vxUTLPFF5Wo4wP2tM5FcIX0hcXR/
a+D2q9WLkkl0f8vI+73P7OuPdL8qJTeaS6uwEuB+lVp74c2QYx70egiBkw6O
wTrx9HoIftc9LrIe+0Svh0AmtVxqy8mm10MoEXAfVOnIoddDqPycO9LIkUOv
h8BHUusrUcyk10MIc3zaxBqYjOwtD2V5dcwBSz71atnnfqj0i+GxOuo8uDqq
JHTgvAFwFhQbch9ZBHfuvIlbO/QU7KizGb5MXgI7ZT++/SPgSvezljNQWlO7
N93P8lpf2RVY9YHuZ327Ry0qu1lI97Oac54YtYhVozvf1Cnpn5ih+1DKW8d/
Q3Q/6/BBtddP748g3M86sDly3kZtDOF+1j0unaLwb+MI97OGYox3I18Kwv2s
uGfCWx81UBDuZ+X1ab7iekZBuJ/lfa47z6VwHOF+VmW6U8pd3TGE+1kbu2JO
B0eOILwehJKjE9Pzk3kIrwchN5W7m10uGuG+1u8ffLKe118A3NeKi7zT+HdT
HN3XImaCuWXORLqvZZZSa3x5Wyrdp9I7X9ugK1YJcJ+KcH9z4GXOCHq9h90a
KlwRlin0eg8cE+Mbx8yy6PUeSMNX+eXdc+j1Hsi7BB+JpOXQ6z28sjmxfIoj
Gz39UpIiNfoXWF7iPlNGsUL77+/UMJpYABkD/EN97S7gY751p3A/DUg99tnB
GPsUdKhKsHD8/gc+sv8mTzyUpftY1BTBxFdSb+g+1l7itTgHsRy6X/XJxpIj
0nwU4X7VpY1s9uLt4wj3qwjB5mcOyFIQ7lepxQiIGxVSEO5XVRc8rCJin3G/
ym4TR2ylDAXhftWRGuUiN+Fxer2Kf4ZA56dCOsLrVYjHt/80crVBuH9V+foI
p490NMD9q2lxv840xXiA16sQ2OVofFL/A93HUlI0/jekVgVwH8uOnOT1xMKK
Xp/ic85a3JGMWHp9igq5z007JNLp9SkAk3BB5v1sen0K2Z2M1B31OfT6FCDQ
RqT4VA69PsXvWtKSClsWvT6Fe9i7eNuoFDQXyTkX+WoO6FS0WgYOBKI9hGOf
DNPnwbJoZ8L2Eyrg4aMfCZofFsEFHi9UfMUL/KFUbe2NXgJHgkRLz+3xoPtc
NVvcDh3JdKP7XLPvXgWd7E+g+1yrR5weQqmvdJ9L3urfum5HFVqWqVDlCmSG
ccPF1c5xQ3SfS1rB9uVryRGE+1wSIrziuYJjCPe5hrQu6mtEjiPc53r2pa1y
zo6CcJ/rrtU3qd31FIT7XAE1JyKWwygI97kGB6X+xvWNI9znIu9sCRZ7NYZw
n8vzzDtTofYRhNfn2GcTothq8BXh9TmUWW4s6pjHIdzvWhlq2n3Q3Bvgflcc
67vhsORYgPtdpCC28yf9E+h+17rK94x0oxS6f3Wnq8WitKsC4P6Vorjj4zzH
UHr9jZ9Ndit5TMn0+hvKzxe3dTBk0etvVGyKWbC/nUOvv6FocbGnsyyHXn+D
ffUoUfJmNmL4FTUJ4v4CYvGpPc99HdGrkj+Na6kLgKS10YS6HUDM5p1vFmJo
QHVflNBXJm+Q/MBJIerjP7Al2GGmk82Q7m8p6BFsdLle0/2t34zKj8mqWXQf
i839dsG+A6MI97Gc1x6leEyNIdzHUrFnKXAXoiDcx8raWvGnMYuCcB/LVu7l
+IFyCsJ9LP2rLi5PLlEQ7mMFaXA/kLg4Tq8fIpnNwn5lcxbC64doJOl1SEh6
I9zXYq2uCImzfwNwXwtQ7HhNx+IAXj/EXDah+EpZEt3fek22nf3EUkX3tcLb
iTxzshn0+iBKmieZr81m0+uDyN/Km9vclYNCzX8PF5SNgthUkltMWzbSNgwp
PrxvAZwpfxJwe/Y+8EH2O5NFaeDMkNEn4eqnQCVtV1qh2D9w/FD/u6pJe8B0
IVk1U2YFgJXNBm/uPqf7W81fHvR/xuYr7m9xlFn5ukZQEO5vucYXfbiHzXfc
32IuNTwg8ZiC8Poka7q9S5I5IXSfi+mA0uLli3F0f2t2cSXiRXUWvd6I276L
i97vcxBvHe1oD/oFYnrmSYGBOahm69WBOslFENWS+OjNNXeQp1tFPLd9CbBM
HLpQOewFNh1ua3SSWQbhB9Jm1Uz00PLVVyeb9LD3jc4Zy1Wh0H0v3cN2pX/K
KAj3vWTUzoYkZ1IQ7ncJLTJ6KhnHANzvYpP9sTH3tgrgfldE9LMHNd569Hol
vkm/HmyPfU+vV/I1QXM4IzKNXq9EH5BoRRey6fVKBlSr2DvLc+j1SvZITC3+
uJ5Dr1fSjB1WtOWy6PVKcrnyFW7tSkVZmf/4Eh/NgefXZwhKW4KQZvYO86zA
eXBc/PHtc4pbgdnbPSznfRdB/5X+zWnIE2g6Pjom5rIE9MutVRlZPOl+2KDL
2ESHoCPdD+OpqLiQ5hxP98NMI5gi44Xz6X7YPc2fvRwyVUjlwTKjggszVH+v
mdhtO0T3w1ynRiJnWEYQ7of1RsRZ2y6PItwPm2Ord5h4No5wP4w7vLfiwn0K
wv2whIX29de12H74fz/sY/khC9loCsL9MA/tl8G/psYR7oe9/xA3dy11DOF+
2L7dwc3XZ0cQXq/lVlZI0EnXAoTXa7E1uOVUJJyAcF/sUMr8uKKqO8B9MTWu
r+XphrEA98WcgVZY8+UEui/2dqsfJxNXCt3nOjZlkDORXQFwn2vAoKlvKvEV
vR4L9exn9tCLH+j1WORSE2cUwzLp9VhGV9UNK2AOvR7LodZj7kfqcuj1WF5J
7/J3tstGJf/8OFXc/wKXqH5nf1tXVGna7X85YAF8HWcoME63A5GnbJeH3GlA
citbxDmiN+BdE9Uc9vsHhI+Np8R5W9B9sGN5xqnhW0PpPlhr+ZsY294Mut/l
Pjjz6jR2/sX9riTZHwUrbWMI97s+nj/bq8VBQbjf5R/qaHUmjYJwv+u41yUx
7SoKwv0urT8v/kfUfcdT+f4PHLcSpWznKBqSKJWiUsZ1tYSShoaGEclICiki
q8yyUrL3QShkr9uxZWelsh2OPbLn7/49Hp/7+v7p0Sedc59zX9d1Pz7Px+sd
EaWBrwf/+a5ug1mLtLuDqCezG9v90mBLKkb0ZGRi1U2vt7ljhP/y6Yx/ZTQZ
AAj/NRPblULJiwRETyZOKfTykEUs8mAbrt+t3NhdivyXwZSWr21mMurFbCpn
jd6Ar4eE/1pJuXf5JL5e/u1Myg1zogHvrfqJyxOpmBfHK2u7zbMgTSLayDHj
EXAYqbH/wDwP2ivNq1XeOoP0U1XlTEyL4LnttJJDhDXoenRxw0meZeB7x0Hg
4EY35MEe7JutNKoZxAgPptNaTOnypmOEB8sNVnQ6ip/fCQ+20y9P5rYtHSN6
NR+iocyGPB/kw5SP209+EI1EHizKrqW193MK6s/syx57peaThplvo7bK2fYB
njs7LetD0rCl4mNBJPY5cPj+6Fh7lB1I8dz+XGplHujoPckeu+QMHmO2Q1TO
JVBqall/rV4Vs6od1R+7wgY7Xe/WZQA68mNvwvYeNimkY4Qf2+ZVmrkvg44R
Xmx9q0X6uVuhgPBiSm18nGZWZciH+TVz0zN9UjGoGCbO8asbrNSqL5xtTMMs
z1qfeVw2BxSyeJ8lVDgBF02hNb/CBaA6Yzx6Sv010HkXTT/zjQ3+MJ/t2GZP
R34sd4SDxIdfP8KLnXwjrcDbEQGIXk2VxKNQ5cdpmEze9W3rM71AZnbDgHVW
GqbFv5EntWoW0GkXtN0GrEFMX8UJ9kL8ecBGlNHirzNQ7Kzfda1mEZyjxlUy
Md0EhBfTMI80/42/X8KL9auuXP7/60H0cCahqq5dVxDIXXkZ+XagB2S08xs1
NeMPPx92FeSengfnY2k/mWedQe92K2/z84v4fhA/+nnGAhCejBzu0vcPX/9+
PjtplRnaBXzy7iT0JqVhX60PfXjJ3A9SuHgod23w89VTfZHXynPA3+mO+jZT
B5AvbZZ269QCOK58aZpH1wkQnqxnL23zdCl+v/7nyTyfVNd9SKCjfs6NWxWm
bBrhyJfNZDA8MqWWAcKXBRh+mer3vYL6OKuq7X+KCsNQH+e5r72n9ZVE1MeR
FuBn3Cydivo4QntVzvUXpKE+jiB2ZlHhXhrq49D6z7++eSUF9XFqNjB3i+km
YFx5T6MTtKZBQ/C9pBsCPtjUBp6KVtsZML2jb3RE+ShmkNpwLO/FHNj+MvGg
lbkj4IDnzl4wXgDkYMGkFiNH5NPa1NhkFB8+Rz7tGsPuZaw2Evm0l0dYzjh8
zkQ+bcuJr1hYVyk2s+nTnyZzFjijZxyurdWDfFpQdhKXxUwfRvi0ydulNSEj
NIzwafOvTo7a2w5ihE/LzyVdAI/oGOHTok7vPhlQia+H//m0Yu+f5IhwfP38
z6dNr+uk1s8MYoRPq1QpXD2RMYARPi08X92qer0fI/pAdodGafybcjGiD7T1
n88l18VojPBqc+fU5tYf2gDCq7k0mK/pyEcAwqstHE6V1JKMRl6tT3pfvWx3
HPJkFSlPy1bCSgDhye7Yh/KZZvug/o/sgNrcDXos6v/czdM7yHHvG+r/vL3k
9TRdJg31fzaLK98Lq01D/R9VuzeaZJdUTHgDQ8iVJ//Aj4PBgozmr7H7+TWD
T21mwWutzHtsnpbg49WdB24/nQcU0eZRd3x/Ky2df8j6chF0vJ7/ssD5BHm0
h5/YDHn2+SGPxjDxu7lzLRn5sha5fX8/r/VjhC8DLlHl9hUDGOHLtu+1/MPH
TMcIXxZcOPzmfDwdI3xZyEBlSE45HSN82bOrXSqsd+gY4cuUvbPZyh8Oon6R
slQKteV9Kkb0i5w8Nm2UKniHEf5s2PT8oplIACD82aT4Uy2muEhA9IumLUq6
utRikUe78sOl9UhtKfJntns2Pz5tlYz6RKRPs18kSlJRn2iv4vbEt61pmKPg
OzFuPRoYbdn88tNqKrZP16wtenkGVM0OF1UzPwR2jC9T2GfmgEaHe9Hm+87A
kCmsWWxqAUxI3KR79dmAupeh3XZMy4CH2TY+ysgFebQT9w9qc5cOYoRH89GF
v7s86Rjh0dSWY/P08PWZ8GivmO7sLHagY0QfKfHNyqS9sTfyaQvjqbYMfJHI
o+26R06rcUhBvSPTSCvDddc0LKo4Nu7xnT5gf3LO53gM/rxD2r+gsDgL/IqW
kmcwW5AcWR5LGZ0HIg/DU69ZO4NdrlfnaWuLQPjjwV4pNylM5n3Q0ooyG3yZ
dSfD6SQd+bWW77nLL/Lx/eQ/v7bAvHYhJQt/PvzPq6kbxW/JLA0BhFeLsfaL
StArQz7N1yI4c/J1KvZswGlRPrMbOCqqTFnWpWHPNEUtejPmQGazvIP9Oydw
avfU5qzkBSDJVqZppmEPGpKSHtnEsUEbmppagA0d+TW+lKmoZPx5ivBqrG6T
9qKlEYDoIw1FP5nY/iANe6gnO3K4qRc8+VemQM/Hz5NGy2ZtObPgMl/Ykzd9
L0Hkormh/Vf8eVr/aN/1aWcwHRtzyCpvEaQ8LkiNPqAFCK8WG8zppf8dP3/8
59VEDESgdhEd9ZdUD/5+WnwoCIzE3DfPLO0B1JnTXdL498s9oXpM6ug8eEOj
dvt3O4NPfaqhn2QWwc6vzpP1L54DwrOdmhcRyv+Bfz+W70braHeB+TijgSeU
NKxrN69+Qk8f6LiiK5HqnIYdLrvtECM7B17F9jGFcjiAHJVtfbX78f1Nx1e6
L8YJEJ5t1djzgGMJHSM821DyoFBKEh31moqqSiY+dIch32av0muc+rUMNB2/
FBxm3g2YMgvMFCvSMJO3Ns11n+ZAjuMZYM7mBGJSgvatey6Ay0+2i7V9dgCE
b/sTsTPyCf76Cd8mP73hl7FrBKj4zvje17sXqJ7oFjlfnoYF762qMvGeB7ZU
bN/XLW8A4duadEtPtOGvV21WjI/s2AOui60qPsLPn84tu9WFeedBj+uIR0K8
MyB8G6Zq9OIP/vnf2xq5mt7bCY4ev+4v+jkN+/786bnczQvA1CtIrmSbM5Dq
67PNuMYOz3IOlijgnxfRdxK/wi26pzcUcH3KufVnsRtkOtc992xKw14crOOe
a54DWz7HOR5ccwKEf2P8dstHA79fCf+2yn4y9s50BGDhNVOpE+gD4OvRx+9S
07C4WqGNH2rnwXsbjlFWqjPw0PBv0GDrBTkxjVoTP9Mwb7vn785dnQf8R74f
ucvyBhD+TWaykY0VP99cpguocPztAsetcp2709Kwp7qYQ9szdlhfoWB4Bl9f
Cf/2nuXzoFhzGSD829HHdSdffYao9xQHbvxSUgtDvaeCzkCP9QOJqPfkmMLS
yiyRinpPfbPXC07kpaHeU0N5Q5eabhrqPQ0vRc4fvpeCek9itlTagGMCVgST
TCRvToMm92P+T+77YIpSHHNDljOg/GttoH6WIqYvL3Z5zmwOvBjuph9XdQQD
0YdU23UXgNP8jmdvAx2Rn/v5OuLfAR5L5OeuC2f80X4Zifxc2ntS2tLNTOTn
rh9kWyZnlWKV7XqV4U9Y4J8qW3nB6z3Iz7Hs3B2QMNKHEX7u8VwG155+Gkb4
OX6sRK/wxSBG+LlAr3Txb/p0jPBzlsJKLuz4eYTwc4XdGa9UI+kY4eee8Ka8
y14YxAg/1733j+muvAGM8HNuYJP1OisNI3pXx5oMjqldzcWI3tUd6WuvUw1j
MMLTVYbSFYzoLwDh6dwM7s8/2hcBCE+ndnF86oZwNPJ0LaaJn1/8iEPebVIt
afLtxxJAeLf3HBs4XU/7oJ6V0W7u3kvZsahn5ek4NOIDvqGe1aoyY6D9oTTU
szqd6OW1pz4N9axOy70VOOeVitV4yOk3PfwH3ud53DQ1t8e+DJQLvDGfBSLu
zNWB8xbA/6/l2Q+G8yD+I2t2GvcbECbe+/iz2SLgF/V0Z6gyQ17u/fmo5Lff
fJGXm+zyf5Plm4z8m+3oY668uX6M8G8hbMGW0tQBjPBvaUzblvTX8c/vP/8m
1yVVnE+hY4R/8+uj/bhTQccI/0Z5nWiXdI+OEf7N65KGZInxIOpx+YUe/qtf
l4oRPa4w/3/CcdJeGOHjDL9UXyrO/gQIHyd8ZOfnrpBIQPS4Qv88SdogF4u8
nFj8jwPlJaXIx93SN2ktuZGMeluyvDpVW/JSUW/ruVC672JLGtac+eqe6nUa
iOJ/F6PIgj//eRqxZv2bAe7BTw4IUPSA7bvaynOjc6Ar/cRP4QvO4IyB259s
+gLg/9eTctT+FTjvqHQ5YmkJSPvrJYmEvUVerl39k8YvbBAjvNzXRp/gJnc6
Rni538xvxJ7g6xvh5fbnn1UecaJjRO+LnO5+O1nbC/m501dj5IY2RyIvZxl7
yMTXMgX1u5peiCQm4vtVrgCZ661KHyjVZTqaF5eGdZ8W3Xd1ahbYWlZdNL1o
C5IkhQp7+ufBpoVjudrvncHSsNzai7lFwPD+iJWC+aIir+mzMpbzbNCTJ/z8
veN05OvMmstEzfPw88d/vm4xeeOXgWw6Rni65sb9qr4vQwDh6Xy4K/mU7pQh
P/ftA92v63kq5nFqVvdGbDegLRs+/12Dr7f91p7CX+fA7pWWbClTJ8D39g+P
SuwCONP11+B+oz1gUziy71M0Gzx69aC4yks68nVWgWH7HuP7EeHphtjmHl7J
jABE7ytEQdD+F/589zrry3Xl4l4wvHvxnRmWhp3znw0bTp0F+3MemJG1X4KI
N5UOuZR5sKWWL1Fm2RnUsHsfY/u+CEbelJyX4NUFhKfjz7S6KZxGxwhPZ3R5
UOEilY56YptSqxtDmwIBy2L977rvPeClnItNGn4ecZPZzfp4/zxYySdvsm52
Bk8vHIsRl1wE1cyxMVekrQDh7dorxkk8+Pshw7GcY7ALtAQoZ7NF4+en529r
qA194I3/wMpBtzTMduLatyypOZB/tivBNsMeZDebLbPtWQDjDYcGfUqdAOHt
uP1LXPOL6Rjh7Uz1Qi2kvtJRf8y7truPFh2G/N15ySdO12LLwKhHIXOWbjfA
Cix0t5elYcZcDaPs3nPA5ssT+dB+R/Ca7+0hX+cFEG29dfuvegdA+DuXW828
G/HzCOHv6p0X6avPI0D3RsvZhNe9wPQaw8LFyjQsKGVHL8V1HqzOLhiL4usV
4e9Eq2Z+h5bSMQOVQFuppz1gwCx2Vgc/jzjpvHh0e/M8EFZK1vwU4AwIf/fL
SS1zM37/7Lh+lM+jpBOcTZDtu+CfhqUxlN+bZV4Ar69y8vnJ4M8PFobyjZfZ
4f6XC+9uY3TUK4uq7+r+EhoKxIcPFP2jd4MIt/6Il/h5wSp7z/4jtXMgb9FE
wLHPCRA+7+v3Rzwn8X+P8HnrpVJnJekRQOhRT+rAhj7QTIll/pCehlFum++s
K5sHh1a0z5vVO4OoeNaTpvM9wC4vsHEKP+94sVXH2KvMgyiGds3rq86A8HlC
ySkJjvh5hOtgvHZPfhdgKrmmPvkNPw9MnYX/TNmhZ99e1bAyOvJ5coYuL378
KANC0tHNg6Ab9Dovaz4pSsO2XlS5r+rCDi9Kzeps///fl3K7/Pe9XuBh60tZ
qE7DPpVX8Qi/nAfKCZm2XHxvwKcpOzXdyz0gLc3k1CT+fX1tJfK5bnkOsH61
/1L2zBkQfu9pQXW7Ov7+vwo8e28yMw/WWtuX2/ScwW0/Ll/Rim5AF9I0HcP3
r+6HjRSuePx6bVgLoeHfZ8LvtdIGdLkaI0DUE+Er5zLnQbm52CQv3Rn8vDLC
HtbSA/LZrvH54+uxxw6rltmT82AkX+jRkxFn5PX0XrWm38O/X1a3tzgdDGCH
6n1rcTX4zyFBFqlSAfPg7qrXShfbGyATmZ647tsD9mzefvIS/v15o1pzvHfb
PJCbHPJ3zHYGZC9h/tzf7FBbnrMiEn99C6cvTBRv6gE750rf2janYcoWH6v/
ZbPDA4fF/Azw90t4PqP++Q+hyxEg/kzF+K2WebBkdV9UNtUZmDOIGMoL9gL2
D2G7axrTMJ/pnZbsmvPg22cpH8FNbwDh9Z7LR2c4dZQBwusV27IvZvW3oPk+
VcVPlSN4a5HXM7n99LPW7xzk9Tbx0pq01nxRH22zj87S1A4q6qMV9XsaVn5o
QH20zZoZnXZrbaiP5lKdsjV8pQv10ep2uYccnexDfbSXMpf2iGYMoj6a2geL
LXmMo4DweslyXcZlkpPI69XP5DtHu00jr9fvfEWT5fEsILzegYtf0mVNFwDh
9TwbcjxCfi0DwuuZFJVmieesAeT1zHYFRGxngITXK3gynT6xhQESXs+DXf6V
WPAamu9zVr130uXACuqjObh9N9ptt4j6aM0HbDSH8XWD8HpLJtNjo19mUB8N
K2owFa+cRn20q0yOPdvOTaE+2o2mjnrjfxOoj/agrk6Nunsc9dHUn6ftuZk6
ivpoM1e+1Cp8G0F9tBnXihMhc8Ooj5Z7xl23SmEY9dGqHt7RqzEbQn20R1r5
x4du0VEfTVRwaeNQ2AAgvN5Z+2rM6XY/ILzes5Li2L/r3YDwelYta4m2je2A
8HqTelqvUu7UI6+3y0hP7NW9UOT1JNa61u5+fYMRXm+fDcdOd24X5PUipw4V
ltsGIq+3Unqzl/lsJPJ6IPH9zOVrMcjrHZ/06xDoikVej8WEziRnTUFe7+bd
OP2G+xTk9TxvN96/hsUir1cxmHzXISYGeT0zd6GA6lM/kW+rK3YWrzNYBahH
ZnLbPJmyDoge2Zj+2bKXRxggn/tE22I7E7TTaSM32a4DppfHcox7mGGqutez
eYtV1CObctjj6fv1H+qRSV6YNvm+PIV6ZFzXfMO+fZhEPbLPpEM89YvjqEf2
ZIvT6WbNMdQj+6onGje0dxT1yIyvB7W/vTyCemSjvfmyD4OHwfpogDadjwse
iuIlT3UMga+Xa72u+XHB8borEWcm6WCiz2GtjJcbkgcYv5v7DALj959L1j5y
w0Hj7a99/WiAmDeUVLwq9Lu6FxB+LsB1soFHohMQfq4yIHBQma0F9c9GD+Zy
nr1ejPxckeitwpGNARjh55pfux7y69FAfk7XbF+E9Jwf6p+RT41Mxr0MQ/2z
V6G9sHI9CvXPHi0rMD3Az+NE/4zt3Sw4eJ6C+mfyN9y9eR0pqH92yU2gamU7
Bfk8luXx9w8VYpHPy0o8nZnJ1Yw8Gy0FrKrErgDCs00NL/snnFoHRG9sSezM
l4GDDHA4QZVGDWKCD72nBHe3roNM7RNywyHMMOD8IayIYw31xv7t6q9l3z+D
emPRsX0KqtrTqDfWu643zTA0iXpjnFrzuXLmE6g3dtt8FQTkjKHemO177coM
w1HUGzNe5rF4bTeCemPOMgJuHZXDQIeyj8l2mBOGWj+XUOIcBpSszJYLFlzw
WsfKUvXRIXAzpWBdYJoLpr78/o95cRAojdZr+1pxQ3/9ogHpHQOAmJ/07WLM
q8rAPkB4ue3qWRP/uLsB4eXyurVrb7xuQ30zm57ys2fZqpCXoynFGP/ZF4YR
Xs5O+c+5hM3PMMLLDbBIT81peaG+2aOrF/k9toWgvhlliU6KPxyF+mYWbaW8
Yg0xqG922uzA0V9kCuqbPeGQwhicKahv5kKS/O4GKcjj1Qir1bo7xgKiL1Z4
n0lVXnANEH2xw3qS06rL64Doi10InIuvEWOAiob+P44IMsNE5z3hNJ511A/b
2vlY7EboFOqHjTa8Cl0+O4n6YZFc2zkq3MdRP8yiqN5tgnEMVFxmUHihtQV2
Nig+UaePgDpWoUI/GS648nPCY2PCEMik9V24n8oF+y+vv3sTR8f3i3Orlse4
4Q85rvGrwoPA+5DuvscZ3NBEh8vVYbkftLq5u26V44EPShkcSOM9qE/2Ssc0
LfZxJvJx9hfYFSvNfDDCx5UllObe9rMGxDwnE7m9L9X1PoFx74zA9Wp+SI+3
pgSrRQANtR91564KQFHvGZv7GdFgfCL4pdFPAWgpfj/x8sdYUPhif4CpOgnO
TChIMj6kgJfXrvYUNpGg1AXZQwaWFGDIcyxi4joZjovs6cqbjEUeb9SRocrl
XwzyeAUTketzS83IryWS9ScF4Qog/Nqo+p/TlitrgOiR1c65fw/DPx+NUwsj
e18xwV9+FtaR+Ofnc112JcGGGYoYetCMb6yhHtmj6IapeqMZ1CPr46TncX6Y
Rj2yB/bRV3/yT6Ee2UhW3sWM1AnUI9sy8jvn0+gY6pExzdxyPv1uFPXIBhO0
JFY+jqAe2YWbtfqUrmHg8y46uvEHJ5yWVJhvERsGIo8PWBfrccG/E8qW01eH
gIfAPQfQwwVtgMrjMAk6SA8eSf5twA0TuX16+7QHADG/SqL1jCLTch8gfNzY
GW31eo9ugHzcnIT14aRfqH9mmHa11lqhBvk4hsn82qvSi4WEj5Pqay87M2mL
ET4uISMxnvuqB+qf9Wq+y+hsCkL9s9933hazFUSi/pmy8vvD0R9iUP8sNS5c
Mn01FvXPPOL37ouxp6D+Gbvt36IdVyjI3/H+Fq87GxkLiP5YTLQ8997iVUD0
xx4w5soxNq8Doj+mtKeX/f/X34SF040fF5ngygXHo8Uq66gvJsy8T7ezegr1
xe6/Z2kRNZlEfbFe0e9vS4vGUV9MbVlxdFxyDEQkSY+PyW+BbkfIhQ6so2Bg
sd2rQBTfP295YEslQ+Bo0O2RtkguuM3dvzq9hg7y7XrtQkW5YeXBtvPw9iBY
6bB9nhHLDcvObKx8rUwDy0N1aRv280Dbb8XPVrV6Ub/sUNPVuQsxBcjDCYke
XTdI/IARHq5bRDeI97QZIOZpnfqg/8gvyx8spEm/18jnh3yNqp27fMMBv4h5
+AUoAFXEnb6U3Y8Gw1uoAu+LBWD69TYuM+NYIHyLla0HkKBomGzB55sU4NV3
83B3MQlWeukd3mhLAdmjWXlHzpHhlUCfg/s3UpC/i3tWskVUMBYQfbPHH/XM
7Czw++m/vtk3j31/7fHzj71gaOf9XCZIpppF5SeuI9+2N2FmXNslCAuopkK1
HQJweWPUdvHgKNCtsvl6c5QAfNdfc4CJLRb84S8cqthFghmbr9lESlFA/oYH
1SKRJPg4xCn0Kb5+34ksmM4QJUOMMVZU5DAFrGiEMuofZITHF46vS29lgJmV
t7WSTjLBbanJs/xCDPBfo9Xv870C0OelmPje/Fig9fmy2JIWCZbOd8Y6P6WA
B9SLH0L7SXAv2yrPRWMK8m0CnnuDwmtikG+jmBckDZq1IA8mSDZWCuVYAYQH
i1A7ofj4zxogemHJbQN+n3YzQA8m9YlbJkzQ8NQ91ROsDNC2NvuvuxEzNHbL
PJ30cg31wtxlQae0xwzqhZVcuxT2LHka9cKkNgY/rJCcQr0wnivUPxd+TqBe
mMi9mA801nHUC+PhV3QMDBtFvbBaXpfbzlEjqBf27sS3NcGRYRBvr2u5kssJ
hRxPFOoexc8H5bQf63e5IOPAnvCNukMgRiWxqOkXF+ySen+Q4zQdGFssaqxr
ccNO74XSXPsBQMwHg3KBJrL7+wHhzV6Tk4LryroB4c1OqfD+7gftqE82ZPvg
y+b6WuTN5jMmoszd3yNvxmzbVRTs4YgR3ow1wash9IQb6pMtGd53MNwfhPpk
A03/bOYdIlGf7BSLD+2jRQzqk2lRhotbx2NRn+wWf8aeJvz7TvTJ3riWvzh2
i4I8G2fhjyrHlFhA9MHqC8gPlvxXAeqDhXIwCBSuA6IP9t7w8J2dUgyws+hz
c8UQE/RTUi2v0ltH/a9RsOdMeN8U6n/tc30ep2A/ifpfzUpv9TZ2jKP+14uC
lKQ9Z8fA+7u1ShKSW+DZAbYhDoFRYP5Pdv6nEBeUdA3fwtc4BJ7O8CjwB3FB
2jIl7WsnHbSmHCk8IsQNM+L5vL9ZDoLvGR5Cv0O5YZZoUEC/KQ14BT1TdtzN
A4/u3Jk48rEX9cUukQaTVj8WIV+mEk7Rsb3xESN8Wdilnlz2eX1AzCsTNROa
iGr/AOxKp1nt0/mhwc4832zWcGDFUb6x6oQArD+/bhNwOBrQQ5poYbkCsLzR
zO7p9VhQo2RZtE2WBNfmGWTOX6aAbUmarU9zSZBqwxrS85oCujWtq67Jk2Go
g+OmSm4K8mzud/j1nx2IBUR/7EL7za2lt/D15b/+mLTI0jVx/Pqn9/zr8f7C
BOWCKE/fUteRF6v/d5k/8VoItpDBn1DHLwB37u4ZvGAQBTp/CYsMBAnAt+dj
r1BGY4DHBskoRkES7Lh45I7YXgq4UKdv/v0zCXqFGSr74+uP01Z7hjYhMlx6
cUdrqywFQBG1OxXCjPDr9kPaV/D7O/XCUf8CcSaYSO+06cXv/0kd94RbvwXg
dQPeStmEWLDVLb9T+hYJZrH46gibUMCY++VTh/7i10PNVI5iRkFeLO/qoaty
3THASSH1q5E9I3x+ZceenP0MaJ6ZkVeCle8mL2y4fyPvc3YSFNm1cuf7Zgq4
r21c1OxKgjfeum9Mw593KvOTNnutMUDlArViI/o6IPpfjKVJZnX473vy6LN6
3AUSlG3udjqgRQHM2zXc1KtJ8O0Z+yDXlxTw8fTFNtESRsgYOQUn8PVdSkFb
1C+BBJlNt+QEOuH7hetYPIMCI3Q2b2JW52eAuSr24sGqTNDxSaytKf7z1/hu
0yIDEnTb4LbvxHMKaF1QHuUYI8G/YuUbbutTkLe6FnisKyM7BnmrG99VB65/
aUE+KT0i+EXS9DIgfBJH0a+zz36sAaKfFbBgeiVnBwOMMViafKrHBCXE/oVL
bGKA5psWaxZ1mGHxx7A1Jo811M/KBkzVb4NmUD+Lv8bSoDh3GvWzjorFqT2U
nUL9rELBI9IVvROonyUVKPP9NN846mc133YijcSNon5W3I+UDb/jR1A/a3NL
CHf75DCQsS76y/2dE05sZaIJyg4D+3/FFjtuc0EvDfleC8MhINX3szu0mQtu
Lmn4+O4SHShpO8Rz38XXW3XWdgPvAUDMR5us1h+yOd0PCP8k9mYl5l9vNyD8
U139zPYZt3bU65Lf1OEZ9LEO+SfKs6vYvMAn5J8ixlTtLm9zxgj/ZHbox+4D
Yq6o15UTcou0ozkQ9br4VZNcTz2IRL0u80SWeUG9GNTrerVVUp93MBb1uoRP
hh/f9YqCel1Seh/8/O5QkK+i15QNzGfFAqKXxbbd6RXz61VA9LIOJO5k8k1b
B0Qvi5l3owIdv98XRc+1dvcwQXm9tIknT9dRD6tCw3QobGIK9bCWfH6bm7hP
oh7WG+9Ytzsj46iHZeA/cuPx5THAIr3tX/meLVDm/qbNU8KjQPapYWIHmQta
fWQfdW8bAt67J2nSn7hgmet2xbeDdPBAVbNzmcQNezlZX1KcBoFXJPfT0UBu
GCEtwXbNgQbaps/wAmEeaNjyLZ0ptRf1ttR0mp48e05F3onic6CScvATRnin
Ij6LOcYX2oCY13a6iacxxPADgGo/z/qn4Ofv1EvXxIrCAIVxMs9dWgAe5HG3
7idFA4P+e7VxmQLw9Tfrt54XYkGMYmLICRkSFGT4wfhThQJ0uP5InMwkwTMt
i+2cDhRgyXXnip4sGZ6PSE2ZEKAgX3Uu6UKxlUwsIHpcZus8Tx/g52mix5Vz
S7FX9DADvs6H98VHMcH+kFfxi9XryC8Jfvh9T1Q+FBNPBPe9uQUgm1SrqdTF
KHB/Vxz7xCcB+FzTkdezMwY8WH3wegc/vv8qhfcI7qSAd0cHyl75kyDPjtkE
XXy9FSjTdh0kk6F5rzVdU54CetliWRf5GeGfEZV8XiYGeGjjzsNKu/D1nqMZ
WIrirzOex1enVQBKPV7M0QuPBQP2/3KvXCfBwq8fT4kZUsDR8fr3c20kCLU/
NgiaU5BfuiX9XXZkKAYwrIaqTFsxwmp7pYAqcQY0zy3fZt8Z5lU7rPiv4oTv
BhJs9TNTqWehgKiSEd5QZ/z55gSffAl+PY2jWbKxOQb4nPHxLoPOdUD0sCbU
B15YSTJAJe36A6VnSbBFd9OaNf79V7Zv+UOqIMGQhJHmuzYUwMMoa56ci7+/
RA2LZny9tYrsfnEnlgRXpvKvbf//8++T8zeOHmOENRSH6N/cDFCW/XHJnjNM
0OrE8fq/ZAboEkFS7XhAgva3rr3/h78/ofs/QAudBP/Yj17Xf0RB/qff4blm
enEMWHn1wp7ZgBHW9XzSksWv36F347kHX5Fg1YiFiga+HxN9Kl67Jbsd+Ofd
fOGXU3whCfZsrwbudhSw1YE7vjCBEa5daJKbwu9HJuO+HSMhJLhk3SwYiL9e
GbfzizJHmGCf8voO8k4GeNznLRPpLglmajltGTSlAJbXpbw9roxwM/W3pSl+
fQhvs0nLQuHV508YeZn+mOMdCb6zq2d7hu83+10W9G9xMkFMx2JuGP98yE5a
8iHVjLBUieLbgF+v4V8dDVXJ+POlaOC1UXz/a01J8I02xq+H+4Ffl19QAOFp
Gqn15jFfY5CnIfNMT7lUtCB/ErkarRRPWwaEP+m/xB7cSl0DRL/JzyXqgYww
A0wjNzyz02aCZ68uK/BwMMBxccGy1HvMsGbXHoVgvzXUb5rcv5yZGTWD+k0/
zjAVm1OnUb+Jb4l9t4LiFOo3CXbLWvGNTKB+k7LmFMfqtnHUb2pr4DcOTRpF
/aZjuYWnNyWNoH5T907/7bn/hsHS7ISP0DdO+DguOm361DDY6nGk8uBNLsiU
/+mjyOMhMPdtYNLpJxfk8P12G1yjA5mWsz+3aXLDvZ7z4gcDBgAxz83/9SdR
VrV+QPgWi++TkWZT3YDwLdlnBQ6rJLejXpSicI2txkId8i2aalKW6nmByLeI
dYdeqepzxgjfkmBTagtDXFAvauTnRwn/+EDUi3qzsNPu67VI1It6pDT0oPBO
DOpFZY0ZXRbqi0W9qK3e78ak8fuJ6EVtpZGMj92jID+jsp0zOD4vFhC9JnPz
Xvun5quA6DVdcDnEkJi0Dohek5PbO78T+PeLtU3w1lgHE1QQ/ySXYLWOekwc
wlQvyuwU6jHlpF/I8/CaRD0mA3VaqM/0OOoxeSbWaAlpjAEsDFZ93LkFtpSE
lQ7vHgUhhxw29AlwQYbGl9ew30NgR7bWqbP+XFBPjJVzcIQOxEmm49383HAb
rxfN130Q2JJaAmcDuGH30qvXL9xpYCUscUF4Ow+0Hp65ZVXYi3pP595y3vbq
pyLPoshhkfI26BNGeBahsEX2bVJ3ADFfrsDzQJ3/4Q8gkvtMb9hXfkh2jS9/
ExIGFFdYBIyPCMBJW/0PfZujgZjb7tNJ6QIwpPOmlv3pWOCTW75J6SgJnl7b
/fvtBfy8XBx8XTidBKdrzTgC8PWx0OTHB5PjZHgSY/hgLUhBfuZjc//apGws
IHpQP/9tauc6g1/f/3pQcuI79rw/xAD/zlvqZ4QxwdCcZm5S4zryKVG3+nuz
UkOxoliNLDNOAcjk8cPURiEKCJWa2P3zF4AajZ9bddtiwGXr16OSvCRYLcyV
vb6dAr71Uya0/UhQzICb9QS+XunsavgxIUCGMYN7hi0VKUB6peEvNw8jnDp6
KaBsfR2MGXy03STEBE8e7k2M24uvl5faWB42C0CzA41yukGx4OfyVgntqyT4
07bkRaABBdyI8Mn63UKCZccWR89ZUJBP+WVywidvPAZg9/gCMs3x9f7Rab+8
fQxo/lyljs/iQfYn2Nfbd+5HMJOg9okdMcqMFFD2PEnB0ZEEObOKik/i1zPv
k5TXr2kGuOvBiVrQvg6IHtO5FivhYwcZ4NE/w4E/T+Ovx9zsnvdtCjA58mnD
Sin+81BFzHH8PNao8xV7lskI7+0Z00/Fv9+B1yMjFaPx3x+16H4Rvx6Jus8O
XDzCCMX+anzewsUA5w17uegKTDDMme2Ywzb8fC0knT2iQ4LXBF5JUJ9RAOD0
NMoZIEEbuUWTv/h+S/gOh11WD5MqYkDun7GaCl1GyHYqYHBchAFeVfzWz22N
Px8UewwG4vsJ0Ud6mSNJi8X3m/nFz0nv8vHft5Ur8RS+H9V2uc46xTLCjwdN
+fzx/UZUKEa5PogE9/b+eBCCv97pwTylRUkmyN5lef3NLgYowhH5dK8mCaoz
tXW5PqaAko5TurHOjFBRWy816AADJDzFiy8TinK1ftip5IRPk+4keK/WzpqE
7zdDtCdp2zczQdOkFXK/BANs7Wl216lghJfLmXgH8eu1xTNsKTkRfx56wfZS
Gf/viyXL1lMNSfCSRqOVshUFEF4iu6bB6dv3GBAQJSX725IEMyjs4+v49b8f
vTWnvJsR6lb8bvDA34+C1jaGG9kkOEkz3vDangIuhlv6bA5lhLGmXhPJ+PUw
dtgbEvCJBNOfleY64O/3dOi+lYOvGCHF6Fp5Jf76HLgPDGe/xe+3R+zREN//
iD7R7Ri3vgT8/WpEUkWHChnh/b8qnEP4678+sfOyVRy+H1dlbOzGX/8D0WPO
GVP4fmoeJuWO32/qu4LvLCUzwggJciPA//uuLJFZ1nAS9I1+Yufx/+ez/3yC
QEesz+ZHQdissvhZcS8SNGh6VFaI/z5NEfp4Wz0jvE5jrkrE/36lmHAc7RsJ
3p1kuvkWf32ET7iQuTPbPyEG+YQlavKxxxMNyCfQ3VhZi9t/IJ/QQNU76O9Z
jHxChGC7gMFcOuoJHbOIcnEq/4h6Qq2lVyh5Q9HIJ9j/mv9AG8pAPqFaNfw3
KxeGfIJ54OzNpvdU5BMGGX1/X6grQj7BZRerqNu9HOQTNLOyuC95xyKf8G5j
Cd/srVg0v00n/67INoky1BMy4RO8KVzehHpC22f+1h7Y0oV6QsEzNf1tX/pR
T0hHYVnx1/Tg/3pCZ0nGYqJDqCckeLK4olyYjnpC9pX+j3jcaKgnZKSpvXOI
qRf1hDq2GOUcu/kX9YQW2NpEurSaUE/oiPc555GXZagntMJJOqNmE4V6QrR7
wSObLuUin9C7IChvMFSDfEKdzSmT8zqtyCdQu59SAm50IJ/Q3/fy2oh5D/IJ
5PJ6mZbWPuQT7F8OfVG7S0M+ISs4hbd26wDyCalZT1d0GmnIJ7yo4jFo9fqf
T2gTbEzvWupBPoEnTrU0KOMv8gmg/aJJ084m5BMOcHAdPhmQiXzCrYF/Ih3U
RNQT4jrVSz8YkI58wpdLl4N2OOQgn9DJoSAl0JWPfMKtn37yzc8x5BNymwdX
ud2KkE/YVN9TncBIRT4h9ErH7xn5//WEwmX6HRLwnwmf8Fo++SQ3OxX5hHuW
37Z8tahDfaBW+7tnHux+g+axVYie2zusmoLmsT3W4hFi3pqH5rENP/m7T7un
CIzoFBjuvz4FQmvnCkrfUgHRC0pv9Zj2NSgERC9ovpF5+Nh0GuoFka/ZF4de
NkO9oA9S0F/OOAcjekEpjPM7FeZrkZ+oLZn7wS/fi/pAHrm3VDXfDaB5bs+K
b6087aBjhJ9o3BIX+6KNjhF+YpeNxPb4hQHUE+rOefrJsrMP9XwOYB9zqTu6
kXf4tvtA22BeL/IObB2rE5Kp/cg7DFZ0xCfX05B3yMx8rqHDO4C8w47FMZVr
V//nHfy/nTj65kkf8g5TElNGo1e7kXfQ55N71yb/C3mH5rSaZePwKuQdzPc5
ZtD2x6BekJl84bXP1qnIO8xeafYXk8tC3qG6+1wk6Woe8g7zhlqeeqqFyDvo
3o21KZcsQt5BL0fkXFFtEfIONra/YdM+KvIOYptNP7eeoSLvgClyTE2IU5F3
iFnL/ZtCakB9oV1FsfrJ7laoLzTmuZrjY/QFzW9TtNXUGQ/NRvPbfPe/ENNQ
KQISh8SZ6S2TICPAJW8+jAqI3tD+857WcsJFgOgNCVSqXvt2PxP1hswrKJ2y
pp9Rbyjlw0/PbWWpGNEbUguXXL//vAp5jJinZPtrg92oL7Rkberpn0BD89/C
F6dX7W3pGOExRJuV96hvGcIIj3Fz5KG+zcdB1CPKPO9/Cub2ox7QvIsh7+7G
TuQnWMQ2s3cL9SI/Edh0ur5SpR/5iXaKg+9UMA35ieWJ1bYYwQHkJ8ZvsO58
G0hDfgLUO28YZutHfqIlNuzw8uEe5Cc2l5jEw/e//zcfTiHo31aeBuQn9kY/
rapbC0e9ITPH2XNbX31DvaGWe5E9abMZyE+0a/+SMHqWi/yE8Iz1+L7QAuQn
5H7nqYePYchPXNqxu1MhuQj5iS+REeKrAlTkJyRUp+JtTlORn+BuuZ/4SIaK
5rll/vr545z0d/CLCet+bjoCNE6I6nseKwAJq2Kfc2ImAF01y23/ZSpI/nCt
7nHDFLgn+edzOqQColeUxJocfEU4HxC9It7yjEbVg19Rr0g+ZqWVw9IPzYNz
zPUdGHjdh+bB0Td1FO+9Mojmwd0Wmr3FJjCEEV5D+GnZdRMXOqbuI31iZC8L
7M8ccn6tMoCdmXrLLXt/K7TnI68y13aDU9tErqk/4oTVB+xOPlbvQx6jXdfn
hiMHDXkMq1aBFvIcDXkMVt0WycfLNOQxgi3nW50X/ucxVEKyB1WxXkD0jHhM
ch4kFHUComcUVtDxTK+kBXmNeMbKvtHkYuQ1jsa7+yvxx6OeEfvnOx7DAt+R
13Aa8BXtMsxGXuNaA1vXpl35yGtkP7qRlTBYiLzGkGlF+rb7RchrtPW5fG0c
KkJeo+GpQ6Eh/vkSXkOnbXL+EP75E17j7uP2ZLNtVOQ1fLg+6dx404B6SHEn
z6eJqHuiHhImTHYNkI5D8+k+JUoPCV/KQvPpOgdaewz/YKDS/36DUsAkSNUK
6wwIpgKijzRRxPyAalsEiD5S1R8HhpfDWaiPFCmbaFC+HoH6SCETNUzcl5Mw
oo/UVOubrqZcgTyJWfcCM69sN+ohKWbbnLQ7SEPz7UpfVUiVytMxwpO8uuds
3yY0hBGehH5D4KTe30HUT5q4tN2UeQ8N9YukSq9vPsbfifyHx5f9SyerepD/
YP3juJLN3Y/8xyW/Y/RjdjTkP7SLO6evCwwg/7HuPuhpnUX7n//wixg3utyP
/MenYSBSG9CD/MfP+smNupQ/yH88CLHcaBjeiPxHMW1jD6X8K+ojPTjZ4txE
SUZ9pFPemS/iVTKQ/9gz9+TVhuUc5D/8xt4OKsMC5D+8YmYOgO8Y8h8Z/gdz
YXAR8h9vgnR4BzmoyH+8rOdwDwdU5D9yoz8dnZalonl1JtqSMZxlqWDfK3fr
r/3D4GQdj/PuA/lAwDGu/OmOCdCg6t97UZgKLi25Blf7TgFyg6dZgyEVEH0l
Cd+D7c1XCgDRV6J6bCbH8aSivpLD4Ozr53tt0by7Gr37NFJ3L5p350Ju3qs0
PYDm3Xm0R95sWaNjhDc5IvTjpVAaHRN/I7PwhZkFFhdvWdKPHsB8er7fn1TY
Cgt7RMCgVTeYN42+rXeeE16IqBzfs7EPeZK8pdV0ne5+5Ek8g3UbPvTTkCd5
rCyyM5p9AHmS/BB5jGnf/zxJ9EJAvqtgHyD6S/IFlt8OZ3UBor/kk2dno76h
DXmTtVCj284y5cibLI8+KWYWp6D+Utnupp+rF9OQN9lxe5sLrTkLeZMHX+NK
gnLzkDcJurEnbj6oEHmTw7M9VhHni5A3ubpR8OP1v0XIm/jPN3+IOkRF3sT+
RUCnDn4+IbyJ/sn7B7eKUEGZyY7EnU1DwCy4ZQu1MwdMu8bv6eIeB4uHomWi
gvDnsYrpY+58U8CapzmBGkAFiwrXnzwW/AcKSzZkzWthgOg9UaeSbAsz0pFf
uWN6uvfLjgE0n09pUjOcHf/8CL+SyHlUlXWOjpG7b0jxbuCCNxK1OWZf94P9
zGeO1jpxwaurk3IW+P0norrTfpyJG/Ie4tZMIQ+AX/Lp3Mou3PD9je5Bmxc0
cD5Jk31mIw+cttvfeLGwD3kYmwCVKEfhKORdLnGeT+cqLELe5eGhudF/O6nI
u4RGnnviiV+fjr+uO/bEk+GtTpcvnIepwMNj5oLC3Ajwjsj+kSpZCHYoNMk4
8k8Cmy9X9hZaUMHWg8KMWzmnQfufj69Pb6ECVrdeA16JGVD9PsemsjoX+Rmy
b4pkXuwgRviZqyp8HDdFhrDmtoGSWllmuI37Q26LBh3L5NUae3SOC2437KDb
H6OBU0fMYnqLuKDsJjKPFMsA0EiNtb2kxA2/+n+6/41OQ96mW/yc7+m5IuRt
hmLafSRPUgFZNu1Nsh4ZOm2nBJ/H73/C32jkkaIEeajI34zbKmA8uQ2oF1U4
Jpc1/90X9aLWacY/+H1j0TzAZ8XqViyhmWgeIMvX4xtlXmKArLxwfO7FJGDZ
PEVe/0gFRD8q072gE8YVAaIf5W+RKtlAyUb9qNeszg7fL0ejfhTT0duTZ3/E
Y0Q/6o9Dwtbp4+XIB23a9MBlF9aFelENpfEpM6P9aJ7g2eejt3gF6Rjhg86d
POL3fvcQRvggzeGizzWrg6gvxblO59hwk4b6Tqu/nk7/zuhAnudXbpKvQVgP
8jx3W5TCI2b6kOe5rdnkRHlMQ55HbIePusD/P+/853m+cjffGC+lIc8zX8Y/
ctrsf55HP1fwyxi+XxGeZ98uownZw3+R5wnQylaS1f2JPI/O/or0TObvyPM8
K2y5+SIzCfWjDLfWCMlPpSPPs8WVQUa0MAd5ng8Vl+fkuAqQ5xG+kntu1B9D
nofD4AFHg28R8jyTV9eaTDdSkecpGiTZ6itSkee5YKkSQj9FRfMBG+PusVuw
p4LLWeNlqhHD4GsW11BXWB6oLR68f+nPOPDmO2T2nYEKQpJFmF6ZT4FlhT/u
SS+pgOhPPTlSf+lhVwEg+lOZv96KzW1IQ/2pXZ9yjbdsvY3mC1IyefLSvHrR
fMHWNOO1S0UDaL5gr5EUh+4EHSP8UKpxxa6QMjrGv5b+y2OaGWZf2+vjWzeA
Zbb/cL50aCt0uHg0h+9iN2gl9d81leGErwcrJPt6epEPml3muyBe1Y98UEOO
Nv+73zTkg76P3NjPxTmAfJCI+M2hb/L/80G7Ag+rJJ/rA0SfynpuQFSb1A2I
PpX01pyx+1FtyA8xtHll6o9VID+Uk7P5m9WBWNSnWs7/F1jQl4r8kGVkkxTV
LQv5oS8Anr/vkof80EehAu8DFoXID6VZflvQPlmE/JB0BwvLwZYi5Ic4DXRt
7x2gIj80dsT73Xd8vST8kM31hMVPe6lgNM55Ps9rCLitbXJ3gDkgoYqem1s3
BmRUD9xRsSgCv23eh8jOTgJr/b1OaSH4/qRx2vvF/DQ4a2i8eKkBA6iH5RdE
E3mfgTxSgI2fNyuNhuYhXt2ro+fxmY4RHmnhea9wMNMQpvzd6MjVJU6o8Pay
Vr5+PzC8v+K86RUXZLD9a7vtCw3I2z3BnJa4IMVfVj0df3705ivOfvwavx+P
lCsxu9PAr3srYWbr3FDlJYMe6O9Dvqnv86b7flyRyC9p1D0TqckoQn4p07xp
Lng7FfmlRBGLTUL49flaEd2iGU6GJVYCa81HqCC1XNO/PXUERLnrznh/LwDT
eQMMnYMToMiUQVP3ARVodWc9KpiYApbvukcMxamgNKzBdcfGGWD0b8eFsy/z
kIc6pHRucuXVIEZ4qI5zTtUuwkMYe4RCxbo4M5yVEj958wkdO7Ol4IadPBds
po3VPdxNAy89JeZ25nDBoeGZWb9VGnjSP5PfrcCNP+/WKoRP05CfGk3PWtg/
WYT8VIZr1tvh41QAYy386u6SYefBLWNX8OdJwlPNrrko3cWfX0lqRkPPlMeA
htJG1x9C+PNNT7FRQOYkEN+1zTogjApknIQb33+fBgb73DcWXy5C/srwYVgw
/T4d22keSf/nwQT5GrQZePHnyad9HDBxiAv2aL4nvcH3/9WSDtbMJ9yw0EXE
mTGBhuY3Hl9909ZtEod8FvNRaRcBfH/7SWcUEtxChqmRf9Io+Ou9FvrnbMV7
MryToLBUjr8fHfDo8EfdCUC+3NKw6wQVrCiNyQilTgHnt7zm+29Skefif8XC
XbN5CLOUGqnVY2eGnJy3Hm0MpWMzICwwKIEL3hEpPl0yRgNRqh8U2A9yQ7H2
N5Ek5gHkvaIqZXQp+OfvYz+XzHWJDP9Zm+ztwp/vTvHdrm+XngL2sf7knT5U
5MGKdNOEGKromOpVpT8HfjBBaQ/erRGDdIyN1KB4ZzM3PBQorPARf145KrPS
7y9JhrwPL5pU4d+3M0LSRrwnJkGgD/MGeSd8PbV2CtI6NA1Eu6lPZCeKAOHH
NBzjqW9Fh7CV1vRrsZVcEDu8FDaOn39Pvb4pn32ZG7pcfSQQ3EFDnoxFZyDn
sBwVTP6YtHpnQoYGipFBW/D1n/Bl8Nxrg0T8/EP4Mrugwbnq5gbU57qSJuRi
l/8B9bmk3j0tYCyMQfMfn0lsfzRzNhPNf3x348HzvHMYKIo8P6xmOAmEqpek
5fyogOh1dT6amzuaVwSIXpcgP+2KPVMOQL2ufeFLlU9jUK+r++l78tjWOIzo
dV3pJf32/1aG/NvfFDvB0wZdqM9lljnWQqrpR/MjDy1PDCmx0jHCv/1puem1
Y88QRvi3dgXyq4UtdNTz2lq4JW+/GQ31tKoFPsDWtx3IqzUZ7KoscOtBXo2v
Ik2ykdaHvBrLwxEJXn0a8mo8PIdYebkHkFfTa2/6c6GahrzaZzE+Zxn7/3m1
tjATo3e9PcirfbKtepBt/hd5NWMzd8HRop/Iqzn06u7kqU9HXi0FpEykySeh
XlfkeeUQo9J05NUWzlRJKIXnIK+W4mf6uGY+H3k197CYzdZvMeTViq+fpS69
K0Je7S7DD9mPLFTk1fIu8qt8V6D+z6uVbPtRj3/fiH4Xw/mkPZ5fUsCDG7tH
ya+HQcYh1VLmW3kgvs9VIjdnHBiRJ1R1porAuY1PM34+mAJ1eduKfOypgOh9
MQv2nhzcUwiI3ldV2xOBeds01PuarFvl3ep8Hfm4Brp6sfvDXjRPciHgRJsv
ZQDNk/Qx/1CbPUDHCB9n7E29gdXRMQ652cqlIWZYx6y5hvUNYD9utH6yEdsK
JRtnDi7LdIOyx2/uTx/ghD4Dfl9X6nqRfwOMb3+fKehH/m1Dwp3gEy005N+Y
pHWK7+KfP+HfisOGdUUu/M+/mexQeVWs2QeIHhhd9vJkDf7vET2w9LOM/GMT
bcjHsXy/e+pMRSXycYouTg7fEmNQDyz238AG+tdU5OM6zDXWRR5kIR+3aHo5
5Y9JHvJxt7fWnR7UKkQ+jns23niHdBHycTeVV17YNxYhH1d0o+hKhAQV+Ti/
9MNc1fj6Rfg4mfJbNir7qIBBKVPY4/EQ4PirYF80kQ3eDLu5iCePgTu5ETWR
Wvj+0fxb3Yc2CU7KWkjtx/cXkk72TruBaZD84rr8HuYiQPTH8g7LyZ+dy0De
7qfP6nOXChqafznY9iq/1YOOEd5u23CE1FE2/PksqTLQYJoTUlr+1Wre6geu
Hu2SEi+4YIAlw/TOaBqoEvjUdWmOC55I+fSrDj9PGDOocNjbcMOm0x+n9X1p
YHdGrdHBZW6olHw8v2CuD/k911d+8m/dIpDPY+uNO+eVWoR83tOM1zY3BKnI
570Obo1qxPcLUsGRI7NBZCgpsiFDVBo/H+i/y43zHgG3S+po4s8LQN1fl5qL
5ROg2r+3MuI2/jx6asN2/u4psGS47++QDBWIfrlAFp37B3axqCfnVech73dc
roykYTCIEd4vMdHMcMe2IUyUZaiSvJsZ+gWEsXnb4PuPxyi7mywXrNY3LeIg
0UBANmu4YgYXfDS73XRqkQaW7YQ6vpzkhnMtE8sS8zTkA0vEebJYx4qQD5z2
V4xLPUYFzXc1BLtukWFIVUFMGb4/E14weOmopAmZCqZN2TO6xMaA+sVid58N
RWCXHJfwBGUSvHBlljEJpYIP7/11P0RNg/PHL4kdNShCvlDd5ANzvBodO9V6
aZjDmQlWbzDdkSk4hK3ayug8p3FBpgm9pvekAfDrm/6dSmNu2BFJZtRKoaF5
nffmY/NdhRKRP/wpHTjnykkFBuG9URLsZEhhvOAtgb/ePD+j8AfuZFg+ly/a
h58f5HQ2LjPBCbCZy/S8934qiIk4RbeInAJOJws52rSpyCsKV13si9owhHn5
f6q3ZWSGV70T00ri6Biv6aszObFckPvHu0SlIRo43J97v0mcG65uXFNyZB1A
njFFa1+mpBT+eR5vk9mtTIbycYvte/H7p9c01umI6BT4fFxrUcmfirzjwa61
upYCOqafMfX3XDET5OKbe8CBPw99TJnXEt3IDbd85aeX4dejfPivSaw4GQ4w
SPuk4L8vRZJZXVVsErQnBppovsLff1O9WuYO/LzevM09cK0IED6yY5t/axG+
H25n8VsuKeWCR+jrZw5sHAAVpNf3nFS5oZ2acYdKHw15SZjBNHMMf15849i4
GvKIDE04EvZ9w88ThJ/kEGrkoOPX++n4F+cw10mw6Wia4o5AKjALix5TtMCv
8HOz8893DmGkFOcI9g4u6OWXmtbKh6+PHDEpqoxkOEJi92ADVDBzveXyHif8
+h/21iQ9oyJvOSLsrGk8T8dUSJvCHu3ihmHF5Dt2HAPgUvTnM2cgGa4cN9zl
g7//o7vhUDfLFHi3sjjiHUQFQXbK3VZpTLDO3rfNc4WOfetTCs9e44IPd/gt
aOD3//itMOvyXWT4/EP0tCb+99+pRW/LZpkEymPOEiYmVOQ1V6wktc7uGsI0
tS6pMRZwwdoxbYVVhgEQv7d24GE3CXLIH3jOK0sFSeN+mwu1yXA4K6+vAX8/
Da7PM0H5JLjVPzO4PZwKWLbODfz2Y4KHlO9smuQewvpUaDt7xrigwbk4p+P4
6yG8J8t8NviSHg0Uj+7+yMaN/z6bAXYSvp4Q3vOnulTtGfzvr1Ty72O4QoZG
0VVN7/A/98vdJOR0dgokW1ucV/GkAlu7+B0+nNywe3c/3w7+ARBmt13rjRS+
Xzsa8/z///9s3qzn/PcCfl7zHVvSd6MCeQ+/9zzXmWBont4ABT9v/k1oS3Cp
wZ8/3IZmrPHrTXhRZbeOEr3NVORFPw22SO7sbUA9tW3iCYVXqP6op6ZYz5rG
ohGD5omaW7glcZAy0TzRyfSHbm77MeB/ebTEWmcSbPm6MXs7fr4m+moPK0MZ
2kuLANFXO2IsYZR9OAcQfTW5I5qxtgyxqK+25VHyJdpRCkb01fqOZvPLPS5D
nvXv4ZKG/JNdqKf2Jt9y15u8fjSPNKa+rzV6ZRAjPCtlByj4jt8vhGftLB99
NsJPR/21LcvuOpRXNNQ/u3j/zP5C0w7kT5+RThS22/Ugfzq1x7Pgdmcf8qfv
KuoSM7VpyJ+Wlx7SWuAcQP507VOA1b06GvKnvzzs3Dhd/+dP74oN2GDjPcif
cvsEHlLw/4v8qWfUUSXryZ/In8Zb6896fs9A/tT25xkN4/VE1Ffj+5Y38ys5
HflTPmMsMM87B/nT8NKnkjYj+ciflitn/Umyw5A/JR0Ia3DzKEL+ND/7Tedu
Ziryp2dOFufewM+PhD+19/x0Q/H/fcd/vTW5t7NxjTYp4HHMqfX1x8PgKZnp
b9zRPCAwc4tzKn4cxFZ3GD0fKgLkdAHvtTtToGxiJqcIf34i+mw1FT91Xpwv
BESfTc1EMb4uKw312STO896x99ZH3rVp2HHu15VeNJ+0aJ+dxNvAATSfdDpb
q0e8l44R3vU0s92CeBMdc9Xkp6bRmOHiqzt0+fEBrJn3XoSvyFYYOrftSa9E
N5AP0OhM38cJ48iq7C/LepFnNeo8O6WQ1Y88K1PLkJr1TxryrGLfNwwZ8Awg
z/pMqTf2zKX/eVbwW6XkoH4fIPptS+c1LQ3OdgOi35a9qNZpJfALedfDrVsF
3ktXIe/qScXYTExiUL/tsO24nbp/KvKuJ9RHglMuZyHvWvGDtO6olYe8K5+V
zZ1kjULkXcPyWE/PHi5C3vX3i2q+qPoi5F1NGDcN5olTkXcN8qFr/MTXH8K7
8jcryO7A/3zTx3qpZ3eHQEvxpveL5dlgeun2Y+2QMeDaWJrEqVEEbjo6SuR3
TAJHlm2HKPj5sZz2b3C9Yxp47Gn8e5GrCBC9uNTL/t8P789Efnb1tHFEcDYN
zVM1smIow5zpGOFn+yYxjoZNQ1iQxILas3FOmBxUJBRwpR8I7FZ2lH3OBTmZ
BU96h+P3X1/CxJEZLjilnq9fjK/Xt604jru95IbSzf7H7T7SgJLucXWORW5o
EL53V+d6H/K4/mp6b8jnIpC3/Yk/qBh+K0Le1uzASa8D+PmJ8LYabXdy4vD1
vCZrobP4Mxletk6vqsDPj3XfY2u9Xo+ALTGx9Q43CoD82M00p4wJcOX/ejr3
qJi2OI7nTCqKOaNMR69FRiqPUUgP7J2SxOiB6y7Fxeo2txo1rB5KHolwr6G4
aiGPhFIkC9X16HTyTk/c6o4WJU0zUmaaKSU193fXujPnv73WOb919m//9m9/
v2d91jrOosCUtQySyoo0uEWF+kIn93fCef2Wn9Z2rUeNipbK86s0D/T8rnjx
hwxBaBet43eHrlW4OlEK2qW0YuUMWxb2WJsoPbJfTkf7G4ZL3Eg8Z1dDSC2n
EzkExqsFd0hs/P5vrelgJ6oKmNdzYhEHfx72mr4O9KSO9700JloQ012p530X
O7YuZIN+tCt7Eta1nsJJtRYPh0GP6fjfkZevpTGgn7fs/ecsl9uDCvnSLdvV
NNJ0lQ5YXVSiBuXw5qwcBi0zb3Dinu1D08rqG0/vqNTzwvxSdmrAcjm94oh9
9JR9BLadtYe3wVpBP1npL97YQWKD0+0hQ1zQSzMcDzb+xsFm3Tc/qu906v//
eozd8FzYd0PPE+eyIxs9JoKe+h4iczGmsLG0zUkG57lYMk8w7zCFe+niIBGc
9wXi5jYP/ld0I+AYzeIxaJegnbl4RoW4yfwpUeGMnj8+1RZeEUgo6Bw/UdDR
EQJfkWXn/bghpy+zPme9yCNxsfV2lkYG/b+kbnu5AwenHm12sjaR6fnkby/P
3ovkMygmc8UuJz8Ke0bEvfGF/VNqtTpsk40KNYeldU/JYvT88rgzwYOscjm9
U/h8U3AFgVN3PqvK7pPTYXtMY8eN5eCNUQNtPpQMkX6CWzcdKNwe6nv0IsTr
WtDNdNoqkQ+RX3c5kUGe+xNmfuT2IVZYSY6hEYN0vLNvj0QwFc7DwrMGQW+q
SHygyfLy3bGg5z5lioT+8P6eRx+Phfno+OeBlupFdzygflu9va/+SmGybODp
MOhHHQ9t3NLuSXAY5HsueFP1PiWafMU5KC8b9EtQUsyqWAL3FdW4nwT99T4l
u6RXSmLDGXfbR83BDwgtNCFaS2wbE+RQDvFeGKQ4BiarUFLfd5vBOEbPT397
0pOepJbT5Cfb4tV2HLzIKuJG/QQZyho1SQ9YSuFl5ZtD8mD+RnWyKrMRJTI+
vf5S6TkG5fPttqYVEzhvfPi2y1o5nVCy8db5HyTunefiI4H9735n4qM6Owpf
mrRKshieP1TEtc4f/IpiRJlmIxGMnr+e3T0g/m6noOWa+7nkAxIXqnsNA7Wd
qLpZQga8t8T7xl8Y2g9+ZGAlK/DZJqivqqjgSbA/riywyYiuUCJu482yXuh3
kypfCbuOE5g7p3MrxwLyzx3iP+smMbXbuKYT1lPHb8+yNh9DZV5FRySZLSSb
wj3cUwltEE/Hb+/Y711yfqKC9uOlR5msgX7szo4tg34TIbzdf9NLhZZ7xw69
lMB+C3g4N34CB+dO0yR9BP0ob/kj99hc8LPBs30bYb6mFqsGEpEStZ55/Vh4
iEHDCpN3TWsInD83vrAQ9KMI+42eribxJfZTgZepTM9/H3wUrT5ixqAvmguk
vViJ7s/6fNsF/E/2XZ44XEjgn7zXWwrtFXQUl24obyLx8/53LFs4D53vKcxC
PSmcPuFCTeV/3+tnLkgI71GitrqR62ngL4mAA/XCQRLHObg7VcP61ER+9flg
RWHbOZXCQZifOL+gPZVH4BK1hasc+sPq45E+j4uVaEryN18u5Hc2LzHS4DCB
0ze3FmgsFbRbydSgjC4S//lzvYgD+dXx4967G/+qNVHQUmmEigoA/9FwQMOC
95nIjBaMna1CptN5D/xPQr13dKxB4zh4yDFtixv4tZQTIsfzzhTmzRQdqoD7
k673x//iR+BRYlnXIshXjrdh4c4TSlSQVPAqFvzLti+1ItdEAj9ZUql2g/oJ
6ojN4H0gsbpXdf88rAfh76j1WEbhU77GQ0kQb3PcGfY9MxWa+zZj9VLwX3Lu
/BNvDDi4vD021BTyceXHHLcKewrnerUsjoP74x3ri8QLoT6vVjZunQZ+QlrX
al6nRG/WC1R24Fds9jSyf3wl8eCSpvkJ8LyOb9d6hZzKaspF6+yLrFJcKVwh
2drSDPH2OtvgNRsI/K6Ffz8Z5qPj2anYaKnXeAbt2Im1/Jo+ZPD/ZeTjHnbQ
zBDrxt+LQt2eG3H043O/O/Cfac31Y2VDjksH5Fs31v9v9/9Lxwfrxv8Cd7/Z
rQ==
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{478, 2940, 2938, 477, 908, 781, 679, 601, 546, 
                512, 929, 802, 700, 622, 567, 952, 825, 723, 645, 976, 849, 
                747, 1001, 874, 1027}}], 
               
               PolygonBox[{{2937, 2936, 463, 464, 465, 466, 467, 898, 771, 
                669, 591, 536, 502, 927, 800, 698, 620, 565, 951, 824, 722, 
                644, 468, 899, 772, 670, 981, 854, 592, 959, 832, 1010, 730, 
                993, 866, 1021}}], 
               PolygonBox[CompressedData["
1:eJwV0bdL3HEcBuCvZbFtRl2d7FMyRrAODjqIgyCIJQhZ4qCeo64u9vIfmLhY
B7smdw4Z1EXIgWAcQjgLDoIVHHx+w8P7vh9+d8fdFff0t35LDyGkMcZwTggx
Nh222GaHgYwQHjw4Tg1ZpNxn3PNZtrsoY9d90O1Rn6A2utmf+aNns6iX8Esf
4MprZu0PrNjdxPV6LvRy1vWPnOgXspMR/Vg280Iqei/5lfTMEPa875D+5H4j
J+WZbOOVOntPVnNP0r6UXbyRY3+XpdwRt89lB4P6b9nEP/2/7OPaZ87JAlbd
e0joDfzVK9jQP3Gqj3Kit3Cl73t9TH/Wp6gnlx9uZST0oej7eG7eLmTN7qWS
A/fh6PfQp2kgjyW3co70GLeeW7CLWLeTsp0v+pFsjP5zLu0qDj3/k3ciGVBk

                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{2937, 2938, 511, 545, 600, 678, 780, 907, 476, 
                510, 544, 599, 677, 779, 906, 475, 509, 543, 598, 676, 778, 
                905, 474, 508, 542, 597, 675, 777, 904, 473, 507, 541, 596, 
                674, 776, 903, 472, 506, 540, 595, 673, 775, 902, 471, 505, 
                539, 594, 672, 774, 901, 470, 504, 538, 593, 671, 773, 900, 
                469, 566, 621, 699, 801, 928, 503, 635, 713, 815, 942, 537}}], 
               PolygonBox[CompressedData["
1:eJwV0UlLVmEYBuDXKQPBNH+BOC7NlTlFrYJa6UJQU1CCwPRTF24clqWVWv0E
U7CcK4UCh1aBuilSiIJSyxblUEILF9H1Li6e+37Oe77zcU5uS6KmIzmEkMQY
M0JvRgg9LMmL7HPWoUsMc0J3Sggv7b+TrlfzgD90ufbCvlhuZoYcu8d8sz+j
V3Gf33TaP7cvkpuY5rzdI/bsu/U1CvUJ0uRK7nFMwm7BuQF5k9LYKZRvMEW2
/pBd57r0VQr0cVLlLSrk11TIteZ7huQjOuR5994yf7Bvd93coD8+x/wcezxv
XojnKdD/ma3x2fFMfH/mFd7QqJ+adWzzTP9pZjHKTvwwqSHcjO8u/obrf82r
vKVTrzc/siLnm09IkT9QLr+iXK4x3zEoH9Iuz8VvKF+T1+mT1ymJ18iXP3FZ
XqNBfso5eYSv7k/oy+TpYyTLF7nLAbftZp3Li/+VSTLthvlin6SXcYdftNn/
B8IkWeM=
                "]], 
               PolygonBox[CompressedData["
1:eJwV0UlLlWEYBuD3aLug0QptonVqo7rLlVlZKUILIRCjtAFq6VGb1J/Q5JQ/
oGGVHm1hkKmplRq0MIIwCsEws0HCLOt6FxfP/dzn/c73cs6OU5fKL6aFEBKk
qF0ZQpIxxStessAmh47TQVp6CI280P9ko+4Y7ST01xnV/2CD7iht8SX6a4zo
99sv8Jjtuk6+6zPsJbTyj6v6YX2z/JoCe4p98nl62Wa/yzfn6u3D5Nofsl5+
S6H8hCNyC8tcsT/3zGe5TB6nSa403zMhz5v5dLM33sk8zUc+2BfMYoY4Z18y
K5ikxz5rbqWDee9KrAihRp7mk89/xTvF34Q6+0nzXbyXPGfm8IB19ipzKn63
fMDs47B8wnzDHfkvl+N9vGtGLpXH4v8lj5Mnd7FHnuKgPMhZOcUWuZ2vnk/a
h8i232etfIjb/KEhPuvcbrmGbjbr2pjT19oH2Wm/xxq5mFvxd6JeN+DcLrma
LrJ0rXzRr4734ya/qdM/0+fKZ3hEpq6FWf0qexE3WCSp79c/5T9cwGi9
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1WWUVWUUBuBhkBq6e2DoHrq7GyWUUhQQaQxKBUERpFEUKekuAwUFCzAB
k1JAKRNMwgLr2Ysfz7zv/u5ZZ058d92U/qO6jkyTkJCw1Z/Ihv6ckYu5i9bU
oIv1y3EcD9CLRBpZPyuXMJg23BrnYrc+nZrcaL4it/Ego80F+FTvzSA9ibf0
J0hLY/M5uZQhxIXm4qDeltv0RF7VZ8jKzIjrk8l8pj8p61BLv0n+Jp9lml6B
CfoYWZAVHIr/H8ezkT7xHGRmnuFt8yyZynrmmx+SJVjFSfMCWY/N3GBuIr+S
i+Iccoosy1B9lMzNB/pcWZ12ej+Zltf0mfHM9GJ8rtemq/67fI6JjDUX4rDe
N96FnoV34hmQjqbmr+UyhtGe2+MaeT3uizp0M/8hn497i/dJeppZ/0YuZzgd
qEt363/KF5gU74UMNLf+rVzBCDpSjx7W/5LbmRz3SkZaWP9Orox3TSfqk4mW
PvteropnRmcakERmspCVbGQnBznJRW7ykJd85KcABSlEYYpQlGSKUZwUSlCS
UrRyDeflau6mCw0pTWufXZBruCf2O4242fpV+SIPx/OmDG2s/yDXcm/sTe6w
lo439Nk05hbzNfkSj8QxDLGWlXf1pyhLW/OPch33xfWZ8/Bh7BX66+l5U5/D
BL04x/Um9NT/ljt4TK/IFH2cLMyROAdD9Wy8F9coq7Ig3rssyWq+MD8t67OF
cuZ28ie5OL438tFYZw2j45nJvCzjI/M8WYMNdDMPkBnYo8+lKb3M/8idcT7G
m4twNI5nmJ6d9+N6Yq/ppfhSL097/We5gal6ecbE+5D5WM7H5sdlTbrrA2VG
lrLXPFNWYR3zzBNlCis5Ee9H1mUTzcy95b9yiXxZTpeVWMtU8/2yKMf0+bI2
A/XhMgf74/3JaiyMPSVLc0qvQAf9F7mRsbEXzPn5RO/BnXom9sV90Zw+5v/k
K0yLY6hIR+u/yk2xD2Iv04JKdPLZRbk5nnvsU1pSmSqkUpVqdHbsJbkl7i/2
WnyX6Gs9fnR2xZ5jECPMOTmgL4o9r5fhtL5QNkhz/bequvl/tcC8rA==
               "]]}, Annotation[#, "Charting`Private`Tag$1555119#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1GW4FGUYBuCFQzciXYJBlyChhEgKKII0SEoICEiDpIp0Ki2dUtIlSijd
3S3dLSjg/V3+uK/3eZ+d2T1ndmYzNW5btU20SCRSL3okslBoFRWJ3JS/pzDR
OKsfqk/EXHsdXmeRvrXultyfIkRnuu51fpPbcs5xw+yJ+dlelw1ySU7Kb/CL
nJcdcg92yBW5FF5z/pfybXkA++WqvCuvCZNDchQz5Df4XT5u1qGdvNUsz2Mu
2P8ymxKJEYmc9/7D5STcYJ7Xj5g1eRb1/7XZaH7AA07ZL5hNeMGb9sVmPu6w
037K/Iye8k6zEpflK2YLFvvMNuF43UAOyJ/ynrw2TA7LMZgZPoP18lfhs507
wp6U+fbPeIsl9rfZJfcKu+Pa2u/KgyhKTGbp3mKD3J6Ljhtpf4UF9vpkYam+
ne6ePJhixArXTj9Kn4yF9gZkZZn+K919eQjFic0l/XLah+tnH0oJ4nBZv4KV
dI4fiawyV7OGtXRwzkPHDeN94oZrqP9B/yqL7A3Jxq/6jrpH8nBKhs5elCNy
PGbLWdgod+Cqc360J+cXeyM2yaU4LWcP10HOz275tFmf3vIu8yP+5kp4L/ML
orun1nnfTuF+0183R5gHzWo8DfeSfZ1ZLFxfjobnzGzIv8S3zzGzhueLTfYT
Zl06ytvMD7kYrq/ZjGs+c7SZItxf+sb8IZfmjJwjfEdyAfbIfdgtf8xV+bfw
HchP5JGUIgFzddn4Q+4U/h/HjbGnZIm9CTn5Xd8lXA95FKVJyM+67Pwpd+aG
48baU7HUftSsxefyn2aZ8J1z1p6L9Y7fEN7b/bHR3ETXcB299gNlSMRN/Th9
apbZm5I7XAN9t/Asyz9SlsTc0o/Xp2G5vRl5wt+g7677Rx5NOZIwT5eDzXIX
bjtugj0tK+zNyctm/dfhe5THUJ6kzNflZIvclTuOm2hPx0p7i3CuXJZzcj6W
y++wV+7LHrly+K7lLc7vIT+Xx3JIrh7ui/BdmsU5Jp8zG4XnW15g5uI2W+0n
zXp0k7ebFcL3z1/h2TSbE839fNdn/SSn5yarvH7MrB2uU7jvw99jlgvPH+fD
70r4TnkZfpfsK8yC4feIffYzZgO+kfean3Bd3uqzesov5HFUCPeWvQTH5WQs
lHOzTe7OPedMsmdgtb0l+VlpL8R++dvw3DiuV/ib5PFU5FXu6yfrM7LG3ooC
4Zroe+siTLBXIjkP9DvoE64PE3UfkYKH+p30Db8F/KT7mJQ80u9iN3vCfeye
3mvuYz8HOMg3zotiknMqk4rH+im611hrb807rLIX5oD8XbgPHPetPQaT7YfN
GuH6hmfJfJ/7nLCfNxuHeyjcA/6W1LpFch62y1/zxPtNtWfiV/uXFAzvq/9O
F5Mp9iqk4W/9EfrpYzFVV5W0PNUf5Xt9bKbpPiUdz/TH6K+Pw3RdNdLzj/44
A/RxmaGrTgb+1Z9goD4eM3U1yMhz/UkG6eMzS1eT13ihP8VgfQJm62qRiZfh
N8D1OG0O8VpC5uhrk5kI03SZWSe3oRCr7UU4KPdjn1yFG/I1s2X4Xj1PZ7zv
fzv5Tns=
               "]]}, Annotation[#, "Charting`Private`Tag$1555119#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1HfcjnUYhvEHLxJRoaSskL1D9ioqJXtEadjZe8smshqIlJXZsNuoqBAp
2ZS9Rym79L3+OD7neVz3732fe/5yvdSlfudkiURiQPJEIikpkdiXMpGoj6P6
ZDRBGdw064GUWM77IiX28wY4pk9BU5TFv2Y9kQoreD+kwgHeEMf1N9AMmVMl
EuPNsmMzfwT/6b2QGit5f+S27h1eGHt4ahzUG+GE/iaKWjOfl8Wz/B7+up4D
W3g53NJ74zas4qWtWapXxgCeh8/Qi8S56pvlXvNq+qf6k3hR3x3/w/x32Rit
zE7yJ+Q6/pZeTP9A7ygfkU3lNtlXNnf8XjmBt5M5ZT35Q1y7/MnxSnIl7ypr
yuflb3KgLO94QvbhbWQaWUdukKvjuekf6lXQQv81/s48rz5TL4p9vDr/TK+N
NPwP2QSn9LfRAlmsmWiWC1t5BSQz68tvxxo+CLfjUFwnTutT8RwqIi0OmzfD
GX0ano9rRDrcgSPx3HBWn46WqIzkfqufeVp8ygcjPY7y5jinv4MXcJ+1k8we
xDZeBSnM+vN0+CzeUf6RXhVD+EP8Xb0Y9vMa/HP9KWTgx+Ie4rz+pGPr9Rl6
cX2BXi6uS/853g3zrPpkvb3MHd+U/DHeu1gT1yRX8W6ylmwpd8pBsqrjSXIA
byvvkM/IjfFNxXnFNyI/5l1kNfmc3BHvr3zV8XxyFn9FFo9vRG6RBxx7VP9C
fxp38uPx97ig13bsG32mXkJfqJfHS/x+PkXPg+1xX/lq/XFUi/2AD9TT44v4
1vgnenUM5fn5e3oJHOR34US807iov4uX8YB1b5jlxS/xfsbeYTYongW+5MNw
N07GvcOf+iy0imcXe4P1g+P68BUfjow4xV/AX/p7aB33A5lwOp4dLunvow0e
i/0p9pH4VuM7wJm4H/hbn422qBnvHc6av4x/9Dloh1q4zfkMMb8LX/MR8Y7g
XOwbuKzPRXs8jjTxHM3vxlo+Mu4/zvPWuKLPQwdks/ZNs4fwa+w/8R2aDeUZ
sY6PQgGz93lJ/B73GRdi78BVfT5KWrOIV4h3h2fnb+n5sCPe/fiOzYbxTFjP
y/Nleg2M5gX5bL0UGsc+Jv+Ie6l/GXtU3D99j8xmfjHe87gus2v8Kfkt7xF7
Jy8lF/NOsmLsD3K77Cc7Op5Dvs07yPyygdwk+8Re6XhVuYZ3l0/E85e7Yr+L
fUcfrmdGXf17+U3sb/py/VGM4YX4HP1hHIrnzb+K7xLZ+Z+yHa7rC9AJOa2Z
alYAO+O6Yo8zG8Hvwbd8bJw//oq9Ajf0heiMp2OPs36k+b34jr8W/xeX4npx
U1+ELqiDXPg7nh3+1RejK57Bg8iNPMgbe17sE/Fd4h/rO+I/fQm6oS4y+P1R
5lmwgY+L9wiX43nglr4U3VEPd1o/2vw+bOTj433AFd4ZCXzIe8S5WjuNF8Qu
Xj/2BLMxPCu+5xX5Cv0xvM4L87l6aTTRt8rD8Y3pX8czRCF+NfZGJIt9zrHv
5EfmD+tL4lxkJdlc/iL7y55xj+T0+B/YzRvEPmM2lt+PH/iEOA9c412RHB/z
XmgY+4z1r5k9gB/5RBTBdd4NKfAJ741GKIpiKI4S8Q3GOx/nihvx3iIJy3gf
NEYmvzEuvh9s4pPiN8zm8TI4EvsIX6vXiz1J3ysHy9KO/Q9I0yxl
               "]]}, Annotation[#, "Charting`Private`Tag$1555119#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1WUYVFUUBdChU7q7u7ukuxsFFcUWAYMQi+7u7lBCEJDubinpTgFBQjpd
98f69jn7zRtg5r4hc5sOjdtHiUQicaNGIt1iRiKJYkci82JFIo2JyyHdErrT
g570ojd96Es/+jOAgQxiMEMYSmLvOd97NSEeh3VLKaTfbf+GPNzTDSOJfoG9
KfE5oqulu2QeRBWW6Qrr9pi/JS/v2B/Kqdx3vbH9H/No6tLG/lzOZrjrSe0L
zc341BzhDfNb8p78UU6UHWRs/nJPbXlZ970cLNvK6PSkqv19+VR2kzPD303G
py9/uL+I3Kv/TnaUn8uo9CCf/V35SP4sp4XPRsbjP/c2kbd0Y2hnjkk984fy
hZzDCK9LZv/N3JwEHNXV0V0xD6Eay3VFdfvMncjPA91IkusX2VuQkGO6FYxi
NGMYSwqvWxw+LxJxXLeScaR07Xfd2yTmhG4VxfT77Z0pwEPdeFLpl9hbkoST
utUU1/9p70JBHukmkFq/1N6KpJzSraGE/kD4fCnEY91E0uiXhTNCMk7r1lJS
f9DelcI80U0ibfi+wvdBcs7o1lFKfyh8/xThqW4y6fTL7e+RgrO69UwhvWsr
dK1JyTndBqaSwbWV4dyQivO6jZTWH7b/QFGe6aaRUb/K/gGpuaDbRBn9kXBm
KcZz3XQy6VeHs08aLuo2UzacZ/tPFOeFbgaZ9WvCmSItl3RbKKc/Gs4lJXip
m0kW/Vr7R6Tjsm4rb+qPheeAkrzSzSKrfp39Y9JzRbeN2WRzbb3uEzJwVbed
OWR3bUN4TsnINd0OyuuP27tTite6ueTQb7R/RqZwDu335SS+MsehN397bV15
VT+U6uzUVdCdMPegNBF+0efUbwrPLZm5rttFRf1Je0/KEIVf9bn0m81fkIUb
ut1U0p+y96IsUZmnz63fYm5LVm7q9lBZf9rem3JEY74+j36r+Uuy8Y+unu6a
eRg12Kurojtj7sObRGeBPq9+m7kd2bmlqx8+F/NwarJPV1V31tyX8sSgqe62
HEt9FnpdPt12c3ty0DL8dsnJ3Ha9gf26eQS12K+rpjtn7keF8AzZH8vpxKSZ
/V85LryvORYNwpmTL+VcOpkThN8975df7tB1kR3CGZBRyGluJR+Ecy+nyK9l
XPqEP8O9DeWN8NzJkeFzlTHoRe3w3Mln4bzJWbJj+D+DfuF3yv3V5Xl9V9k/
fO8yGhXNreUTOYNYNLffkeNpGJ4J+6twzljkvQrYd4bzSi7u6BrpbppHUYcD
uhq6C+YBVCI2i/UF9bvCv5Hc3NUdpKb+on0glYlDC91dOYFG4Rm0vw5nmM7m
hOHfE37T3f8/xYwUQA==
               "]]}, Annotation[#, "Charting`Private`Tag$1555119#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1ne8z1Ucx/Gf7SKJhtEiuyF7lFKJhIxKy54hrt3UpmyyInsre1ORUUqZ
FZW999675+eP1+M9zjm/373f7znn3tyNk2u3TZFIJI6nTCR6pE8k5mZIJG5F
z6REIh926b5HT/RCb/TBPHOyoJc5+bFb9wP6Yr7+NvTWF8Ae3Y/4R1cCM3XP
Iw366RfosqKPXBB7dZfkl7BeboWlun/lkpglV0VaZMiYSDTX7eY/QH/zFsrZ
0FcuhOzmdJJP8vuMX+Zfxga5NZbp/pNLYbZcDQ9Y85F8hU+HjHILeQ9fkR/D
d+Uf5Xvz6fAiP5MO8HmL6O14RdfPvDJ0kPwmLSznoJ3lBvSUXIVOlNvR/dZf
4evgDXmj8Qp0hPwWfUt+kH4hN6UpaU06jf5k7VZaGnPMe1z/NV+dz8t/zF/l
0yOT/Ka8l/8QReU+cnp85XMW0zvQP74POY13kU/zB4xfjd8Pm+Q2WK7bJpfB
XPkFJOEW61rq9vEfYaB5S+Q741nJD+Gg7pr8Kv6U22KFbrtcFvPkGvG+MSj2
pO6u+Dnlh3FItxI7dOUwX1cz3hsGx97UZcdA+REc1q3CkNib+hwYpC+CI7qf
MRRfY6mxnBgc7xtHdb9gp+4xLNDViueJYfplulwYEs8Ux3TX5dfwl5yM1bpd
8uNYKNeO54TMnlUr3X7+Yww37yf5bgyViyGXOW/LZ/jjxm/wr+NvuV08T+Nf
yqnwq/HdtDwWGStvbFjs1Tjf/Cd8Y3ot3hf9Vs7M38q35uvTA/KzdKycHGvi
56B95RY0Kc4qnUU70W9853L+nnifsf/ML0sHyy1pcflu+o7ckJ6N+4BOkk9Y
ezP2PTbrn9KP5NvHe+Z78Knxm3l76BNYbOyluIeMfypfj58fWeKsyAf5TzHC
mhXyvRgml8BJ3Rrs1T2JJbqXYy1Gxp7S3Yfhckmc0v2OURiNMRiLcRiPCZiI
SbG/rLsf31hXCqd1f2CfrgK+19XBbZgce06XGyPk0jijW4v9uqfwg+4VZMWU
2IO6PBgZ9wvO6hJ+57q6LXIHrNMdkJ/Gj/KryBbfaV4b3SH+M0w1b7X8AEbF
+8I5XQrz6un+kTtive6g/AyWyq+hgDmfyTf42+Pnk9vKh/lK/Dj+c7543IV8
hrh/+dn0W5/3K80b50M32rxydIjcipaT76Hvyo3oubj76eTYE/S89Slpfbku
/df403SU3Cbu/TjvtKfcjKahteh0usHaQ7Qilpn3hH54nCW+IP85f5O/I56Z
nCwf4bvF3pH7yxnxnc/5jebDGGOP4V7j78nn+QvGU8kN5P/kztioOyw/G3e2
/AbuxLTYj7r8GBv3Ny7qUlvfULdV7oJNuiNyJSyX6+IuTI/9qSuAcXHecUn3
J47qKmOFrh6yY0bsSV1BjI9ngMu6v3BM9xxW6uojB2bGntQVwgT5SVzR/Y3j
uipYpWuAnJilX6crjIlyBdznd3lfvsBX46fwHehVc9PQRvI2Y29js+6E/Dx+
lhvG/YfZ+vW6BzEp7glc023BSV1V/KJrFHcN5ug36B7C5NgjuB7/k+CUrhpW
6xrHfsNc/Ubdw5giP4Mb8T8ITuuqx92qaxLvGvP0m3SPYKpcETfj/wqc0b0Q
d5auafz+mB/vRFckzkDcr0hgq/6srgbWyM1wPxbEO9E9GvstzhVSIK3n1Vi3
nX8H28w7J9fE73Jz5I5zaV473VG+OxbGO5OLYppcOb7HnA/ki3xKpJObyDv4
d7HdmvNxfvCH3AKFzOkmJ+IuirMit+ePxWfy4/kv4u7kB/CZsMjnbKbFMD3O
i7GhsdfiZ+W78pf46vxUPhWfnm/K16M7433EXSG3jXMmF6G95OY0La1NZ9CO
dIfvuxBdnG15bezb+Dslt47/geTCtLvchKaI50+/i/swziXfgT/OP8dP4L/k
S/Ff8bdgcew9WhwzjFVBHuMfypf51EiSm8m7+Pex05qL8otYJ7dE3jjH5nXU
neB7oLQ8UM6MOvwc2pkusf5/fuuTjw==
               "]]}, 
             Annotation[#, "Charting`Private`Tag$1555119#5"]& ]}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"Backward Integrate feedback solution\"", TraditionalForm],
          PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1c\"", "\"u1c\"", "\"x1c\"", "\"\[Theta]dot1c\"", 
           "\"xdot1c\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 2.0713563666453507`}, {2., 0.}, {3., 0.}, {4., 0.}, {
          5., 0.}, {6., 0.}}]}}, {{}, {}}},
      AspectRatio->NCache[
        Rational[1, 3], 0.3333333333333333],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->400,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 6}, {0, 2.0713563666453507`}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.8641430640893307`*^9, {3.864143094166597*^9, 3.864143105580903*^9}},
 CellLabel->
  "Out[3593]=",ExpressionUUID->"27570317-3398-4ce0-a135-cb59b951f3d4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.0488321034887562`", ",", 
   RowBox[{"-", "0.6372621126028954`"}], ",", "1.451379368568955`", ",", 
   "1.451379368568955`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8641430640893307`*^9, {3.864143094166597*^9, 3.864143105657878*^9}},
 CellLabel->
  "Out[3594]=",ExpressionUUID->"fc1ef182-c5f3-468a-8807-a35fca49830e"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8638909789768496`*^9, 3.8638909843991165`*^9}, 
   3.863891412317354*^9},ExpressionUUID->"e3b56381-3091-428c-953b-\
8049828b4235"],

Cell["Individual Test Benches", "Text",
 CellChangeTimes->{{3.8637030744782195`*^9, 3.863703080794203*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"78f72274-21f2-4a3e-a828-5906a5fe2643"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  StyleBox[
   RowBox[{"n", "=", "20"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Tau]", "=", "5"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Tau]1", "=", 
    RowBox[{"\[Tau]", "*", "1.25"}]}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"A", "=", "0.2"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"order", " ", "=", " ", "5"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"maxIter", " ", "=", " ", "100"}],
   FontWeight->"Plain"], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0.7743962606925816`", ",", "1.2185230464544645`", ",", 
      "0.8019600148983077`"}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"InitGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}]}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
       "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
       "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "data"}], "}"}], "=", 
     RowBox[{"ffCartPendulum", "[", 
      RowBox[{
      "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", "order", 
       ",", "maxIter", ",", "InitGuess"}], "]"}]}], ";"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1b", ",", "xdot1b", ",", "\[Theta]1b", ",", "\[Theta]dot1b", ",", 
       "u1b", ",", "J1"}], "}"}], "=", 
     RowBox[{"testSwingUp", "[", 
      RowBox[{"ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "u1a", ",", "A"}], 
      "]"}]}], ";"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x1c", ",", "xdot1c", ",", "\[Theta]1c", ",", "\[Theta]dot1c", ",", 
      "u1c", ",", "J"}], "}"}], "=", 
    RowBox[{"testWithFB", "[", 
     RowBox[{
     "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
      "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A"}], "]"}]}], 
   ";", 
   RowBox[{"p1a", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1a", "[", "t", "]"}], ",", 
        RowBox[{"u1a", "[", "t", "]"}], ",", 
        RowBox[{"x1a", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1a", "[", "t", "]"}], ",", 
        RowBox[{"xdot1a", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1a\>\"", ",", "\"\<u1a\>\"", ",", "\"\<x1a\>\"", ",", 
         "\"\<\[Theta]dot1a\>\"", ",", "\"\<xdot1a\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Feedforward solution\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"p1b", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1b", "[", "t", "]"}], ",", 
        RowBox[{"u1a", "[", "t", "]"}], ",", 
        RowBox[{"x1b", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1b", "[", "t", "]"}], ",", 
        RowBox[{"xdot1b", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1b\>\"", ",", "\"\<u1b\>\"", ",", "\"\<x1b\>\"", ",", 
         "\"\<\[Theta]dot1b\>\"", ",", "\"\<xdot1b\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Test on dynamics\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"p1c", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1c", "[", "t", "]"}], ",", 
        RowBox[{"u1c", "[", "t", "]"}], ",", 
        RowBox[{"x1c", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1c", "[", "t", "]"}], ",", 
        RowBox[{"xdot1c", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1c\>\"", ",", "\"\<u1c\>\"", ",", "\"\<x1c\>\"", ",", 
         "\"\<\[Theta]dot1c\>\"", ",", "\"\<xdot1c\>\""}], "}"}]}], ",", 
      RowBox[{
      "PlotLabel", "->", "\"\<Backward Integrate feedback solution\>\""}], 
      ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"p1d", "=", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"data", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"AspectRatio", "->", 
        RowBox[{"1", "/", "3"}]}], ",", 
       RowBox[{"ImageSize", "->", "400"}]}], "]"}]}], ";"}],
   FontWeight->"Plain"], 
  StyleBox["\[IndentingNewLine]",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"Grid", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"p1a", ",", "p1b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"p1c", ",", "p1d"}], "}"}]}], "}"}], "]"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{"{", 
  StyleBox[
   RowBox[{
    RowBox[{"\[Lambda]1ff0", "[", "0", "]"}], ",", 
    RowBox[{"\[Lambda]2ff0", "[", "0", "]"}], ",", 
    RowBox[{"\[Lambda]3ff0", "[", "0", "]"}], ",", 
    RowBox[{"\[Lambda]4ff0", "[", "0", "]"}]}],
   FontWeight->"Plain"], 
  StyleBox["}",
   FontWeight->"Plain"]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8637030916107454`*^9, 3.8637031163048553`*^9}, {
   3.863703146634164*^9, 3.8637031467241335`*^9}, {3.8637032271314416`*^9, 
   3.8637032981877384`*^9}, {3.863703344313999*^9, 3.8637033675275803`*^9}, {
   3.8637034246933155`*^9, 3.863703488801831*^9}, {3.8637035225560446`*^9, 
   3.8637036066221848`*^9}, 3.8637039678437643`*^9, {3.863704003356416*^9, 
   3.863704015206629*^9}, 3.8637041910564413`*^9, {3.86387938554615*^9, 
   3.8638794077180634`*^9}, {3.8638794473054113`*^9, 3.863879456186574*^9}, 
   3.863879487594535*^9, {3.8638795768290167`*^9, 3.863879601771044*^9}, {
   3.8638860815410876`*^9, 3.863886103615032*^9}, {3.8638861483497353`*^9, 
   3.863886172621978*^9}, {3.8638914447629833`*^9, 3.8638914562922993`*^9}, 
   3.863891796977415*^9, {3.8638918475872407`*^9, 3.86389184764522*^9}, {
   3.8638937946529503`*^9, 3.8638938135878987`*^9}, {3.863893847458075*^9, 
   3.8638938597471466`*^9}, 3.8638940187133408`*^9, 3.863894098689779*^9, {
   3.8638941539631133`*^9, 3.8638941576359406`*^9}, {3.863894255027814*^9, 
   3.863894255155772*^9}, 3.8638944064184275`*^9, {3.864132884995618*^9, 
   3.8641329073813734`*^9}, 3.8641331504876966`*^9, 3.864133195282199*^9, {
   3.86413327929601*^9, 3.864133287553337*^9}, {3.864133332576766*^9, 
   3.864133353182098*^9}, {3.8641334403238955`*^9, 3.8641334566426144`*^9}, 
   3.864133562247438*^9, 3.8641336317199535`*^9, 3.8641336640694847`*^9, 
   3.8641338838003726`*^9, 3.864133916131909*^9, 3.8641339918014193`*^9, {
   3.8641352038731537`*^9, 3.8641352725329356`*^9}, {3.8641417727182617`*^9, 
   3.8641418023916583`*^9}, 3.8641418403363776`*^9, {3.864143075053784*^9, 
   3.8641430827452946`*^9}},
 CellLabel->
  "In[3542]:=",ExpressionUUID->"b5dee5c3-2101-40ff-b338-91333f517d06"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "ncvb", 
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"t$1536530\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"t$1536530\\\", \\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"3.007734791797338`\\\", \\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"21.605014942847266`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"0.00003515444835673229`\\\"}]\\) for the integral and \
error estimates.\"", 2, 3547, 247, 17529228933704924088, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.8641418424896803`*^9, 3.8641418769335337`*^9}, {
  3.8641430843027887`*^9, 3.864143091483465*^9}},
 CellLabel->
  "During evaluation of \
In[3542]:=",ExpressionUUID->"45a0404e-b4be-440e-88f2-2ff609edf2e6"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
QxdK6WKo5jw9w+o1G07fuPdp4bYY2la8/+WZ8mmQM5ZonZMUR74DRX0Da3sW
efQB7lXnR7/2YSSPNl496pRmz4GTPDpJfGLLe8SLkzyajDeSR5NrkkeTa5JH
ezjymr51Hl3k0ZZzJ2uGy78v8mgt1BC5W/0nRvLo16fX/g6N7sdIHn3UM/47
R+IYRvJoPwNBR70MJkbyaA9a+uylYwyM5NGRFKrU4XWDGMmj+9OGJzOTmjCS
P5vqtW/wvN++yJ9lb3Xss0sZXuTPg5VC4fntjEX+fL3NQaerggmqrfbOH8bn
QIlrdZ/88lEwD1b71EFnw4YZ+2TNkl+QZBXgu/sWBdk0BCRvNO7ESF5tluH6
9YX/DEby6nk3ipuiFhUneXWl8Vm0LZ6Ck7x6PnXvrXWabIzk1Y0pXife3GZj
JK8+vITbkfcEFSd5tSbfjWiXXgoeanxroK6QF+00jQ/8a8/AnnmXxW0o4EMz
x3zejdNrYec68VfNZfzIkjacNLF5EkySGlL3VAigt8+veBhQ2aBSVkk1bxRE
jBGbI6nZFOSbob1Tqk0IhRaOxkVLU9DGU2tdEv4Io7dsHvxWJBuOvljLETgg
gkoLz63W+suGF+9zfhh4iaIvvTaXiz0p6FBaAXspQxRlHmiIaJGnIP2havtb
3mLI4IZg/s/eWTgtlKA+OCmGImzMl29M+bvI290zol3WvmjESN5evG3EPGUD
GyN5ew5f97c/nLw4ydvJeFP55Oo5FfpvHZqBRUbf+RePJH+PO4zHNnS8wUj+
Ljwbb7dsuAMj+fs+/fj9FVMjGMnf7z/WiVktycRI/n6tvyxELpiJLfJ31+tO
9w6NYiRP9wz48yheog9S33v8lPnNgphs77STEmPww0yRm39kGp5k3+lObmNC
vX8V7fzILBjLjXjdj2ZATWZiWyT3AuzfbZG9VbwPmuK5eH+LUJCck98mmbHn
WPjfuQxlYSqSUjzvZmDJwEheLx60/ty4MQUneX3TSdrrsf+oOMnrH55dNfe5
go2RvL7dYM3mlUpsjOT1F/dv2Ep3o+Akr992f/hvSB4VZ5gYRgvq8iLhU/Jb
1i/MYqF67GlrTT5klht0v93sN9bT3pO3W48fOfPWqV4uGoacPYYnR/QEkP6V
bVR7l1ng0sADhvcJohv+ter13hRUbkbR9rETQuqCp+4/CaWgnWOXxDRshZGL
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
PHCd
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1:eJwVzDssg2EYBeCvN1RiYqAbI1pBMJhNxKWjy9IapV0II4YKM4sOjFRtJCZJ
NxJFDLZaLSx1mT2Gk/887/nz9eaK2UI0hBCRNVmB3w7FtzURQjMWQr+c8aIM
S9q9Ox7CvPsjb0tE2ty/3AbknJdk2m3cvwW3Dx6RjFuP24LbE+/zOld5h/M8
yyWO/7/Fh/ygR+1J/tYH5Uo/sVXcN/Wc3tkSwrGtwXe8bJvRJ/SkrWir8w2P
8ae9zCXu41t7kxs8xaP2IU5xlLP2Glc5w8/2A97gFF/a3/mFd22r+py+5/6q
1/SEXtGP9Loe8187/+hpudZPbRfuW3pe7/J22fbG9zzJfxOWNXw=
                "]], 
               PolygonBox[CompressedData["
1:eJwV0DtP02EYhvEXCyaCbVWQxYgxfABCi4nlYL+BxibAigV0g8hAgl+gQGVg
cqGDu3LQxEQXDaODBtrSjXpARTCBwCSFhF+HK+993c+T93+4nZ3MTFwIITRg
EcfREI4wotxW/m4MYSMSwiXkdClcQawphP+6bqzwR6ja/2N/U9eMWV0vriJu
/0SXwCrP4pv9XftFXQvmdH1I2L2pH9QV+bX6M3U1nsQan+Fjdpb4KL/PU/wp
/yK/lw/0S3JO/qj/7nl/5ZJ8Ga/MXvB5e4/lh3Lsovcwq/B1fpf3myd5B4/w
IfN1/pp38ZJ5nk/zG3zZfJcXeZq31v8BP9XXnD3Od86X5m/MnsnjckFflT/L
Y/oHcq88pf8qf5AP9QV5Vu509yezY77Nf/i+PWdZF0Xe7hOzTP0b+QDv4bf4
MC/ztvr/1Z3xO3jLx/HTXfv2tnQxPNfdw3XsmP0zq+jjWNCl0Y5fZucZPE6h

                "]], 
               PolygonBox[CompressedData["
1:eJwV00VQVlEchvGrAvaMG0WREBULF+6cscAYWxe2C3ujImCNBebSwBhbZ5RS
V7YzBpiAG2PsToyxCwzE+N3Fn/M873vgcO93vsTJmcMyagZBUMP08KOyYRBU
mDTh8EhZRBDMqyXj7/Xf+GPexGyU9TVxppm9Ebpu8pN8hvlgf4XsiSzabJL1
M13sTZKPkz3g8SZGFinrLjuO8/Ep+WI8FTeOCoLdumf8Ek/XjcApeL78Gi7C
lfJdeCU+L/8YPhN+ipua/bptfLN90/FI3MjfXqO7x0t4f11X3AZH6MbrSvgB
3ok/1OfwhTyWH9K/4Td5Kk/QN+dRvDp8h/oT1gLeXl+kX8Kn8SY8V/+cX+bh
hzESp+IF8u98N1/FL/BPnuc7foabmS36AaabPW3lE2SPeAsTK6stSwk/E1yI
OzivWLeUT+d5ukw+ivfkC/kPnstX8xL+2Zk/8HMcYw7otvOt9qXhUThHfh+X
4oHy7rgdjnTeRF0pPxjeHd1avAjH6Q7r3vJbvCdPDO8Tr8P/hO9Bf8q6hyfr
T+uX8TQezfP15fxKePf4TP1o3ovX54v013kx/6nLw2twqfyL5/qJy3Fzsy28
t/rRsrV8EO/B2/NJ/Alfx7P4Ef4O38YtwzuM6+K/4XvUFVn38jO65XgGLpDP
4mN4b57Ff/Gv/o9f/AWPNdtl6faMka3jg3kK78An8zJ8KLzT8vU4G8d71qO6
9/wOb6VLwPXwv/B96Iqt+3hHe8/qV/B03pQX6l/wq+F3kM/Wj+V9eAOerb/B
T/POvEqfz3N4Ei/TV/Kn/JvnqbK+lMWZg/IdfIffycBj8Xr5EJ7Kk/kUfhEf
Du+2fANejI/JP+C7uJdzWod3m9fnvXXn+BxT4czfsleyeLNTNtQkmUT7G+j6
yM/zuabS/mrZa1mC+Q/uRKum
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{476, 3575, 3570, 686, 816, 1016, 1293, 527, 568, 
                646, 776, 976, 1253, 477, 526, 567, 645, 775, 975, 1252}}], 
               PolygonBox[CompressedData["
1:eJwV0DlPVGEYhuGPtSAhsgybUICY8AsYQDARBGoECxEqC5ihkAIIJPoHDKvS
UEFir1CwxopMSUMFM4CRikWjwAwNjXpRPPme+37fc/KdU/dmtPdtdgghSxYl
UxjCreyQrTkh5OSGUJkXQg0+kkHuMdfCdeFFKeO+S5r/5UUj3LY84bK5CrvV
OCUDXD3XzHXiTxLhTuSG/+n5DDeBn+Jee3G8gofxe7yFW3AWLscP8RqewrM4
ib/qCf01/0hv0p/zCT2pz/AP8kN4ieP4o1kDXsJfcKn5nfPYec1dule3+Q/9
lt+9/w/4A17Gac9H8Te8j8fNC3AbfoFj5nv6qb5sNqS/0zf5z/qW3swHvUyv
4lfxJJ7Bh7gf1+Eo7sDTuA/H8AIuwUdyxV247w03hltxj51hvCFN3D+JcJX4
QF7hWnuNXDuel2IuJX/4c+8b4tbvv5P7K6V2K/AzmZMiLim/7Z/Z/w/JfUuC

                "]], 
               PolygonBox[CompressedData["
1:eJwV1FlQlXUcBuAPUOvGUsyarhIXBAEVtYu8aCaV1X1rQUFxzLIFVNJsUVRw
ubNARJvKJTbhqkzbk5kSQWwmZ+qi5CZS0yyWC9FAsOd/8YP3eX//c75z4Hwn
YV3xsqLYKIpizAY/bo+Moj5TqvzJLI6LoseGRVHq8Ciazi+YepOs7zUj9Pc9
Lk7eaxY6u06305lLZpHuUV2KbhrfMq/rntTl6p7no1zI27iOk7jHDOchz90u
V9o3cKxcbhZwIe9wvolL+AC380Iey1N4Kn8XXht/wH/zazyLc/g5PsJreSvX
8sfyaXmyvtsMkwe9jk79HfmirkKul2PkZvlXuUweOSKK5vNaftdzPc2X+To3
2j/OW3h/eB77NG7iZl5gH8OPcDKn2c/jDu7lb+0TuJyP8k37L+RL8qt2M+Vs
+Vl9Na/hN7iGE7nLxPG98M+W95hcZ9bo3nGmzczXjdEl6VL5Gy7jI3yDZ7n+
WW7nV+we5BmcxSvtD+sKuIQ/4Un8r4nlAddtk9+3rwufG/vdnMMF/Db/LF+T
T+k3y/vkVn2jfE7O1UeuGc+TOcVuLl/hHv7afhzv4Wr+y34mn+GLvNH+AU7n
TF5hP5svcAdX2cdzPm/hk/YfyZ/JE+3+Cf8jud97aZXfs6sNn1PndnE25/Nb
3MCbeC9f4BwezYk8hb/i3XyYr/MM1/2c2/hlu+lyhrzc7hCv5s18gifwrfC3
4P+8lkFdKWc5s1q3PdynXMzl3MLZPIoncTL/LnfLX+qfcO1dXMXX7NL5NLfy
S+E+52k8j5fZP8UtfIUrw/viVbyJj4d7mD/kT3m8fX+49/y+r7vr9f7hd1/4
u+gSnT3INeGz6bHn5F/Cd4hdprxKflNfx0Vcxuf5lPy9nKV/WJ4oJ4V7gkv5
EF/lDTyV5/JSruA8LuZjnMA3zVC4v722Ad0OzuA8Z7bxjyZT95BuQvhu4D/N
i7o03RzdkvDdYcbpbpjB8B4931bdDyYjfD/oxjubyL/JXfJZ/U65Uu7Ur+dU
foYXh8+f+R+/BLes
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1WW0EFUUBlBaKUmlS+luEKRFuqVD0lbsBFTswMTExkBBBAFpkLBFEcUA
u7u797f8sd/5znn3zZq5d2a9OlNnDj+xYIECBfb6kXqUH8VYI89iMG0436wW
L8s3Zh2FONpsH9bKsxlCWy4wq80u+aasozDHmO3LOnkOQ2nHXLM6vCLfnHUU
4Viz4qyXz2MY7bnQ7EBelW/JOopynFkJNuSeGc58fRs+lh+iAxfpD2K3fGv+
jtv1nflafoxiHK8vycY8E/fKPfhRHpG9kNvyifwwHblYX5fX5NtYJPfh91yP
O+RD+EbeqE5ghbxMHZJz4EmmZ2/NT1BL8Qyb9KvUw7NXzNUvVHuyg5/0T6hH
8EbWZf/VdjzPp/r16rjcH4v1j6gD2ck/+m3qVA6WL1Hr8bq8Rh3Nguyj2pc/
cn/cKXfhW3kly+WhFMp56/OSlWZzzo775F78LI/Mmcvt+UxeQicu1dfPc+Rs
cg2KM9NsP57IOTKKzlxm1oA3s8dZRwlOMivDlpwNozmEy80asif3n3WU5GSz
smzN8zOGLlxh1oi98l1ZRylOMSvHttwzY+lKaU41L8/23B/j6MZ+nGZeIWed
e2E83SlDWcpRntOtqchTuQcm0IMrzRrzlnx37oMKnGG2P09nDRPpyVVmTXhb
vif3RkXONDsg71fWMCnflL4Dn+f9oBfz9E15J99B3ne5H3/mWbIncle+kzep
E1mVb0kdRuE8AzNyf+ZnqZV4NvSPqyPzTTNPf796KC/yi36LOjnnm/c7363a
kRf4Qr9BHZ93laX6peogXuZf/XZ1Wq4pX6024115rTqGhfJitT9/Zd+zr3I3
vs/9sUIeTpHsmf5stTLP5ZpMzjefb4cv5UfpzTX65ryXdz9nRCXOMauSbzNr
mMJhXGvWgvezDzkjKnOuWdU8c9YwlT5UoSrVqE4NalKL2tThQA6iLvWY5TrV
2CFfxzT6Jpu15AP5gZwT9ZltVj3nIV/PdPolm7XiQ/nB7AkNmGNWg5fkG3It
uTe/yjNYIHfiK3lZ9koeTP4R9c/fqK35SF6njmWRvEQdwN/Zv7zLcnd+kDer
k1gtr1RHsIui+R44suD//+sa+v15as2cHTv1q9VR7GZ+nkU9LPfPb/qt6hT2
5Dr65QzImdCIgTSmCU1pRnNa0JJWDKI1/wFN0+EG
               "]]}, Annotation[#, "Charting`Private`Tag$1541667#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl12W4ldUaheFFbLq7u7tRAQOVRqVBQQlREEmDUFRUQumWFulS0kLsRKUE
LErpEqRB4tzvdX6M6xvPGHOvr+aac+2iXfu27JMskUj0T5lI7GEOOW5NkUik
puHJE4nalIn26g7rtsnT0AjZbZSZMiYlEldkVehdfC5jItHZcZ+/OeJvtsvT
0kjZ7ZQlPtPfXJVVpfdwF9pv/FHjd8jS0SjZHZQ1zmP8NVk1Wo270gHjjxn/
iyw9vSGrQ9WMLShvI/sFZ4tzyv7D1WkNHowfN2Y27oYfwLfj/ngL/xF/Rj6b
H8l/Jv/L+Y7zO/kMtFI3Hb9p3BN8Cz5TKteh+xV/iW/DdfXVcSGcArfVf4lX
4cp4p340fh7nx+/qj+Ff8F04ezwDfF3+n2MNx/cd5+vX6obw3fk58v38Zv5x
+YP8HfwA+Vb+Y/6sfA4/ii/usz/Xncf78N/u74TjLllGGm3sk7qWcY+4Hq6B
C+N2eBfOEc9XdgPXpHW4Ox30WSeN2y3LRGNkd1JOOqQ7pftVnpnGyu6iXHRY
d978OeJ42pjf9FlonO5uyk3Zne+mrBatj2dPR43/x/jfZVlpvOweqmlsEXl7
2W6cJ65ZdgvXpg1xj/SQrI5xz8j+xcd83hn8B85GE2Q9jGklG43r41q4KO4Q
7xuPwQPxezhv3CtOxBzAH/Dv8O/LX+Cf4OfKD/A/8j3kLfi6fDrv5VndNrwR
18Ln9HPxG7gE/kJ/Ae/HDfBx13uW/1N+VZ7dcZXjW7LS+on+vidujTPjMfrf
8Ff43vie88X4h+Vf8e/Gs5eP5Qfxq+X54h3hZPj2uCf8In4Sz8M9cUtcDz8X
8wqfcF3/xtqCc9Ak2X2xdhhXXP6I7HecP96tLLnsDtmH+Ck66e/PyfbKctJk
2f2xjhhbQt5R9gcuEO9WlkJWR/YRvmAe9XJsJb9T/nw8M3wq5hjeh3PRFFkD
Kkh5jU2pqyv/GD9Np42/INsvy01TZQ1jbTK2pLyT7E9ciPLJkmT14h74BfxG
+VC+B5/Ts3871hL8E+6ta83fxQ+Ub+c/4S/K5/Fv8l/K/3ENF/kDfJ5YZ3Uz
8LR4TnwbPovPHhvPE3+NG8V6yJfiU+oe1X2N38NV8B79ODwYF8Br9MfxTnw3
LhzvBafC1+MZxnN1XIjL6j/Rv4R74lx4vv5v/DPuo2vD380Pkl/Cb+PR+Ct8
xv1c4v+K7wpN1zemusaUlj8m24uLxLuVpY61MN4Jv4gv53ybdC/jp/A7ur64
Lb4HD8aX8Xw8Bn+Nzzrn5VjnYi7HvqObid8yrhfflh8X84n/hm8ir8eX4ZOc
r7PuG7w65o5uPD+EL6hbqzuBd+F7cNGYTzgNvhHPQb/RcTEur/9U/wruhXPj
BfqDeEvMPdxP3w7Xx+nxEP0OvAlf0b3Dj+W/ifXKfV3hD/L5aUbMW3072Xjc
NNZeXBZ3iT0CT8Av4HX4JL+bLxZzmE/L34znqPvEcUnsf7ph/NP8Qnl/3B7f
i1+INSf2fddxFR/CBWimrLcx7WUTcLNY53E53BV/y6+JOS2fyL/IF3Kv63Wn
8K+xR+kK8+n4W/E8dJscl+IKsX/pX8W9cR68SH8Ib43vIB6g74Dvwxnwi/Gb
AH+Ka+Nr+gV4HC6Jv9VfxAfwefdzzfGwrGD87pDPwrP8TR++Az9R3jz2Jlwe
d8Pf8Wtjbssn8UP5DfLT/G98fecpEXMbp4/1V/cFfibWLOf8T3ZEVohmx28T
KklFjc+guy9+P+Bn6aLx12VHZYXj2q15c2Lvj/3P+ArxWyC+l3gyfin2oFhP
+N/5UvJifEb+/lj78XN0yefekB2TFaG5sUdSfWMryrvHfMWlqbgsU+xDsb7g
5+lh2f2yofGbBV/2eTfxcVyU5sn6GvOwbBJuge/FlfAT8Q7xFPwy/gCXwSVw
ZtwQf8ovi/kvf43vwy+WD8SP4Ab4JbyT/yzWL/lCfnzcs+f/XaxJ+K/4Prm2
W44nZNdiH3Rc4zhbVibWa3/bDz+Cs+LJsd7jb2MfxC1jT8OVcSr8pP57vA5X
xYf1U/EruDD+MNY//Eeso/Fu+SyxXsd3Ar+O++IleBDuiBvil/ENfDV+sMtO
4uI0X9YfdzRmCm4VeySugnvgH/j1fDXnPqKbhofhj3TlcCmcFTeOuYuH4354
KR6MO+FG+BV8Ey/CE/D38bxcSzJ8ii9Ba/k5sR4bN4DvxGdz3qm6Pfi72N9x
69hzcVWcGvfUb8YbcHV8VD8dv4qL4I9j/cZ/xvcFl4+5h7PhBG6i/wwvj+vS
jUj6//80y+SH+W38EPmjfGN+mPwWXown4h9inrqX5Pg0X5IWxHcSPxr7LG4T
+z6uhtM451OyH/H7uAY+pn8Lv4Y36irgMjg7bhrvIX770WOyJrJXZQm67rwp
ZP/wpWhhfLfxY8ZMx21xI1wd98I/8R/Ed0k+g3+dLxr7cewFeE+sEbiivizO
gZPhZvrP8QpcEW/Wj8QDcF68XH8Eb8d3xlqp74yb4oz4Nf0u/Hl8Hr+En8Rv
jr2W/zv2OveSkj8jK03r+LnyRbGu8J1jv5W3i/0e18BPx96JZ+LheBOuhMvh
nLh5PGc8Cj+DV+ChuAtuhl/HyWkpnox/jHnqOpLw2Vg7aHGsS7iLfgZuj5vg
mrh37IG4MpWX5ZI9EM85ft9QV1lz2XBZipg3PjuV7F++bDyH2GOoClWQ5zb2
QfnP8fsk1lJrcsIxte5cfOfiWmONpKpUUZ7H3zwk3xK/CygZpZGfl5WnZbGu
UVNZLWP7xB6Jq1ElWV5ZC9lW/AZ+Fq/Ew3A3/AAegVPGZ+Ep+Kd4bvq0+ELM
V1rPz9Mtlw/ku/LZvfuZur34e9xR14yvzafV9Y17xR/imvi0fhYeEb8p4reO
/hzeG3sMrh7PGufDyWP9jP0Pr8SV8Db9m/g5nA+v0h/FO+I7o3ucf5AfKd/N
f8En8cv5qfzP8Z6MS4cv8hVpA/92zB35IL4bn8Nnz9Ltwz/gOriTvjm+DfeL
fRLXiHcryy9rJdseew6lpPTySzFfaWWsL1STkihVvPN4j/GM43piPGUI+bvL
/qYyrYo1gWrFfJAXcJ7W8h2xF1B32UOyUbJUtAJPw1v4K/zB2BNde0Zj/wcq
tECC
               "]]}, Annotation[#, "Charting`Private`Tag$1541667#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV02W4FWUUBtAD0i3dpXSniKCCQYM0otKhdIt0I9ISSkhIIw1S0l3S3Sgl
0int+n6s593vnjnnzpw7k6lR22ptokQikZxRI5GyMSKRmzEjke6k55g+mW6U
ozwVqMgtx3uQgeP6L3SnErftepKRE/oUepAglvPsPuSJvoHK3NF7kYmT+lR6
ktD5U+xK8Z++kSrc1XuTmVP6NHrxGffs+vAWp/Xp9KYq9+368jZn9F/pQzUe
2PUjC2f1GfQlkWuYaleap/omqvNQ709Wzukz6cebzp9m9xHP9M3U4JE+gGyc
12fRn8TOn273Mc/1LdTksT6Q7FzQZzOAWjyxG0QOLupzGEht6vCf/WByckmf
yyCS+Fu/2n3CC30rn/NU/55c/KXPYzBJnT/D7lNe6tuoyzN9CLn5W59PFueu
0GuTIHyfXTK7meYyvNLf0/eYW7Ndz6OvM9cnefjN9MOyM184/lz+QB7KOXZS
XrYvYt5mbiSbyxryb9lS/uZ4Vvm73kDWkVXkedlCJgzPnzwgm8oO8nN5XbaR
Q3w+uZyl15NlZUV5Rr52rIR5bzg33Kv5qtxhn9e8PvxNqpovyhTh/2o+Irvw
pfNeyKHk5Ype1PHt5q9ZoGfTV4ZrIlG4f7sUdrPDb0CEnXb57DaYG5KSr+xe
ymHk46q+kKGkdO4cu/JEYZddPV6Zh5Ofa/oihlGf13YjKMB1fTHDaUBDGtGY
iO8e6ZyC/KMvYQSp7OfaVSAqu+2aEMV+lF6IG/pSRpLafl74rXmDPXZNiWo/
Wi/Mv/oyRpHGfr5dJaKx164Zb9j/qBfhpr6c7Har9Lq8yWi7tOFZMVcmOiX1
fbIt+xzPr28MzxipwjujH5Xf0tzxaPoYc9Hwu5pPyVv275h3mL+hpvmyXGGf
w7w6PNd8Zr4gE1PKfFA2kx3DNcp/wnWE+/C5dHJBeEdklXC/8mz4fhlDvi//
lE1kO1lHXgvvWNj7fAG5KTwnsrGsJi/J1OG9Nh+TXcPz59zo+ljzO9zWi+k7
w3vD73pOfU14jknCGLv0dgvDPRGT/XYF7TaHayJNuFa7GHbjzMW4o69kLBns
F4V3hlgcsGtBTPvx+rvc1Vcxjpa0IpbjPzlWnHv6asaT0X5xuE9ic9CuNbHt
f9bf476+hp/IZL/ErjpxOGTXhjj2E/QSPNDf1XeZW7JWz6WvDe8dSSmtH5Kd
+NnxzPpSc43wjJnPybh8YN4v23PYeYX0Leam4RrMf8m0lDEfD8+a/C48N/KG
bCfb+lxcOTH8fVkyvGfydPg/yoeOF5e79caylawlr8hW8g/Hc4fU65GMCXZv
2S0Lzy3xOGLXjnj2k8KzxiN9HRNpTwc60onOdOFbuhLf5yaHe+axvp5JvG2/
PFwT8TlqV9hua3gPSEdZ/YTsFp4387/hNwu/hXP/BxUyHvw=
               "]]}, Annotation[#, "Charting`Private`Tag$1541667#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1nfczXUYBuBDKTOkjFBIRioiFA17J5uGjLL3Jkr2LLKy994jIyN771Eh
JSGjpS1a1/PH9Xnu5/6d8zrnPd/feeVs2qFW+ySJRKJ30kSic/JEolTKRGJ1
ikSiHL/btzOXLpR2bY2+PH/YdzCPrnSjOz3oSS/eojd9eJt36Mu7lPGzPvJz
KvCnfSfzaag/qmvCvXyl60dZ/Vp7RW7ad8W/q/vW3pP8LNC9rjsmNyUDE+0p
mSqfd32A/Ls8hI3yYzwtzzMzsUju73Hl5HVyJZbLOfhLP8pMwueMdW2bWZhL
7I7fg3lFf8LsZa4z83GBR+0zzXv5grn2/WZJrrLQ8xuZx/VHzDfM1WZu7pMn
mamYJu82i/O15ww0/9ANZZP8OM/I883MLJYHeFx5eb1cmVv20fakjLPvic8v
Xof8FgVYpGusOyG/yf1c0A3S/SkPowQDdRV0G+Qq3LbvZTFN9Cd1zcjIN/F8
Kuo/tlflb/s+ljCYIVRyfaNr1fjHvp+lNNWf0jUnExd1Q6ms32R/kX/tB1jG
G/pPdS3IzCXdMKroN9ur85/9YJxd3TV7bx5jlj0D8+IMuP6m/JnckixMtqdm
unw5Xrt8Ux5OyTiP9iwsic71qvIW+SVWyDlJyB+YdzBe3m4W4VDcR+Z13Umz
j7nezB+frzw7zgTnmG8/YD4br58Vntsszqj+qNnKXGM+wnkesE8x03CGGfH5
x30QZzfuqfgM4rzrPzNHmJvNJ+LfkBfGz2CpPMJjq8mfyDVIwhj7nUyQD8d3
gfyd/DZPsFLXXHdabk1WruhG8qJ+q70mSeM+0K3iPaq7tk1XizvivelW0yLe
h70N2biqe5+X9NvttbmTY/GdpPtefoeC8XvRtdSdlduSnWtxpnS35JE8xyhd
Dd0OuQ7JOB7fb7of5L4U4iNdq7i/5XY8yFT7PcyUr8f5k2/L77FFLsjzcb+Z
WVkmj/a4mvJOuW78zuRc3CWPNZPF748P7TvMp7gc92p835o/6k+Z75ob4ruH
b3jSPse8ny9ZYD9oPhdnjbWe3zrOVfy+zPbxnsw8PCRPM9MyS94b3zPx2XrO
cPNv3ft8IhfiBXmxmY3lcc49rpa8S67H3YyL98TEOOfxd0L+Se5HYdbp2sRr
lTuQg+91Y6it322vT/J4v7r1jKWOa3t0DUjBp7oNtNV/Ze9ITn7QjaOufq/9
ZVLGuY+/V7obcn+K8LGuXdxDcidyMd2ejtnyj66PkP+J80Ipltizxz0pj3e9
nrxPfoVV8sOkimvm3UySd5pF4/6Nv5fmz/H6zQHxGswCXIzP3D7XzBjviYX2
Q3GW4jNho+e3N7+Os2p2NteaeaOLf9s+w0wf55859n1mifgM4n40/42zyNY4
O5SWl5oPslKe4HH15f3yq6SOzp6cyfLp+Hsv/yIPpCibdB10F+Qu5OZG3OO6
/+KcUIYPdQ10B+TXSMOZ+P+A7ld5EMXYrOsY51vuyiP8rJvIy/qD9obcw1nd
FjrF79DejTz8opvEK/pD9tdJG6/BnoIp8i6zWHw/xv3tsf3N3/SDKR7nXtdZ
d0nuTl5+1U3mVf1heyPScU63lSlMZRrTmcFMZjGb1zzviMc3Jj1f6rbRJe53
ew/y8Vt85+kSjLGXZVncs6ySD8f9GN998Tl77P+w+GwH
               "]]}, Annotation[#, "Charting`Private`Tag$1541667#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
KOc8XxcbUd/Y/xtPqP4=
               "]]}, 
             Annotation[#, "Charting`Private`Tag$1541667#5"]& ]}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"Feedforward solution\"", TraditionalForm], 
         PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1a\"", "\"u1a\"", "\"x1a\"", "\"\[Theta]dot1a\"", 
           "\"xdot1a\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
/hS1yfYaDPhZdIX50cFf2rJqgwYOxmFmFxwmJ6HRZ0Qu5G0N9HS82pq9eRry
uDY8W3zSCIpvpGq+sOoxVe/lmqRt7bBO+8m+lswZiB159CjKuhvWzkhv37aN
AWE7DQ7Pn+4HDpsrNjtY59fZcZ+ulxH/IFTEe5+4KQPw9/sHDW3HQNnEXfkV
PwOEv12PjLOYgAuzbvPOj2ZgnEu05LfbJNTXL6tM+DwN1sk1O77dnoaTn2mc
2h+mWE9eZ5/uZQboH1EKuGg8CXtJit+iHs7BpsZqORPvCchWKnAyu7sAmm+5
fURcxmB6zjh92XEy2pagvPrf4zaIsp4bu25FQfJxMy/n39SBI9/sj9mzHMj4
uA3TK7kQJvleNtU5cqJCCZ77e9Vj4FCylbaeOxdyXXFnt2bhG6wo0Et3wJWK
DJ/9dJMtZT1/726Kky83ui6xZz7EKhoLUvxpdeoxD5IM3PucUfUE0nQln4s8
4EXo0amgezezINwl1CU1kA/9laQ2fdpdAoldDsz7/vwouSAn8p12FVyO78t8
/45VPz3wqO7dUQMkiYASszgBJH6/dbL/2g/I/OZze2+UILI1u4Sb6X4HVRe8
WSRVCL3LePZZuPAduNMLnNacEkY9ddrqTX8w7Kj5+P6dt8XRSpM87X/7yLh0
zsqzXNPiSPhnqaH5LzKefWz8XJ6jBHolY1IqZkDBM1wu5tnNSiBh73nGl08U
3ML2vUDNbUl0IdpyfcUEBecBMR1FrBS+XxJxfBcyBc/1b1GGXtRD2YYAK5Ho
aXhwdQ4/7dQMiavL5B0vz8AmzgpFukEnBAktu1wxPwNmOsEldy17gfTL4Z+j
MWt+H1/3T/LeINTcNPKsZq332C5v+eyvrHpVCVuKUWeADvf19Nrz4+Ck2J+4
u2YGVnOR3hrb02H54XKVgA0zcCbnR9911ylInSQ9+6I8DbMyOr/bOyhIdSQS
Su0rgbZnqnRugANt1ldX09vwFeyVmrVPzHKiRLW5tDusdTDtj+0pXOBCGoaj
19wrYrC0luenpinc6M/m9KsOWomYjB9PrAsvD2ou+ckjnh6MMVLUshV4+dAt
y6XJVZwFIPamZnuxAD86+VGYwb2vAi7cPl0ju5yG7t+kfe8WqAHO7SvpxRsE
UEQfd5b/tmooP/77paucINI2dz6m5VkKRVcenpnYLITczv3tpV3OgiithLe7
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
56RU19YvtLVjhJ97XYKXtmV/wQg/l/VXjxa/q5nt5xQr7tiv4xxi+zmnZRFP
ZLkn2H7OqEJl814Gne3ninJKA/KejLP9HM/pkvNdVZ1sP9eY/LjtFdcvjPBz
h7T49qZemcYIP1fofze/YYiEE34OtU4r+C+QcMLPLbc7Va5zg4kRfm7FPsGx
JhMm28+tPej/wmOEhBN+rjX+mIOcCxkn/FzVS6vI99YzGOHnroueXdRP+IoR
fu40PSbsfd8E288N7uJVvWqxyPZzRm7r7ojEkRDh54zumrf7GpEQ4eeeRFZr
h71jsv3cmUweZPKdyfZz/nIeWVvNSIjwc8eNDyqPnyEhws8FJqybMPZfBMLP
KVSevG0zQgfCz5EmX/aMxPux/RxsdRmelJtl+7kYzd6QzkwqTvi5Q6lMnPc8
J074OdL//SP8HDEm/BwxJvwcMSb8HDEm/BwxJvwcMSb8HDEm/BwxJvwcMSb8
nOhduUlV50G2n1OblM1rbchm+7mJ9HuZSoatGOHnVr5fuaRo9w8j/FyPPoxO
357ACD+ne+1Cm1IyHSP8nK0ZvmPy5jhG+LnCGNsXx2b6MMLPPW2ca9UwrMMI
L6dVq+ebPdLN9nJ/rsi3B1DH2F6uLWj5WN79/7ycYxzKUDOhs73cuO3Ei16f
f8Bp8e5SVQgTjjjQ0/lnSuG5TM7yrGoS6qTb7ngt+Q8jPB2fzdsv9tQljPB0
1d+VlWpNyDjh6agl5mWXlUk44emuvWD+U17HxAhPdxG3v+I9wmR7OuOrH3bp
JpFxwtN109q0JQeZbE+3sY76/OHoAEZ4ugUVMY6NX7vZns43qZ4znHeW7ely
Bp0atkmQEOHpxFbrjj+PJiHC071oihG+3MdkezrJsPfbY58w2Z7uT3hQsz/r
84Sns/z1K0zxHgmNdnksFYmJoJqbYimmiUy4/OT196UXImhnwZFYu5JZkDZY
1rogKYqcB/P7Bzf2gvDqSUP8rSg6xrXu5lhFP/a4kEMzf6UYMtgwZvPFkoIH
hz+9UvFWDEWJTm3PRDx4Y4DneOja/+b7ieA/Fdsi/xsTHo8YEx7PwZrH8JPt
GNvjnVq4WDNc8pPt8TRQg/9+1d8Y4fESL29s8QgawAiPd9Yx7CclchwjPJ6L
Ls1aJ4WOER7PgZo8/+jcBEZ4PH8SecXJTUMY4fEGvgxPp0b9xQh/Z6jTscUx
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
tq9NPBaRPXOOhKIOJuB1jcLotsM+e2MTErrsNHuMaSGCFCKcFrYoLsL6td5T
Z1pY/TnX7cAfMxNg7vBOddlFVv9zkZ7lk5aNpeRuebSlWxRtWsp/W/J5DsO8
fqi/OieGji6+WRktzY0bTU8GmPaLIVKqjJjeLQ68ps981Mjmv/VP+FxiTPhc
vl0m9qYKX9g+N9N2jVXjmnaM8LkfMuV9h5cPY4TPLYCX6tToCYzwuQW+UY1r
4+gY4XNdNL5eq1UZxwhve3Z9ovhQTg+83nPj/7ttPb6nN70Mx0B4cf2pzsez
oFqurl8XTge79mwF0aB5WLe1P5uxiQ5p+3y3a4YvQqCThfJa9yEYO6529OA3
1jrWbN3J7MkH45O03GNtJJSyeEa/ff8IFrbvtR2lh4zCnmirhP1cwgjfq3Xq
/p4oYzJO+N4knfgT8ctJOOF73YJdpCfXMjHC9za5aLtjvCSc8L32e2KUOTPJ
OOF7H5RbejWRmJg0987JWBov8tlzszddto/tfZsLfE2yRfrY3vdBm+aYeNIs
2/t+53L5iW8nIcL7GvF8erf0jtXP/J/3pdeusktsYrK9b8Wq8HP5QUxwpKvN
1EoJI+WSpdRgadZ5MimquTxUGJE3KjiE3COh31+U85SlWPVBlL+eozsTUtN9
pf6+Y+1XD5vwbIVZCAh10Lu/ThRJUyoHFF90QXtJ8JG0KFGU8iTf+vzsEPZR
UPfkk/Vi6GFpyJ8NXBz4L2H0GkWLIeX70Wc0V/Pg98ycMtw3/jefCE9MjAlP
rD58031FyzhGeOKtaV814jLoGOGJQ7cH+X3ePIF5DP1wf8YxA7aGHt6peiOQ
pl5WTKHMwt9tfNp3hejQZmPAtVt0Hiooe78LpdCh+5TtTK34Ioy8v5QvajEK
Wrd+JJ7ZwYTqVg+nZ89+gz8s7dV9T0abum3IC5fnsbQOekdgPAXZaM/8bTxA
xst6Mk7zfeJAr+87alV4knDCL0/H7Pz9SpmJEX6Zs+3yIeF4JtsvS2iR4g1d
yTjhl2eVOePa00g430Pfr0JVvGjV0nu6q1AjEJ45SFC8+xl9mu2ZhR6dSTQ9
yWR7Zn7K11vcaSREeOZlLRUDzgIkZIT12r4YE0SFD3kapf2YoJd6SfnInBDa
r7Frl8c8E2zPLHjy3RFG/+bOd4yw+meNu/bYgzlhdC+paNhHkIQClxVkXbkn
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
cNOcUQ586Oo2Th6r/+oLIl9BjIl8RWOM23JZt3R2vqLd6/penwNtGJGvSIu+
Jy+f/w8j8hUPenLe9AdMYES+Im7ZpKt/Eh0j8hXyyw7zlR8bx4i8BHpZbb79
RA+8OLJ286nrM+CyuyjgqMIYFBbOXKQ6z8L0yRtTh57S4fQ4jXrSYx7IKtKB
27RYYyr137aARTj+aUPKSuo/mPtzudUvngllb0fUipyKYELzwiWvBhLSKxLr
Td82jElxPKL6NZORea3uM/2rSxiRz6h+MloiwdpPiXyGsW4ch/cGEk7kM+r3
1LoZSTMxIp/hWZT95u8ck53POFX03DOKVd8Q+YzO1sBXnLeZWNBGcGrnZPUf
h1V+uPj1s/Man9oamXv7eth5jUM5h2P2ms+y8xpcCn6ZbbKs/fb/8hpnGe+f
jL8nISKvEWlepufcwWTnNZS0Th4QYZ3natdtE1okhdGEq3WvkBSr3lw31rP9
pTDa9Vcd92L1H+f1TVvnJURQ7EO7yYiXTAh4L3L9XwhrfkkftlnnOgsNE3vF
YLUoak/ofU7u6AZnx++HsyNEUdo/ytja84PYq0uy+jFrxNDU5938CqkUXLXR
lkJ9L4a8uGRjvinz4Jtvzh99suG/+UTkQYgxkQdxoan63sDHMSIPcjS5d+JP
Gh0j8iDF4XnPeXQnsLtk5y+8k9MgI3nb58nsMNhSwurlxhmgZlubLTY7AVXO
79rvUuah2mzTJ948Oviu6v5cxLUIH967B+ZUjILe3NKuCBnWuVRl15yv2Ah8
zMGW6tdkxJ2zg6OVPodV7w/viv1AQasKPuaMaZNxfP2Mvms0a39ZId+/4ikJ
J/InHe1lztI7mRiRP7knsnEoNZzJzp88+IgcOa+RcSJ/ElxI+39MnXk8lN3/
/2fsW2NQydIiS7aIVCKdU0kUEqVSRNkqldIqS4lSoVCWFpK1RVEqIddEkWhB
oSI7Yw2DWRjzu76Px33O5/dn933HLNd1znXu9+v5fCV0fKUwnIO1l6R8lIQW
3lf75sz+CRCPcitrZabBrUnMo1y83HFp1VIB5lGGvmzdRSef3xCPUk/3baPO
psC1s68cUmbSYIFHy/MCcr/98fRTsveYLNziwfjtMCEAV6790tc5Q4fdgXcX
jZHPv1VzE1ptJ+nQ4mb6j5l5FHiIYiMTGigHPzR1Lat+PAXmr5vXflogD9cG
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
xTImqoaNgOaHvPhsB3+sCdD80HxFoWzuxiFifijfHdjCjWGBf/XnnpOnmFD2
TCxRdT0LRMcVRkS2tcP4pa0wnjxI+OTde6UOBob1Ef44s0lE7jGthfDH6ReD
ihkTdYQ/bl1drB+XSif88Qi3k9PLHOiEP365JGbN49Y6wh8vC9RLK7ZsIfzx
rEnPYe25/5tv1nw8q9WwZQTQfPNKbK72swMcQPNNymMRhWlrDuGTrwxI2ud7
lUX45FMVyudXNP8ifPDhNyLV+U5sKppvRp9QEe4X4lPRfHOrB2XT4hV8Kppv
/vfk6rS2PIeK5ptidQyVqYIBKppvPja4fCewc5Dwu6vvBawb/s0BNN981RCr
33NsDNB8U9SBH1FRKCD8bzF9scMNlmOE/30pm+v/dy2H8L8f+e3Qf7Ktl/C/
F1/0TRw0bYJToS30TUkyGJ1+brFVXANcrsjsq1IlY/RwJecITybMbXx3LzWD
jMXpC9e7CRjQKFhmf2QTBTtyGOsxbGFA74a+3KxsCqaiFDubLMUEN63u28Ya
sliJ7rjy7/tMeHXrrPucbFmsblfn1zCVBsI3H+1Z8yOlvBHQPLVE3or0TXaQ
mKc+r/tZv/8gC1RHJgUZp+shslPPYa4nC1bv3Wxyak8r3JIUVlp3fYjw0xUV
g7AVRf2Ej76yqFlx+4Z2wkdf/6PBlhTPIHx0veUKehsElYSP7ur2RiQvk0b4
6KuGg++k3K0lfPSOpT5KLO0mwkdn0n+0sLy7iHnvhI1q5pvCYUDz3vaW/jZ+
FxvQvDckfsTKKI5D+OnUZZN6DqdHCT896bbw+j6jPsIvt3u7M49uNkJF817x
8KixRbY8Kpr3Sh4+HlPvyKeiea/DIJsTLMGlonnvL0u+34/zQ1Q07x3a+3FJ
nP8A4Ys/b+jjezHZgOa9fR7hUZkJfEDz3muDDMm8aAHhk6+7HW84/XeM8Mlf
S7CXTzlyCZ88GjMV3KoeIHxyLvcAuHY2wcbSazcn7slgVnWh3wZnG0Dc/e0W
LQkyliYp4ZdbwASKwptLJ4LImDCL/6p4ARNME65IGS6kYBetHc7SmxjQfkmD
Mx5KwezYAXzrvwzQGYs+oysli7ndfzEtfZEJ9RGXlu0LkcVyDJqe5k8wCX+9
T7x72WBAIywtdd3LCiqA3cbBh+SXDIP5gtAm79uV4NVOUzD8zILeN171M0aN
UH5oInJz9jAMpIn75qzthAvfZR8er/hN+O3bzi48JBrUBKl/VaI+vByFosge
hbJHtZAZZlRtV8uBVZ8Vfm9vpBH++/IJV++d3ysJ/93Bcu+zrzcZgObdQm+u
t70NHAU07/ahaLhmB3IAzbtf3jH0cBTmED482/LT35XqQ4Dm3e3KZWaLEjhU
NO9uH3n2o9uST0Xzbpt8TW/1MB4VzbvpDpNxedJsYr597XNk4BoWF9B8W2lH
7w5G2xig+fZ448SKY5kCwl8fKFok/jWMT/jrhe0aY4H2o4S//uuEj0Vpzk+4
Ubxn3kaQwdwlmbUanY3gcX7/mktfZbCDFRFXx/c3wHdyRoz1MTKmrjJ1/4Ih
E0aC86Jn6fj3L19s5t7HAGM9WvW+4xQs4oPdsdAuBoyMxt6+Uk/BFJ9umnqB
n39onp4jNV8RhJsAzdOPu583UnP5TczTBQFZAQIJFkz/lb1nalYHo9y1pPJn
LNC8Ujh/9lALhEkbNjz5PkT49EcdVRfu1Rsg/PlHYkUiNjYdhD+v75a5a5Uf
k/DnFXiXdb58ryL8+b25wp1p92n/8+cDw1ZVltUQ/nyA1dz6yu2NhD9f8Dnd
f3n4D2LeX5Lz5mnM+BCgeb+69ifZ0iQ2oHm/QVEEppDKIXz6W8OztB2ybMKn
T1htU176sJ/w4beZ2N/6JMaionl/mFbvS4Ekj4rm/Xk3SizO+PGpaN5vZc0P
b3biUtG8/0oesyQuY5iK5v2adzIVG073E377eEXosut72YDm/Zdr/x5OxPiA
5v3F5g9zbrgICP89kncsIkVHQPjvwQMDFXPn8wj/Pefb7BNOxCDhv9sEdN1c
s78VYtoKvrbfkMH6IjR/3t3WCM2nskxtJ/D7a1f5JmhighKomaW4kzGaVcyB
M3JMkHOS6jaaJmN5pNA0A/x8avI9GSx/n4J5rrRLL+EzIJrpRH8zRxYLSvjr
l3eCCQNrr12y9pTF+hYkxL3sZhK+veebFzWX8HpsZv/WInZCDmz76W3V82oI
ikTW6HwxoYFU0fdguWwW5BfFm6UZN8CuVckeGZxhGK8N1T67sQN2x86G0nUG
CR9/gOU1n5fcDBSv1+X2iqNwN8/lUqdOHRybehBLf8IBSwtKX5gGnfD1aaSr
6sckKwlff3ZzlGxyfD0g3uFI486O0V8jgHiHuQ2hA5xrHEC8w8DZfPU1OhzC
37+p4rtO+eQwIN7Bxv4to24xh4p4B5GX/prd2/lUxDtM2maoK/zgURHv4OVf
02scwyb4BqbWlwsi17mA+IbsBov12lFjgPiGqJ7nifSPAsK3p07HxBwQGiN8
e93QMxydW2zCty+Kfqg5ev0XrF538a7VJhns7st537bLNcHgneDbR3NlMJ91
7PLj9g0QNZrxJVqXjD2IW2/VZ8OEiWzNIONPZGy9ssH0B7z+Ja+6GX8Qo2Dh
BdXhGF4fDy4spgSVULCTR4fVtyxnEj5/gMWFc209jRAZqX9pNOg1eNUaZyin
DYLX2JFZHUo5FNFrKlxcWHC6s+3aHFMGmEcdO25pygLugxTlH1IjIGU1Xiz7
tR4CvnG3PZThwGab/r98rBImd564breMB1YPbr5sn6aB2cXQzxobxmDbk4xO
unIdIH4j7s/wqmuyHED8hpBSRfKcBxxA/MZdBduSK9dGCF6jWe5h0MZPPCri
Ndbfrk/67zif4DM0/M0X7pziA+Izcr6LCyVmCeDGt/wDzYEk7Jxq52abvDEI
HEu6VLdYBquapyJyIqYJStKUV8iEymBxT/ew/qtqgB1JbxbMlSNjDuwbi71i
mLBgctOtmWdkTDzkD6dWCL9+9GJMT5GCVQ0MravFz+euw/NPMF9QsOtZIR6S
YkzYjBV//+1aCHSFpFcfrw3DtPTsrf3R1fCqYfln7ie8no6/ePjE8SZQM+qQ
E706DIo7GVu9yGxI1PqauaC5BhapL5+zaDEXDB3MeE0xNBD177aRXs+Hu5bM
4sC0KkC8yZvcG/tVEzmAeJMAsRoyp5gNiDcZn6y/8mANl4p4E1FRMaGvd/lU
xJss2Wadw9blEXxJzJwVJsdk8fv1H1+yNiS2bCJUANzlGRdvV+LnX8SBievy
fJjQTb+12Rw/v04I/KZ1mdBjtz05rY2M5dwO6SvEz6uw26tmdl+gYDJXn/ho
4+cZ4lN0zXsSa1Y2AeJTLm49uO/Cyv/xKVJnJqb39A1Dz7zX+za218I5qeOL
dqawQMdNyOZEZTPUd02VneYN/S8/oU63Ri5sgMhLWH7RuvSgaCeRl9Ce6MA/
O8Mk8hJslpm+/flf9f/yElxUHB670Yi8hFVLD9o2a9UQeQlKZxNu7ixsIPIS
JjdRbYR+dBL8zPwi1dctYUOA+Jkv8Zc213mzAfEzUcNnclemc4j8BHKkr4/Q
ITaRn/Bt7vvjIsoDRP5Bw6iwn4PZMBXxMx7HujbkN3KpiJ+JVd8l4v6QT0X8
DGwTG5ubyqUifuayvlTcoD6LivgZKUPIzCruI/IMrkozRdq5o4D4meixEAn9
Rfjn/sfPBLs5Hdt4QUDkHWyJy58fYiwg8g4O5B9wCTPiEXkHqWUHVUxuDxF5
Bzf9j1Ebwtugtv/sqP4lGSx9k7KYxfFG+FKadVWEjb+/Nky+/d3PhJeGQ8x6
JzKWeO6GfMVKJriesz7C5JGxyW23nVJbGcCUuWyhfpeCdYofsWGyGXCo7Nf9
gUkK9t7jp+exY0y4xb6xSOAsi92KV1VrxM8/xOusp8is+2LRCDfFnty9mfYO
JPP++8C5OgSj964PWRysAOusrTOS+P0UX75R6V4DE2zUZgZuLGLBzK+msKx3
7bBXQWFziMMgkb/wNHuSG7W9BapK+s2PtY3AorYsDdGoOniWuWru3ZscqFfb
7HLoCp3IZ/AY1J6gfKAT+QxeuqYbjHXrAfFDOWwHknngCCB+aO35gj1HzTiA
+KHgCb/PV49ziLyGGflNqfTuYUD8kIPgrxynlE1F/JDyleEkJUU+FfFDfTbf
CuPx/hvxQ5qXV+c+aGMTvJCC7u5zwWpcQLyQSQEr2tNxDBAvFL7LeE/DJwGR
rzBhOG/Fwi1jRL7Cn+WB4Ztq2ES+woU4VqTm8R7wMHPM91wrg8mX/ZbXxftD
Jb+tLz6ny2DXCwPn3vdrgHtnMxmammRMbOPjORM3meBexhX1zMW//4H+0d8c
BjgvKBer2E7BXOxuZsbi3//AM0bv848U7LZ1+kkDWSaR3+DS1f22sAGvp+XE
u7kJSXjfG9qVd2EQsh3Cs1rmfQWHQsnZP5Ys2NNnu6WpuR7g+EKf73YsSK0Y
+PixmgWRTR68SxoMaHUNerZjjA1W2bJjbZGV8N54d7DLOBfotnZLXtXS4PGC
u3fc549BaELj/O6qWkA8lG7+a2Wpv2xAPNR0vtZ2jzAOIB5KVIKluLNvhOCf
XslM6n8N51ER/9S6fHWAtxWf4J0il8mlHK3mA+KdNAJ3ScbhdfJzhaV7e3xI
mEqX+/tNeD/Sty73xbCYDFYWb7dt0acmmMj/fsjvoQyWcMTp1I6+BlBa8nbF
MykypmvnXlGbwoQnkqOsdU/JmOpRlvBTUbw+yCOnVpMpmM8FklMcfl51Ni9f
1RdDwSwpi5OXzsWfxzmKfld9PoCxbtyYCzYMaiGHVHr8q+DAEZfOoCK8f0jm
Llxfj9edIWkrg4KHgVvYJ9TZPwp6lh/MuNq1YNFVcOnzKAfsbR2Xv8ylQdnz
2geKYny4/GXqQd/WKkD8ltHtk0MHojiA+K0bEW2Dkj1sQPxWTkFqr0YPh4r4
LXnWGuZSez4V8Vu9/aurWZd5BK8le757Q8zUGCBe66LzpbziRAGsclxo6VNG
wupP6/VLneZDV0r6A7oxGZuOEs8c3s+EKx6CFQ0MMjaRcnr42i8G8C8425Se
pmB3VY3+6uI/I97L3aJ3kTepCaRt10rL9pZA0by7NodUWSAt8C/0bq2D6Ytb
qCLBLLj9s+RKZD4bPp7+Fl5vVgVbvZfXBeVwYfL27zMLwmlg4xfRcok7A22J
XjtVS9mA+DE1WadnPi/xuvcfL/Z5gQVZ7j8eFfFiGhZGZxU9+QQf5pY6L03w
UAAz5a2607fwzydXR6peLoCYYOZS5Qlp7Cf/IO2yWAvEql/76e5LxoKfrt1r
Ks2EDwGf79SJUDDHeXr+Zs0MeOTTJHQjMg9YVZ71Ue34+eXf5r/yMh1C4zST
1D/g3/cB1laFdxzQndHrCZilwZ7KjIqtpTxQKQ20fWdVCYhP29pwfI+HBwcQ
nyZdqe+6Vgn/PP/4tJblf16s1udTEZ+2QcM5Ovojj4r4tOngmUnhwjG4rK22
PGALCXsUkO2XmCcAx8Rb0qplZMynb/bp0G8G5G5X3F5+iILNztz/s7OTAYZ3
5ug/U/kGtWUvfn4NYIF947HUDfh93ZYgqsPYjdcLMqY1LZoceGGkyffl0EFn
rbXeeV0emHgmnj2zhQ5LbebeO3F7FiZEZxsFmziA+Lj+uxr5TS4cQHxc1+DB
uJ1dPCri42pJM+uW6PAJHu7I7+0LcgsEoPXzWjNdhYKFpJ5tPo9fX3pkXmly
ag2M/io7G/CeBUV3vGMsNnLhmHuYS6s/DRA/9/BCme2x1/jv+8fLCe/Ptu+7
z6ciXu5q3/HTHZsFoOiSWB5rTMIKnePPDNwTgKXZbbV7v8hYlH/wb2v8emx5
XP30iy0F+xr+wPQhfr0QX/c1uuvg2s1NgPg6M/dd+2XHBgi+znnE/bgSYxia
H46oRD+rhUi+HnVZJv7vnacc9jeoGU5rvrmoKD5M5J1Mdx1aGZo3QOSbCGcM
mXw+1Unkm8z91nA5TreByDe5982yKP5ONZFvUtTvmHIbr7dQvglD5MeV99xq
It/EItvHXd6jgcg3OZn0xvKabyfB/23tolCizg8B4v+KjS/nVTiwAfF/TUUZ
nhp4vYX4vwaz1hjsHJvIO1mZoxEgemOAyCuRUAp0YIgMUxH/l2EmW2lfyKUi
/m9I/NxSb7zeQvyflkHZ7bpiLhXxf8P11p068Swq4v/M3XT1bzn1EfkjE+mp
BWopo4D4vznf1y2K5PMA8X/196N3B54SEPkkM1OPOVcsBUQ+iWe7UstpJx6R
T3JPXOO3wsAQkU+ipe36tHVPOwxd2yQiflEGWxRkjUWca4StUxpOdUMymD5p
ifAdNl7ntNCkBhzIWIvpnfLUNUxIMw6eCR8lY3EyLXPc2xhw4ixnv5YL/n44
8ipOMMIApU9ylvMEFKxoo9B46iEmfDTmnC+6KYsttZkS8ahnEnkog8YJUzdN
GkHtMpzRfJsFvzgR5M96QyAO0vs2Ur+DVqRGSVciC8KPOM8desqEF74l3EUK
LPC+NvXljGM7XLD/LGofOEjkpfS8oVvT77VAyq8H6z9+GAGDVRWGk9/qYJ+Y
fV79Bfy98kz5qac/nchToY44y3LC6ESeisj+U9KekvWA+MdPhXZ5DedGAPGP
9sU/UjXx+grxj1O2G55LnuUQ+Sop74w8K9ayAPGPwcl3ti+PY1MR/9i3Q/cE
dzGfivjH9NrxfbpL+FTEP1bfnj8/9A+b4B0lFhQ9vTCfS+ynf6iif+aa5Rix
n/4Gtu/iO7zeQnkoJ0tmSXWHx4g8lA8Pt1e2/2ETeSi1qQa+G0p7AO2nd91h
uv/voSbQXSBW4PxaBltrbe/Q8aQB+KHqHUKbyJjjqoM+2+4wAdOr3xueRcZk
8qVYKnwGJM9hFz7UpGCqtSuHBlsYYNNztup1PgX7wav65ijDJPJWlGI/vNCo
bgROm1X8rbREWJ8W4/Z25yDQNmlLpLqXwcZkXaGHxizQss2W2RNdD8+3jTdv
cGaBz6C/3zr8PcIWj1M/cYkB3sxWg5BeNkwvcXgiW14JspbvV7j3cSF+b7q8
SBENr4NvNCX94YNTPylP/2Utse9+vUvOgPYoGxDPyTtbKPiE1w+I51z16YpZ
kNIowW8yj4x11HvyqIjfxMwWaafZ8Qlec5mOo8W7Aj4gXjNmk0WOTwL+/v52
aPfgPRK255GLz9jwGKB98ZFTTgs3VuHn/85Yc/CVwaquuT6Z4jZA+IFN668s
JGMX33+Q1MhignFYtequJ2QMW7hT7bkEE9alg3mwFAXre6etm4KfS+ZKryVG
I/B6K6TlZMEsAywuVFqpPXwPoUoBkZnrhmGfPssjR6gKQrs8G4/g9RZbVYcd
FtoIv/kNhxUSh6G63a/yaDleb20LMz93oRZEdebJk7s4IC2xJMipjAar0w4u
XS3gQdXbDtsbfyuJffRXHknR6kI5gPjTJ8cdYsl8/H76x5+adZjcdSnhUBF/
mrruw9zRy3wq4k/3heZ/sPHgEbxpvKGTz+2hMUC8qYummfLIawF8XL7LIuAL
CUvIM/tW4cwH4x8bnkQZkrFbz1lfKUeZoCbWeHawhowdES/v+t3DgNWmCXI+
JylYioTrk/afDCKvJlJ1t/YPySZQW1d5te9sCWz2GWoJkGOBuGttHCumDnp+
fl++MYIFSrpLlo8ms+Hw+WtF559UQVhQ+PmwF3i9xQn/nB1AA3vJCqu0nzPQ
97pZMTUH77f/8a+Tc87tUcbPW8S7yt85u5SlzKMi3tVKsnJ0F37+Ir715NuL
VvO9BBDhMF9nrgMJ+yJ9fjJaTQBoP/tKJS+J4aQWsMg/phjmRcZMki8V0ylM
GPTsVw8VomA/f3nMfsfrgX29vj82PcsFi/5fca+KhyD5wL2f7B80aN3YNDg3
nwUvE3QGHBM54EHLxJbJ0iGxSfmMTjYPlmysNj+tVQmIr+2Lv+Pu5swBxNcu
UX6h6a6Of55/fG3e1fwkx718KuJr98/xvKFdxaMivvY6R3l7R+oYZD/5239w
IwnTjtU/Ffsev/9VjQ3hCxnT6n2SWT7EgB61Q0N++yjYfQMpo60dDLi8PTn5
6vNy2L1rZ/F9LxZYnQl/FBGJ12FeCyvN9VjQfe2V9+bVHFA8Puqnt7QSYra0
d9io4ufcsp6pmxQ6rBrcOj/i0iwsEn9kw1LmAOJ7Oy3vx5d44v3vP743/H2y
zItqHhXxve8tDJRWHeATPK99ZL3dw1wB2DRGBgauomCRr5V1F+LXt+fkGQXn
lTWwcJXqXdlCFtgwavTyFbkwz3UxtzOEBoj/bRLe7RKO19uI9w0w8lt28B7+
ff/jffcqOX5pWS2AyzU3n5w2JGGlZyOmTwfg/USPyZWnP8jYCpkeN98fDLhw
f+Kwlw0F06wL3tnUzyDyhsSPOum6rm8Ctte5C6XyddDcz7Cnv2DB8Zfe3s/v
cWGo9Zw+34MGiB9evZn01j4NP3/+8cMFcRrON/z5VMQPf0rSslpzTQBHbHUj
pCfImOSDKuoo/r5uLKkIDa6pgMOb6WRH/D3LP9Ggr+zNgZRPHTcmj9Khr27e
d9HKWWC9Ni7tsuIA4o0t9UJG7Tfwqfv2JLiXriFhTVyLak38/Dkg++yE+H8U
7Euo3vgFvB6IyRk1kXz8FRZuTbFOwPtn08O0GQdxHhjI7hiI7KUB4pN7O36f
fBrEAcQnNxRnWZub8amPRTYw3wmTsO/x9abT6QL4/mWIv1COgiVORDek4e9D
mfqkKhmpanAkGbyVw993+X62udazHChZtiahLJkG9OYd2yfXCWESHvali+M4
gHhm7feXNS2d+dQpT/LahoMk7KrD51dfYwSQPEb5RW0iY0tbjY0kuhnQ4JyM
+ZdxQYK9qbwgngaId5ZOzzIE/DlDvLOv2ZmmyTt8KuKdb31mV2wKFQDajy1y
f6FDy41m8H8a9nWJBAUz8s5bJIbfb840LQ0jNh3WrJbf9gy/34xZ8V5lX/D7
qkBVavA3DX50xel5iAlhpmtU1wz5cgDx0ndfFD/lm/CpK36eMarUImE7ghPa
2t8JYEfh2bHKN99gd/TSTxDGgitJvSkfZUhYSCx2dMVHAYgO7109fwMFO3Ax
u7IK//0tdv55Q0trIUgMGo7lsYCitK1fdBcXNByEbOjeNHhfy1C6dUQI05LH
DAxT8b78H38tiSkeT/LjU5/XR43a9pOx5efb55jjzzfirwfP7M5r3NEEiL/2
m5C/HNk5QPDXSaTbQv9VDBP7pt8l+f00eMsCtG96oHDa1JQ0TORJzQjqe9+W
DxD5UZR0WpCsZyeRH1VUrL7a90wDkR+l9cZFODWqmsiPejLfOeaoO43IjzoW
PBp1rq6ayI966Lg7gnmugciPmo3Vkukx7ST4cNauX+GWh4aI/dJXjBUOK19h
E/ult3b1Of3Bnz/Ehx9UjJGOtGUTeVKij3u/doQPEHlQOieWyV1pGaIiPpwi
uXvEN5NL7IeW/5t5cCXeLyA+nHSyX0K0mktFfLjrnF7dDd9YVMSHr7D7cOSY
QR+R76Re/JKa5j0KiA8Pl5YYj+rnEfud70en59w1FBD5T+7a+e+W2AiI/Cfp
oKPCbn48Iv/J0fhjQdGKYSL/KeG/Im2D2HZA+50v+zzZVWbTCNfJnMmC3zKY
7i3bIzV8JnyP08ni3iBjnzVN7r1cy4Q9Bi9NnVhk7Opcn4ds/P1AEsr/oONE
wQrt3iktwvuFBTu0qqX5eD0ZLgUdB5jQLpr96IW9LFYpmljaUMMk8qY+wWlK
9YlG8I+KqAjbnAWOhfm6J3YNAdonnUQdM/N+ziL2SSf9oBzKXMUCtE8666sG
rSh6kMijurcjiR3zqgUofJPFnJQRcO8xKjncVQdLcynBM2c4IBwX+L4uik7k
VemZyafoetOJvCqeyRoRW24dsS/a+uMcU6vDI8S+6AVbkr+PH+UQ+6INappF
l53nEPlVGD1IovYwCxAfP/A8WcbtIZvY73wzqUTHX5xP7Hce0JUxKZLlUxEf
/yg949bN+RyCh89nzHXKmuIQ+5f5Nd/DCk6NEfuXT/+51HMSf1+jvKluh+3r
rp4cI/KmHKOYfTNSHCJvymZf9Uaj6R5A+5cd8epoxLAJDhnY7z7xSgYTobZq
xUY2wMY3rPP9amTs7N2Pj867MSFRak/38zdkrJxSQ9UfY8CuaRGK7WYKdvKn
yMJY/PxR8V+5OyOXghV8zvCfL80k8qx0qc9P2dEaIf0/aY9tbxNgUH3fqybV
QWh8/CgvRLsMnI0n/efos0BDrdHX5U49SJhdrElxZQF3ytTu3DMWDFndcF56
nwGnvLzWf+pgw5pcpaC+jkoo7+X1z3ZwwTL/u3FoHg1uPboiWsDjw/o9M786
gmuJfc6GzoETqwfYgHh/tpUcXSGWQ+x3dloTukZ95yjB9y/suv9H0olHRXz/
uvg+ewt7PsHza1FUQv7L4APi+efrfMjUjBOAt8J5jOVBwgbav5eHjI0B2occ
qsmNqm5oAqV7IgPy9/F+4U3ob7vJBqg+P5ppMB9/fmYfxbFymJBnsqviUDAZ
U6shP1Obz4Qvr4wLbiymYMn2Sz/n4+ejQtlVd144BZMZmvsqcIYBhaHKzMD5
78HlYI6vu8IwGGbChthPlXDrV8KDns8sGBw2P19xsxEOFO6F/NRh+I91Kts7
bxRaTs37yXWuhda+dD7WzIEvrg/eLq2iAXPT/a5kFg8EyaYPgroriX3LHEPq
gaZgDiA/wbbIfGMr3n8iPyF1CSPd9B2HivyEjUantedZ86nITxDtr3jc5c8j
fIQvDGOd/F94vfnPR/D5Wt2en4afZ46nzIOKSNiBfeai53z58HhqiOypT8bm
jlPt3usxIYi+/w+/Cq93Dr9Ny+plwCejvFtWJyjYx2LRb1vxfgH5DJ3zdRiL
xJpgxwPFpdVLS+BQ/JJXZiQWzP2Pv0j5bh1MksZNAqPx+qg/XyAXzwbxLxNa
TRlVsEe6dj0lhgsOWTIxPX40cDp2Ie1oywykR5eEl6SzAfkR23ZXW29N4QDy
IYbldw4GyPKoyIcY5YudY/nwCf9Bzc7E/YSbALrLlbXn3SBhE0GpA+81BYD2
DxvMVQwb47UA1fXTpzhPMhbreywheCkTvF2nH9ycIWOsn2s3SODPVyK5Qz9E
MRfiXu5o7cwZguxX9UHNsTQwEbd9qJLLgtt6P4vjozkQs/iKUrQyHQzNz636
nMqD1+n5JhJKlYD8iz6RE+sP3eQA8i9+LnEd6tPEP88//2LxaWF2+U4+FfkX
VUv0nu1p5FGRfxFwW/SLXOIYNO60qVJRw+tFxTURlR8EEDlSOnK4CK+30g4d
/TzMALe15vsv7aFgP5bnZxe0M+BWxITRiTPlMLiwZFmkGwssFN5P010YcOn5
fGW2EV7vyR07a67AAReq50VrtUo48l42+fdKHpSobXhlLkEHFbVqw+3nZsFi
vvyfwuUcQP5H14WKCJf7HED+h+Q5SZ37X3lU5H8Ua7vdrD7KJ3wP78+DjRnZ
ApipzeizU6JgZJMrn4fw54udm/HdvKMaRnT7r8t/YoHOPee13RQujG+MGH32
lAbIDzl5TNh/7AX++/75IO+2brFe5cGnIh8kqpypvlpRAIF325x36JOwBdK0
jNLHArif8k0soYOMrdLSYS7vYsCU+8KX563wfletqG4e3i8gf0ROWzP+5Zom
GNx7nzHxpxaml9jTIl6xQEi16MjK21xokzE+4YLXP8gvYT9yCOzA6xXkl7TI
KO+WxesN5JdIvVxkTL2E339WhmzeGBlrf6Bx8XArA7pXKoDLowoQbJLUakpj
wXcht3UGrhyQUNzbevEMHYak4xemlM5C/Sd5WxVLDiAfReP5x5ie1XzqlRHx
iy+USZhbNOVwHH7+dEq9yxzQpmDS4xk+0/jfn0zaI8I9/BWiRoWH+23wfr1m
3jf+LBcWPH4GzFYaIH+ltt9HNj6EA8hfeZa17OFiS7z+zgr7EDIHP99u/ce6
mCoAy0IhgxFZChYdXaSciH9fSpsFd6Yrq8DV1Ulgi/cLAZpSj5+McyBh51WS
cybeT92Z11qxWgjrvms8pziGA8h3kdGRYZo64vW2mseC3P0krAJqcs2fC0D8
o58XrYGMpRZX5r/H+wWf6Z/i8z9xQVXGtTEymgbIh3nRIdomwL9/5MMkNTf4
ZLjh/dk/H+aY0sGY9fj3jfa/xkQc8Zj52AxKISkrOKIUjH5py6aNeL3uvf5h
u3YGHXarbTnt9pEF62IOmLHfc6DM/nKBG58G3V62bH1hIcyOPL7lMN7HIZ/m
tMvrb+tO4P1aUOn29K0kLHq3VkJzjgD2yb1NzLX9BhOjQlT5YLxeMtB/HE0i
YY9Mx7Pm4M/n8z5Tj6F1eD22o3swHP/9RTsuylJZNVAyxX48pwA/LyrbvmzR
4sLRi4e0wn1p8NEhoXTfAbw/epP5xwp/3yE/R467Yf15Xz51NkL8sVMvGcsR
GnrRifcLyM/hxYTkzGxtAstt29pULnGhIFguXNsN77dz8039LYQwtWwRvZ3p
HED+DucvPzkBv19JZ1xf5nLImLD9tb+L8Xpy+seXyAPCFVD9YO/ORfj9n32g
Vd1yBQnb+qS2rw2/36bFrX30/0phIulRPa+TBBCSpSr8VpqCVfdI1cbj98eO
0Zh6+r4qWOYyuuM+fn9sCbLY/bufA/v6Ga/0P9GgvvD5iqsKQljlH1pJ4lMO
IB+oamXm9gQ7PvWyj0GTw24SNk8+tIrzUgA9Yqejl6Rzoep0gxE5mAbaciav
i92FsAtZdrkDrziAfCEl/RvbDbz4VCPfesa7uRRsVLtaKRi/3jH96tskVtOh
hRn56y1+vYN6w+de0SBhGWkX8rYXCKDp9YrTJotI2Gqj88Fa+QKobvPekrGa
gvUeeh67Ff//mwVi9o+tayDgleGS/g8sCFVZfytAhQtRjiqU54F4/52jLdG3
UwhzV1/WKJrMAeQfLfd7IKfpzae+UDz4Uf4hF0J3iTrP86KBe7+o0JrrQpjD
X+vxVrwfRD7S6/aY774P8PdlxPaonrUkLDT21quoQgFolDfGqCtQMLWRtT4f
8esr7nh8pfrJakitu7g9Dq83ultKW7XFuMBdIdQdnECD79vtwtepC2H+Jymj
W+I5gPwlCVmZkY14f63Csb09r4oLWF2Oqh3e348de61vESSE6UXN6TTH//wh
x6d03nsJ7FvoEVdRFz4V7d8UXvbab45KM7BjPK5qzKdgNs4Llfrwf4/t1Z77
tlsr4e46Z5sg/P09tZVrx9pBwmKv9ZLevMWfj3G30jYKCRN+k5uyAP881zkb
aarqFMwp2tBlAX6+nth57se4Ti00r11mYZfDgj2Ojxe27eeC50Etyr17NMjf
JOaRpC+EbU7o3rAIf98in8r1Z/ZYBn69kD/Vopt/5O1/TdCYYde0hEUDtG9T
dWb/l7owLvGzs4hms4eIELGPs1vVxkLlkQTxM81rA/+nGen/7+v899//ARNt
PsA=
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1:eJwVzTssw2EYhfHP3aJhpENdZhYdGF1qI2GRdNNEEaJbrRaWYncNtTJgNKIV
BIPZRNxGl0Ulfh1OnnOe9/+1banM2HxlCKFC5uTHiEZCWMfdmhBy1SGcVYXQ
J5/clRT4I/6Nm5Jm2eD3+BX+3O6XL+6Ju+PqZIm75orcsf1uT0t7bQgNXIJr
sUv6ix6T7fJvuXdyk/am93l9Vb9wG3brsQf0Rv2XP8BuzOKE27c3z3jP5bl6
TOMod4vL3sYxZp/iuHsOs/Yj3nh/qZ+U/9/+8H0SE1wRZ+wOjJS/wSHfLeKs
HXX7w1euVTJ80t7hB/QuPc1v+Y99fU0vuI249dqDepNe4g8xjguYcnvAf+G/
O84=
                "]], 
               PolygonBox[CompressedData["
1:eJwV0DtP02EYhvEXVAZNNMFBRtqiM0sZ3DkJiQkskm44aLSnrQjKURNJWNTK
5KRAC/WwGHXgAxCgJFAPfAMIJMgq2MKvw5X7vq/n/QfSyHBmIN0YQmjAK7Rc
DeEG/pE5TFwK4dHFEN5fCKEVO9wyCvxrfp3rwQk3gkn+Mf+Bi6DCraDIv+E3
uF6cck8wxSf5BS6Kn9wG9407spMo1f8ml+c27Ttobgqhasfx333PfUe/jAdu
A/ZL7+J6q36PH/VuWk/pi26dbu12TD+TB3yBi8qsTHDb8pfvNvXv/Dv7r/cJ
2cWtyZTdJq/ZX2W3d1Myae/Kj/XfQH/L5+2y93flba5Pv67X3Dowot/nq77Z
lxXuCh7yg/as9x16RF+VQ25zMmeP+WZGprml+v+E4HZox/Dbvez+Qz92S+MT
V+LmuS27HzXuKZ7zmfpvwt3EH+4znuGFW9atyN/CLvcF4zgHG0FRtQ==
                "]], 
               PolygonBox[CompressedData["
1:eJwV0zVsUFEYxfEHFdy1MBGkFIJDgstE0QTXFkKCBCtuxYJbi8uCl4EFKVRx
G9hIoAZtcFiwMuADvzt8Pef8z3ffK7zbVrPSxi6uGkVRFTPQjxZ1oyjBxMZE
0ae4KCqJjaJ6JkPebnEftlq+LHcyL7Fck42fxIuwcSbO7MAz8DX4FbmzeYU9
xW5jP+QVJg+7hp3CiuUx8VHUXx7PN+Wr8JdoH/06OluO132mpVh9Mx+fIGfi
vfnW/DR8p2dn8mv5q7qhuu5yFz6G/4JfpO3oMpqie+3MM3oHO4n9tJtCk7HH
dKWcSBvKOXS4vS10kVxG852/zp/Gj8ol9sfSAdj98HvKzWhV+TLtay+dzpGr
6b6E52ANzH65j64NNl3e5dn7+XV8tq6reYMVYXexX/IqU4DlYGew0vBNPGOg
/IBOlJvTGLmfvrr8lX/ONzQH5L76tliKvNuzDvDp/DVdsq6H3I2P5b/iiWY5
n4q/tV9M72GnsN/2UumwcHf49nwjPpeOsLOVLg7vp4XhPvFn8WNymf3xdBD2
kE6SE2isfCXcE3vr6Vy5iNbQf+Nf4FnhPXRB+DdjB3X9wrfmU/E93nWQX89f
13UP91b/TW5v3ulLwjfj/+jWmCR9Y2wkto1P42/Yy6PnsOPYc3sT6GBsMt+C
j+MH6GvKlXw539gckvc6fwjbIOfIPUy8M5VyknmvLw3fjv+rmxHuXLjTfAe+
CZ9HR+m30yXyTWfy6XnsBPbC7kQ6BHtEp8gtabx8NdwNexvoPLmY1tJ/5yvw
C+EddGH4/8ee0MP6/jQx/C3TGfpMulbe592H6UYs194wvKfck6/Gf8c7mA/2
ysJ35f/pZob7EO4235Fvyo/W7eCXhm9KbzlTwGfh5fammtomAz+Cb8Lz5F7m
I3bbFOIX8ApsmqljMvGj+GY8X/4P5jSikw==
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               PolygonBox[{{629, 3612, 3607, 839, 969, 1169, 1446, 680, 721, 
                799, 929, 1129, 1406, 630, 679, 720, 798, 928, 1128, 1405}}], 
               PolygonBox[CompressedData["
1:eJwVz7tP02EchfG3LTghkQQTHTUW5LI4QeKOOqi1cTKdiAsLpUWMTioQ0FYW
HQR1c+FSSlEZQJvwF1BakATwMis4CDrDx+HJ+Z7nvL80PdebTvZHQwgRvMSZ
xhDOIhkLYRNv60JYrA9hyaNB/R/KXI37znXqRdzn8twoF9NvYQNv+BL/kc/q
f/GZq3LfuA59HkNcjhvhnuuN+hb2uKje7Q7u0ydCSOg1vOYWuA++ueZucrfY
M7Yr7pT70P3Jtq5/9S4lM3ycm5a/ZVS2e7cqL9l7ZEF/Ie/Zn3HDvv2hP3BP
yDt8WZ7Xu2Te+4q8rffJk/Z38ov8xUXsd+VDros7QrP7Jn+ZT7ir7im+qL/3
e1fdp9xx24DtACtchdu1X3DvI2Jvs81hUH9qf2LP6Q36Jn5yQb+BdUxy89yi
d2n9D5a5NW6Hu6jPIsuNc4+5I1z//z/xii/wJW4brdwMMvwY/4g7BjUwUMc=

                "]], 
               PolygonBox[CompressedData["
1:eJwV01lwj2ccxfGX2CoE1Upkw50lsXXsJbFcWVpLbTPVSoQZncGMcoNSS203
9mzW3kRLLeOqYskiIQl6URdmkMROLbWHMtTnufjlnPM9v+fJ/N933i7ZCybO
bxxFUSMzx5/EuChKMgkxsrlvjjaJosqmUVRt8bnJxMrNRnwvno/tklPlu+Yd
Fi/PNvfMEawCq7K3Rm4m/2VuYc+wvvxb06ZZFGXoy8wGeY8+T5/Dp/HD9Tt1
KfKdcAbrII/iW/Fd9DnyXXMYO4Odc34Kn8p/oV+taypfNDexp/o+/H8mTj9M
PwAfy5fy6/Hdcq69pXQzPgvrwWfyhXam8/P5ZLyI3g73YZ/rLss/8CvoSPwY
jZU7h3v0Z+koeTq9IxfSQ/bKsbP+Z628mN9IJ+PFNEXuS1fZH8/P5pvoLpgb
8hPnevNvTGvdUHslZp28S79DXyAnhXcQ9rDP5Gxz2/yBlWGV9r7hk/k+7lmp
u0i/lnNojO5Xep5ex/6134t/Hd4H/qX902atvFO/XZ/Nd+cz9Pm6xPAewhms
vTyXLteNwFrynfgsfCQ/jb/FF9CD+lKswp3X5EX8BjoJP06T5N70Z/sX6Ffy
LNpYv4/W0HrssfOX5Jn8YtoTP0gbaCwd4nx/3Rj+FP8LXihvcy6L78YP0+Xp
OobnbxqwT+Xh/Cd8arhfvmkOYCXYGecn8ol8L/0K3Xk6Ts6mjXTVpk5+ZDed
fxWeiW6w3ZNmjVyg36rPlRPCewh7WDs5k2/BpzjzvXzD/I6dxsqd+ZGu103A
/qQd5Z50ub0aOlbOolH4zmkVrcUeOvt3uJNfRNPwA/Rl+L10UPiGaT/9aHpC
3ha+PX0+tsX5JXRTeC7hedCu8lC6w+40fh4fH96ReSm3xTP45nyy7jt5BD+V
v87/pjsll7l7PJ/Ap+t+0v1vzmHXsAf6HvyL8Gz0A3XFZpWcF75v/Xa5Q3j2
YQ9rI88w9WY/dhIrtbdM/hC+Yewq9g82QD5uVmK54TdicfK3ps4U4SfwEnwh
XRe+JyyeT+OX2nlvKrEr2H17/eWP1nm8iw==
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
            , {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1nfcjmUYxvFXFDJCsgqRLXtlpYGM7L1HRpOyMwpNI5VsJTvZo8ySrbI1
VESRvcke9T0//vg5jt95X573fe77ui9ytO9av0uihISEHnclJETu9UcTnNRH
owlKwOWEfeZNcUofg6Yoif/M+uE+rOD9kBh/8mY4rY9FM5RKuPNh/c3TYCXt
jyTYz5vjjD4OzVEaiawfYJ4Wq/gA3I0DvAXO6uPRApmtHW2WHz/xMvHjzN7g
6fANfwN5zKby0viL34O/9JY4p09AS2SxboxZAfzMH4vvZvYmvx/fxs/gS/Rn
8CbPy6fpZVBP3yb/Nn9S/zZmSMr/lq1wXn/GtfX6RL2YPk/vKJ+UjeQu2VW2
cv1BOZa3lwVlLfmDfFn+4npFuYI/L2vFPZW/ym6ybNxrOZC3k+llDblJro7v
p3+lV4tnrf8sB5rn06frj6G+vl0eNH9KXx0zJOMHZWtc0D9Fcdfn86dizh/i
4/RH8SsvF8/SbBB/AN/xQchvNoOXxSGeHIf0Nriof4Y2KB/PztrB5hmwhg/G
vfiHt8W/+iS0RQUktf4t84xYy99CChyOe4JL+udoF/cSyax/2zwT1vG3kRJH
4hngsj4Z7fE4UuGo+XO4ok/Bc6iE1Dhm3gFX9anogCdwH47Hc8c1fRo6xr5B
GqRFOpxwvROu69PRKZ4D7sdJ8864oc9AZzwd9893eMc8M9bzd5Aep2Kf4KY+
E8+jctw/6981z4IN/F08gNP8BdzSv8ALyGrteLNC2MOrxP00e48/iI38PRQw
m8nL4R+eAWf0F3Fbn4US1izgT8ecZ+MT9ML4jVeNe2/2Pn8Im3hZ/rVeHe/z
gvwLvTwa6Dvk4bgP+ncxi/dc/y32gPlZ+VLsLbP/eDW5IWbyS15SLox7LivL
xnK3fFW+5Hp2OTGetywia8sf5Svy99gTcmXcN1k7ziy5J86L2Cv6ED0rauqb
5eZ4L/Sl8W5iCH+Uz9Ir4Eg8I75Gbxj7kp+L9x9xiM8WL+Nhaz7lRfFHfK/Y
f2ZDeTZ8z4ciM87H74tEmMNfQXVkwQWz+EfiLszlXVAj9qvPGmaWHT/wYXE2
4WKcVUiMebwrclj7GS+Gvbxm7Gmz4fxh/MiHo1Dcc14RR+O8wL9xr5EE83kp
axbpVWLOc/JJenHU0bfIffG+6atihmfj/eEf6DnC9e/lljhD9GXx3siaslmc
o/K1WO96YTk73ln5eNxzuTPuiTwW+12ujf0qG8lW8dxld5nV9UvxWXEW8btj
n8qNcoFrpfXFelU00X+KteaP6J/rJVBX3yr/jHNC/yZmqBXnAR+h58TWON/4
8vh+GMGL8Dl6JRyP9wmX9W64Bwt5N+SybjIvif28dpwnZh/yR7CNfxh7HVfi
uyEpFvHuqBPnifUfmeXCdv5R7EFc5T2QDIt5D9SNPYFrZj2RHEt4T9SLZxr3
IH4v5EYe5EU+5I+zJN7zeC9iz+C6v98L9+Ir3gv149nhhllvpMDXvDcaxHnm
9/3YLDd28I/jfuEm74OUWMr7oGGcV9aPNMuDnXwkiuIWfx2psIy/jkbIaP0n
Znmxi3+CYrjN+yI1lvO+8R2tncJL4QBvjExmo3g+7Oaj4ueZzeVP4ESch3xd
nElorf+R6M7/5Yq79j+8/R2l
               "]]}, Annotation[#, "Charting`Private`Tag$1541751#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
72PrP+DHZwbr1Val1d85W7Ay+dvlQdYNx56U388+zbPtdf6WT1e/6H+V+8IX
U3X1bsyzlFnPH83PzHmcsyDneuYdneu6D/kJ+DB5s/V30ivzDNOH5PKZkfKb
uXfWdaQN5JWZlfr/8N/gY/O5aOPMXGyY3qX8yfxDOWv5J/jB3nME7YnNtqYG
fo58ceZKzlC8itpm3abcN754zs6cF/plsdvkT/Q/4idmvurVURX098WuzFyR
d/Cb+aPV8/JleTaxOtmnrh/J98rsyPecuaS/Qz5Dbdf/Wv9zvkTOQP152Bxs
krxFrpvfN2on9i1WVg2Xh1j3AvaU/GHuQ84Y7FP1cc5z/DusXn6f5Hwyk4fq
jdLrnWcuf2tmJPaZmpuzC/8eezi/C9QwfHTOIHyOfHnmGvYNtggrmTMSm499
ku8vM1Sur47xOffDqmWfy//yW/hyakReS/9UrG7um+vH8H2yX/Wu1ztXvoI/
gN+Jj8/vJNqKPqj3h2s25/zExmRW0XqZa7mftIdrz6Ll8psiZ61+b9oqZwJd
4Pp5/Ft5/8zPnH+0WuZ/nlW5Ii2VNbS6dZ1oQ7mM3i76HVZeNcHvkkfiV2TO
8PXyPXmPF/m+/Fy9mpnj2Tv8gfy/+ISc57Q1ra23PPPKdd/yS/C9ck5avzDf
LTYls1VukDNHjcBfwvtlv8rVMl/yP2f2XvZIvvN8j7nH+XuyXr2ccl1/181z
TfXMhPw/mf2AT8V/xhrmLFC7se+xCjlf5Cv9nZWxh+Vn+HY5H+hY1/8PSiRb
VA==
               "]]}, Annotation[#, "Charting`Private`Tag$1541751#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV02UYlUUQBtBLd4N0SSvSXQJKKtLdoNLdIN3daQsoKgZIi9Ld3d2dSqNn
f5xn3pndG/tF5lZdanWOEolEMkSNRC7EjESGxY5EUrA6ViTSiUIk46K1S1zm
CsPteYM11jpTmOTMNyvCSXkSdblq/wizlPyp70IRUrDArCin5MnU45r9I81S
sVbflaK8wUKzYpyWp1Cf6/aPMkvNX/puFCMlN6yNNk/D3/ruFCcVN62NMU/L
On0PSpCa782Kc0aeSgNu2T/WLB3r9T0pSRp+MCvBWXkaDblt/ziz9GzQ96IU
aVlkVpJz8nQaccf+8WYZ2KjvTWnS8aNZKc7LM2jMXfsnmGVkk74PZUjPPWsT
zTOxWd+Xd8nAfWsPeMgk65nZYt6PsmTkJ7PSXJBn0oRH9k82e5Ot+v6U40/9
RzwM141M/Kwvw0V5Fk3Zom/AS/l3Hvu+KfosbNMPoDxr9dV5FK4rmVmsf5dL
8mwOyp8Qh2b6rWpDXsmX1T4skU+qnUjCP35vqpqV7dbOqt34TN6rtuQxMbhG
f57znvW/1BrhjGFPeB/UXjxlkf6Y2p5/ScgtBoWzhutl/Re1LPe5rD+v9mCO
fEj9lLjcCP+H5ubb1Ea8lq+ofVkqn1I7kzT8njNNU7Oxw9pA9smtiMn7+r/V
muH84TkiC7/qy3FFnksLtusb85/8B09893R9dnbqB1GBdfpa4bfDc0JWftOX
56o8j5Y89fkZZjnYpR9MRbLxzNpM85zs1g+hEtl5bu0Fs6zlYo/ZUCqTIzw7
4Z6EeyR/Tite2j/b7C326odRhZwsCdeB6/IXtOaV/XPM3maffjhVWa+vzZPw
DJOLpfoK4d7IX3JYbkM8PtbvUJsQYZn+te+eK+dmv34E++XWxOID/Qa1Tnh+
5EtqbxbLx9UOJOI2g8OZwv1QK/KAm/oLak++ko+obcP9JX5YZyAvwjtifafa
NLxPRAn3iH48Y7n102qXcGaScYch4V0Kz4KzzFPf4R4H7D+ndmekfCBcA2KH
68sAPjTfqNYNvxGefU7IHUkcrrl+mVopvCfy1xyV25EgvAv6XWozorJCHwn3
Ws7DQXkU1dikr8fz8EyTm+X6yuH6yd/Qhijh3pvl5ZA8mo94hxVmVcK55W9p
S9Rwr83ycVgeQ3XyEI3oxOAr6/k5Io+lBnlZaVaVu/J3tCNmOKtZAY7K46hJ
PlaF5yJcY3k+7YkV/r9ZQY7J46nFZn39cH/De0d+Vofrzn15AR3YrW9ONFbq
Y4fzyYU4Lk+gNgWIQ1ziEZ8EJCQRiUkSzuFzhTkhT6QOBVljVi08m/JCOrJH
34LorNKfUbuSPFwThvKapNb+B+p+LKY=
               "]]}, Annotation[#, "Charting`Private`Tag$1541751#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1GWgFWUUBdD7yEc3SIN0S3d3KIpikaIYpIoFBqAYqIiKKKIYKComabfY
3d3d3YFr/1jsfb4XzMw985rOmD9hXlGhUNjhn53FhcK48oXC1+UKhauYxQg6
U2B3X/tGXs1sRtKFIkpQklKUpgxlKaYc5alARSqxh9/1rVzPHEbRlYOcF9iu
L2YSlRnv7Dt5DXMZzZHOqrBDP49uzDAXcbu+hLP0VryjT2ahvgvP6pdwod6Z
z/Qq7Kl/L6/N1/UezNNPlU15LdcghzBGP0pWZROPmtfJftzDSvMK2T7Xw4fm
jXIUD9DdfLAswW3cYV4re3M3S83LZWu28a75OjmcKfoiWZfn8nnJgazRV8ku
fK5XZS/9B7mB+Zxm3pXX9bEcrVfjMf18enCIuSR35t6ZSjUmOPsx15Hnzzh6
Up0a1KQWtdnb9/4kr89zyv6wwFl1HtcvoBczzaW4K9fGNE401+N5/VLqsI/5
Z3lDrpll5ma8kX3iGL0GT+RzzU7oHfhI782heuk8W/0y2Ydl+tmyDe/lWuUI
pusnyfps5oXsvRzEvaw1XyS75nPjC/ONcjQPZsfME+Uv8ha5Ua6RPXOfLDCf
LpuzlTezc3Io4/VjZU2e1K+Q/Vmlr5Qd+Vjvw2F6mexbfh/n6G15P+8SJ+sN
eDH3TF32Nf+a680zy87Tl8Odl8396WfkXaIe+zn7Td6U68o+0Y/6NKAhjWjM
/r73d3kzx2Vf6M8Rzou5Tz8ze08TDnD2R54Rx2dn8nPOavFUnjEDmGUux/15
p7OfnGJuyEv65TTlQPOf8lZOyH2YW/BW9if/h16bp/Ur5QBWZ+9lJz7RBzJb
L5/3NL9b9mW5fq5sx3Y+yC7KkbkuZpoXy0Zs4WXzejk4980682rZLe8VX+aZ
yjE8lHfSPEn+levP34TsvuzFwjw32ZK39Q1yGBNzn7IOz+gX573Sd+NTfRBz
9ArZy+x63gOWmBvzSvaLZkw2/y03sSh7wmCaM8XX/pGb825mJxjCXOcVc/3Z
vewjLZjq7F+5Je9R9oKhzHNeiYfzLLNztGSas//k1uxs9oJhtKI1bWhLO9rT
gY50Yrqf3Sm3ZSeyAwxnvvPKPKKvyA6y1NyEV/P553np3fkqOyvH5try/Mz/
A/493YE=
               "]]}, Annotation[#, "Charting`Private`Tag$1541751#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1XccTXUYx/Ero+y9ZSUK2asys6IQaQ+bFkpLw5bsppmRWUSys1f23kK2
osjepd7PH5/Xdzzn3nPuOef3uwVadmzSIUkikWiaNJFYlSqRKJQ2kWiRJpHY
kDqRaIbceEU3SZcOE+Qrjquv+1Q+L3+CUfKv8iOoIXeRF/L34Gf5F5+5V9dS
3ig3x2fyJrk88sivypP59FjLJ8NE/ff0pK4hDvG5cdX3PUb76v6iFxy3gt6W
+/Cj+f38dVqT/kqzIV0612jelV+kP0cL0c00FZKbLzCfxZ/T/0OfpUdpXmQy
X+3chflW+k2OXcRf51vwn/Ob+Qq4W35N/o7PgEnyFPl3vhGu+Z7H5X78RbNP
URPddIt192KhvMZxRXSt4zrllsiL6/oG+v76S3Jf1MJa/X36Nvotcivkww39
OqzH/eZtzbfqWyM/buob6gfoL8v9UBsb9EX17fTb5DYogNd13+syYrJ8y3GN
dAPlK3J/1EF33RJdYSySNzqumO4VebvcFl/IW+SKKCi/IU/hM+E7ear8B/9E
PBOff0IexF81W8n/xw/gx/AH+FrYz2dHXX0PujTeV1ok7gtNjRSe52Lz2fx5
/b/0OXqM5kNm803OV5x/Vf8H3eH4xfSGnDBvJ38pb437RivRnTQDUprfY96e
n6rPjHXxnsW90/9AT+kax7mdp7E8ON4Ns4EYKx+Ua+NRuae8jL8PS+TNPvOA
7rU4Z6xVFEIH3Q+6LJgi33ZcE91nsSbkQaiHLfoS+tf1u2IN4l78p9+KkmZv
mO2OdxmFkcA2s+0oZd7efE+8DyiCJHhS/7n+Bj8Y9bHD8aX1HfR74xnjK3mb
/GD8JrmjPI3PiqnyNPk03wR3yE3lL/ib/Co+Eb+J/5b+pq+DA3wOPKbvRZfr
LtD7432naXCn57LUfE7sHfrb9Hl6nOZHFvOdrrcM31F/iu5z/BJ6U05i3l7+
Wt4e7zt9KO4hzRh7ifn95m/y0/XZsD7et3gu+un0T92TSCo/JX/J34o9BOPk
Q3JdPC73llfwRbFM3uXayurejL0tnjeK4i3dj7rsmCYnw9O6r2LdxDpDA+z2
+XL6t2KdxH1HMSTHHrO92IdfsR/lHdsp7m38JhRHCjyj/zre3VgDaBj/B7qV
umJYLh/w+Qq6t+WDcY0YEutIfhgPyJ3kGXwOTJd/lP/im+JO+Vl5SDyn+C/h
k8Rv4sfTw7E24rv5nGik70NXxb5Ki8e+RdPiLs9lhflc/qL+P/oCPUELIKv5
QddbkX9HfzreK8cvpbfiHTTvJA+Vd8b+QyvH+oj/hthTzEuYv83/pM+JDfG+
xXPRz6BndE/hLvk5eWhcR7xLmCAfkevFXhf/CfIvcY+wUv7NtVXSvSsfivOg
JFLief2w2JMwRG6MQ45/UP+e7rD8DkohFQ6bHcFRHMNxPOTY9x17xPxdlEZq
nDB72Kxz/BfK76EM0uAF/fBYExgqN8FJx1fWfxB7qfw+ysb5dTN1uTBDTosX
dSPi3mKYPFE+yteP9SH3lVfzJbBKnidf4l/E785TRf4w1q7ZMv4fvjM/jN/F
V4n9KfZylIvfRWfpztLcdGO8F/G8zH6iZ2N/oU/HPaN5Yi/3XNOZv8SP1J+h
Selqekd48+Hmk/hjse/F/kN/o7mQ3rypeT9+jf4SLUm303TxjM3m08u6l+J/
xu+qKn8U76bZBxgu75aronw8A3k2nwcz5fR4WfeNnAwjYl9Bf91auVRcr3zK
d1fTfSyflD9EBWRAM/0ofXKMjL0Dpx1fXd8l7rf8ESoiI5rrR+tT4JvYD/Cn
42vou8bvkD/GCHmPXC32/thfYx92TyrFu8HP0d+NWXImtNCNibWPUbH+8Zfv
fUTfLfZjuQseRGfdXF1ezJYzo6VubKwxjI51hjM+X1PfPda13BUPxb3VzdPl
wxw5C1rpvpVTYkysLQzQrZNLY4181vfV0vWQ/5S7YaS8V64ee1vcW3k+nx9z
5axorRsnp8JYebJ8PPZ5vCAPlNfzZbAj3p14fvqf6RXdy/Hc+IL42zXUpj3j
GmLPdNxy+q/cnf8m/rf4a7QG3Rd7XOyF7n3leJb8z/q/Y/+jm2hKJDOfZz4z
zqG/RZ+JfYHejYzm2czb8OP1qeOexDqI+6b/jp7QNYh1Kg+SN/BlsU5eIF/l
m+Gc31BH7hXryqwHqsR7o1ugK4j5cna01U2Q02BcrEec9/m6+t6xpuWeqIoc
uGD2qNkn8RvlXqiGnLhodgn1zPvEdeh6ozpyoZ1+oj4txsfawmDdRrkc1ssL
5Wt881gb/D3I5t5c9r3/A1Z93tg=
               "]]}, 
             Annotation[#, "Charting`Private`Tag$1541751#5"]& ]}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"Test on dynamics\"", TraditionalForm], 
         PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1b\"", "\"u1b\"", "\"x1b\"", "\"\[Theta]dot1b\"", 
           "\"xdot1b\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]},
    {
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
+Q/NRez6/7L5T64kiV0Hj3tBhyS6WXFbMDWIgv4r8Msu6uqH6dGPyVT2+mC4
ULP+KYwAJyPxriZ7vz4esvHypRAiSk84nc7USoOdKXPwOoaEjDXP26gdC4N9
634EDr8kI6u6d2slBtLhYKpV9tYpGvKtNnxJY8+ppeZikpltvcC18eyeo8Ys
EG0zNW4nD0GozbJ+IbveVuS4tMxIkdDHPZ1fvh+MhY47pnvWyZBRLO9pnmfO
cZCbW2I+/oGGcr9ZK7zmZb+ucujusekBeHBYNyeYff+EXhumZP0hIpPLAuLV
Q4nAF6qofa6NhPbTbPWluyIg/q50zprmPvg5/OquE3v/ujJcuNZNchiSNhQ6
h7P3t4CKYAENGxLadDbw73tKBGR73N3VYUFG1711fLJ3JEPJzZvcJbU01Kv1
4nEre1/oD5biqWFIIr1BzCM3lIKuzPUQbGP7YW3phuI59vsp3Pyezgxin6+r
1UneNAz2rPoa6100CBqqWs5t7PlIdjoxSIGHhP5IZDdaFMeBMzdv3kU+MspO
+lZ95H0MNFKPVY9kDMBoetl4KPv9hUq15WdVktAviejMo3/CYWi2KZgU1QeN
dLuXN9j9e4ziRlfeuiGojD+j/JPd3zdTygrPH2HPm5u0zb9tjgTF29JOCooD
8DPZ0byWfX/T1ulhpukktOTw0171SRgMx02QdQ8NAfzyD7Jl1/OAp/4aWbsH
4VFdi+QB9vVvCV/6KjpCQlfiDt9W3BEFe56aW3K7kVD9HSQYuikcJJKXjkfN
S6Lm72Gv8iMp6DO3kpyLgy3UeBnoWt6bBLVlu2nxcQweK6TeHR6dgppDIuG/
vKvYzz2nrzW7nvgZZqbWuDZCuUgBC+NlwuGW+0mSsu2gx3WzpOkTE+YCL+e1
mXbDsVtov+kmdv26d9au06AfqIb7GXrs3/cXp0V55ZNhmL99XUDahAUhRsPF
106Ng1Szha8xhf08o7QLm00Z8OHjrC7hFhP2buWbGbg0BfeWgz5rvJmBs1oK
RjNuM7BXp7LjStQ09L5SMWxi3yeZr3v+6OhPQS73H8VS7zmInVNdR/VmAL8I
R1XdpQV4aCr91v/COGRZlBKa/uNEKsfuPNY0/wcfJas8fGwJ6Bv/eFRKZC2M
Kq4q+WDFhX7GdJDsXUqgrOlMWawrEfWNf9C1jMwA15rg01Y3SKhFY15NOScM
TFcv/U25QkY3vHym3R+mQo99XuV1fwq60559750I++cLTNZdusuN5r/qHM4N
aADk0au22lYEKaa+0tTLIyApvesexn9F0C+mNOvcLy5U+YFqAZY0FNDZfe9l
KnvOlNk379JJQ83qwmVLm0hI5IxDXvRlSUR7ulqFz4qCRGPOjYvdKIPZ/wIO
hIdMQxBf5MU1V+rg4mYLl+G4GdD9GPhH9UQryM1UV4bYMwGZaYfxanZCq3K2
XR2TCekdtxazj/ZC5uqu5yHsfs05cc/ysvMgXEhVr/jLXn/iUycFJ1JGIeZT
penLnez5LFP8yZLFBGw/vvtf2U8mVARonq09NwmvVT+cKpdlwpve7+J3PaeB
pFqd9J7dr5D/rDo50kZAsw9easp/qYT75mKFH3u4UNnBW7G7F/NAZzlVRX6a
iDqUefg8LBJgVfqwZSOLhHKW7xgeOv0SdC/wjWctkRFv+eqmq5e/ANeFf563
SNyI4/F5wvaF3/CttMUoP0YELX6u3LJbnwsJhYXsz5ShIQGrzg8nDxBRl6bP
5/4YGrI2F3MKniMif76HhP48SUQezrU+4cOedyPsZJ9t7gCOOwpe7X+YUJd9
w8rQuAdIdxNTSrRZwPPi91YPywHIqjmuov1/fx+YM3O2fTkCyorqO5ns/Udz
n8T+bfFcaPxr8sNRv0K4O+w/3/6BiDrr9ujv+ZkCuvQCG6lcEtL3v+8tPRgG
Rrr3zr/PJaPzzu0M0t8P0HilmFvUh4ae87pGTdUTkdNRDkFOgih6nZ86L8/e
f3LFJYXuGXTB51IB3gwaC/z5HsSsO9wHs2qyNwtOsp+nT0mVQb5DYKe59qmi
DQu0Rkw/3s4agzyjF3GUtSyo86DBdmUi2pX0iNuiIQs4RCpPn9EgIQ1sXeM2
jpcwGiVlHrqLPV99q9bReJMAYxy77PPpNDTUot27XYKE0OlVCvz/JNG+w0/b
kh5TkAV/ZHlqTT9UfCpxrGA/d6d8myLFxdn7z5uAFsGjLFA4M30aBROR35JU
YlpRGpiXbzyVF8muR02ez1QPh0FNxr51aeFkdPB66fxd3XSQzV5zbxeDvf+0
uEof2E5CUkyi0UhlL2yuT3OOOc6uv5vd7UunB+GH8fM/AuzrxT3QLCsSJyGZ
buF50epYICbdsdglSUZvPidn9K6LA0fZZoHa9zR0uTtLuINKQl9lSOEa3QMg
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
z31V9KKL8POZms/V0kV6CD+f1fWYU1PZS/j5X5NTBoMBbMLPK+68Evi6oZ/w
8g9V3M7r7R8mvtskv4NiX67xiO/WZeRq3EjwGPHd8oQjtmi94BPfrc5C6zWz
VowT3+3SMDHfLRl84rv1NAsK2640Rny3y94aJyybM0J8txtsAhlHGriEj1+/
sUFmXUUxwny82cdZ1UfqGxDm42cdSrJVtmhHmI+/y/stGPmwG2E+vnVSeZ+T
MgthPv7903d+M2dwEObjOU87lj4z4iDMx1vlJIqU9LIQ5uPLxhc2Juj1IszH
v45P2ja+vYvw8dsjw0WfyXQgzMdP/3k1MmLBRJiP1zBfanI4gYl0+Kv9f/ZS
/VpnemRUGBO5/ymR6TouD/2PTlqqz2OiJ7Y3pmI58jDp3etTKZ7taNd+7jbd
QDoc++EkyD7ahjBfbyLdxDk19y/h5beYeOilPGkmPt5aj3SBPN9W4uPlDqao
uAa0E9/ubvOjf3lKXcS3W/Za0o+2o5vw8xP5zrYdtT2En5f/sz+hX5wFMP/+
7scV9xMJo8TP62K02/qVBp/4eb/F2IIVEuPEz7t3r+rGL+LjxM8r9jsoHYry
iZ+38MehihfFPIB59vAk3vKVW1tQ0bFQx4FVc2Cd1qecfI1OhPn2muj8ARjb
izDfDpUE4anNbIT5dqmm9owxqj5jvt1l6fmNZV/YCPPtsYFBT/bl9CHMt/9p
TNPu/thN+PbS35Fvp2d1Isy3a8xBL1N8mQjz7Qs0KrzYp5nIQFL0TUAGDW55
YBCWR9XPoRiNRgEteZj9Nj9u5n4mgpa/tsQ+l4funBD1xJJ2hHn4cB+dXJZz
PeHN45YWB95tGCM+4E0v1ctz2/nEB1xj/DLTe/E48QEXz1YOa3HmEx/w3LKj
WcuCRwHmzQe1pGdUf2QhzJvrzLPdu28T1U/+x5ureQfoXJbiIMybr7HhcPY9
7CS8uWubtejnF0yEeXP32owyiQNMJLcpyRFcpkFRZupYCFVfY421VhyZLQ+P
i2+oWuBPzYvC3d8VFwvBowc+3686ySf+4M8PWUJLqe+P/cF7FWQEV7bwAebD
//X51AplU/Pqf3x46zzu2BKqP8J8+LLEiZQSVzbCfHhytVv9s9AOhPnwlX3/
2hfsoOa1jPceyltoMH9yn4hpBBMdbPCTzv5Bg9GiVz3MbzMR5scNvCu4L0P+
oET66Cz9S0JwuaDHsawyPvEPG1qduLuGOi8w/53qL8HrVqHO+//4b0aYRsSC
VRyE+e8VGkJd/EYmwvw391ix6cAuJgqxYz5fcpIGZ4wL1NomU+et8uoddydo
UEHrrWhUCBNhvlulb21GsMI48ROPZ/kJPuDxAea9Fw1MprqdZSPMew881szT
o85XzHuf1D1p0O/ARIFSDY32a2lQn6HV3XWJiSoH8w/GvKVB19eZ8pWJVL/0
H99tYZQopjvGJz7jE8doFo+pz8d8t7NE5EZHaw7CfLdYqeY2EMlEGao7JRxu
06BYmZDdALX+550HLn+wFoaKs1ccmEndL8xz1859JL6zno0wz+3+QGARw4aD
ML+tJz0ozaXO19lGidxuGxpcHZfZIHuLiXiFyz/+qKfBtwz5Zs2bTIT57tr8
t4JVUn9QWqXT8vRLwtDbuHT6DjW/YZ773eaB2g5Zqn+86jeD5SoD/Sxtb6rp
cRDmudszl9pAan+8OnCtPu4odX+OHTGNp+4H5rWXio8mmMqMA8xnX1IuLhdy
5iDMZx90z8kwP8REIgKukcLPaVDXYmJjALWeLq0XHJjFwtDHeNut2UrjIKfN
+P7bKaoebZgr8sOEOk/+47PlPj0dv0zdr8bVI2vLI6n+L0vzNYf6+9gfP/ck
IAz19ZcV3lAdBy3m5cn0zTIwumis4N8eDsI8tsFkrWA8dZ54nHyiLmJBg96r
/oQ132Aiwb39n7c+FIbUXu6soF6Peesz3cVwbC8TmZnBqy+CaNDAcdusNKo+
GZefUHNQEoYTNvGzfiwYB/IvjiqBNTLwg/VTWvz////oP95a8dnbt5G2THSn
U0Ff+TMNynL9FhVQ5xfmrW9kfqhV2M1BxxWz/nXdo8FNuet7wqjriWEef9hw
QBhuknPrvEytT3a75gK2DXU9gxsWD5tzkBhXQ0f/rxy0qtf5pmTORJivdpqh
c1mnpg5hvtr62b3w5457iJ/ZNS92fp77X+JnDkj8tXiRXgvxMzcc3mEbdLKN
+Jn11qkZ7tzKJH7mklG6X3p0B/Ezn8qXluy/2Un8zHvKpl+sftZFeOqORgfB
O9PdhKfWbq2uqyruJTz1F8vhV8FH2YSnLkvJdOio6if8tD3N28Fw1zDxNc9c
lNdQc4FHfM2vlizQ/02dq5ifnmq80XzhGZ/4mkPmQf0ZVP+E+WmRMN2mVU/5
xNe8sEpd0n/ZGPE1P9Ndl+GtNEJ8zcmj6p7ibC7hpe+5Hvp53bAYYV76yxK/
k1ZpDQjz0p8VHavctdsR5qVfjOYJRcZ2I8xLWyz8Kv5anoUwL20fF1m4ZYKN
MC+9cs1eU5mtHIR56bJs84CDQyyEeelLx2oXqm/pRZiX3hS0xa12dxfhpYUv
Thg/VOxAmJceY1eNOFH7HfPSvvM+Py2JZyJvee7Ym24a5Hk/sI4NZ6Lvd/Wf
D/jIw8NtnVEHFzDR5h3pe/xZ1Pyiuzp3vnc7khV4/U7fnw7XOjjX0nzbEOat
newfHZyv9pfw07d21c0/F9NMfNKxnbbHij1aiU9a5nluuoZPO/FFnz/XLhI9
t4v4osNfv/FgmHUTnvpsU8fxCkYP4ak9VzW92TPdBzAPfc5m+lrEzVHil06n
dyozl/OJX/rPIkHNTWLjxC9tV3rhwvtZ48QvbX3vqZL1bD7xS79fuyam9RcP
YL55ZeVVlVcrW9DGeNumPLU5UP5riImeYifCvLMxpMdtvtKLMO8sW7gjrluf
jTDv7KIRcIq1j4Mw73zHuvWzyg82wrxz5ALLMzbv+xDmna+cMIr78qOb8M5f
GpjvFOQ7EeadlSqY4UUnqHr1H+8sY9pdE32Kmn93+BrtekiD9kML7gxS9Ukz
m3WgU10efii7rvbZkYlSZTa33suWhxVSO8Tsy9sR5qO1vp3iN3nVE/74h9sa
wcU1Y8Rn/UIwqbeV6i+wz9psz8osJ2q+xz7rDwUThTVufOKz3iN92608bBRg
/vilXUzfqzwWwvyx9qdAn5P6HIT543u1Tu5HqfMG88cOnhZ7TuZ0Ev5YomZK
v/E1E2H+uPCh4rMtzkykfF64a/4lGlTTDGm0oeplxQHOsx2z5GFL+7KW4AAm
WvP6k9lSJSE4+mp92StfPvFf29ytuqKqPE7818F+hqJ6VH+IeeH3Udy9Yo/Z
CPPCEbIe+/uo/gnzwrVx4b5njrAR5oXXGxR9vRbRgTAvvDDM8Ie5NRMl5AXr
qhnRYLzdJ1eb60zku/Bv4rVvNPjEc+Awl+qfME9cxDdQ/xb5B8mvUxQeCBaC
QnmWM71+8Ik/+0ultNQDqh/APPBgcn+n/CIOwjxwYXhx8hZNDsI88Ptvcx0k
2qnz+D8eOK+aJ/DQhprnE6wMBPxo0Pr345n9SUx0z6C/6hKfBi3OVx4pPM9E
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
AESsQDI=
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1:eJwVz68vRQEYxvH34jIEYxMELoHgR1AEgk11r+BPODaGjbGRiAo3UdD4DwgI
DEGTCO5tmCK4NpuRXJ8Tvnu+z/OenbPTkyxPL9VERAYJ5pRZ5LFdF/FUGzGJ
Z30fnZi3n9n6ca2v4chW0RP86AXs2Ep6Hi/6AU5sf/oK6vGg57DLu9wX+Dkf
QIn34sZ+KRuxYf+Qo1i3H8tPWyYbMSPf9GG06r/u97wDzXrR/ZtPpJs+5V7k
ZXtVFtL/lENocX91v+Nt6bf1LfcvPo5Dt1NZta3inY+ggT/KbuzxnOcW+QUf
RJn34dZ+JZuQ9e5NtwofQ7v+DxZ8M9U=
                "]], 
               PolygonBox[CompressedData["
1:eJwV0rtPk2EAhfG3WBZbShMcDEyysCi2hYTVRCZAhaqIq4mMVi4uXDc3KLh4
I0Gg/Ae4aetClUE3F+MlDAJxAxJIWgR+HZ6cc573/fqlTa88ymWf1IUQIsij
0UhgAhWyJxrCywshxLDM3cNV5PgPXAqb9iSq7vfyr7g43nH3ked+2v34a1/D
U+6jnUbZnsKJ5/v411wDVrhBLHC/7AHs2O0Y4Yp2Bp/toh3DjD1tF/R9/XHt
nXoGFf6rbMYcfyRv4r/33pJvuKpMyO+yFaue2ZARROtDGHf2T+/CJfuB80X9
Nx/srNy225G0d52X9SZctJ87P9Rv4LJ93fmoXuJPZYf8IdvwxVlJxjHLz9jr
+oE+XPstavdR5b/JFszzx7Ibp77XbfmWa8Sae+/tOjyzh+wX+h/9LvbsFMa4
T3YntuxZnPmsO/wSl0SBe4h07c+DCM4BedpKTA==
                "]], 
               PolygonBox[CompressedData["
1:eJwVzztPk2Ech+EHoRHQIiycRBNH/QQK9PQVGJAeTLRqAprIahAUTFSq0TBy
GBGlrYKRxVUXqIcgokwwok6ii7Dp1eFK//fvWd6eyg/33TgUQqhhioSIs849
6umvC2G+NoQ2yvoiZxmxr9p6+Kzv08B5+1NbOy/0JaZtuzrNL32OW7Y13cu2
+zQb9rd+mzgcCWHC2293jAfein7/2q7xTzcyYFvQHbzUb3SEmzqvZ9zf3Rn2
dDejtoqO8UVPcoS0/ZmtkyV9mVnbD52tfouu6FYK1f+ux9zv3XF23Geq3+/b
N729cx/jrreCLrn33dcJHLVlbM/dx1nWV+jltv2DLcFX/ZAoWfuirYtX+iox
7tg/2pJ8048o2w70ZtT/5LGtmZy9aD/Baz1IkhYueCvZT7Kih5iz/dQ5/ugU
47ZPOsWWfsJ/VZxKPQ==
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{504, 652, 526, 708, 815, 955, 1134, 555, 595, 670,
                 778, 918, 1097, 505, 554, 594, 669, 777, 917, 1096}}], 
               
               PolygonBox[{{615, 689, 553, 1308, 1095, 1274, 916, 1057, 1236, 
                776, 883, 1024, 1203, 668, 740, 847, 987, 1166, 593, 633, 707,
                 814, 954, 1133, 552, 551, 550, 549, 548, 547, 546, 545, 592, 
                632, 706, 813, 953, 1132, 544, 667, 739, 846, 986, 1165, 591, 
                761, 868, 1008, 1187, 631}}], 
               PolygonBox[CompressedData["
1:eJwV0LtPk2EcR/HH3lg0RGkZDIthcYNoWy8hbO5SuRgukrioiy7S6oZggpsh
KkzgJbGt/AGwKsgliLq5uGhrYgQJg5o4FMLnHU5+33OedOh76vqdwu1YCOEI
ptFMunExHsIa7idCOMd3cZX/wKw2yhfQyl+hT2viD/EJF7RV3NPz/DcGeB0z
2jX+Bhn+Er1aih/gFv+HqjbJP+I8f4+SluOP7Iy9gR3e6dbRr9fwzB6Jfhe9
o6Ql3CVU9Xb3C9J6w33hXnGT3k4mQ7hk/8dj/Shvsz9j3/sJnrV/4qb3GP/r
VvhE9E14l72HcT3Fj9lvseX9tPs1+q7eVlC0s/qUnbbXsc073Br69O94ag/r
RTtuL6LCW/hzFHiCN3CD/0FZe8A/IM+XMaad5b/Qy7/hiTbEy9H/4/Po0eJ8
HJvIae9wVz/DB/Eax7U5XNZj/BDVAkm1
                "]], 
               PolygonBox[CompressedData["
1:eJwV0klQzmEcwPGn3oqLGRRvZMtuuDq4MNooN3dtSJPqzXLBibIfbOFiu9sp
ydIlJ81QlKx1teRAmEma8XkO3/n9vt/nfed9n/f/5lenNjemhxDSMIB1pAZ7
0YUViRDaUZsRwhx+EcMo097guL6J78FTLNfasEPP45n2JkzgjnZBG0IpH8Ax
rYz/QRX/jmvabn7APtn+GE/4Mn4fNXw2P2OfZ+9Dhj2Ff7jNzztvsU+zP8Mn
vsocxka9H0ftpfp68xdOarlmD37rlXwEV/kuvsYcwX5tkvkofjd9sTmIpfGe
5j1zuznLWV5mCCX2MZzWp/C59l4keDZfbf+MRp7g4+Yt3ur9Sb7W/gPN8ffg
U+3d+Oh8pTmEDc5e40i8n37CnrQ/j3fjFfwbrvAmvs+eZe+M9+BL+F1s47k8
3d6Av7ipndM+oIS/wuH4mTyFzvgbxOeLrXoyvg7xj/UQi+IzQbWzmfws3qNY
60OLXswb0IGF8f6o0mfE54x3KNJ60awX8VGU86+4rNXzB8iP3xmVWg5Ps9dj
DDfic9DeopC/xCGtkP/EFv4Fl7SdvB0L4vtQoWXzUxhEgfYCB/UCXoc2zNeu
o1yfzv8DuORuQA==
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1WWYVlUUBtAZSumWjiGlO6RTugaUDoeUGkmlQwEDC1tQMcEEVFRAuru7
TRQRGxvXfvyx5t173+Gec893PyYpJTV5dGJCQsI1PyJn+VGATeoZdKIGaZht
XpDN6pl0piYvmNXinHohI0jLvWaF2BL3pQu1eNGsNufVixhJOu4zK8zWWItk
avOSWR0uxFqMIj1zzIqwLdaiKyv0bfhJvYw6LNbX5WKszWjW6Lvyt3oVGZir
L8r22AvdeF/flp/Vy6nLy/pb+Cz2xi51CplJ1X8qu/GP+ry8m9XqQ3I4ublB
P08WY4f6hLyLOeotsg9XSB/rMDn2wG2ufyDbcZlf9GflhHhmVuj3y6FcJQdf
Mo1fY9+uvyLr8S2f60/JsSxW75YDycIXTI19ma+NtflXfUHewxr1YTmCPNyo
v18WZ2ecJ1vVfcnA7foPZfvYS5wt9XhVXz/Wi7NlDOvi97ke50lGHtAnsSvO
ju7U5zWzBvGc8WyMJRMPmpVgd+yLHjTgdbOGfBVrM47MPGRWkj2xFj1pyBtm
jfg61mI8WZhvVoq9sRa9aERWHjYvzb64L71pTDYeMS/D/rgHfWhCdh41L8uB
uAd9aUoOcpKLx1y/mYNxL/rRjNw8bl6OQ3Ev+tOcJWaNuRTPzwTysMCsPIfj
vgxgpb4Dv8W7RguW6pvwTZwHE1mv7x7/abBW5OUJdQWOxF7Ypu4X7zt36D+S
HbkW7wIH1MPISUv9m7JpvJvq03IcS9R75CCyxvdJv0H2IJGLTGKd+RE5kh/I
G58ZM+JZuMn1J2XFeA6O6k/KMfzIAv122Z/v432O7wdT4ntGiusfy058x+/6
c3IiK9UH5Z3kineL6dxq/pZsxmX1GTmepeq9cjDZ4vuk3yh7kob1+qNyVOyb
fPqnZCWOxTmzQz2AjAzUfyI780ecM614W9889htnyyTy87RZZY7HmTCI1rxj
1oIrsW8mU4BnzKpwIvbBYNpQkEIUpghFKUZxkihBSUpRmmfdoyonYw8MoS3v
xucf5x57ZgpleM6sGqdiDwylHe/F2XI19sxUyvK8WXVOx1oMY5W+C3/G50d7
lulbxXsSa7NPPYTsTNNvkr1Iywb9MRl/KPPFd0+/UNbgTOyRnfF+kyneAf1q
mcxf8bnQgXKUpwIVqURlqlCVaizyb2pyNp6F4XRkuVnreE/j2ZnOZn1v0rFR
f1ymkp9LzEz8/+96ddf+A6tc+sg=
               "]]}, Annotation[#, "Charting`Private`Tag$1541836#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1FmUj3Ucx/FnNjJjjIiEG3VRqcwYMkMz5ZzqHO2MZSxFKa3n0GKtjKUS
dUqUfc8slraLtnOyx4whWlQXRYWYolCKyVh6fS/evp/35/v8zX95fk+H4aNK
RqYkSVLpn3r0Sk+SOWlJ0gRLUpOkBB3xn91tdnP1mViq64trMFL/mS4XW3kz
PIszXnO73Tx9Fpbp+uFajNKv0+VhG38ODa6/Qz9f1xTLdf0xU7eX98Yhfh2e
1K3nnVHNn8dZr79Tv0CXjRW6AXhDt4/3wWHeCU/pNvB81PANPAtlfCIvl/+S
R8TflPNxRr/LbIvX9KfMm3HO373LXKhrMJuZ35mX422v+dBMQXpGkoy2OyIX
4BJeaj9L/kmf8BJzP++E5rzOvlpuiUw+zf6k3BNteK790/JG/Xmzi/mDeSW2
2200m2KSvoxXyH/LD8d3EdejQb/bbIfX9afNW3De57rbXKTLwUrXfcRTMYYP
5LPln+W++I3n4RndJt4VtXwSLvi/7tEv1jVHuW4QOiNBCnKQit6uW+Kai1HB
ByMfo/WbdddjB5+MNPTRL9W1QCUfgjd1v/B++J13wRjdFt4NO/kUVOpO8kdw
lqfHPa9bxluiin/M0zCW38vfkvfL/XFAzsURfU38png5PjsfK38uF+BH+Sp8
od9kZqOR32+y3XG5CK35VPsq+R99Kn/UrONd0YKfs/9Sbh+/K59pXy/fGvcl
z4hzKS+PzxPvx/zevAKr7D6J+xDj9EfNQtynn2Me0A3AQTkPR/XbzVaYHt87
HydvlQuxi7+AVbp/+WNxD/JGcc51K3grrOZDMVd3kJfiD94N43XbeHfs5i+i
cZz7ODu61ljDh2Ge7te47/AnL8AEXTXvgRvju8FLuCjOvt1K/aVYy+9HYTyb
9DW6G/AVn4YmKNWX69rgHf4A5usO8UE4xrvHsyrOFi/CXvlqfK3fHGcfjf0O
U+xOyMVxP9itNk/pHscFnomBugp+Gd7ln/IMjOfD+QL5sDw47hHeI55zulpe
jG/4dGTFWdJX6triPf4gFurq+JB4L7w27jHMiM/OJ8o74nvDPrljvH/vfY/d
FjkHU+1m8DXyafmJeE7F8znOpa5Kbof3+UMoQpl+p+4mfMtfQXacy7gHde3x
AR+B4ng+xLnQ9YznJn8Va3X1fE92kvwPXrTU5w==
               "]], 
              LineBox[CompressedData["
1:eJwV1EdwVXUYhvEDIdRhpEgTAgkkFAFnXMCMOgMkQCIdXVMDCiok0lTaWGhK
UapSlOYKpSa0BJC+QUEISFdQXIDSm4Ig/L7Fk+993i8nufeee/4Z+YWvF5RL
kuRDP8qqJ8mc8klSA/0qJMmalCRJQxEfjk6oif523+kbo5i/hWW6y7wfbvFs
fKQ7zLNxkn+OjqiFAXbf65tgM38bOfhYf0SXg1P8C9TGQP1aXTq28Hfwte4K
74/bvDM+0f3MO+M0n4u1ugd8BMrhWd0g3To5A1v5CHyj+4sPwB3eBVN0R3kX
nOHzUAeD9et1TbGNj0RXTNUf03XFWT4fdZGv36Brhu28ALmohyF2G/WZKOGF
yMM0fZkuF+f4AqzTPeQjUR71dUN1m+QslPISXhHj+bt8ufy3PBB3+SFeDzP5
q3y6fFzOw29ya5zX7zdroHKqzyHuq9whruUL7dfL/+lTeIF5mbdDbZ7Cj8pp
qM7n8gdyLhryBq5/Qy7SPzabx/02M7HDrtSshAn6q+ZLGKVfYV7VDcI9/iOv
j1nx3sxsdNPPME/E+8MFuQ1+1R8wa2KqfhHfID+SC1EBx3hjzJOfs39TLpZb
YCffEZ8HJvLRfKV8TR6M+7w7PtX9wrvF58m/xEbd47gfSEVD3TDdZrkldvEx
6IHP9Cd13eO186/QKJ5B/RZdK/zAx8brQ0/MtDul74GLfDHS4tnUb9U9j918
HFbprvN8/MN7YZbuNO+J3/kSbNL9z0ehIsp4E8yPZz+eWXmb3DqeNTkLe/Q7
zSqYpL9mvoz39KvNG/EMuv9DzD/5i3E/+L/2P8kNUI3Pjvsr50THe9vPls/o
n5i94n2abfGM/R/2B+Va8b/5tDgT5I5YaldkPol7hity+/h+ycfNdCyIsyjO
FXm73Cae9/heYq9+l1kVqf72ZLvr8iuow4fZv49v+U27ofFd530wR3eW98al
OCeRHueNvkTXFvv4B+iLDDRFM2QiC83RAi3jnHFdqWtewH4+Hq/F2ao/p+sT
n2ucjSjWJRijq4wTcgYWyg/NPDTy+lv53adbfMGx
               "]]}, Annotation[#, "Charting`Private`Tag$1541836#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1XfclmMYxvEnbSJalIZ2SZGWhPbekUpLpaX0pq00Ke1o772L9t6L0DJS
QhFCZSahku/5x+9znMfvfsb9Pvd1XW/utkmNuiVLJBIbb0skcqRMJHKmTiRG
p0okMmGb3gf1wyMXHkDumL1ujNdkxna9LxqgKr+OK4ev9TnIE+/jx3JZsEPv
h4aoxq/nnsA3+lzkje/gx3H3Yqf+ChqhOr+BexLn9XnIF9/Bj+fuwy69P55G
/vg81ybwWbFbH4BnUCDe69qbfDbs0V9FY9TgN3JP4Vt9PgrG5/Fvcfdjrz4Q
z6Imv4krj+/0BSgU38FP5LJjnz4ITVCL38xVwPf6QhSO7+AncTmwXx+MpqjN
b+Eq4oK+CA/Gd/CTuZw4oA9BMxSJz3NtCp8LB/WheA4PoWi83/Wprj2AQ/ow
NEexeL9r0/jceFd/DS1Qh9/KVcIP+mI8HJ/JT+fy4D39dbThjupNcENvibrc
Nr0yftSXoBt3Rn8BafFI3B83w5wXh+P569+bkzBcb6sfMzfFTX2k/qd5EFrp
9fTt5iqYYU6Jn+I3kD9zfbHcnAlL+ST5BbdFtpcL5J14F7fr4+Q/8czla/Id
mS3uAcXjN5Mz+fUyn5wsE9iP92M9yguxV2R3uUTegxGutZPHuWaYY06L//hR
8io3GK1jH+o7zFVxMZ6X/ou5H5bp3fUvzR1wBx6NZ8PNMufHB/obeIE7oT+H
W/rzsXe5nXo1XNKXowQe4WdzBfBh/M5oz32kN0cCbWIvc7vM1XFZX4GSKM7P
4QriSPxN8exQCo+6NpcvhKP66PgtUBpl8BjKxn143TyvKYxj+pj4G/B4fIdr
8/kHcVwfG/cXZwW/m6uBn/WVKBffyy/giuCEPg4d4qzg93A18Yu+Ck/EvfAL
uYfwkT4eHeP84PdytfCrvhpPxn3zi7ii+FifEJ/Pfay3QDJ0ijOG22eujd9i
f+m/ml/B2/rL+lfmjkiH8fq/8vU4k+K30Rebi2GKORk+ibNN/sC9jDfjXsOb
W2JurGXcZh4t/4rzUA6Rq+V9OILOcabF2uU3yjpypkyFg/g99rf8jd8p+8sV
MjM+wDuu95Bn+a2yk1wo78J7sa/0CfJ67GWsMd+P8vG85RLuYUyNe8WncS7L
H7keeEvvFD72OpLjxThXuQPmuvhDX4Oe3Dm9M+5ChVg3sefjnMFJfSK6xDkb
fx9XD1f0tagY64ZfxhXHZ/okdI1zlj/E1cef+jpUinXDL4/9h1P6ZHTmTsY+
Rgq8FGdxnC/mBriqr0cv7uv4e5AelWNdcSvMJXBaHxhnmblnPHv9Rf0z8/OY
Z74jzjvzGHlNDkW3ONvj9zc3xCxz6lgD/PB4ptwuOUCulFnwITa43lt+w2+T
XeQimR6HcXesM3lD7ovzTK6V2eNMQxXvf0qu5DfIknKaTB7PCp+7Pkhe5Hth
qTkDpsYzkafifEEqJMX/oPhecyNc00fof5hfjbWq99HPm7ticdxfnLOxZuRN
+Qaqel15fZW5FKabU+AMP1he4nbI3nKZzBhnOKbFc5en+c2yrZwv08U6iN9T
Hyv/lnvksNjLMiuOonv8D4zP4jfJp+VsmSbeE2ezvMINxCrzvdjE95XfxppB
BkzU/5MjUc31Cvpqc2l8oQ/RL5v7xN+mvxS/s7kd0sTZwLWKvWp+Bv/om1E9
1jv/NlcGX+ozYi+jdawHrjH+1begRqz32O/cY/hKnxl7DjVR2bU1fFmc1WfF
+kYt1EYd1EUVr1vrNY/jnD471lz8X4rziHsW1/Wt6Md9F+sZGTFJvyVHYZ05
B06gntf+D1TpZPE=
               "]]}, Annotation[#, "Charting`Private`Tag$1541836#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1Xf8jWUYx/Fj/uy9M7KVUmQUQlGRkFFRIZKGTWVnZWbLllGZlYZKSWho
yF7ZlL33TOl9/fF5fcf9nHOe85z7vk7h1p0adUyWSCRuJU8kNiUlEv+mTSSe
xJo0icSrKIUU2GztP31D/CG/hjuQElusbcU2bMef2IGd2IXd2IO92If9uOV9
GmGt17fDnUiFIukSiTf0Z/nRqIcDrk/oG+vXye1RGtV043TpsUhOjaK6N+Vz
/Jj4DvJyuSLqy0/KH/AFsFzuJa/jH8NfPieZ3IRfb20Qv53vwLfgP+e/pKXp
ZHqC3mWtOj+e/5RmoKPoAfoj/ch6N/qLvIzWoHPopXjGNMl6Mdpd/piel4fR
3fIqOjaeNf1eXkor0ffoOdrAWkP+Q74gxvOH6ff63vx6vjb+9r2Sy0/xG6x1
REv5i7h/3C3XkCfwGeM+5DQorushX+DHxbPDQe+VQv+0fqPcCWWQFoespbT2
jLVNcmfcg3Q4bC2VtabWNstdcC/S44i11NaaWdsid0VZZMBRa0nWnrW2NZ4l
yiEjSuh76i/y4+NZ4Jjr0+if02+TX8d9eEj3ri4TPpEzoaSul3yJn4BGgW6u
rhBWyMe9X1rd8/J2+Q28IC+J54by8sPyRD4zFsdnyr/yD0UXZ0juzV/mh/N7
+Hdj3/Mr+PvRWG4sz+NvxwT+CF2p78NviN+V1qFz6bU4C7EH3V862jzOAP3T
9W+HxmvjLMit6JfyV7QMnUJP0tW0gvWadJL8Gc1CR9O/Yj/H9+V/4x/G+/xl
miXOPt+Hv8JPjDMpr5QfQBO5iTyfLxz7WD7pPtPrWsg75O6oiKw4ZS2DtZbW
dso9UAnZcNpaRmsvWNsl98T9yB4zQ99Xf5WfhKdwxvWZ9K30u+N84wHkiJmh
f0t/jZ+Mp3HW9Zn1rfV74tygMmrpJuuyxnORc+IuXT/5Oj8Fz8Rn6hboiuAH
+Zz3y6J7Ud4bvx2q4BHdFF02fC7nwt26/vINfio6yKvkymga9ycv5IvGfuGP
xkzR9+U38o9jHn+dnve5Wfk2/D7XDOZ38H351vxX/Nf0HjqVnqK/0KrWH6VT
475odjqG/k1/ihlh/U36u/wdrUk/oFfif4DmjvNPB8S5ov/II+heeVrMGv4H
vgpmxnyjzeLZ8Yv4YvE58lvyJr5uzBvfJZv8Er8/1vCi/LV8Lx6UH5On8Tmw
RM4Ts0Y3UL7JT8ezuOi9suvb6g/I/VANeWP+6Afp/+Vn4Dlccn0O/cvxfyD3
Rxt5qVwW1eXa8nQ+Z/wfxF6W1/C1kC9ml/w2/x//Dr8vZnbMSv5H/pt47nQW
vUB/i/livWn8X8hf0OJ0Ij1Gf6Y/x73TzTGX6BN0Pr1B18e5dN856SvyR/H7
uX4I3SkP4F/iv+HLxe/Cn6Y19HX4GXwujOUPxpyIM8j/wT+C22LmyoP5W/zM
mO3yT/FboLncTP6YLxFzRb7ifnLpXpUPygNjBuNx3Xu63LEf5fwxn3VD5EQ8
E7kFrnp9bv1rukPyoJizKIDy+qH6ZJgtt8Q11+fRt9MdjhmItvK38n2Yzp+h
v8YetlaXzpTzYKlcEBV0w+TkmBNzHte9b159e92ROFcxG1Ao5pd+uD5FzMaY
s7jh+nz6Drqj8RvE2cftMdP0I/Qp4wzFucQ/rr9N31F3TB4a5xFP6Gbp8sZ+
kQvH3NO9I6fCh3EmcNPr8+s76Y7Lw+JsoJ5uduxHfCsXiTmoGymnxly5S+wr
vhraxHmRP+FLxmyIvS9v4evFGfE5BeTO/Im4T34XP5x/mV/Gl8cM/iytra/P
z4n9g3H8IbosZji/ll9OH43vQq/StbRozF86Sl5Mk+hIuj/mK51nvStdHd+L
Vo89QC/S32NmxDmmi2Mu0FJ0Ej0ev721AfxWvj4WxLyKc+q7FeS78CdjfuEV
+Tu5AurIDeT3+fwxB+ViMdd1o+U0cRZjv+F53afyHXGu5Vveu5Cuq3wq5kGc
ARRHVf0Yfdq4l3iOSMRe0XfTneZHxl5FCSSLfWDtdWtn+FGxT1ASD+rH6tNh
Ydw/mus+k++MZxNnUN7GN4hr+Jt0A01u7X8TXprd
               "]]}, Annotation[#, "Charting`Private`Tag$1541836#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
               "]]}, 
             Annotation[#, "Charting`Private`Tag$1541836#5"]& ]}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"Backward Integrate feedback solution\"", TraditionalForm],
          PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1c\"", "\"u1c\"", "\"x1c\"", "\"\[Theta]dot1c\"", 
           "\"xdot1c\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxd0n0s1HEcwPHrlstDoWKY4pIMpSU9KBcf5zyc5ztPJ0+xhBjX6A8Puy7+
EpJllTpdD1qZ5GEY0+o3T7Osw8zZmJaZIjLj1Bg9zefWfH7bb7fv5/V53+13
d4eSssTJbBaLlfb3/ve6dS15KN3XU7IbLQAHwNp26cLq8LqXysoM58bETSDu
cL96QWWCc3OozUssm/xhiucDEFCbay11m/PYOnOhEPSuiE21+zZwL651zYyj
3bcF64yS7jyZ9mxHPs8eikzuC90k+3HuCCKo4MSka9/vGNk/DhnPlco5Zi/O
TxB3Bge7hfYxjRHOTxJ3AYlNpl1X126cn4KXdk0NkRVL+DynocYpoa60TR/9
DOnPwht+1scmfV2cu4KDawpPeUkPz+fI/nl4NxPbtqrm4NwNNIZJuR8stT2P
7F8A/vi1J4pmHZy7wyPNXKnLV23vQfYBlu0zHkwpdm7N5UDcE6CkMsu5jI3u
SZwPXH+lmU8z/k/kfGj8VtXdqdyBe17b9+VewMvO77Pq+I3fl4C4AIpadC3Y
ZRvo3sS9wYi3WGDZvIbuQ9wHJtjSpQDuT3Rf4r6QMHhZIhjSoPsR9wO3cE2r
tHMZXUhcCArzcunMhPb39ifuDzcSVJsKySJ6APEAOFLMkTEh8+iBxAMhK19Z
c7dyFj2IeBBMd3bVi6y/oAcTDwa50Ubrxuw0egjxEIjJ2VAL56fQQ7c7hMLB
wQLPcu7nLZcTZ0JhKKeen7prEnsR6UXQUcjmCbjj2BNnRDD2KlUhLRrDXkx6
McT/clyROYxiT5wRg5X5HsP3BiPYh5E+DGb6DVaO2g5jT5wJg8dpfoWt4yrs
w0kfDpm947fVPQPYE2fCIU8WH6TZ7Mc+gvQRUO2u+9pe1oc9cSYCbqXvUkW5
92AfSfpIuFPPGbF07cKeOBMJyS9W1U6JDPZRpI+C72GiZ4af3mJPnImCsevG
A8UN7dhLSC+Bun351TfNWrAnzkjgashC1WhvPfbRpI8GRx3bWOHDp9gTZ8iZ
dZH0/89/AClQJ3A=
          "]]}}, {{}, {}}},
      AspectRatio->NCache[
        Rational[1, 3], 0.3333333333333333],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->400,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 105}, {0, 6.4223152395713035`}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.864135238134066*^9, 3.8641352749121633`*^9}, {
  3.864141785675068*^9, 3.864141806351376*^9}, {3.8641418573518705`*^9, 
  3.864141877509347*^9}, {3.8641430855573835`*^9, 3.864143092071275*^9}},
 CellLabel->
  "Out[3551]=",ExpressionUUID->"19e2174b-6e97-4980-9471-79bb6405060f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.9624060250883033`", ",", "3.516344052074593`", ",", 
   RowBox[{"-", "3.977778245413834`"}], ",", 
   RowBox[{"-", "3.977778245413834`"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.864135238134066*^9, 3.8641352749121633`*^9}, {
  3.864141785675068*^9, 3.864141806351376*^9}, {3.8641418573518705`*^9, 
  3.864141877509347*^9}, {3.8641430855573835`*^9, 3.86414309214825*^9}},
 CellLabel->
  "Out[3552]=",ExpressionUUID->"41628d19-ba96-4dd0-bc19-6e89c3b1e036"]
}, Open  ]],

Cell["\<\
Observations:
The choice of n is critical and would determine the speed of the algorithm. \
Smaller n has higher speed but may not converge and hence would require a lot \
of re initializations of the initial guess, while a larger n would not \
require a lot of re initializations but would take longer to converge. A way \
to choose the best value of n for a specific system would be extremely useful.
Furthermore we have been outputting the distance of the initial guess \
propogated to the other boundary and the desired value. We are doing this to \
design a stopping criterion. 
Another useful quantity to observe would be plot of this distance as the Find \
root algorithm progresses. (We want to see if it is monotonic)
\
\>", "Text",
 CellChangeTimes->{{3.863704362873541*^9, 3.8637045081791234`*^9}, {
  3.8638919339126487`*^9, 3.86389212755976*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"4eb81403-a99c-42b7-b4a4-36ec4bd675dd"]
},
WindowSize->{1440., 747.75},
WindowMargins->{{-6, Automatic}, {Automatic, -6}},
Magnification:>0.9 Inherited,
FrontEndVersion->"13.0 for Microsoft Windows (64-bit) (February 4, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"f891f112-c914-4bf5-b27c-d7c0d8607b34"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 60741, 1521, 1817, "Code",ExpressionUUID->"b098c715-9c30-421d-bfce-eae26b7e4e91"],
Cell[61302, 1543, 354, 7, 66, "Text",ExpressionUUID->"9be2365f-c4bb-4396-8de9-0c9df9f460d6"],
Cell[CellGroupData[{
Cell[61681, 1554, 8156, 225, 249, "Input",ExpressionUUID->"53d64360-9130-4d93-aa11-669324ba78f7"],
Cell[69840, 1781, 41692, 775, 185, "Output",ExpressionUUID->"2b61f7de-7bc6-429c-89f2-e460939b40b7"],
Cell[111535, 2558, 47305, 864, 186, "Output",ExpressionUUID->"3f60af30-6841-4ab5-ad56-ad90687a8b8e"],
Cell[158843, 3424, 47764, 878, 210, "Output",ExpressionUUID->"657363ae-f808-46ce-9153-03b58f122ea9"]
}, Open  ]],
Cell[206622, 4305, 258, 5, 45, "Text",ExpressionUUID->"b6d5a503-f5ca-471f-9280-ef8cf6caad0d"],
Cell[206883, 4312, 30574, 784, 781, "Input",ExpressionUUID->"af3ea33d-8e3a-4566-b4c0-08bbf9c4fe8b"],
Cell[CellGroupData[{
Cell[237482, 5100, 11581, 328, 489, "Input",ExpressionUUID->"3024c605-13d1-4af1-8ddb-6b0488dd66d7"],
Cell[249066, 5430, 381, 9, 28, "Output",ExpressionUUID->"04a5e842-2400-4c07-936c-36bdbe66d939"],
Cell[249450, 5441, 204570, 3648, 361, "Output",ExpressionUUID->"27570317-3398-4ce0-a135-cb59b951f3d4"],
Cell[454023, 9091, 363, 8, 53, "Output",ExpressionUUID->"fc1ef182-c5f3-468a-8807-a35fca49830e"]
}, Open  ]],
Cell[454401, 9102, 179, 3, 25, "Input",ExpressionUUID->"e3b56381-3091-428c-953b-8049828b4235"],
Cell[454583, 9107, 203, 3, 45, "Text",ExpressionUUID->"78f72274-21f2-4a3e-a828-5906a5fe2643"],
Cell[CellGroupData[{
Cell[454811, 9114, 9989, 274, 301, "Input",ExpressionUUID->"b5dee5c3-2101-40ff-b338-91333f517d06"],
Cell[464803, 9390, 854, 16, 26, "Message",ExpressionUUID->"45a0404e-b4be-440e-88f2-2ff609edf2e6"],
Cell[465660, 9408, 268345, 4703, 361, "Output",ExpressionUUID->"19e2174b-6e97-4980-9471-79bb6405060f"],
Cell[734008, 14113, 499, 9, 28, "Output",ExpressionUUID->"41628d19-ba96-4dd0-bc19-6e89c3b1e036"]
}, Open  ]],
Cell[734522, 14125, 965, 17, 149, "Text",ExpressionUUID->"4eb81403-a99c-42b7-b4a4-36ec4bd675dd"]
}
]
*)

