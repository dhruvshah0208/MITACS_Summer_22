(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    524197,      10520]
NotebookOptionsPosition[    521169,      10465]
NotebookOutlinePosition[    521605,      10482]
CellTagsIndexPosition[    521562,      10479]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"T", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"x", "''"}], "[", "t", "]"}], "+", 
      RowBox[{"x", "[", "t", "]"}]}], "==", "0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"init", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "[", "0", "]"}], "==", 
     RowBox[{
      RowBox[{"x", "'"}], "[", "0", "]"}], "==", "1"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"event", " ", "=", " ", 
   RowBox[{"WhenEvent", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"x", "[", "t", "]"}], "==", "0"}], ",", 
     RowBox[{
      RowBox[{"end", "=", "t"}], ";", "\"\<StopIntegration\>\""}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xs", " ", "=", " ", 
   RowBox[{"NDSolveValue", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"eq", ",", "init", ",", "event"}], "}"}], ",", "x", ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "T"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"xs", "[", "t", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", 
     RowBox[{"Min", "[", 
      RowBox[{"end", ",", "T"}], "]"}]}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.866555960651078*^9, 3.866556019012478*^9}, {
  3.866556610116088*^9, 3.866556682140133*^9}, {3.866557347186178*^9, 
  3.8665573814822454`*^9}},
 CellLabel->
  "In[615]:=",ExpressionUUID->"2f8dbb02-c7c0-432f-b262-a80ee09c7f5b"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwV13k0VW8XB3CkFCEkmYdSZioqVLuQISpDKmOSJImSvFKZpyQklFnRZK6Q
JkqiAZmHEiXuPefem2s8KD/e7a+7Pmvddc5z9j7n2d9H3tXH+iQXBweHACcH
x+LvvpNE61vSdpf2ucClHByjwG0ocW5AXBtEioUT9nCOwpacO5nPxI0g7doj
znCuUTBv6n6aJX4IiqOG05cuHYUjbtNvksTdoOaFW9YK3lH4oRlteEPcDyI3
5v1euXoUckUPRsWKR4DqQW83DqVRCF3+bOM18WRIStnyNf3gKBy1u1s6OpYP
HxXmzdfkjwLfQqijiUwpmIWMkXpjo6BoNUK8v14OHXVKjzfrj8H/mnXhzuQL
SJJQyoy9NgZi5UL9nJw1UNEUZN/bMgaVg4aNX3fUgn1USoys1DjUemZJ2rHq
4OFdsQXqxDhMbdgpWHy2AWK0dhhJ3R8HrtnCVZKKn0G347RJKTkOWxdcKm1K
GkGncFDx9cYJaIzQbq5X+QpfWz7AU9cJkE1kzj4eaYHTodobb+ROAHN6oL9T
qw3YfmvO7OmZgHzGq88C8e2w9EjDsKfwJAhIP2QPDXVAQURh+y6zSYg7XeGe
u74Lhi0Y7ocCJ4HaXTjkEdwN8qfeqB8sngS/zXXla973wEzzls633yZhoKTu
eqv8N4j9XRCYv2IK/nl2ZCgHfodwKclZY50pUN3DM+/+qg+6PibEtTlMgck9
+VNPxPphycrl0zvCp+B/0scUfjkOQH3BGNeX+1OgxrLl697/E0ZepPbFfZgC
EcHR5XV/f4Loo4C4rOEp4K7JKF2X+QuipUglM04Kzmi/6l1hPghyxjlXmqUo
KDRzza2mBuFEv9FDSx0KppgSq2ipv8Fjueo5lhkFFTYmS5KNhmDUyutVsxMF
waaROeW0IZiv5hvh86agzdnDUYtEe+xSMEGvv2guXsQcguut37eEoT/fFbqV
NzoErr627Gn06n9ZUUl/hyCcT6/hlw8Fj4orz54TGIZ+ocC/JecpaBEm9NW2
DoOkgZeX5kUK5H/s68mLHIaZM6FnPl6mILZWv9Q2ZhiqI44aLqDHH6pF8Vwf
Bu9Y53GdKxTU+gpon0kchuaWqc57aLflbQmbM4YhLdr4WeBVvN8WO5N3ZcPA
GyZZrxBMgUbsqcr+78MwwvfX7FAYBXrbIpLFN9Pg0b3Syh0xFHS5im/N0qZB
Geukgzv6QnxJt9w2GhgkhPQloIuGeySUdtAgvufXhUG0TLL63a3GNCg8vn86
8hoFXGNdxTb2NHi2JdGyPpaCLwXKDTfCaKB8WtBc7QYFHl3VHkKRNIjZ3nXZ
Cs3NdYg3JZoGGdmzMf7oXXZB+zPjaCC713b7W3QZT3t7QSoNSvPsmFbxFCS7
XfnZUECD1Ey3e94JFDjKfJ3lbKfB6Svz1jduUiAg7lvxqpMGGu6lTWXodyKi
5y/20ED8ur9MB3rDCgeC+EGDwWBjA4kkCtgTtK6vBA0SZ4aT8tFhn+afZc3T
4JIu88iTW1g/Pw1vXRU6vBQ/5lOYQoG9T6vyhBodvvQ5FX1C83v6DRdp0uHm
tjM1dLTvsZeOcjp0SGsvO7UulQL9fcbmPLvp4Hvz19s76GZZZ6VOWzp4Bz5O
uXwb37/PNwbPhdLhVK97g3waBX18nR5z4XT4u/mYrC661kKKHR1Fh/ziGmtL
dGJzwb/s63TYeL7KPAit0tawuimFDvPKkVE9aOdeThPlAjoEk2dko9IpMJIw
ayovokOPTad6BlrVIdFmdykdNO/ni5WhZ/pkXI6U00HP3+9qLzrpp/6lyGo6
GGl13lTJoKCefrHwVxsdHCqDfnxAFym92XS2kw65Btvu9aBvneaumummQ0OF
jQET7cJMqhP8QYdHPc9Xr8qk4O9I6Y+ddDp0dyhzHUVrUqRg+j86SEdnLPxE
3+F29rNeT4Dkx5nw7iwK5k+I6bRuIODbbwnvYbTb+5apg8oEpMWt0JlAa4UZ
/m+/BgHumhZ2AtkUfFxQCjTdToCEt9s/A/T034ngXRYEeMp9vX8f7WhfvPvN
AQLmzpU5PkHXvnDn3GFFwK5VTqOv0fEBvWG6hwnIHxcraUdvoKojtV0IuGUn
HL6APjx27bqKHwGNFO8tyxwKXlsaWjz2J8BIPW2NPVqhbG6l0iUCTAvG/E+g
R7x94hWDCLDbydl8ER3JOnRTLoaALbppnXfQDHMB65xYAlRWB8BdtGVhg7DM
DQJmP8hFPUZLeeolSyYRYBH49fELdDld9vaaTAKm63P39aAlTHqPpGQT4DzT
mD6ADnmQtHb1XQJCsmsbaGiLk0vThR7g9SR5qybRQ4OMzJVlBMQWLR8XyKVg
n0G+0/WnBGjYBCuJosvuOsnwVhAgJFGjL4m+4tKSw/OSgJODaTMb0CL9Ffe4
6gj46vTqyw50/MqrV5/XExDqWGFrgObVNzrq9YmAny67K03QXHfa+LuaCai3
XvHPCh1Un0bEthIgrm4ycBj9d9LlPXQQ8Iwmmu6AHrdiBzzuJeB2x8lbbmjv
kEob5z4C+GZorR5oRslVDZEB7G/vDM0L/Ytv5dCVIQJyKpqT/dCOeu3Vm+gE
ZN9LUg9A93ikp9FI7IcWPfMyuuWD0kFLNgGjIgYLoWiLSbby0nECOpxMxyPQ
HxWec7+cJGCT1sCraLSRVdCA9zQBzyOXOcaia4L3vlz3l4DjdtVtcWi9kpUp
PXMEBD5YJpeAruxr97mxQECKx4DhTfRmvox9BlwkJGWY7rqFLtF1VZzmJiFb
30AwBa3iocxRxEPCpr2NlanoB6mj31x4SRCooGnfQSt8eF4hyk/C3pib19LQ
WRNBiZ8FSdjyurE8Hb1WwfhMsDAJwQfuVGagky35jbVFSZDeORmfiV4V3CFH
ipGwP+rnzix0XHHGvywJEjKUnN4venmfa5e1NAkDCp6y2egIXpUnPHIk7PTj
sV40h+7Y9dcKJKyX0nFY9OVTVe7nFUmwkpjQWzSVErxngxIJTd57xhav51tn
LPVdhQSGuFzQokfG+acT1Ekwl0r4tbgeT/nOViMtEr77x0sumnYws2h2Mwnt
KjJqi+t3DToRXaJDQpXuLpHF5+svUnE9sZ0Eh/sjLYv1sPs+tmOtPgm9Ppon
b6M7VrwQa9pJQmYGR8tiPS23h4yH7ibBTtVVKBnd6G7StNWQBGGFQ8pJaNMU
gUfMvSSsCe8SS0TXve8MyzUl4T8rsu8Gevd4ppOtOQlPkuICrqO3HVQVqbEk
ITEwYksU+unV8T8XbEjgUe21DkdrFL34qHQY63es2jQkd3GemAYlOZAQ76VX
dQl9b5ugnYkzCSKWrZv80TLuXVvmXEiw+ToT6ote896NPOlOwuNXs/c90Uuv
hh7SPY/1WVM3dxRdPsaarblAQrXLxaBDaDf3oznG/iS4qQn2HVxc/0FNhs1l
Eszc51SMF/un8CPYO5KEw7uqxTahtW+bKk5FY328ywNU0UN85Z8vx5KgevxW
heLi+z0VK3otgYSKJ3zvxdHcH7cX5qWRsJ2frsaxeP8d+ZYqmSQQ9uvPzuL+
4fZEkCrLJoH9Yt+1cXRdOm13dR72o9vadggdfja5q6eYhA9tVjvq0Vwio5wC
tSS4h4oah6OfRjs8TK4jwT+ENApEu87VW0g2kJBv/1D2PLp2OOu2UiMJn7/9
9HBGh1WZqxt2kcAqtdi3Dc3p/PBoAIOE1nRRs0Hcj8vahOfnWSQcyIpf1o12
MQnKi2ST+N6P53xBv9WyHUmaJMFT+bJ7OTpkyZKI4nkSriomGUSgOR47lw4K
MyDqO32rNLqe1e2dI8qAz/T/EhbnSZyWlYbjWgZsmKuoXsB5I1ZlWNwpzQBa
0cqsX2iNBqXCj0oMCD9wxCkP7Tg8/qBkFwMYGZdZMmgFZS/3M3sYMEPW5PCj
Ca9hRSUjBnSve6Q0h/PuwmR3/l0zBggOuL3qQccueXMv+RADDOVvDSWgX8hH
Zwd6MsDlwK+9FM7ToJMcztvOMkAn0M9mEG30+JL0pA8DquuLtzajW7S8Ms9e
ZMAee5Gg+2gCrNJdQhhg8LBklTV6jbNkqnEq/v+96d48nO++6aU3hGsZUOit
9UcR88LzufTo2joGLD3+T5EfPeccFerbwAAV9VmdyTsURK9zutjWyIDWZfHf
36Ezi3idkroZ0PRKfqcD+kP1STXhP1g/Lgn7KMwza39LfhFay4Tv/+XNvcE8
5LSX58M7CSb4dG+QykXfezhefV6aCSVVg8JhaDWvT09bFZjgcmZZ1F70nin/
9JvqTNietCT8czLuHzxtp4UMmXC8f2lPI+axN6oxy4W8mTDm+Y79FPPc1g6x
pqRzTKhT97FKQpddeXhz9QUmSMc8TDiPvtdUL7E2gAn5rVV3NdExPkvVZcOY
oOFxQqogkQLrZ2FW6qlMWNa3zOsO5km63tV0s2omnJLi9rfH/Cm0z1ctTIAF
iSKX9vhh3s19J8inJ8QCoqTR2AStpVtMjomwoFs0VEECfUCJeHBcnAVPkvmd
aqKxv8uc5fesZ0FQbHU/D5r7vdkaDj0WhE98Xn0zEvdTfXmOoJMsuGA/vj8C
83ifekv7pdcs6PfNWD6CeT+HKXR1SQ0L1q8NOfIS7frYZsONdyz42LcpLApN
ru8OyK1ngZrwvKcMmpLsl25oYcGMg0GsRSCun5d1avUwC7iz6xbuBlBgTOOZ
K+H/A9cM+T9twvNGWTasH3L+A41njxBDZ7FfpVuFpOf/wHmoShzD809I5N3Q
voIRGFOVk920j4JiQjpDwIINoX/OMQLw/BSTFenSf4ANRorubmJoN+s/iiVW
bOjnDHhaoY155vXrsv1H2LC+ZPLz2BasR4JDfZwrGzqXnvpzajOeB7amjfFe
YsOM+7cZc038fiJWm/I8YIPp5ROaE0qYB7df4e9+xIbbo6c14tC9f363PShk
g3XnfU5FdOKRZ07GT9igKv1u/eGNFCyoWF+IfM2GW7yZTpWKWM/WhOwl7Wzw
zrid7q1AQVXU9In2TjZcdLH9wY1O1j+mnNfDBp6rtpPp8hSY39coN+hnw1su
uZx6OQpeBjR9CiXZ4LBzii4pS0Gquk6CFYsNii/6GstkKDg/mHlIns3G75c/
ai9aycJr4O0kG47yWFz0lsZ+c3bkJ06zIU3DsZAL/bNC39PlLxveJVdVpOJ5
9LVnnqbWf2ywFHRNVkHfluWbWlhgg4SfnUm1JAX/B8bjyOQ=
       "]]},
     Annotation[#, "Charting`Private`Tag$100627#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 1.0000000204081654`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {1.0000000204081632`, 1.4142135203162605`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.866555962217578*^9, 3.866556017262035*^9}, {
  3.8665566550377703`*^9, 3.8665566840775146`*^9}, {3.8665573511879005`*^9, 
  3.8665573822510004`*^9}},
 CellLabel->
  "Out[620]=",ExpressionUUID->"1f70384d-ab65-4179-9071-a07abcc60354"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Remove", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
  RowBox[{"(*", 
   RowBox[{"ICs", " ", "-", " ", 
    RowBox[{"Initial", " ", "Conditions"}]}], " ", "*)"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Error", " ", "while", " ", "cosntraining", " ", "u"}], " ", 
   "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"CalculateSMatrix", "[", 
   RowBox[{
   "x1a_", ",", "xdot1a_", ",", "\[Theta]1a_", ",", "\[Theta]dot1a_", ",", 
    "u1a_", ",", "\[Tau]_", ",", "A_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x", ",", "L", ",", "RHS", ",", "xdot", ",", "\[Theta]", ",", 
      "\[Theta]dot", ",", "u", ",", "K", ",", "S", ",", "soltn", ",", "Af", 
      ",", "Bf", ",", "Q", ",", "fx", ",", "xState", ",", "R", ",", "Mf", ",",
       "x2dot", ",", "\[Theta]2dot", ",", "S0", ",", "sol2", ",", "t"}], 
     "}"}], ",", "\n", "\n", 
    RowBox[{
     RowBox[{"xState", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
       "}"}]}], ";", "\n", 
     RowBox[{"x2dot", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{"u", "+", 
         RowBox[{"A", " ", 
          RowBox[{"\[Theta]dot", "^", "2"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"A", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ";", "\n", 
     RowBox[{"\[Theta]2dot", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{"u", "+", 
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ")"}]}]}], 
     ";", "\n", 
     RowBox[{"fx", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
       "xdot", ",", "x2dot", ",", "\[Theta]dot", ",", "\[Theta]2dot"}], 
       "}"}]}], ";", "\n", 
     RowBox[{"L", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", "2"}], "*", 
       RowBox[{"u", "^", "2"}]}]}], ";", "\n", 
     RowBox[{"Af", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{"fx", ",", "xState"}], "]"}]}], ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{"For", " ", "nD", " ", "stuff", " ", "use", " ", "Grad"}], 
      "*)"}], "\n", 
     RowBox[{"Bf", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"fx", ",", "u"}], "]"}]}], " ", ";", 
     RowBox[{"(*", 
      RowBox[{"For", " ", "1", "D", " ", "stuff", " ", "use", " ", "D"}], 
      "*)"}], "\n", 
     RowBox[{"Q", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{
        RowBox[{"Grad", "[", 
         RowBox[{"L", ",", "xState"}], "]"}], ",", "xState"}], "]"}]}], ";", 
     " ", 
     RowBox[{"(*", " ", 
      RowBox[{"Fix", " ", "this"}], " ", "*)"}], "\n", 
     RowBox[{"Mf", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{"L", ",", "u"}], "]"}], ",", "xState"}], "]"}]}], ";", "\n", 
     RowBox[{"R", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"L", ",", 
        RowBox[{"{", 
         RowBox[{"u", ",", "2"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"S0", " ", "=", " ", 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]]}], ";", "\n", 
     RowBox[{
      RowBox[{"RHS", "[", "t_", "]"}], " ", ":=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"IdentityMatrix", "[", "4", "]"}], " ", "+", " ", 
         RowBox[{
          RowBox[{"Af", "\[Transpose]"}], ".", 
          RowBox[{"S", "[", "t", "]"}]}], " ", "+", " ", 
         RowBox[{
          RowBox[{"S", "[", "t", "]"}], ".", "Af"}], " ", "-", " ", 
         RowBox[{"KroneckerProduct", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"S", "[", "t", "]"}], ".", "Bf"}], ",", 
           RowBox[{
            RowBox[{"Bf", "\[Transpose]"}], ".", 
            RowBox[{"S", "[", "t", "]"}]}]}], "]"}]}], ")"}], " ", "/.", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "->", " ", 
          RowBox[{"x1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"xdot", " ", "->", " ", 
          RowBox[{"xdot1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"\[Theta]", " ", "->", 
          RowBox[{"\[Theta]1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"\[Theta]dot", " ", "->", " ", 
          RowBox[{"\[Theta]dot1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"u", " ", "->", " ", 
          RowBox[{"u1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}]}], "}"}]}]}], ";", 
     "\n", 
     RowBox[{"sol2", " ", "=", " ", 
      RowBox[{"S", " ", "/.", " ", 
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"S", "'"}], "[", "t", "]"}], "==", " ", 
            RowBox[{"RHS", "[", "t", "]"}]}], ",", 
           RowBox[{
            RowBox[{"S", "[", "0", "]"}], "==", "S0"}]}], "}"}], ",", "S", 
         ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], " ", "}"}]}], "]"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"S", " ", "=", " ", 
      RowBox[{"sol2", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}]}], "\n", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"CalculateGains", "[", 
   RowBox[{
   "x1a_", ",", "xdot1a_", ",", "\[Theta]1a_", ",", "\[Theta]dot1a_", ",", 
    "u1a_", ",", "time_", ",", "A_", ",", "\[Tau]_", ",", "S_"}], "]"}], ":=",
   " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x", ",", "L", ",", "RHS", ",", "xdot", ",", "\[Theta]", ",", 
      "\[Theta]dot", ",", "u", ",", "K", ",", "Af", ",", "Bf", ",", "Q", ",", 
      "fx", ",", "xState", ",", "R", ",", "Mf", ",", "x2dot", ",", 
      "\[Theta]2dot", ",", "S0", ",", "sol2", ",", "t"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"xState", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
       "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"x2dot", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{"u", "+", 
         RowBox[{"A", " ", 
          RowBox[{"\[Theta]dot", "^", "2"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"A", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Theta]2dot", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{"u", "+", 
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ")"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"fx", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
       "xdot", ",", "x2dot", ",", "\[Theta]dot", ",", "\[Theta]2dot"}], 
       "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Bf", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"fx", ",", "u"}], "]"}]}], " ", ";", 
     RowBox[{"(*", 
      RowBox[{"For", " ", "1", "D", " ", "stuff", " ", "use", " ", "D"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"K", " ", "=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Bf", "\[Transpose]"}], ".", 
         RowBox[{"S", "[", 
          RowBox[{"\[Tau]", " ", "-", " ", "time"}], "]"}]}], ")"}], "/.", 
       " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "->", " ", 
          RowBox[{"x1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"xdot", " ", "->", " ", 
          RowBox[{"xdot1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"\[Theta]", " ", "->", 
          RowBox[{"\[Theta]1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"\[Theta]dot", " ", "->", " ", 
          RowBox[{"\[Theta]dot1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"u", " ", "->", " ", 
          RowBox[{"u1a", "[", "time", "]"}]}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", "K"}]}], "\n", "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ffCartPendulum", "[", 
    RowBox[{
    "ICs_", ",", "n_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "A_", ",", 
     "order_", ",", "maxIter_", ",", "maxError_", ",", "maxCount_", ",", 
     "maxJ_", ",", "initGuess_"}], "]"}], ":=", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "InitGuess", ",", "J", ",", "S", ",", "K", ",", "count", ",", "error", 
       ",", "x", ",", "dist", ",", "xdot", ",", "f", ",", "\[Theta]", ",", 
       "\[Theta]dot", ",", "\[Lambda]1", ",", "\[Lambda]2", ",", "\[Lambda]3",
        ",", "\[Lambda]4", ",", "\[CapitalDelta]t", ",", "bcs", ",", "eqns", 
       ",", "sv", ",", "froot", ",", "xff", ",", "xdotff", ",", "xff0", ",", 
       "xdotff0", ",", "\[Theta]ff0", ",", "\[Theta]dotff0", ",", "uff0", ",",
        "\[Theta]ff", ",", "\[Theta]dotff", ",", "uff", ",", "\[Lambda]1ff0", 
       ",", "\[Lambda]2ff0", ",", "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", 
       "i", ",", 
       RowBox[{"xGuess", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          SubscriptBox["xGuess", "i"], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}]}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"\[CapitalDelta]t", "=", 
       RowBox[{"\[Tau]", "/", "n"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"{", 
         RowBox[{
         "x_", ",", "xdot_", ",", "\[Theta]_", ",", "\[Theta]dot_", ",", 
          "\[Lambda]1_", ",", "\[Lambda]2_", ",", "\[Lambda]3_", ",", 
          "\[Lambda]4_"}], "}"}], "]"}], ":=", 
       RowBox[{"{", "\n", "\t", 
        RowBox[{"xdot", ",", "\n", "\t", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}],
           " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
               ")"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", "\[Lambda]2"}], 
              ")"}]}], "+", 
            RowBox[{"A", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", "\n", 
         "\t", "\[Theta]dot", ",", "\n", "\t", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}],
           " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{"1", "/", 
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"A", " ", 
                   RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
                 ")"}]}], ")"}]}], 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[Lambda]2"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
              ")"}]}], "-", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "-", 
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", "\n", 
         "\t", "0", ",", "\n", "\t", 
         RowBox[{"-", "\[Lambda]1"}], ",", "\n", "\t", 
         RowBox[{
          FractionBox["1", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"A", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "3"]], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["A", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"A", " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "-", 
               "\[Lambda]4"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "5"]}], "+", 
            RowBox[{
             SuperscriptBox["A", "3"], " ", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
              ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "6"]}], "-", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             SuperscriptBox["A", "2"], " ", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
              ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "4"], " ", 
             RowBox[{"(", 
              RowBox[{"4", "-", "A", "+", 
               RowBox[{"A", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}], "-", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "\[Lambda]2"}], "+", 
               RowBox[{
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}], "+", 
               RowBox[{"3", " ", "\[Lambda]2", " ", "\[Lambda]4", " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"A", " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "-", 
               "\[Lambda]4", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "A", " ", 
                   SuperscriptBox["\[Lambda]2", "2"]}], "+", 
                  SuperscriptBox["\[Lambda]4", "2"]}], ")"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox["A", "2"], " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2", " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], 
            "+", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "3"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", "A", " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "+", 
               RowBox[{"2", " ", "\[Lambda]4"}], "+", 
               RowBox[{
                SuperscriptBox["\[Lambda]4", "2"], " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"2", " ", "A", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"A", " ", 
                   SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], 
                  "-", "\[Lambda]4"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], 
            "+", 
            RowBox[{
             RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[Lambda]2"}], " ", "\[Lambda]4"}], "-", 
               RowBox[{"A", " ", 
                RowBox[{"(", 
                 RowBox[{"\[Lambda]2", "-", 
                  RowBox[{
                   SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
                 ")"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"A", " ", "\[Lambda]4", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]}], 
           ")"}]}], ",", "\n", "\t", 
         RowBox[{
          RowBox[{
           RowBox[{"4", " ", "/", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"A", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A", "-", "2"}],
              ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{"A", " ", "\[Theta]dot", " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}]}], ")"}]}], 
          "-", "\[Lambda]3"}]}], "\n", "}"}]}], ";", 
      StyleBox["\[IndentingNewLine]",
       FontWeight->"Plain"], "\n", 
      RowBox[{"InitGuess", " ", "=", " ", "initGuess"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       StyleBox["xGuess",
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       StyleBox["=",
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       RowBox[{
        StyleBox["Table",
         FontWeight->"Plain"], 
        StyleBox["[",
         FontWeight->"Plain"], 
        RowBox[{
         RowBox[{
          StyleBox["If",
           FontWeight->"Plain"], 
          StyleBox["[",
           FontWeight->"Plain"], 
          RowBox[{
           StyleBox[
            RowBox[{"i", " ", "!=", " ", 
             RowBox[{"-", "1"}]}],
            FontWeight->"Plain"], 
           StyleBox[",",
            FontWeight->"Plain"], 
           RowBox[{
            StyleBox[
             SubscriptBox["xGuess", 
              RowBox[{"i", "+", "1"}]],
             FontWeight->"Plain"], 
            StyleBox[" ",
             FontWeight->"Plain"], 
            StyleBox["=",
             FontWeight->"Plain"], 
            StyleBox[" ",
             FontWeight->"Plain"], 
            RowBox[{
             SubscriptBox[
              StyleBox["xGuess",
               FontWeight->"Plain"], "i"], 
             StyleBox[" ",
              FontWeight->"Plain"], 
             StyleBox["+",
              FontWeight->"Plain"], 
             StyleBox[
              RowBox[{"\[CapitalDelta]t", "*", 
               RowBox[{"f", "[", 
                SubscriptBox["xGuess", "i"], "]"}]}],
              FontWeight->"Plain"]}]}], 
           StyleBox[",",
            FontWeight->"Plain"], 
           RowBox[{
            SubscriptBox[
             StyleBox["xGuess",
              FontWeight->"Plain"], "0"], " ", "=", " ", 
            RowBox[{"{", 
             StyleBox[
              RowBox[{
               RowBox[{"ICs", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "3", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "4", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "3", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "4", "]"}], "]"}]}],
              FontWeight->"Plain"], 
             StyleBox["}",
              FontWeight->"Plain"]}]}]}], 
          StyleBox["]",
           FontWeight->"Plain"]}], 
         StyleBox[",",
          FontWeight->"Plain"], 
         StyleBox[
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"-", "1"}], ",", 
            RowBox[{"n", "-", "1"}]}], "}"}],
          FontWeight->"Plain"]}], 
        StyleBox["]",
         FontWeight->"Plain"]}]}], 
      StyleBox[";",
       FontWeight->"Plain"], "\[IndentingNewLine]", "\n", 
      RowBox[{"bcs", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"x", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"xdot", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"x", ",", " ", "n"}], "]"}], "==", 
          RowBox[{"Subscript", "[", 
           RowBox[{"xdot", ",", " ", "n"}], "]"}], "==", "0"}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]dot", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]dot", ",", " ", "n"}], "]"}], "==", "0"}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]", ",", " ", "n"}], "]"}], "==", "\[Pi]"}]}], 
        "}"}]}], ";", "\n", 
      RowBox[{"eqns", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Join", "[", 
         RowBox[{"bcs", ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Thread", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], "==", 
              "\n", 
              RowBox[{
               RowBox[{
                RowBox[{"1", "/", "2"}], " ", "\[CapitalDelta]t", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"f", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}], "]"}], "+", 
                  "\n", 
                  RowBox[{"f", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], 
                   "]"}]}], ")"}]}], "+", "\n", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Subscript", "[", 
                  RowBox[{"x", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"xdot", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]dot", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]1", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]2", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]3", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]4", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}]}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
        "]"}]}], ";", "\n", "\n", 
      RowBox[{"sv", " ", "=", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", "\n", 
             "\t\t\t\t\t", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "7", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "8", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", "1"}], 
        "]"}]}], ";", "\n", "\[IndentingNewLine]", 
      RowBox[{"froot", "=", 
       RowBox[{"FindRoot", "[", 
        RowBox[{"eqns", ",", "sv", ",", 
         RowBox[{"MaxIterations", "->", "maxIter"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"error", " ", "=", " ", 
       RowBox[{"Norm", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                SubscriptBox["x", "n"], ",", 
                SubscriptBox["xdot", "n"], ",", 
                SubscriptBox["\[Theta]", "n"], ",", 
                SubscriptBox["\[Theta]dot", "n"]}], "}"}], " ", "-", " ", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], ",", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                SubscriptBox["x", "0"], ",", 
                SubscriptBox["xdot", "0"], ",", 
                SubscriptBox["\[Theta]", "0"], ",", 
                SubscriptBox["\[Theta]dot", "0"]}], "}"}], " ", "-", " ", 
              "ICs"}], ",", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Thread", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   SubscriptBox["x", "i"], ",", 
                   SubscriptBox["xdot", "i"], ",", 
                   SubscriptBox["\[Theta]", "i"], ",", 
                   SubscriptBox["\[Theta]dot", "i"], ",", 
                   SubscriptBox["\[Lambda]1", "i"], ",", 
                   SubscriptBox["\[Lambda]2", "i"], ",", 
                   SubscriptBox["\[Lambda]3", "i"], ",", 
                   SubscriptBox["\[Lambda]4", "i"]}], "}"}], "-", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    FractionBox["1", "2"], " ", "\[CapitalDelta]t", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}], "]"}], "+", 
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "]"}]}], 
                    ")"}]}], "+", 
                   RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}]}], ")"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
           "]"}], "/.", "froot"}], ",", "\"\<Frobenius\>\""}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"uff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}], "^", 
                  "2"}]}]}], ")"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], 
                RowBox[{"Cos", "[", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}]}], "-", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}]}], ")"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"count", " ", "=", " ", "0"}], ";", "\n", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"error", " ", ">", " ", "maxError"}], ")"}], " ", "||", 
           " ", 
           RowBox[{"(", 
            RowBox[{"J", " ", ">", " ", "maxJ"}], ")"}]}], ")"}], " ", "&&", 
         " ", 
         RowBox[{"count", " ", "<=", " ", "maxCount"}]}], " ", ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"InitGuess", " ", "=", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}]}], "}"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          StyleBox["xGuess",
           FontWeight->"Plain"], 
          StyleBox[" ",
           FontWeight->"Plain"], 
          StyleBox["=",
           FontWeight->"Plain"], 
          StyleBox[" ",
           FontWeight->"Plain"], 
          RowBox[{
           StyleBox["Table",
            FontWeight->"Plain"], 
           StyleBox["[",
            FontWeight->"Plain"], 
           RowBox[{
            RowBox[{
             StyleBox["If",
              FontWeight->"Plain"], 
             StyleBox["[",
              FontWeight->"Plain"], 
             RowBox[{
              StyleBox[
               RowBox[{"i", " ", "!=", " ", 
                RowBox[{"-", "1"}]}],
               FontWeight->"Plain"], 
              StyleBox[",",
               FontWeight->"Plain"], 
              RowBox[{
               StyleBox[
                SubscriptBox["xGuess", 
                 RowBox[{"i", "+", "1"}]],
                FontWeight->"Plain"], 
               StyleBox[" ",
                FontWeight->"Plain"], 
               StyleBox["=",
                FontWeight->"Plain"], 
               StyleBox[" ",
                FontWeight->"Plain"], 
               RowBox[{
                SubscriptBox[
                 StyleBox["xGuess",
                  FontWeight->"Plain"], "i"], 
                StyleBox[" ",
                 FontWeight->"Plain"], 
                StyleBox["+",
                 FontWeight->"Plain"], 
                StyleBox[
                 RowBox[{"\[CapitalDelta]t", "*", 
                  RowBox[{"f", "[", 
                   SubscriptBox["xGuess", "i"], "]"}]}],
                 FontWeight->"Plain"]}]}], 
              StyleBox[",",
               FontWeight->"Plain"], 
              RowBox[{
               SubscriptBox[
                StyleBox["xGuess",
                 FontWeight->"Plain"], "0"], " ", "=", " ", 
               RowBox[{"{", 
                StyleBox[
                 RowBox[{
                  RowBox[{"ICs", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", 
                  RowBox[{"ICs", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], ",", 
                  RowBox[{"ICs", "[", 
                   RowBox[{"[", "3", "]"}], "]"}], ",", 
                  RowBox[{"ICs", "[", 
                   RowBox[{"[", "4", "]"}], "]"}], ",", 
                  RowBox[{"InitGuess", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", 
                  RowBox[{"InitGuess", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], ",", 
                  RowBox[{"InitGuess", "[", 
                   RowBox[{"[", "3", "]"}], "]"}], ",", 
                  RowBox[{"InitGuess", "[", 
                   RowBox[{"[", "4", "]"}], "]"}]}],
                 FontWeight->"Plain"], 
                StyleBox["}",
                 FontWeight->"Plain"]}]}]}], 
             StyleBox["]",
              FontWeight->"Plain"]}], 
            StyleBox[",",
             FontWeight->"Plain"], 
            StyleBox[
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"-", "1"}], ",", 
               RowBox[{"n", "-", "1"}]}], "}"}],
             FontWeight->"Plain"]}], 
           StyleBox["]",
            FontWeight->"Plain"]}]}], 
         StyleBox[";",
          FontWeight->"Plain"], "\[IndentingNewLine]", 
         RowBox[{"sv", " ", "=", " ", 
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", "\n", 
                "\t\t\t\t\t", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "7", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "8", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", "1"}], 
           "]"}]}], ";", "\n", "\n", 
         RowBox[{"froot", "=", 
          RowBox[{"FindRoot", "[", 
           RowBox[{"eqns", ",", "sv", ",", 
            RowBox[{"MaxIterations", "->", "maxIter"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"error", " ", "=", " ", 
          RowBox[{"Norm", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Flatten", "[", 
              RowBox[{"Join", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   SubscriptBox["x", "n"], ",", 
                   SubscriptBox["xdot", "n"], ",", 
                   SubscriptBox["\[Theta]", "n"], ",", 
                   SubscriptBox["\[Theta]dot", "n"]}], "}"}], " ", "-", " ", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], 
                ",", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   SubscriptBox["x", "0"], ",", 
                   SubscriptBox["xdot", "0"], ",", 
                   SubscriptBox["\[Theta]", "0"], ",", 
                   SubscriptBox["\[Theta]dot", "0"]}], "}"}], " ", "-", " ", 
                 "ICs"}], ",", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"Thread", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[CapitalDelta]t", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}], "]"}], "+", 
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}]}], ")"}]}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}],
               "]"}], "/.", "froot"}], ",", "\"\<Frobenius\>\""}], "]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"uff0", "=", 
          RowBox[{"ListInterpolation", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"1", "/", 
                 RowBox[{"(", 
                  RowBox[{"1", "-", 
                   RowBox[{"A", " ", 
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}], "^", 
                    "2"}]}]}], ")"}]}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], 
                   RowBox[{"Cos", "[", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}]}], "-", 
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}]}], ")"}]}], 
               ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
             "froot"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
            RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", 
         "\n", 
         RowBox[{"J", " ", "=", " ", 
          RowBox[{"NIntegrate", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", 
         "\n", 
         RowBox[{"count", " ", "=", " ", 
          RowBox[{"count", "+", "1"}]}], ";"}]}], "\n", "]"}], ";", "\n", 
      "\n", "\n", 
      RowBox[{"xff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"xdotff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Theta]ff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Theta]dotff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]1ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]2ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]3ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]4ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      "\n", 
      RowBox[{"uff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}], "^", 
                  "2"}]}]}], ")"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], 
                RowBox[{"Cos", "[", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}]}], "-", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}]}], ")"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      "\n", 
      RowBox[{
       RowBox[{"xff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xdotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "\[Pi]"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"uff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"uff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"S", " ", "=", " ", 
       RowBox[{"CalculateSMatrix", "[", 
        RowBox[{
        "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
         "uff", ",", "\[Tau]", ",", "A"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"K", "[", "t_", "]"}], " ", ":=", " ", 
       RowBox[{"CalculateGains", "[", 
        RowBox[{
        "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
         "uff", ",", "t", ",", "A", ",", "\[Tau]", ",", "S"}], "]"}]}], ";", 
      "\n", 
      RowBox[{"{", 
       RowBox[{
       "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
        "uff", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
        "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "J", ",", "K"}], 
       "}"}]}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"testSwingUp", "[", 
    RowBox[{
    "ICs_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "uff0_", ",", "A_"}], "]"}],
    ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eq", ",", "init", ",", "x", ",", "xdot", ",", "\[Theta]", ",", 
       "\[Theta]dot", ",", "xs", ",", "xdots", ",", "\[Theta]s", ",", 
       "\[Theta]dots", ",", "t", ",", "J"}], "}"}], ",", "\n", 
     RowBox[{
      RowBox[{"eq", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"x", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"xdot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"xdot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"uff0", "[", "t", "]"}], "+", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
             RowBox[{"A", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]dot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"uff0", "[", "t", "]"}], "+", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
            ")"}]}]}]}], "}"}]}], ";", "\n", 
      RowBox[{"init", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"xdot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]dot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
        "}"}], "=", 
       RowBox[{"NDSolveValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"eq", ",", "init"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
         RowBox[{"Method", "->", 
          RowBox[{"{", 
           RowBox[{"\"\<DiscontinuityProcessing\>\"", "->", "None"}], 
           "}"}]}]}], "]"}]}], ";", "\n", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"{", 
       RowBox[{
       "xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots", ",", "uff0",
         ",", "J"}], "}"}]}]}], "]"}]}], "\n", "\n", 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"testWithFB", "[", 
    RowBox[{
    "ICs_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "xff0_", ",", "xdotff0_", 
     ",", "\[Theta]ff0_", ",", "\[Theta]dotff0_", ",", "uff0_", ",", "A_", 
     ",", "K_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eq", ",", "init", ",", "\[Theta]", ",", "\[Theta]dot", ",", 
       "\[Theta]ff", ",", "\[Theta]dotff", ",", "x", ",", "xdot", ",", "xff", 
       ",", "xdotff", ",", "uff", ",", "t", ",", "\[Kappa]1", ",", 
       "\[Kappa]2", ",", "\[Kappa]3", ",", "\[Kappa]4", ",", "ufb", ",", "u", 
       ",", "\[Theta]s", ",", "\[Theta]dots", ",", "xs", ",", "xdots", ",", 
       "us", ",", "J", ",", "error"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Kappa]1", "=", 
       RowBox[{"\[Kappa]2", "=", "3"}]}], ";", "  ", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"lqr", " ", "for", " ", "q"}], "=", 
        RowBox[{"r", " ", "for", " ", "balancing", " ", "pendulum"}]}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"\[Kappa]3", " ", "=", " ", 
       RowBox[{"-", "0.1"}]}], ";", 
      RowBox[{"\[Kappa]4", " ", "=", " ", 
       RowBox[{"-", "0.65"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"xff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xdotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "\[Pi]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"uff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"uff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ufb", "[", "t_", "]"}], " ", ":=", " ", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"K", "[", "t", "]"}], ".", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"xff", "[", "t", "]"}], "-", 
                RowBox[{"x", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"xdotff", "[", "t", "]"}], "-", 
                RowBox[{"xdot", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]dot", "[", "t", "]"}]}]}], "}"}]}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         RowBox[{
          RowBox[{"\[Kappa]1", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]3", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"xff", "[", "t", "]"}], "-", 
             RowBox[{"x", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"xdotff", "[", "t", "]"}], "-", 
             RowBox[{"xdot", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}], ";", 
      "\n", 
      RowBox[{
       RowBox[{"u", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{"uff", "[", "t", "]"}], "+", 
        RowBox[{"ufb", "[", "t", "]"}]}]}], ";", "\n", "\n", 
      RowBox[{"eq", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"x", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"xdot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"xdot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"u", "[", "t", "]"}], "+", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
             RowBox[{"A", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]dot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"u", "[", "t", "]"}], "+", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
            ")"}]}]}]}], "}"}]}], ";", 
      RowBox[{"init", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"xdot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]dot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}], ";", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
        "}"}], "=", 
       RowBox[{"NDSolveValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"eq", ",", "init"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
         RowBox[{"Method", "->", 
          RowBox[{"{", 
           RowBox[{"\"\<DiscontinuityProcessing\>\"", "->", "None"}], 
           "}"}]}]}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"us", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{"uff", "[", "t", "]"}], "+", 
        RowBox[{"Piecewise", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"K", "[", "t", "]"}], ".", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"xff", "[", "t", "]"}], "-", 
                 RowBox[{"xs", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"xdotff", "[", "t", "]"}], "-", 
                 RowBox[{"xdots", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                 RowBox[{"\[Theta]s", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                 RowBox[{"\[Theta]dots", "[", "t", "]"}]}]}], "}"}]}], ",", 
             RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
          RowBox[{
           RowBox[{"\[Kappa]1", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]s", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]dots", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]3", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"xff", "[", "t", "]"}], "-", 
              RowBox[{"xs", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]4", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"xdotff", "[", "t", "]"}], "-", 
              RowBox[{"xdots", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"us", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"error", " ", "=", " ", 
       RowBox[{"Norm", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xs", "[", "\[Tau]", "]"}], ",", 
           RowBox[{"xdots", "[", "\[Tau]", "]"}], ",", 
           RowBox[{"\[Theta]s", "[", "\[Tau]", "]"}], ",", 
           RowBox[{"\[Theta]dots", "[", "\[Tau]", "]"}]}], "}"}], " ", "-", 
         " ", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "Pi", ",", "0"}], "}"}]}], "]"}]}], ";",
       "\n", 
      RowBox[{"{", 
       RowBox[{
       "xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots", ",", "us", 
        ",", "J", ",", "error"}], "}"}]}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"testWithFBClipped", "[", 
   RowBox[{
   "ICs_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "xff0_", ",", "xdotff0_", 
    ",", "\[Theta]ff0_", ",", "\[Theta]dotff0_", ",", "uff0_", ",", "A_", ",",
     "uBound_", ",", "K_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "eq", ",", "init", ",", "\[Theta]", ",", "\[Theta]dot", ",", 
      "\[Theta]ff", ",", "\[Theta]dotff", ",", "x", ",", "xdot", ",", "xff", 
      ",", "xdotff", ",", "uff", ",", "t", ",", "\[Kappa]1", ",", "\[Kappa]2",
       ",", "\[Kappa]3", ",", "\[Kappa]4", ",", "ufb", ",", "u", ",", 
      "\[Theta]s", ",", "\[Theta]dots", ",", "xs", ",", "xdots", ",", "us", 
      ",", "J", ",", "error"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Kappa]1", "=", 
      RowBox[{"\[Kappa]2", "=", "3"}]}], ";", "  ", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"lqr", " ", "for", " ", "q"}], "=", 
       RowBox[{"r", " ", "for", " ", "balancing", " ", "pendulum"}]}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\[Kappa]3", " ", "=", " ", 
      RowBox[{"-", "0.1"}]}], ";", 
     RowBox[{"\[Kappa]4", " ", "=", " ", 
      RowBox[{"-", "0.65"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"xff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xdotff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "\[Pi]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"uff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"uff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ufb", "[", "t_", "]"}], " ", ":=", " ", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"K", "[", "t", "]"}], ".", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"xff", "[", "t", "]"}], "-", 
               RowBox[{"x", "[", "t", "]"}]}], ",", 
              RowBox[{
               RowBox[{"xdotff", "[", "t", "]"}], "-", 
               RowBox[{"xdot", "[", "t", "]"}]}], ",", 
              RowBox[{
               RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]", "[", "t", "]"}]}], ",", 
              RowBox[{
               RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]dot", "[", "t", "]"}]}]}], "}"}]}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        RowBox[{
         RowBox[{"\[Kappa]1", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
            RowBox[{"\[Theta]", "[", "t", "]"}]}], ")"}]}], "+", 
         RowBox[{"\[Kappa]2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
            RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ")"}]}], "+", 
         RowBox[{"\[Kappa]3", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"xff", "[", "t", "]"}], "-", 
            RowBox[{"x", "[", "t", "]"}]}], ")"}]}], "+", 
         RowBox[{"\[Kappa]4", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"xdotff", "[", "t", "]"}], "-", 
            RowBox[{"xdot", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}], ";", 
     "\n", 
     RowBox[{
      RowBox[{"u", "[", "t_", "]"}], ":=", " ", 
      RowBox[{"Clip", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"uff", "[", "t", "]"}], "+", 
         RowBox[{"ufb", "[", "t", "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "uBound"}], ",", "uBound"}], "}"}]}], "]"}]}], ";", 
     "\n", "\n", 
     RowBox[{"eq", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"x", "'"}], "[", "t", "]"}], "==", 
         RowBox[{"xdot", "[", "t", "]"}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"xdot", "'"}], "[", "t", "]"}], "==", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
            ")"}]}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"u", "[", "t", "]"}], "+", 
            RowBox[{"A", " ", 
             RowBox[{
              RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
            RowBox[{"A", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "==", 
         RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Theta]dot", "'"}], "[", "t", "]"}], "==", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
            ")"}]}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"u", "[", "t", "]"}], "+", 
               RowBox[{"A", " ", 
                RowBox[{
                 RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
           ")"}]}]}]}], "}"}]}], ";", "\n", "\n", 
     RowBox[{"init", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "[", "0", "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"xdot", "[", "0", "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"\[Theta]", "[", "0", "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"\[Theta]dot", "[", "0", "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}], ";", "\n", "\n", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
       "}"}], "=", 
      RowBox[{"NDSolveValue", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"eq", ",", "init"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
        RowBox[{"Method", "->", 
         RowBox[{"{", 
          RowBox[{"\"\<DiscontinuityProcessing\>\"", "->", "None"}], 
          "}"}]}]}], "]"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"us", "[", "t_", "]"}], ":=", 
      RowBox[{"Clip", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"uff", "[", "t", "]"}], "+", 
         RowBox[{"Piecewise", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"K", "[", "t", "]"}], ".", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"xff", "[", "t", "]"}], "-", 
                  RowBox[{"xs", "[", "t", "]"}]}], ",", 
                 RowBox[{
                  RowBox[{"xdotff", "[", "t", "]"}], "-", 
                  RowBox[{"xdots", "[", "t", "]"}]}], ",", 
                 RowBox[{
                  RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]s", "[", "t", "]"}]}], ",", 
                 RowBox[{
                  RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]dots", "[", "t", "]"}]}]}], "}"}]}], ",", 
              RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
           RowBox[{
            RowBox[{"\[Kappa]1", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]s", "[", "t", "]"}]}], ")"}]}], "+", 
            RowBox[{"\[Kappa]2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]dots", "[", "t", "]"}]}], ")"}]}], "+", 
            RowBox[{"\[Kappa]3", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"xff", "[", "t", "]"}], "-", 
               RowBox[{"xs", "[", "t", "]"}]}], ")"}]}], "+", 
            RowBox[{"\[Kappa]4", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"xdotff", "[", "t", "]"}], "-", 
               RowBox[{"xdots", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "uBound"}], ",", "uBound"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"error", " ", "=", " ", 
      RowBox[{"Norm", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"xs", "[", "\[Tau]", "]"}], ",", 
          RowBox[{"xdots", "[", "\[Tau]", "]"}], ",", 
          RowBox[{"\[Theta]s", "[", "\[Tau]", "]"}], ",", 
          RowBox[{"\[Theta]dots", "[", "\[Tau]", "]"}]}], "}"}], " ", "-", 
        " ", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "Pi", ",", "0"}], "}"}]}], "]"}]}], ";", 
     "\n", "\n", 
     RowBox[{"J", " ", "=", " ", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"us", "[", "t", "]"}], "^", "2"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
     RowBox[{"{", 
      RowBox[{
      "xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots", ",", "us", 
       ",", "J", ",", "error"}], "}"}]}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Energy", "[", 
     RowBox[{"{", 
      RowBox[{
      "x1_", ",", "x2_", ",", "\[Theta]1_", ",", "\[Theta]2_", ",", "A_"}], 
      "}"}], "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "/", "2"}], "*", 
      RowBox[{"x2", "^", "2"}]}], " ", "+", " ", 
     RowBox[{
      RowBox[{"1", "/", "2"}], "*", "A", "*", 
      RowBox[{"\[Theta]2", "^", "2"}]}], " ", "+", " ", 
     RowBox[{"A", "*", 
      RowBox[{"Cos", "[", "\[Theta]1", "]"}], "*", "x2", "*", "\[Theta]2"}], 
     " ", "-", " ", 
     RowBox[{"A", "*", 
      RowBox[{"Cos", "[", "\[Theta]1", "]"}]}]}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"eq", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"x", "''"}], "[", "t", "]"}], "+", 
        RowBox[{"x", "[", "t", "]"}]}], "==", "0"}], "}"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"init", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x", "[", "0", "]"}], "==", 
       RowBox[{
        RowBox[{"x", "'"}], "[", "0", "]"}], "==", "1"}], "}"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"event", " ", "=", " ", 
     RowBox[{"WhenEvent", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"x", "[", "t", "]"}], "==", "0"}], ",", 
       RowBox[{
        RowBox[{"end", "=", "t"}], ";", "\"\<StopIntegration\>\""}]}], 
      "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"xs", " ", "=", " ", 
     RowBox[{"NDSolveValue", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"eq", ",", "init", ",", "event"}], "}"}], ",", "x", ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "T"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testWithFBEventStop", "[", 
   RowBox[{
   "ICs_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "xff0_", ",", "xdotff0_", 
    ",", "\[Theta]ff0_", ",", "\[Theta]dotff0_", ",", "uff0_", ",", "A_", ",",
     "uBound_", ",", "K_", ",", "errorBound_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "eq", ",", "init", ",", "\[Theta]", ",", "\[Theta]dot", ",", 
      "\[Theta]ff", ",", "\[Theta]dotff", ",", "x", ",", "xdot", ",", "xff", 
      ",", "xdotff", ",", "uff", ",", "t", ",", "\[Kappa]1", ",", "\[Kappa]2",
       ",", "\[Kappa]3", ",", "\[Kappa]4", ",", "ufb", ",", "u", ",", 
      "\[Theta]s", ",", "\[Theta]dots", ",", "xs", ",", "xdots", ",", "us", 
      ",", "J", ",", "error", ",", "event", ",", "end"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Kappa]1", "=", 
      RowBox[{"\[Kappa]2", "=", "3"}]}], ";", "  ", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"lqr", " ", "for", " ", "q"}], "=", 
       RowBox[{"r", " ", "for", " ", "balancing", " ", "pendulum"}]}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\[Kappa]3", " ", "=", " ", 
      RowBox[{"-", "0.1"}]}], ";", 
     RowBox[{"\[Kappa]4", " ", "=", " ", 
      RowBox[{"-", "0.65"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"xff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xdotff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "\[Pi]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"uff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"uff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ufb", "[", "t_", "]"}], " ", ":=", " ", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"K", "[", "t", "]"}], ".", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"xff", "[", "t", "]"}], "-", 
               RowBox[{"x", "[", "t", "]"}]}], ",", 
              RowBox[{
               RowBox[{"xdotff", "[", "t", "]"}], "-", 
               RowBox[{"xdot", "[", "t", "]"}]}], ",", 
              RowBox[{
               RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]", "[", "t", "]"}]}], ",", 
              RowBox[{
               RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]dot", "[", "t", "]"}]}]}], "}"}]}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        RowBox[{
         RowBox[{"\[Kappa]1", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
            RowBox[{"\[Theta]", "[", "t", "]"}]}], ")"}]}], "+", 
         RowBox[{"\[Kappa]2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
            RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ")"}]}], "+", 
         RowBox[{"\[Kappa]3", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"xff", "[", "t", "]"}], "-", 
            RowBox[{"x", "[", "t", "]"}]}], ")"}]}], "+", 
         RowBox[{"\[Kappa]4", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"xdotff", "[", "t", "]"}], "-", 
            RowBox[{"xdot", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}], ";", 
     RowBox[{
      RowBox[{"u", "[", "t_", "]"}], ":=", " ", 
      RowBox[{"Clip", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"uff", "[", "t", "]"}], "+", 
         RowBox[{"ufb", "[", "t", "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "uBound"}], ",", "uBound"}], "}"}]}], "]"}]}], ";", 
     RowBox[{"eq", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"x", "'"}], "[", "t", "]"}], "==", 
         RowBox[{"xdot", "[", "t", "]"}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"xdot", "'"}], "[", "t", "]"}], "==", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
            ")"}]}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"u", "[", "t", "]"}], "+", 
            RowBox[{"A", " ", 
             RowBox[{
              RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
            RowBox[{"A", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "==", 
         RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Theta]dot", "'"}], "[", "t", "]"}], "==", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
            ")"}]}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"u", "[", "t", "]"}], "+", 
               RowBox[{"A", " ", 
                RowBox[{
                 RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
           ")"}]}]}]}], "}"}]}], ";", 
     RowBox[{"end", " ", "=", " ", "\[Tau]1"}], ";", "\[IndentingNewLine]", 
     RowBox[{"init", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "[", "0", "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"xdot", "[", "0", "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"\[Theta]", "[", "0", "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"\[Theta]dot", "[", "0", "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"event", " ", "=", " ", 
      RowBox[{"WhenEvent", "[", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"Norm", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x", "[", "t", "]"}], ",", 
             RowBox[{"xdot", "[", "t", "]"}], ",", 
             RowBox[{"\[Theta]", "[", "t", "]"}], ",", 
             RowBox[{"\[Theta]dot", "[", "t", "]"}]}], "}"}], " ", "-", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"xff", "[", "t", "]"}], ",", 
             RowBox[{"xdotff", "[", "t", "]"}], ",", 
             RowBox[{"\[Theta]ff", "[", "t", "]"}], ",", 
             RowBox[{"\[Theta]dotff", "[", "t", "]"}]}], "}"}]}], "]"}], ">", 
         " ", "errorBound"}], ",", 
        RowBox[{
         RowBox[{"end", "=", "t"}], ";", "\"\<StopIntegration\>\""}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
       "}"}], "=", 
      RowBox[{"NDSolveValue", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"eq", ",", "init", ",", "event"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", 
          RowBox[{"Min", "[", 
           RowBox[{"end", ",", "\[Tau]1"}], "]"}]}], "}"}], ",", 
        RowBox[{"Method", "->", 
         RowBox[{"{", 
          RowBox[{"\"\<DiscontinuityProcessing\>\"", "->", "None"}], 
          "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"end", " ", "<", " ", "\[Tau]"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"us", "[", "t_", "]"}], ":=", " ", 
        RowBox[{"Clip", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"uff", "[", "t", "]"}], " ", "+", " ", 
           RowBox[{
            RowBox[{"K", "[", "t", "]"}], ".", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"xff", "[", "t", "]"}], "-", 
               RowBox[{"xs", "[", "t", "]"}]}], ",", 
              RowBox[{
               RowBox[{"xdotff", "[", "t", "]"}], "-", 
               RowBox[{"xdots", "[", "t", "]"}]}], ",", 
              RowBox[{
               RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]s", "[", "t", "]"}]}], ",", 
              RowBox[{
               RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]dots", "[", "t", "]"}]}]}], "}"}]}]}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "uBound"}], ",", "uBound"}], "}"}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"us", "[", "t_", "]"}], ":=", 
         RowBox[{"Clip", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"uff", "[", "t", "]"}], "+", 
            RowBox[{"Piecewise", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"K", "[", "t", "]"}], ".", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"xff", "[", "t", "]"}], "-", 
                    RowBox[{"xs", "[", "t", "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"xdotff", "[", "t", "]"}], "-", 
                    RowBox[{"xdots", "[", "t", "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                    RowBox[{"\[Theta]s", "[", "t", "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                    RowBox[{"\[Theta]dots", "[", "t", "]"}]}]}], "}"}]}], ",", 
                 RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], 
              ",", 
              RowBox[{
               RowBox[{"\[Kappa]1", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]s", "[", "t", "]"}]}], ")"}]}], "+", 
               RowBox[{"\[Kappa]2", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]dots", "[", "t", "]"}]}], ")"}]}], "+", 
               RowBox[{"\[Kappa]3", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"xff", "[", "t", "]"}], "-", 
                  RowBox[{"xs", "[", "t", "]"}]}], ")"}]}], "+", 
               RowBox[{"\[Kappa]4", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"xdotff", "[", "t", "]"}], "-", 
                  RowBox[{"xdots", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}], 
           ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "uBound"}], ",", "uBound"}], "}"}]}], "]"}]}], 
        ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"error", " ", "=", " ", 
      RowBox[{"Norm", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"xs", "[", 
           RowBox[{"Min", "[", 
            RowBox[{"end", ",", "\[Tau]"}], "]"}], "]"}], ",", 
          RowBox[{"xdots", "[", 
           RowBox[{"Min", "[", 
            RowBox[{"end", ",", "\[Tau]"}], "]"}], "]"}], ",", 
          RowBox[{"\[Theta]s", "[", 
           RowBox[{"Min", "[", 
            RowBox[{"end", ",", "\[Tau]"}], "]"}], "]"}], ",", 
          RowBox[{"\[Theta]dots", "[", 
           RowBox[{"Min", "[", 
            RowBox[{"end", ",", "\[Tau]"}], "]"}], "]"}]}], "}"}], " ", "-", 
        " ", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "Pi", ",", "0"}], "}"}]}], "]"}]}], ";", 
     RowBox[{"J", " ", "=", " ", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"us", "[", "t", "]"}], "^", "2"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", 
          RowBox[{"Min", "[", 
           RowBox[{"end", ",", "\[Tau]"}], "]"}]}], "}"}]}], "]"}]}], ";", 
     RowBox[{"{", 
      RowBox[{
      "xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots", ",", "us", 
       ",", "J", ",", "error", ",", "end"}], "}"}]}]}], "\[IndentingNewLine]",
    "]"}]}], "\n"}], "Input",
 CellChangeTimes->{{3.862753343189165*^9, 3.862753411389415*^9}, {
   3.8627553611496043`*^9, 3.8627553647834463`*^9}, {3.862755542386807*^9, 
   3.862755582254092*^9}, {3.862756179429644*^9, 3.8627562078485813`*^9}, 
   3.8627563320549693`*^9, {3.8627564690202875`*^9, 3.8627565488258357`*^9}, {
   3.8627568793814173`*^9, 3.8627568873778677`*^9}, 3.8627585165043135`*^9, {
   3.8627585965107956`*^9, 3.862758689290209*^9}, {3.862758834699833*^9, 
   3.8627588555911727`*^9}, {3.8627590963373947`*^9, 
   3.8627590998392787`*^9}, {3.8627594410134716`*^9, 
   3.8627594626865597`*^9}, {3.862759635094576*^9, 3.8627596377257366`*^9}, {
   3.862759669455618*^9, 3.8627597448635693`*^9}, 3.862759795914287*^9, {
   3.8627603319473376`*^9, 3.862760490473783*^9}, {3.8627605307139487`*^9, 
   3.862760536806006*^9}, {3.8627610047197795`*^9, 3.8627610478400292`*^9}, {
   3.8627611285982723`*^9, 3.862761147921111*^9}, {3.8631982964294224`*^9, 
   3.8631982970332265`*^9}, 3.8631983363504767`*^9, {3.863208693665881*^9, 
   3.8632086943846474`*^9}, 3.863210007245922*^9, 3.863271804426487*^9, {
   3.8632718412836447`*^9, 3.8632718583741503`*^9}, {3.8632719591337743`*^9, 
   3.863271959351703*^9}, {3.863272049174841*^9, 3.863272070205083*^9}, {
   3.863272113471178*^9, 3.863272123024109*^9}, 3.8632747752128673`*^9, {
   3.863274857845314*^9, 3.863274901443305*^9}, 3.863274985905165*^9, {
   3.86327502591031*^9, 3.8632751590365314`*^9}, {3.8632751952308993`*^9, 
   3.863275233662552*^9}, {3.8632753992893295`*^9, 3.863275415841012*^9}, 
   3.8632757933676972`*^9, 3.863276112914017*^9, {3.8632763683199444`*^9, 
   3.8632763983313017`*^9}, {3.8632764721665745`*^9, 3.863276525061578*^9}, {
   3.863278235705888*^9, 3.8632782777863655`*^9}, {3.863278324944213*^9, 
   3.8632783286160316`*^9}, {3.863552728717914*^9, 3.8635527298355513`*^9}, {
   3.863613419658352*^9, 3.863613423534114*^9}, {3.8636150904008484`*^9, 
   3.86361513154671*^9}, {3.8636152078133564`*^9, 3.8636152525520706`*^9}, {
   3.8636152893383236`*^9, 3.863615479516596*^9}, 3.8636157247782784`*^9, {
   3.863615879717803*^9, 3.8636159617646036`*^9}, {3.8636160220243616`*^9, 
   3.8636160299278383`*^9}, {3.863616069486206*^9, 3.86361607601912*^9}, {
   3.863699007217822*^9, 3.8636991515617003`*^9}, {3.8636996033223495`*^9, 
   3.8636996129842625`*^9}, {3.8636997844214835`*^9, 3.863699805489752*^9}, {
   3.863699907217247*^9, 3.863699944316393*^9}, {3.863700788168758*^9, 
   3.8637008845809517`*^9}, {3.863702046275758*^9, 3.8637020830100203`*^9}, {
   3.863702595245346*^9, 3.863702645292355*^9}, {3.863884194660141*^9, 
   3.8638842031804175`*^9}, {3.8638909914788537`*^9, 3.863891009810995*^9}, {
   3.863891113237941*^9, 3.8638911537729845`*^9}, {3.863891279619763*^9, 
   3.8638912855948534`*^9}, {3.863891344230113*^9, 3.863891351574766*^9}, {
   3.8638925953132634`*^9, 3.8638925989880886`*^9}, 3.8641412354391413`*^9, {
   3.864141550931038*^9, 3.8641416655529428`*^9}, {3.8642361939817247`*^9, 
   3.864236202546955*^9}, {3.864236595072028*^9, 3.8642366322340117`*^9}, 
   3.864236674617306*^9, {3.8643997929515553`*^9, 3.864399794341104*^9}, 
   3.8647401548354416`*^9, {3.864740367280447*^9, 3.864740382577551*^9}, {
   3.8647404140084915`*^9, 3.8647404181541643`*^9}, {3.864740488606616*^9, 
   3.864740495693348*^9}, {3.8647405289317093`*^9, 3.864740542820265*^9}, {
   3.864741074561078*^9, 3.864741079667444*^9}, {3.864741140307036*^9, 
   3.864741143520008*^9}, 3.8648372672245474`*^9, {3.8648373045645533`*^9, 
   3.864837353847723*^9}, {3.8648373920424533`*^9, 3.8648375909655547`*^9}, 
   3.864837839079855*^9, {3.865356690975731*^9, 3.865356718635888*^9}, {
   3.8653568425522747`*^9, 3.86535688554853*^9}, 3.865356998743344*^9, {
   3.865357063056785*^9, 3.865357082860453*^9}, {3.865357192303467*^9, 
   3.865357202547192*^9}, {3.865357324369248*^9, 3.865357327732173*^9}, 
   3.8653573727697754`*^9, {3.8653584117496357`*^9, 3.865358421880398*^9}, {
   3.865359119417409*^9, 3.865359146498752*^9}, {3.865359181803466*^9, 
   3.865359209189711*^9}, {3.8654491379879255`*^9, 3.8654492290188136`*^9}, {
   3.8659657476182566`*^9, 3.86596576077604*^9}, {3.8659665703366394`*^9, 
   3.865966589562479*^9}, {3.866052164082869*^9, 3.8660522776132393`*^9}, {
   3.8660523127439046`*^9, 3.8660523189908895`*^9}, {3.866052389927002*^9, 
   3.8660524026289043`*^9}, {3.866052461586882*^9, 3.8660524626125507`*^9}, {
   3.8661445639235554`*^9, 3.866144564756291*^9}, 3.8662991531581025`*^9, {
   3.8663105616671824`*^9, 3.8663105911556373`*^9}, {3.86655653768917*^9, 
   3.8665566051126823`*^9}, {3.8665567002593584`*^9, 
   3.8665567116607237`*^9}, {3.866556768231696*^9, 3.8665568982312627`*^9}, {
   3.8665569505315948`*^9, 3.8665569795043597`*^9}, {3.8665570822686076`*^9, 
   3.866557177227344*^9}, {3.8665572159789963`*^9, 3.866557239450513*^9}, {
   3.866557410142112*^9, 3.8665574555316453`*^9}, {3.8665574951660137`*^9, 
   3.8665575011980915`*^9}},
 FontWeight->"Plain",
 Background->RGBColor[1, 1, 0.85],
 CellLabel->
  "In[1253]:=",ExpressionUUID->"e8e0b3cb-1c67-4747-8c43-f1659f15f5da"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"n", "=", "20"}], ";", 
    RowBox[{"\[Tau]", "=", "5"}], ";", 
    RowBox[{"\[Tau]1", "=", 
     RowBox[{"\[Tau]", "*", "1.25"}]}], ";", 
    RowBox[{"A", "=", "0.2"}], ";", 
    RowBox[{"order", " ", "=", " ", "4"}], ";", 
    RowBox[{"maxIter", " ", "=", " ", "100"}], ";", 
    RowBox[{"maxError", " ", "=", " ", "0.01"}], ";", 
    RowBox[{"uMax", " ", "=", " ", "5"}], ";", 
    RowBox[{"maxCount", " ", "=", " ", "5"}], ";", 
    RowBox[{"errorBound", " ", "=", " ", "0.1"}], ";"}],
   FontWeight->"Plain"], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"maxJ", " ", "=", " ", 
    RowBox[{
     RowBox[{"uMax", "^", "2"}], "*", "\[Tau]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"InitGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"EInitial", " ", "=", " ", 
    RowBox[{"Energy", "[", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"ICs", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", "A", "}"}]}], "]"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\n", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"time", ",", 
       RowBox[{"{", 
        RowBox[{
        "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
         "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
         "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "Jff", ",", "K"}], 
        "}"}]}], "}"}], "=", 
     RowBox[{"Timing", "[", 
      RowBox[{"ffCartPendulum", "[", 
       RowBox[{
       "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", "order",
         ",", "maxIter", ",", "maxError", ",", "maxCount", ",", "maxJ", ",", 
        "InitGuess"}], "]"}], "]"}]}], ";"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x1c", ",", "xdot1c", ",", "\[Theta]1c", ",", "\[Theta]dot1c", ",", 
      "u1c", ",", "J", ",", "error", ",", "end"}], "}"}], "=", 
    RowBox[{"testWithFBEventStop", "[", 
     RowBox[{
     "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
      "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A", ",", "uMax", 
      ",", "K", ",", "errorBound"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"p1a", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1a", "[", "t", "]"}], ",", 
        RowBox[{"u1a", "[", "t", "]"}], ",", 
        RowBox[{"x1a", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1a", "[", "t", "]"}], ",", 
        RowBox[{"xdot1a", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1a\>\"", ",", "\"\<u1a\>\"", ",", "\"\<x1a\>\"", ",", 
         "\"\<\[Theta]dot1a\>\"", ",", "\"\<xdot1a\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Feedforward solution\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"p1c", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1c", "[", "t", "]"}], ",", 
        RowBox[{"u1c", "[", "t", "]"}], ",", 
        RowBox[{"x1c", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1c", "[", "t", "]"}], ",", 
        RowBox[{"xdot1c", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "end"}], "}"}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1c\>\"", ",", "\"\<u1c\>\"", ",", "\"\<x1c\>\"", ",", 
         "\"\<\[Theta]dot1c\>\"", ",", "\"\<xdot1c\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<LQR feedback solution\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"Grid", "[", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"p1a", ",", "p1c"}], "}"}], "}"}], "]"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox["error",
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Tau]New", " ", "=", "end"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Init", " ", "=", " ", 
    RowBox[{
     RowBox[{"\[Theta]1c", "[", "\[Tau]New", "]"}], " ", "-", " ", 
     RowBox[{"Round", "[", 
      RowBox[{
       RowBox[{"\[Theta]1c", "[", "\[Tau]New", "]"}], ",", 
       RowBox[{"2", "*", "\[Pi]"}]}], "]"}]}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"IC2", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x1c", "[", "\[Tau]New", "]"}], ",", 
      RowBox[{"xdot1c", "[", "\[Tau]New", "]"}], ",", "\[Theta]Init", ",", 
      RowBox[{"\[Theta]dot1c", "[", "\[Tau]New", "]"}]}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"initGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Lambda]1ff0", "[", "\[Tau]New", "]"}], ",", 
      RowBox[{"\[Lambda]2ff0", "[", "\[Tau]New", "]"}], ",", 
      RowBox[{"\[Lambda]3ff0", "[", "\[Tau]New", "]"}], ",", 
      RowBox[{"\[Lambda]4ff0", "[", "\[Tau]New", "]"}]}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8665515156717353`*^9, 3.8665515424442005`*^9}, {
   3.866557254928582*^9, 3.8665572751791253`*^9}, 3.866557306718074*^9, {
   3.8665575183286333`*^9, 3.866557525284416*^9}, {3.866557798820238*^9, 
   3.866557829059601*^9}, {3.8665588895316167`*^9, 3.866558891521984*^9}, {
   3.866558967901641*^9, 3.8665589997324944`*^9}, 3.866559252666882*^9, {
   3.86656369689147*^9, 3.8665637035903325`*^9}, {3.8665637371046534`*^9, 
   3.8665637470934677`*^9}, {3.866563795236126*^9, 3.866563795452057*^9}, 
   3.8665638883134604`*^9, {3.866563975524665*^9, 3.866563975739601*^9}, {
   3.866564138179826*^9, 3.8665641383137827`*^9}, {3.8665642684523077`*^9, 
   3.866564268817191*^9}, 3.866564355525557*^9, {3.8665644362438307`*^9, 
   3.8665644363088083`*^9}},
 CellLabel->
  "In[1996]:=",ExpressionUUID->"4d482704-5836-401e-a1c0-981b493daa65"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "slwcon", 
   "\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"", 2, 2002, 276, 
   17545095697018498346, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.866564438252189*^9},
 CellLabel->
  "During evaluation of \
In[1996]:=",ExpressionUUID->"4aaa8e9d-69d0-4d67-b754-394f06de14d1"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
fHDDw/qz1zDUk3iTUyYdZwMu7dJ6pbJmHDzu84l3lu8BD7bNUAO2TIIMqSP5
MdI9oFE0/Es2RxhqvwpYfRX/vOFTzu4iMyJQyN9D+jW+f1Cp6C5hbpkAcyMW
OZ3H16Og2FuBh9xE4NPrt8Wb8Pcn+hPeG4+9NVt/EPtPT4J6FCrzh3idKlhL
14Yr26ImAF/sW/sA/PttOe2ipZUoAp3vJ72bqOtGfYqDFE2Jn3fmY5vCtfda
BI8DqcGA5jD8eG/dMaA2qigCA++fT3Nt7f7Tq5hOss3T2A2a6tuwSwvGwZZP
p0q08e935ljcU+nFkyDxNa0hF//+xyc9DF62CkOD2RXb15fj+6NDIZ3rZCfA
ynhFx+v495N9ZCe1y0EErlgZctEY/z0RfYv1S009XMJOYahvcclBuSZoYrvS
SxZJtXkCLJSx9//rfkV4FMw2adlDU3lg585YlF87DuhmLh3L8PVW1VF12RJD
EVi0du5ZU/z1Ue9CaLe9YPlJYL4sa3PFrDBsq3tdkY8fj/ytICnm0AR4Nduk
F4hfD4IZ0YKX/EXgu/lqv9zw70/0MFy2DXVIS+3G/tOroD7GFb3a1z1K2Hee
r5lPwASY10BRrsT3c0Qv47qNsUE1VRnj+9zBcVwkAr8LJiQx8OcL1MvIl0pe
7WkAdi4/PbBv/gR4cXa4VwM/Xm0C1g2fj+DfJ6s3Ox7/PqifIeibosaSxgjf
ovPTZYCPTxHI6ucq07+Og2Mm7aYL8PV3gCpHC9UVgZFR4bfS8P2jC0kq56vJ
BOggaR+XxV+/QjXoO+OmCFSfFNAtxfdXRF+j+FfLlbP6+zDU1+B7rkmKXI0R
fQ2tKw3TK2uEwbWfM2duqopA1ZLgor/+/7bQL7XCqyfAYHFj8kP89a1knff+
uiACr9L2rHmPvz/qbdjtSptYo4w8jMRCufPNvfPB+zSySBRjHCjV/zhKws+H
w7D2kYTdIvCyfWXt67/uP66Ozz2cJgD72dS3n/j5JnocL1mnJowkDbD/7mWo
c0rlniIv43L53p0vXtWozx1ynZf5eDcV9bmPrjItV9Wnoz63pozu5ZfdDNTn
zo3+8maRFwP1ufcoSog4PqGhPse4SJ2wtTEV9TmOSz6qlHRtRH2OV5GXK6if
K1GfI/roYwdxzyzU5zjuyhHT3Z+OvIyZ5gdK36oq5GWkS1cYlVNbkZfZ+utE
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
gZ6mWGGPYga2VBOKnXcWhQ+M95hfx3+P3SO5seRPZJh1mHT7IL6/V2Gp5Q93
U8F9u/QvQvj7qXx6ulwiiB+WKzx2vLxjBoT1/Tx6tFYUHjrRufs2vp+y8uCr
cT1PhhEZrMw3+PMJ4UcT5TZFZn1/BMaDnTHaXvz3P9fK7mES/jz3dt2OB0lk
GBA5fSAP30/FJczbcp7XATDlvRAbZWAuNU9iQ2r54VmRrHt//Z4OSywK8A4g
Q+mcT4sq8eNBXptwrONzO8jP5Kd+pjKwnfUiR7iPReHFAnVGAb7e/6cfld/4
spYJqKBM94jBcnz949oI5hmm4M8Tv/W6Wfi/D5Kvq9Ln8EPox3HiM58Bcx7c
Cl7xjAxbT7jv+uv9wgZvmJ0w7wBDXf1F1/H7tSGpwbLwLT80W3qibMxsBowN
OzYuuk6G0/tvVI7i3+eJ8MPcBedEYf0W8ilD/PjYhJCDV5RSwT7ejbV++PWy
ZKxB0ucuP4x+m6/wSG8GJJxpuhxQIQrZulZOxfj58K0X4bx9gz+/fvBoTsbP
X7VFr1B0XQcIElo7ZYTfbxzJ9cF8FfxQd+jQjAz+/OIJuJox/vj5C/J18MU/
7+eUg0KPA/Dvt9ewZgz/frmdvzfcuU0FmgfcL3bhx7fq+ODT7s+iMDKj3zQa
//2+jLMaODnLD2mO3OQ+oxlQqFEKmDH4663n7BHDX08zNiNpNrgDqGdNRXRM
MrAD962vdObyw/xGZV8yfn5yw9/fafEmQ8v9n4Z98PvF28PDJyo98PPd7SdQ
i7/+mN6u/sIFHUDFQT9KED9+670ObIx7xg9HDp3b+xN/P8KnzrUNNlwk7Apu
hO3/oNTKD+/YvleRwF9/O0OXdiKIDM+eHuoZwT9PwEu/DZsn28EKC0rHfvx6
qpzB3ts8F4U2ovU5qfj3/e8+9cXG9Wuebid8qm9K/07+59Wo59afZCO/LpSK
em5nH1Q1KI3RUc+N30w4J20PE/Xc8pVX0V9ymajndmWp8HqeMRP13JjKQ06Y
PwP13MjlUY8KltBQz21R+qFdUo5U1HPb0L/Jy5rUhHpu3WNjUnffVCOfujlw
AUlrdxHyqd6kR0/2mz9A8+MscoS7YifK0fw451eCrrMJrWh+3JnKA/fzGplo
fpzOm9zQiXUDaH7cNe2krdMSI2h+HKUn6/Mrby6aH2evJb7s7R4emh939KpH
if8BLuq5vXi9KrVi2wjquTWxuz5doQyintuzC0M3pvf3op5b3rn+TDUTOuq5
Qcma7b+W/UY9N8uD+5YOTxajnttAyDJFypYU5FMNzri4HZ37C/lUzrFOw46t
LcincvGd6vN9NORTXVyv13YrM5FPZWA7tpqm9SCf2hS1SXi6joV8qvD16VJ5
DRbyqUubOp8OX2Ain0pZVPPA61sn8qmyzTs8th7841PNRwyTxSv+3/Gp19pF
JAR6v6Ke2zfjbdNjj5tQzy0+I8lKTpiG5stl/NxnF3+kC82X+2zElxbZwETz
5cYidy9aW8gEhE+1Vc/XTfbtAsinfhwLfmRPR304o3OVgpTqDtR/u/RcdMFl
hR+o/9ZkbH74bFM66r9t1bIgfwj8hObDydWEeB2AQ2g+3HHbGDmFa3/mw60g
C+f6r+Wh+XDaWUeczvDx0Hy4V0ER6hfPj2JED84y52fU5i9DqM+WleJUvKWJ
iryp/OuPddzjDORN62TkUy887UbetKF1a0TBDRbypna/FVcl5rKQNx1Z4lwR
Jd2DvClVtMDA7ugfb6oSMx7s4/HHm8ZozZsX9Ot/701bXq96rfYkA/XdopzE
s2dL6lHf7ePxLH5KRwcgvGlgW+EZWg4DzYvzcU/SKohlonlxOwzz5G4wmIDw
ptm1IicaOF2A8KbyxyS9Fk3RUS/ubBfpaadHJ+rBzbvqrmL3ugr14HI1vr5K
9ctDPThSfsCSucdT0by3lx6u+wrAIJr3FrB/EDpXjaB5b9bdm7MMurho3pvg
tvaiM1o8NO9tmYbqYQZrFCP6cNIjnfqfbw+jXlvyE/12Q8F25Ec3lrGltp2k
Iz8aq9KZXtvDRH7Uo156hH8VC/nRFDH68h78/kH40Wr+BvdvGT3Ij9ro0lMn
r3YhPyqnvf7tMqs/fnT2dfF1W6H/vR91WrBpxTl6Beq91Ylz+3YJtQHCj/a2
HJFzlKADwo9mOGZWPaV3oXlwzp/OChgOM9E8OCfF7/OEApmAmAd372n8mk6R
LuRHg9xyDuevH0bz3JiHNq99JMjFCD9qJCNSHY6vF4Qf7RbKfjKTzUXz3vjM
VyyqaRnBdBYrWe45LQ5f3jcu/ri0E/lP92heKsW8C/nPlRbCgS1/9Tr+9p8P
bboaEz+ykP8sWp0oGnmbhfynS5hdIc2qG/lP+7mb32eu+OM/Cx7qCIuJ/PGf
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
c2+Uiebv3Q6K0HEGTEB4QOFESeZnNwbq2/XRP78tW0BD/boEG4tFj89Uo35d
jDvfdr53X1G/rurQZ+X5Z0PR/Lx9YKFKuuUAmp8no9sx+VNtBM3Pe7qtQHAq
kIvm57VDdYVSMx6an7eFsoGPZcLFiJ5dj4DlWSPlEdSXC0kPcBt82oJ8n0K8
5YTNVRryfXvjW1V09ZjI972/a7cbFPYg37fcffuyyw0s5PvunR/vD1ViId83
cvfDwpy9TOT7mID64XnUH993qnxO0cuaBuT7Mhc8so7T+/e+jyy8Nt5Ashj1
6ZRCdR4fEWwGhO/b8NHlFmMtDRC+76XM9c/kS11ovt7Eo32ari1MNF8vLLv6
1MPPTEDM13vANxHpiD8vE75v7Zt5vrrHhtB8vIvisovdHoxihO+Ldyl0Mdbk
YYTvW37+U8sh/P5JzM+Ljz1948XhUazYyffIkJo4dHJP0Wng70A+7+3LVMOY
mwzk8zwXGm15m9SNfF7tTpNjmXdYyOe97jXhWmSykM/jFg722c7pQT7Pib5D
ds6WPz4vgs/Dcxvlj89TdZQNnhv9733eByWJw/qCnYDwealbp6+MVzIA4fOC
Tq9+NvWWCQifZ+5zSWNBJxMQPs9xQLQ8tmsEI3ze6ZTvoo0DXIzwebdCGgwP
a/AwxZjg7fPyBKDfyeC58i2jGOHrPjV/H0uY04183Qvx4wcfbGAhX/dlzxHy
3FoW8nU/Xm7w74/r+YevIzxdjfinEa/hLkB4OooMn8YEvn/UvPjsDAu/7n2o
FZ32d5iA8HW28ntX98lyMcLXLcshqynt5WFrDGZdnm4VgHYZ1YYKKVyM8HI1
kX3PTur1IC938OsCDu8LC2ToN9UczKFAdcOJB5/dWf/wc4SXs7p7YJsD/v4L
SUL1TXQ6EP6hYbcUv78Tfk5bTPZt6lcuZvlY2dXlMQm6wk8hW/R5GOHjFpF6
xmqme0DjOzvbMkcKDPQsCJfGn2d3Sks+WcGiQI196/dKMXuQn/tV02XSmvTH
z10TfxxrnNkFCD/3KumsagO+vpUeXCib0doFPnrxfNxfMpGfw+IWvLEy4mEV
OeebuYsFYJz6rYjAei5GeLhZI6sls/H4+RkaVXz5lgKHLy+yehjJQj4uqzMx
K6yECTjq4m67OhhgmWA11fUXExBeTieUz9BemoeR35gkZDaQoBuv++pBWR5G
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
f/8fJ7kBYA==
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{498, 2739, 420, 421, 422, 423, 811, 707, 621, 551,
                 497, 464, 833, 729, 643, 573, 519, 850, 746, 660, 590, 424, 
                812, 708, 622, 870, 766, 552, 856, 752, 891, 666, 879, 775, 
                900}}], 
               PolygonBox[CompressedData["
1:eJwV0slvTWEYB+CjLKRi6Dyh8QcYOqBLkkpUsJCi5mqaEBHE1BIkJFQNHQy1
IKnETk0tWlO1hg2toStTa2prxYLEUPPzLZ783vf3nXNv7rlnXMn6eetioiga
RBdNsVHUyHDlM2UzWYOj6IF9E+P5rqsgXn/WXsgInutayNY/tG9mAj90+0nQ
N9jnM5IXumtUcoBE5+f0CxjFS911DpLk7LxuIXG80t0gR99h38JEBnSHSNZf
sBcRT7fuJodJcXZRt4gEenS3qCLV2SXdYhJ5rWulmjRnjbolJPFGd5tcfad9
K5P4qashXd9kX0oyb3VtTNY/speRxS/dbF2fuYqZ1OoydJfNy0gJz9n+Udbx
znm+vdu8jzXmGKaF6+VXuVPWy40ylnb3TJGPw3fLcrlK/pO7ZXZ4JvKz3CFP
yg1yKHv57f45sl9fLqvlWjmEPRTYV8oBuUueCe+MHMYR946WV3TLKQ2fJ1PD
+2D+JE/w3nUz7D3mCqaH6+3f5GnuOJ9qf2LexmpzRE74z+QXeYo/rptr/2Cu
YRZHdWN0V80rSKNXd5c8/VP7dnL5qzvGWH2zvZh0+nT3OE6ms5bwm8mgX3ef
/8swbO0=
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{385, 2740, 2737, 595, 681, 785, 390, 502, 556, 
                626, 712, 816, 437, 470, 524, 594, 680, 784, 389, 501, 555, 
                625, 711, 815, 436, 469, 523, 593, 679, 783, 388, 387, 386, 
                435, 468, 522, 592, 678, 782}}], 
               PolygonBox[CompressedData["
1:eJwV0ttPjnEAB/Dn7ZWN9Sc49HYS96goRpLTyAUXbCzHpMxmNh0dtpbDDTYS
ivIXcJNzDDlVI6cr0oUUypaNtbV8fheffb+/7/O+7/Y8z5soPbCxMimKohhP
uDk9im7RbmjjOr38JssH9/OYefEoumbrYZRMWzmPmOtaq62bETJs++gk27UW
21R9Mcf5xFL7a/sv0p3LeMgc+1Vbsr6IY3xkif2VvUg/wwCrbT9tafpeHpBl
u2Jbp59niBLbFNnCH7Y658mjfKDA+WW4f/0f251XyLgs57T+lVX6j3AvspJL
tio5KjfLRPhNOSF3yT3ysLwvM+Vl322QKRzihr1ejstSuVaekMlUcM75iPwu
N8i4nCYPhmekj7FFz5UxWUa9/p58/UV4n/pftjkXylP0U+w87HqTPsIm51S5
m3tkODe7vkY/yyDrbUkyhzrehXdqe+5zy/WTfGGlbcg2OzwH7pIenpctpi+k
lr7wju1d9mV6I58pCvdsm6Xv5A5ptqbwp9UXUMNb8uzP7IPMdN7BbRL2i7ZJ
5jtX84Zc+1PbN2aE504HqfYLtv9VNmTg
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1He8T3UYwPFr773nde0RmYVQca8ZcssI2cnKyp5to2yKykzRMEqkRQlF
RTSMBi2yiuym9/Pyx/t+vt/nxznnd865N6nXkNTBaRISEh7yI1rGjwM6RJ/V
HpqfsQywT9WMjGCXfT8tzkSa2yfrFR2u72ofLcyT1l00F/utB2kpalnfpCd1
DRPpaJ+NPfF/uCMujI9kPmkpa39Qn2MgLUgxu6rv8RS1udnslK5lEl1JRznz
Q/p8XAstqUN6MpCRTJT37w7rYh6gVVwvdc1P6zomcy+ZqWD+rS5hcFx7XAP1
zM/o+rjXdCMLFc2/06Vxz2kdx6a++e/6Og/TnaxUMv9elzGUNjQ1+0vfZ0ac
i1vM/tA3eIRO9tnZG880zhPPm+3WC+L6rfPwlXU2Klv/oMvpaV2AYdZ3aSZ2
W/fXErS1bqZ/64O6Re/TIkxgZtx3zc1ovox7qUlMpr59Az2rw3SD9tZCjOdR
+3s0B6P4Ip65JtIz7oGmZYd1Xy3K03GPNS9fW2enivURXRHvJ3fbZ+ZT6ztp
bv2PbmVW3EMamp3TN3mMXrQ1S8dO62fIwQ32R/WFuAe0i3fS7F/9gNnxHWlk
9qdu5PH4nuSkqvmPupIRpMa5udX8vG7iCfqQi2rmP+mLjIznEsfmNvML+hZT
4jmQmxvNf9aXGBXfPY5NHqr77BddxWjax3HISz7yU4CCFKIwRShKMYpTgpIk
UookSlOGstRwjl91NWPowO2Uo6bPjunLjKUjjeNz84u6manxbClPLfPj+grj
4t2mpdl/+iFzaBLHMLukbzON++M5m6XnY+uFVKC2/W/6KuPj+9tn4bN472hl
/b9uYy7JcXyzy/oO0+lsn5N91v3i+Vtn4JM4rxZjkXV3zccYvrGPP76l01z/
+1vRvo6e0KH6WrxvWpBx8bsU902zMpLP7QdoSSbR2X4eKfSnEk2pTJV4R+M9
i3cn3od47vFcaBbPgGvU2qJ2
               "]]}, Annotation[#, "Charting`Private`Tag$371934#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1XWYVFUcBuBh6e7u7u7uDgkVVCxQUURCQbF16UYlBIPu7gbp7u5OSWkQ
8D2Pf7zPd37fuXd2dubc3extOjXvGCMSiSSIikR+tEgSMxKZbN006v/ugG4B
0fSgJ0ldM8VeMxJyULeQovrN5i4U5L6uF8n0U83NScQh3SKK6beYP6UQD3S9
Sa6fZm7BvASRSGJ5WL+Y4va2mj+jMA91fUihn25+mSQc0S2hhH6buStFeKTr
S0r9DPMrJOWobin96E8q+zP1r5KMY7plDCC1vVm6liTnuG45JfXbzd0oymPd
QNLoZ5tbkYITuhUMIq29ObrXSMlJ3UoGk87eXN3rpOKUbhVDSG9vnu4NUnNa
t5pS+h3mzynGE91QMujnm1uThjO6NZTW7zR/QXGe6hrpLlgPph4/6TLqFli/
SdrwOZuvyxGctV/LfMK6N+2to6gWrpf35bdyTPiuZQL+ck8ZuSv8bNldtpMv
wjmUJcJnIu/Ib+RvsrOMRy/+dX9jeVHfXQ6RHWQsoqlvflc+lt/JCeHMyIT8
7N5McqHuLd4LryfThfNgfUOO5JzraptPWveherje/ECOZa39subd1l/yoXWE
kuE7k//I33nmuibmS9ZDacAvusy6RdZvk57zunWU0+8xf0UpnuuGkUW/2PwO
GbigW89wstpbEn5nMnJRt4H5np8RMpv9pfo2ZOKSbiPl9XvNX1OaF7qRZNcv
M7clM5d1m6ig3xe+E8oQ4Vd9Dv3y8FmShSu6OrpT1n2pwWZdRd3+cB4oSwxG
6XPqV1i/T1au6urqTlv3oyZbdJV0B8J3SjmieEl3OZxTGjLadbl0K60/IFt4
js03w3vlmv165jPW/akVvgPzQzmOrfYrmw9af89H1jEoH543eVf+QRfr+MS0
biqvhHMQzpf8RMamB43C5y6fhNeTE2VXmYje4Wz7ebnlqvDcynbhc5DP5A8y
u2wpb4UzIUfJjjIOf7u3vjyrG8DH4f1QO5wT+UiOZ5vrqpgPhdekAq3N9+Sf
xKKZ+Wo4mzQOZ9c9eXSrw9kmB9d1DXTnrAdSh+26qrrD4dmlIrHDZ6TPq18T
PkNyckO3g2r6I+ZoKhEnvA99vvC3wbo9ubip28kY8ttbG35HcnNLt4uxFLC3
TteBPNzW7WYc45kQ/o95FibKSUxmCgXdtz58X+Tljm4P1fVHzT2oTFya667J
YTRhqusK6TaE7yOcNevnMh+trG+H50qOlp1kXHqGvwvuayjP6wdRl726Grpj
1j2pQjym6QvrN4bXID93dfuYzgxmMovZzGEu8yjivk2u70wB7un2U1N/3NyL
qsSnRThLcnh4nmhrfion0c06MX3C/xD3/wc0ewq2
               "]]}, Annotation[#, "Charting`Private`Tag$371934#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1GW4FVUYBtBDg4CAdEhKp3RKd7d0N4KAXWAgSIdId6dId7fSISFId4mU
pGv/WM/77Xdm7pk7Z8/J0LZnvR5RIpFIgaiRyMBokUiOGJHI8uiRyHTZQP4k
3+JX3rD+SL6U8+QU+YtMxwr+dH0LeVU/Ww6Qw2UKSpn7yTgsME+U77DONZXl
IV0vsvKldXRmmx863tX8r/lnqoV70uUMn2luSFxO6lrqrpkH8h7rdVV0h829
ycYj3SBy6VdaNyIep3QbGMwQhjKM4Ywgt/NXOa8x8Tmt28hI8ji2Wvc+b3JG
t4mq+iPWfcjOY90o8urXWDchAX/pNlNNfzQ8Y3LwRDeafPq11k1JyFldK931
8CwozRZddd0x88fk5Kmum+6heQzVwzPUvRueu7kZicL51q/kVM453tr6hnkQ
I8wpKWP+NuwBFpq3Oq+G+bj5E4aak5HL/JWMEb5n5liPlxnD8+M/13WXj/Rz
5C9ytEzDMmpY95dvsijsO+vJMkt4ZoxxfX65Xj9DNg/3KROHfRruRb6W0xhr
Ts/frmkjb+oGM9KcirLm72Tc8Fnmbc6raT5h/pTcPNN9oHsc/h41w57XFdBt
MLcgMed1bXW3zEMox3ZdrfBemD8jD891Yymo32jdkiRc0O2gtv6k9efk5YVu
HIX0m6xbkZSLup3U0Z+y/oJ8vNSNp7B+s3VrknFJt4sJTGQSk5lCEeducU4b
knNZt5upFHVsq64tKbii20Nd/enwrvIur3TTKKbfZt2OlFzV7aWe/kzYG+Tn
tW46xfXbrduTimu6drrbYU9Rnn26+rq/zF9TgEj4/vUl9DvMHUjNdV173R3z
MCrwu66B7qz5GwqGv2Mdk7nmKPQwP5HjqMVM15TU7TR3JE3YE9YRpptvON7B
fNc8nFHm1FQ0fy/jsdg8SWbmD+c3lOd0s2TfcH8yOb9RKNybjBXeL+ZZT5CZ
wm8LUa17yqdyrhwf3mX5dvi9prb1jzJB+FyWWk+RWZnls0vJXbpO4R0wJwnX
hn0pozDDfNN5Hc33wntPJX6wjs8S837HG4X3ydyPwkTjw/Beh/ulDrOd955u
t7kzabml66S7H94/KnNA11h3Pvy2UITo4XdBX1q/x9yFdNzWHWQuZRzbq+tK
eu7oDjGP+SxgIYso69x9zulGBu7qDvO+/kJ4/ylKDBbry+l/N3cnI/d0R2ii
vxi+W4oRk166Z3IidVnivPLhuzZ/QKbwHofvjpnm+453Nv8T9gtVOKprqrsU
njXF6Wsdm/nmWPQ2Pw97iTHmtNQzD5AJw3cT9pD1VJmNteF309+tIPeHvSx7
yCEyadgbvBN+M2S08Dlhj4S9LzOwMtyj67vIB/rRVOWYrpnusrk/JYjNUn1F
/YGwR8nMA91xfmMZy1nBSlaxmjVUct3BsIfIwr+6EzTXXwl7mpLEoY/uhZxM
fQZaJ2KZeZrMzrrw/7v+f26zKho=
               "]]}, Annotation[#, "Charting`Private`Tag$371934#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1nfcjlUcx/HbeOxsGSmzouwRoiS7Qp6UHdkrmtrZiczQ1FAoZGXvVcre
e1e2UCKk9P798Xn9vp/fOfd139d1nXOep1C7Xsk9UyQSiakpE4klSYnErLSJ
xG34Ok0i8Qgy43f9bXrV8APvjtJYqj9bLz8m8keRBef1t+s9gB95D5TBMv3v
9W7HJP4YsuIcb4oj8ju4YN4O/iDW8mdRFv/yLrgof4jl5s3hd2Ayb4D06RKJ
l/gNOVv8drkZjsqDcdFndvLq+In3jHk+8yZPjXL8P7Ur/pArGvtS/kguKL8n
58DD8nS1nbrCNefKBVCbf2NuMXUMf1JtyDOoL/MG6r+8svo1b61mj2cmN0d9
fizuVx0fPfVdnk8dxBurt8TvV6fGb/Tdu9SH8LN5JfU/knvJ2eW35CSU5zfV
bvhT/hiFjA/jObHSdeapBfGtsUbIEe+Ct8Av8hD8ad5uXgPr+HOogFX68/UK
YQp/HDlxSX81FugXxlS9xsiFv/TX4Af8iLX4CT9jHdZjAxb6XBFM85lk3IrL
+nviPWA9fz7eFTbqL9Iriu/4E8iNK/p79WpiA38B92GT/mK9OzGdN0GeWCe8
JX6Vh+Jv8/bxWtjIX4zn4/m9zdOgEk/w7vIl+RMU5sN5Lmz2+SXqXZhhrLix
sbE+5Ixyb7mh+h+vok7kT6t5+R9yKzzCf+Pl1M/ivcR65Lep7/BkNXOsBXWa
2la96nv3x7pEXb7J/FLqx7HnYq/Ee1L78LSozFPwHvJf8qcowkfwW7HF9Zaq
d2Omsadibca6iLWM4/IwXDPvAK8T985fjvvCVv1lesUwizeN34/rccbEuYHl
xopjtn4z5Mc/cSZghf49+F6vOW7HDf2DcX/x+3hv3I+d+iv17sUc3gJ3xDmi
f0ivHrbyV1AVu/RX6ZXAXN4SBWINx7vACXl4nA/mHY69im38VVTD7ljreiUx
j7eKMyPWOW+Dk/KI2IfmHYn3ie38tdgPnnFfni7OTZ6SPytflsdjT+wVXgrz
eWtkMucVfjP2cuyJeOc4JY+M52Z8MM+CBD+qPoodcmljn8ivx36S+8np47vl
b9UH9VPJPeXH1CuxX9QJsRZj/fGi6kjeRM0de0udobZX98a+lkvHGuALzL9H
HcefUp/mt6iv8kZqQr1fnRTnROxX9Rmclsvrfy6Pivcd56GcFSn4sfh92Cm/
gepIbU4vvb/lz7EvzhdeBgt5m1jT8YyxP84d/bJYxNvGfcV+5+1wRh4dzwK/
8AbYJb8Z54rv6c8zxJ7jSfw5+ar8Be7ko3geHIizTS2HxcbuNfZB3KOcWX4t
7gdV5clxHulfjWcZ70zvbJyz6hdxLqnvx1pWh/An1GxqDfW7uKaa2vivcabE
Oue7eRn1U94s/i7EOacO4I+rGeOdq1PiOsbSyM/L1+RK8lfyl/Jd8mg5Lw7G
Wa2WxxJjJYx9GM9NziK/LqeMMy/OA7UDzsljYl8ZH8qzI4n/FusAe+S3kdf4
QJ4JD/O0/AX5ujwBh+JvBK+Apbw97o5zhHfE7/LYuA8cj3vEXrkPauJw/H3R
q4hlvAOKxTnDO+G8PC6+Fyd4Y+yT+6IWjsTfJr37sJx3RHGkw0m9ZOyX+6F2
7D3zN+pVwgreKfYD0uNUvMNYI3J/1Il1bf4mvcpYyTvHmkEGnI49F89fHoC6
sTbN36xXBat4F2T1zN7gqVAt/i+Jc0gtYeyG3BkX5A+QEWf4kzgkD0S9WEOu
uyX2JlbzrigZZ0+8M2PHcQIncQqncQZnsTXWM9aY2w2lYs/jbJwBOCwPQv14
bn7Xi3r/yF/Fu4w1zvOhljwz1o96znX/B1qhYjs=
               "]]}, Annotation[#, "Charting`Private`Tag$371934#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1XfcTgUYBuDXXomsypa9SYjILtkRSbJCkZmVkJ09InvTEiEqiRSaklKU
EsrekVVm1/PH9Xue+z7n+M533vN+8nXo2bRHkkQi0SBpItEpdSKRPW0iMT9N
IlGBU/KHzOJB/Se6J0jNz7rO5NAvkCtyWv6I2VTSb9Q1Jw27dc+RU79QfpAz
8noa63bJL5CHObrKuk32FqRlj+55cukXyZU4K39ME91PcjfyMlf3kO5T+5Ok
o4d83hzPL463lg/YX6IEg+Sb5iy6OJ5bXmyvzLn4XeUT9hFskB+Xf7Z3Z4w9
Dfns/cyr5mvMc14VebO9JSPtKbjD3tO8YC42J8T5ZmZW8KvrnjEP6heYA+O+
4zrepqQ82LxlLjVnm6+b2XiPrq7PYy7RzzYfMoeZSfk7PgfzZNwPk+wZ4rPV
NzV3x7NirD0t99n7m/+a05jvvKryZ/anSE8v+R9zInsdbyP/aX+ZUvG56vLq
ltqrcF7eyAIe1n+ua8Wd/KbrRj79MrkqF+RNLKQ79zn2hv5h/pE/ZRE96Ekv
8jvnTcercVHezGJ6U8Cxt/TVuSR/xhJepGA8Y30NLsufs5Q+9KUf/SnkvHec
U5Mr8haWUU2/Rfc0GfhdN4DC+uVyLa7KW2mm2xPvAvl5Q1ddt9Xemozs07XV
/RXvKKXjndUV0b1rr82/8d2QT9lHsU1+Qv4lPhsKMED+z5zOm47XkLfFO2o+
E9eZKeO5cJfc27xoLjEnxWdvZmElf7i+nXlIv9AcbE4w08czoYw8xLxtLjPn
mDPMu1kV77Pri8a7Ht91s4453EwW9+hYF/O0bjST7Rn5Qt88vhtxbxSM5yBf
i3eftxyvGefZ25CJF+VL8W+w3/H28uG4N8rG+6krFr+T/RGuyV/SQrc3rqcQ
b+tq6b60tyUzB3SDKB7fOflRrstf8Q6DGcIrDGUYwxnBSErEs3BNXW7IX7Oc
2vqvdO3IwkHdKErqV8uPcVP+hnepo/9a156s/KkbTSn9Grket+RveVL3m9yH
wqzQPaL7xt6BbPyl66A7Yn+F+3lVV1r3vr0+t+Wu8pk4xna5pfy7vS9FGChf
j8+dlY4/Kn9rfzY+V3uqeB/iXszL5hQOOe9Z+ah9aPw9sd9JubgXMxHfe+bK
M8174pkwxnVlzLX6uWYDc4SZPP4GxHXxN8g8ay6K8+PnxXse30m+c/1T5j79
fLOfOc5MR9F4T8wb8TPj+2PPGp+5a+qa23Ud4znYU8c9xTMwr5hTOey8jvIx
+zAeYKyurG6dvSFJ6Cafi2PscLxVfM/s/SnGKt1jca/2TtzLEd047td/IDci
Kd/rVlNPv0PuTHaO6sZTTv+h3Jhk7NStob7+e/k5cnBMN4EH9B/JTUjOD7r3
aaDfKT9PTo7rJlJev15+nBR0j/934pnGM7Fnir9d/Ojcp839+gEUZ62uoe4H
exdycUI3iQr6j+WmpGSXbh2TmcJUXmMa03mdGVR03QbnNyMVP+k+oFHcg9yV
3JzUddIdtw+nfLyHchLm2WeZ98b3ipnO/R+C5T7x
               "]]}, 
             Annotation[#, "Charting`Private`Tag$371934#5"]& ]}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"Feedforward solution\"", TraditionalForm], 
         PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1a\"", "\"u1a\"", "\"x1a\"", "\"\[Theta]dot1a\"", 
           "\"xdot1a\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
3AfhNLPjV0XRlpaA5mPmI6AtnjvxFomhqABRsXOBLJg4R/e6LCCOvsGFX4Zb
pyAMks92F4gjmnfRrUgmG4r+vhnOC6QitdIdcXeSOeCu7Tr70EICqY9Kl7Be
cSDT4vL7L0toyKu6/r1YNxuqDnevP99K3N/2ElSblCn40TKtUBItiTRNpqhi
QpOwZ9X2N76OUmh0ywSnu3QcyLx+3PL5xejIISyk/lpj/E4XCKmcPvDmWQQM
vH7qpPGlF1Q7d/Q59Bby83TRVd8Gr5f041UVu4+u8J8BEe4CprEmG8+R+Naw
SZaCfK90cn5s4+KZ3i9idX8oSGKT6kOvgzx8a/23yiMxAijjRAy1+zUHn1mg
VsWYJ4pCdrp8uhQ9AH6bSy91NImi3EtvLi9MGoN1Fw9H74oRQyukO5+oiEyC
lOoKirq9ODJR6d5mvY4Nrm40r+RVVCTQv7hahzhnnmpg3HvdT0V9AZmV7sQ8
/5tQp+qbJYG+xg1KZB/iQKt/1oFqbxr6ojS4WdKWDWSeH2e5xqUtdhSrqigG
1OJZyPfmjPt94+C3EqEbpxIo6GS20qV7e3h41wsp7WvOAmhEoHG++2EuFjS5
k1++Thy9VbMdCsufAr+mv1fMxsVRUMu10qMbOBDSZJz7IY+KXJXe6wbmcGD1
wJtnfrclUNPdgjKDWxxwvevVf8+YgpSarvruLeJiy5Kev2miAqjs7WSzsTYP
f/zh7YjqiP1amTX9XR4bLxb6anjviTgqNq5sKn/GhpNzDfzmHaGiqfeGYtnB
HNhYH2AZukQCSVrPtf+WwYGnDiKfb/RJIGH9sqM9ShwgPSDVx7jVb8E4Jj2A
u3TytdsABd29GGZ8v6sBdP8t67o51AV+ZS0hZpZt4ND/Yifb5Q9cCP9NcUyh
QxNd40+beBEce3jutPZwN2QtmE9rHXmL3Z1T2UZKTEhZIOeVZ/2d7wXtTVf7
Llyu5ef/qed0utcwO/n5v7n4zjUrMnv4+X+d6ib7zKt9/Pz/dVhha2r0ID/v
r1a+skwobpyf98s+Mrr96MUkP+/vcKkI+7aew8/7g3o6i6WpPFwmp34xXFMA
XalWzvLlcLHVwhVBe7kCqHO14k6zqSlstPtPz/14EfTdvVaDkdgLp3fqzLl0
RhQlO9p81+MNw7MlpQJhG8XQu+7m35k2xDlnvadTOEsM7d9u/tx98RT8tVE+
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
zyat0+jGpF+yDoZuXT3Rg0m/zFBt2/Fei4FJv/RxSdn2vYOBSb/kispCiAgT
yw5UZIZslUQpZSMjru8ZuIYptG5WWAp9NPztUv2rF5O+eUzS1eoLNwaTfaUL
m86NrHM4DGRfyXkHfh6SHQpk/6jsWoaFUh8D3OUsE++4s2Hi2CObXZZMEGlM
ePNxlgPb3BSdH+5nwlsXpYqcZzw4Lly76HIrg++dlsK+ysrDvZj0ziNzywbe
FDKwmZMsxcSchsZ/vlCSozLxSKzt2IykJHK/tekhu4LB7zvZH59csuKsL5zM
clp0L3MK3hWraW9czQTHljj2XB0OLLpweqk/sd+7G7RZzqGSC7c91ixavYrJ
909Rt9irImcZmPRP3SPjG+9NMbBrgm2CbQoNxdxceFmTS8wHXSP31c6SSOaQ
d3jBHQa/L8VxO+X/aVEI30cZVXW+rd2iQPalBKhJSvEv/IHsS51+P98mSiYR
yL5U78Grh89uzgay/xSxZ/4m573dQPrnWuMy/Ze5PUD6p6LZAtuDv3uB9E+R
xoltB7MYQPrn2Q6bna+2MIHsPw3Wjqo+IOYp6aF7HAc6WqSYQHqo96zy/Zyd
DCA9VHK2ZuchYr6QHqr1V2zb9pQuID00/czQC2dhOt83hV3WREi7dWDSN0d/
L9jmwuvEpG9GfrjjfnG6G5O++SC8x0o1tBeTvillIWihHMjApG+2rAzIMxJi
YtI3Za1l/oUPMDDpm4O7JX75HWdg0jcr6/P33jXrxT2Kr5LVlaWRQ/zq01H1
3Zj0zpJGHQWt+nRM9rMAeXrxrJyB7GfdrIvwbJ0XBWS/Su/8VRmDvb1A9qsq
DZ8YCVgygPTQ38EWmwfnMIHsV0XMUOLOE/sBsl+1UbjMXN6YCWS/yrEjVdcx
lwGkn3LXLdwY/6oXSD+V3TvSVVnbzfdOxsr9IXckujHpnf8ttvLs/NuDSe8s
2ZZn81iJgUnv3Kynn/a6iYFJ74zs3ei1gVjvfzRd3vFhvSRSXliaducjA+9T
u1OxiC2JYutzix919mLSQ7MX1zn+pL3BZL/rmdO+Y/an9gPZ7yrP3dRrUxIM
ZF/LUu3huevtDPhzXHUm7Rgb8u5aPfy7hwkThToL27uJ89Wh1MOZh5igvtqt
9aUnD/wftQ4tZjL4PlqgcXyE1dqLSR/9F8OyVc5m4K43q9+tMKShHYm0+hxi
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
B9aBlzo6MemzPQ/EZgJ7ujHps+aZOPGkXy8mfVZd//nFX7cZmPTZfJXlMSuJ
9YT0WbvDmvdsieed9NlP27T3ep1nYNJnm1gOaJ9NL662keo7vkgaMbTiDD79
68ak17ao3rF//DEDk/3KuZ+Gr2Z9Pgdkv5Ja1/HT+kIEkP3IeNWBZEmjXiD7
kee3GUqYEecR0nPj3+Ye8Z9hANmP1Pg16ZtqxQSyHznzYsmPGDPifvtfP7K0
f758RAkDSP917vd6SU3rBdJ/K3Qa23UHuvleuz32PuviWBcmvVbt9uqdD7/3
YNJr40sbajvmMzDptWljx6rpv4n94f+8NubuooZFxP06X1JjXbGaJOrv/T1H
KI/Yn4e93n5hSBKdQzxlf+J8S3rurphdsv3RcZjsZ65zv9EwN2EXkP3M9Scu
jqodeQZk31JyleCPmQYG2B+6l/97DxsWFx25KLWLeB7W2f+7WcMBuW2++wuJ
9aQsw1XjwTkexP4y+Vk6zOD7bkbX6m2YON+TvntQ5O9URCoD20h7/aNupqEw
EOpVIq5/tDjr4ho2DXnvDe+wJc4TZL8zUGP6sGudJ/wWF1lYe38KzFVGivSX
EfvPxc3SDhIc0Pe9e+8asZ6oMYePacZwwaOAFXJ9A5PvvVWvfAKr9zIw6b1P
mwQlcoYY+PauomdLw2loyvxWpxJx/+lavRqxsZFEqjNz51x+zuD3Q9df8TXK
7Y3AZD+08I4Po0hhLSzv0rqwfikb3jzuK4o0ZEKgoFfl72gOCG87L9ZLzH/S
f8sv9B/vjWDgR7feGn5TpKGOH0evqhLricMr3iOHDmK/6pGt962Hwe+Tlja/
vXx5yAXkku7l5jezwZxy7GcNsX+n5tKMfJ25YNeyNCIYmHA/Q6yq4LMEemEe
bXujk4Gzc4cZDbdoSL6uIE2OeH2yX2r9bQPOD7eD6G9NMte92BCQT/VaRKwn
P47tENMQ4ULQtXsRycT/l0ebh+61pKGkqYU+CsR68uzhulPCWzgQUXk3JoyY
J1su6jnkDkgggS2PrsYQ64d5Y7CBQxoNXbvq7rSBWF9IL6b8s3fjLQ/GZB+1
xBYf25YgA17/xNHsXQ4g9aVftv/f5/W5sD9Wllj/5k5H9RDz13P48LyBYjb8
3DjcN0ycZ/ePi4ZkudJQyAq5B3+I9YTsq645tqZBzOgg5JjUeBzq58DBFxvr
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
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{397, 2540, 2538, 393, 394, 395, 396, 731, 637, 
                560, 500, 455, 426, 747, 653, 576, 516, 471, 762, 668, 591, 
                531, 779, 685, 608, 796, 702, 814}}], 
               PolygonBox[CompressedData["
1:eJwV0clvTlEYB+BbRStRIk1jLkVEGivjGpuyQkJC2JTOw1fz0rhG6GjogoSw
oFVVVTtTVVv/gI6mSsrGrBZ93sWT3/m9535f7jk3rzC1s3pKkiRp9PNlRpKM
ccDgmY0i5vFOv88lBvSTrOGX/pqDPNeLmc+A3sJlinhhVsICBvVWaimmhFLK
eGm/lIUM6Q+oo5xXZmUsYlhvo54Kus3KWcyI/pAGBvVTrOW33kNlvLNeQS6j
ejuNVFEdz5lXsoT3+iOaSPHGrIqlfNA7uMKQfpp1/InnqKFXj0vO46P+mHHr
82xiGlPTk+SW3BP3Z90lr3puWJ6Jc5mtl7Nki/wbH8z6hvUuevXvso4CZpJh
/47cxyH7fTLFsti3d09+Mp+Q19lOjnmH7DT/Ki/EOc02yzmyTa6S0+O95W25
Qu6NbyufytXymt+PWJ+NO9Y3yNmyVa6U/+ynyZvxPnK3nCs7Zb7ss//Dup6t
ZJu1yywyre/K/Rz2XL+sYTmf9f+ymR080b/Ji2yJO4mzmo3Kc2xkIv6Dn9YN
bIt75ojZ27i7OCNjehfNHOUYxznBJPDYbYk=
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{348, 2539, 2536, 456, 501, 561, 638, 732, 401, 
                430, 475, 535, 612, 706, 354, 400, 429, 474, 534, 611, 705, 
                353, 399, 428, 473, 533, 610, 704, 352, 351, 350, 349, 398, 
                427, 472, 532, 609, 703}}], 
               PolygonBox[CompressedData["
1:eJwV0stLVGEYwOHjDIhjRCYRQYuQMLOstl20NqWLrIUFBkFBf0BCFzNNzczR
LhvLReWiq2YUBBERkd1r0yK1MmtbljOVqUEXSO35Fg+/730Ph5k5c/J2VVXs
jkVRlMFLUokoStNm0UqSFo5yjRf8ZIWbDvGBZnMPz5lguV0d7zlivsozxllm
V8sQTeZB4s7rOEmabrunjFFkPsg7DptzdTOd/OWtXUzXcoIUXXYztIwOJnhi
t1UvMs0P81KtYZBG8069QXY8imbrHeY4b9Jz/OFNuM/unvM83aYLtUvjmqEF
ektztEQX6HEd4Up4BuZe5/m6XfO1RzM1Wwv1tuZqqebpaR3nsfvv6ly7LXqB
KUbtb+pM+yV6IDwbGux36HUSruVoOWf5zWvXK8P3IuZ6pMUc4wuXXU/oBk4x
xiO7Cj3PJN/NhVodng/15lm6kTP8YsBumjXObXzmkjlL19Me/hMe2n1jsfP+
8P3Ce2buZ4rV5laGw39pfsBXCsz7wueEd8/cxySrzEk+hWdl7iXNIvNe+sP7
aH7FP1aaW/gYfp/5PinyzXvoC++juYb/HeZwiw==
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1Hl8z3UcwPFtxmw2ug8i29CpzRTWTFGWbtaMDaXJXaYocnZfiHTSLSpy
VZQOHTpQkXKULooORzlzVfR8P/zx3Ov7ee/rd3y+n8msqCwekJiQkNDFj2hN
Pz7XDvqwFmkVOtHb+lzdqyX6vl6mqRS5ztGtOo+LXVfjPtet9aB+SlMyrX/S
FxlGofUBXUQZ51jv1Ld5kCRqmX2hj9CHi8g1+1Pncz9nk2W2Tl9iOOVU4Qjz
ZfoofWkX70MyR/rdcn2MfvHZaUZVqpFCdVJJ4yj3f6mP059LaE62+Xp9mRGx
p9TgaPMV+gTXcyktaGD+s05nJF1J5xjzr3QSN8Qek09D8190BqPoRgbHmn+t
kxnA5TQx+0vf4IF4bjQy26CvMJpW1v/oR1wd39l6l77D+DgLHGe2Up+kkgLr
ffoBV5BnvU3fjH1wncIY1230kC6O+1zXoMD1KbpRi3VmPAetSmdusz5P/9WO
+nF8F02jnGtin3W3XqXvxl5qdcqYYH1hnGNKWWp9paZTy/XxukqfivPjOpmB
rlvqfv0w7o8zar1dFzCWC+IPgyVxL6e6/lVncTvnW/+nn9A9nq3137qQh+Ls
cYLZan2aG2kf59Vsh77FOAo5zew3nc0dXBvnkxPN1+gz3ESHeH6cbv67zuFO
KuJ8Utv8G32WQbHfsbecYf6HzuUuesT5pI75t/ocg2N/43txpvkmfZW7uS7O
JyeZr9XnuZkSWsdZpK7ffadTuCWeZZyHOEvU87vv9QWGUBr7G88m9ii+Z3z2
+DzxHvFa8W84mfpkkkU2DWhIozhX8Vxi/2JP4nvGZ6cxZ5FDbryO9/9BpzKU
TnFm4j7zzfoa99CTJvGe5j/qNG6lM23jNc236OvcSy/yzfboe0yM+6yT+Cye
t2YkHv5/Ns/6f/1AkkY=
               "]]}, Annotation[#, "Charting`Private`Tag$372019#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1WWYVGUYBuDZBUFQEQUBBcG1A7u7BQNBbCVXuhaVBunu7ka6uxEwUASL
7u7ujvu9/HHzfM97ZmbP+ebMISU1rWi1pEQisdo/xfgpOZEoTXbW6mPpSHFK
UJJSLHQ8lVtYp4+jE6VZZPYNOVivj6czqSw2K0NONugT6MJGvSGPc0r/nb2Z
fI782awsudioT6Qrm/RGPMFp/Q/K8ItejlvZpE+iG2X51aw8t7FZn0x3ylGe
ClTkN8crkJst+hR6UIklZhXJw1Z9Kj2pHOdtVonb2aZPoxeb9cY8yRl9KVXi
nPXK5GW7Pp3eVCW+mKXmVcjHDn0GfUjjT7Oq3MFOfSZ92aI34SnOxuuozjK9
Gins0mdx0Lojr3MN6dMlEiPkl7F/1nNlP6/bKpvGdZk9LbPISfJc3DzWQ60/
ZZl+QvagINeT0fHRshjfOr5cpnFnHHdsgtxtfkEOoEjcV+Yz5WzzQ7JTXKfZ
G/ImOVXeLzPEecuR8m75VXy3cp7ML/t7/zbrZrHH+jPyRjlZ3ivPO54kh8X5
yM/i3pSz5YNyueMnrXvyLtnMpssbuNZ6jCzOd173l6zOXezRL8qBfMQc/bDs
zJuxJ3GtZttlc57lQnwGp6x78V7sM9+b/R17F9fIXn0uA6lBTWpRm31+M3Vk
Xf6J8+Ie9unzGMQOvQXPcTE+m3r8G38r9oX9+nwGs1NvyfNcis+lPv/pNbiP
A/oChrBLb8ULXI7PpQEr9JrxvXEwnjUcse7CW7GfDDXbLVvzIlfi73Daujfv
x/fHD2YrZS0e4JB+SQ6iKAv1o7Irb5OJYWZ7ZBteIkGy7/BH+TkrHD8j+/AB
WeN9jo+VJWjo+CpZO+6NuAccmygPm1+Wg/mYHOaz5CLzY7IbKWbvyJvltDhn
mVlmkKPiO5Jfy9xyvnw4ziuegdZtyae/HOckp8SeyySZTg6Pe05+IXPJOfIh
udL7z1r3pRDZzWbE74fM1uNkSRp53WpZJ97HEf2KHMInLNaPy+4U4DqGx70m
2/FK7COrzM7JfnwY10pjszWyLvk5Gs9zRrBfb8+rcR3J//8f1IS11vViDzgW
z3NG0pR1ZvV5hOPxPGcUzVhv1oBHORHPcEbTnBa0pBWt42/7nbSRbWlHezbE
fcVjnIznPGM4oHfgNdKzxuy87E9hssWe2M/xshR5rBfEOcoOXnsVFjb7cQ==

               "]]}, Annotation[#, "Charting`Private`Tag$372019#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1GWYlFUYBuBZWWwQRezCbrq7u5ZuWFKBXbpbaRAJaQsUbLEDi+7ubpYO
WxT1fn/c+z7P+a7Za+bMOZMzNT0lLSmRSGT4kytTIvFqciJRmKsyJxIn9Avy
WLLoC/R9ch+u0R8xL/MKAzxbbbblFn5lIlutZ5jDyU1r/SszhQSL9SPmIJ6K
/6VvNdO4h/16bl6Ti5Ahv8NA1ujtyM42PZWv5boksUSfRh5e14tyUn6XQbQh
L29YL8Yp+T0G05Z85KcABSlEYYpQlGK86XXFOS2/zxDaUZy51ktwRv6AobTn
G2v1Yo9Zqk+nBPP0kpyVP2QYHfjWWn0ysUyfQUne0ktxTv6I4azV23Mr2/WO
LJIbkMxyfSbb5HTu5YBeirfl0pyXP2a/3JdHeUFfZ3YgBzv0k7FOHp7TvzMb
kpmfmcAK60fNwVzvzDxtXmFGnBN9lufb5a5crd9n/sFksukHPT8jj+RGPX+c
G3N2fEaztOfz5TKxP/oF/aI8jqz6Qv2A3I9r9cfMv5nGi56tNztyG7/xMjut
n4rn5OV5/XuzUbxHVurHzCE8w2x9h9mN+zmkl2GBXJaL8ieMYEPsFbezS+/E
D3LjuFOs0udQNs65Xo5L8qeMpDM/WmsSn4fVcWcpF+daLx97L3/GKLrwk7Wm
XMeauEuUj7OuV+AX+XNGk0aFOMvWK8Y9lr9gDOlUpBKVqUJVqlGdGtSMs+51
lWI/5S8ZS1dqxbm2Xpnf43eAcXRjsbVmcUZYG/eV2nGu9SpxJuJuM57uLLHW
nBtYF3eYOnFu9ar8GfeMCWyM75A72K33YKncIs4U6+Mes1PuzgMc1lNYKFfj
r7iHHJT78zgv6ZvMTtzJHr0ny+SWZGGDftwcyrPM1XeZPcgZ75MpHLF+1hxF
AerGmTGrc1m+ZI5nkXzIHBDfp/P8hPkP07lZn+j5Zrlz3EP9rthrJnGTvtfz
0/KI2Ds9n/kfs8iu9/J8udyKZD1rnI/4rGz07IQ5jFz8y0zmWd9t9uTB2Cum
ctT6OXM0BakX59isEXcwfi84LA/kybh7+hazC3ezT+/NCrl1vH82xe8ee+Re
PMQxvX6ceblm7EfcVybRh5XWUsnG5vido0Gceb0WV+IOMpm+NIwzb712fMa4
b0yhH41oTBOa0ozmtKBlnHevqRN7GveOqfRnlbU28R2xRZ/PXrk3D3NcP2+O
oRBJ9n6OmcNs5dn/K28FOg==
               "]]}, Annotation[#, "Charting`Private`Tag$372019#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1Xe8jgUYxvHXllGhbCEzCam07L3HEaKyIzsiiuy99957FWWUEcqOhiLt
ZTTMRCVF3/uP3+e6f9fznvM+5xn3yd+2R1L3ZIlEYlPyRCJrqkTirjSJxIDU
iUQKrOadUBOP6BfoCuIwH4tsuFv/mi4l1vDOqIUy+oW6QviAj0N2ZNUP1KXC
Wt4FtfGofpGuMI7w8cgR36EfpEuNdbwrGut28Mr4mdfBY7rFvAiO8gloq/uA
N8KfPGecg24wT4P1vAc/aW6JbvwpvtNcBb/wunhct4QXxYe8H//B3BETeTt+
xJyEuebk+Es/Sl7SvYxc8ffwIea0mGC+Jl/Xv2j+wtwKi8xp0F3fRL6r2yir
ypnyptwjf3V8sPyFvyN7yBUyI/ahnuNPyKX6N+R9coq8LnfJjxx/Rf7It8oX
5FKZDpMcay+P6hpjnjkF/taPlpd1fZE7rikfar4tvof35F+aW6MHb8p3mavh
N14fT+qW8WL4mE9GHuTSD9Olw4a4LmiAsvrluvvxCZ+Ce5BbP1yXPq5RfDca
Ii/yIT/uRQEURCEURhEUxX0ohvtRPM7B7xvhd2XAm7wXGqGcfoWuOI7xqXgg
zkE/UpcRb/GX0Ey3m1fHOZ6E8rqV/AF8yqfhed2H/Clc5yXivHWj+O3YFN/P
vzK3QW/+NN9jroHzfEg8B+YX4z7xCnyVuQSmmv+Rn+lfNf9k7oRl5vSYru8Q
z0Gcu2wi58uUeC9+1vEx8nf9dtkv9oG8EwdQMq6xHB3vkbwj3gX5p9wpN8f1
kF/zzbKtXCzToo9jzeN7dDUxy3xLXtAPNf9m7hnXhlfkq80lcZz356fMnTGD
d+Qfm5viBi8V9103ht+JLfzleJdQSb9GVwon+Ew8GM+IfqwuU7wLvG88tyiN
h/Bw7L94jnxunM9kxtuxB+J+x66L58ux8fos8T7GuxX3C5X1a3UP4nM+K3Zd
PIv6Cbq7sC3uUVwTVNGv05XGST47dls8t/qJurvjfsR1QAtU1a/XPYQv+JzY
V/GMx3usy4odfEB8Xvc+r4WL/BlU073OH8aXfG7sjXg/9JN12eJ+8tfi87q9
vDYu8WdRXfcGfwRf8Xl4QfcJb4Z/432Pd003hWfHu7w3/8bcDgPjd8XeMtfB
ZT6MnzP3wnO8Bt9gLoNp5hvy6/i7zKfNXeL55Z34MfPTWGBOhf/0Y+WVuBby
FblGZsJBlI09IKfGPpY55KTY4XGusb8c7yO/jedJtpdL5G1xPeP/k+PPyf2x
N2RdOVsm4v1xbLg8r3sJK823o6W+ptyoexTTzf/Kb+Jam8+Yu8bfwDvzT83N
cTP2Uews3TSeE7v5YLRCLf2busfwLV8Y+yf2W7zzulzYE7sDrVFb/5bucXzH
F8Ueif2mn6HLjffivUTLePd5PVzhbVBHt4k/ge/5YnTRfcZb4Fa8w7HfdDN5
Hrwf7yT/zvw8hsW5x70w18ccczL8oR8hL8Q7InvLVbFr4lrHTnG8buwa/Qb5
ZOyEuN9xTeQPjg+UZ+N9ld3kcpkhnmMscbyrPB77Vj4jF8rUce/M4+Ic5KtY
a86MSn6mpJyluweTzX/LvbE3zN+bO2B4XF9+yNwAV/lIftHcJ557Xo9vMZfF
j3wQ/9ncHUt5N37C/CySoXLsN91sc17si+sT90F3mDfENd4e9XVbeTn8xJfF
bol9p5+jy4f9cU7xvwgN9G/ryuMUXx67JXagfq4uPw7wUfF/Aw317+gq4DRf
Ebsk9qV+nu5eHOSjY0ejkX6briLO8JWxO2K36ufrCuAQHxP7A0n67bpKOMtX
obvu89gHSI7x/Krsj3XmLHG9UcNn/wdKt18m
               "]]}, Annotation[#, "Charting`Private`Tag$372019#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1FUYFVUUBtBLtyAd0tLdJd0hLd3d3aGoKIpioYJi093d3d0dUtIpIOU6
D+vb/94Td+bOmcnYrnf9XlEikUj6qJHIzliRSMs4kciN2JHIOKqSnOfmQ8xj
MEPfjgLsMm9ldlP+imqk4IX5UPOYzNS3pyC7zVub3ZK/pjopeWk+zDwWs/Qd
KMQe8zZmt+VvqEEqXpkPN4/NbH1HCrPXvK3ZHflbapI6XJtZGtbJQ3htvxH6
OMzRd6IIP+mzslP+mH32a6e/K39HLSbr83NYThPuQ36L9fJQIozUx2Wu3JmZ
clFOykX5Wc7GLnmzWpfR8lK1AlfCvatN2e8a2qv3zA6o49VValXelaeoBTjB
Ef02tQEXw3WF/01Ny1E26DeE4zjHMP0CtTSnuRCeqdqYy0TRv6/GC/fLPP1a
tQZd5FlqMU7JxZgkZ2e3/AnL5IpcDdfuPjrI9+XvqU3a8JzM0rFRHk5UPtDH
Z77cleIcdHxHswfyD9QhHdE4ZFsn2x7KP1KX9ETnsG1HOMoxjnOCk5ziNGc4
yznO09m5Hjl2AvXIQAxGmSdggdyNElywfxezx/JE6pORmHxo/gYL5e6U5KL9
u5r9G9YbDcgU1pdZejbJI4jFR/qELJJ7UIpf9DnYI3/KJefrpn8S1hUNmaov
GJ65nJnxcgY2yxvV2oyUF6plwlqRY4c1LydisbxOrUlPebZaPKzfsE70O9T3
uMQ7+l/VnBxjr36LWo/zjNEvVytxhmvhPVWbhXXO366/u/o0PGN1krparRZ+
Q56mFgrnlrerDXk7rCE1I1vCGmWRXDZckxyH0fKbLJF7MUcuEa5BLs1vci72
yZ9x2XX00D8L/zGNyELcsJbNE7NU7k0Zrti/p9l/4f5pTFbicdW2XrY9D79D
E7IRn2u2XecfbnCTW9zmDne5x316O8cLx/xOU7KTgAe29bHtpfwHzcjBG2FN
mCdhmdyHsjy0f1+zV/KfNCcnCRljnpTlcl/K8cj+/cxey3/RglzhvTPLxNbw
jpIo/Hf6ZKyQ+zFXLslZuXy4djl3+I7Jn/PYufvrI0zWt2S6XJjjcu7wDsuZ
2SZvUuswSl6slgtrRt6tNgnPOJxXTc4RVurXq7XoL89TS4VvVPjm6XeqjcI5
qBD+PzVP+G0O6Leq9bnAWP0KtXK4H67r96nNwzctvMPuZYAahUNMsX2NWp1W
8gy1CCfkPEwIa5ft4dvAErk8l+XEjJVTsEoewPzwfoX3SK4Ynp2cl4PyFzzx
+wP1UZmqb01eJuqzsCN8Q0gS9tenZLU8kEo8dfwgs2hM07chH0n50iwVa+RB
VOaZ/QebRWe6vi35ScY4s9SslQdTJawdfb7w34TzsVKuwj/yfrVF+B6Ed8h5
/wclqyy1
               "]]}, 
             Annotation[#, "Charting`Private`Tag$372019#5"]& ]}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"LQR feedback solution\"", TraditionalForm], 
         PlotRange -> {{0., 4.767789232120855}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1c\"", "\"u1c\"", "\"x1c\"", "\"\[Theta]dot1c\"", 
           "\"xdot1c\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.866551520412222*^9, 3.8665515431379786`*^9}, 
   3.86655729854068*^9, 3.866557461644698*^9, 3.866557504175143*^9, 
   3.8665577443166075`*^9, {3.8665578011295004`*^9, 3.866557829869341*^9}, 
   3.8665588947209625`*^9, {3.866558969013285*^9, 3.8665590006701956`*^9}, 
   3.866559308907958*^9, 3.8665634959545083`*^9, 3.8665637128403845`*^9, 
   3.866563799911634*^9, 3.866563890687703*^9, 3.8665639801112027`*^9, 
   3.866564088377698*^9, 3.8665641400952144`*^9, 3.866564273600665*^9, 
   3.866564356869127*^9, 3.866564438646064*^9},
 CellLabel->
  "Out[2005]=",ExpressionUUID->"0cee3289-af60-460d-82ce-54c6ada6cd84"],

Cell[BoxData["0.7293815224256553`"], "Output",
 CellChangeTimes->{{3.866551520412222*^9, 3.8665515431379786`*^9}, 
   3.86655729854068*^9, 3.866557461644698*^9, 3.866557504175143*^9, 
   3.8665577443166075`*^9, {3.8665578011295004`*^9, 3.866557829869341*^9}, 
   3.8665588947209625`*^9, {3.866558969013285*^9, 3.8665590006701956`*^9}, 
   3.866559308907958*^9, 3.8665634959545083`*^9, 3.8665637128403845`*^9, 
   3.866563799911634*^9, 3.866563890687703*^9, 3.8665639801112027`*^9, 
   3.866564088377698*^9, 3.8665641400952144`*^9, 3.866564273600665*^9, 
   3.866564356869127*^9, 3.866564438692049*^9},
 CellLabel->
  "Out[2006]=",ExpressionUUID->"8b834e51-f127-4d62-a35b-b955044f5fa8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"n", "=", "20"}], ";", 
    RowBox[{"\[Tau]", "=", "5"}], ";", 
    RowBox[{"\[Tau]1", "=", 
     RowBox[{"\[Tau]", "*", "1.25"}]}], ";", 
    RowBox[{"A", "=", "0.2"}], ";", 
    RowBox[{"order", " ", "=", " ", "4"}], ";", 
    RowBox[{"maxIter", " ", "=", " ", "100"}], ";", 
    RowBox[{"maxError", " ", "=", " ", "0.01"}], ";", 
    RowBox[{"uMax", " ", "=", " ", "5"}], ";", 
    RowBox[{"maxCount", " ", "=", " ", "5"}], ";", 
    RowBox[{"errorBound", " ", "=", " ", "0.1"}], ";"}],
   FontWeight->"Plain"], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", " ", "IC2"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"maxJ", " ", "=", " ", 
    RowBox[{
     RowBox[{"uMax", "^", "2"}], "*", "\[Tau]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"InitGuess", " ", "=", " ", "initGuess"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"EInitial", " ", "=", " ", 
    RowBox[{"Energy", "[", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"ICs", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", "A", "}"}]}], "]"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\n", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"time", ",", 
       RowBox[{"{", 
        RowBox[{
        "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
         "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
         "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "Jff", ",", "K"}], 
        "}"}]}], "}"}], "=", 
     RowBox[{"Timing", "[", 
      RowBox[{"ffCartPendulum", "[", 
       RowBox[{
       "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", "order",
         ",", "maxIter", ",", "maxError", ",", "maxCount", ",", "maxJ", ",", 
        "InitGuess"}], "]"}], "]"}]}], ";"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x1c", ",", "xdot1c", ",", "\[Theta]1c", ",", "\[Theta]dot1c", ",", 
      "u1c", ",", "J", ",", "error", ",", "end"}], "}"}], "=", 
    RowBox[{"testWithFBEventStop", "[", 
     RowBox[{
     "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
      "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A", ",", "uMax", 
      ",", "K", ",", "errorBound"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"p1a", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1a", "[", "t", "]"}], ",", 
        RowBox[{"u1a", "[", "t", "]"}], ",", 
        RowBox[{"x1a", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1a", "[", "t", "]"}], ",", 
        RowBox[{"xdot1a", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1a\>\"", ",", "\"\<u1a\>\"", ",", "\"\<x1a\>\"", ",", 
         "\"\<\[Theta]dot1a\>\"", ",", "\"\<xdot1a\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Feedforward solution\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"p1c", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1c", "[", "t", "]"}], ",", 
        RowBox[{"u1c", "[", "t", "]"}], ",", 
        RowBox[{"x1c", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1c", "[", "t", "]"}], ",", 
        RowBox[{"xdot1c", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "end"}], "}"}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1c\>\"", ",", "\"\<u1c\>\"", ",", "\"\<x1c\>\"", ",", 
         "\"\<\[Theta]dot1c\>\"", ",", "\"\<xdot1c\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<LQR feedback solution\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"Grid", "[", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"p1a", ",", "p1c"}], "}"}], "}"}], "]"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox["error",
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Tau]New", " ", "=", "end"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Init", " ", "=", " ", 
    RowBox[{
     RowBox[{"\[Theta]1c", "[", "\[Tau]New", "]"}], " ", "-", " ", 
     RowBox[{"Round", "[", 
      RowBox[{
       RowBox[{"\[Theta]1c", "[", "\[Tau]New", "]"}], ",", 
       RowBox[{"2", "*", "\[Pi]"}]}], "]"}]}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"IC2", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x1c", "[", "\[Tau]New", "]"}], ",", 
      RowBox[{"xdot1c", "[", "\[Tau]New", "]"}], ",", "\[Theta]Init", ",", 
      RowBox[{"\[Theta]dot1c", "[", "\[Tau]New", "]"}]}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"initGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Lambda]1ff0", "[", "\[Tau]New", "]"}], ",", 
      RowBox[{"\[Lambda]2ff0", "[", "\[Tau]New", "]"}], ",", 
      RowBox[{"\[Lambda]3ff0", "[", "\[Tau]New", "]"}], ",", 
      RowBox[{"\[Lambda]4ff0", "[", "\[Tau]New", "]"}]}], "}"}]}], ";"}],
  FontWeight->"Plain"]}], "Input",
 CellChangeTimes->{{3.866563774267808*^9, 3.8665637802429056`*^9}, 
   3.8665639075873184`*^9, {3.8665639845357933`*^9, 3.8665639847687197`*^9}, {
   3.866564278058247*^9, 3.866564278521099*^9}, 3.8665643631231337`*^9, {
   3.8665644429376984`*^9, 3.866564442977683*^9}},
 CellLabel->
  "In[2011]:=",ExpressionUUID->"fa647c23-3903-42bf-a448-5077ddb72382"],

Cell[BoxData[
 TemplateBox[{
  "FindRoot", "cvmit", 
   "\"Failed to converge to the requested accuracy or precision within \\!\\(\
\\*RowBox[{\\\"100\\\"}]\\) iterations.\"", 2, 2016, 277, 
   17545095697018498346, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.866564363869896*^9, 3.8665644437044516`*^9}},
 CellLabel->
  "During evaluation of \
In[2011]:=",ExpressionUUID->"4e07385c-4378-4721-a313-fba00a32dc8c"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
M1otdHhaI2+m+XEEmZyPXvtzhAaTp2bO13waQ9+7KZt/ZdBgBXdFuN0cO2gv
CgmI6Bdgraru0DbW44PS4gPG69/Rwc02xiBXjx98L83ohq5mQLhqfcOJVSNo
roonYaKQBrn8kUfpm8eQ2fvnFQ9IfyC+natVlcIPy/Om7lmR95vXbvY/+DRH
kYdVIp8gHx1cJT1/W9/kA5URK2uLETo0+ez6uNeHH+Qqz/wsYzKgK1iKXjH8
bz6yjygyAiJGkWvJXcti0t7Wylx6Op/GB3mGji+PijDgaL/QVb3gERR0T2S5
Rg8NZH3ell/uY4eItRNOh4MFWM8tCAcZdX44p7MybIj0J6OpfosOLRpDhtJ+
txA7HbZuXUS7M8EH43fZvWpI/2R77/CEhMQoKs1TiP/IQ+6nYkmNyEt8kK0Q
LBrYRgequ83Pd878MHhLM7WVnO/DdNN7g3WjSNmncvslfjrcVt55cMdPPjiz
UqORjVzvFtaGTWurRtCt2aILqdM0MDl7d9mJg/ywuGPNhaKVDLhjm/w8y2wM
Pf/hwVtLPv/g7r7MH2Lk/ZCnnOMweX7/2LoncxwZRSfCw3uPkXGc+Ku5fY9n
/s3P9K2LGQ0mbcjX9WpLyXAHivE9bt2yswuVvdsl46M+jcrYzT6X3ulFmrKf
vxJinBBq1Jt32WoQffy9zNxcngIsiLNXMhlGitvXhQYZ0GDrOt7xP86jKCL6
3LQGOd/HtVYYjZ8fRyX8Op8GV9Kg47mywa9jk6hx/MK7SmEeSKfWKBS5TaNw
h8KfoYPziE+YrbzK+S8ya1EUXc/ZgyKOKNUcfDCH/sZuOdLO7CIwL+AiZvL2
9DIOFuYF7A4YiUceZ7BwvT//yNl7Rk95We0nMkqv+FHg6/V4jy10TlZx9kF5
Zx8qdPl61P062keY6XZ++elO3lsPBT99UN6MQouLW3PJuHXT9oTaiYOziD+q
u0nrJgPaxZYZy+zkhhVi/EEOj3jBjn/X+P/cD+nVzO9OL/ngauLM5loqA5Q7
Dk9yRfODyHXbk5wcDJgeGwiWfk/Gu77npR7a04A/QKV4jYkgtEtESVgG88D4
+45B7wpBOEejXuJdzQFq1dsqpA4LwV+X+kMqxeMI8wj7ncSuiARQWZMfwoLa
rP7ZG2Ebu4wnF/+PekOz12zKng50f6395TKtEXTmheb8/Jlu1O0UOv70ABuI
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
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               PolygonBox[{{386, 407, 368, 3205, 369, 370, 371, 372}}], 
               
               PolygonBox[{{476, 389, 404, 405, 406, 805, 695, 604, 529, 475, 
                445, 830, 720, 629, 554, 500, 853, 3208, 3209}}], 
               PolygonBox[CompressedData["
1:eJwVzE82gmEUwOG3wqgp0jlUS1CswSRJCzBo1B+HHYjDKTsRFdUWKg2EpnZA
kzbQoMfgOe+9v/udL1O+Ll1FQwgRCjwY7mmwHQvhyTFPhA+tyy07bm3tlCgz
rcehPrJX2OdXu2NXf7YXiPGpnWg/5htyvGpZbWyuUjevvAdcmJfeVjyEJm++
zWkTrUaKP61JQn+xn7HBl9bnSH///y9pFlqLPb1jL7LJtzbgkaRbVztni7k2
5Fif2i/JsAYNmiak
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1:eJwV0dlTTnEYB/BTTCpb90paVO61Ei5tN7IULhgNM2aqt8R0YYx9SZTETJO/
AaXNdm0oNJaoLDfKhaIsoxkzhs/v4jPf5/mec+Z9z/ll7IuV1cRHURTHI84Y
ztLGQ8ZIccNu+sieE0VXdQ8YZbFuF71kudaq+8kK+2GGKNXf142wyL6THjL1
V3Q/yLPX85zV+nu6IvNpPrJZ91a30FxBNxm6Ft06cxOf2ab7rss1H+IZq3R3
dYXmU3xgk+6NrtU8Fd7PvkCWc4dl9mbXb5hnOWBfK+NlHRfNE2w1z7gvQR7h
eviN8B/kXpkjz8m/sio8K4/Kp7JE9nu2USbSQHt4Z/lLVsoCeV7+kzXypDwm
38uNctjzc2V9+Ja6E3IynImcL/9w0LxDdpFuvuyZDvNv9tvXyDhZS6N5nDLz
tPuumWfYY18uaxmk2N7nen74Td6xQfda12L+Es7Zniy308lS+yXXS80X+MQW
3TddtjnGAEW6Xt1K83HGWK97pUsKZ8xt0nRNuq9khe/DEwr1PbqXJIYz4hap
4dx0U2Taq3lMgb5b94J54d25yZLwPXST/AcZUmcK
                "]], 
               PolygonBox[CompressedData["
1:eJwV0bdPVnEYBeCrxBhjVxTbwmajOaoL1UIixkUGDQK2kCgJsdCNBTUmOmCi
YcBCVfwPFJSigK4qutEsOOiAIYog8PyGJ+c95+aDC198QfGhs/OjKJpHH1cc
V3nGuzB6mE0LsTFRVG37zib9FN0k29tsb5llv62Z1fYq/Rsb9ZN0kWR/atvh
ruIzWbZ+2wz79CZW2Sr1r2zQT9BJov2JLcVdyScybX22/+zVG1lpq9B3u28w
wkHbF9td9y+O6uvlcV6RoLd6vlBe4L7tNwXuZDnDmfBzw++WAzJD9vrMTRlD
CXfsl+QPmSunPa+Rk/ppuUeWywa5QpZ7fksuopQ6+zU5Ed5N7gpfkizmurta
DsscOeqzC+Q5am2X5U95RK6TUxS5C+VLtrtbfOaee5x8PSm8Dx9J1994fts9
xmF9Ss9yP2a5XqbvdNcwxAHbiC0u/K/oYJut2ZboLuMDabbXtn9k6o9YFv5m
fZi14X1oZ6u9yZbgLuU9qbYe2yQZ+kOW2i7qQ6zRj/GCLfZGWzd/Sbc9YEn4
bvVBYvU8nrM5fB+2Lv6QZqtnsf28Pgd5Cmev
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1He8iFUAx+Frb02aVlNGhVKRZBSh5FIihEpmt6g0iHY0NZQWRXuhIisN
RZP2MIrKqCipZBTP7+OP537POZd3nPN+bq2+RYUXFysoKCjyI93Nj3d0DL05
zvxXnUZr6piv0Cl0NC7BNcYt9G89X+doV61AI+Pq+pn20Ae1Q25Ef4oMm+lG
7aMz9Swtx2A6mzfQn7WXPq+dtBQDucH8FN2iF+p87aaVKG68uy7QsZxm/F/u
w/HGv+n0/H/qmn+vTzKClub/6FyOoYb55zqBS+hCQ2ur9QVupAR7WHtXb6Mv
p3IsNa1/oQ9xad6Rkuxp/T29PXtHGxpTitKUoSzlKE8FKlKJyjmvvGPuy16u
tVDv4ALa5vyoZf1LfZihnJ37srf1RXpn9i77k33hIOtf6SMMy1nm2lSx/r7e
RT/aUc/aD/oUIzmBg619rY9yGSeZ/6mvcw6NzNfoi9yUPTLfqm/mmahq/oHe
nXsY/68X5drG6/UV2lPffKU+zZnGJbnWuJVuzh7ovNxTK5IPvYn5IfqN9tTH
9PR8+wzgcvPmuinnp7OyX1qeIXTL96Br9Tx9SQu1NDfn/HSbvpX9Yh/zD3Uc
/WlivkFfpQNHmq/SZxhFUw619q1O5Aq65xuytk5f5pbsEfta+0jvYUDeg6Os
/ajPMpoTOczadzqJ4Zyb52I/6x/rvQzkDJrluvkd+3MAB1KN6tSgZr6pfCc5
6+xnnjn/3vU+0fsYRMecPYdbX6qPcyU98ky5tvXFej+Dc4bZe2pbX6ZPcFXO
KdfIc1hfouMZkr0y/11foxNHm/+kz3Edrc3/1Tc4mSPMl+vkvGv+PnB1fqd/
6Wx60dj8F51KZ+My3GrcVrdrP30756KVi+3621k7e6SfZn/1gXyjuiPfbr69
nIX+ob11hnbRsgyi0Px6WuS7yrPSkjrUpR71873kjPOuNKAVDdkJMcCaXA==

               "]]}, Annotation[#, "Charting`Private`Tag$375460#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV08dvjgEcB/CnfSMianfYiZvV6YaLTrPEhYNZm9CoqupUFJFwICEOVpfW
+gPsDpuTfdLWqgMSjVClfJ7DJ9/f9/v0Td++bSfk5S/eFhUEQTfVMUGwXSlg
B4XsZScDI0FwOjoI0vmpN1PDRPs120pieWsrIsZ+Rs/gl95CLZPs122riKPd
totB9rN6Jj16K7Nsz/RiEqmzTbbdcK8mng5bMYPt5/QsfuttpNue67tJot42
xXbTnUcCnbZcW7u7munh19uG2M67s+nVl+hd7iPc1TP0F+4SksP3o3+XJ2jw
fKp+y72Gze5eOZJl7i+ySh6ThbIf77xmoeywVcgDMl8GzHCvlT/kfnkq/Ezk
AA5T4rVDZU34fmSO3Ch7wp9J/vF8qfysV8qjskBGOMQ9zzPlS3uZLJVbZZ9M
CT8rd7c8SZG7Pxe8JlHeDt8bo1iuf5XHee/5Ir3TfZCZlNqG2Wrds/mr3yfL
9ir83qTSaEuy3XGvYzQfbGUMt9fpc+jTH5Bte62Xk0aTLdnW7F7PGD7ayhlh
r9fn8k9/yEVS7C22DYzlk62CWHuDPo+AR7ZL7KOSuPCzsM8nise2y+wh3rNG
2wKieWK7Qqq9NfwdMY4uWxUJ9iY9lwhPbTm2N+HfBNO4akuztbk3sSX8/crx
rHB/Cz9v/8f/AdpffIo=
               "]], 
              LineBox[CompressedData["
1:eJwV09dvTnEcBvDTqipq3dnd1q0uo+XSSuiyE0JIrFaNuBCxq8NoaUX4D8xu
+9KmrU2LGyPRWqUhIcLnXHzyfL/P75y8OefkTVhRlFsYEQTBH0pig+CCZWKv
ILgRGQRrieOjroSh+tP2uUTRoqslVX/Tvo54OnUHGKY/Y59Hb1p1dZQy3NlZ
XQ7RtOnqSdPfsq8ngX26LsoY4eycLpc+PNQ1kK6/bd9AIp905YzUn7fnEcMj
XSMZ+jv2QpL4rKtglP6CPZ++PNbN0LWbd5JKky5Td9dcRDJfdDm6t+ZSsjio
G62rNRfQj0X2TnmEJ85n2jvMu0ijWTdJd8+8kRSW2b/Jar46z7W/M5eF15gj
yDavkj/lSQ65Ls5eZ57PGvNv2Z/F5q7wN2Wl3CyjeOqeWfKVbofcHb4f+U8e
kOlypeyRe+UJuU3GUMZF90+W9/XbZXH4DeVfWSLHyOWyW+6RNXKrjA6fz715
8r2unGJzJNPMq+UveYrDrou315sXEMsS+ydZxTPns+2vw98gg0u6KboH5k2M
pVuXr/tgrmB6+E10CboG80IG8Fw3R/cmfGYyuaybqmsJ3x3j+K6rJFHfGH5n
BvJCd4Usfat9C+P5oasiSd8UfhMG8VJ3laMkO2sOn4/BtOuucYz9VFPDcVLC
9++apQyhQ3edbH1b+J6ZQI+uQFfqf/4fTWOAxw==
               "]], 
              
              LineBox[{3209, 476, 845, 735, 644, 569, 446, 831, 721, 630, 555,
                501, 408, 806, 696, 605, 530, 477, 447, 409, 410, 411, 412, 
               413, 414, 415, 416, 807, 697, 606, 531, 478, 448, 832, 722, 
               631, 556, 502, 854, 743, 652, 577, 871, 760, 668, 889, 778, 
               907, 417}]}, Annotation[#, "Charting`Private`Tag$375460#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1nfcVmMcx/G7Ke2poZ1UtJGWoq2EhpURLYqGEtKWUdHe2tEu7Yy20h6a
2huhZaRd3r8/Pq/vuM65z3POda7rPAWatW/YLkkikVidNJH4PBlSJBIXkicS
nZEbv8h1sJ0/ZnwTXxwL5YwpE4lO/Av8ZdoEx/n8+j78SsfPpRkxUp9G345/
hL9AG+IB3f64Fu0p16AJeT9fCaXkNXJW+p78GH1DvsW/hgryb/I99FP5cTrA
dQfwF/XF5HdpStpal4f/NY7DDj6nvlv83c7ZTEtgkb4JrvAv4gS/yvjXfCaM
kqsgCQ7IlfED3xoDHTdQ/ot/D3lxQrca8/SZMVpXFUkxSD9I9zf/PvLhpG4N
BmNIqPF/9F3i2eKU7gfM12fBGN2jSIahcY7uX/4DFMBp3Vos0GfFF7rHkBzD
9EN1l/iuKBhzrtuiK4nF8otYp1soZ8NYuRou8o1wgE+BgzG3WMu3wXDnDJP/
47uhEH6T6+KnmAfjW2OOsUTOZC7e4V/ir4biZNyD/iP+R8cvonfhft04Y2lp
+7gurS7/xTfGg/JBOQ/tJdekKeVDfBWUltfJ2ej7cjX6pnybb4aK8hm5MO0r
j3Dt4fSyrjvu0LeR7+HP0HrYGffnuG3x+1gqv4xr/Ms4xa83vpjPjvFyjfgt
HJarxj3yb2Gk40bIV/ge8XfEdXTbdWXwjfwKNuiWyDkwQa6JVBilH6m7yvfE
vfhdtxFL9TkxUVcLd2K0fpTuGt8LRfBHrHeMwRcYi3EY7bjrxnujKP6MtYNv
9LkwSVcbqTE+ztfd4D+M9Yiz8X7hW/3dmKyrE/sDJsS1dDf5PrgP53Q7dGXx
rdwUW3XfybkxRX4cf/PP4FC8FzjCP4r1fFskzFlz+Xd+YtwPf4v/KJ5ZzH+8
V/Gc6BPYxefSd+fPO/6n2K9iXei+M5aZdo5r0Ffl6/wreFg+HWuJfizXptuc
/33sP7F/yl8aT0c7xPtI68r/8M/iIflw7B20t5yOPxp7Hzbwd+m78O1iD+Jb
8H/wk2J++Nv8xygecyjXx27+gvGdsTbwvfwatuuWyXnxlVwP6XEs1gQ28u0x
2XHj5QQ+kUvE+o95wXJdPkzVPYEMmKKfoEuCT+WSsTbjGeJLfIWpmIaJjkmK
vo4pFfMYfydW6PJjmq4+MmK6fpIuGfrJpeO56XZhpa4ApuuejP0EM/STdcnR
Xy6Df+P4eM5YJjfDbt0quSBmyE/F/GKmfoouBT6Ty+KSbrdcDsvl5tgTe7xc
CDPlp+M6/HM4wmfBcb46NvEdkNTctZT/5GfFc+FT4vNYk8beivct1hd9Env4
/xy3J94xrIjfje8b34K/QZuivO4XuRD9RK5D98Y3JfYrlJBnxTzTt2PfoQ3i
vvjn477ko3I++qFci2aVT/A1Yv+RN8vZ6Qfy23wyvhV/NvYavh8/O+aZ3oEB
+gdj7fNPYS9/2fje+HuxUm6JffFtkwvH+XJDZMNJuSa28B0xJ94fORUGyg/h
iu7n+Nbp7sUcXaNYL5gb75ruTgySy+Gqbn981+PbHN9TTDeeGoONP4xrugNY
pyuCubrGce9YoJ+hS4MhcvnYA3QH8aOuKL7WPYMcWKifqUuLoXKF2Nv4p7Ev
5s/4Pr4CVsmtcJN/Fb/yh4yv54thXqwzz7lj7BnxXtAXcIzPiVMxb9ga13Zc
V74Tn5x/na9Ez8lFaH+5Ll3k92fFfoP75GHGU9O2cmVaUT7PN0BZ+Wf5btoj
3mt6M54/XxGrjb2Ow7oN8XuYLz8XeyoW62fr0mO4XAm3dEfiexbfqPiexDci
9vnYO2Ofir0Gc5yTASOcUxm3dUfj26a7Hwt0z8ffhtNybWzj30GK+P9RPs8X
5T/j69EVzv8f4l1ySQ==
               "]]}, Annotation[#, "Charting`Private`Tag$375460#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1nf8jWUcxvEj2cooo6FSoWRkNJSQlJEdMiJURvaeITIyMovsvansWaHs
UDKTEWWPykqh9/eP6/W9Pp/7fo5zzu957iN7w1ZVWyZJJBKjkyYS5ZMnEodT
JhKppXGKROJvPEt6SIpUiUQhfhj/oOziKsgRLo004S7j2dJTUtpfmB/OZ5Mf
uYpylEsrTbkreI7ktrcGt5grLr24VNwz3Aj8kPzEVZJj3F3yPncVz5Wn7H2T
W8KVkA+51Nyz3Ej8sNTHg/Fpfbf1Erg53oKrS2c8HSeRytZ/M++WZtau4arW
e+Bf8DycB9fES/FQfbX+st5C/1y/qve2Lw1+Do/C/fXF+iN6A32IvsE8g6eZ
O/HPrnlZb6GvNrda+8xcj3fH94S7mDPwJvMOc565zzxkVnH9cT2dLIrPGN+H
uQD/YF63/obZE39tHrI+3tyM51vLq9fSl/HD9DV6Sb2lPla/pvexLy1+Hn+K
s0tD/Ak+q++xXhK3xNvwm1KVO4HTSwv8D14gH8X7kd/5DNLS2g28UPrKXV6n
CP8Z/6js5V7hWnHbcU2pxv2BM0or/C+uZk8v/Cv+AufDtfFy/Iq0wuPwdb2f
9bvxC3g0HqAv0R/T39GH6uf0ffaVwq3ju8Sj9Q16Lb2rPlPfbCaN79LcH/++
Wd11J/V74h6P6+PeMBfiHeZ/1qubH+JvzMPWJ5hb8F7zS+v5zTp4hbnC+nBz
LS6lt9bH6//os/Tden/XpNNf1MfwH+tL9cf1d/Vh+nl9v32v4jbxXnBt6YZn
4TulhvVT5r3SxtpNXMN6b3wEf4Wfxm/hlfjV+P649FxR7nOcQw5wb8ppLpO0
5W7hRfKxZLD/JX4sn1MOcjXlDJdZ2nG38WIZKLXkLJ9F2ltLyBJukGT0WsX4
cVwu+YWrLee4rNKBSxL3pX198FF9qfUCuC5ehV+Twdw9XHFuPH5C3sPD8QX9
kPXXcFu8E4/Rv9Pr6N312XG+mMnMBeYB83D8HV13Xr8vzizcMZ4p84t4nXim
4742P8LfmsfwxDgL8D5zmesLmvXiO4+zx/oI82tcWm+jT9Bv6LP1n/UhrrlX
L6FP4AfG6+hP6o30Efp35kU83dwV965rSuvt9F38WxHuAr5fOuGkspwrZN/b
3BpcRj7hMnEvcxNxbjnM1ZWL3APSmbtTVnBDJbP9JflJ3FNyhKsnl7gHpQuX
TFZyw+RtqS9/WssmXa0ll1XccGkgf/EPSTc+hazmRkgW/9Yr/GQujxzlGsrf
3MPSnUspa7jC9tbn1uKyMpLLypXipuC8cowrw7XnfsR14+zgLsd5Lx/gVFLL
nr74N32t9WdwgziLcTlpiyfif/U5+p74zTFH2Xuf+Sqeam2QvlzPpzfWR+rf
m5fwDPPH+DdcU1bvEH8X8ydrn5vfx+9M3D/4A3MO3momNxeaB+PZNt91/RU9
uyyN3z/7P4rzKO4HM3WcF2Y/fFyfpG+Lz+K6Z/WGcZ7F96V/o7+ut9Mn6f/p
n9p3P34NT8P5pUl8Vvynftx6uXg+8G78djx/3FX8qPTEaeQb7jn73onnBZeP
30zuAa40Nx0/LSe4RnItznbpxaWVb7nR8qD9ZfgZXAH5nWss1+PclA+5u2Qd
N0ay2V+Wn8kVlD+4JvIPl0N6c3fLeu75+D65dbhC/B24h7hy3CxcSE5yr3Od
4u+D60tT7gbOKX1wOqljT398Qt9gvQh+D6/HFaU9noxv6mOtP4xfx7PjTIvf
D71wvLb+qf6Xfsq+8rgz3hPX6Rv1BnoPfa6+zUxhfmH+Euem+b7r/tVzybI4
s+zva34Vz4GZPs4Mc0B8dvN3PNncjvfHeen6F8xGce7G76n1Uea3uJLeQZ+i
39Ln6nvjXHfNI3p5fQ4/RF+pP6O/r3+m/62fjv+j4i54L24ozbj/8BPSF2eQ
77kX7WscZyCuLOO57FwFbi5+Vs5wzeVmnJvSj8soG7kJ0kJu8bmlP3+PbOIm
yqNeqyI/j3tOznIVua5xpsdZIS252/gpGYDvjXPEno/xH/pm60Vxk3jWcRXp
iKfi2/H8WX8MV8Lz4wzWV+nPx+fWR+sbzct4ZpwH+KB5znWVzG5xxpn7rY8z
N8W9EPct7mnOw9vNlOaX5iHzmNnK9QkzD14e79f+fuYi/JOZCdczB8Y9ap7E
U8wf8BbXvqQ3jfcWZ4K+Tq+qd9Kn6Yk4p+17HFfWF1grIs3xGHxFP2+9Mu6O
D8Q5Ia25JFxebiDOLFu5YnHfcpvwG/FeuBxclTj/8AtygWsjd/D5+EFcFtnG
TZWcfNV4FrgX5SLXVpLy+fnBXFbZzk2TXPwb8b1xReUS107u5J/mh3D3xRmH
B+FT+lR9R3ye+K7sLW42w5utVZPp3BNcNe4r/JL8ybWXZHwB/hPuftnBzZAO
0lE6SWfpIl2lm3SX5K4r6LqhrnlAdnIz5Um+Or+IKyZ/cVW4D+Iewo2kF56P
U8X70X+N36DYY+//DaL1IQ==
               "]]}, Annotation[#, "Charting`Private`Tag$375460#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1HccjWUYxvFjb2XvVWayKpmRHVEolFQUkr333pS9smWnkAZSaElmQ5OW
vSlbNL73H7/PdV33/Zz3vO+zCr3QrWnXJIlEYmnSROJomkTiq3SJRCV8njaR
6IryyIaLak/jGD8ZzXDM+K/VKmOH3A0PIjv+VGuJ4/wUNMdx479Rq4Iv5O6o
gNTpE4meav/wq5ADf8nP4AQ/FS2Q07iRahmwST7hed/yVbFT7oGKSGNcL7V/
+dXxO1ySW+EkPw2ljXlNvhtPybnkUXxGNOE/pJvVq/Ir+XJow++JZ/jfA/Qh
tFP70rjadJ3cky/CT+G70ty0Gd1OB9NK+mlpb7kj/U9uSDfK/ekbMYd0idyL
lqTP0p10OM2lfzlq6CCfkh+h78jT+TL8XL5wzD//eaybem5+NH8HPpAfklfx
9+GU7/mOVsMuvV6ojHTG9FFLYE08A1f453Can4GWOO3336tVx265N6ogD87o
/aD+MPbIfWJOkRdn9c7hPC7gIn40rgb26veN90Q+XFV7Hmf4mXgm9pjxP6nV
xD65H6ohvffuq5YEb8r5cY1vjbP8LLSK9zNujNqd2BJ7zvN+5mthv9wfRY2Z
KueJ75MzyP34pGjEb6JvxT7mX+fvRQH5euwXnOPr673Lz+bL8vP4HrRI7HG6
gw6jz8a80LFyF5qJNqUf0UGxJ+P76Gq5L72fvkD30lH0kvc/yNdGe/kr4+vQ
9fIAvhg/jc+L5vzHsS7qGfn+fDI8xm+ma+Ms8Uv5Uigo34j/w3l+Dsrpz5eL
xp6IdZLH8ZnxUexT73OIr4Ov5YGogUK4qfYiLvCv4fnYW8b/olYX38iDUBN3
xfrr/apeD9/Kg1ELd8fa6l3HDfym/wgOqA+Jc4nC+FutLS7yc9E63sH439Xq
4zt5aMwX7vAdA9SSY12cZ9yKs44/+XloE/vKuPFqWbA1/sPz/uAb4Ht5GIob
M13OF98l3ykP5FNgvVxJXsaXjjmMuyTmU/12rCH+4ufjPr0FcrFYA7mAPIHP
iif4rXSbevW4Q/gHYn75ffSW9zpMH8VLaj8YV5e+HXcKX4KfwXej+WkL+gkd
QuvpZ6KD5E40JX2cfhB7Kp4RdwVdLvemZeKc0l10BC2m/0/8Ly7xDdTe4xfw
9/ML+eLxrnJBeSKfDdvlh+U1fHnc9g1HaEP8qDcC9+jPjPMWay5nlgfzqbAh
5h7/8h1wmV+ItvE+nnU0zi9+kkfGGY15iPF6x+Ic4Gd5VLxz/Bf+00vQJEiK
ZDge84GD/Gg8ipIxVu1lXOEXoR2S44RaYxzix6Ah7kXCu3dUv8ovRnukwEm1
JviFH4tGyGLsELXUeEcuFe+k1km+xi/BA/IiuUTMfZw5+RU+Oz6Ocyi/yT+I
lPKpuGvwK19PbwM/Lr6Fn8V3pwXpU/TTmB+9rPxQvjNNE99Ft9CBcd/pV6Er
5D60LG1Nd9ORtHTMIe0c80Svx9zR9+V+cZfK5eliuSe9h7aiX8R6xp3Av8rn
wJP8NvpJ3Bf8W3yF2Afy6Tgf+I0fH3OtP1suFOsmZ5OH8Wnxnlwm1lWti3yD
X4qX455Rm6SWE5/KqXEm/hu/8xPQGNmNG66WDu/LZWPd1brKN/ll6Ig0OKvW
DH/wE9EE5WLdje+m/je/HJ2QFufUmuMw/0qsu3Fz5LvwNP8ZHUqb6uWgI+T0
2Bj3B1KqdY/7gF+BzkiH83HmcYR/FU/E2UR6ZEDGuBPj7oq7IM5Z7EFciP2A
o/wkPBn7Dqn8T484s/xKdEFhtclqufCZXEtey1dEW34/HU2z6v0PP1RbPw==

               "]]}, 
             Annotation[#, "Charting`Private`Tag$375460#5"]& ]}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"Feedforward solution\"", TraditionalForm], 
         PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1a\"", "\"u1a\"", "\"x1a\"", "\"\[Theta]dot1a\"", 
           "\"xdot1a\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
jKh/v+bpl35e1U/6V/ldqlu81IdI/0rePMVMd2yY9K9ymYbV9gIs0r9aHGWI
/4f3P8K/aqxfM+K6jkX6V8PafYpup0dI/2rlK91XAZlDpH/V8sWm7wC9hvSv
NCxW3+t0uYMR/pVNablip5o3EP7VBx4HcSsLV8h7fDNjG/5ewfBTocZrJvYr
KGF/+F426PU4Bs8sMLH4+/L13pqjcL8yIvQX/pmo36tXpkbRXzExwt8aXegY
Wf5nhPS3GFdmn/Lh4xvhb6lxKY1V72aR/lZop2VU4fsR0t/yb2rTfTv5AAh/
q0Xicu1tzBuavLGsuzyFoKZZ+jJO5yy2+sXQwoccFohZ7A6d+M3ETGR251vk
saF8y+Ub/5dH7+0MWvLwO75+ZRvv0mhkYoT/1Ro1s0JEgUX6X+dNb4ur4eMV
4X+pfTi+ICfGIv0vxd+NMenGlUD4XnYrLQ98POAJZlW37savyQMxI/kdr4Ue
Q8c4XfH6CjbolwW9PzzJxPgiNfl8FfD9zKo3JQ+pvRjhh2nq5Onx4vMp4Ydx
jT1Y/IrPp4Qf1v5f8H/7++8A4YcVSLSENCT5gHeF0BA9kgXrhmSDmSVMzMHh
ZYxqFBvWTuUHfcHnpxBalubjyFFYmr/7mnoXE2MV9v8z0KOgDZ+i98xL4ePx
//yy9ZfPN53F75fwyX7VjX/5dscHPu8+ZlZlzAZRhaLmUfx69U/Mv/U0xddP
QTU/XPD7IXyzsBeW3RjeTgjf7KgJveDmVhbpm1Fk/527fPohEL5Z08aGwaOy
XnDgW1NH1D82fLY/qHUbv96WDy6HnSwpaGf07q8fN7GA8NG6xNTfVf/ffPA/
/uFPt294E3c56aO5u7ZcSuB5AmlJNSuFl45CR+iulmJ8PiX8tKN+54WX4ft1
wk9bGpyV3N3tA3wbfryIfM6GS9wSEbH4fEr4ap3ewR7DeH8jfLWQ7/y/+oa8
QY3pfGKXHhvUJJZMbsbnU8Jf2664Q00In08/t4R9bd39HWT64yU7KN5Qc5NW
w1fDhmnFq+lKePsj/DW75npWIn58wl+TNE/o32/kBVe3mHLyVn+DVd9rvHz1
fWCw+GpKTRI+/yW9jziE/z3hs9kkZdFt8fdF+Gxm3/Kdvhf6wCqvVbY3LfH1
Y8v+CR18PjXO6HFe8ZWC2oSjPFbjzy9T8BNbbYwNSDCyRAu/X8J3kzfmUo7B
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
arWBGV+mzu9F8Q7jAyN1Fn2VHeJBjUfbqasyg2BJpcPh8yjeyX92Y/OsuTSQ
js94vgHNhw89PzbViKH4+IXJNgK1Vy9H/sjkha2A577I+S9a/8znWG4fH4vG
x6t8j0WoP/Zoc2iLVBp4uXuvjkyh4fYNsb/erJckdgTGKDWj/nZclJPacr0F
jI32FRQW8aHQI+aVpC0JZrsljp757//fkY/UdVxoEB+y7NOOHBpeuvYkceNC
SaLi3L2DC1D7hjmesVp5rxW81p1QexD9fsznCSP0RxL4Nxbc+O//15R3nHnH
b6SAn0mL6+x0GrrZZa9aAGjALc7YFI7G41LTUt7UGZKE+YBXdx9ajwpkKndl
eraC52dZwlNovHXz1ReNe4CuZ6yrUB/dT9H14NNCJ0nCvfRWwLvLKD4/6nr+
eGsLWGUrW1SI4tcbhHeUuA8J9HbMn9CP/v553PPpxsE0sFDzbHmRScO/vOsr
zhlKEnUd6dwpaH3YmLnC8PMflP+UbH/3CcU7uvday0U9JHCwrU6pQvf/xMpm
ghGLBpYR2cuSs2jIeESTnBGDFDR/pSsz7B1m0eBqualhAGqfMa1Fo54zWoHt
yrDKONQeaZmXOszOkWDara9GFuh6wp4m6PmbSRLkIvPrFzMo4Cb1cMnBrTSo
6n3ua4T6t3B8Qa9oniSRnB9VC9H1xZYlfr58rRW0TrRyq0Xf1+FkHU6UoXwn
eP/W/+K5fK87xG5DGrDjoqdFoPbcmvtufYks6h/t6Yd90PeXBja1Udtagc7S
7F9nUXuuDfXJW5tFAuWh8V+V0b/XafGb9O1rC/hmodHdju5/5P2zmRaeqP8s
7/YSqP8mZefPCjxKg6OK+4cD0P0rO9+OM1ouSYxWCp1eoOsL0FUK+D1MgaBX
tpGfUPu6pt6y/KlOg5CA5EOd6H6a7Mb3PzVoBR77B+oJ9PsD8eyqkiSUT3xr
e/xffvS87onqoAcN4hZmJFqg+MVb58HqFE1JYlG3mKsZGl9HenzKm162gtDC
8RndaL7KrLpn8NucBjsnB23biO5Xsg5ec50tSdzdKf1NDcWvORmF9RsCW8Eu
V03ghn7vsndT6ps8EjT/pXqd0O/NkLQWUx5qAbpm76z80fdZFsyny46R4IXP
uOk56L9/Ppfa8mOVJMG7JipegL6P8ZB/No6/IfSjsIfc5CjXqZrRjD0kd8nQ
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
n30/5rRrThiHP/8fC5cElQ==
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{363, 400, 362, 2374, 364, 365, 366, 367, 368, 369,
                 370}}], 
               PolygonBox[CompressedData["
1:eJwVzzk2A1AUgOFHk4QFBJ1o2YEQlTSGo5KU0ZJsIKaOIGai5ZwgouYIFmDY
gWkBQimlL8V37v3fe83rzxVm8p0hhA6yHFt22WaNdUpsUPRwmAhv+o4qmyw6
SxLlXTc4Z0tPEOdbP7XPWNIjxPjQ91xQ1pP00NTPVOyzJPjTp2aOQerMc0PZ
3bI5SjoWwjiX7b/oKXr50S/ssaJTdPGpH6ixzwGHHLHqfoxuvvQjV+zoafr4
1a+c2DMM0NJn5hxDXLPALf8wkDEE
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1:eJwV0zVsVXEUwOEWm3Bb8AQnwZ0Nt4ViCQ7Bm1CgRnEvlhDcvcVpgaITbgvu
TLgNOAnOd4Yv5/z+97XJve++GiNSkiYUSkhISOQDyZblZJPLaZ5QzIfaMY2F
OodTPKaos7ZMZYHexUkeUcRZG7KYr6/xnoq6J8vYqU/wkMK6NVOYp6/yjgq6
B0vZoY/zgEK6FZnM1Vd4S3ndnSVs18e4T6JuSQZz9GXeUE53YzHb9Beq2vuw
mgJ9Lx6SvQXpzNbfqWHvzzou6deUtXdlEVt1PXNo/G8+6ypmb1ZxVNcyB7KJ
u3qkmcM/e3MzjVn2ZPMADeLvGB7Pg29xj+YY9lCdfPqxlovxzMyx7KUOhxnM
Fl65XmCOIpcy5NGF7PiM6+PMfdTlCEPi3vjk2mhzN5VJYmV8xnlNcwAbuaP/
0syeysz43s3x7Kc+w+L74qtr1cy+rOGCrm0OYjMvdWmzc7yPcaY/UsneixVx
f/o2f2iqJzPDfp4XlNKd4p2N567zucVvmjibxHT7OZ5TUneM9zjuR+dxk180
djYxfh/2szyjhO4Q7zEb9CFu8JNGzlLiN2M/w1OK6/bxHrNeH+Q6P2joLH6o
WfYpZJJBOmmk8h8ZmH8d
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1Hl8z3UcwPGtGbMN6xRJllIq7WAVIaqp5pgWq4bW1jZXTQrRRQfdp5yh
0kF3dLm7k7Nyi0Khk0o6UZ7vR3889/p83tt+v+/38/tumeWDiqoTExIS+vsS
PdSXxfoA5bS136NzOJ8s+x36IqNoyfFmG3Qa19PB/g9dQE/OsP9JZ1NkncJd
1hfoAf2Ay6zrcoj1YfqJ9tIHtXNcG1cF+3b6m5bqXO2hqVSRb5+tO7WPvqSF
mkwFt8V96D9apu/qpVqHVtZNdaM+QVfrJIZYd9Q/dSHFnGm/S1/nbi60/1c/
JInD7ZfoQ1TQiRyzb/VlbiePE8y+0CcZGtdCDY4wX6oPUxlnFefIieab9CmG
xbmRzJHmy/QRquJ64hqpyVG+t1wfpS8XcRa1SKE2qaSRTh3qUo+MeCbiM4l7
iuuK94rXpD5H04CGHEMjjqUxx9GEzHhG4mzjfuP3XM8KHUs/CmhNM/PNOp0b
uDzuN97DfKU+Fs9pPA+04STzL/VphlMSrxHXY/6pjmMAXTibk82/0mcYEc9X
vEZcu/lnOp6B8bmTa/advsIdtKW52RZ9lhvpHedotlvf4J54jzgHs891AlfT
3n6vzqMbLe2/11fpbl2TO63zdZ++RztOsd+qz8XvWdfgJutz9S+9UhdpsabT
lz5xlvqzXqFv6iVam0rujc9f/9Ny/SjOWevRj+bxGeqquD+dGOcXf5dcY32O
/q7z6WmdRqF1K/1BX+Ni61qMtu6k+/X9OAdOtd+mM7iZ8+z/1nfieuNztf9F
3+K+OIN4nsxW6ySq48zIM/tRZzEmrovTzL7WmdxCabxfPIvma3Qyg+L66EAL
82/0eW6N84zXiOfWfK0+zrUU0TF+nia+t06nMDjONj4PTieLbHLI9HPrdSrX
0SPuNX7OfLu+wEjK4tk0+1Xf5n4K4h8xH0uJZiT+//851/4gicuXxQ==
               "]]}, Annotation[#, "Charting`Private`Tag$375545#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1HmwzWUYB/DjUpgRZYkZimvsjCXSIszY9xlLGGsM2W5uCm3cW0LZR2V3
ry1cXFzuhsxkX2qGLKXVTItCzEiWiSyf54/PeZ7v+zvnzO/3nuc9ycNTe40v
kkgkanvpUDKRSFFfIxZTeZ0JvME43mQik5jMW7zNO/GZpESiIf/pT5DNUqZZ
a0MpfpW/5N34frkRd/Qn2coyPrTWlsf4Td7He3EvcmPu6r9hG8uZbq0dpfld
3s+UuG+5Cf/rT7GdFcyw1p4y/CEfYGo8o/wM9/SnyWGh3JPKXJNXMlPfgce5
EGvqIGpxUF6kvkxVbsir1Veox2bGUkBa7KfalPv6M/E8+gHUYIf8idqLKmzg
Vf6xnqkOifdQh02MIcO1j9SObOMJ1jOSXP50PUMdTA61yWI0+RxyfbHal+1U
YyOjyOOm62vUYeykPlsYR3rMhtqMB/rP1RGcjX1XB1IzPid/qvbmKa7Lq9Sh
1CVT/ljtRFn+kg+zRN+PZG7J78cc6p8lwbdyLp/p+/A0/8Z3M0vfmXJclI/w
Qcyw3JwifCfnxe/FbLkL5bkkH405jnmXnyOJc3J+7Adz5K5U4LJ8LOY4zob8
PEX5Xi5gLXPlbjzJ3/LxmOM4R/ILFOMHuZB1MbNxZqy9yCP8KO+KPY55jPNh
rQWP8pO8m/UxCyyI/Yw9iOeKe43z4X0vUZyf5T1siPuKs2CtJSX4Rf6CjcyT
u1ORK/JXsUaa3IqSnJf3ksV8uQeVuCp/Hf8H+v5U53bshTqcBmSTQiHzXUtX
W8cc+F96CC5WmjY=
               "]], 
              
              LineBox[{2375, 425, 655, 591, 537, 494, 460, 402, 640, 576, 522,
                479, 445, 426, 403, 404, 405, 406, 641, 577, 523, 480, 446, 
               427, 656, 592, 538, 495, 461, 665, 601, 547, 504, 675, 611, 
               557, 685, 621, 696, 407}]}, 
             Annotation[#, "Charting`Private`Tag$375545#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1GW4FGUYBuClle7uLmkpaZASAenu7u4uu7ADKaW7u1u6uxtJlQa9vx/3
9T7vMzuze87ObKY2Pev0iBKJRHJGjURWUz96JHIxWiQympK8wYe6xCyVu3HH
6/rYX8m/0ZBp9rfYL2djopyODfJAFsglOC2vcX4D+ZI8hmVyWd6RfzVzsEve
ZL7Hm/JHZhL2sSxcw3w3XI/u9tlmEY5wzL7NrMUF/vJ+fc3X+j3mZHOlWYET
NLJPN/NxkAP2zWYNssvfmOnZKK83qzJIXmiW5Iy81ns0lC/LYynFJHtOdsux
+VhOynK5B3ed08/+nzyFxuTgW10GNsmDWed1jexX5HGUJg739P31Eabam5Az
fEZ9Y91VeTxliMt9/QaaOHbNPoGyxOOBfiOb2MwWtrKN7eygqfOuh/uBcsTn
oX6APgrT7E3JxU59M92N8N1RngQ80g/UR2W6vRm52aVvrrsZ/k9UICF/6wfp
o/G7vTl52K1vobslf0JFEoWsS8YKuSf/eN1ge3T+sLfgdzl/+K7lvHwnZ2Sz
PCTcI85pab8tf0qlcJ/bc7FHThx6OTkrw3dvVqaXPMd8m+PydrM2/7reEDMG
fzLDsVVmRU7S0v6HWYBDgX2L+T7nwnNl/97MFJ4vttg3mNXCvcdQ+6Lw/IR7
n7Ph/2/WCe/nvVuZd3SfsVwuF54debKZO7xGThKOyylYJfdmrlw0PCPyY9cZ
Ksdkpr0VM+SCHJbz8YOcma3yMPY6p3V4/uTPqUzSkHUpWS334YnXDbPHYpa9
NfnZp2+juyt/QRWS8VQ/XP8Gs+1tKMB+fVvdPflLqpKcZ/oDtHPsvv0rqpGC
5/qDtHfsgf1rqpOSF/pDHOYIRznGcU5wklOc5gwdXOOh8ybyHql4qT9LR8ce
hd8SapCaV/oR4feNOfa2FOScvpPu7/BbwPuk4bV+pD42c+3tKMR5fWfdP+Fe
piZp+U8/Sh+Hefb2FOaCvku4L8N9RS3Shf+xLhVr5L5EGG2Py3y5AzPlQuF3
Vi7Cj3IWtsnDWSyXCvetfNH7dJUfh3uD2kyx52GvnD58T3Jq1srrzCr0k+eZ
xTganhH7DvOD8DsjjzHjhWuwwL7arMQpOtpnmYXDfRnOt281a3I+PJv2n8ys
HGC7faNZPTw3jLAvMUuHZzicY99l1uWSv6eb+ST83ayQy4fPJU8187JPzhDu
MTkN6+T+zJeLh88oR2WsHJ+FcieK8rM9GzvkkVz2ft3tT8Nnpg4Zwz2qS8t6
eQDRGGdPwCK5M8W44vweumfh2tQlE9EZr0/IYrkLxbnq9T11z+VfqEdmYnDN
sV6OvZB/pT5ZiMl1x25wk1v09rqX+kk0ICuxmKBPxBK5KyXC+9izs1MexVK5
DBfk3WY9LnLbdf8HnJMn8w==
               "]]}, Annotation[#, "Charting`Private`Tag$375545#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1XfclmMYxvHnTVN776XSTpt2QiWjJO1QFGnTQouUljSMCE2VShOJjNKi
aKdF2tqT0vQ9//h9juM4z+t57/u+1lu4Q4+m3ZMSicT4ZInEgeSJxOqUiUQV
rE6RSPREFWTFQb1DOIw1+lWxRr0XqiIbjuitVb8ba+UXcTey46haCxzlJ6BF
1Ixfp3YP1skv4R7kwDG1ljjGT0TLqBm/Xq0a1su9UQ058bdaK/zNv4NWUTP+
Z7Xq+Fnug+q4JffELX4ecuG43BrH+XfROmp+/4taDfwi90UNJFL5brUE5su5
cYJvgxP8eyhkzHi5UNTl9PIgPj2Wy2XlT/iy8RvP2UBrYkPMud4svl+8Gz+S
zxV9OUl+kU9CHX4R/Vy9BP8B/xQtQR+iK2h3mkf/JN8WzeST8R10vtyRvi8X
phPkdrQwbUiX0660rX4GOjjmmGag99EvaGf6jX45OkUuh8b8j/Sk79pIa2Fj
7BP12Xz/mDN+FJ87+nIy+SU+GRbIeXEq3gen+Eloh4zGDVHLiG9jjGf8ytfG
r/LLqI18OK33W8wTfpNfQR3kxxm9sziHTfp1sUn9VdRFgfi92pM4zX+AJ3He
+M1q92KzPAD3omD8zZh/nOE/xFO4YPwWtXrYIg9EPdzmO3qr3YaFsV9wln8a
Z/nJuMOYifIdUZczya/xmbBCvkueyt+Fi56zNdYFW+Pc6c3hB/F5+NF8nujL
yeU+fPL4bn4xXaRekv8wnkVL0ofpd7RH7An9c3x7PCGfk2vSz+VO9CO5CH0n
5owWoQ/G3qDdaHv9zPT1OGc0M72ffkm/0yvPT+PLowm/kl7yTdtiHLbF3aD+
GT849gc/hs8bfTmF3JdPgcVyKXkyXyrmL9aNdsB5/mN0QBZjhqplwffyP563
nX8A2+UheAApjeunlhJL4jtjXflncIH/BM/gX7/foVYfO+TXUB9FcVHt2Vgn
fgqexWXjd6o1wE75dTRAMVzR+z3OIX6Xh6Ih7sR/eldxDddxA7tivrFL/w08
iOK4FGc85pKfio64afxutUbYLQ9Do7hDYg5iPfEPPw2d4r40fk/cKdgjD4/z
ZU7ekvNFXU4l9+dTYWnspZgP/jn8y0+PeTDmXblo1OWs8ht81phz/iv6g3oF
fnrML61AH6OraEJvb+xLPK62V65G58bc0jfjbNOxchuaP9aCLqMv0If1U9OX
5RY0dZxjuiTeJ+4z/dKxl2Of09L0Efp97KNYL/o8LvO11BfwM2K9+Pf4YtGX
s8nD+Gz4Ua4oz+ArIkneF38X+/gRcdfovy0XiLqcRn6FT4Mv451iP/CdcYWf
ic5xZ+IPtUfxBz8Sj6JM7JH4ZvzHf4oX4s7Bn2qN8Sc/Co1RNu4E7I+zh/38
aDRBuThbcQZijWP+4v1wO9IiHf6KNcJf/Bg8FncT0uOAelMc4N9C0zjruKrW
BVf5WeiCDDgYa4uD/Fg8HvsB19S64ho/G12REYfUmuEQ/zaaxbuZv1fVbsdX
Mf+4HvcQrvNz0A3ZjRuulh0r5Uw4HPcbDvPj8ER8p3ED1NJimVwJN/juuMF/
Fucy/o/Kd0ZdzhH7kc+BVfEbeSZfCZnlI7Q5jvDV9ebx4/mC/Di+LS0YdwP9
OuaKNo/5pgPlljQdrUeXxr6LcbH29OO462iZ2Bv0B9qTVo6zz/eIZ8s35dp0
oTw37gt+El887gb+2xirnpMfwefET3Jl+VO+cqwt/xPtRbPo/Q+gZEYp
               "]]}, Annotation[#, "Charting`Private`Tag$375545#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV02WAFQUUBeC31O7SKRYqIoKBhaJIKArYhd2KXaA0Kt1p0B2S0kh3p3R3
d3fHd398e+65M7Nv38xs/oqVK1RKSiQSq/2okixTEomq3MU+fSr9qEo1qrPG
sWoUZL8+jf7UYK1dde7mgD6dARzRW1OKBGvtarLOXINCHNRnMJCjehtKk8Q6
u1qsN9ekMIf0mVw19+BVcjDI7phsy1OkYb1dbTaYa3EPh/VZXDP35DVyMtju
uPyDp0nLDamJxFj5NRscT9EHmt/jFm7Tp8pK/Or4Rlmbeyng2Cx5xD6HeaT5
c2brCb2X+fX4m8wLZK74neZJsqT8QT4kl8ln5b+uO2H+k2J6mbjfcm58X5lO
5pXjZAn5jXxQLpXPyI2uT5WD9OLyfXmfXCRv5XbzNFmZR8wr5G+u2RTfLc6N
98N+tjxqn9M8ylyROXqS3tv8BrkZYndS/hWfT3o22WV03mDzB+Tjd7vN8Vnc
zzF9LkM5pf8d358MbLarw5a4jiIc1+cxjLpstavDA5zQ5zOcetSnAQ1pRGOa
0JRmNKcFLWlFa7b5PXXjXnJSX8AI2rDdrl48J07pCxnJab0dZUlmi11bdpjr
8zCn9UWkcT/66BXIwyi7M7I95Uhhq12meAfMH8Z7F++p3U7ZIJ4XZ/TFpHVe
X/3NeH8ZbXdWdqA8qdzonPHyW7Y5nlkfYv4onoF5cbwP3GGeLn+mqHllvH/O
3yUb8phdUVlQzpFnHctlHm1+Un4Rz0EukWXk/46nk//oT8i34n9FLoz/OZk3
3kU5WZaSP8a9ksvjXsr/XH/O3JHH9edkITlPZuQm8wT5Hdudm0Ufav44vgv5
9Rnyl3gvHd8tG/Eo5/Tc8RnmL1mip9f7md+Oe8YYu/OyE8+TiR12WZ03zPxJ
fEa8s3Z7ZOO4R5zXlzKWC3pnXiAzO+3asdfchGJc0Jcxjvbss2sa35mL+nLG
04GOdKIzXehKN7rTg57sd12zuOdc0lcwgV4csGtOcS7rK5nIRb0LL5KFXXa9
OWhuEc+XK/oqJnFJ78pLZGW3XR8OmVtSgqv6ajK4X/31d+KZMdnusuzGy2Rj
j1025w03f8qd9LU7LFtRkmt6HueMMX/FGj1ZH2B+l5vJp0+RPzHF8SuyO69Q
2LH5Mnuca54ov2ev87LrI8yfUSTeXVkg/g7zTFlaVol3R66S5eK9dt11j7IA
Ng==
               "]]}, 
             Annotation[#, "Charting`Private`Tag$375545#5"]& ]}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"LQR feedback solution\"", TraditionalForm], 
         PlotRange -> {{0., 3.0639186414100883`}, {-4., 4.}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1c\"", "\"u1c\"", "\"x1c\"", "\"\[Theta]dot1c\"", 
           "\"xdot1c\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.866563811624901*^9, {3.8665639123477993`*^9, 3.866564019899522*^9}, 
   3.866564218033375*^9, 3.8665642491104703`*^9, {3.866564280071603*^9, 
   3.8665642976949863`*^9}, {3.8665643646736393`*^9, 3.8665644450900097`*^9}},
 CellLabel->
  "Out[2020]=",ExpressionUUID->"0bb96088-ff3f-49e2-8188-88ea4e7ed559"],

Cell[BoxData["3.770472016960924`"], "Output",
 CellChangeTimes->{
  3.866563811624901*^9, {3.8665639123477993`*^9, 3.866564019899522*^9}, 
   3.866564218033375*^9, 3.8665642491104703`*^9, {3.866564280071603*^9, 
   3.8665642976949863`*^9}, {3.8665643646736393`*^9, 3.8665644451379943`*^9}},
 CellLabel->
  "Out[2021]=",ExpressionUUID->"48b5a65e-2bec-4d3f-9c69-d33a6cffa7bf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["end"], "Input",
 CellChangeTimes->{{3.866564237678116*^9, 3.8665642380479975`*^9}},
 CellLabel->
  "In[1665]:=",ExpressionUUID->"58ab3423-bda8-4f86-acee-a113929cb7ac"],

Cell[BoxData["4.933892238792685`"], "Output",
 CellChangeTimes->{3.866564238499852*^9, 3.8665643030432816`*^9},
 CellLabel->
  "Out[1665]=",ExpressionUUID->"cd536e2f-bda3-4a38-8f54-4541479cdc37"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"n", " ", "=", " ", "20"}], ";", " ", 
   RowBox[{"\[Tau]", " ", "=", " ", "5"}], ";", " ", 
   RowBox[{"\[Tau]1", " ", "=", " ", 
    RowBox[{"\[Tau]", "*", "1.25"}]}], " ", ";", 
   RowBox[{"order", " ", "=", " ", "5"}], ";", 
   RowBox[{"maxIter", " ", "=", " ", "100"}], ";", 
   RowBox[{"uBound", " ", "=", " ", "2"}], ";", 
   RowBox[{"maxCount", " ", "=", " ", "7"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"M", " ", "=", "5"}], ";"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"(*", 
    RowBox[{
    "M", " ", "is", " ", "the", " ", "no", " ", "of", " ", "times", " ", 
     "the", " ", "solution", " ", "will", " ", "be", " ", "recomputed", " ", 
     "in", " ", "time", " ", "\[Tau]"}], "  ", "*)"}],
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"A1", " ", "=", " ", "0.2"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"A2", " ", "=", " ", "0.2"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{"maxError", " ", "=", " ", "0.01"}],
   FontWeight->"Plain"], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"maxErrorInitial", " ", "=", " ", "1"}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"MyAppend", "[", 
    RowBox[{"f1_", ",", " ", "f2_", ",", " ", "T1_", ",", " ", "dT_"}], "]"}],
    " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "f", "}"}], ",", "\n", "    ", 
     RowBox[{
      RowBox[{
       RowBox[{"f", "[", "t_", "]"}], " ", ":=", " ", 
       RowBox[{"Piecewise", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"f1", "[", "t", "]"}], ",", " ", 
            RowBox[{"0", " ", "<=", " ", "t", " ", "<=", " ", "T1"}]}], "}"}],
           ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"f2", "[", 
             RowBox[{"t", " ", "-", " ", "T1"}], "]"}], ",", " ", 
            RowBox[{"T1", " ", "<=", " ", "t", " ", "<=", " ", 
             RowBox[{"T1", " ", "+", " ", "dT"}]}]}], "}"}]}], "}"}], "]"}]}],
       ";", "\n", "    ", "f"}]}], "]"}]}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotMin", " ", "=", " ", 
    RowBox[{"-", "2"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotMax", " ", "=", " ", "2"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Min", " ", "=", " ", 
    RowBox[{"-", "\[Pi]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Max", " ", "=", " ", "\[Pi]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]dotMin", " ", "=", " ", 
    RowBox[{"-", "2"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{"\[Theta]dotMax", " ", "=", " ", "2"}],
   FontWeight->"Plain"], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"xdotMin", ",", "xdotMax"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Init", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]Min", ",", "\[Theta]Max"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]dotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]dotMin", ",", "\[Theta]dotMax"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "xdotInit", ",", "\[Theta]Init", ",", "\[Theta]dotInit"}], 
     "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"xs", "[", "t_", "]"}], " ", ":=", " ", "0"}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"xdots", "[", "t_", "]"}], " ", ":=", " ", "0"}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"\[Theta]s", "[", "t_", "]"}], " ", ":=", " ", "0"}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"\[Theta]dots", "[", "t_", "]"}], " ", ":=", " ", "0"}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"Js", " ", "=", " ", 
    RowBox[{"{", "}"}]}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"errorInitial", " ", "=", " ", "10"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"initGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"count", " ", "=", " ", "0"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"maxcountAlgo", " ", "=", " ", "10"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"maxJ", " ", "=", " ", 
    RowBox[{
     RowBox[{"uBound", "^", "2"}], "*", "\[Tau]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"TimeTotal", " ", "=", " ", "0"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox["While",
   FontWeight->"Plain"], 
  StyleBox["[",
   FontWeight->"Plain"], 
  RowBox[{
   StyleBox[
    RowBox[{
     RowBox[{"errorInitial", " ", ">", " ", "maxErrorInitial"}], " ", "&&", 
     " ", 
     RowBox[{"count", " ", "<", " ", "maxcountAlgo"}]}],
    FontWeight->"Plain"], 
   StyleBox[",",
    FontWeight->"Plain"], 
   StyleBox["\[IndentingNewLine]",
    FontWeight->"Plain"], 
   RowBox[{
    StyleBox[
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
        "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
        "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "Jff", ",", "K"}], "}"}], 
      "=", 
      RowBox[{"Quiet", "[", 
       RowBox[{"ffCartPendulum", "[", 
        RowBox[{
        "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A1", ",", 
         "order", ",", "maxIter", ",", "maxError", ",", "maxCount", ",", 
         "maxJ", ",", "InitGuess"}], "]"}], "]"}]}],
     FontWeight->"Plain"], 
    StyleBox[";",
     FontWeight->"Plain"], 
    StyleBox[" ",
     FontWeight->"Plain"], 
    StyleBox["\[IndentingNewLine]",
     FontWeight->"Plain"], 
    StyleBox[
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "x1b", ",", "xdot1b", ",", "\[Theta]1b", ",", "\[Theta]dot1b", ",", 
        "u1b", ",", "J", ",", "error", ",", "end"}], "}"}], "=", 
      RowBox[{"Quiet", "[", 
       RowBox[{"testWithFBEventStop", "[", 
        RowBox[{
        "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
         "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A2", ",", 
         "uBound", ",", "K", ",", "errorBound"}], "]"}], "]"}]}],
     FontWeight->"Plain"], 
    StyleBox[";",
     FontWeight->"Plain"], 
    StyleBox["\[IndentingNewLine]",
     FontWeight->"Bold"], 
    StyleBox[
     RowBox[{"ICs", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x1b", "[", "end", "]"}], ",", " ", 
        RowBox[{"xdot1b", "[", "end", "]"}], ",", " ", 
        RowBox[{"\[Theta]1b", "[", "end", "]"}], ",", " ", 
        RowBox[{"\[Theta]dot1b", "[", "end", "]"}]}], "}"}]}],
     FontWeight->"Plain"], 
    StyleBox[";",
     FontWeight->"Plain"], 
    StyleBox["\[IndentingNewLine]",
     FontWeight->"Plain"], 
    StyleBox[
     RowBox[{"errorInitial", " ", "=", " ", 
      RowBox[{"Norm", "[", 
       RowBox[{"ICs", " ", "-", " ", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], "]"}]}],
     FontWeight->"Plain"], 
    StyleBox[";",
     FontWeight->"Plain"], 
    StyleBox["\[IndentingNewLine]",
     FontWeight->"Plain"], 
    StyleBox[
     RowBox[{"initGuess", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Lambda]1ff0", "[", "end", "]"}], ",", 
        RowBox[{"\[Lambda]2ff0", "[", "end", "]"}], ",", 
        RowBox[{"\[Lambda]3ff0", "[", "end", "]"}], ",", 
        RowBox[{"\[Lambda]4ff0", "[", "end", "]"}]}], "}"}]}],
     FontWeight->"Plain"], 
    StyleBox[";",
     FontWeight->"Plain"], 
    StyleBox["\[IndentingNewLine]",
     FontWeight->"Plain"], 
    StyleBox[
     RowBox[{"xs", " ", "=", " ", 
      RowBox[{"MyAppend", "[", 
       RowBox[{
       "xs", ",", " ", "x1b", ",", " ", "TimeTotal", ",", " ", "end"}], 
       "]"}]}],
     FontWeight->"Plain"], 
    StyleBox[";",
     FontWeight->"Plain"], 
    StyleBox["\[IndentingNewLine]",
     FontWeight->"Plain"], 
    StyleBox[
     RowBox[{"xdots", " ", "=", " ", 
      RowBox[{"MyAppend", "[", 
       RowBox[{
       "xdots", ",", " ", "xdot1b", ",", " ", "TimeTotal", ",", " ", "end"}], 
       "]"}]}],
     FontWeight->"Plain"], 
    StyleBox[";",
     FontWeight->"Plain"], 
    StyleBox["\n",
     FontWeight->"Plain"], 
    StyleBox["  ",
     FontWeight->"Plain"], 
    StyleBox[
     RowBox[{"\[Theta]s", " ", "=", " ", 
      RowBox[{"MyAppend", "[", 
       RowBox[{
       "\[Theta]s", ",", " ", "\[Theta]1b", ",", " ", "TimeTotal", ",", " ", 
        "end"}], "]"}]}],
     FontWeight->"Plain"], 
    StyleBox[";",
     FontWeight->"Plain"], 
    StyleBox["\[IndentingNewLine]",
     FontWeight->"Plain"], 
    StyleBox[
     RowBox[{"\[Theta]dots", " ", "=", " ", 
      RowBox[{"MyAppend", "[", 
       RowBox[{
       "\[Theta]dots", ",", " ", "\[Theta]dot1b", ",", " ", "TimeTotal", ",", 
        " ", "end"}], "]"}]}],
     FontWeight->"Plain"], 
    StyleBox[";",
     FontWeight->"Plain"], 
    StyleBox["\[IndentingNewLine]",
     FontWeight->"Plain"], 
    StyleBox[
     RowBox[{"us", " ", "=", " ", 
      RowBox[{"MyAppend", "[", 
       RowBox[{
       "us", ",", " ", "u1b", ",", " ", "TimeTotal", ",", " ", "end"}], 
       "]"}]}],
     FontWeight->"Plain"], 
    StyleBox[";",
     FontWeight->"Plain"], 
    StyleBox["\[IndentingNewLine]",
     FontWeight->"Plain"], 
    StyleBox[
     RowBox[{"Js", " ", "=", " ", 
      RowBox[{"Append", "[", 
       RowBox[{"Js", ",", "J"}], "]"}]}],
     FontWeight->"Plain"], 
    StyleBox[";",
     FontWeight->"Plain"], 
    StyleBox["\[IndentingNewLine]",
     FontWeight->"Plain"], 
    StyleBox[
     RowBox[{"count", " ", "=", " ", 
      RowBox[{"count", " ", "+", " ", "1"}]}],
     FontWeight->"Plain"], 
    StyleBox[";",
     FontWeight->"Plain"], 
    StyleBox["\[IndentingNewLine]",
     FontWeight->"Plain"], 
    StyleBox[
     RowBox[{"TimeTotal", " ", "=", " ", 
      RowBox[{"TimeTotal", " ", "+", " ", "end"}]}],
     FontWeight->"Plain"], 
    StyleBox[";",
     FontWeight->"Plain"], 
    StyleBox["\t",
     FontWeight->"Plain"], 
    StyleBox["\[IndentingNewLine]",
     FontWeight->"Plain"], 
    StyleBox[
     RowBox[{"Print", "[", "count", "]"}],
     FontWeight->"Plain"], 
    StyleBox[";",
     FontWeight->"Plain"], 
    StyleBox["\[IndentingNewLine]",
     FontWeight->"Plain"], 
    StyleBox[
     RowBox[{"Print", "[", "TimeTotal", "]"}],
     FontWeight->"Plain"], 
    StyleBox[";",
     FontWeight->"Plain"]}]}], 
  StyleBox["\t",
   FontWeight->"Plain"], 
  StyleBox["\[IndentingNewLine]",
   FontWeight->"Plain"], 
  StyleBox["]",
   FontWeight->"Plain"]}], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"p1a", " ", "=", " ", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]s", "[", "t", "]"}], ",", " ", 
        RowBox[{"us", "[", "t", "]"}], ",", " ", 
        RowBox[{"xs", "[", "t", "]"}], ",", " ", 
        RowBox[{"\[Theta]dots", "[", "t", "]"}], ",", " ", 
        RowBox[{"xdots", "[", "t", "]"}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"t", ",", " ", "0", ",", " ", "TimeTotal"}], "}"}], ",", " ", 
      RowBox[{"PlotRange", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", " ", "4"}], "}"}]}], ",", " ", 
      RowBox[{"Filling", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{"2", " ", "->", " ", "Axis"}], "}"}]}], ",", " ", 
      RowBox[{"PlotLegends", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1b\>\"", ",", " ", "\"\<u1b\>\"", ",", " ", 
         "\"\<x1b\>\"", ",", " ", "\"\<\[Theta]dot1b\>\"", ",", " ", 
         "\"\<xdot1b\>\""}], "}"}]}], ",", " ", 
      RowBox[{"PlotLabel", " ", "->", " ", "\"\<Test on dynamics\>\""}], ",", 
      " ", 
      RowBox[{"AspectRatio", " ", "->", " ", 
       RowBox[{"1", "/", "3"}]}], ",", " ", 
      RowBox[{"ImageSize", " ", "->", " ", "400"}], ",", " ", 
      RowBox[{"GridLines", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{"None", ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", " ", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"p1b", " ", "=", " ", 
    RowBox[{"ListLinePlot", "[", "Js", "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"Grid", "[", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"p1a", ",", "p1b"}], "}"}], "}"}], "]"}],
  FontWeight->"Plain"], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8636129749443583`*^9, 3.863613015823305*^9}, {
   3.8636130614177456`*^9, 3.863613061548704*^9}, {3.8636131046759324`*^9, 
   3.8636132169600773`*^9}, 3.8636132626354933`*^9, {3.863613317299037*^9, 
   3.863613325712351*^9}, {3.8636133602393255`*^9, 3.86361337832655*^9}, {
   3.8636134419612303`*^9, 3.863613443723667*^9}, {3.863613482179388*^9, 
   3.8636134827971907`*^9}, {3.8636135381195245`*^9, 
   3.8636135797742233`*^9}, {3.8636137397741327`*^9, 3.863613792025447*^9}, {
   3.863613833875084*^9, 3.863613859543887*^9}, {3.8636139070307236`*^9, 
   3.863613990162178*^9}, {3.863614052505271*^9, 3.8636140526672187`*^9}, {
   3.8636142755400505`*^9, 3.863614275735988*^9}, 3.864135358210206*^9, {
   3.8641356231244707`*^9, 3.8641356617179823`*^9}, {3.8641357036993933`*^9, 
   3.8641358101259522`*^9}, {3.8641358445638046`*^9, 
   3.8641358446887646`*^9}, {3.864135959424633*^9, 3.864135969935231*^9}, {
   3.864136047012286*^9, 3.8641360688712134`*^9}, 3.8641361082124805`*^9, {
   3.8641495465703897`*^9, 3.8641497074443254`*^9}, {3.864149799709464*^9, 
   3.8641498203557825`*^9}, 3.864149994860308*^9, {3.8641501178305116`*^9, 
   3.8641502460979977`*^9}, {3.864150355668539*^9, 3.8641503880850477`*^9}, {
   3.8641522848461933`*^9, 3.864152322656956*^9}, {3.864154041279755*^9, 
   3.864154071830866*^9}, 3.865342703619191*^9, 3.865342735583974*^9, {
   3.865342789927601*^9, 3.8653428432655497`*^9}, {3.8653429134781046`*^9, 
   3.8653429645057917`*^9}, {3.86534299882582*^9, 3.8653430048109074`*^9}, {
   3.8653431484289956`*^9, 3.8653432440684214`*^9}, 3.8653432786813564`*^9, {
   3.8654445628110285`*^9, 3.865444854999589*^9}, {3.8654460068932247`*^9, 
   3.8654460262340384`*^9}, {3.865446091527158*^9, 3.8654461690943527`*^9}, 
   3.865446407415139*^9, {3.865446495838863*^9, 3.865446498184112*^9}, {
   3.8654465674349675`*^9, 3.8654465724783535`*^9}, {3.8654466065404625`*^9, 
   3.8654466115468607`*^9}, 3.8654466634402647`*^9, 3.865446720697957*^9, {
   3.8654467597504654`*^9, 3.86544676421404*^9}, {3.8654467999786024`*^9, 
   3.8654468188955517`*^9}, {3.865447093827633*^9, 3.865447120448118*^9}, 
   3.865447150475517*^9, {3.865447183594925*^9, 3.8654471988060617`*^9}, {
   3.8654472349045167`*^9, 3.8654472349734926`*^9}, {3.86544740159221*^9, 
   3.8654474199253473`*^9}, {3.8654474644860983`*^9, 3.86544746739017*^9}, {
   3.865447584859602*^9, 3.865447593586812*^9}, {3.865952499809149*^9, 
   3.8659525292967024`*^9}, {3.8659525819378333`*^9, 
   3.8659525893724527`*^9}, {3.865971536327427*^9, 3.865971615231144*^9}, {
   3.8659716506068087`*^9, 3.8659716545185547`*^9}, {3.865971738635604*^9, 
   3.8659717394583387`*^9}, {3.865971771360116*^9, 3.865971773325487*^9}, 
   3.8659718432830696`*^9, {3.865971878869669*^9, 3.865971881703761*^9}, {
   3.865972099999814*^9, 3.8659721093028316`*^9}, {3.8659724284015865`*^9, 
   3.8659724335579348`*^9}, {3.865972467781967*^9, 3.8659724678729377`*^9}, 
   3.865972527892706*^9, {3.865972575741376*^9, 3.8659725758223476`*^9}, {
   3.8659727852052574`*^9, 3.8659727853102245`*^9}, 3.8659729110299406`*^9, {
   3.865973909258086*^9, 3.865973915857973*^9}, {3.866046878808134*^9, 
   3.866046926929607*^9}, {3.866558599295118*^9, 3.8665586344949017`*^9}, {
   3.866559033422757*^9, 3.8665590556406784`*^9}, {3.8665590875774975`*^9, 
   3.866559159857463*^9}, 3.8665592149938903`*^9, {3.8665592586919622`*^9, 
   3.8665592839419146`*^9}, {3.8665593600396614`*^9, 
   3.8665594066128187`*^9}, {3.866559444230831*^9, 3.8665595123061333`*^9}},
 Background->RGBColor[1, 1, 0.85],
 CellLabel->
  "In[1038]:=",ExpressionUUID->"db685101-cfd9-44ab-b625-6cbe825f64b7"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction", "dmval", 
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", \\\"6.25`\\\", \\\"}\\\"}]\\) \
lies outside the range of data in the interpolating function. Extrapolation \
will be used.\"", 2, 1067, 90, 17545095697018498346, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.86655924031082*^9, 3.8665593173452682`*^9, {3.8665593837571025`*^9, 
   3.866559408267291*^9}, {3.866559445449441*^9, 3.866559513626712*^9}},
 CellLabel->
  "During evaluation of \
In[1038]:=",ExpressionUUID->"7b7a2d2a-4d34-4d9f-b6a1-4c92ee8e191a"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction", "dmval", 
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", \\\"6.25`\\\", \\\"}\\\"}]\\) \
lies outside the range of data in the interpolating function. Extrapolation \
will be used.\"", 2, 1067, 91, 17545095697018498346, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.86655924031082*^9, 3.8665593173452682`*^9, {3.8665593837571025`*^9, 
   3.866559408267291*^9}, {3.866559445449441*^9, 3.8665595136347094`*^9}},
 CellLabel->
  "During evaluation of \
In[1038]:=",ExpressionUUID->"649ebc2a-17a0-44cc-9ed6-a83017f91885"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction", "dmval", 
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", \\\"6.25`\\\", \\\"}\\\"}]\\) \
lies outside the range of data in the interpolating function. Extrapolation \
will be used.\"", 2, 1067, 92, 17545095697018498346, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.86655924031082*^9, 3.8665593173452682`*^9, {3.8665593837571025`*^9, 
   3.866559408267291*^9}, {3.866559445449441*^9, 3.866559513657702*^9}},
 CellLabel->
  "During evaluation of \
In[1038]:=",ExpressionUUID->"070a2062-1840-44af-a2c2-420f2d82b4e6"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"InterpolatingFunction\\\
\", \\\"::\\\", \\\"dmval\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 1067, 93, 17545095697018498346, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.86655924031082*^9, 3.8665593173452682`*^9, {3.8665593837571025`*^9, 
   3.866559408267291*^9}, {3.866559445449441*^9, 3.8665595136806946`*^9}},
 CellLabel->
  "During evaluation of \
In[1038]:=",ExpressionUUID->"a1e4e4c4-f9c4-481f-b2ce-611b116f5e0c"],

Cell[CellGroupData[{

Cell[BoxData["1"], "Print",
 CellChangeTimes->{
  3.866559240857646*^9, 3.8665593215599256`*^9, {3.8665593838310795`*^9, 
   3.866559408342267*^9}, {3.8665594455234165`*^9, 3.866559513701688*^9}},
 CellLabel->
  "During evaluation of \
In[1038]:=",ExpressionUUID->"54817be3-e084-44cb-ab4c-22a5769247d9"],

Cell[BoxData["6.25`"], "Print",
 CellChangeTimes->{
  3.866559240857646*^9, 3.8665593215599256`*^9, {3.8665593838310795`*^9, 
   3.866559408342267*^9}, {3.8665594455234165`*^9, 3.866559513704687*^9}},
 CellLabel->
  "During evaluation of \
In[1038]:=",ExpressionUUID->"7a000bf0-08f8-4bbc-b136-e779b32325e2"]
}, Open  ]],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
PN14PZEYNHrXnQUOBY8WHvQgw6tnWs6FD1NA9UeOkPDQfmDo/6SH5yYNqzBj
NWb95YT/+o/WaPKygYifz6sgOT6ofIPPIeMu3k9Wy0fOxJJg/ErP9BL8vGk+
3f4grYQMw2SuqViMUIDO9B5hUd8+sO38t2qNEBrWmOZi+yqPC3aJeO4Xwu+X
ktJmntBZPmjaGPlj120m0Dy8rXPEiwT16tMwjjAW4LQd2DoSQ4Z3eCLsHuH3
34w/cTm3vwekxlr9VLlNw0ZPRFQOHuaCphYaJ9+psMHVmo0Kca58cN/Sqy+/
8ffnooW2DscXEtyatbJ6NogFjoQ94iSb4s+z3PZbZhcFkKI+n++c7wXc4uJP
FPD+KSPGVdIkkgu+eTnqpILXj8GHNI1Pt/NBgXViZ8/h/V8l9ZmX9W0S5FDv
93iEfz+Cj6/ZHajSfjsZE12k2/EGkyGttcTiBF6/K+3RYQif44OLN1q41+Gf
r0WobNwjE+8XZd4OJ+GfrySvUc6/ngwDEk8f2jRIAYFG+Lpd0w8+P+b+sc2H
hs3l3k3vaMffR2tVyYgjbPDD493RO09J0P6TuK87fr+H27t/fcskQ5G9T1Sf
4D9Ply6iydv1B7wzrMuOeEDD/N5TSx7oc8FIbleHAwZsEGg7+HhvNN7vmZMa
FvB6tCu9Lf3xdxJUsCv58tTv/39/kx6ebEuGKZW5VyKoFEDw+drFlMTc+9mI
z3e1sx9XTnRCPshb3tqlnc8a0fxUn1HF4VztXozwQW7WGH1dKUbFCB+k91MZ
t7/4+0v4IH9etPz+mUVF81ZNGm76h3X0Ix9kv8CtVq65HuRrjFjjfZvEmkK8
vdTXu1jC9XlA+BoHc9dKrlizDEb3baykmHHBxrRL5ZFGbFDz26om/hY3rMpy
NDnyZBncagyzNPNYCUfcQyZ+aiwin6N838Fi9+xp5HM8tMLm7k/1SeRz1H7i
MnXB7C/yOYq7s60jMsaQz1GoyKlD8icL+Rwf7LdlHMlnIp9j7U2t3R34/Sf4
fIGNAay4GCbyOX4X7uy/spEF+AOlaw6ew9fL+thiKx8WmPkwOP6gkQQbOotK
Wfif5VpONW66KAgPxTgOj75hAmL+a+s7J9Mf6cOA4PtJWP/1f9RBQPD9x8l5
nMcT+5Avcixifk+vdgvi+y9wT5WfZr9CfL9grPtsQEQYRvD9/6T53zS6hCN/
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

          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{563, 3239, 3237, 562, 976, 863, 770, 696, 639, 
                601, 995, 882, 789, 715, 658, 1013, 900, 807, 733, 1032, 920, 
                827, 1051, 940, 1069}}], 
               
               PolygonBox[{{3236, 3235, 549, 550, 551, 552, 967, 854, 760, 
                686, 629, 591, 993, 880, 787, 713, 1023, 911, 818, 656, 1012, 
                899, 806, 1043, 931, 732, 1031, 919, 1061, 826, 939, 553, 761,
                 687, 906, 813, 1046, 934, 1066}}], 
               PolygonBox[CompressedData["
1:eJwV0MtTzXEcBuBvatLlJClkYSpmXMZMbRqmiK4oO/8A3bHQRnZqQZcZNkab
FHVihjVRdKE/IG10W9PdbaUFi57f4pn3fT/fmTPnnIKGtqu3d4UQEhhjJBZC
nGuOJXxNDKGRZCbt+6Twxq7gm97PdUqZd2tiN1P2A1J5a1fyXX9KPWdJI51R
b1Ws6AM0cI4Y79yrWdUHaaSMDN6717CmP6OJ8+xhzP0i6/pzmrlAJnsZ93aJ
DX2IFspZcGsmhWm7iyw+2JfZ1IdpZcW+w0Fm7QoW9RZS+WR380u/Rz4LdmJS
CE/00+yzP8patqL/y1u/Htf/yi5OkOP+Ut5wX5Xt5Lnlykw5JI/LL94T5GP7
qCyWufK1PCUrvS/prRy202S6HJDH5Gfv//SHHLELo98nX8keb79lBwVkucfl
onuS3qefIduekHX80EfY1rs5yU17Td7lEHN2FcvR74u+DzGfNyhn3P/LRxTR
a/+RndH3Y8nOYVK/wk/9BbeoZj8H2AEfn1aJ
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{514, 3238, 3233, 664, 738, 832, 945, 519, 642, 
                699, 773, 866, 979, 568, 606, 663, 737, 831, 944, 518, 641, 
                698, 772, 865, 978, 567, 605, 662, 736, 830, 943, 517, 566, 
                604, 661, 735, 829, 942, 516, 565, 603, 660, 734, 828, 941, 
                515, 640, 697, 771, 864, 977, 564, 819, 912, 1024, 716, 926, 
                1038, 790, 1054, 883, 996, 602, 659}}], 
               
               PolygonBox[{{3236, 3237, 600, 638, 695, 769, 862, 975, 561, 
                599, 637, 694, 768, 861, 974, 560, 598, 636, 693, 767, 860, 
                973, 559, 597, 635, 692, 766, 859, 972, 558, 596, 634, 691, 
                765, 858, 971, 557, 595, 633, 690, 764, 857, 970, 556, 594, 
                632, 689, 763, 856, 969, 555, 593, 631, 688, 762, 855, 968, 
                554, 657, 714, 788, 881, 994, 592, 725, 799, 892, 1005, 
                630}}], 
               PolygonBox[CompressedData["
1:eJwV0sdOVGEYBuBfLAszSEmMwgCKjoltoQsSvQDsFfQG3CnNltg26kYRGBMT
XZiYGBQBkTuwApalbQMourRFBBRLovH5Fk/e9/3PJDPnzKne11LXXJBSmsFd
OjMp3SDncClL2MFR+vnJ3pkpPaFa384R7jDNHuePWaxv4zB9/KDe+RCL9Is8
o9Ru4T1b7UPc5jt1zgap0vM8pcRu5h1b7NdU6af4wkF7tWzlD732FLv1ASr1
9fIKc2alNGov088yRYe9Vub5F/dpX5OFPlssmxhjc3yPs169TNbInLwkC+Qr
15fL63axrIxnIk/Kz3HPrq+wu/T5clU8T3le/qbH9atyrrNJvULush9REc9I
ljtbJy8zWx9x3qmX6jl5hknana+Je+Nv/D92kWzkLZvsl/Ed+gk+xTO2V8pz
/KLbnmCn/pCsPhzviH6aCdrsIebpDbxho/2CrH6cj/EM7Vt8i3fLfhD3ol9g
kEL7AKNssJ9Trh/jQ/xuu4vxeP/s+/Ef6K0MkLH3M0Kt3cBNvsY76eweC/UF
/AfpV1+9
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1WWgFVUYBdBHh9LdHUo3SINISHcpHZISAip2gEEoJqKUhaRId3d3p4Gi
qKAimOvTH4u9v/Med+7MOQMFeg5tPSRRQkJCosTIR/2RmissMe+X3bnJI+YV
sjHXuGE+K+MD7tdny4qc04/JfkzXt8r2/10kIaGCeE0WZI8+gfV6S27rvVio
1+E7fS6+WsJj5jtYqo+iKR+aK3Fen0FFXjcXYq8+kd4k4XFrd7JMH00zKpGU
ZCQnBWP9ThqW62NoTmWmWCvMPn0SfUjJE9bSsiKeHS2owhvWirBfn0xfUvGk
tXSsjHuiJR+ZK3NBn0lV3jQX5UA8L/qRmqespWdV3BOt+NhchYv6LKrxlrkY
B+OZsEFvxR96fxbpdbmqn5QDmKfvlJ1JGs/b/LTMwGr9gOzBWH2lbMKP/GI+
J4fSWv9EVuV7LpmPy/5xbWabt8kO8fdIxJdxtvibe/z8bVk89p9D5sOyN7eY
Yt4Y1+E6f5ovyuE8pH8u68W19VNyIPP1XbILyeIcmJ+RGVkTe8iqOMP8qrfh
U70al+OcUZ13zHdxOPaXASw21+cHfQFpeNacibWx37RlTtxb3GvsNzV413w3
R2K/GUhanrOWmXWx37SjJlOtleBo7C+DSMfz1rKwPvaL9tTiPWslORbPlMGk
5wVrWdkQz4EO1CYDL1rPxsa4DzpSh4xkIjNZyEo2spODnOQiN3nISz7yU4CC
FKIw43x+djbFvdKJuhRhvPUcbI77ojP1mGatFMdjHxhCUV6ylpMtcV904TNz
db6Kd4P6vG8uzYl47gzlC/O9XNMXUoyXzbnYGs+C1XpTftO7Mlevwddxztmu
dyRxfJb5A1mGk/oR2Yep+ibZhr/0S3IED+tLZIN4j/TTchCL9N2ya1yX5HE9
RhP/GBYXr+i5+ZZt5oOyJ78zzrxGNuMnbprPx/Xi+jxgnidr8k2cdRow3VyW
U3F22Ky3jfdSH8ZS/b74zHjP2BOfRYp4L8yvyjxs1w/JXozX18rm/Bzfz3xB
DuNBfb6sFe8PV8wn4j2O95o55h2yU7yXJIk9ZRT/xHfx8xmyHFc5bT4q+3Kb
aeYtsh034u+YL8uRDNeXyYbxvfQzcjCL9b3x3UgZ76d5gszLjjhvrNNbcEvv
xgK9duxFnD0aMtNcnjNx9hhBCSZay8fOOGt0pxElmWQ9P7tif+lBY0pRmjKU
pRyT/V4BdsdzpydNmGWtAmfjLDKS5eZGXI8zzz69G6li/xmT6P///8v72b+w
oAHL
               "]]}, Annotation[#, "Charting`Private`Tag$171854#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1mWUVVUABeDH0C1KI53SJd0hrUg3SKooSHcpoIgiSqcSUkp3p3SHpLRB
dwiCfmf541t773NnhvfuuzOLjK071+kULRKJFIiKRKIYQxOuRo9EupEuRiSS
XCaS0+V+1yL6aL0Qhe0jshXRWWsPJjoL7VKc18fSlDeJwSLnpbmgj6MZRYjJ
YudluKiPpzlFOersPWKwzh5CLJbYZbmkT6AFxTjmrDUxWW9/SmyW2uW4rE9k
RoJIpKUsznHnbYjFBvsz4rDMLs8VfRKtKMEJZ22JzUZ7KHFZblfgqj6Z9yhJ
POKzwrWK/K5PoTWlSMBK55X4Q59KG0qTkFXOK/OnPo22lCERq52/xV/6dNpR
lsS8whrXqnBN/572lONXZ+2IwyZ7GElYa1fluv4DHfjd7k4KDtjlOam3Jy6b
7eHc1geQgV/D8+CZGaMX4VV7nazGjXC/XJukz9Afy2HkIKnz2fJ953/IHqR3
llImlt/L7PKg69Hkt3ZmWVimlPNkLlnB9VN6B9La8WR8OUVmk1tcf66PJJOd
N7w/OVd+7todOZCMJHE+Q54Mz7E+Vi/Ka/Z6WZ2b+kye6MN5gw/sP2VPUnHI
rsjp8P7C6yGBnzdVbnX+j/yKfHxh35WDwuvjlJ2UDXoNbumz+JBKJCN5eA2e
6xQyJRt9XU1u67PpSGXOhNcW/m222SNIxSa7Fnf0H/mIv+xepOaw/RZn9Q9J
yHb7S1Kz2X6bu/ocPuaa3Zs0HLGrcE7vGP6+sMMeyT19cPgsOW2nYYv+Dvf0
uTwNnw056WRfl314naN2VX7TPwrPCr/YL+TX5A/31r4vh5AlPJPu/Ux5xnlM
fZxeLLxXfUH4uc63ytqhO7sffpflZHue/nf4nMIz4iyXTCZ/DJ+97Oz6Db1v
+H2w08pX5A/hOZfHXI+S34XXIt8Mz4icL3PLaq6f1z8O3xfutbNpcqfzl3IU
BcJ7sx/IT8nKWTuWrx2vFw/Pvr1NvssDfT7P9BHh3+ET+6bsRzqO29W5EO5x
ePbZZY8iHdvtOjzUF9CFGlx01jncU3bb35CeHXZdHuk/0ZWaZOAX5/V4rP9M
N2qRkZ3O6/NEX0h33iYTmckSnn/PelaZjezkYJfvacBTfRE9eIdL4b2G31n2
2P/KbyjIaPuh/Ixs4Wvcv1nynPPY+oRwb2UJ+VP4fMNnz+Lw7Nt5SO76nPBs
hr9fXldP127Z/UnPCbs2l/UuJGWv/S052W035Jm+hF68Sy72OG/Ec30pvalD
bvY6b8w/+jL6UJc87HPehBf6cvpSj7zsd96Ul/oK+lGffBxw3ox/9ZX0pwH5
Oei8ORFW2QNoGPX//yUOOWtBNFbbA2kU/pa4HwXlYectiWKNPYjGXLG7ht8f
9tnf8UgfSnZ+s+O4rxP1kqTRfw73XRZy7T9HiA4f
               "]]}, Annotation[#, "Charting`Private`Tag$171854#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1GWYlVUUgNFLN0iDCEhLd5c0SLekkkqD0iFhEiqtNBIC0kq3NCjdKV2i
dAu4zo/17P2e75u5NXcytO5Wr2uUSCSSO2okkid6JHIkRiTSkqoxI5FXuqC5
Sdc3f9PpzAW6plnNLGvuNT9zLbZ9nL0gxe3bzRvOc9hX2hvyob5nDuQtDunM
ri+112aqTq5n2t/lkc7LUfsHvLavYDBx3DfeWSFu6lbctw8iLYf1NPJxLDw2
EVbqIbQmPwXC66QQhSnCcfe1Igqr9FDaUJQTzloTldV6GG15EN4H0nFET6cY
J3UborFGf047HurBpOeonkFxTum2RGet/oK4XusEXZhbuj2P7EN4m2N6Jinc
95Mux2NdgtP2dsRgnU7vnl/s7/Gljqcn2ovwt86pV9kb8ZF+bA4lA0Vd22oe
d57Fvix8bmYds7y5z2wcnoPrKc1ZurpZ3ixl7gp/B+aT8Lma63Rds6lZyTxo
NjFLun7G3p5qOmb4nM3N5nrX3rYvDL87/J3Y/zC/ch7f/kN4npSw7zBvO89l
Xx2eGx/rJ+YwMnJCZ3V9eXguzNKp9Gx7BZ7qUpwN7wex2KC/JoH7ftTF+Ed3
4Kn9czJxUs+mNOfCYxObjfobOvJMf0FmTuk5lOG87kAcNunhdOJ5+NzIwmk9
l7L8pTsSl816BJ15l3KUpwIVueCeTsRjix5JFypx0Vln4vO7HkVXXoT3mKyc
0T9TmUu6CwnYqr+lG//pr8nGWT2PKlzWXUnINv0dCb2Pk8L/Df7V3Xlp/4Z3
OKfnU5UruhuJ2K6/J5Gfnxw+c+7oHryyDyc753U29/xqr8cCnVrPsVfkma7G
VXt33mCHzuCeRfYajNZv6Cn2koF9p3nXeW77Gvv74ffZD5ifOH9tjgjfNWc5
wt+Juc1sYP7l+jvh/6quY9YPf2/m/vB7wnfU9TfNueHxzUpmaXN3+G6az8P/
NnN9eE1mM7OyeSg8nmvXzB4kprDzLeZO5xnti+01GaMT66nh+8k9nUevDd9D
PtURPdKekwt6IWmc/Rwejxe6OtfDayYJu/RYkrhvWnje3Nc9ieJslM7FRb2I
GtwIj0dSdutx9KImN531JBl79Hh6U4va1KEu9bjlnl4kZ6+eQB+ietxvneXm
kl5Mff7WvUnBH3oifYnm/u+c5eGyXkIDbus+pORP/QNJ3Ttdl+GB7kd0Z9/r
vFzR2fWK8NmzVL+l59mrhJ+z7zH/c57fvsHenIb6H7MvqSji2u/mPueZ7Evs
tcxaZjnzT/NH15LZZ9jL8lD3J4az0TofV/UyGvGv7kdq9utJDCCm+8c4y881
vZzG3NH9eZMDejIDeZ8mNKUZzWlBS+66dwBpOKinMIhYHmOsswJc17+S1tl8
XZWXuoDeaG8R3iv7YbOp+YFr/wPW3hdQ
               "]]}, Annotation[#, "Charting`Private`Tag$171854#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1nfcjmUYxvFHyt6rQmYyiqySFe1CCyVZZY+yyd6rZETIFmWviqxQKUkR
lU1GdtlbRt/zj9/nPI7fdd287/Pc93W/eRu2qd46SSKRqJ00kaiTLJHYlCKR
SIMOyROJJFjKDcMlrjQmcoWxj6uLzVxadOTuwNfccFzmHsEkrgj+4urhNy4d
OnFJsYy7N2Ui8Qa3Vn8RI7gr+qOYrD+I/dzD9rXmtumNUJ/boqdHZ/1OVLKn
l35EXm49u15b/1Z/Ca/pH+v/ySOtX5XLYIr+EKpYf18/Kx+wXlxvo2/XO8tL
5cbxf8uT5TsxRP7JbGD/VjMDhnPv2dfU/FyfYd6lVzZ76+PNo3p3c6U+11zh
+hzmm/po8zvr7czF+izzZf11c0z8vOYNfYC5Tv/ItdfMxzCVf4efJxeVq8of
yOfkg/aV0NvqO/QmeIv7Xc+ILnoyrORy2leH+15/BaO463pZTNOL4RD3Nv7g
MqErlxyruNFoiD/5zOjGp8A33MdohMZogqZohuZogZZohW2uy4LurkuJ1dwY
/MeVw6fcw/ibewfbuazowaXCGu4+v0ddbp3+KsZyN/TymK4Xx2GupH3tuJ3x
veFdboeeDT311HjCnj76MXmt9Vx6Pf0HvTpq6WP1m/I46zflCvH9x79nbb5c
Qq4mD5XPy0fsK6W313fp78lfy83kBvKU+D3j/jHfNzeYX8Sz4Lqd8t0YEfe9
/c3MmfpnZhr9SbOvPsE8rvcwV+nzzG9dn9usr39s/mi9vfmFXkN+Qx4n35IH
yj/In7jmllkx/g++ZDyz1j7UL8hHrZfWO+i79eZow+3S70FvPS2+48bjNvc4
PudK4RjXFru5e9GHS4fvuQloh/bYYy07+lpLj3XcRHTAXj4H+vEZ8AM3CQk/
VyV+Jlcax7mO2MflRH8uI37kJiOJ/ZXj2eMewQmuE/7i7sMALhPWc3nsbcCt
12tiCncH9wQ3W38UJ7nO2M/lwkAuM37i8tr7FvdTnFGYyiXlnuTm6GXi/NKH
6Rflf6w/onfU9+gt4r7hDui5MUjPgqfs6aefkDdYz6e/rW+IswS19U/02/I0
63fqT8V5pLeWF8SZIr8sD5cvyX3j3pH/tf9RuZM8ztxrrYu5LH5ms2WcLebU
eM7MZOYH5s/ml2YX1x+U82CkPjjuF3NW3A9mVv1ps3+8d8yTek/zG/1n1+aX
G0bmO8hfyrXkN+XxciKeG/vu0p+Oe95a2TjL9BH6ZfmU9TJ6Z32f3gpduUN6
3jjb9WzYyE1HMnuf4edz5XCa64a/uXzxfHJ34xfufnsbcRvjWcIMLjn3LLdA
L48z3GPxruD+inMbb+vT9ORx7lk/bOaPzy6+Z2uz41mSn5EHyP/IveTV8q/2
F5Aby2PMX6x1NL/Sa8t15AnxjjCTxH0Sz725yPzMtSnM5+J9Yi6MZzdmPDNm
hTg/zZH6ZPOK3i/eU/pC86zry8b3GueEuT8+S3O5/q7cUP5UToGh8sY4p11z
xLw/nD0t+Tnx7MvPygPjPpM32feA3iR+x/iOUVefqN8R94v1lPrz8btYqxjn
sf6RflU+Z72c3lU/EPd23EvcUb0APtSzYzNX0L6m3Kb4vDCTS8W9wC3WH8d5
rheOcQ9gGJcDv3GF7G3GbY6fEbO41FyVOLf1SrjA9cZxriCGczmxhZuNNPZX
jeeEq4yLXB+c4ArFec/dh63cHKS1vxr/VbyjcInri5Nc4Xi+uFz4nZuLdPa/
yC+JdwQuc/3wD1ckvn8uN56zb5B+Su4tr4l73/zD3sJmc/03a/Uwj0vPvcQt
jbMHV7j++Jd7EKO4PPiTm48M8XcN/3U867jKDcAp7iGM5vJiG7cAGe1/hV8W
9z+ucQNxmisa7zEuH7ZzC5HJ/lf55XE/4To3CGe4YvGMcPmxgytibwtui14f
i7jMXHVuRXwW+I8bjLPcwxjL3Y+d3INx5nFb9QZYzGXhanAr9edxgyvPdeMO
xvOFIdw5vXico3qB2BvnoX5a3mX9Ib2V/nucqfiCy8rV5FbpL6CGPkq/Jt+0
XkHvrh/Su8kr5LZyI3m6nDLu+zgj4tyy/7xZIp7dOAf5uXFvx78tD5EnmWf0
PubaOMPM3a4rar4Tn0XcF9Y7mUv02fGuiXvDnKRPM5Oag8318SzFme36bOZr
cW/E2W5/W3ORXkWuKY+Wr8v95e/lW66pKPeQ/+bbobE+Q08V56T1C2ZJjLdW
EHu4Yva8y/0ZZxG+4u7mXudW61VxmxuKi1wpTOAKYS+3BPfYX4tfw1VDIs4D
rid3WG6PJnGW6qnjXJB/jecy/kZy/f959cjA
               "]]}, Annotation[#, "Charting`Private`Tag$171854#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
XFdeyD+HbvweOokecc3/AXCmk8w=
               "]]}, 
             Annotation[#, "Charting`Private`Tag$171854#5"]& ]}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"Test on dynamics\"", TraditionalForm], 
         PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1b\"", "\"u1b\"", "\"x1b\"", "\"\[Theta]dot1b\"", 
           "\"xdot1b\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 6.4030785664046235`}, {1., 
          6.4030785664046235`}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 1}, {0, 12.806157132809247`}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.866559244128604*^9, 3.866559324577963*^9, {3.8665593843659086`*^9, 
   3.866559408881095*^9}, 3.866559446041252*^9, {3.866559492784354*^9, 
   3.866559514243515*^9}},
 CellLabel->
  "Out[1070]=",ExpressionUUID->"1d8d9c11-c438-4b0f-b3ce-cb3435d249dc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["errorInitial"], "Input",
 CellChangeTimes->{{3.866559461154437*^9, 3.8665594655130463`*^9}},
 CellLabel->
  "In[971]:=",ExpressionUUID->"73c0aa7b-996f-419f-9a43-1b7691872a45"],

Cell[BoxData["0.9999999999999993`"], "Output",
 CellChangeTimes->{3.8665594658249464`*^9},
 CellLabel->
  "Out[971]=",ExpressionUUID->"bf9de254-d7d5-4546-8d24-8be92c54879b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["Js"], "Input",
 CellChangeTimes->{{3.8665593321965375`*^9, 3.866559332651392*^9}},
 CellLabel->
  "In[873]:=",ExpressionUUID->"f4977448-0a02-40fa-a19b-a45239004ebd"],

Cell[BoxData[
 RowBox[{"{", "6.350944410686315`", "}"}]], "Output",
 CellChangeTimes->{3.8665593331022468`*^9},
 CellLabel->
  "Out[873]=",ExpressionUUID->"48f36c59-2a57-4edf-9a98-2962fdae04cf"]
}, Open  ]]
},
WindowSize->{1440., 747.75},
WindowMargins->{{-6, Automatic}, {Automatic, -6}},
Magnification:>1.1 Inherited,
FrontEndVersion->"13.0 for Microsoft Windows (64-bit) (February 4, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"e06e1de5-b45a-46e7-8dee-4a505fe946e4"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 1579, 48, 136, "Input",ExpressionUUID->"2f8dbb02-c7c0-432f-b262-a80ee09c7f5b"],
Cell[2162, 72, 7206, 137, 260, "Output",ExpressionUUID->"1f70384d-ab65-4179-9071-a07abcc60354"]
}, Open  ]],
Cell[9383, 212, 112924, 2803, 4993, "Input",ExpressionUUID->"e8e0b3cb-1c67-4747-8c43-f1659f15f5da"],
Cell[CellGroupData[{
Cell[122332, 3019, 7956, 211, 408, "Input",ExpressionUUID->"4d482704-5836-401e-a1c0-981b493daa65"],
Cell[130291, 3232, 489, 11, 30, "Message",ExpressionUUID->"4aaa8e9d-69d0-4d67-b754-394f06de14d1"],
Cell[130783, 3245, 136261, 2417, 238, "Output",ExpressionUUID->"0cee3289-af60-460d-82ce-54c6ada6cd84"],
Cell[267047, 5664, 685, 10, 48, "Output",ExpressionUUID->"8b834e51-f127-4d62-a35b-b955044f5fa8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[267769, 5679, 7300, 200, 387, "Input",ExpressionUUID->"fa647c23-3903-42bf-a448-5077ddb72382"],
Cell[275072, 5881, 441, 10, 30, "Message",ExpressionUUID->"4e07385c-4378-4721-a313-fba00a32dc8c"],
Cell[275516, 5893, 140620, 2494, 238, "Output",ExpressionUUID->"0bb96088-ff3f-49e2-8188-88ea4e7ed559"],
Cell[416139, 8389, 374, 6, 48, "Output",ExpressionUUID->"48b5a65e-2bec-4d3f-9c69-d33a6cffa7bf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[416550, 8400, 181, 3, 31, "Input",ExpressionUUID->"58ab3423-bda8-4f86-acee-a113929cb7ac"],
Cell[416734, 8405, 195, 3, 48, "Output",ExpressionUUID->"cd536e2f-bda3-4a38-8f54-4541479cdc37"]
}, Open  ]],
Cell[CellGroupData[{
Cell[416966, 8413, 17521, 479, 1137, "Input",ExpressionUUID->"db685101-cfd9-44ab-b625-6cbe825f64b7"],
Cell[434490, 8894, 598, 12, 30, "Message",ExpressionUUID->"7b7a2d2a-4d34-4d9f-b6a1-4c92ee8e191a"],
Cell[435091, 8908, 600, 12, 30, "Message",ExpressionUUID->"649ebc2a-17a0-44cc-9ed6-a83017f91885"],
Cell[435694, 8922, 598, 12, 30, "Message",ExpressionUUID->"070a2062-1840-44af-a2c2-420f2d82b4e6"],
Cell[436295, 8936, 597, 12, 30, "Message",ExpressionUUID->"a1e4e4c4-f9c4-481f-b2ce-611b116f5e0c"],
Cell[CellGroupData[{
Cell[436917, 8952, 303, 6, 24, "Print",ExpressionUUID->"54817be3-e084-44cb-ab4c-22a5769247d9"],
Cell[437223, 8960, 307, 6, 24, "Print",ExpressionUUID->"7a000bf0-08f8-4bbc-b136-e779b32325e2"]
}, Open  ]],
Cell[437545, 8969, 82793, 1466, 239, "Output",ExpressionUUID->"1d8d9c11-c438-4b0f-b3ce-cb3435d249dc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[520375, 10440, 189, 3, 31, "Input",ExpressionUUID->"73c0aa7b-996f-419f-9a43-1b7691872a45"],
Cell[520567, 10445, 173, 3, 35, "Output",ExpressionUUID->"bf9de254-d7d5-4546-8d24-8be92c54879b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[520777, 10453, 179, 3, 31, "Input",ExpressionUUID->"f4977448-0a02-40fa-a19b-a45239004ebd"],
Cell[520959, 10458, 194, 4, 35, "Output",ExpressionUUID->"48f36c59-2a57-4edf-9a98-2962fdae04cf"]
}, Open  ]]
}
]
*)

