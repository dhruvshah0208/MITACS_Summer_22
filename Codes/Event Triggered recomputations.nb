(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    547822,      10933]
NotebookOptionsPosition[    544273,      10871]
NotebookOutlinePosition[    544704,      10888]
CellTagsIndexPosition[    544661,      10885]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"T", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"x", "''"}], "[", "t", "]"}], "+", 
      RowBox[{"x", "[", "t", "]"}]}], "==", "0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"init", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "[", "0", "]"}], "==", 
     RowBox[{
      RowBox[{"x", "'"}], "[", "0", "]"}], "==", "1"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"event", " ", "=", " ", 
   RowBox[{"WhenEvent", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"x", "[", "t", "]"}], "==", "0"}], ",", 
     RowBox[{
      RowBox[{"end", "=", "t"}], ";", "\"\<StopIntegration\>\""}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xs", " ", "=", " ", 
   RowBox[{"NDSolveValue", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"eq", ",", "init", ",", "event"}], "}"}], ",", "x", ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "T"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"xs", "[", "t", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", 
     RowBox[{"Min", "[", 
      RowBox[{"end", ",", "T"}], "]"}]}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.866555960651078*^9, 3.866556019012478*^9}, {
  3.866556610116088*^9, 3.866556682140133*^9}, {3.866557347186178*^9, 
  3.8665573814822454`*^9}},
 CellLabel->
  "In[615]:=",ExpressionUUID->"2f8dbb02-c7c0-432f-b262-a80ee09c7f5b"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$100627#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 1.0000000204081654`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {1.0000000204081632`, 1.4142135203162605`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.866555962217578*^9, 3.866556017262035*^9}, {
  3.8665566550377703`*^9, 3.8665566840775146`*^9}, {3.8665573511879005`*^9, 
  3.8665573822510004`*^9}},
 CellLabel->
  "Out[620]=",ExpressionUUID->"1f70384d-ab65-4179-9071-a07abcc60354"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Remove", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
  RowBox[{"(*", 
   RowBox[{"ICs", " ", "-", " ", 
    RowBox[{"Initial", " ", "Conditions"}]}], " ", "*)"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Error", " ", "while", " ", "cosntraining", " ", "u"}], " ", 
   "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"CalculateSMatrix", "[", 
   RowBox[{
   "x1a_", ",", "xdot1a_", ",", "\[Theta]1a_", ",", "\[Theta]dot1a_", ",", 
    "u1a_", ",", "\[Tau]_", ",", "A_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x", ",", "L", ",", "RHS", ",", "xdot", ",", "\[Theta]", ",", 
      "\[Theta]dot", ",", "u", ",", "K", ",", "S", ",", "soltn", ",", "Af", 
      ",", "Bf", ",", "Q", ",", "fx", ",", "xState", ",", "R", ",", "Mf", ",",
       "x2dot", ",", "\[Theta]2dot", ",", "S0", ",", "sol2", ",", "t"}], 
     "}"}], ",", "\n", "\n", 
    RowBox[{
     RowBox[{"xState", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
       "}"}]}], ";", "\n", 
     RowBox[{"x2dot", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{"u", "+", 
         RowBox[{"A", " ", 
          RowBox[{"\[Theta]dot", "^", "2"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"A", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ";", "\n", 
     RowBox[{"\[Theta]2dot", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{"u", "+", 
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ")"}]}]}], 
     ";", "\n", 
     RowBox[{"fx", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
       "xdot", ",", "x2dot", ",", "\[Theta]dot", ",", "\[Theta]2dot"}], 
       "}"}]}], ";", "\n", 
     RowBox[{"L", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", "2"}], "*", 
       RowBox[{"u", "^", "2"}]}]}], ";", "\n", 
     RowBox[{"Af", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{"fx", ",", "xState"}], "]"}]}], ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{"For", " ", "nD", " ", "stuff", " ", "use", " ", "Grad"}], 
      "*)"}], "\n", 
     RowBox[{"Bf", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"fx", ",", "u"}], "]"}]}], " ", ";", 
     RowBox[{"(*", 
      RowBox[{"For", " ", "1", "D", " ", "stuff", " ", "use", " ", "D"}], 
      "*)"}], "\n", 
     RowBox[{"Q", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{
        RowBox[{"Grad", "[", 
         RowBox[{"L", ",", "xState"}], "]"}], ",", "xState"}], "]"}]}], ";", 
     " ", 
     RowBox[{"(*", " ", 
      RowBox[{"Fix", " ", "this"}], " ", "*)"}], "\n", 
     RowBox[{"Mf", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{"L", ",", "u"}], "]"}], ",", "xState"}], "]"}]}], ";", "\n", 
     RowBox[{"R", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"L", ",", 
        RowBox[{"{", 
         RowBox[{"u", ",", "2"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"S0", " ", "=", " ", 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]]}], ";", "\n", 
     RowBox[{
      RowBox[{"RHS", "[", "t_", "]"}], " ", ":=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"IdentityMatrix", "[", "4", "]"}], " ", "+", " ", 
         RowBox[{
          RowBox[{"Af", "\[Transpose]"}], ".", 
          RowBox[{"S", "[", "t", "]"}]}], " ", "+", " ", 
         RowBox[{
          RowBox[{"S", "[", "t", "]"}], ".", "Af"}], " ", "-", " ", 
         RowBox[{"KroneckerProduct", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"S", "[", "t", "]"}], ".", "Bf"}], ",", 
           RowBox[{
            RowBox[{"Bf", "\[Transpose]"}], ".", 
            RowBox[{"S", "[", "t", "]"}]}]}], "]"}]}], ")"}], " ", "/.", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "->", " ", 
          RowBox[{"x1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"xdot", " ", "->", " ", 
          RowBox[{"xdot1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"\[Theta]", " ", "->", 
          RowBox[{"\[Theta]1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"\[Theta]dot", " ", "->", " ", 
          RowBox[{"\[Theta]dot1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"u", " ", "->", " ", 
          RowBox[{"u1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}]}], "}"}]}]}], ";", 
     "\n", 
     RowBox[{"sol2", " ", "=", " ", 
      RowBox[{"S", " ", "/.", " ", 
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"S", "'"}], "[", "t", "]"}], "==", " ", 
            RowBox[{"RHS", "[", "t", "]"}]}], ",", 
           RowBox[{
            RowBox[{"S", "[", "0", "]"}], "==", "S0"}]}], "}"}], ",", "S", 
         ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], " ", "}"}]}], "]"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"S", " ", "=", " ", 
      RowBox[{"sol2", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}]}], "\n", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"CalculateGains", "[", 
   RowBox[{
   "x1a_", ",", "xdot1a_", ",", "\[Theta]1a_", ",", "\[Theta]dot1a_", ",", 
    "u1a_", ",", "time_", ",", "A_", ",", "\[Tau]_", ",", "S_"}], "]"}], ":=",
   " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x", ",", "L", ",", "RHS", ",", "xdot", ",", "\[Theta]", ",", 
      "\[Theta]dot", ",", "u", ",", "K", ",", "Af", ",", "Bf", ",", "Q", ",", 
      "fx", ",", "xState", ",", "R", ",", "Mf", ",", "x2dot", ",", 
      "\[Theta]2dot", ",", "S0", ",", "sol2", ",", "t"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"xState", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
       "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"x2dot", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{"u", "+", 
         RowBox[{"A", " ", 
          RowBox[{"\[Theta]dot", "^", "2"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"A", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Theta]2dot", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{"u", "+", 
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ")"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"fx", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
       "xdot", ",", "x2dot", ",", "\[Theta]dot", ",", "\[Theta]2dot"}], 
       "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Bf", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"fx", ",", "u"}], "]"}]}], " ", ";", 
     RowBox[{"(*", 
      RowBox[{"For", " ", "1", "D", " ", "stuff", " ", "use", " ", "D"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"K", " ", "=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Bf", "\[Transpose]"}], ".", 
         RowBox[{"S", "[", 
          RowBox[{"\[Tau]", " ", "-", " ", "time"}], "]"}]}], ")"}], "/.", 
       " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "->", " ", 
          RowBox[{"x1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"xdot", " ", "->", " ", 
          RowBox[{"xdot1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"\[Theta]", " ", "->", 
          RowBox[{"\[Theta]1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"\[Theta]dot", " ", "->", " ", 
          RowBox[{"\[Theta]dot1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"u", " ", "->", " ", 
          RowBox[{"u1a", "[", "time", "]"}]}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", "K"}]}], "\n", "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ffCartPendulum", "[", 
    RowBox[{
    "ICs_", ",", "n_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "A_", ",", 
     "order_", ",", "maxIter_", ",", "maxError_", ",", "maxCount_", ",", 
     "maxJ_", ",", "initGuess_"}], "]"}], ":=", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "InitGuess", ",", "J", ",", "S", ",", "K", ",", "count", ",", "error", 
       ",", "x", ",", "dist", ",", "xdot", ",", "f", ",", "\[Theta]", ",", 
       "\[Theta]dot", ",", "\[Lambda]1", ",", "\[Lambda]2", ",", "\[Lambda]3",
        ",", "\[Lambda]4", ",", "\[CapitalDelta]t", ",", "bcs", ",", "eqns", 
       ",", "sv", ",", "froot", ",", "xff", ",", "xdotff", ",", "xff0", ",", 
       "xdotff0", ",", "\[Theta]ff0", ",", "\[Theta]dotff0", ",", "uff0", ",",
        "\[Theta]ff", ",", "\[Theta]dotff", ",", "uff", ",", "\[Lambda]1ff0", 
       ",", "\[Lambda]2ff0", ",", "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", 
       "i", ",", 
       RowBox[{"xGuess", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          SubscriptBox["xGuess", "i"], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}]}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"\[CapitalDelta]t", "=", 
       RowBox[{"\[Tau]", "/", "n"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"{", 
         RowBox[{
         "x_", ",", "xdot_", ",", "\[Theta]_", ",", "\[Theta]dot_", ",", 
          "\[Lambda]1_", ",", "\[Lambda]2_", ",", "\[Lambda]3_", ",", 
          "\[Lambda]4_"}], "}"}], "]"}], ":=", 
       RowBox[{"{", "\n", "\t", 
        RowBox[{"xdot", ",", "\n", "\t", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}],
           " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
               ")"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", "\[Lambda]2"}], 
              ")"}]}], "+", 
            RowBox[{"A", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", "\n", 
         "\t", "\[Theta]dot", ",", "\n", "\t", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}],
           " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{"1", "/", 
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"A", " ", 
                   RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
                 ")"}]}], ")"}]}], 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[Lambda]2"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
              ")"}]}], "-", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "-", 
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", "\n", 
         "\t", "0", ",", "\n", "\t", 
         RowBox[{"-", "\[Lambda]1"}], ",", "\n", "\t", 
         RowBox[{
          FractionBox["1", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"A", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "3"]], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["A", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"A", " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "-", 
               "\[Lambda]4"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "5"]}], "+", 
            RowBox[{
             SuperscriptBox["A", "3"], " ", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
              ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "6"]}], "-", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             SuperscriptBox["A", "2"], " ", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
              ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "4"], " ", 
             RowBox[{"(", 
              RowBox[{"4", "-", "A", "+", 
               RowBox[{"A", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}], "-", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "\[Lambda]2"}], "+", 
               RowBox[{
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}], "+", 
               RowBox[{"3", " ", "\[Lambda]2", " ", "\[Lambda]4", " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"A", " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "-", 
               "\[Lambda]4", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "A", " ", 
                   SuperscriptBox["\[Lambda]2", "2"]}], "+", 
                  SuperscriptBox["\[Lambda]4", "2"]}], ")"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox["A", "2"], " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2", " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], 
            "+", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "3"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", "A", " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "+", 
               RowBox[{"2", " ", "\[Lambda]4"}], "+", 
               RowBox[{
                SuperscriptBox["\[Lambda]4", "2"], " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"2", " ", "A", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"A", " ", 
                   SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], 
                  "-", "\[Lambda]4"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], 
            "+", 
            RowBox[{
             RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[Lambda]2"}], " ", "\[Lambda]4"}], "-", 
               RowBox[{"A", " ", 
                RowBox[{"(", 
                 RowBox[{"\[Lambda]2", "-", 
                  RowBox[{
                   SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
                 ")"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"A", " ", "\[Lambda]4", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]}], 
           ")"}]}], ",", "\n", "\t", 
         RowBox[{
          RowBox[{
           RowBox[{"4", " ", "/", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"A", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A", "-", "2"}],
              ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{"A", " ", "\[Theta]dot", " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}]}], ")"}]}], 
          "-", "\[Lambda]3"}]}], "\n", "}"}]}], ";", 
      StyleBox["\[IndentingNewLine]",
       FontWeight->"Plain"], "\n", 
      RowBox[{"InitGuess", " ", "=", " ", "initGuess"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       StyleBox["xGuess",
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       StyleBox["=",
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       RowBox[{
        StyleBox["Table",
         FontWeight->"Plain"], 
        StyleBox["[",
         FontWeight->"Plain"], 
        RowBox[{
         RowBox[{
          StyleBox["If",
           FontWeight->"Plain"], 
          StyleBox["[",
           FontWeight->"Plain"], 
          RowBox[{
           StyleBox[
            RowBox[{"i", " ", "!=", " ", 
             RowBox[{"-", "1"}]}],
            FontWeight->"Plain"], 
           StyleBox[",",
            FontWeight->"Plain"], 
           RowBox[{
            StyleBox[
             SubscriptBox["xGuess", 
              RowBox[{"i", "+", "1"}]],
             FontWeight->"Plain"], 
            StyleBox[" ",
             FontWeight->"Plain"], 
            StyleBox["=",
             FontWeight->"Plain"], 
            StyleBox[" ",
             FontWeight->"Plain"], 
            RowBox[{
             SubscriptBox[
              StyleBox["xGuess",
               FontWeight->"Plain"], "i"], 
             StyleBox[" ",
              FontWeight->"Plain"], 
             StyleBox["+",
              FontWeight->"Plain"], 
             StyleBox[
              RowBox[{"\[CapitalDelta]t", "*", 
               RowBox[{"f", "[", 
                SubscriptBox["xGuess", "i"], "]"}]}],
              FontWeight->"Plain"]}]}], 
           StyleBox[",",
            FontWeight->"Plain"], 
           RowBox[{
            SubscriptBox[
             StyleBox["xGuess",
              FontWeight->"Plain"], "0"], " ", "=", " ", 
            RowBox[{"{", 
             StyleBox[
              RowBox[{
               RowBox[{"ICs", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "3", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "4", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "3", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "4", "]"}], "]"}]}],
              FontWeight->"Plain"], 
             StyleBox["}",
              FontWeight->"Plain"]}]}]}], 
          StyleBox["]",
           FontWeight->"Plain"]}], 
         StyleBox[",",
          FontWeight->"Plain"], 
         StyleBox[
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"-", "1"}], ",", 
            RowBox[{"n", "-", "1"}]}], "}"}],
          FontWeight->"Plain"]}], 
        StyleBox["]",
         FontWeight->"Plain"]}]}], 
      StyleBox[";",
       FontWeight->"Plain"], "\[IndentingNewLine]", "\n", 
      RowBox[{"bcs", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"x", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"xdot", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"x", ",", " ", "n"}], "]"}], "==", 
          RowBox[{"Subscript", "[", 
           RowBox[{"xdot", ",", " ", "n"}], "]"}], "==", "0"}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]dot", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]dot", ",", " ", "n"}], "]"}], "==", "0"}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]", ",", " ", "n"}], "]"}], "==", "\[Pi]"}]}], 
        "}"}]}], ";", "\n", 
      RowBox[{"eqns", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Join", "[", 
         RowBox[{"bcs", ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Thread", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], "==", 
              "\n", 
              RowBox[{
               RowBox[{
                RowBox[{"1", "/", "2"}], " ", "\[CapitalDelta]t", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"f", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}], "]"}], "+", 
                  "\n", 
                  RowBox[{"f", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], 
                   "]"}]}], ")"}]}], "+", "\n", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Subscript", "[", 
                  RowBox[{"x", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"xdot", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]dot", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]1", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]2", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]3", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]4", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}]}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
        "]"}]}], ";", "\n", "\n", 
      RowBox[{"sv", " ", "=", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", "\n", 
             "\t\t\t\t\t", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "7", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "8", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", "1"}], 
        "]"}]}], ";", "\n", "\[IndentingNewLine]", 
      RowBox[{"froot", "=", 
       RowBox[{"FindRoot", "[", 
        RowBox[{"eqns", ",", "sv", ",", 
         RowBox[{"MaxIterations", "->", "maxIter"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"error", " ", "=", " ", 
       RowBox[{"Norm", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                SubscriptBox["x", "n"], ",", 
                SubscriptBox["xdot", "n"], ",", 
                SubscriptBox["\[Theta]", "n"], ",", 
                SubscriptBox["\[Theta]dot", "n"]}], "}"}], " ", "-", " ", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], ",", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                SubscriptBox["x", "0"], ",", 
                SubscriptBox["xdot", "0"], ",", 
                SubscriptBox["\[Theta]", "0"], ",", 
                SubscriptBox["\[Theta]dot", "0"]}], "}"}], " ", "-", " ", 
              "ICs"}], ",", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Thread", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   SubscriptBox["x", "i"], ",", 
                   SubscriptBox["xdot", "i"], ",", 
                   SubscriptBox["\[Theta]", "i"], ",", 
                   SubscriptBox["\[Theta]dot", "i"], ",", 
                   SubscriptBox["\[Lambda]1", "i"], ",", 
                   SubscriptBox["\[Lambda]2", "i"], ",", 
                   SubscriptBox["\[Lambda]3", "i"], ",", 
                   SubscriptBox["\[Lambda]4", "i"]}], "}"}], "-", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    FractionBox["1", "2"], " ", "\[CapitalDelta]t", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}], "]"}], "+", 
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "]"}]}], 
                    ")"}]}], "+", 
                   RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}]}], ")"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
           "]"}], "/.", "froot"}], ",", "\"\<Frobenius\>\""}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"uff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}], "^", 
                  "2"}]}]}], ")"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], 
                RowBox[{"Cos", "[", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}]}], "-", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}]}], ")"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"count", " ", "=", " ", "0"}], ";", "\n", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"error", " ", ">", " ", "maxError"}], ")"}], " ", "||", 
           " ", 
           RowBox[{"(", 
            RowBox[{"J", " ", ">", " ", "maxJ"}], ")"}]}], ")"}], " ", "&&", 
         " ", 
         RowBox[{"count", " ", "<=", " ", "maxCount"}]}], " ", ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"InitGuess", " ", "=", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}]}], "}"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          StyleBox["xGuess",
           FontWeight->"Plain"], 
          StyleBox[" ",
           FontWeight->"Plain"], 
          StyleBox["=",
           FontWeight->"Plain"], 
          StyleBox[" ",
           FontWeight->"Plain"], 
          RowBox[{
           StyleBox["Table",
            FontWeight->"Plain"], 
           StyleBox["[",
            FontWeight->"Plain"], 
           RowBox[{
            RowBox[{
             StyleBox["If",
              FontWeight->"Plain"], 
             StyleBox["[",
              FontWeight->"Plain"], 
             RowBox[{
              StyleBox[
               RowBox[{"i", " ", "!=", " ", 
                RowBox[{"-", "1"}]}],
               FontWeight->"Plain"], 
              StyleBox[",",
               FontWeight->"Plain"], 
              RowBox[{
               StyleBox[
                SubscriptBox["xGuess", 
                 RowBox[{"i", "+", "1"}]],
                FontWeight->"Plain"], 
               StyleBox[" ",
                FontWeight->"Plain"], 
               StyleBox["=",
                FontWeight->"Plain"], 
               StyleBox[" ",
                FontWeight->"Plain"], 
               RowBox[{
                SubscriptBox[
                 StyleBox["xGuess",
                  FontWeight->"Plain"], "i"], 
                StyleBox[" ",
                 FontWeight->"Plain"], 
                StyleBox["+",
                 FontWeight->"Plain"], 
                StyleBox[
                 RowBox[{"\[CapitalDelta]t", "*", 
                  RowBox[{"f", "[", 
                   SubscriptBox["xGuess", "i"], "]"}]}],
                 FontWeight->"Plain"]}]}], 
              StyleBox[",",
               FontWeight->"Plain"], 
              RowBox[{
               SubscriptBox[
                StyleBox["xGuess",
                 FontWeight->"Plain"], "0"], " ", "=", " ", 
               RowBox[{"{", 
                StyleBox[
                 RowBox[{
                  RowBox[{"ICs", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", 
                  RowBox[{"ICs", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], ",", 
                  RowBox[{"ICs", "[", 
                   RowBox[{"[", "3", "]"}], "]"}], ",", 
                  RowBox[{"ICs", "[", 
                   RowBox[{"[", "4", "]"}], "]"}], ",", 
                  RowBox[{"InitGuess", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", 
                  RowBox[{"InitGuess", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], ",", 
                  RowBox[{"InitGuess", "[", 
                   RowBox[{"[", "3", "]"}], "]"}], ",", 
                  RowBox[{"InitGuess", "[", 
                   RowBox[{"[", "4", "]"}], "]"}]}],
                 FontWeight->"Plain"], 
                StyleBox["}",
                 FontWeight->"Plain"]}]}]}], 
             StyleBox["]",
              FontWeight->"Plain"]}], 
            StyleBox[",",
             FontWeight->"Plain"], 
            StyleBox[
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"-", "1"}], ",", 
               RowBox[{"n", "-", "1"}]}], "}"}],
             FontWeight->"Plain"]}], 
           StyleBox["]",
            FontWeight->"Plain"]}]}], 
         StyleBox[";",
          FontWeight->"Plain"], "\[IndentingNewLine]", 
         RowBox[{"sv", " ", "=", " ", 
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", "\n", 
                "\t\t\t\t\t", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "7", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "8", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", "1"}], 
           "]"}]}], ";", "\n", "\n", 
         RowBox[{"froot", "=", 
          RowBox[{"FindRoot", "[", 
           RowBox[{"eqns", ",", "sv", ",", 
            RowBox[{"MaxIterations", "->", "maxIter"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"error", " ", "=", " ", 
          RowBox[{"Norm", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Flatten", "[", 
              RowBox[{"Join", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   SubscriptBox["x", "n"], ",", 
                   SubscriptBox["xdot", "n"], ",", 
                   SubscriptBox["\[Theta]", "n"], ",", 
                   SubscriptBox["\[Theta]dot", "n"]}], "}"}], " ", "-", " ", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], 
                ",", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   SubscriptBox["x", "0"], ",", 
                   SubscriptBox["xdot", "0"], ",", 
                   SubscriptBox["\[Theta]", "0"], ",", 
                   SubscriptBox["\[Theta]dot", "0"]}], "}"}], " ", "-", " ", 
                 "ICs"}], ",", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"Thread", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[CapitalDelta]t", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}], "]"}], "+", 
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}]}], ")"}]}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}],
               "]"}], "/.", "froot"}], ",", "\"\<Frobenius\>\""}], "]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"uff0", "=", 
          RowBox[{"ListInterpolation", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"1", "/", 
                 RowBox[{"(", 
                  RowBox[{"1", "-", 
                   RowBox[{"A", " ", 
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}], "^", 
                    "2"}]}]}], ")"}]}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], 
                   RowBox[{"Cos", "[", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}]}], "-", 
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}]}], ")"}]}], 
               ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
             "froot"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
            RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", 
         "\n", 
         RowBox[{"J", " ", "=", " ", 
          RowBox[{"NIntegrate", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", 
         "\n", 
         RowBox[{"count", " ", "=", " ", 
          RowBox[{"count", "+", "1"}]}], ";"}]}], "\n", "]"}], ";", "\n", 
      "\n", "\n", 
      RowBox[{"xff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"xdotff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Theta]ff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Theta]dotff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]1ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]2ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]3ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]4ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      "\n", 
      RowBox[{"uff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}], "^", 
                  "2"}]}]}], ")"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], 
                RowBox[{"Cos", "[", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}]}], "-", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}]}], ")"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      "\n", 
      RowBox[{
       RowBox[{"xff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xdotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "\[Pi]"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"uff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"uff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"S", " ", "=", " ", 
       RowBox[{"CalculateSMatrix", "[", 
        RowBox[{
        "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
         "uff", ",", "\[Tau]", ",", "A"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"K", "[", "t_", "]"}], " ", ":=", " ", 
       RowBox[{"CalculateGains", "[", 
        RowBox[{
        "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
         "uff", ",", "t", ",", "A", ",", "\[Tau]", ",", "S"}], "]"}]}], ";", 
      "\n", 
      RowBox[{"{", 
       RowBox[{
       "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
        "uff", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
        "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "J", ",", "K"}], 
       "}"}]}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"testSwingUp", "[", 
    RowBox[{
    "ICs_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "uff0_", ",", "A_"}], "]"}],
    ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eq", ",", "init", ",", "x", ",", "xdot", ",", "\[Theta]", ",", 
       "\[Theta]dot", ",", "xs", ",", "xdots", ",", "\[Theta]s", ",", 
       "\[Theta]dots", ",", "t", ",", "J"}], "}"}], ",", "\n", 
     RowBox[{
      RowBox[{"eq", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"x", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"xdot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"xdot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"uff0", "[", "t", "]"}], "+", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
             RowBox[{"A", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]dot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"uff0", "[", "t", "]"}], "+", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
            ")"}]}]}]}], "}"}]}], ";", "\n", 
      RowBox[{"init", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"xdot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]dot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
        "}"}], "=", 
       RowBox[{"NDSolveValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"eq", ",", "init"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
         RowBox[{"Method", "->", 
          RowBox[{"{", 
           RowBox[{"\"\<DiscontinuityProcessing\>\"", "->", "None"}], 
           "}"}]}]}], "]"}]}], ";", "\n", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"{", 
       RowBox[{
       "xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots", ",", "uff0",
         ",", "J"}], "}"}]}]}], "]"}]}], "\n", "\[IndentingNewLine]", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"testWithFB", "[", 
    RowBox[{
    "ICs_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "xff0_", ",", "xdotff0_", 
     ",", "\[Theta]ff0_", ",", "\[Theta]dotff0_", ",", "uff0_", ",", "A_", 
     ",", "K_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eq", ",", "init", ",", "\[Theta]", ",", "\[Theta]dot", ",", 
       "\[Theta]ff", ",", "\[Theta]dotff", ",", "x", ",", "xdot", ",", "xff", 
       ",", "xdotff", ",", "uff", ",", "t", ",", "\[Kappa]1", ",", 
       "\[Kappa]2", ",", "\[Kappa]3", ",", "\[Kappa]4", ",", "ufb", ",", "u", 
       ",", "\[Theta]s", ",", "\[Theta]dots", ",", "xs", ",", "xdots", ",", 
       "us", ",", "J", ",", "error"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Kappa]1", "=", 
       RowBox[{"\[Kappa]2", "=", "3"}]}], ";", "  ", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"lqr", " ", "for", " ", "q"}], "=", 
        RowBox[{"r", " ", "for", " ", "balancing", " ", "pendulum"}]}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"\[Kappa]3", " ", "=", " ", 
       RowBox[{"-", "0.1"}]}], ";", 
      RowBox[{"\[Kappa]4", " ", "=", " ", 
       RowBox[{"-", "0.65"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"xff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xdotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "\[Pi]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"uff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"uff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ufb", "[", "t_", "]"}], " ", ":=", " ", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"K", "[", "t", "]"}], ".", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"xff", "[", "t", "]"}], "-", 
                RowBox[{"x", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"xdotff", "[", "t", "]"}], "-", 
                RowBox[{"xdot", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]dot", "[", "t", "]"}]}]}], "}"}]}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         RowBox[{
          RowBox[{"\[Kappa]1", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]3", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"xff", "[", "t", "]"}], "-", 
             RowBox[{"x", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"xdotff", "[", "t", "]"}], "-", 
             RowBox[{"xdot", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}], ";", 
      "\n", 
      RowBox[{
       RowBox[{"u", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{"uff", "[", "t", "]"}], "+", 
        RowBox[{"ufb", "[", "t", "]"}]}]}], ";", "\n", "\n", 
      RowBox[{"eq", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"x", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"xdot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"xdot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"u", "[", "t", "]"}], "+", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
             RowBox[{"A", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]dot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"u", "[", "t", "]"}], "+", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
            ")"}]}]}]}], "}"}]}], ";", 
      RowBox[{"init", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"xdot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]dot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}], ";", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
        "}"}], "=", 
       RowBox[{"NDSolveValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"eq", ",", "init"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
         RowBox[{"Method", "->", 
          RowBox[{"{", 
           RowBox[{"\"\<DiscontinuityProcessing\>\"", "->", "None"}], 
           "}"}]}]}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"us", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{"uff", "[", "t", "]"}], "+", 
        RowBox[{"Piecewise", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"K", "[", "t", "]"}], ".", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"xff", "[", "t", "]"}], "-", 
                 RowBox[{"xs", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"xdotff", "[", "t", "]"}], "-", 
                 RowBox[{"xdots", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                 RowBox[{"\[Theta]s", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                 RowBox[{"\[Theta]dots", "[", "t", "]"}]}]}], "}"}]}], ",", 
             RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
          RowBox[{
           RowBox[{"\[Kappa]1", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]s", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]dots", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]3", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"xff", "[", "t", "]"}], "-", 
              RowBox[{"xs", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]4", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"xdotff", "[", "t", "]"}], "-", 
              RowBox[{"xdots", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"us", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"error", " ", "=", " ", 
       RowBox[{"Norm", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xs", "[", "\[Tau]", "]"}], ",", 
           RowBox[{"xdots", "[", "\[Tau]", "]"}], ",", 
           RowBox[{"\[Theta]s", "[", "\[Tau]", "]"}], ",", 
           RowBox[{"\[Theta]dots", "[", "\[Tau]", "]"}]}], "}"}], " ", "-", 
         " ", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "Pi", ",", "0"}], "}"}]}], "]"}]}], ";",
       "\n", 
      RowBox[{"{", 
       RowBox[{
       "xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots", ",", "us", 
        ",", "J", ",", "error"}], "}"}]}]}], "]"}]}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testWithFBClipped", "[", 
   RowBox[{
   "ICs_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "xff0_", ",", "xdotff0_", 
    ",", "\[Theta]ff0_", ",", "\[Theta]dotff0_", ",", "uff0_", ",", "A_", ",",
     "uBound_", ",", "K_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "eq", ",", "init", ",", "\[Theta]", ",", "\[Theta]dot", ",", 
      "\[Theta]ff", ",", "\[Theta]dotff", ",", "x", ",", "xdot", ",", "xff", 
      ",", "xdotff", ",", "uff", ",", "t", ",", "\[Kappa]1", ",", "\[Kappa]2",
       ",", "\[Kappa]3", ",", "\[Kappa]4", ",", "ufb", ",", "u", ",", 
      "\[Theta]s", ",", "\[Theta]dots", ",", "xs", ",", "xdots", ",", "us", 
      ",", "J", ",", "error"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Kappa]1", "=", 
      RowBox[{"\[Kappa]2", "=", "3"}]}], ";", "  ", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"lqr", " ", "for", " ", "q"}], "=", 
       RowBox[{"r", " ", "for", " ", "balancing", " ", "pendulum"}]}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\[Kappa]3", " ", "=", " ", 
      RowBox[{"-", "0.1"}]}], ";", 
     RowBox[{"\[Kappa]4", " ", "=", " ", 
      RowBox[{"-", "0.65"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"xff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xdotff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "\[Pi]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"uff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"uff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ufb", "[", "t_", "]"}], " ", ":=", " ", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"K", "[", "t", "]"}], ".", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"xff", "[", "t", "]"}], "-", 
               RowBox[{"x", "[", "t", "]"}]}], ",", 
              RowBox[{
               RowBox[{"xdotff", "[", "t", "]"}], "-", 
               RowBox[{"xdot", "[", "t", "]"}]}], ",", 
              RowBox[{
               RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]", "[", "t", "]"}]}], ",", 
              RowBox[{
               RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]dot", "[", "t", "]"}]}]}], "}"}]}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        RowBox[{
         RowBox[{"\[Kappa]1", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
            RowBox[{"\[Theta]", "[", "t", "]"}]}], ")"}]}], "+", 
         RowBox[{"\[Kappa]2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
            RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ")"}]}], "+", 
         RowBox[{"\[Kappa]3", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"xff", "[", "t", "]"}], "-", 
            RowBox[{"x", "[", "t", "]"}]}], ")"}]}], "+", 
         RowBox[{"\[Kappa]4", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"xdotff", "[", "t", "]"}], "-", 
            RowBox[{"xdot", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}], ";", 
     "\n", 
     RowBox[{
      RowBox[{"u", "[", "t_", "]"}], ":=", " ", 
      RowBox[{"Clip", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"uff", "[", "t", "]"}], "+", 
         RowBox[{"ufb", "[", "t", "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "uBound"}], ",", "uBound"}], "}"}]}], "]"}]}], ";", 
     "\n", "\n", 
     RowBox[{"eq", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"x", "'"}], "[", "t", "]"}], "==", 
         RowBox[{"xdot", "[", "t", "]"}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"xdot", "'"}], "[", "t", "]"}], "==", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
            ")"}]}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"u", "[", "t", "]"}], "+", 
            RowBox[{"A", " ", 
             RowBox[{
              RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
            RowBox[{"A", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "==", 
         RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Theta]dot", "'"}], "[", "t", "]"}], "==", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
            ")"}]}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"u", "[", "t", "]"}], "+", 
               RowBox[{"A", " ", 
                RowBox[{
                 RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
           ")"}]}]}]}], "}"}]}], ";", "\n", "\n", 
     RowBox[{"init", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "[", "0", "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"xdot", "[", "0", "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"\[Theta]", "[", "0", "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"\[Theta]dot", "[", "0", "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}], ";", "\n", "\n", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
       "}"}], "=", 
      RowBox[{"NDSolveValue", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"eq", ",", "init"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
        RowBox[{"Method", "->", 
         RowBox[{"{", 
          RowBox[{"\"\<DiscontinuityProcessing\>\"", "->", "None"}], 
          "}"}]}]}], "]"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"us", "[", "t_", "]"}], ":=", 
      RowBox[{"Clip", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"uff", "[", "t", "]"}], "+", 
         RowBox[{"Piecewise", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"K", "[", "t", "]"}], ".", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"xff", "[", "t", "]"}], "-", 
                  RowBox[{"xs", "[", "t", "]"}]}], ",", 
                 RowBox[{
                  RowBox[{"xdotff", "[", "t", "]"}], "-", 
                  RowBox[{"xdots", "[", "t", "]"}]}], ",", 
                 RowBox[{
                  RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]s", "[", "t", "]"}]}], ",", 
                 RowBox[{
                  RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]dots", "[", "t", "]"}]}]}], "}"}]}], ",", 
              RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
           RowBox[{
            RowBox[{"\[Kappa]1", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]s", "[", "t", "]"}]}], ")"}]}], "+", 
            RowBox[{"\[Kappa]2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]dots", "[", "t", "]"}]}], ")"}]}], "+", 
            RowBox[{"\[Kappa]3", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"xff", "[", "t", "]"}], "-", 
               RowBox[{"xs", "[", "t", "]"}]}], ")"}]}], "+", 
            RowBox[{"\[Kappa]4", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"xdotff", "[", "t", "]"}], "-", 
               RowBox[{"xdots", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "uBound"}], ",", "uBound"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"error", " ", "=", " ", 
      RowBox[{"Norm", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"xs", "[", "\[Tau]", "]"}], ",", 
          RowBox[{"xdots", "[", "\[Tau]", "]"}], ",", 
          RowBox[{"\[Theta]s", "[", "\[Tau]", "]"}], ",", 
          RowBox[{"\[Theta]dots", "[", "\[Tau]", "]"}]}], "}"}], " ", "-", 
        " ", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "Pi", ",", "0"}], "}"}]}], "]"}]}], ";", 
     "\n", "\n", 
     RowBox[{"J", " ", "=", " ", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"us", "[", "t", "]"}], "^", "2"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
     RowBox[{"{", 
      RowBox[{
      "xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots", ",", "us", 
       ",", "J", ",", "error"}], "}"}]}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Energy", "[", 
     RowBox[{"{", 
      RowBox[{
      "x1_", ",", "x2_", ",", "\[Theta]1_", ",", "\[Theta]2_", ",", "A_"}], 
      "}"}], "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "/", "2"}], "*", 
      RowBox[{"x2", "^", "2"}]}], " ", "+", " ", 
     RowBox[{
      RowBox[{"1", "/", "2"}], "*", "A", "*", 
      RowBox[{"\[Theta]2", "^", "2"}]}], " ", "+", " ", 
     RowBox[{"A", "*", 
      RowBox[{"Cos", "[", "\[Theta]1", "]"}], "*", "x2", "*", "\[Theta]2"}], 
     " ", "-", " ", 
     RowBox[{"A", "*", 
      RowBox[{"Cos", "[", "\[Theta]1", "]"}]}]}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"eq", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"x", "''"}], "[", "t", "]"}], "+", 
        RowBox[{"x", "[", "t", "]"}]}], "==", "0"}], "}"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"init", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x", "[", "0", "]"}], "==", 
       RowBox[{
        RowBox[{"x", "'"}], "[", "0", "]"}], "==", "1"}], "}"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"event", " ", "=", " ", 
     RowBox[{"WhenEvent", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"x", "[", "t", "]"}], "==", "0"}], ",", 
       RowBox[{
        RowBox[{"end", "=", "t"}], ";", "\"\<StopIntegration\>\""}]}], 
      "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"xs", " ", "=", " ", 
     RowBox[{"NDSolveValue", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"eq", ",", "init", ",", "event"}], "}"}], ",", "x", ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "T"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testWithFBEventStop", "[", 
   RowBox[{
   "ICs_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "xff0_", ",", "xdotff0_", 
    ",", "\[Theta]ff0_", ",", "\[Theta]dotff0_", ",", "uff0_", ",", "A_", ",",
     "uBound_", ",", "K_", ",", "errorBound_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "eq", ",", "init", ",", "\[Theta]", ",", "\[Theta]dot", ",", 
      "\[Theta]ff", ",", "\[Theta]dotff", ",", "x", ",", "xdot", ",", "xff", 
      ",", "xdotff", ",", "uff", ",", "t", ",", "\[Kappa]1", ",", "\[Kappa]2",
       ",", "\[Kappa]3", ",", "\[Kappa]4", ",", "ufb", ",", "u", ",", 
      "\[Theta]s", ",", "\[Theta]dots", ",", "xs", ",", "xdots", ",", "us", 
      ",", "J", ",", "error", ",", "event", ",", "end"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Kappa]1", "=", 
      RowBox[{"\[Kappa]2", "=", "3"}]}], ";", "  ", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"lqr", " ", "for", " ", "q"}], "=", 
       RowBox[{"r", " ", "for", " ", "balancing", " ", "pendulum"}]}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\[Kappa]3", " ", "=", " ", 
      RowBox[{"-", "0.1"}]}], ";", 
     RowBox[{"\[Kappa]4", " ", "=", " ", 
      RowBox[{"-", "0.65"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"xff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xdotff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "\[Pi]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"uff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"uff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ufb", "[", "t_", "]"}], " ", ":=", " ", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"K", "[", "t", "]"}], ".", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"xff", "[", "t", "]"}], "-", 
               RowBox[{"x", "[", "t", "]"}]}], ",", 
              RowBox[{
               RowBox[{"xdotff", "[", "t", "]"}], "-", 
               RowBox[{"xdot", "[", "t", "]"}]}], ",", 
              RowBox[{
               RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]", "[", "t", "]"}]}], ",", 
              RowBox[{
               RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]dot", "[", "t", "]"}]}]}], "}"}]}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        RowBox[{
         RowBox[{"\[Kappa]1", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
            RowBox[{"\[Theta]", "[", "t", "]"}]}], ")"}]}], "+", 
         RowBox[{"\[Kappa]2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
            RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ")"}]}], "+", 
         RowBox[{"\[Kappa]3", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"xff", "[", "t", "]"}], "-", 
            RowBox[{"x", "[", "t", "]"}]}], ")"}]}], "+", 
         RowBox[{"\[Kappa]4", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"xdotff", "[", "t", "]"}], "-", 
            RowBox[{"xdot", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}], ";", 
     RowBox[{
      RowBox[{"u", "[", "t_", "]"}], ":=", " ", 
      RowBox[{"Clip", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"uff", "[", "t", "]"}], "+", 
         RowBox[{"ufb", "[", "t", "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "uBound"}], ",", "uBound"}], "}"}]}], "]"}]}], ";", 
     RowBox[{"eq", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"x", "'"}], "[", "t", "]"}], "==", 
         RowBox[{"xdot", "[", "t", "]"}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"xdot", "'"}], "[", "t", "]"}], "==", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
            ")"}]}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"u", "[", "t", "]"}], "+", 
            RowBox[{"A", " ", 
             RowBox[{
              RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
            RowBox[{"A", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "==", 
         RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Theta]dot", "'"}], "[", "t", "]"}], "==", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
            ")"}]}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"u", "[", "t", "]"}], "+", 
               RowBox[{"A", " ", 
                RowBox[{
                 RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
           ")"}]}]}]}], "}"}]}], ";", 
     RowBox[{"end", " ", "=", " ", "\[Tau]1"}], ";", "\[IndentingNewLine]", 
     RowBox[{"init", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "[", "0", "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"xdot", "[", "0", "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"\[Theta]", "[", "0", "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"\[Theta]dot", "[", "0", "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"event", " ", "=", " ", 
      RowBox[{"WhenEvent", "[", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"Norm", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x", "[", "t", "]"}], ",", 
             RowBox[{"xdot", "[", "t", "]"}], ",", 
             RowBox[{"\[Theta]", "[", "t", "]"}], ",", 
             RowBox[{"\[Theta]dot", "[", "t", "]"}]}], "}"}], " ", "-", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"xff", "[", "t", "]"}], ",", 
             RowBox[{"xdotff", "[", "t", "]"}], ",", 
             RowBox[{"\[Theta]ff", "[", "t", "]"}], ",", 
             RowBox[{"\[Theta]dotff", "[", "t", "]"}]}], "}"}]}], "]"}], ">", 
         " ", "errorBound"}], ",", 
        RowBox[{
         RowBox[{"end", "=", "t"}], ";", "\"\<StopIntegration\>\""}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
       "}"}], "=", 
      RowBox[{"NDSolveValue", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"eq", ",", "init", ",", "event"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", 
          RowBox[{"Min", "[", 
           RowBox[{"end", ",", "\[Tau]1"}], "]"}]}], "}"}], ",", 
        RowBox[{"Method", "->", 
         RowBox[{"{", 
          RowBox[{"\"\<DiscontinuityProcessing\>\"", "->", "None"}], 
          "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"end", " ", "<", " ", "\[Tau]"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"us", "[", "t_", "]"}], ":=", " ", 
        RowBox[{"Clip", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"uff", "[", "t", "]"}], " ", "+", " ", 
           RowBox[{
            RowBox[{"K", "[", "t", "]"}], ".", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"xff", "[", "t", "]"}], "-", 
               RowBox[{"xs", "[", "t", "]"}]}], ",", 
              RowBox[{
               RowBox[{"xdotff", "[", "t", "]"}], "-", 
               RowBox[{"xdots", "[", "t", "]"}]}], ",", 
              RowBox[{
               RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]s", "[", "t", "]"}]}], ",", 
              RowBox[{
               RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]dots", "[", "t", "]"}]}]}], "}"}]}]}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "uBound"}], ",", "uBound"}], "}"}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"us", "[", "t_", "]"}], ":=", 
         RowBox[{"Clip", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"uff", "[", "t", "]"}], "+", 
            RowBox[{"Piecewise", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"K", "[", "t", "]"}], ".", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"xff", "[", "t", "]"}], "-", 
                    RowBox[{"xs", "[", "t", "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"xdotff", "[", "t", "]"}], "-", 
                    RowBox[{"xdots", "[", "t", "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                    RowBox[{"\[Theta]s", "[", "t", "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                    RowBox[{"\[Theta]dots", "[", "t", "]"}]}]}], "}"}]}], ",", 
                 RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], 
              ",", 
              RowBox[{
               RowBox[{"\[Kappa]1", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]s", "[", "t", "]"}]}], ")"}]}], "+", 
               RowBox[{"\[Kappa]2", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]dots", "[", "t", "]"}]}], ")"}]}], "+", 
               RowBox[{"\[Kappa]3", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"xff", "[", "t", "]"}], "-", 
                  RowBox[{"xs", "[", "t", "]"}]}], ")"}]}], "+", 
               RowBox[{"\[Kappa]4", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"xdotff", "[", "t", "]"}], "-", 
                  RowBox[{"xdots", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}], 
           ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "uBound"}], ",", "uBound"}], "}"}]}], "]"}]}], 
        ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"error", " ", "=", " ", 
      RowBox[{"Norm", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"xs", "[", 
           RowBox[{"Min", "[", 
            RowBox[{"end", ",", "\[Tau]"}], "]"}], "]"}], ",", 
          RowBox[{"xdots", "[", 
           RowBox[{"Min", "[", 
            RowBox[{"end", ",", "\[Tau]"}], "]"}], "]"}], ",", 
          RowBox[{"\[Theta]s", "[", 
           RowBox[{"Min", "[", 
            RowBox[{"end", ",", "\[Tau]"}], "]"}], "]"}], ",", 
          RowBox[{"\[Theta]dots", "[", 
           RowBox[{"Min", "[", 
            RowBox[{"end", ",", "\[Tau]"}], "]"}], "]"}]}], "}"}], " ", "-", 
        " ", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "Pi", ",", "0"}], "}"}]}], "]"}]}], ";", 
     RowBox[{"J", " ", "=", " ", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"us", "[", "t", "]"}], "^", "2"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", 
          RowBox[{"Min", "[", 
           RowBox[{"end", ",", "\[Tau]"}], "]"}]}], "}"}]}], "]"}]}], ";", 
     RowBox[{"{", 
      RowBox[{
      "xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots", ",", "us", 
       ",", "J", ",", "error", ",", "end"}], "}"}]}]}], "\[IndentingNewLine]",
    "]"}]}], "\n"}], "Input",
 CellChangeTimes->{{3.862753343189165*^9, 3.862753411389415*^9}, {
   3.8627553611496043`*^9, 3.8627553647834463`*^9}, {3.862755542386807*^9, 
   3.862755582254092*^9}, {3.862756179429644*^9, 3.8627562078485813`*^9}, 
   3.8627563320549693`*^9, {3.8627564690202875`*^9, 3.8627565488258357`*^9}, {
   3.8627568793814173`*^9, 3.8627568873778677`*^9}, 3.8627585165043135`*^9, {
   3.8627585965107956`*^9, 3.862758689290209*^9}, {3.862758834699833*^9, 
   3.8627588555911727`*^9}, {3.8627590963373947`*^9, 
   3.8627590998392787`*^9}, {3.8627594410134716`*^9, 
   3.8627594626865597`*^9}, {3.862759635094576*^9, 3.8627596377257366`*^9}, {
   3.862759669455618*^9, 3.8627597448635693`*^9}, 3.862759795914287*^9, {
   3.8627603319473376`*^9, 3.862760490473783*^9}, {3.8627605307139487`*^9, 
   3.862760536806006*^9}, {3.8627610047197795`*^9, 3.8627610478400292`*^9}, {
   3.8627611285982723`*^9, 3.862761147921111*^9}, {3.8631982964294224`*^9, 
   3.8631982970332265`*^9}, 3.8631983363504767`*^9, {3.863208693665881*^9, 
   3.8632086943846474`*^9}, 3.863210007245922*^9, 3.863271804426487*^9, {
   3.8632718412836447`*^9, 3.8632718583741503`*^9}, {3.8632719591337743`*^9, 
   3.863271959351703*^9}, {3.863272049174841*^9, 3.863272070205083*^9}, {
   3.863272113471178*^9, 3.863272123024109*^9}, 3.8632747752128673`*^9, {
   3.863274857845314*^9, 3.863274901443305*^9}, 3.863274985905165*^9, {
   3.86327502591031*^9, 3.8632751590365314`*^9}, {3.8632751952308993`*^9, 
   3.863275233662552*^9}, {3.8632753992893295`*^9, 3.863275415841012*^9}, 
   3.8632757933676972`*^9, 3.863276112914017*^9, {3.8632763683199444`*^9, 
   3.8632763983313017`*^9}, {3.8632764721665745`*^9, 3.863276525061578*^9}, {
   3.863278235705888*^9, 3.8632782777863655`*^9}, {3.863278324944213*^9, 
   3.8632783286160316`*^9}, {3.863552728717914*^9, 3.8635527298355513`*^9}, {
   3.863613419658352*^9, 3.863613423534114*^9}, {3.8636150904008484`*^9, 
   3.86361513154671*^9}, {3.8636152078133564`*^9, 3.8636152525520706`*^9}, {
   3.8636152893383236`*^9, 3.863615479516596*^9}, 3.8636157247782784`*^9, {
   3.863615879717803*^9, 3.8636159617646036`*^9}, {3.8636160220243616`*^9, 
   3.8636160299278383`*^9}, {3.863616069486206*^9, 3.86361607601912*^9}, {
   3.863699007217822*^9, 3.8636991515617003`*^9}, {3.8636996033223495`*^9, 
   3.8636996129842625`*^9}, {3.8636997844214835`*^9, 3.863699805489752*^9}, {
   3.863699907217247*^9, 3.863699944316393*^9}, {3.863700788168758*^9, 
   3.8637008845809517`*^9}, {3.863702046275758*^9, 3.8637020830100203`*^9}, {
   3.863702595245346*^9, 3.863702645292355*^9}, {3.863884194660141*^9, 
   3.8638842031804175`*^9}, {3.8638909914788537`*^9, 3.863891009810995*^9}, {
   3.863891113237941*^9, 3.8638911537729845`*^9}, {3.863891279619763*^9, 
   3.8638912855948534`*^9}, {3.863891344230113*^9, 3.863891351574766*^9}, {
   3.8638925953132634`*^9, 3.8638925989880886`*^9}, 3.8641412354391413`*^9, {
   3.864141550931038*^9, 3.8641416655529428`*^9}, {3.8642361939817247`*^9, 
   3.864236202546955*^9}, {3.864236595072028*^9, 3.8642366322340117`*^9}, 
   3.864236674617306*^9, {3.8643997929515553`*^9, 3.864399794341104*^9}, 
   3.8647401548354416`*^9, {3.864740367280447*^9, 3.864740382577551*^9}, {
   3.8647404140084915`*^9, 3.8647404181541643`*^9}, {3.864740488606616*^9, 
   3.864740495693348*^9}, {3.8647405289317093`*^9, 3.864740542820265*^9}, {
   3.864741074561078*^9, 3.864741079667444*^9}, {3.864741140307036*^9, 
   3.864741143520008*^9}, 3.8648372672245474`*^9, {3.8648373045645533`*^9, 
   3.864837353847723*^9}, {3.8648373920424533`*^9, 3.8648375909655547`*^9}, 
   3.864837839079855*^9, {3.865356690975731*^9, 3.865356718635888*^9}, {
   3.8653568425522747`*^9, 3.86535688554853*^9}, 3.865356998743344*^9, {
   3.865357063056785*^9, 3.865357082860453*^9}, {3.865357192303467*^9, 
   3.865357202547192*^9}, {3.865357324369248*^9, 3.865357327732173*^9}, 
   3.8653573727697754`*^9, {3.8653584117496357`*^9, 3.865358421880398*^9}, {
   3.865359119417409*^9, 3.865359146498752*^9}, {3.865359181803466*^9, 
   3.865359209189711*^9}, {3.8654491379879255`*^9, 3.8654492290188136`*^9}, {
   3.8659657476182566`*^9, 3.86596576077604*^9}, {3.8659665703366394`*^9, 
   3.865966589562479*^9}, {3.866052164082869*^9, 3.8660522776132393`*^9}, {
   3.8660523127439046`*^9, 3.8660523189908895`*^9}, {3.866052389927002*^9, 
   3.8660524026289043`*^9}, {3.866052461586882*^9, 3.8660524626125507`*^9}, {
   3.8661445639235554`*^9, 3.866144564756291*^9}, 3.8662991531581025`*^9, {
   3.8663105616671824`*^9, 3.8663105911556373`*^9}, {3.86655653768917*^9, 
   3.8665566051126823`*^9}, {3.8665567002593584`*^9, 
   3.8665567116607237`*^9}, {3.866556768231696*^9, 3.8665568982312627`*^9}, {
   3.8665569505315948`*^9, 3.8665569795043597`*^9}, {3.8665570822686076`*^9, 
   3.866557177227344*^9}, {3.8665572159789963`*^9, 3.866557239450513*^9}, {
   3.866557410142112*^9, 3.8665574555316453`*^9}, {3.8665574951660137`*^9, 
   3.8665575011980915`*^9}},
 FontWeight->"Plain",
 Background->RGBColor[1, 1, 0.85],
 CellLabel->"In[1]:=",ExpressionUUID->"e8e0b3cb-1c67-4747-8c43-f1659f15f5da"],

Cell[BoxData[
 TemplateBox[{
  "Remove", "rmnsm", 
   "\"There are no symbols matching \\\"\\!\\(\\*RowBox[{\\\"\\\\\\\"Global`*\
\\\\\\\"\\\"}]\\)\\\".\"", 2, 2, 1, 17545198509607322795, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8665683001849184`*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"04f002dc-e06c-4787-9da0-c94a50004d35"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"n", "=", "10"}], ";", 
    RowBox[{"\[Tau]", "=", "5"}], ";", 
    RowBox[{"\[Tau]1", "=", 
     RowBox[{"\[Tau]", "*", "1.25"}]}], ";", 
    RowBox[{"A", "=", "0.2"}], ";", 
    RowBox[{"order", " ", "=", " ", "4"}], ";", 
    RowBox[{"maxIter", " ", "=", " ", "100"}], ";", 
    RowBox[{"maxError", " ", "=", " ", "0.01"}], ";", 
    RowBox[{"uMax", " ", "=", " ", "5"}], ";", 
    RowBox[{"maxCount", " ", "=", " ", "5"}], ";", 
    RowBox[{"errorBound", " ", "=", " ", "0.5"}], ";"}],
   FontWeight->"Plain"], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"maxJ", " ", "=", " ", 
    RowBox[{
     RowBox[{"uMax", "^", "2"}], "*", "\[Tau]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"InitGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"EInitial", " ", "=", " ", 
    RowBox[{"Energy", "[", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"ICs", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", "A", "}"}]}], "]"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\n", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"time", ",", 
       RowBox[{"{", 
        RowBox[{
        "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
         "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
         "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "Jff", ",", "K"}], 
        "}"}]}], "}"}], "=", 
     RowBox[{"Timing", "[", 
      RowBox[{"ffCartPendulum", "[", 
       RowBox[{
       "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", "order",
         ",", "maxIter", ",", "maxError", ",", "maxCount", ",", "maxJ", ",", 
        "InitGuess"}], "]"}], "]"}]}], ";"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x1c", ",", "xdot1c", ",", "\[Theta]1c", ",", "\[Theta]dot1c", ",", 
      "u1c", ",", "J", ",", "error", ",", "end"}], "}"}], "=", 
    RowBox[{"testWithFBEventStop", "[", 
     RowBox[{
     "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
      "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A", ",", "uMax", 
      ",", "K", ",", "errorBound"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"p1a", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1a", "[", "t", "]"}], ",", 
        RowBox[{"u1a", "[", "t", "]"}], ",", 
        RowBox[{"x1a", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1a", "[", "t", "]"}], ",", 
        RowBox[{"xdot1a", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1a\>\"", ",", "\"\<u1a\>\"", ",", "\"\<x1a\>\"", ",", 
         "\"\<\[Theta]dot1a\>\"", ",", "\"\<xdot1a\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Feedforward solution\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"p1c", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1c", "[", "t", "]"}], ",", 
        RowBox[{"u1c", "[", "t", "]"}], ",", 
        RowBox[{"x1c", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1c", "[", "t", "]"}], ",", 
        RowBox[{"xdot1c", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "end"}], "}"}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1c\>\"", ",", "\"\<u1c\>\"", ",", "\"\<x1c\>\"", ",", 
         "\"\<\[Theta]dot1c\>\"", ",", "\"\<xdot1c\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<LQR feedback solution\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"Grid", "[", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"p1a", ",", "p1c"}], "}"}], "}"}], "]"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox["error",
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Tau]New", " ", "=", "end"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Init", " ", "=", " ", 
    RowBox[{
     RowBox[{"\[Theta]1c", "[", "\[Tau]New", "]"}], " ", "-", " ", 
     RowBox[{"Round", "[", 
      RowBox[{
       RowBox[{"\[Theta]1c", "[", "\[Tau]New", "]"}], ",", 
       RowBox[{"2", "*", "\[Pi]"}]}], "]"}]}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"IC2", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x1c", "[", "\[Tau]New", "]"}], ",", 
      RowBox[{"xdot1c", "[", "\[Tau]New", "]"}], ",", "\[Theta]Init", ",", 
      RowBox[{"\[Theta]dot1c", "[", "\[Tau]New", "]"}]}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"initGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Lambda]1ff0", "[", "\[Tau]New", "]"}], ",", 
      RowBox[{"\[Lambda]2ff0", "[", "\[Tau]New", "]"}], ",", 
      RowBox[{"\[Lambda]3ff0", "[", "\[Tau]New", "]"}], ",", 
      RowBox[{"\[Lambda]4ff0", "[", "\[Tau]New", "]"}]}], "}"}]}], ";"}],
  FontWeight->
   "Plain"], "\[IndentingNewLine]", "end", "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8665515156717353`*^9, 3.8665515424442005`*^9}, {
   3.866557254928582*^9, 3.8665572751791253`*^9}, 3.866557306718074*^9, {
   3.8665575183286333`*^9, 3.866557525284416*^9}, {3.866557798820238*^9, 
   3.866557829059601*^9}, {3.8665588895316167`*^9, 3.866558891521984*^9}, {
   3.866558967901641*^9, 3.8665589997324944`*^9}, 3.866559252666882*^9, {
   3.86656369689147*^9, 3.8665637035903325`*^9}, {3.8665637371046534`*^9, 
   3.8665637470934677`*^9}, {3.866563795236126*^9, 3.866563795452057*^9}, 
   3.8665638883134604`*^9, {3.866563975524665*^9, 3.866563975739601*^9}, {
   3.866564138179826*^9, 3.8665641383137827`*^9}, {3.8665642684523077`*^9, 
   3.866564268817191*^9}, 3.866564355525557*^9, {3.8665644362438307`*^9, 
   3.8665644363088083`*^9}, {3.8665683613794155`*^9, 
   3.8665683614613895`*^9}, {3.8665684046286345`*^9, 3.866568404852561*^9}, {
   3.8665684631089954`*^9, 3.86656848153812*^9}},
 CellLabel->
  "In[192]:=",ExpressionUUID->"4d482704-5836-401e-a1c0-981b493daa65"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
DsrJdxLh9LYU1k7a+2fjJXY9ML0FcNoOlTOlu8Ch9TsLW6cRkBF6PVQg+wo1
qvMF1T2rB77RXT61+onI+XxmQqNlK4CKluyjRfmojkGv+pfPP5ArhAo6wzpQ
gNa/UgfDaRDCu4cfTvSgIphkfkBnFrDnUi1OOPehkzKc5FHbecDvbtIiRDsP
GymKaZEfksGlrDucEbTz8lCU1Pm220tA7cr8ybu0+SEX/1e88tkKEOPC5XdF
9iIuPlx9sy0V7BipvzIZ3olCbhz4ezVwDbxDXOMnPP6gO5+5WXJ1cPDOdvNL
axVVyHdPccxKyyZ4/9UatGNhg9B66JDQLT64fVhJ41s/G9xx1tH6cjcfjNah
rY9v8fBXGrse0CfCvW6XQtZW8LBRUJnygESEe9TLjubQ7pdHUGD1+0O0+e+N
mlEc3ym0Oeze9JanVUC4MC3Txvsz2jp/jWcmfhJ4/tpr69jfhfgzt/qs6c2A
8L5FS7faXlTrqWDUdG8O/FHu3A5o83viUMVWV5sFUNJGXOOhzX8Bnban35su
AmHcuoDQU9r+XpxkEfRwGViW6ctyOPWhhuXvjxzsKaD9TIR1xMEe9G34tFrC
61WQ1b1KFNBtQ2WVHVoFYbT5D3ydU1TCQ96PAaczBYlwyVqK/LYGD/sVnmeP
hBFhgk6s9ijt/P9VkfjiSEoEwJUUpTy6rAFavN9+9z1RBnit1fB6H/1QxeDc
8HrXLEj1P/k+tKEP2b69z5o9Nw8qyJnj1GASeub1q0rlH218/Vo4xEtrnzL2
6MgZWaKt96IOyn/6UKCle/urVT4o8EhQIywJD1vtSvGbnxNh0fGc9H3c7DDP
f0+zFyEHwLKwJ5cNrFCz9Kve2Ik54HyofFe4Ngn1KovuuzizABzzZbbiaeff
pAOChX0Di6CNUi/if4GEPFFk0oACEer1Xn/+YwAPp3DHjAuKiPDdnitGA7T9
yLQr57B9oh/AdXH7nzt9DrR2yb/QzpwHC5uasl3ekZDVgMNboWQyqF58yNpH
O59cCjBOk7AgwssiQSryLOxwZ5bw62OzRLjryn7Zm7T5L3JLl5bvzkxQ5CqU
VhlqiLRv3hIpSJgDT0YsJl8coe2PAhbCxtIWADslb2cAbf67v7OduymFCDdJ
M+bH0M5P3UcjPKTexAPcjZOM50wUAPeJIG+hw7Tr+/6J7XUMCXnI7Wa1kFwE
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
9ROZkjPP9mTQ0L7c8Re7HF5zMNC+XEFHkJFKXC+hb60W0DQbV2cA6Fv3DGj9
qk+io/4ixUIr/LABFfUXT+kc1Svv60P9RavprkciQd2ovwj0vGQXPjahfmJU
z5o7ViF0tO/21U1+tenFI2jf7auhK06xP8bQvlvyV6f+4sWTaN/tGVt7Jm3j
FA69a/V9qxcbBybR/tugq9FGT19O4LDHaCeaIpXtOoZ6jGvetGZE9g2jfqJX
Z2fWkFwX8quLOBvLrttRkF99lTlrrZA+gPzq6iMUdSmvIeRXN4vzprV9ZiK/
6l0jJqW4iYn8asdrHe6eAwzkVzuyfagv9/7lV71FOsUo1W3Ir46LbRlPj3j5
n/3q/YvZfG4ZVai3OPL2kh3W2wWgX9068mx3aDEFQL9KpuT5OwsOoP25e1gL
BlOJDLQ/V/H5uaKNTxkA+lW11gQvzogBAPflBlVcDTPYRUE9xygXn48blXuR
Z11xx3vT1+OjaJ8tuYlr5U/pCbTP1sN5BbWydRKHntXrkl75ls1T+EvdM3P3
ePiwRfUbVsU7TqJ9t2tUXHMpOeM43Hc7Z5dWHyk+ivqLym+Ejjek9yKvqtFr
HvUjh4a8avLrLbaZqoPIq86fTq3gtWIir3pEZ6bZ/Q0TeVVTrE1Wm2sIedUw
mt7PBf6/vGohR6najv4e5FX9552awpPq/tWrQp+6bksL0IvuB9Cn7n0aUcY+
QwfQpyYHnSb9Ps0A0KfuVDoruLycAZiZgdPFEQygp93A6mQNIJ/6uTNhg0nA
JA59anhQi7ak8hTeabZ7vqucF3t474th7otJHHpTpYt3pue9GMibHqEtjeBn
DyFveroLPDOrYyJv+q1xi41F1tDfvCn0paWGAg/lowcA9KUBS1Q5j+IMEKX8
ln3Fmw4WTKUkadcYyJe+4PD69ENkCg/MsL23oMGLXTeVZ3mJT+HQi/q6GN8x
pg4iL/rG/IutRAbxeoyP+2u9J2MvoxQSzQOYQKOVNhpzUByr/sKtM7Vj8B89
aajza2CxjQGgJ9V3TLui9oWB/OjBy717NbZN4aNnUhf8HvNiJuJKlRq1kzj0
oJMr3J6+LxkCv8u6+AoukrFPlv2tqsTzDPv9gWr7YTLWkGGUcW14CHlROVNF
pv7LuwD60Bd6B5XfPyfuT6t2PTvwmwau30xipd4ljv+fXvQIl27wiulJXG55
A6flWl5swthGKkR2Cof+8/JrIy+vW0ygyedcG5VDxowrjA7vS2UiD+pTuH1F
lS8D6E5sFW7ioAEZ7kUuFkUMcFbwee2KHh5sx4nxfZbbp3DZM48d10aQseuP
IznWVjIB9JziX/oiKcTzLfSch1/y9DSsmML7FCeVU+15MaOi0VjRhUl8r5/x
vkID4vNipSf6spgJnDJ3b5+vIWMTtwvJH08z/9FzYltWlIaVBwHoOV9uLOhg
CjahvmOReR/ZQ7IP9R0zRIp/sENpaL/tNpXL0g7jA2i/bf8IX/4u4n4FPWfn
h+A3M3rE8/ifntPRXDry4lM66kNeTH13l8+CivqQ3epN5tZzfagP2ThjedKs
vBv1ISkPyr0kxZpR35ExvVowUoeO9tPaBVukOrcNo/202o+cjvNWj6H9tGPR
J5b1802i/bR+7xY9OEXMg9B3lnn5CokNT6J9taHThjFN+AQOe5FTi7x31N4c
Q71I3doDWVVSI6jv+NhtaxvjfSfyml8PdlWY76cgr3no+fiemqAB5DVvP1X9
VX12CHnNY9el62SJ9x96zSt3xO0e7WYirxnNwWP21IqBvGZ1psINeScK8ppS
L56ML7FoR17zPNVxo9e5vP/sNYPjwtf12FaiHmTitYTFRue6APSadz3bX6gn
UAD0mquNuWJuT9HRvtuSfMvAW7EMtO/WZmnYWivi8wW9Zu71G4vU7g0AuN/2
5ZvnA2d1KKg3+Xbx1eLVR3uR33wkKmTXoTKK9s+ma+oIrOGfQPtn466cMP9F
XA+g31wj89pgHfG8NhWOq35i82KpR7+R1rhNov20NRJftw/i4zjcTxu9StDU
T2EU9SGZybd2t7j3Ip/Jc3X53eQwGvKZXGSJj3Vyg8hnviNbTW47wUQ+M6CG
fGzxOybymfUaCQp6MkPIZ5oeZpwb3kpHPtNXeHD9uhV/+cy9M4w8p6v1/+oz
ocdsijBk253rB9BjXlJaphZ0hA6gx3S6BWxVjzIA9JjHDp1+IFnJAByaBStC
zzNA3jHVcyT2APKYXR6Cj38Txwt6TLn7iRJfifle9kG0Gl8JL/Y8z1nwfOEk
Dn2l4/4vD42tGchXqgWKBp79OYR8pVb2x18Hiesx9JVOwqrrw4qH/uYroafc
eUj59uOAAQA95am4C0LzxQyg7JzgMGhKB07tn7J332IgT3ndO6yvj38K33xw
we3uPl5sw5OBuswlUzj0kZnSWUfPfRtEPtLN67KvQgoT5Km3fzd5S8ZS1VKX
1YYwwW2lwneGQBxjazyQGj4y+I9+skH9FaV7HQNAP3lcLC9AiLjeQS+5WqL1
cvvWKXzXk1mQmcKL6UVeFJBqmsShf3zi8dHnYO4QaH1ud7rKkYx9/fTKxZC4
n2sukYiXGyRjh9U46g/PDyEfWXeiRdmkKA1AD8m92ESnL5sBKk0WS+d10YBu
rJUc4z4DQB/JNAPtQ6xJvObthY6ppbyY1qbhkPtyUzj0jtfuTz1L8CXej7FJ
2UdZZCyr++qOj4+ZyD8meLzaUuDOAMOKi65o9VIBt+raM17vGYCUqfskv4UH
U5CUC1Qhzge24ZaSnaFk7NXo10P9xHwN/aKLzcZpEeL8gn7R1untOsGlU3ho
TZSYigUx7zTKHjzKM4VXSvmZXdclXk/PLL26gPj9Y0tukj6TMWv35pNrzzD/
5hctPStz8AwKUH0/rvSOON4P6yw2pAfyYNduSQ0pEPNpZNAlzp82ZOzxs8GR
lcTzJPSLHlbBmQsPGAD6xbOsRYsO9U3iKyfTI+SFeLELrs38I8TzSutn7s+V
aWRs9FBOvPkrJlBJ/2qw+SEVfIwTKm0rJe5ffQGm1ApiPgqqVZAg5re8Dapn
Tl8n7veZ2W8WvjKRV6xxbJw8SPx96BVFOZ+8jiRP4b26X+8vUSdjZzdMxXs/
ZYIvEbrzk2upwMf0q6N8NQNwmbA+amTwYI379mw5Q8wDa1qNXz+6RMYGQdam
18TnB/rELQoifneeByGf2HbfZEQ5jwFKnCQmbw7wYGaS5lvViHlJ03OVFDmG
jC03NQwcKmMCv286pVrrKMAhylbNkvh5MVTXjA5rHkxjk+USQ2KeyaUoLh8+
RsYsmaYhiz8w/9Eb+l/dvnlv4xUAvWE8te5ZN96I+pKdoLyv5Xcv6kvaqI1U
Pfelof21hz1O3LrDHED7az/+apCnEPMe9IafPnF9szZkAOgNLyzdoZH1mo76
lJFcKavqz1BRn/JZbXF+PH8/6lN28jc/O0HpRn1KzDxYYGJHM+pLjrW0fo/f
SEf7Z101Mrv5i4fR/tlwzv4vG/AxtH/W3PiOpsnCBNo/K/+lbHRy3RQO/aHE
0coqBvF5g/6wgRH6rqFiAoe9ytTcRca1kWOoVzmR6CllsH0E9SWv/17Ytiu0
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
FJXkB5LRn/+PnuX/7/vDP/9/C619Ug==
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{1025, 2939, 2937, 433, 434, 435, 436, 907, 774, 
                662, 575, 514, 479, 935, 802, 690, 603, 541, 961, 828, 716, 
                629, 437, 908, 775, 663, 990, 857, 576, 968, 835, 1017, 723, 
                1001, 868}}], 
               PolygonBox[CompressedData["
1:eJwV00dwTWEYBuCrzGgRIdGWFkT0zgoLIbpgxgyDJMqMhd577yskaqJE7yyU
SKwkQvSamGF0o4sWbRjPv3jyvd97zj25955zG6RNHDihfCQSKUcbf2ZVi0Rm
Mk/ZkNe6AtZViESiyNQlUol0/RTdB3k+jXiju8h6fXWydN2pTIZ+qu6jvIB4
3uoO6Rpyyj6CQt0GezTb7T24LHfjrlyFHLkd38m3vzBH8o/x9vtmMk/lja43
Tf4kL6Qx73SXSNfXYIcuiaps0k/XlcqLSOC97rCuEaftI8N70mXYY9hp70k1
Nutn6D7Li2nCB10RG/U12aXrRRRb9DN1X+QlNOWj7ogunjP2FK7oNtlrkW3v
TZGcyD25Oufk9pRRYH9pphBucrE5kGfy1nCv5a/yUprxSXeVbcx27JtuGc0p
1V1jsz6W3bo+RJOpnxPuhbycFnzWHdU15qw9leu6LfY49tj7UoNcewcuyhPJ
ct7c8BnkFbTkgr0z1+Uvjh+TE8ixp3FL7sND+YbjW+Xa7LX3C9+d3J37cgx5
ckcK5VdmKpPkEnMQf3ge7oM5jooVPYuuO0/+ET6fudJ8aA7hL63s+WYXfnIj
/H7MUUS8/qvXH5ebhO+Wc44/M4eHc+TbZl8ehefTHMvNcD/MOuzTPzaH0l++
avagWK7JebkTl+TJPJAH80Le4Trzw/uSV9GaAnvX8D/kb46fkJuSax8dvlNd
pr0u++0DqMVO/QLdL3k1bfiuu02Wvh4HdMnEsku/UPdbXkNbynQndc3Is4/h
jm67vT4H7U/MYeGZla+ZSZTIcWQ7d1G4T/Ja2vFDd5fd/AfPAaxP
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{398, 2938, 2935, 748, 881, 403, 518, 580, 667, 
                779, 912, 452, 487, 548, 635, 747, 880, 402, 517, 579, 666, 
                778, 911, 451, 486, 547, 634, 746, 879, 401, 450, 485, 546, 
                633, 745, 878, 400, 449, 484, 545, 632, 744, 877, 399, 448, 
                483, 544, 631, 743, 876}}], 
               PolygonBox[CompressedData["
1:eJwV0klLVWEABuBzvbpq3aQ2+AOyASxNC2pXQkVlqUQLobQChWxhy+aBysZ1
ZZM5a9MqrRaGCmVlljmGhBBJUIvKnJ5v8fC973vuudd7PWlFZdtLE6IoitFF
xZwoOkqToZEGhoh50XpukBSPovPU2wfDjbZ1XCfRfo46e6peSDNptvsM2GfI
sV0jbjtLrS1FL6CJpbZ79NsP6a9YpT9j2patXyVBP0ON7YjeRbb+gmS5n1y5
m3y5kSXyXb64Z0TfJn/koPySlfJTplx/r2+UX7NWzncOckX+5Yxxmodem5To
PeSffHN90pkXPodyfcZZxBid+p/wnrSxMHwX9++Tv4d79AnnZt6yW9/j/EqD
/Nu5mDv0+ewS5zjDrm119nBA3uscDb+HvML5hEmvf6dvkNvJki+Hh0A+RbXr
h/UOsvRWFsh9bJLfsEuuZ5FcxefwN+htLNcf89+WqVeG785J2wPbfDmPOlJt
t/lkL9ZbSdcfMWFbo19imhPhGbLNk3dSS4rtFr32uN+vWP7BkGtbnB/YLz9n
mdzCP69drV9kiuPhWbPNlXdQQ7LtZngu7H/JsF0I/1OOhefHNgvLiXMU
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1GWYVVUUgOGhu7sZGhVRGsRCaUQJpQVBUjoUkHDo9hElbARpUFEB6Va6
FMUilFTCogzgXY8/3vnW3hPn3n3O3MSOfZr2TpaQkPCiL9GSvhzRQTpLO2kO
kuhm3UxTJPv/53dY99JCjKeedW29ooN1tXbXfIxhgnVbzcgI9lv300Qqmqvp
OV1CF3PuuI65paZlt7k1j5n/0028QgfrrBw2J6eU+WudHdenPnXsXdXPmEgl
qts7r0sZRhtSUNr+N/o6PWhAZVJSxveO6hs8R0OqkIrUpCEtZf3ct/omPWlE
VWrY/0WXMTzOg3TcYf87fSvONN5jnAf32f9VlzOCdqTnTvvf69v0pjF17V3T
NUyK90dNexf0A0bSyjode8xPx++Zb+pmppOBu+z9oO/Qh+bWKfnc/Dj1zNd1
bZyPOT+T47VpJg6Y+2sxapjv14v6gn6oXTUPo3kp7qmmZzh745pahIm0j2vq
LR2iW+LctQBjedX6Gc3GSL60HqDF4zkzl9Mf9V2eNeekr/lJTcUX5ifiGTHf
0HVMibOxzszBuAc8YL6kH5EUz1z8XvzDsFVeIxN3Wx/TOfFs0ySeH3t/63qm
xj3hQXuXdQWj4j2QmfL2j+t7cYY0jfPjIfu/6ceMpiNZuMf+CZ0b75tm8Vp5
2P7v+glj6ERW7rV/UucxMO5tvBayUcH3ftL3GRRnFNclOznISS5yk4e85CM/
BShIIQpThKIkUozilKCia/ys83mep+K1UpJKvndKF8SzQgtqBft/6KeMjftI
KSrbP60LGUxLGtr7RzcwjUeCvT91JePoHPclPu/YZp5BaapYn9FF8azFa7NO
zU5zKxqZ/9WNvEx76ywcMj8azH/pKrqZ88bnormNZmCfua8WpUvcW03OULZb
99SCjGNm3GPNHv8jfBX3S0swiTLWVfVsnKMujveluRgVfzPOT9MwjF3W8UFf
mAncBt0mpCI=
               "]], 
              
              LineBox[{144, 69, 103, 41, 70, 42, 43, 44, 45, 46, 47, 48, 49, 
               71, 50}]}, Annotation[#, "Charting`Private`Tag$52502#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1GUUFWUUBdBHK92NAkqXIKkIKtIhqYBKCYIoISFKd4l0d3crKN0N0t0g
EtLduL/lj73uuWdev5nJ0KBF1eZRIpFIxaiRyEDh+2iRyGW5Hem5qFvPIJo5
dkX3Exn4W7eBwTR37KruZzJySbeRIbRw7JquPW/xj25TeE19bMbqShCDofqW
un/lDrzNZd3m8D76OIzTfUJMhul/0F0PnzlOJNLRzMQV/Zbw/o7FZbyuJLEY
rm+luyF3IjNXdVsZqo/HBF0pXmOEvrXuptyZLFzTzdVlYpm9Dtt0w+zxmWgv
zQ75Ew7Jr7NCzs8DNoff0KzLS5rZj5hVOC+P9Hpt5FtyF7Lyr247w/UJmKQr
Q2xG6dvqbstdycZ13TxdZpbb64bPpBthT8hke1niMFr/o+6O3I3s3NDtZKQ+
EVN05YjLGH073V25Ozm4qZuvy8If9nrs0o2yJ2aqvTw75ZIcluOxUi7AQ7aE
88esR3P5qFmVC/JYr/WTfE/uQU5u6XYzjp8du6/rSS5u6/YwWp+EaboKxGe8
vn34L+Re5OaOboEuK3/a6/OXbow9KdOj/n+tJGCVvSBb5RZM8LgO4TvIvcnD
Jnsx/pLvOr5QzsYKewP2yxU4Je91fKycjBn2SuG3k0txRE7IarkQ28J1ZNan
pXzMrMYzLob/wfyW6NGdi163o/wofD+zj3nK/JwXvGPfbBbnMXvD9WN+TcTz
73n+Ijl7+G1Z6fgF86vwGPmAWZHT4fw0v2Ff+D/M5MzUnzVr86m82yzNUTkR
a+TCbJd/4Lhcnb/lSV6nU/hccl/yssX+YXgP+b7ji+UcrLI3DL+pbrw9BbPs
lUnMZH1n3RO5H/l4oDvABH1KZuuqkIQp+i66p3J/3uWhbokuJ6vtjTiom2hP
xRz7OfOLcM7Ke8wyHJOTMtVju4b/Sf6F/DzSHWJaOLfdw6ab3TzmuWMDKMBj
3WEm6VMzV1eNZMzQdw//pfwrBXmiW6rLxRr7N+FzypU4E+4LZmOi+X+PeOxk
OQ3zHKtOcmbqe4R7kzyQQjzV/abLzVp743B96qbY0zLfXoMUzNL31L2SB1GY
Z7rfdXlYZ28Szl3dVHs6Ftg/C9ecXJbjckrWykXYIbdituf0Cucng+1F2Cp/
xH75uePLwrnNevtFs064JuRD4TzkrHzDbBLeJ/z+5hvh3sJCx86bX4brJFyb
ZrlwLnDCfs1sRFS/Xyr7Ovm9cI2x037ZbBC+O63tJ8wa4T/lUrhnmU2J4flz
vHdvOQp3GeL4abNmeE15m/kxB+QXHrtczssGe1MOy5U5F97H8enymyyy12Sf
XJ6TcmrWy++zS27DXM/pE74LQ+3v81L3hz0fG+3fcVI3w56exfZapGGevm84
lxhmL8or3Slm6jKwRFebtMzX99NFZ7j9AyLhO4d7L/3D78IIXTGicCbcO8N9
KFzv4T7vOlkSzvFwPoZzil88JyYjPb44UcN9Rz9Ll5Gl9i9IxwZ7UXbLbVnm
cQPssRgV3s+sFe4z8nazRLhvcNB+1WwY/i//3X++tUek
               "]], 
              
              LineBox[{952, 819, 707, 620, 480, 936, 803, 691, 604, 542, 438, 
               909, 776, 664, 577, 515, 481, 439, 440, 441, 442, 443, 444, 
               445, 446, 910, 777, 665, 578, 516, 482, 937, 804, 692, 605, 
               543, 962, 829, 717, 630, 987, 854, 742, 1008, 875, 1030, 
               447}]}, Annotation[#, "Charting`Private`Tag$52502#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1GW0FVUABeAhlXjw6K5HdyuKtNIooKDSIKEgrUtKEJQw6JCWRmmLVjoF
paRb6VZSyu/8+Nbe+wzctd69M5OrTdeGXeJFUZQ6fhQlTRhFPySKoucpkjiK
Dtqp5UT7JfmV/VAfSFk7p8wp58kqsonr5/SOlLSTyMxyhlzn2rP6CL0o+fRF
4XOd75GNuK2ndz5VX6DH14fp+fnIvhWS9Oyyk/GjXo5D+nCact7uRFLW2xXY
qzfmjr6QXiTnJ2cvcFgfQTMqEsPPzl/kiD6S5lQiBSmJJVX4jlju35XnqD6K
FlQmDSvC38kxfTQtqcI+Z29yV19Eb9Ky0lkFjutjaEVV9jt7i3v6YvqQjlXO
KnJCH0trLtjvk4wNdjUO6G9zX19CX/6xe5GB3eH7Z7VeiZP6OB7pg8hFG/ui
7ExysviNZsqNzpPoI/Vi4TfTF8uXnf8pm1DC2QM7g5xmL9UT6J+He04WkLnl
d+H/yX6u/6v3ppSdUWaTs8PfK38Pv4UcF35DWVoWkEtkdZnB9TV65XDP2afC
7yEn2eP1x/JT4njHviS7EMMmO6l/O0ovziv2QdmU//RlJHT9C7sgH9u3ZR8y
8YedkbXh2eC0PoG2XLa7koLNdnUO6c14qH9PfzLxi7OqnNG/ph01OOysOY/C
M8sAMvOrs2qc1SfSnppkYV34XvlLn0QHapGVbGQnBznJxfrwd/O3Ppl3qU0c
G8J3zDl9Cu9RhyPOWvA4PJt8Qm42OqvBeX0qHanLUWcteRKeRQaSh03OanJB
n0YnrtjdSMkWux7H9FY8Dc8rg7hj9w3vHvbYedms1+KiPp0n+mfhfgvPiX1V
dieWrXYyv+3ocM/yqn1ctiYio2vT5XLnifQv9ULk0ReEe8r5XdmP0s6yyOxy
Tniu5N7w/pDjw/tFlgn3kFwaviOZz/Uteu3wLNmXwntBTg7vBfmN/VQfzHN2
nvBsyvnhXpGdXb+m9yAVWZ3NktucJ9fH6CV5zT4RnmniscJOHN7zeuHw/dj3
wr0dPoN9dn626nW4rM+gC9ftnqRmu12fk+G5Ij4r7cEUYJtdlyv6TLrSgFPO
2pKAVfYQCrLdrsdVfRbdaEghClOEouwIvxXX9Nl053WKsTP8vVzX59CDNzjt
rB0JWW0PpTi/2fW5oc+lJzfsD0jDDrsRZ/T2JGKNPYz7en+ysd8uwS69ATf1
eUS+5yF23vCZ9k35IWnZace4PlYvRWP7rOxA4vB+CfeAXOv8GX24Xk4WCZ8n
F4bnNrxXXX+gD6CMnV3mkHNlZXnA9Vg5wS4vy4b7WC4Lz54s6fpuvSHF7Vt2
OjnFnq/H04fq+YjTv5XV5P9qOABv
               "]], 
              
              LineBox[{1398, 1301, 1227, 1111, 1507, 1384, 1287, 1213, 1162, 
               1074, 1486, 1363, 1266, 1192, 1141, 1112, 1075, 1076, 1077, 
               1078, 1079, 1080, 1081, 1082, 1487, 1364, 1267, 1193, 1142, 
               1113, 1508, 1385, 1288, 1214, 1163, 1530, 1408, 1311, 1237, 
               1553, 1431, 1334, 1579, 1457, 1609, 1083}]}, 
             Annotation[#, "Charting`Private`Tag$52502#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1Xf8TXUcx/FLdgqlzIo2SVEiDXuUlZ8VKTt7JKtJVtkrWRlF2bPI3ntk
FcooI2TTsELPzx+vx3t8z7n33PMdN3fDtkltkiUSiX7JE4lKqRKJqmkSiYWp
E4kX8bv8Nbqig36/rh5uw1pdZSTpF8kv4bA8EYN1l+UP8AC66TrqDvD1kQLr
dFVQTb9YfhlH5EkYorsif4hc+ETXSXeQb4CUWK+boEuD/vLTeE1XXV7CF8NR
+RsM1V2VP0JudNd11h3iGyIVFsj342t+g/Gv+LQYIBeI5+WfxFy+qvEa/FK+
OLbyz+KYfgbNjAsYaWw/LYVvjQ2j13Rn6cd0N30B/+FBeTl9FP9gWjw/rYBk
aROJHu7vwv+mP0Ub0e20cPw2pJZ/oA/gIibKv9Fy2BjzSNNhoH4vLYaC8R5p
fszjk1xXk1/Gl8Af8kz5HoySJ8uf89f5rngIPXXv6X7nGyMNNsW8opZ+uVwS
x+Up6IX39Yd1TZAWm2Pe8Lp+hVwKJ+Sp6B3vGrWNrdSXxkl5Gj6N50UdY6v0
ZfCnPB2fxffjDWOr9WXjvcX8oE98V3xm3BvXoC7eDHX9GteWw+n4/eiLD/RH
dG8jHbbo3op79Gvl8jgjz0I/fKg/qmuK22ON6OrFPfp18iuxDuTZGB5rIPYJ
HkZ/3UexnvhmSI9tsbd0t2OQ/EzspfhMeT3/Ks7F98v3YrQ8R/6CvxF7CI9g
hfwYpvMDjH/M/xG/lTanO2iRWKe4Q15Ic+ESJsWZQMvjx9irND0G6/fR4rEP
Yv/Qp/Bd7FfX1ec38BVwPn6znAVj5LnyCP5m7Es8ioFx5uiO8y1wZ6x1XUM0
iPUsV8QFeR4GoVGMG9ukr4SL8ndxFqExmuDtuM41m41XxiX5+zhv0E1/QtcS
GeI96JrGvfotchX8Jc+P8wSf6E/qWiEjduqaxffot8ZZhL/lOXJWfBlnjDyS
v8X3wE/8izEf/Er6OP7FDPkYrYjk9v4w93Xn/9S3RiYsknPjG35XnHMxXxgi
F0Lz+L3ytjiv8I88V86GsXFWyKP4BHrKP9OX4hn4VTQPZsYZQCvhc9f3oKd0
beL38s/jLn5xnF/4K845+TB9JT7bs+9237f8nTiPocZ/oSVizvGcvJE+jSv4
PvY+rYIU7m8R8xDrLfY2TYq9QAvFu4r5p9kxTn+AlsZC/eg4N9FLnwer+byY
xQ833pM/zbfF3TEXusm6DBgmF461EHMqb+er4bK8KPZUnGP6M7p2yBzvT9cK
zfU75Oq4Ii/GmJhH9NblxYg41+Sz/Du4B0vkhzCZ3xNnJZ8x3rtcJM5UvgDm
xxow3oLfydfAj/EecTXWPM2B8fqDtAyW6L+kt+EcPo3voC/H2YAn5DWhuIzZ
cV7TynGPORgZZ23cG2ccbR9rjhbF9Thv5KX0YfyNKfIR+ir2xjlOM2G4/lda
MtYOv5kWxIJYU65rye/ia+Ja7E05JybE58tjY03gMzkf1vL5MIcfFWd+rDH+
XWTBMvkRTI3zKf4zYr3iC7lozH3Mmbybr4Xr8jKM06VEH92TGB3/GfIFvgOy
xhrWtUNr/U/y6/hPXo7xulToq8uPMfEfIl/kOyJbvAfdO2ij/1mujRvyipir
+A/RX9J1Qnbs17VHW/0euQ5uyivjvaB/7D9dZ+SIvaB7N54x5kB+A7fkVfH7
MCDmStcFOWOt6DrEM+n3yXWRwHz5PnzFH6JlcQv/A/Z4cOs=
               "]], 
              
              LineBox[{2055, 1931, 1839, 1695, 2190, 2037, 1913, 1821, 1758, 
               1653, 2162, 2009, 1885, 1793, 1730, 1696, 1654, 1655, 1656, 
               1657, 1658, 1659, 1660, 1661, 2163, 2010, 1886, 1794, 1731, 
               1697, 2191, 2038, 1914, 1822, 1759, 2219, 2067, 1943, 1851, 
               2251, 2099, 1975, 2280, 2128, 2309, 1662}]}, 
             Annotation[#, "Charting`Private`Tag$52502#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1Xf8T2UYxvGvPX5mNiEUGSmZJVEZ2SujgZLsEA2KrJBZoqzKLluFSkYo
IzLKyE4SMiqz7N73H5/XdX3u5/F7fc85zzkKte3epFuyRCJRJXkikS5dIrE3
fSLRDKf0CXgGlXHF7FUk4WveF+mxjzfHaX0iWuEhXDV7DRmwnPdDEvbzFjij
T0JrZE9KJMaaFcVOXgXX9N7IiG/4m8iAA7wlzuqT0QY5/Pv3zIphF38Y1/U+
yIQVvD/usO9jXhZHeEYc1J/EX/oUlLBnDq+CZ3lOPk6/G7t5Jf6lXhdV+Q35
OjKjhrXv5Erz+/XPYoam+k9ygHkhfar+nCwn68nN8re4b/o3egfZMO6r3CV7
ykzWD+lPBfxv/qhcwzvKD3lJOZe3lQ/LhnKrfFE+Zz2XHM9by+Kyttwo91h7
QP8qfg+q8ZvyDWTBKl7W+ud6TQzkhfk0vTyO8sw4rD+Nf/SP0Ba57XvfrAR+
4Y/glt4XWbGaD0IW/MqfwTn9Yzwf14isOGLeCuf1qWiHx5Dw9/uZ34Zv+WDc
ht/iOnFBn4YXUB3J7H/TPBvW8LeQDUd5G1zUp6M9asTZxO9xFnBJn4EOqBnn
Ls5H3Ne4TuTBsXi2uKzPREfUQl78Ec8G/+qz0AmPI7nf1N88O9byIciH4/x5
/KfPRmfURgr7B5jnwDo+FLfjBG+HK/on6BK/yd4PzEpiL6+DlGYDec54nvr3
snOcXWvl5Be8FobxIny6XgH19S3y93hH9RV6o3if9d0yv/lJ+UKcA7Or8Yzk
Wv6pXkqfF9ckq8a/ldtkN9k17pGcEM9BlpJ15CbZRe6z/qD8Ov6+rC+fkD/L
l2Rd66nkoDgnMldcg1wvv7dWXl+iP463+Z18hl4Rx+KbwVfqjVGA/ynb45o+
B/dYnx/vRrxP8Xz4RP0e7Of1kNpsMM+N9Xw4CuJUvNO4rs9FN9RHGvvfMs+D
DXxEfKNwOt5p3NDnoTsaIK39Q8zzYiMfGd8TnOGdcFOfjx5oGO9oPL+4VtyF
oiiGs/G8cUtfgJfQCOn8/aHm+bCJj8Ld+CueARJYyHuiMdLbP8zsdvzAR6M4
/uZdkQyLeK84n/ZO4qVxgDdBktnbcW6wmY+J32k2k1fCH7wE/ol7juRYzEvb
s0B/BC/z/Hyyfi8O8qbIYDY8niW28Ap8aXzz8E7cCz5LfwAN9B/lcfOq+iq9
CVrqe+LdMT8X5zS+T2YpZHW5Lu57fOet3ysXxvsnH41zJLfL7vIV6wXklPiO
yPtkXflD3Cd5yHpluTzOnGwgm8mdccatZdRH6AXj/Oob5I/mFfVl8Z7g3Xi2
fLb+IE7wany13hSl+Pn4PUiJz/l91hfpj+HVOKvx/4heBod5M2QyG8nvwFY+
Ns6E2Se8Mk7Gu4ELeg+kwhf8NTRHZntHmRXCNv5ePD9cjPcWqbGE90YLZLF/
tFlhbOfj4t7iEu+JNFjK+6Alsto/xqwIdvDxcV24zHshLZbxMvYtjucWz1bf
Eb9X/g/GfB11
               "]], 
              
              LineBox[{2717, 2610, 2527, 2393, 2834, 2703, 2596, 2513, 2453, 
               2353, 2807, 2676, 2569, 2486, 2426, 2394, 2354, 2355, 2356, 
               2357, 2358, 2359, 2360, 2361, 2808, 2677, 2570, 2487, 2427, 
               2395, 2835, 2704, 2597, 2514, 2454, 2857, 2727, 2620, 2537, 
               2881, 2751, 2644, 2905, 2775, 2931, 2362}]}, 
             Annotation[#, "Charting`Private`Tag$52502#5"]& ], {
             Directive[{
               Opacity[0.2], 
               Hue[0.67, 0.6, 0.6]}], 
             LineBox[{396, 397, 395}], 
             LineBox[{1032, 1033, 1031}], 
             LineBox[{1611, 1612, 1610}], 
             LineBox[{2311, 2312, 2310}], 
             LineBox[{2933, 2934, 2932}]}}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"Feedforward solution\"", TraditionalForm], 
         PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1a\"", "\"u1a\"", "\"x1a\"", "\"\[Theta]dot1a\"", 
           "\"xdot1a\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
lqBM+iVnCqL/HtkodhHr8dXtk14X3KjoTE7IGTcFCnoXZBXQZ8kAilLDA8fh
Buz52GBKmTIDkzxXnU/3D+FI/7v+IysX4WmIsd4Xop+O6DH/TH1ngQ3z0yaz
D0xMTZzwOGkliP4ljLusOsGC+tO3fI/KUpHu5j+eiUT/u6zp5rqxlop+7xrn
luxnQfP2ha1aAyNQYZTs1BXfgKkrliePZRP6cviD+IvXTGzlzcHRaMUCBuNZ
NxB64VS36p23lylo02Fm0pQgE09p6fn59Qmi7KRz797IUND9mgu39r+nIo17
Uo6xVAo67q4xvTWVqHd7JWkT6o1YjUE/ORiwCD9e7HpXTugdQze3P/yiFLQ7
tIPR4MzEri4Gr11bOVEWZTHXIYnYr4bl3l1nSkXjfBcV9v3Pfvx/+SSf5onS
4kIGrm3as+hStwg3XrVKbSX61e+a5unETYROCxLPiCHuj9sSexNjTi6kLSQp
Fr68HduffeGdcpGKeu/fUVqvSEGb/ymul9zOgOPH73vrdjXgCLkl0jM903Cp
33yXf+AQ/qYZf1BLYBFsv1j1nipm4uin8b52QlQ0EJ+6aZUycZzCUN/7WSMw
f+/cbMX+Bnz58a7yMH0WnAlYWWbVTqwPOwe/kBZBxMr593CQ0MOG4SLq664u
wtbmloCQPia28I7QOctJQcplGxyE3ZjY6/fQXb3thH5+2H59mvi9b9ML7bkE
WNC6YfvGpgFifdFschO3L8JH614Rj2ZC72qa++5TpSIj44SfH4jP2xxLdbso
xADEeV/6dE0D1lzg83OfFERb/V+aphHrS8As/+mn2EXIxGuTPRhMrHf58LnP
xN8/f5EuTbjAxGMngu8qW1HRft6tsvLEeiH5KiEhWZ24DaOY5KuK9XvcWms5
0O8UpGm6rR40DnivPNjQDSrprWKqT1qB69++93d5G6E0a+Sh2E4aPEw8vvVX
cRHwOO/nsHXrhva/7WceMV3hLJenrOQrOjx8XGxo7pjP5q/m98Qr/474y+av
0nkeLn3hUMfmrxxe33Sq3N/I5q9efUqW6mtqZvNXlTpr7I6t62DzVwON7879
Wehi81fDIim3QvT62fzV0OVz8WLuDDZ/dSxljd126Qk2f+UYykkx0plm81cX
HaTy76sy2fyV8Lp0kTvE+msPDagdJeqMqOqbh2vsmZhnp/i1BhoFFU2e/17G
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
9PzZ+aeDiyT54esfl08uQPWq6JmSEs0qUbgqg+6hgMZvwiJ12RMtfmjy3M+8
DL2PTq7oua4xUaivOkv+PnqeJ0rH4gwCaLCDYXjpCppfn+4bC38SaQf1bS/z
36Ln+S6vtN7KkR+mlb+5rIe+p8Dg/gO1sTTotc6sOAL998ezw2L8v4rCbRY3
5ggV/I+XYj+fMeGHtv92HHiI3n+TWUdYvJgYFPZrKc1Az1N5u2pMPJIGDzz5
l2WA3v/SG7lV0XbtIPHL0fbnqP7mv+rd1/CqDYxpUbe/oT/nzRX8y21B9VuZ
5XQ8el7Mp3a5WpQZpjb+P5+6+Pn/+FRtzKd6Sjm9sE4tIz6hHj2DgSMHG4lP
qL9n1d6q4fb/9wkZWN/v6OgiPqHuG211k7XdxCfk7BC5mPuaSXxCq19N3F35
hUl8QqyUICXGMibxCfEkVQ7bzu8mPqG8wSnR1+5dxCd08aKyUEBOB/EJfbzd
5PWxr434hEaVRoPNbjcTn5B01fVXXvV1xCcUI/rabfP7KsKnnuyoCzuY/o3w
qYFqP0pKrycRPnX1g4k3AtZ5JJ/zhMmmsXkV1SSfs6k6fJn0izaSzymjExln
e4ZJ8jnVnz0wcznTR/I5m6dvMVf4c0k+54bMs7lpXsMkn3PRvUtjLS9HSD5n
nUzyWP6GUZLPWVgws1RtZITkc548nZY8T3qE+ISE8owYl0WGiU/oRMTU2E++
IeITqh7d7bvlwyDxCa0YXPFQF/QTn9DzYPV7sus5xCcUWKIll1jRRXxCqse/
6fbuaiE+oQ/0mrs1C38Rn1C3uWeyZHIG8QlVVo6XfntKET51bmWswZeSGsKn
nnJSstCa00b4VOGsi7SwYAbhUzc06NsqbOEQPvVXkcWTnT/6CJ/a+1XyyWOT
QcKnChUM39mgxCV86nV6S4CQE5fwqZxZdPdiSS7hU2feGwUbyg4SPvWR1f7F
N4J7CZ/KmL/Zcs0hiviEfr5Y4D8QUEt8Qssz7mjPjLYSn1Cq80CYdEQnwHxq
d5lqoTpfN8nz/B6Y5HHfnEnyPFdYUXNFKpkkzzOlZfDlKx8mwHzq5iK5+7pP
uwHmUxnPTa86H2AQX1HXW7V+632NxFfkbgAfLB6oJb6i+ztfaeY7lRNfUVYp
Y5H86lzCs/4d6TZ1Xz9I8jTrFmtd6XwwRGGetfmVeerwuhGSr9n8R+jCvDmj
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
u4AMd2FGQgWT8HqP8wy3t0qOUpcXbjjQZS8Aa40vevvLjFJNN92ZQtfQfaWm
+HM0Or8z247q57XSocfRdL3tBuh88bS1O+3fCcqTB/rYZUzC4/nnDQysmBih
It9z4321BWAmO1i9XWWUYrbvuJhsTYcrn6Y4Mo5ywQ+J9U5W3+iQ1XBAI+IM
F2D+zuytsWRkAhOobHyamLScAToE/shLfWUCnF/X1LFWGawbparWv7U8f48O
m5uPx1xE+wnm7R7w8l05o70A6gvfPOLXAS6Ypu87nMMEOK+OYj3+8ALNt9V1
f8+8SaJD2nnjQC30709Oa+dHyXSBvE2PD1ih/UDrc+uz+Zao3pFUdeKi8T/V
8qJ4gxs6vzwTRHTOcsGBhFXPx406wQ3942UeaD6ZnXo2mqImAMtLX9w5iOp9
8YSVmiJ56HyP+2GUZo3W23Gzlh09XUBeRvHhH7Re+IqWNxf94oexjaeWXkT7
wZEbXbrhoXQo+TZilTG6f30bvS+hwO4Aa3948C8tYgJWOn/cuLQArDtq+jsH
jX9Urmi5+Vs6DKlST6i044KOtFKjize6gKiuW9UKdL6bqe6Z0+ZHhy9bxhee
s+WCGuMMtR/vO0HNasb1W2j8S0R37jMzEICL7vkrJqPvyVGwsF7Tg+pfs2w9
WzReRn98fWEU2k8uz2j+Rd8H825pnSKbvrzuJbybR8jZoSeeTgDzbt/ZYRpP
lpUTP1uZ9r1mA49G4mezk0lJ6Z/dATDvFpm55ebCvi6Sb5f0LLZGsrGb5Ns5
Pcx4W5HOJPl2P4vGxOo+M0m+nYBvnvcVKSbAvJvMWNEVtmA38b89Mxpvn+fV
TPxv1eD+v52FdcT/5isS+z0yuor43x6skgz+4PKN8HHV1/92bfHsI/lyV8NW
fTp/m0thPu7NkY5Ipu8wyZujnnrvcUwfIXlzHn+rbI6g8xrzcQlXZj/N4o6Q
vLkGplis6GK0H/6XL/eeE3lLeppL4Xy5MruLbZ8zBinsi1svnTn1a2M/8cXJ
rO+ie0pxiL/NrTUxuwzdkzHvpnyq4CD/Hg7h3dhlzb1dv/sI7/ZcNy2p7/gg
4d30FJIfnlzHJbxbypDu3VlOXMK7xeynfq2V4BLe7TazKdRPepDwbmp6wz9d
V+QRP5xV/9TY2w+1APNu961mD0iJtAHMu6Uyc7S/PekEmHfLUVV07JvbDTDv
pnbkvUHPaSbAvFtQ4Je1mmh9Yt5taPuwt8x1JrB4OyyZLckBwkNHXMeedAPM
vz3bvNu7ZOsghfm3sQPzW4pihyjMv50+5/YyfeMIyZPzdXt0X0h4lOTJXdPZ
Y/VpzSjJk9sk8++RcvgIhfPilriE3VE/w6WC1VpsXTYKwz8jStmi7AEK82rh
+0Kcstf0El5Ncm/Z8dTzA4RXO/Wx8+ud6kHCq+200ykwQPU15tVUZatkPppy
Ca/WLJvumfpykPBqfJ+H8g1u9wPMpy24vG+ZGaprMZ/2ZXLy4NLVTID5NMlL
dm6639H5Zx8mukunG0jnmsiGPmMSPu1+4NpR/dZhCvNpnTJKdwI7RijMp+nM
/z24Be0/mB/zSSimt0QNEn5M2sfxfeJeLki6e19jRTY6r8vnZNWg8zp0xlfn
69IF8KJN6pUpxiDhy2KaGLtfenUDzJc5uHOkt4QxAebLild/n7hWygSeVuIK
838zgUluvNYqYybhy25e9edpuo6QfLYO8YjgTLlRaknvhEecnwDc9b6gx2rB
KIX5sGSp0JSf/FzgvtFSRucmHUrNif0mh85rdyV2dx2HDo3u/Rn10eISfuz+
8eaFNWF9APNihcVr5L7lovrR0fHm4WYGuHVOR4cvg0l4scBj/vFLfo6QvDXN
e0f0vdD3iowwYlfuo0Njve+z7m7ngo2vfUqc0ujQ7FaczS6032MebGD74ur3
HkzgsCLrqJJeF6iX1ZHpRvs15sH61v2rMliM7mc7TqzqtxWAafUyDwaWj1LX
motaI7zoUMHszrMqGy4Q0KvxXNtChwvPqB8W2IfqgaJH2wJdO8HiQyORZ9B5
jXmvG6tWeJePoXq1TcY1ZLsAdOF3dwvfMEoFbQk+q3qWDs89nHM6zAStf4/U
Z2VFdNguNqWbYskFmO/iV0wP8H3KBNc8Ky6V0hnANJejKP2NCXB+mm7JfUOz
taOUi/+M2VAkHeqvtRBVR+cJ5rkkVSP3OQv1gbBIDRPPKx1g76EbaZ8+oPrk
v7y0Zff6wnaj89p1u+s9qUQ6PF/2Rd8D/fs0ffuwPFoXuPr7/YbLaD9w6J7v
LnFKAK5trOnaKD9Kzdo0lpdzhQ7tjhu5mlhxQUzfQRcZ3U4wbVtT/rmECW7f
Ki/J3CAAXw+3HipD5/XpOfEXXb+g+/K81sMP0PfLSQh6adXSBbbtfiaa+gPV
j38WX3xUzg8VK0+knVQYpUbrN2pJ36HDJ6PwyhCqtyRgUadhUwc4IXzk4BC6
/0o3brg8e4kALHYR8v+Bxr9HNmRWcQYd9rrPWnUWzTfVsUmZSLcucMJLW/Au
Oq8nA+9OX/ClQ52cF3H5aL2sim6dNfCiE+gs9eJtQuPP22Ivd3YPqi+aRtSC
0H36jubRkSkmP2wzmpj3Bt3XB5XLPUoe0eG7sJbBDvR9ME/FqDm3IzOvF+B8
tOU2070W6H2l+Zwn+p7S4dy9Ry9Xof9+b/OPdSLjnSB84+4zTuh7bvd7LXZB
qRPsOgfY0uj9B5sVrnxTEoAz+aFHY9B4HNvK0H9T1AWoDrv0daj+0Qj4oawS
TIcDhS2Ll6HvcX1D0HKJBQJwPb2u5At6/1BmgPWT13QYZBJ7zRb9fUXwsY/N
5l3go0HNLBP0fvkbtGI0wzvBw5o90Bp9D9W6/1ta1r2pgg66GZPl5wLdB7sP
rbFkodo/oP1XSqr1XVcIOoiccvj+BZh/eLYIfC7RemLPZO3zwxXofg3TMoX5
piwOoiWP958A1r9b9GZ4s00QdJiyg/HcEqD6bW3XT76VZXFgcj/mPgfovsmJ
8xrdJj6xLy3d07MAmD9a2ZpTFh9+bL9a9InmRaD71jWadm6bLegQvK8mlwVY
H8LWLx34JX153Zw39kfT5V/envzUngEKLKsWVeapszrA+Eeltn1cB0y/MD7i
/jQIgK33gPEBs4nwFQ==
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{385, 2778, 2776, 383, 384, 895, 748, 624, 527, 
                461, 423, 923, 776, 652, 555, 489, 954, 807, 683, 586, 981, 
                834, 710, 1004, 857, 1028}}], 
               PolygonBox[CompressedData["
1:eJwV1FeQjXcYx/Gj3JAQNdHLHWKDMKPM6AyGUTayStTVSXRJJGqil9WFmUTP
nbWr95UgudBW3dUNwxhm9N59novvPr/v73/O7tnzPu9bOXVE8vC8iUQiD6b6
kVswkchBB+V9vhEz0BW98yUSx/Qd8YCnYya6oY+z4/pOeMg3YRam6O/pRqEI
Tui6o6/+BE/GI76XV8FGnsH/lAtgPr9qtkV1+YhZF8+xl982O2O290w17+tG
46LcCkXlQ2ZNbJOz43PLZbCKN8RJuSH+lb9znipny9/gMd/HqyKdZ/K/5IJI
40mYo/uNP5DHoFj8zvgOdGWxmjdCD10/flLujCd8M1bpPsEC3VeYq/udP5TH
ojhO6Xqiv/4U/xZP+RbMQy8McHZan4JnfCvmY5r+kW4cSuB0XEsM1J/hXfCc
b8Nq3adYqKuBNN10/lj+EZfk1igpHzZr4Sm28zNemyGXwxreGH10g/hZuSte
8O1YEHulf6L7CZ/jbOwFBuvP8W54yXdgYexa/C3dz/gC5+JaYYg+h3fHK74T
a3SFsEhXE4tiH/kzeTxKIUeXqSuPtbwJ+umG8tzYBbzm+3k1bOK7+Fq5MBbz
Wjgq18M+ebHz2bGf8i+4LLdBafk/82vskG+ZyfF3YgfMCnG9sc7ZdbM93qFp
XHuzEV7gIL9jpiBvfvvg/cPk8/p7Zo/4v8zmeI03zrPML+O7Robzm2YnJLx/
t/N18mdY4uya2S4+p3zMrI/98hKvmxOfQf4VZfA/r42d8vnYRbli7BrW626Y
HfAezWLvzMZ4iUP8rtkFA7z3e/OCridy5RZ4qz8Q9z0y9Xv4erkIlvLaOC43
QJa81Pnc+P3yBJTFhbgPdJWwgTfHQN0P/KLcC+/i+YNlcS/pX+kmolw8R2J/
MVx/iffG+3gmYHnsauwfRji/HPuOD7Ez+CPuv7gOukkoH/dP3Ge6yvibt4j7
Rm6Cw/JQ5yPlK/H8NfvGd2u2jGsZ14z/YyZhs5zl9SuQFud8MirE3sVeYJT+
Kk9FHhzQbYjnIpbxOlgZ92N83/IUfAReqtwF
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               PolygonBox[{{336, 2777, 2774, 715, 862, 343, 389, 427, 493, 
                590, 714, 861, 342, 388, 426, 492, 589, 713, 860, 341, 387, 
                425, 491, 588, 712, 859, 340, 339, 338, 337, 386, 424, 490, 
                587, 711, 858}}], 
               PolygonBox[CompressedData["
1:eJwV00dsjnEABvC3EzUOthOdxoELNdqLg5lIhEic7VWleyf2uphdWltb5UTM
ixq1w0WCA221pfQgkThIKL//4Zf/8zzv9379mu/9ktfkrtgeG0VRDAO8S4qi
91QZKqmgnDJKaeIVI9yUSz9VcVFUYutjmn6EQbZ6LtteMtwW/tB3Ku3Ftq9M
1Q+TaKvjki1bb2SCfo0XtmF6Dt+osBXZlsitZOh3+WK7p2fKz5kiHyJBruWi
6216tvyGLLmB8fLVcI/rN/QZ8kOGygudH9gm91EuF3pdXHwUrZb7abf/ds7n
LYv1f87ldHNF/+lM5w697o9x/8rwmcNnd/2XcxbPmKz/cS7lIwf1H854arjg
/lXOPu67luV8zTx5mbOT0/I4Z2t4T6+/rk+XH5Akb+UrZXqB64vkFtL02/TY
7ugz5adkyAeIk6s57/pcvZ6x4X8Mr7MN0bfwhVJbvq2bdH0/sbZTnLPN0esY
o7fwxDZY30wvJbY822fS9H3E2E5y1tbOINsmeii277R1karvDQ+27QRnbI9J
tG2kmyL7Dlsjj0iwbeAzha7l2jpJ0feE75Tj9gbbbLmW0XpzeF5s8fp6uiiw
bbctlJtJ1W/RYUvWdzPAsfBd2TLlGkbpTeF7Cs+Yvo5O8m05tk9M0nfxl6Ph
d2abJVczMvzmaLPF6mvpIC88w7YFchMp+s3wfNkm6v8Bx8iF8Q==
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1Hecz3UcwPE7opTI6JDsPbpDCVlnZGWEKJTVoGQmVLLLqKxCZmTLKiNF
9iqZTdGgqFSySsh4vh/+eN7r83n/fnff+bgCHbs365aYkJDQxI/oDX5s0fv1
Db1PL+gD+rgm619aTz/UVL0a36eg9RF9j6rW/+tgyluf0/XcTZL9V/oOz1PO
/rSu5WGK2/+q7zOcNKQz26qjeYI6FDI7qosZwj3kMPtaZ9KHR0hLevNtOoYn
qRvnFdfLjT7brmN5Kq6Ne+OY8XvxOTeRgZtj7fs7dBydqE8Fbonv+Gynjqcz
DahITvNvdBZ9aUXG+Hvmn+qbPB33mUrkMv9W36Ufrbk1jmH+mb7FMzSksNnP
uoSh8cy4w+ygzuYF2lDC7Df9gBFkinMw26UT6EKK/UldQyOK2P+iSxlGZXKb
fadzeDGeqf0ZXcejlLT/XVdQ3fqKjox7ZP2vbqSWdRoyx3Xp5/FMdWIcQy/G
temzWkb/jvusH2mNeFFpHCyL6rF4prpMq+nlOH99JZ6l/hPPQjdozXjXqWJ9
px7SuVSxvqQvxbtkfVY/4TFK2Z/QlYyKZ2p/XjdxW9xL+906ia6UtT+lH9OE
YvbHdTmvUpU8Zod1Hv1pS2mzP3QVr5GFzGZ79G268WBcI3nNv9f5vEw7ssb5
mO/VyXSnaTwH8pn/oAsYQHuyxTHM9+kUetCMVPKb/6gLGUgHsscxzPfrVHrS
PJ4Jt8ff89kBnUYvHor7TRI5yEmueD/jPYr7H/chriXOL45JAQpSiMLxDsYz
jntIcUrEOxbPJO4Xd5FMSrwrcY7O4QudznO0iPctnkmco8++1Bn0piW145jm
P+kiBtEx/q7Zn7qa16lk/59ujt+xTpt4/f9mOftrG3WOLA==
               "]]}, Annotation[#, "Charting`Private`Tag$52592#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1nf4jmUYxvHXFiVFkWSnUKkIJTIyK3uWhIhQZJe9V/aeWWWP0kAZGcne
hUpmMiJKodDnOvrje1zned7P8/7e976v6yZnkzY13k6SSCRWJE0kqhEvJ0sk
NtMv4Cw/D31QHTVQE7Xwiue+9cyLOMfPR1/URgNrW+Qv4Ty/AP1QB69a2yqv
gt/4heiPumhobZv8uzSJRFX1gmwRBqAeXrO+Pb4nLvKLMRD10cjaDnl1/M4v
wSD0kv8mewfpsTN+IxrLd/I1cIn/kn8Yi/il/FT6Ngzjj6gv4BF6q1oUf+FL
/rRaC4O901u9IGuHw3QF3EVvUB/Hp/Su+N50FkznS2A3XQJf069Yb0Lvomvi
Mv8Vnw+L+WX8NDoNhvOPYkicEX+Rbo+74zNjD2T34wO+JBrIXud307XwB/8x
psvSYoTsMQyNs+R/pzsgA/bE2aGpfA9fG3/yn+D9ODs0s7ZXXgdX+OUYFmcv
vyTriIzYG2eJN+T7+Lr4i/8UH8hux0hZQQyP/uAv053wA10R99Ab1SfwJz7j
93l2KZ0VM/jn0EjWnN9P18Pf/GcYEX0l/0PWGfdif/QFWsgP8PVxlf8cI6PX
4m/JuiATDsRZ4U35d/zLuMZ/gRmyOzBK9jhGRT/yV+h3kTn6XLZM9gBm8qXw
uqwl/330Aq7zq/n8WMKv4GfS6TCafwLb6GL4ih5tfXD0J/0efqQr4T56k/ok
PqdPqTXi70QPqNnivDHL2jG1Cm6gdJy9WhJ/Yz1/Rq2DpMn1g/db0QdjntUG
8bvUsriOf6yvUQvEXmOp9ZNqdSS8v9L6LPpOjLH2s/pifE96u/o0VtNjPDck
vgPdFVnwDV8IX9AHoxfp7NFrmC07rlbFTZSJvlOfw1VsiPtNrYtm3m2tHpK9
iu/p5/GvfG3MPZbJV/Gz6fQYyxfCDvoZrKHHWh8an093w/04FHMgy4E5fFm8
IXuLP0w3xI24fzAuZkl+TdYdWeMeif7F2/If+NdwM+4EjI9ejf5DG+s/Rr/j
VvQMJsT8xTnIeuCBmJ+YM1lOfMg/H3NDl8JGuqX1tvRPcf+qjWNv1XJxlnFm
/Dr1UXxMr/H8RAyPdb4nskXfRV/gHfkRvgmSYK1sTtyLGMcXxqSYx9hvulfs
v/s/u/pTzKo8Fz7iy6G1rB3/c8wKksb3kX0ouxvj+acwOWY2epjujRw4EvuO
9vKjfFMkw9eyj2QZMIEvgimyUdE7dB/kjN6Mu0CWG3P58oh/PDvwx+hmSI71
srmyjJjIF8VU2Wj+Ft0XuXA0zg0d5cejL5ACG+KOj3NAJ2snZM2RMu68uK8x
Js4C/WS5Y2Zjr9FZdpJvgVQx83GnYqw8CfrL8sRsxD6ii+wU/yZSx0zJ5sX9
ikl8McyI3ox5xwD+QZyIfcS7sl+ib3AbNsvmy+7FZP5pzIxe5ZNhIJ83nqML
J/v//x0n486k82AeXwEdZO/xp+lWSBPnxD+GT+hvrS+gM2FK7KX6UswivVMt
jrX0r2rtuNdiHtTkuIhB0V9q5eg7PBSfqT6FK1jJ/6LWjH1zT53y/gr6QVzG
/NgDtVqcKSry+9XSMb/YxJ9T68Xv9n5H73elf40ejnuBLo+00S9qQSynt3hu
IZ0ZU/ni2EU/i3X07Jg3OgUG8w/HO3QRrIrvbH0lnRcL+EroJOvGn6Hfwu3Y
Klskuw/T+GcxRzaJT4khfD6cjp5Cd9nZ6HfcgW0xc5gsT4Whsvyx39FT6CE7
x7dBOmyPGYt+iXONvYjvFJ8bz+Kgme+p9kJP7573TlvciR0xT5giT433ZQVw
RrYqzg4L+co4QJfBN/R5tX6cuf3v7dn/AAUHfRY=
               "]]}, Annotation[#, "Charting`Private`Tag$52592#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV02WAVVUUBtCHMHSH0jA0SHdLh5QMJQ0jrYABqHTYigUKGEiDQSPdrSAo
EipiYRO2EtbaP9bsb+/75t13zzk3OXV0yqg0iUTirD9J6RKJO5MSiYwcY7N+
m3o7HzFe/7raig/5U39ATeU2+QW1Ol/Ju9W+LJHXx3US1NE/pCbzgTyLVXI7
rsvDWSA34pK8mvTcpc/EFnkCnXlRX4Pz8lLq8rC+BCfk2YwgAyPNMrNVnkgK
9cjIKPMsbJMn0YX6ZCIzWchKNrKTg5zkIjej/W9WtsuT6UoD8nC3eTZ2yFPo
RkMeMSsZ6xjrFutOXu4xy85OeSrdmaOvydfyMhrxqL4UJ2MdYn3Ix71mOdgl
T6MHc/W1+EZeTmMe05fmVHx/rLPcnr9jrVgoN+ayvE8dwBp5o9qFtBxhGDea
36fm5Di79dvVnnzMdP0bauv4vfylP6jewadxvvTz1NpxJvhWv0ftxyes0G9Q
O3OaNLzDEG5x7XG1TFyTd6q9mSuvUTvwT+wxi+Lz/CSvZZPclXTcpB+j5mKP
PIM35TZckXvyUpxfvov3gCY8oS/LmXiGOAss1jfhZ3kd+Rmrz83eOP/04mV9
Xb6P9aEpT+rLxfsW94vzQwHGmeVhX5xxetOMp8zKxzrH98X5oSD3m+Vlf5w1
+tCcQjxgno8DcY7oSwsKU4SiFKM4yZSgJKUozYOx5xyMc0Q/WlKG8bGWHIp9
oT+tmGlWIfZTfiXOKWWZYJafw7GWDKA1T5vdzFn51ThflGOiWYHY/1grBsb3
6evxQ+wZbXhGXzHOlzw/9pYl+qb8Iq+nPJP0BXk31pLUuJ++Pj/Kb9GWZ/WV
OCe/FudH7si/sbcslZvxq7xfHcgGebPajSSOMjzWwXyyWijeIXmH2ouZcT+1
bbyXXNUfUgfFfeN9iWdRG3CCC/q9av9YJ1bq31ZT4jxyQzwXQ/mMW11/Tq3M
+zHT71L7sCDOqtqJ/+TD6mDGycvU5vwW388WuTvpY4/0U9TC8Xyxb6yMe3FN
HhTrJTfkoryKdjyvr8Ln8sI4ryzXt+B3eSMVmaovwnuxpwymPbPMqvKFvCjO
NJWYZlaUY7FnDKEDlZluXozjsQ4MpSNVqEo1qlODmtRihs8Xj/WK38wwOjHb
rBpfyovjnWCFviV/yJvYKvcgQ/x+RsTzUtu1/wFwKuvi
               "]]}, Annotation[#, "Charting`Private`Tag$52592#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1Hf8zVUcx/Fr/oQKkcySyEjZK7MkOyPZZVVk750tVGQVGiQkpdAUJVRm
qRDKXmXvHXp+/ng93uOc+/3ee+45J0/bbg27JkskEguTJxL7UiUSfyYlElWx
IXUi0R0lkAmXdW1xnJ+Ep7Hf/O26x7BR7oGSuAtXdO1wgp+Mxjhg/g7d49gk
90QpZMZVXXuc5KfgGRw0f6euGn6Re6F0PD9NIvGyLgmL5Cy4xj+PU/xUNMEh
n/9L9wR+lXujTLzP54fq0uBT+W5c51/AaX4ayprzgfwQmsp55Ql8VnwnV5eX
8OVx2Hv+ptWx2VhdY9/wffii/Nv8A2jFr6Nl4zvzw/jb0Jj/gX6mr8J/zPej
JWMN6a/0FZrV+H/8i+gqn5Eb0BXyUPqmXI7OlfvSIrQN3UTH0GbGH6AT5R70
HtqM/ki/N/Ykv5R/NNaC/50e8dt20Sfxmzl9UczYO3I+lIv1k4fzabFYvgc3
+A44y7+F5shn3hu6bFgp/+PZu/ka+F3uh/LIhpu6jjjHT0cL/Gv+Hl1N/CH3
x6PIjqPG9uprYYs8ABWQA8eMHccJnMQpnMYZnMU5nMcFXMQ+z6iNrT47EBWR
E5eM7dfXwTZ5ECohF27pXsJ5fgZaxpkx/4CuLv6UB6MyslqHEbp0WCLnRkLX
Sb7Az0Qr5NdN0mXHD3GmPO8gXw/b5SEobs67cn5UibWXR/LpsVSuKn/Cl8K9
cjK5M3+RfzvWW54nP4xn5QflyXwONOd/oqv0NfjP+YG0QuxB+ge96jsdok+h
k26HufXoMnlwnNO4Q+h7ci/6YLyHrqcjadX4v+kouRu9nT5DV9Fh8U7jj9FF
cn9aOu4JupneZyw534W/xDfkv+PfiX3Bz+cfwXNyAXkKnxOr477wvQ/z9bFT
Hhrvib1k3mjdHfhCzoMUuq7yZf5dtI77wueP6BrgL3kYHsf9cUaN3cBN3EIi
1j32u7kN8Tc/HNXiXonfEHtb3wi7+BF4Is4qUnp3N/0V/j20ie8T+133NHbz
I+M+ivOFVOZ3j/+Fn4W28Yw4A3HPYA8/Ks56nA1zx+juxJex35Ba10O+xs9G
u3gmjsf/gr386NgPcSbMfUWXAV/F3kGSrqd8nX8f7VFQN1WXC2viHTjBN8E+
fgxKmjNLLhDnO86UPJbPiK9jbeVP+TIxR04j9+L/4xvx3/Nz4szzH/JF0Zb/
hT6vL8RP43vS3LQF/ZmOiPvPeE36hTyIVoy7i26hY2mS8ZN8U3SW98tP0W/l
IbEGcik6W+5NC8aeoxvoKForzjgdJ2eK382vpt/EHuA/48uioHyb3Ju/wX8Q
d4+8QC4Wd7JcOO75OMv4KdYBp/hmOMCPRe34vUhrbh/9TX4uXozn43ScbRzk
x6FOPBfpzO+rv8XPQ4d4Bs7EeuEQPx51ca+543V3YZn8ENLr+skJzI+7Uf6I
L46OMUd+K84tWvJr6c/6WvyXfKWYx2+Nu1F/Nuahi+6wXJ8ul1+mr8ql6fty
H1qItqYb6Whaz/h9MU/uTjPH/0fX0OHx38UZo4vlAbRc7BP6Gy1i7Ha+P58s
zhm/kn6or8wv5EvgJbmIPJ3Pg7Wx9vJXfGWkl8/RVjjCv4YyxufIhePOjPtF
fo3PguXyw7hDN0BOjgVyp+h1M+T7sS6+H87HXYp/+NdjfeL+Me913d1YIT+C
O3UD5RT4SO4c78CF2Kf4l5+ABiiKDOYP0qfEQrlLPAMXY41xlJ+IhiiGjOYP
1qfCx3LXeAYuyW1wjH8jzimKI5P5Q/Sp8YncLb6nbqacF+tjT8pf81Vinflt
dBzNaOx/e31WPA==
               "]]}, Annotation[#, "Charting`Private`Tag$52592#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1GW4FGUYBuAFpFsEQaRLpUGkW7pDpbu7u0FBwaYblO7uDknpRlGkSxpE
Ae/vx329z/vMzNk9uzuTrlnnmp2iRCKRylEjka9iRSJl4kQiB2JHIi1Jxm+6
zbTS37Z/QX5e6UZTVn/Q3oq3+V23hdb6O/aRFOC1bgzl9IfsrUnOJd1W2ujv
2kdRkAhf68vrD8ttSMEfum201d+zf0khovCNvoL+V7kt7/CnbpAuGtPt1diu
a2f/W/6KwkQNf0uXgAVyPb51XkX7EbkdKbmsG6x7gxn26uzQtbffl0dThMn2
NGyUo4XXkROyUK7PHPkD9sjfub6SfFRuz0I5J+/KY80UrJbXmoX5y/lDzOjs
YqZjy8181JBnmpnC98h2+yazBCfY6doO5gP9TnOMucTMEz43itqnmGnZzyb7
BrMYx8P/Hf5HM1F47yyyrzIL0ECea2Zlr/y916osH5M7kIpx9ndYI19xfKgc
g1n2muzSdbQ/DN8/xYjOGF1iFssN+cF5VcJ7kjuSmqu63XTSPwq/B4oTgx/1
VcNnIHciDdd0exjLOMYzgWrOO+l4Z9JyXbeXiVR37JSuC+m4ofuFSdRw7LSu
K+m5qdvHZGo6dkbXjQzc0u1nClOZxnRmMJNazj/rvO5k5LbuAJ31j8NvkxLE
ZJa+tv6c3INM3NEdpIv+SfiNUZJYzNZ/oj8v9yQzd3XDdDGZba/FIV1X+9Pw
XVKK2OF70b3JErkRPznvU/sFuRdZGG9PyVr5nuPD5Vj8ZK8d3rOcmR3yYce7
yc/C90ppptrTsVmOE75LOQlL5dVmQRrL88xs/CJvMUvxs7/3mXkx3Otmb3OR
mSs8e3jPPiHcX+E61tnXmUXCbzU8F1w/wozN7vD3HF9hfhSeBXwSPkMzS7if
5M1myXD/uK67+Tz83lgq5+VjeZqZni1y3PD9yW+xTG4SngeurWP/Te7D+9zX
HaGH/p/wLKAM8cJ9pq+r/13uywc80B1lHvOp5/glfT+y8lB3jJ76F+FepCzx
WaCvr/9D7k82HumO00v/b/hOKUeC8IzSN9D/KQ8gO491J1hEQ8cu6waSgye6
kyxmCUtZxnJWsJJVNArPN+cPIidPdadYTWPHrugGk4tnutP01v8XvlPKk5A1
+ib6q/IQcvNcd4Y++pf2iVQgEWv1TfXX5KHk4R/d57o4zLF/ylldX/sreRIV
SRzuL11SlstNw+/Jec3s1+Vh5A2vZ0/FevmF41/IcZlr/yzcR+G3GZ7p8jnH
+8mv5ckskz+kkjzdzMBWeaNZPNyP4R41k4VnLyvCZ2AW4ijN7PPN7Bxkn32r
WTo868J78nrNzRv6HeZwc7GZm8PhtcP/a6YO17LBvt4sGn4brh1pxmOefqWZ
nzryz+b74T6Szzuvvxxhir0yM+SMbJOThPtffpuVcnM2uKaF/aY8gnz8pxul
i898e10u6AbYozDVXoW3wuejb6m7JX/OR7zUXWSgPirTdFVJGu5be3JWyS3C
fSHnYL+8LdzLnGKT6/8HRXpKNw==
               "]]}, 
             Annotation[#, "Charting`Private`Tag$52592#5"]& ]}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"LQR feedback solution\"", TraditionalForm], 
         PlotRange -> {{0., 4.6982102761082185`}, {-4., 4.}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1c\"", "\"u1c\"", "\"x1c\"", "\"\[Theta]dot1c\"", 
           "\"xdot1c\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.866551520412222*^9, 3.8665515431379786`*^9}, 
   3.86655729854068*^9, 3.866557461644698*^9, 3.866557504175143*^9, 
   3.8665577443166075`*^9, {3.8665578011295004`*^9, 3.866557829869341*^9}, 
   3.8665588947209625`*^9, {3.866558969013285*^9, 3.8665590006701956`*^9}, 
   3.866559308907958*^9, 3.8665634959545083`*^9, 3.8665637128403845`*^9, 
   3.866563799911634*^9, 3.866563890687703*^9, 3.8665639801112027`*^9, 
   3.866564088377698*^9, 3.8665641400952144`*^9, 3.866564273600665*^9, 
   3.866564356869127*^9, 3.866564438646064*^9, 3.8665683095639296`*^9, 
   3.8665683678353577`*^9, 3.866568408298462*^9, {3.8665684724030313`*^9, 
   3.866568489577557*^9}},
 CellLabel->
  "Out[201]=",ExpressionUUID->"743537a7-da44-4af7-beba-a5e499e58421"],

Cell[BoxData["1.0711796051937201`"], "Output",
 CellChangeTimes->{{3.866551520412222*^9, 3.8665515431379786`*^9}, 
   3.86655729854068*^9, 3.866557461644698*^9, 3.866557504175143*^9, 
   3.8665577443166075`*^9, {3.8665578011295004`*^9, 3.866557829869341*^9}, 
   3.8665588947209625`*^9, {3.866558969013285*^9, 3.8665590006701956`*^9}, 
   3.866559308907958*^9, 3.8665634959545083`*^9, 3.8665637128403845`*^9, 
   3.866563799911634*^9, 3.866563890687703*^9, 3.8665639801112027`*^9, 
   3.866564088377698*^9, 3.8665641400952144`*^9, 3.866564273600665*^9, 
   3.866564356869127*^9, 3.866564438646064*^9, 3.8665683095639296`*^9, 
   3.8665683678353577`*^9, 3.866568408298462*^9, {3.8665684724030313`*^9, 
   3.8665684896315403`*^9}},
 CellLabel->
  "Out[202]=",ExpressionUUID->"ef9edb23-bea4-4438-9d3c-695de48799d2"],

Cell[BoxData["4.698210371990063`"], "Output",
 CellChangeTimes->{{3.866551520412222*^9, 3.8665515431379786`*^9}, 
   3.86655729854068*^9, 3.866557461644698*^9, 3.866557504175143*^9, 
   3.8665577443166075`*^9, {3.8665578011295004`*^9, 3.866557829869341*^9}, 
   3.8665588947209625`*^9, {3.866558969013285*^9, 3.8665590006701956`*^9}, 
   3.866559308907958*^9, 3.8665634959545083`*^9, 3.8665637128403845`*^9, 
   3.866563799911634*^9, 3.866563890687703*^9, 3.8665639801112027`*^9, 
   3.866564088377698*^9, 3.8665641400952144`*^9, 3.866564273600665*^9, 
   3.866564356869127*^9, 3.866564438646064*^9, 3.8665683095639296`*^9, 
   3.8665683678353577`*^9, 3.866568408298462*^9, {3.8665684724030313`*^9, 
   3.8665684896365385`*^9}},
 CellLabel->
  "Out[207]=",ExpressionUUID->"9f5d7073-a2d7-457f-81bb-bff987c40a45"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"n", "=", "10"}], ";", 
    RowBox[{"\[Tau]", "=", "5"}], ";", 
    RowBox[{"\[Tau]1", "=", 
     RowBox[{"\[Tau]", "*", "1.25"}]}], ";", 
    RowBox[{"A", "=", "0.2"}], ";", 
    RowBox[{"order", " ", "=", " ", "4"}], ";", 
    RowBox[{"maxIter", " ", "=", " ", "100"}], ";", 
    RowBox[{"maxError", " ", "=", " ", "0.01"}], ";", 
    RowBox[{"uMax", " ", "=", " ", "5"}], ";", 
    RowBox[{"maxCount", " ", "=", " ", "5"}], ";", 
    RowBox[{"errorBound", " ", "=", " ", "0.5"}], ";"}],
   FontWeight->"Plain"], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", " ", "IC2"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"maxJ", " ", "=", " ", 
    RowBox[{
     RowBox[{"uMax", "^", "2"}], "*", "\[Tau]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"InitGuess", " ", "=", " ", "initGuess"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"EInitial", " ", "=", " ", 
    RowBox[{"Energy", "[", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"ICs", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", "A", "}"}]}], "]"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\n", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"time", ",", 
       RowBox[{"{", 
        RowBox[{
        "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
         "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
         "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "Jff", ",", "K"}], 
        "}"}]}], "}"}], "=", 
     RowBox[{"Timing", "[", 
      RowBox[{"ffCartPendulum", "[", 
       RowBox[{
       "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", "order",
         ",", "maxIter", ",", "maxError", ",", "maxCount", ",", "maxJ", ",", 
        "InitGuess"}], "]"}], "]"}]}], ";"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x1c", ",", "xdot1c", ",", "\[Theta]1c", ",", "\[Theta]dot1c", ",", 
      "u1c", ",", "J", ",", "error", ",", "end"}], "}"}], "=", 
    RowBox[{"testWithFBEventStop", "[", 
     RowBox[{
     "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
      "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A", ",", "uMax", 
      ",", "K", ",", "errorBound"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"p1a", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1a", "[", "t", "]"}], ",", 
        RowBox[{"u1a", "[", "t", "]"}], ",", 
        RowBox[{"x1a", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1a", "[", "t", "]"}], ",", 
        RowBox[{"xdot1a", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1a\>\"", ",", "\"\<u1a\>\"", ",", "\"\<x1a\>\"", ",", 
         "\"\<\[Theta]dot1a\>\"", ",", "\"\<xdot1a\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Feedforward solution\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"p1c", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1c", "[", "t", "]"}], ",", 
        RowBox[{"u1c", "[", "t", "]"}], ",", 
        RowBox[{"x1c", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1c", "[", "t", "]"}], ",", 
        RowBox[{"xdot1c", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "end"}], "}"}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1c\>\"", ",", "\"\<u1c\>\"", ",", "\"\<x1c\>\"", ",", 
         "\"\<\[Theta]dot1c\>\"", ",", "\"\<xdot1c\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<LQR feedback solution\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"Grid", "[", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"p1a", ",", "p1c"}], "}"}], "}"}], "]"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox["error",
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Tau]New", " ", "=", "end"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Init", " ", "=", " ", 
    RowBox[{
     RowBox[{"\[Theta]1c", "[", "\[Tau]New", "]"}], " ", "-", " ", 
     RowBox[{"Round", "[", 
      RowBox[{
       RowBox[{"\[Theta]1c", "[", "\[Tau]New", "]"}], ",", 
       RowBox[{"2", "*", "\[Pi]"}]}], "]"}]}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"IC2", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x1c", "[", "\[Tau]New", "]"}], ",", 
      RowBox[{"xdot1c", "[", "\[Tau]New", "]"}], ",", "\[Theta]Init", ",", 
      RowBox[{"\[Theta]dot1c", "[", "\[Tau]New", "]"}]}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"initGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Lambda]1ff0", "[", "\[Tau]New", "]"}], ",", 
      RowBox[{"\[Lambda]2ff0", "[", "\[Tau]New", "]"}], ",", 
      RowBox[{"\[Lambda]3ff0", "[", "\[Tau]New", "]"}], ",", 
      RowBox[{"\[Lambda]4ff0", "[", "\[Tau]New", "]"}]}], "}"}]}], ";"}],
  FontWeight->"Plain"]}], "Input",
 CellChangeTimes->{{3.866563774267808*^9, 3.8665637802429056`*^9}, 
   3.8665639075873184`*^9, {3.8665639845357933`*^9, 3.8665639847687197`*^9}, {
   3.866564278058247*^9, 3.866564278521099*^9}, 3.8665643631231337`*^9, {
   3.8665644429376984`*^9, 3.866564442977683*^9}, {3.8665683722299595`*^9, 
   3.8665683723069324`*^9}, {3.866568414483492*^9, 3.8665684145484705`*^9}, 
   3.8665685035081205`*^9},
 CellLabel->
  "In[208]:=",ExpressionUUID->"fa647c23-3903-42bf-a448-5077ddb72382"],

Cell[BoxData[
 TemplateBox[{
  "FindRoot", "cvmit", 
   "\"Failed to converge to the requested accuracy or precision within \\!\\(\
\\*RowBox[{\\\"100\\\"}]\\) iterations.\"", 2, 213, 38, 17545198509607322795, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.866568427497343*^9, 3.866568447866851*^9}, 
   3.866568504174906*^9},
 CellLabel->
  "During evaluation of \
In[208]:=",ExpressionUUID->"66e2276c-9d81-487d-997c-3c67a62696d6"],

Cell[BoxData[
 TemplateBox[{
  "FindRoot", "cvmit", 
   "\"Failed to converge to the requested accuracy or precision within \\!\\(\
\\*RowBox[{\\\"100\\\"}]\\) iterations.\"", 2, 213, 39, 17545198509607322795, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.866568427497343*^9, 3.866568447866851*^9}, 
   3.866568504303864*^9},
 CellLabel->
  "During evaluation of \
In[208]:=",ExpressionUUID->"a2236b70-2ad0-4709-ab8a-692458d37171"],

Cell[BoxData[
 TemplateBox[{
  "FindRoot", "cvmit", 
   "\"Failed to converge to the requested accuracy or precision within \\!\\(\
\\*RowBox[{\\\"100\\\"}]\\) iterations.\"", 2, 213, 40, 17545198509607322795, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.866568427497343*^9, 3.866568447866851*^9}, 
   3.8665685044268246`*^9},
 CellLabel->
  "During evaluation of \
In[208]:=",ExpressionUUID->"589aa333-79a7-4882-84d8-26614e12d2d4"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"FindRoot\\\", \
\\\"::\\\", \\\"cvmit\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 213, 41, 17545198509607322795, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.866568427497343*^9, 3.866568447866851*^9}, 
   3.8665685044388213`*^9},
 CellLabel->
  "During evaluation of \
In[208]:=",ExpressionUUID->"2b4cd056-f833-4a69-84ca-9afe12863751"],

Cell[BoxData[
 TemplateBox[{
  "FindRoot", "lstol", 
   "\"The line search decreased the step size to within tolerance specified \
by AccuracyGoal and PrecisionGoal but was unable to find a sufficient \
decrease in the merit function. You may need more than \
\\!\\(\\*RowBox[{\\\"MachinePrecision\\\"}]\\) digits of working precision to \
meet these tolerances.\"", 2, 213, 42, 17545198509607322795, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.866568427497343*^9, 3.866568447866851*^9}, 
   3.8665685045397887`*^9},
 CellLabel->
  "During evaluation of \
In[208]:=",ExpressionUUID->"2384bc43-a091-418a-a50d-51734f1819a7"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
ZGeFcj5oHqg/aYjtO+NjVPovxo6jCZmhE6J/KRDbLHVCJWsShf/ZeEAyEWv/
cbH3Tp9FcxMVYfqyBNjwuVfNYD8ddITHB3uO0+Hq6USdkv18kPH42vIdd+jQ
ee7FjS3rxpFo8wa3Pmw+jtza9t12wyTaIPaj+SsvFS4fkWibn+CFk3QN6UJZ
KizX5OraysMH7lsZ6z2wcW37qV4vV3wCva18M318CxXcV/j8tPKng9vUK8PQ
MDq0++lmHfbjA0eXQFP+I9g+NXQltXHiX/8cjr9x45nPBGrzOHGeC9svfhV3
i116S4dSCVeHz4nYftbws77UjXFkEerU7tlLgThzppP4Dj4QkagJNYigg/GB
6kVn8iTq3nbLR0uMCnv3rqLcnaWDxNYJ4yqs/3JvOWSfXhpH1lOXhsnY9b++
5KSRx/sbSey2iOS2WUA2lSuUn7nR4RNvG3HyFh0+X04A/7IJlM3TGjSylQpB
CgeOarVg50DXFS/2Ye+f0XD09TLWONpm99Kjl0aFMb3hgi8i2PvANV9/MZ6O
Xdf2Pu69Eyjo8ANy7U4qBDr03pLB9jVjrgFzMlHYc01YPPLk77/7x/mzy9o1
7ZaC/CycP0ubyWWor+Zhzd25lP/9WDcS/Z4z5bCjFyXetLHqPNCPFueSXa2O
/UV1HCeqau8OoU1S8c11F7kgXH+o1MNiDG34syFlzQsysCD1rPyxCcQd92zk
kwrWP5tpMwOuU4hsv1rGO48MNqrS+jMXZtCNL+2SMQZc0BunoNNq+RtxmeVY
2n74g3C+7bhwwOqR4hQT59sh0U/n2r9ysXC+nZy8yBr6TWPhvDrErP2WYT4/
C+fVI3G73L4AhXVCo6+6xYsC0pYdgTMk7L2trOwquUOFP242AUfGOYAverBd
1R87R14l6bdIkEFahC/E6TENks4wdRM30ID6mfHR5QV23noq/rw/FhuPvSa/
uWL44JzH3kGtzXSYmx4NFXvFD03itzZ6t1GBL3BL5aZjAtD8cJf3MREemHnV
O3ajUQAOcXYwurmIbB7+41oWx5uvPKzfGY9Cui3+zSeC1vb5Ty/9H/8+3HF9
IfdQLyqOuqZyIGISOcarLC05DqI9uTL6LaYcIDJ1nH88cQSJlF08/rOVG0Sz
Re4unhhHTi9kj1VUUqAmcLfNp9PYOST8Qt8Q9j4n95aL+LlMo9H0C/RPP7kh
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
fnJhVcr2H14T7PykvleBuviJKXZ+csWPlispJtPs/KSk32uLCqNpdn7yA4cW
wW33FDs/qfiV90DFm3F2fnK7eZr4ce5hNk9viOgbWfnsMxPn6QIriqU5x9uZ
OE834bmVXR/bw8R5ulLPOYV8q34mztPtX7wMYdgMMHGe3sfbeto+rZ+J8/RA
KZOgcf9eJs7Ty0y2UGSXdzHxvCZHT+NxX/P3TDyvyav5sOXFm1QmztvDnVGo
kaI7+v/K2/G8pvRRGbVrAiUI5+8SzvGV5c21COfvuVK1nQsp9QjPa17NVOKz
0PqA8LymEAc1RWGuFOF8vkj8W8X+VW/ZfJ6r8PCOWxuS2Hyeytn9p1I/BuF8
3n8uMo+DmIZwPu94+2bc7udMhPP5iwveu+raahHO56tlm1vj3jQjnM+/nVvd
9uRGB5vPJ5ePuSseGmHnRRkVrwZzBsbZedE92QHmwn8m2XlRW/PevYcUp9l5
0bHjitlD56fZedHttY7ftkVPsfOiJnptV30vTLDzohoKPq3Sr0bY/F6odtO7
TvVGJs7v04uQLHXuBxPn96YmC3sd4rqZOL/3NurJe9rRx8T5/VdOjmZz3QEm
zu89Jk7IbiAMMHF+33v9p94LxT4mzu8FYnLupoh0M/F86nyxg8XqR1VMPJ+q
FGJ0RNwpm4nz/flVR57WnjnH/G98H8+vNtrXKw4YVCE8v2rLM6nh0lyP8Pwq
vxW/3KelWvTJIdD9qXIXOmn5s5AnkYlwP8Cx8csL85JMth+g0DeSsMP0OcL9
ANeO9I3bXOIQ7ge4sh4e3ZCcg3A/YMPb6s1lRuVs/i/VfF/l6dMxhPN/MY1Z
Vx7yJDsvOy6SvvJj2hQ7L2sZlxRijp3r8Lzs95vWryM2TLPzsuf53r9e83aS
7QsE+mx0udbYwsR9gR9bFQQ/63QycV9gpILPbuBGLxP3BdZJ5DonVPUzcV9A
bf2zQ6STA0zcF0isPtCgta+fmdvTpWWeiY1/7Ycez+t7mHg+10Ln6K01J4qZ
eD6XtFYnXkXsORP3C84KNKguafih/+YX4Hnd1Eeyz05fYyLcN5CcHxT6OVKD
cN/gSVV4imh7PcLzugs7nX508NQgPK/r1/4xXpDrPcJ9BKYqt+7Ob+/YPkJH
xx9y1u0Uto9QnZZBDDaOQbiPINrb8eX9hmSE+wjrZG5Ujn8oQLiPoMQps6t/
9APCfQSd9s1C3f5fEO4jFCjKSAQktbN9BEmrzKoPAcPsvPCV1LbdDk/G2Xnh
9Su3pBaUTrLzwtusPVViGNPsvPAO8vNfi5em2XnhyXajo2LVU+y88Bu+T7Km
5RPsvHDDTuP2rV6jbF+hXFBcx+l2AxP3FRa68jUcXb4zcV9hSfCLk9WKbibu
K/wWfHZ8z8M+Ju4rjH7RFlDaPsDEfQXZ7duL/CUGmLivIJOCulKv9DFxX2Fd
qrczX2g3E88nN3nKv3pa/oGJ55OfhpNCtxe+YeI+Q6nN5sLmGT8mnk+ui1EW
HFt1Ef03vwHPL/8JolzZW12B8PzyzsGeiPF79QjPL1/oqnoQ5V+HHvCuLrDI
7ETigs1mSV9ZCPcj8ry/HFRUfc32I25L735kHBeHcD/il25sXarMc4T7EUqi
XX9FXr5GuB9RZ/+2nSe8DOH+w6rfNREe+8YQ7j9cOyFmHFg6wc5LTzGHS5Nv
TrHz0rHrag4h+2l2XnpJfMAhQ22anZemHjeztuGYYvsSkv4P+nX2NDNxX8Ki
OeDp2dgOJu5LbM3IGKSJ9DJxXyLreXz45cf9TNyXCJO2dyzA1nPcl3DXXx+3
40o/c2uk8a/mWAG4vLF1xR2FXiaez6YXdi1XMipl4vns5E3jnqrbXzJxv2Ll
Gy8Fj8Tr6L/5FXh+uyNyVIhfvgzh+W0LQxRvEV6H8Pz28tPtnw5Y1KP3Z8VT
1nwaQPusblbO0F8i3M9gPR69E/gwBuF+hureK0meghkI9y1umy8QVDdOITz/
rdv3tDJVc5qd/35fnrv01Xqanf8+tz9+PP7CFMJ9jEaVHgEk3cPEfQxSa+l3
l/X9TNzHEKp/tfmP6QBTtP3oZgZJAPgkkgRKWvuZeH78bVmBVLJ+JhPPj2ua
93cfTDdH/+lv4PnxoPatd8aTqhGeH+ey7tZ7+6ceCUVbHzA83Iw0D/LN1J+u
RYGBU1p7Zn4hpZyOgsBTsQj3Px5VGWluVn6B5o2ecths4oDatwKN1xunEJ4/
v6od83nebZqdP6/idmtw459m58+tR/icWx0mEe57KBz2itGb7GdeK485uDuA
H5a9lKrkMBhg5jJODttpCMDXNN/rb0n9TDyvrk5zUcnuiWTieXVK7KKJX5Uv
+k9fBM+vZ1TfOOrNWYhwf6Q4JqpT4EwNwv0R6U4J/YqxeoTn15fi5HqfWNcg
PL9+/xVH92r/9wj3Sz465f9WZeWx/ZKycB7ny7WpbL+km9SgV34lBuF+SYud
8+4b3xIR7pconUnU2eycj3C/5J2tm+HgUjXC/RL+DzPn+ac+I9wv8cpGQZf3
tLP9EoKK3d5364fZ+fnMBblbahfH2fl5O7krd7peTrLz82cux7xW4Jpm5+cN
3WhqFPdpdn4+XuidcsP3KXZ+fkfxlI772AQ7P7/y6JGyoM5Rtn/Sqf3LskK3
non7JyJptYzipDYm7p+I6CkZZn7sYuL+yRWz6MbHF/qYuH9S+tluTbn0ABP3
TyIm1B3OKWD7t//xT1psc0Jqo/uYuH/SIHSJzv+hm8nO6wsVetzrqGHief14
k2OO2y6+Y+J+iu7WvXd5XwUx8by+0ifbVb2nPNF/81XwPL9+ttE6helyhOf5
b+3smNexrEd4nj/iwxtZgfI69Nu017zkXCf6u6pBTPxUMcJ9l5Kd2htyCNls
3+WXsIjUXut4hPsuRZ+ce/TiYhHuu7REdv3Jf52FcN+lKIE0HphfinCf5TRn
m8ctbNzhPktuw/Q7odgJdv2AmoYSLQOnKXb9AIIW9ZKv5TS7fsAOuZPmBQen
2fUD/qgZibxcM8X2XWxDnkuOnP/CxH2XIonTNsI6HUzcd/kayXra2tbDxH0X
1ZVRzoPX+pm475Ik6Lz26OkBJu67DP7SaSdHYPPXlOAe4UgBqCL6jxuY9TLx
egWjy3Zc5D1exsTrFeRf2zKUMJDExP0YJO/BqnS/hv6bH4PXMyDJlBe2rStF
eD2DuRHtUbfddQivZ9A5MxA571+Phl76zuaHDCANT9nYGUYiwv2akD9nDfLt
YxDu1/Sv+CDKGZiOcF9GunduVajgFMLrIWRJVAgE7J5m10MorL4403Vmml0P
wf3PoXKC/xTCfZqr73WkC3q6mbhPc/nN8S8mXP1M3KcRvBZ7S+zoAFP79Zkt
h+f4YeV5seac4X4mXk/hmMxTH1ZrFhOvp8AlkrNrflCL+Z/+DV5f4Qevy34i
ZzXC6yt896JltA7Vo/mECbpc4xfEF1Vo1J5dizLLTcJbM38h+7rLqxM/xSLc
31kt1p+ToRyPQFLvRMVqDrDTJYs+Zk0hvD4DhbAsshDbH+L1GS5R+xm3V0+z
6zNMLHtcNXdvEuG+DrXxUqfOz36mmVOH/n53fjh/79OHX8cHmOr0wqNeqgLw
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
PbNxJhOivMSZB67cSLDnQpSXeG621xf9PB5M8jhnEv1qCly3GXRIs+DD27mK
PtfeccAHlYJxOyc+RD7BY1rxe7H1PIh8gox2XeWY6El4dq/kx9tyokQLRySB
cm8CLCpIC9ipIEbcXKblsXrBJLC6+bPEX0WcMGQ1RxZUcsDATn7PDnUJ4uCG
WwMfjXiAKNBgrlWRJEyHfeab/uBgv+DTpVvyl/VZAPkFOvoSa36qMADyC76H
x/6oTSfv/19+gYuS1WX/OTSA/IKROWoO5zbQAPILXGOPW92eQQc5FzsuPtWk
EJrxar4UHybgNl84+/EFhUjb+sR9PsECnP7yDFEdOQK+NfD4M8XE/XC89S9l
tBrpAPkHW04WvhYnxgDyD0Tlk0ttBVr/q3+AfAOW4Q2PNtE2iHyDmiVnVtQ/
HoKz5yc9f2PcCLTmrjntlzoOVSxMN/U+bwczLBTNNL1pEPkH4Sc7Dj7/yYA7
UxekftGYAntmmDZqcaeh0NYky3crOOBq9/Etqtf58FHN6dBh8joPfbOfFSE8
DZd6HntYb8cHR67nF7lwp6CDC7HJu16MYHkVjNvIckCDmcf9n+3kfmF064nJ
Gh72EYyH6p+lTdEA8hF2e435aS2lAeQjlG4OKD6+kAbqTT5QtodSiILKeenx
aiyw5fU+Sbq4HHEk2/Gn9woWOPUzc2v9TTnCVyNm8vRDBu67A0mnTRe+GQfI
V1jckqYQ+bnr33yFPyGXKqXUW4G44+kR1rsJKFvMMmiAnaCo72NwLJsGkY+Q
E60c9fgoE6K8ycJDOdldMtNQWL+m7NwKNniqNLjE8QofKq8JfXxIjws2Fu9/
u1SeDwsePhvfu0KAEKU2cBakM+H295a2gQfFiaZthzKzPLiAbXF3bflBCYIi
s8aohMYFKK9y5sJX2U2+//IXHjz3yjQkz6PIX+Bu5hkwXWjANv3FBfOtFOLQ
SXeftiwmWBi45c/CH+T1Sul92LaLBdIXb94/x1yOaC84rX/oORNMzH99xL9U
jvgtEfc6nEn7jz4DVTXRIm9WPfYZGrjB42rVvyDyGW4VUatvhvVD5DMkGS7c
eKRuDCKfQTNXYKJ5egIinyESir8ZV6dD5DM8L/hKrgN0iHyGq7cfXmw9z4DI
Z6AGGLovqGRC5DO8KBHRrxCbgshnyOx33pZizoHIZ/i61NDqzwweRD5Dvc8a
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
aN2j75icVKmK1or2tyv8pv+z/g3oPacR
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{428, 461, 411, 3160, 412, 787, 686, 602, 537, 491,
                 462, 413, 788, 687, 603, 538, 492, 463, 414, 415}, {903, 475,
                 450, 447, 448, 449, 811, 710, 626, 561, 515, 487, 831, 730, 
                646, 580, 534, 852, 751, 3163}}], 
               
               PolygonBox[{{430, 429, 425, 797, 696, 612, 547, 501, 472, 821, 
                720, 636, 571, 525, 426, 798, 697, 613, 548, 502, 473, 822, 
                721, 637, 572, 526, 427, 799, 698, 614, 549, 503, 839, 738, 
                654, 588, 474, 823, 722, 638, 3162, 3161, 431, 800, 699, 615, 
                550, 504, 476, 432, 801, 700, 616, 551, 505, 477, 433, 
                434}}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1:eJwl1GmwjQUYB/BzkTX7Vtm1oSzRgmTfje0SEuGSseWSPfs61qGGiolkrzB0
7WuJD8q+9yHZp4gSZaffMz785v88//e8577nvuc9JVJSk/umSyQSIY2VSYnE
KlZwkpuUdLArGymcPpFYrnvbnNWcymfmkfKKbCGflIu5TUd7VTmcg7xqP+H8
JuYZnKW+7oauhDmFDRTSLdNlM1fhIw5QSX9c39g8nTPU0/2jK27uwnqe0S3V
tTZ/ymWa67LKRdyig72yHMZ+KtqPOWe5+X68l72RzCT7MC2uQ/4m68rrXjsx
Pi/9ma8fFdci28picpxMTw8624fKdfJpucT5k2UuBvGNfqx8JLvJVjKL7Msc
8wj5h2wms8gccgBfmf/jXfMb8gnZi6HmfbxiPupvLTPfo7O9oZzKaerY/3b8
C/N12tiLyk6k8ZR9sePJ5tn8TlNdZvk6Q/iZCrojXtfAPIVfqa37S1fE/B7f
UVC3SJfJ/BqD+Yny+sP6axSO7w5rKRCfUZcxvj8MYi/l9If0VykU95M15Ncv
1K1mFzvYziXSxXXSnz2U8dpt+oskxTXQj92UdmyrPn/8j5jIL1TXX0h6/NCU
I5UfKaXfos8Xn5sJnOIt/Xl9C/MnXKJJ3GfdQvO/tLeXlfEw7uJF+2bHV5qT
zN1pZ57HNVrZ88ql3I17Za8lM8rejDefpJr5nPfJKQfytW6MfCi7yuZxnXEv
+YCP41mVF2XjeJ1zJ8nsfMiX+tHypnxHvizHywz0jPeI50n+IF+Qm5yfWw7m
W11Cvk9bczbZj7nmqySb88gl3Invi71mPEOc4E37We/XzDyLCzTSPdAtMN+g
nf0l2Yfved6+0fE25s/5k5a63LJGPG8cp6ruTPzumR+QYm8qZ3Kehvb7jpcx
92Ynz+k26HLFdyL+rxyjSvxG6O9R2t6LHTyrXx/3Ir4T8X/kKJX1p/V3KWXv
yXZKxm+FLo3/AQ4ds3o=
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1Xe8jmUYwPEje+89j1lmCIVKRZHsjKw4oRDHlk1GishO9gqlqTJLlIjS
QMgsoxKKUFT0vT798T2/677fz+u8z/Pc55WYlNy8d4qEhISJfkTL+vGtTqML
raxv6Ic8FKx/0zfpby7IGHOSZuBz8wgtRVVzbT2ly0g252WQub2m4nk+sR6m
JZhBG+sm+qdO0A90oBZmGi9YP6lZmcwe61FahtncYl1O9+qzOl17ak66mlvr
Tf2IZ8zFqG+ur7/rW/E+nrDOyC7zHdxtPq3LGUwH69R8an6Mpua/dB2TSEl5
e/t0Bt1oEOxd1LcZSzXusXdGV8Rnoi2pqGB/v86Ma+ZhqpOail77TmfxFA2p
QRrSko70ZCAjmchMFrJSyfsP6Gy68wh3ko3bvXZQ59CDRtzFvfZ/0lcZQjuy
U9n+IX057jWNqUkd+z/rSobGcycHVex/r3N5Op53XJu9S/oO46jFffZ+0VVx
RuhonYbtcf9pZr6m65kc98E6G1+Zc1LVfFhfid9jzkUvc5s47GyJ69BEmsY9
1D90vL6rA7QQ4+PvQTMxid3WI7U0s6htfb+ejc+uq7WP5mMqw60f17RxfvnM
eriWZCYdrZvrdX1ON+ggLcKL8Xw0O1+bR+utcS1xLvWIzqOXOTe94zzG3zMf
xz2KZ2u+rGuZQFfrzHwR55oHzL/qa/Q15+clRlh30nTsiGughflv3cgUcscZ
tndU55Mc1xJnmjxxXr12TBfEPYn3xzkiL/nITwEKUojCFKEoxUikOCUoGWfc
v3dcF8Zn5dE4Z5SK8+u1E7qIfrSMM0Rd++f09XhucU2UjjNt/wddTH9axVm3
d0Xfi2cRz5V69s7rGkbROX6vvX90E1MpE2fe3o+6JM4ObeP7iK3m1jQ2X9X3
mUg36yx8Gc+AB80X9I34/OYCjI7fp+nZaU6K6zL/q5sZbC4az8vcQ3PEmeEb
6zF6G3PizFjX0pM6VpdqfPnnYQoDrdtpyhT//3+wzXqoFo/vUP4De3mrpw==

               "]], 
              
              LineBox[{137, 68, 99, 41, 69, 42, 43, 44, 45, 46, 47, 48, 49, 
               70, 50}]}, Annotation[#, "Charting`Private`Tag$57213#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV08drFHEYBuDRoNG4BiG2dKPxak2xnWyxG2LFGmNBRBJE7AUUBPvJckns
NfZe/gNbml2wntS1Rk0EBX1+h4f3+96Zye7MZHPKKkrKW0RRFGd6LIoqLSkJ
UXS+ZRTNIJW4roYqOjp2QTeTND7pajnAQc5yiE7Ou+j4LNL5rKujl/6OfQV5
tOawvrP+knk2GXzR1dNbf9e+knwSOaLvor9snkMmX3VDdS/N2yiiQddHd8+8
igLaMF73Xu6hhKPO66q7Yp5LFlPt32Ul3xwfZn9l3s4oSu1/5AkeOt7Xft+8
miXmVhSG5ySbwj2y3JxMW/ME+UGul3tleeiZZF4g/8lNsjo8K9mBrRzzWany
avgsWSoXywQ2k22fJhvlRlkll8kYW8I9uX64fK1fK3fIpTKR0eZ58q88ySPn
9rM/MK9hQHif9ubwDkhiov2j3MdkjrsmTXct/C260agboXtj3skYHuv662rC
92Ag7cLz1Kfrr5vLyOGHbqTurXkXY3miy9PVmtcxKPzv2H+H90mMYntcbpD7
ZYVMYkq4P9dnmG+Y59Odn7qnnOIcp8l0zs3wTujBL90z8vV14f0xmPZU67P0
t8wLyaVJ95wCfX34LgwhmTP6bP1t8yJ60qwr0r0z72YcL3SFuobwTsPv0u/0
P/89dh0=
               "]], 
              LineBox[CompressedData["
1:eJwV00lvjlEYBuDztSISpGpaK9VRDTtDB8oCjamEthKSNoaWDkQkYmFodaus
1IIuSAgxz51r+ANaSgylg41hgURLcb2LK/fz3Oe83+IkX1JpdWFVLITQQ/GE
EK5bZsSH0BwXwi5S+KV7ww2SnLXodpPKsO4tN7nFNW5zh5nutrpTThojuncs
1D+3HyGHBO7qZ+nbzBWk81v3nkX6bvtRcpnEPX2yvt28hwz+6Fbq+s0nWUOp
fVReos/5YnuP+Rh5JLJB91meYTP33Zut6zDvJZMi+3d5jlHnq+wD5gbW8kG3
RPfCfJylbLMPywtMptD+RTZSYx7PFvMOGbhiPigTeeD3UmSn7pCsjN5RjqGW
OfZi+SN6R3le7pcTqeev71fLQf1heUpWynHUsc5eFt2L3lVelgdkAh99my1f
6mqj9zWPZZl5uxyRF5nCRvtXeTZ6I3baY1w1P/Q7qeYucxVZlNh/yib+OS+w
D5lPs55+XY6u11xHPlN5pE/TPzZXM5fAgD5X/8p8guVMo1mfrn8SvTXziDGo
byHD2VP7PuYTx5C+lTa6aKeDTjLdfxa9MQuI55M+T//aXM8KprNJ901u9X/6
D8jIboo=
               "]], 
              
              LineBox[{844, 743, 659, 593, 488, 832, 731, 647, 581, 535, 451, 
               812, 711, 627, 562, 516, 489, 452, 453, 454, 455, 456, 457, 
               458, 459, 813, 712, 628, 563, 517, 490, 833, 732, 648, 582, 
               536, 853, 752, 667, 601, 871, 770, 685, 887, 786, 905, 460}]}, 
             Annotation[#, "Charting`Private`Tag$57213#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1nf8zVUcx/FLyJZKRqhfaBjZiaysklSUWdbPzJatFEpllZE9MstOSIOM
kKaZlZGRvRUJjefnj9fjPc45997v/Z7vuTcpuUvdzikSicTqlInEiFsSiY9T
JxL/pkok+uMeHNEd05XHSrkJ1uh+kJMwXa6CzGkSiTbyMT4VrvC18RPfGe9Z
M1f+j38d98Y8a17S7eOPGj/OV8AquYSxoXxTPgfflb/ArzXvR/4+zJALG3uL
r8pn4dvyTehxuSqdLKfmr9JnUF/3s/woHSl3pF3iWmlvOZlelZ+iM+We9H3v
OY9P4Fn5DeMPhMptaJKcmjaR9/MV+XH879adoBXxtb6kfhjfjM/Jd+Mv8uvM
+4nPh5lyNaTBX/F+2Mx3xUjz5sspMEC+D8d032AUFuhTYqA+H47r1uNnXX7M
0lXHrRitX6i7BYPk/Dih24DNugKYrauBtBijX6RLhTflAvEZXUNT+QB/0vhJ
vhJWy82xUbdFvh9z5CdwmzXt5BN8Olzjn8MWvqyxUXy32B98H74l/UuuRWfJ
H3jNxXFPY13ce2MP0gFyW3p/XB9tJr9ID8qV6Hi5Kz1l/Sm+Ml6Q1xgvRYfL
HWgLORd9RW5OL8Xnph/K31q7lT6Aj/RF9IP5J/ms/Mv8ST49/ubroIF+q1yO
jpY7xWvLSbSvfI0f63U/4dNgcOwtnNadlh/HWjkZm3Tb5AfxsVwTGTBOv0R3
K96O7wNndN9hu+4hzI09jYwYr/9UlxbvyA/hrO57TMBSfTq8qy+Ic/G8YyKW
6dNjiL4QzsfziEmYjOXGMmBoPJu4EHsbO3QFMS/uJTJhiv4zXUYMi+8TF2O/
4hddIczXPR3nC6bqV+gyYbj8MC7pzshVsE5uic26nXJhLJBrx9mA63JdbOO7
Y5p5n8uZMUIuGnvdfWku/8ZfNn42zhZ8I7fC3ca7y5f5LcZ38UWwMD6Psbfj
nOFv59vzp+J55qfwt/E36PNoqNsuP0bHyJ1pj3imaT+5Ff07rp3OlnvFHvR+
X/BZYm/J78W9owPldrRYPFOxh+WX6CG5Mp0g/2HtOVoN6/Wl9SP41nzueO+Y
w281bzf/MBbJz+IO4x3k07HPcTOeHezge2K6NV/G9eF9uTj+1J2Xq2OD3Abb
dHvkolgc37fXfSeeY/5OviN/Jr47/MPXwy98L8yw9is5K0bKJXAl9jdmYqX+
doyKczbO+9hzmIXZmIOP4vcNq8y7A6Pj2Y9zNvYb9uqK4RNdnbhuzNV/rbsT
Y+J7izMr9hd+1RXHEl3duAbM06/WZYuzSn4kzgLdBbkGNsptsUu3Ty6BT+Xn
kQ3z9Wt0d2GsXCb2re6i/EScQXI77Nbtl0tiqfxCrPcddpLP8nfhX74+dvK9
kc/4q/J1foH1a/nsGBfPubFB/KNxfvHJ/GH+cX4if8P8S3HWxX3RbYpriz0o
v8zn4XvyLeif8pN0utyD7rH2AF8qnj95mfFi9N1YS+vF56Wd5ab0nFydTpVf
odnl/+IsRSN5l1yefiD34fPzr8Vn5Bd6r3V8DoyXy8YZabylfCT2rvHLfE18
J7fHXt1BuTSWy/WRAwnrGup2832xKH5r5ZyYIJeLfRr7AL/pHsFnugbIicXx
+6vLhYnxrMc9ifse532c2XEOx2+u8bsxKa4rrjXuLQ7pymCFriFyYal+oy43
JssV4nPiD/kpfM93wAHzDsf9xOdyozi7kMI1NdLt4fthmXnfynkwRa6IjOa0
ko/G/HiW+Vr4IfZj/B/iO/J5+V78Fb4mP4M/6PWO0LJxzum+iPOADpHb08Zy
9vjPJTej5+UadJrcneaWU8Y8uTHdG9dIx8pdYv/KBWj/OLvoTbk2nSP3psu9
/yY+L6YaK6R7k6/EZ+Jb87/zVfhJfDf6P8Baauk=
               "]], 
              
              LineBox[{1356, 1227, 1133, 991, 1507, 1338, 1209, 1115, 1053, 
               949, 1480, 1311, 1182, 1088, 1026, 992, 950, 951, 952, 953, 
               954, 955, 956, 957, 1481, 1312, 1183, 1089, 1027, 993, 1508, 
               1339, 1210, 1116, 1054, 1539, 1371, 1242, 1148, 1574, 1406, 
               1277, 1614, 1446, 1656, 958}]}, 
             Annotation[#, "Charting`Private`Tag$57213#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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

               "]], 
              
              LineBox[{2163, 2021, 1912, 1747, 2313, 2142, 2000, 1891, 1819, 
               1700, 2281, 2110, 1968, 1859, 1787, 1748, 1701, 1702, 1703, 
               1704, 1705, 1706, 1707, 1708, 2282, 2111, 1969, 1860, 1788, 
               1749, 2314, 2143, 2001, 1892, 1820, 2350, 2180, 2038, 1929, 
               2383, 2213, 2071, 2412, 2242, 2442, 1709}]}, 
             Annotation[#, "Charting`Private`Tag$57213#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1HccjlUYxvGXlJ1RJHtF9i6jrBBSpCgzKSKhorQUsrL3poRS9lZGdvae
mZWRFdrK6Hv/8fvc13Xd51nnOefkad25YackiURifNJEYkjKRGJy6kQiKXqn
SiTy47RsDdbKCmCmrDaSY6h8iuwO9OEfwJkYi3WygvhKVgcpMEz+qSwZ+vIF
cFZ2gn8MG/k2WCdbzz+Ir/m6SInh8s9kd6IfXxDnZCf5GtjEt8V62Qa+EGbx
T+CuNInEa/yvdCr8Sj+Lg/TbyKj/Dv8vPcL1U+m70J/Pqtcj3oe+obZGZdlp
vrA6jP/FNafUmqgk+14vj9qPr6u+wt+tdo1vVf/iS6lj+QbqBtdvpAujPD9b
P4f6MV9brRdzrnbkq6lX+OLqKD41fUVthEPxH+QD6W70PfS79H/0SM/4nE6O
T/hCuEm/hDP0ef0f6VrYzLfDRtkmvgjm8E8iDUbJp8lSYEDMAy7EWHwvK4q5
sqeQFqPl02UpMZAvgosxFptlxTBPVj/mCVf5xjhMv4Mxxs3gU2EQXxSX4lqM
xRcxDxgsL4bLsi0Yhy/laTAk5iz+vWxr9GXFMV/WAOkwXj5TlhZD+RIxt7Jt
cY2sBBbInkZ6TJB/Jbsbw/iSuEW/jLPxHfo/0Y9jC98e2+N+fEks5BvG/vCf
OvFX6Qy4Rj+HI7FP9AbR79L30u/RN+hy9ER6ovt9rabDw7LhetnUnvFctRR/
m26DKvy5mP8Yxz+pXnP9z7HO8Ai/VT+v2p9/Qn015kZ9K/aZ+jdfWh3HP63u
cP12uhQW6eWU9aafiX1Ld6avxR7Db/Tz+IF+D5n03+dv0pPcZxadHiPiGUjo
t439Fdfqn6brYBvfATtlO/jSWMw/G2sev/NNcJR+H5ONm81nwEi+TIyRnYn9
ie38a9gl28mXwRK+Ucw5/uCb4hj9AaYYN4fPiFF82Rgj2x1nXJxTcYbEfsNc
Y+7B6Phn+FO2B7tkZbFU1jjmAtPk82T3Ygz/EP6S7Y17y8phmew5ZMZ0+XxZ
JozlH8bfsrPx77CD74h98Uz+ISznn49z0Ny+zv9G3xfvRTfDcbo7ZrhmAZ8Z
4/jySBJnGX+e/kf/HF0PO/l8ep/QnWJv0G/Heaj+E/Otjucbqvvje2KtogL/
jX4utU/8W7UJn1p9g6+u/h77UB3NZ4n5UJvjBF1QPpj+MOaD/oC+RX/hGQvp
+zCer4Ck+u34C/R1/V9i/WMX3xkHZPvi/MW3fFPcH/PJt8BJ+iN8adyieBdM
4CviX9lB7I9vwgpZM2TFTPli2f2xV/lK+E92KM4OLJFnxST5I7ghOxx7OvZD
rNtYa1hqTDZMNuZR3JQdifWFZfLsmCKvHGeQ7AcckFXESlnzOBcwT75clgOf
8lXifJCd55/Cbv51HI1v4ithFd8C2TFf/o0sJz7jq8Y+xQW+PvbQb+BYfGOc
KVjNt0Qa/+BN/g86R6whuiVO0Q/qDaF7xHqku9O36QXu8y2dC1PjHfR60dXo
O+j2dFX1Il9UHRHfoSbhL9IN8Ci/l8+vDog1G+8RZ63aja+lXo99rE6Is0s9
Hv8hro055L/Tz6325V+g09Jd6D/pkvSYmJNYW9HHj3Qh+VC6J52F/pBOYKF7
r1Bz43O96kgWZy1/KdYqLsX5in10F5yI/81Xxhq+VeybWHt8K/xE98Ii41by
eTCNfyzmCZdj/2E/3RUnY43wVbCWfzG+D4vlq2R5MZ2vEe+GU/KjMddYx7dG
HiyRr5blwwy+Ju70LR34y3QxemSsDfV/yRpqVw==
               "]], 
              
              LineBox[{2899, 2773, 2677, 2529, 3036, 2881, 2755, 2659, 2594, 
               2486, 3007, 2852, 2726, 2630, 2565, 2530, 2487, 2488, 2489, 
               2490, 2491, 2492, 2493, 2494, 3008, 2853, 2727, 2631, 2566, 
               2531, 3037, 2882, 2756, 2660, 2595, 3067, 2913, 2787, 2691, 
               3097, 2943, 2817, 3126, 2972, 3156, 2495}]}, 
             Annotation[#, "Charting`Private`Tag$57213#5"]& ], {
             Directive[{
               Opacity[0.2], 
               Hue[0.67, 0.6, 0.6]}], 
             LineBox[{409, 410, 408}], 
             LineBox[{3164, 908, 906}], 
             LineBox[{1658, 1659, 1657}], 
             LineBox[{2444, 2445, 2443}], 
             LineBox[{3158, 3159, 3157}]}}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"Feedforward solution\"", TraditionalForm], 
         PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1a\"", "\"u1a\"", "\"x1a\"", "\"\[Theta]dot1a\"", 
           "\"xdot1a\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, GridBoxItemSize -> 
                 {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1:eJxUvHk8lN//x22GGevYkhaSSCH5FNJieZ8WklRIimSnTVEkWSJlSYqkRaVS
oWTfl3KNnaRsyb7vuxmM3T2/+/G95n7c/dPDw7hc5jrnfc55v57P2WLtaGhH
ZGNj6+NhY/u//98UPN1R98pFM2HrCIc6g4RmFNy2e/WmQuT+2LUNG8ho25Dk
6b6kImh/3R4juURCqxX64dVQBX8fnJdQ+EJCws9En7ScqoNaDXY1GQUSGr2q
fuC+XSPYf1JYa+bHgVorj24/sbUNnJBRn3kjO9K9qpVvt7ULap+LvXy9lh3d
EQjL/RTXA9TtSbyPjIlI+bbBv5ukfpAvcF+KiCUgg3QFWfFng/BI22dwaIwN
LaS7RxjPDMOF34tc6ofZkGu9c2vI8TFIb1j/snz/KpypCDz9qX4CHr/bv8nk
zzJ0osAZ6Q1T4KZzM26D2xKUcZqet7GigfLk9JmS+QVYZ06Q//iJDkRHkcj2
G/OwU7Q7UK56GvwlXMr4Jxgwk11NkBCdhWF5Hvqswiz4/pjjOa/NgJUi8j13
+2koiFdUJIXOgavYc69/+jS4suNAbmLdPKw1KDyeID4JjbzeDR8IizCC3R+w
7hmBuYYaPrZjS2DGTRup5B+ANnbzulj3ZZDnOyR4IbwbFKgY8VTMCjiuT14X
UNkKOy/+p2czsgoaupe4ae/qYWHvqLDlYzYkemurhvyNX5CZUsZXspuACG2P
vq2bL4DtdEqeXB0BnRaMKojSzgKPPqeU1MtElODTs1F0OhVkq5pVaHzsaMwy
b+CmdyZk2VmxGUezo8r3Omaab6mwWGLok3OAA9222K12nlwBr8SOP65r5UCO
6imzuk9rYb2UZbeQCwn92vtRa0q7CaY2eRaT15OR7XSOuU10JyT8TB/fnEJG
DeI7Dy0/7oVNcK5q31FORJWiFSXaD0L/F+J+rmFOFPbY3yn1ziiEFVWMLt7j
Qk3dqlci+SfhZd3LnTHbuFEMbaktZGAKDL5VS+mXc6O21VbdiGd0GFfeZilh
wYOkLq29hYgz0JPiK/+JyIuySkx7lK7NQl7norreG170RZi8teEDA3T+dbDP
7OJDwmXXCg+mzYFi0c+zRnV8SF52r/uNwnlgWNTS/12hoBbLkzuvf1sAM9rH
0IU1/CjGX/76tveLkGhBunG39yO8jF77XVqQjD6stvZLS/2A+3mefJfWkFFY
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
CBxY8+Grw70cZgcYvyjh+R2lswxwPgDyBNZr
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{342, 371, 341, 2787, 343, 756, 654, 564, 486, 425,
                 391, 344, 757, 655, 565, 487, 426, 392, 345, 346, 758, 656, 
                566, 488, 427, 393, 791, 689, 599, 521, 460, 347, 759}}], 
               PolygonBox[CompressedData["
1:eJwNyjcvxWEUwOE/ol2syijRwmZis1xdIhKrhCgD7lWiGyy+g35130G57SMw
uYiFxWLUyzM8Oef83rdyKNoXyQ6CIItZZizTjDPBJLk5QRDzKcyb+5wNIuR5
29dbeXdfsEmUfG8Hehsf7ku2qNLj2jCl3GpTFOiH7nY+3Vc0adfuRep5DgXB
ExlvcxR6P9I7+HLH2aZaT2gjlHGnzRPSj92dfLsT7LDAIkssU+TfiT9d/LiT
7FKjJ7VRyrnXVijWT93d/LpT7FGrp7QxKnjQWrSMfY1GVrUS7czeQ6/9xRw0
/7yFzUf3gLlu9puvZtpbs/3GvkQDMa1OS9v/AacnPcg=
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1:eJwV0bkuhFEAhuHfWCs7hX1KDAodlU5jXxKtRGKfRFRk7ETjHuzG7h6MvaWS
WAZxAW7AM8WTc773TPEnEx6O9k6HgiBII8aMyywbjKQHwZ/HIeeW85cO92bn
Mq+02T9+u+mepN0OO6M80GTHvTe4z/NCq/ak5bgPckWptq59U2OnPuqeRv1I
eyTbHuCSEn1N+6LanuKOBv1QeyDL7ueCYn1VS1JlT3JLRD/Q7sm0+zinSF/R
9rkjQ+vljEJvy9onlfYEN9Tre9ot6XYPpxToS9oHFfY4Cer0Xe2GkN3NCfn6
orZDgjSti2PyvC1o75TbY1xTq29rEfc5nmnRrlN/rHsncXK1mPZGmT3KPxu7
O9w=
                "]], 
               PolygonBox[CompressedData["
1:eJwV0tdvT2EAxvFfW3Fhz8SmtW+oWaODtiFGiJLaq615gZo3RoIQarVF7b/A
7LL/AaN2VYIQI6iiNWLzeS++fZ7ne85J83vPic1anrEsOhKJRKG+P5nIxVIs
QRVau+E9MmIikWw5S16VXWWR6731dbiDBO4i9w3p9gnU4xbbD9HKzsIVxPEH
uQv4ijTuOGL4RXYlWtrzcRmx/AGul74WtzGYO899Qap9DNHcQrufvgmPkMI9
4Fro83AJXbj9XE99DW5hEFfObdWfIt3+bI/UjyLKXmDX6dP0XfI1xuvx8gOm
6BvlbFklk+V9z2TLT3am3C7nyudytGwezkVWy0lyrpwZzlJ2loWez5G19lS5
I/wO+UKOkT1kDSbrq2UFBuplntuiP0GaXWe/1SfqI+SR8PL1HD5Pf4Vxdl+5
AQ+RZN9zfZv+DKPsZnIOLqCTXeB6d30VbmIAV8rVIsU+jH/Itu+iaTgfnEdH
9+ZzJdhsP0ZqOCv7jT5BT5Yz5CH5N5yVazvlS4zl+8j1qESifcf1JuFbRTk6
cPu4YnxEEleEP+H7svfiHD4gkTuI3+GM7T04ixoM5w7gV3h/9m00Du8KZWjv
/+zmuukrcQP9uTPcewyz9+NnOD/7FhqF34ZStAvfFNdVz8V19ONOc9UYahfi
Rzg/uwIN9ekoQVv35nFx+gpcQzx3inuHIXYBvoezsW+iQfiWUYw27t3JnQzf
CRK4fPwHXseHLQ==
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1Hecz3UcwPHrSqWjknWo3EXozrw7mkd1l9UZdy0j0pVskigNRZNKGjSQ
TUWRVTIKGWWk7E3Zq6VB8/l+9MfzXp/P5x73/X2+n8/vcamFvQp6npGQkHCr
H9F/mcdT3EkVi3v0fW6knPl6HU0/apof0plkcr75Sn2VK41/0m6kGe/TD2lg
fErzSTHepk10ol6rv+rjZBgf0zydG5+vf2mBJmps+FO5SZ/WuvqDNtd2WlX3
alOdqtn6u7bUHC2vG7SRvqNX6y/6ELWMD+sssrjA/Et9je6km+/X6bEfUs23
6yQGcGZsz9p8fYb25FLB2kYdw8OxZy609pW+Tg9u4SwSrS/QZ7kr3pN6FInn
+91CfY4ONIzz5mzO4VyKch5JFKN43E+8S3wmJbiIkpSiNGUoS3LcdZxR7MVn
LdLnuTvOi6viXWIvfveZDqaQxnGO8Wzrq3Q4PeP7xcWxP+uf6xDuiXvnmtiH
9dU6gl7cxiXxLtYX6wvcG3cZz7G2ScfSP74z8Q7W1ugb3M/tXGZth07mCS6N
c7G2RF+kI9XMv9Np3Byfab5Zx/EItc2P6Gyui3MyX6tvxhkY/6y9qW58QGdw
vfFpvYNKxjt1Svy98W/6JJnGx7WZfqw5+nfcvVaMu9Olca/6Uty7/qgt9D69
Qr+PPesHWl//0HzNi3fVLXEfOj7OWE/qo9QxPqpzuMH4T82O+zf+Wt/iAWqY
H9SPaEVl8136LgNJie+XtS90KJ3ifahobatO4LHYW3yvrK3Tt+lDa1JJsr5M
X6YzzWkQ30Hr3+hIHqRN3CfFrC/XYXSJ84jzjnOO/XE5VagadxvnRBrpcUfx
TtSkVtxtnAXFPXOFvkJXWsa5kGz9Wx1FX9rG863t1vcYRJb5Cf2EXON/Ev7/
X5qh/wH6rI/Q
               "]]}, Annotation[#, "Charting`Private`Tag$57303#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1FVvFlEUBdDB3d1dH6C4e3ECQYJDgeLu8IAkQHB3tzdcWygFfgBaHBIg
ENzddd2H1XP2npk2/ebmKzVoXJexqaIoau/Ho8xR1MP8nDqKllOTp/IeFtCT
L7oV1OKZvJeF9KI3X/Urqc1zeR+LKJAmio7oepCJC7o+fLN3N1eZdXhh389i
CnrmqK4nmbmo68t3+2rq8lI+QIx7z8njKc0SXSHdMXsvsnBJ148f9jXU45V8
kGruPS9PoAxLdYV1x+29ycplXX9+2tdSn9fyIaq794I8kbIs0xXRJdj7kI0U
XRy/7OtowBv5MMsZwG/dehryVj7CCgbyR7eBRryTj7KSov5Ooq4v2bmia6i7
aZ9BFdrJj83FDHL9r7kx/G/6xmZH87n53rXm9rv2ORwL74ZiuhNyP3JwVRfP
P/smmvBBPk4N916UJ1EuvCtdcd1Je39y0kp+YM7nmuuN5Fv2mVSlvfwkvEcG
hwMqb7Y3pZP9hflR38J+zz6XBLmmfMk+ma72N2Z52tofmQPMReEcmh/C7zbX
eK6EmRTelRlndjZfhc/KzGW2Nh+aceaCcGbN92a8ed3zjc3b4fMxZ5ndzLdm
DB3sT8OZCmfZ/tEc4plU9i32ZnySY+X79nkkyrXky/YpVAhnTldSdyr8H+Tm
hq6J7o59NtUYqkut22pvzmf5BLV1KfJUKoYzqCulS7YPJA83dcNIo98mt+CL
fJL1lNafDp8LebmlG05a/XY5lq9yEnV0V+RpVApnV1dGdyacVTPe7GK+NvNx
2/URjGQCoxjNGNK5b4d7WvJNPsVGwpdXetd2hjPFdzmZTYwjg2u7wvvjh3ya
zZTVnw3vn/zc0Y0no3633Iaf8hnq6q7K06nME9+T/wG8UqyZ
               "]], 
              LineBox[CompressedData["
1:eJwV0jdP1WEUwOEXEBUExS6CCgM2WqKTsuhgoiKWi5i4mGhiV0hMVIqFalz8
BIqFjv0TSL+AjsgCKogQEhcHR+tzhyfnnN/7Hwi52WcqIuVxIYQos8khTDiu
k5QQQmt8CAf45X7HQ3L0Hu0sa5nUbpCst7kP8tvdwyNuUkkV1SzxXbtvivnj
7qWZzXqvdo51fNJqSNE73If46+7jMVv0Pu086XzW9mgT9lp2cEtL1TrtJRy1
fzdPm/+87TOn3KfMJrPM/GH2e9tlH7NXkcsTbavWb79mv2Cu54v9Nku9dbkP
ExjQdmsf7dXk8VTbpg3YL5LBlHaHZXq3+whxDGrPuEuat+exv594hrQWtuuD
7ktkMq3Vslx/4T5GAlGtlVx9yH2ZDXzV6lihv3RHWMCw1kY9K7290kpJZERr
J0+Puq+wkRmtgVX6a/dxFjKqdZCvD7uvsolvWiOr9Tex/z2LeK91UqCPuMvJ
YlZrYo3+1n2CxXzQirRxew35dGmF2qi9gmz2u2fM+8x53+uetNexM/b7cM+b
Dzhp/xn7jZv3fPsfwhNidg==
               "]]}, Annotation[#, "Charting`Private`Tag$57303#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1WW4FVUYhuFNo6B0d3dKd7cgICld0ogSgqRIN0ojoIQigrSCIB2S0l3S
KqB0471+PNf7vc+a2Xvm7DVzMrTpUa97lEgkUjZqJNIhWiSSKEYkMiN6JFII
N/W1qMLt0z9EKszg8nNrzXURA0e4+twpcy9kD8dzibmZ5sK4pbfUr5qHYJ1e
Vd9v7ojU6Kr/J8djpvUC+jpzPcREB/1vORJHrb+vnzb3Dp9pjoEc5o/kQzlL
TpZjZXx0dE4SOYubIIvIvvKFnC3/st5KXtO/kkPlF/INzMfP1qvJA/xk2UkO
lFHxNdLo3eQ9OV1OkKPkW+E7nVswfAZXH/3Nr2Ws8Lcy/xOOxTHHNdDPmPsg
J3rqj+QUdLKeVJ9tLoq/9V9QnTuod0bacD/cO9wv5vcRG8e5zkjGz9GL4R99
PeagC7qiG5KHe7JeHLf1Dfgahfj1XAO8gRNcd6Tg5+olcEf/FXNRmN/ANcSb
OMn1QEp+nl4Sd/WNqMEd0rsgHeZxRbhfzY0QB6e4htzZ8NshV/i9uVThNzKX
wr96a/26+XNs0mvqf4Q9hvSYzxXlNpobI27Yh/ptORqnrTfSz5k/xVBzTOQ2
fywfyy8xzpwAPR2fWn7DTZSlw3nypZwT9rX1NvKGPlUOk8Plm+Ec/Ga9ljwc
fmfZTQ6S0cLfFRn07vJ+eAblxHCd8u1wvnOLyU1cE3xmjoR9F/aLvCPH4Izj
Guvnzf2QB5/oT8J+D/dlPY3+rbkM7ult9ZvhOcBm/V39SLgWZMS3XPFw/eam
eBtnuSbchbDPkTd8D5eWW2Aui/v6FixACX4z9wHi4RzXC+n4hXo5PNC3YiFK
8lu4ZoiP81xvpOcX6eXxUN+GReiDDNYW8xXwSN+OxeiLjNa+4yvisb4D3+FT
9EN/fIYBGIhBGIxMzvveOZXwRN+J71GK38o1RwJc4IYgM79Er4yn+i4sQWl+
G9cCCXGRG4os/A96FTzTd6M2d1TvgUz4gSvDbTe3RCJc4ppyF8NeQL7wHHBZ
uaXmqniu70Ed7lh4hpAZS7my3A5zKyQO7xT9rhyLy9Y/0C+ZB4TPNcdCfnMv
+TTsbwxzXDb9R3O1sN/Mr+QLvp35lnmaHC5HyDhh3+F36+/J4+H5Cs+VHCyj
h/cFsoR7lw/kTDkp7G0ZL+yt8H3OLyd38pNk63CdMgqShHeL/Dc8txhpjos/
ndNMXuYGhms3x0YBc2/5LFxreAYcl11fZq6Ol3r78H8j3AP26nX1E+FZQlYs
48pzu8xtkBRXuObhe8MzjoLhXcDl4Jaba+CVvg/LUYHfzbVFMlzlRiAn/5Ne
E6/1/fgJI5HL2gq+FiI4wK3AKIzGGIzFOIzHBEzEJEzGFHyJ3D5npfPfRRQc
5FbiK+Sxtoqrjag4xK1CRX6P3g7JcY2birz8ar0OouEPbjUqhd9db48UuM5N
Qz5+jf4eouMwV487Gd4nyIY1XGVur7kDUuIG14K7EvYO3kEf/bmcjvHmhOHd
gumO/R8XUyrG
               "]]}, Annotation[#, "Charting`Private`Tag$57303#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1nfcTnUYx/Hbli2lRSWkkpHQsCoNK6tIQ/be2Vu2jKIomrLJyF7ZRGgi
e2WXvXfv64/P6zt+1znnue9zzu+5c9RtVbVlkkQicSJpIjEhRSLxa6pE4klM
TplIlMYt3d+YiN/0+TBF/zJu67ZjEn7X58dU/StIYIf+ou4N/CY3RW5M1v+h
K4Bp8qtIgp36S7o38bvcDI9iiv5PXUH8IL+GpMiSOpFoozvJD8Quc5flavhD
bo48cU1zfXS3+TGYau4v+SlMl8sgGe4y94HuFD8Iu81dkavjT7kFipkZLd+N
x+Lvk/vyCXwpT3PMFr4QZshl8bSZ4XJ6JJfvltvyp/l3+UX8R/Gd8t/zD2KP
81ylb+Eva29Zm8e35IvzY/iuNCttQFfTAfTx+My0n9yBJqG16E+0L/3KegU6
Ve5JH6XN6AY6mP7gulv5p9Fanmm+Kp0ll+ML8yP4DKjHr6Qp9Fn5dvwZfnA8
A/I4+SHsdc5rtAa2WGuFJ/CYmf66pPhanm5uG18Ys+TySIl9+hnxHOqL4Mf4
DEiF/frrurexVW6NvJgZz6auKGbLryM17nHN9rqz/BAcMHdDfgfb5DYoYeZL
+Z54F+TH5QF8MnwT55Kn8Xni73T8DvoM5lh7w9qPfEW+CP8pnxF3yPfKHfhz
/Hv8Yn5oPP/8eL4HfZg2oT/HM0EPOv9N/l20lf82X4POl/vE8yqXjPsqd6P3
0oZ0DR1I88V3TQfKHWlyWpsuo99aqxj3PJ5lNOd/ie/XNXfSZzHXzJv62Xwl
vij/GZ8JaeT75I78eX5YvJvyBDkH/nGeW/Q9bLfWFqWsfy3fF/tF3Ct5UDxD
+E6e7Zhd/HOYJ1dGWtxvrpPuAv8xDpm7LdfEDrkdCmCOfrfuecyXqyAdHnB8
Z91F/hMcNpfQva/bKbdHQczV79EVw4J49pEeR/RJzNfS75I74CnM0+/VFcfC
uP/IgKP6+dinL4FF8T0iI47pF2AhFmG/9ZJYbK0aMuG4Pqnr1dbvljuiEBbr
D+hKYYlcHZmRzWwX3SV+OE6YS6arE3uJ3Cn2ITyp+0iXEmPlJeYO8i9gaewz
eMbMSDkz7pSzy135y3xNfgk/IvZNfiL/CJry6+m/zpecr8u3o3vNvU0XyJ35
F/hv+O70ftqIrqWDaGHr+ehguRNNRevQ5bRf7I3WK9Hpcq/Y62gLupEOoUtd
+x/+RbSJPS++Tzon9h7+WX5UfCZkkR+Uu/FX+E9jr5YnyTnxn3OlkOvx+6x1
wYvyt/IDsQ/J+eUhfGqMk39yzCH+JSyLzx3/U/CQue66q/xnOGkupa6+br/c
Nd4rLNMf1pXGcvmd+F+BU/pU5hvoD8jd4h5huf6I7mWsiP8lsQ/jtH4Fjupf
wcrYb2Lvwxn9SqzCaqzBWhwz9ypWxT2OvQpn9aldt6H+oNw9vkOs0x/XvYbV
8vuxD+Cc/g7zjeLdl3vgOfysP6ErgzVyrXifcV6fxnxj/SG5J57Hev2/urJY
K9eO9xcPm+2hu8aPxAVzaXVNdIflXigW+4BuaOy5GC9vMPcfXw7r5Drxd5n5
PJ4DZJNzyD356/wolJMny7liz3B8OrkpfyTuC7+Q/5B/if8uzoHG/LrYC2Iv
4YfFM0/T0Lp0BZ0Qexo/I46nT9CWdBMdGvuva53ky+OD+D8Q7zidK/eO9yq+
I/qF3IXeRevTVbQ/zW79EdpLbk9vxP2Jd0P+nC/PT+Fzx17hWunlZvxRa71R
Wh4rZ499K/Y4+WM+LSbKGx1ziq+A9XK9eI+Q09yHupv8F7hsLoOuue6Y3Acl
sUl/Wvc6Nsj14/3AFX1G8y30x+W+KIXN+jO6ivhFbhDPAa7Gb9X4TRq/PeP3
ZPxGxFlzlbDRTMO4r7gWv/dwTl8Zm3SN4nvCdX0m122pPyH3iz0KW/TndVWw
WW4cnxE39JnNt4q9Tu4f+wK26i/oquJXuQlyBWZ7627xo3HT3J261rHHyAPi
GUIh3Se6dJgkV4nfXnxetOI302F0m+P/B6i9hz0=
               "]]}, Annotation[#, "Charting`Private`Tag$57303#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1HcYTQUYB+BLyUqEskUlQojszJSRnazKpmnPUshqh0rZq5C9lb33LKEy
y55RCWX0fn+8z/f7fufc545zzs3dqmP9DkkSiUSDpInEkBSJRM1UicT2lIlE
O7Lwu24NQ6nl2A7dy2TlmG4tw6jt2E7dK2TjuG4d7fUX7O9Rhjv4TF9Hv0t+
leyc0K2ng/6i/X3Kcief6+vqd8uvkYOTugG6Oxhrr8sGXUf7H/IHPMkEey6W
ysn4VL6Hb+UX+MJr6tl/kF8nJyPtWVggn3J8oHwn4+xLzNLUk6eaeVkjb3Re
J/mS/CGL5RKUkyeaudnDsvic5tPcJQ8x08Z3Y5p9pVmeg7xon2U+xn422beY
1TnKcO9Z3/xRv918w5xvFuUXHrCPMrPGOSy0rzErcdprB5nJGK9fapahvvyt
mY+18ibndZYvyx9Rnkn2B1kuJ2eonI7p8kt86TXPxfeV25OLM7rNdNH/af+Y
CqTgK30D/U9yB3JzVreFEYxkFKMZw1jGMZ4JTOR5r9/rdR15kHO6rXTV/2X/
hIqkjM+vb6jfJ3fiIc7rttFN/3fcJ1QiFV/rG8U1kDvzMBd0g+MaMsH+XFwD
XXf7lbiuVCY1w3T3MkNuxjfOa2z/We5CHkbbs7FIvuj4e3JyJtqXmWVpIE8z
H2WdvMN5PeR/4hrwnVySp+Izmw/Fb8qKuD/NZzjM3fEMmunjvmemfZVZgUM0
t882C8VnZLN9q1mD35jsfZvEPRafwexqLjCL8Yg8xszOYnmtWTmeSa9530zB
JP1y80mel6eb+Vkv73ReT/lq/G5Uid/L/jAr5TTxfyBnYJbcgile09T+q9yN
vFzSfaBLydf2huzS9bJfi+/P09wTz7H+Bf0BuTv5uKzbzZv66/GePEPaeD70
L8YzKvfgUf7U/cA0XorfUdeT/Pyl+5HpzGAms5jNHJrFdXFeLwrwt24Pc2nu
2BHdmxTkiu4n3tL/G/9fVCUd8/Qt4r9BfovH+Ee3l976/+zDqca98V+hbxnX
VO5NIa7q9vG2/kY8y1QnfVxjfSv97/LbFOaa7kNdKr6xN2K/7h37zXi2qUGG
+Ky6jMyWW7LQea3tx+R3KMJYew6+k687/pGcOu45e2N+1vWx35JH8CyT7XlY
JWeM7yjfxxy5FXPkwmyRF3l9G/m43Cc+g/wEj8vjzJx8L6+L5yh+Y+d/HM8M
u5ji2AqzXNwvNLHPMAvE/wkb7JvNanHd4hnx+r7m7bi3zZHm92apuF+pGfdv
PDfx/8Vq+yazanyH+P3N+5krrzYr0lqeaxZhq7zYe7SVT8h94zvKxSkqjzcf
YIm83qwS94HzPzHTMFXflJlyQTbKvzreT04wyl6L++Na2jMxT24T/zfOa2c/
KfejGDd0B3hXn4TRutpkiu+tf1l3Sn6XJ7ipO8gSXnHstK4/xbmlO8RSXnXs
jG4AJbitO8wyXnPsrG4gJUlwRL+c1x07Zx9EKZJwVL+ClaziDeec1w+mNEn5
Td9fn5Qx9jpkjnvOnpn5ctt45uLeYZu8zXw2no+4jl7/P37WUwk=
               "]]}, 
             Annotation[#, "Charting`Private`Tag$57303#5"]& ]}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"LQR feedback solution\"", TraditionalForm], 
         PlotRange -> {{0., 3.7597552585341827`}, {-4., 4.}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1c\"", "\"u1c\"", "\"x1c\"", "\"\[Theta]dot1c\"", 
           "\"xdot1c\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.866563811624901*^9, {3.8665639123477993`*^9, 3.866564019899522*^9}, 
   3.866564218033375*^9, 3.8665642491104703`*^9, {3.866564280071603*^9, 
   3.8665642976949863`*^9}, {3.8665643646736393`*^9, 3.8665644450900097`*^9}, 
   3.86656838075424*^9, {3.866568418947068*^9, 3.8665684507049465`*^9}, 
   3.866568513209026*^9},
 CellLabel->
  "Out[217]=",ExpressionUUID->"daf8d38c-b0c0-434f-88d7-8307af39ffc1"],

Cell[BoxData["1.8213565959468456`"], "Output",
 CellChangeTimes->{
  3.866563811624901*^9, {3.8665639123477993`*^9, 3.866564019899522*^9}, 
   3.866564218033375*^9, 3.8665642491104703`*^9, {3.866564280071603*^9, 
   3.8665642976949863`*^9}, {3.8665643646736393`*^9, 3.8665644450900097`*^9}, 
   3.86656838075424*^9, {3.866568418947068*^9, 3.8665684507049465`*^9}, 
   3.8665685132640085`*^9},
 CellLabel->
  "Out[218]=",ExpressionUUID->"8f020c60-bf26-4e31-a35d-2bcca0532ea3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["end"], "Input",
 CellChangeTimes->{{3.866564237678116*^9, 3.8665642380479975`*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"58ab3423-bda8-4f86-acee-a113929cb7ac"],

Cell[BoxData["5.956175852203762`"], "Output",
 CellChangeTimes->{3.866564238499852*^9, 3.8665643030432816`*^9, 
  3.866568390033283*^9},
 CellLabel->"Out[56]=",ExpressionUUID->"4afc41d9-c24b-41dd-a5d2-399f2c572af2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"n", " ", "=", " ", "20"}], ";", " ", 
   RowBox[{"\[Tau]", " ", "=", " ", "5"}], ";", " ", 
   RowBox[{"\[Tau]1", " ", "=", " ", 
    RowBox[{"\[Tau]", "*", "1.25"}]}], " ", ";", 
   RowBox[{"order", " ", "=", " ", "5"}], ";", 
   RowBox[{"maxIter", " ", "=", " ", "100"}], ";", 
   RowBox[{"uBound", " ", "=", " ", "2"}], ";", 
   RowBox[{"maxCount", " ", "=", " ", "7"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"M", " ", "=", "5"}], ";"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"(*", 
    RowBox[{
    "M", " ", "is", " ", "the", " ", "no", " ", "of", " ", "times", " ", 
     "the", " ", "solution", " ", "will", " ", "be", " ", "recomputed", " ", 
     "in", " ", "time", " ", "\[Tau]"}], "  ", "*)"}],
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"A1", " ", "=", " ", "0.2"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"A2", " ", "=", " ", "0.2"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{"maxError", " ", "=", " ", "0.01"}],
   FontWeight->"Plain"], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"maxErrorInitial", " ", "=", " ", "1"}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"MyAppend", "[", 
    RowBox[{"f1_", ",", " ", "f2_", ",", " ", "T1_", ",", " ", "dT_"}], "]"}],
    " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "f", "}"}], ",", "\n", "    ", 
     RowBox[{
      RowBox[{
       RowBox[{"f", "[", "t_", "]"}], " ", ":=", " ", 
       RowBox[{"Piecewise", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"f1", "[", "t", "]"}], ",", " ", 
            RowBox[{"0", " ", "<=", " ", "t", " ", "<=", " ", "T1"}]}], "}"}],
           ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"f2", "[", 
             RowBox[{"t", " ", "-", " ", "T1"}], "]"}], ",", " ", 
            RowBox[{"T1", " ", "<=", " ", "t", " ", "<=", " ", 
             RowBox[{"T1", " ", "+", " ", "dT"}]}]}], "}"}]}], "}"}], "]"}]}],
       ";", "\n", "    ", "f"}]}], "]"}]}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotMin", " ", "=", " ", 
    RowBox[{"-", "2"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotMax", " ", "=", " ", "2"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Min", " ", "=", " ", 
    RowBox[{"-", "\[Pi]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Max", " ", "=", " ", "\[Pi]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]dotMin", " ", "=", " ", 
    RowBox[{"-", "2"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{"\[Theta]dotMax", " ", "=", " ", "2"}],
   FontWeight->"Plain"], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"xdotMin", ",", "xdotMax"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Init", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]Min", ",", "\[Theta]Max"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]dotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]dotMin", ",", "\[Theta]dotMax"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "xdotInit", ",", "\[Theta]Init", ",", "\[Theta]dotInit"}], 
     "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"xs", "[", "t_", "]"}], " ", ":=", " ", "0"}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"xdots", "[", "t_", "]"}], " ", ":=", " ", "0"}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"\[Theta]s", "[", "t_", "]"}], " ", ":=", " ", "0"}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"\[Theta]dots", "[", "t_", "]"}], " ", ":=", " ", "0"}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"Js", " ", "=", " ", 
    RowBox[{"{", "}"}]}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"errorInitial", " ", "=", " ", "10"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"initGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"count", " ", "=", " ", "0"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"maxcountAlgo", " ", "=", " ", "10"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"maxJ", " ", "=", " ", 
    RowBox[{
     RowBox[{"uBound", "^", "2"}], "*", "\[Tau]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"TimeTotal", " ", "=", " ", "0"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox["While",
   FontWeight->"Plain"], 
  StyleBox["[",
   FontWeight->"Plain"], 
  RowBox[{
   StyleBox[
    RowBox[{
     RowBox[{"errorInitial", " ", ">", " ", "maxErrorInitial"}], " ", "&&", 
     " ", 
     RowBox[{"count", " ", "<", " ", "maxcountAlgo"}]}],
    FontWeight->"Plain"], 
   StyleBox[",",
    FontWeight->"Plain"], 
   StyleBox["\[IndentingNewLine]",
    FontWeight->"Plain"], 
   RowBox[{
    StyleBox[
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
        "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
        "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "Jff", ",", "K"}], "}"}], 
      "=", 
      RowBox[{"Quiet", "[", 
       RowBox[{"ffCartPendulum", "[", 
        RowBox[{
        "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A1", ",", 
         "order", ",", "maxIter", ",", "maxError", ",", "maxCount", ",", 
         "maxJ", ",", "InitGuess"}], "]"}], "]"}]}],
     FontWeight->"Plain"], 
    StyleBox[";",
     FontWeight->"Plain"], 
    StyleBox[" ",
     FontWeight->"Plain"], 
    StyleBox["\[IndentingNewLine]",
     FontWeight->"Plain"], 
    StyleBox[
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "x1b", ",", "xdot1b", ",", "\[Theta]1b", ",", "\[Theta]dot1b", ",", 
        "u1b", ",", "J", ",", "error", ",", "end"}], "}"}], "=", 
      RowBox[{"Quiet", "[", 
       RowBox[{"testWithFBEventStop", "[", 
        RowBox[{
        "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
         "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A2", ",", 
         "uBound", ",", "K", ",", "errorBound"}], "]"}], "]"}]}],
     FontWeight->"Plain"], 
    StyleBox[";",
     FontWeight->"Plain"], 
    StyleBox["\[IndentingNewLine]",
     FontWeight->"Bold"], 
    StyleBox[
     RowBox[{"ICs", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x1b", "[", "end", "]"}], ",", " ", 
        RowBox[{"xdot1b", "[", "end", "]"}], ",", " ", 
        RowBox[{"\[Theta]1b", "[", "end", "]"}], ",", " ", 
        RowBox[{"\[Theta]dot1b", "[", "end", "]"}]}], "}"}]}],
     FontWeight->"Plain"], 
    StyleBox[";",
     FontWeight->"Plain"], 
    StyleBox["\[IndentingNewLine]",
     FontWeight->"Plain"], 
    StyleBox[
     RowBox[{"errorInitial", " ", "=", " ", 
      RowBox[{"Norm", "[", 
       RowBox[{"ICs", " ", "-", " ", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], "]"}]}],
     FontWeight->"Plain"], 
    StyleBox[";",
     FontWeight->"Plain"], 
    StyleBox["\[IndentingNewLine]",
     FontWeight->"Plain"], 
    StyleBox[
     RowBox[{"initGuess", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Lambda]1ff0", "[", "end", "]"}], ",", 
        RowBox[{"\[Lambda]2ff0", "[", "end", "]"}], ",", 
        RowBox[{"\[Lambda]3ff0", "[", "end", "]"}], ",", 
        RowBox[{"\[Lambda]4ff0", "[", "end", "]"}]}], "}"}]}],
     FontWeight->"Plain"], 
    StyleBox[";",
     FontWeight->"Plain"], 
    StyleBox["\[IndentingNewLine]",
     FontWeight->"Plain"], 
    StyleBox[
     RowBox[{"xs", " ", "=", " ", 
      RowBox[{"MyAppend", "[", 
       RowBox[{
       "xs", ",", " ", "x1b", ",", " ", "TimeTotal", ",", " ", "end"}], 
       "]"}]}],
     FontWeight->"Plain"], 
    StyleBox[";",
     FontWeight->"Plain"], 
    StyleBox["\[IndentingNewLine]",
     FontWeight->"Plain"], 
    StyleBox[
     RowBox[{"xdots", " ", "=", " ", 
      RowBox[{"MyAppend", "[", 
       RowBox[{
       "xdots", ",", " ", "xdot1b", ",", " ", "TimeTotal", ",", " ", "end"}], 
       "]"}]}],
     FontWeight->"Plain"], 
    StyleBox[";",
     FontWeight->"Plain"], 
    StyleBox["\n",
     FontWeight->"Plain"], 
    StyleBox["  ",
     FontWeight->"Plain"], 
    StyleBox[
     RowBox[{"\[Theta]s", " ", "=", " ", 
      RowBox[{"MyAppend", "[", 
       RowBox[{
       "\[Theta]s", ",", " ", "\[Theta]1b", ",", " ", "TimeTotal", ",", " ", 
        "end"}], "]"}]}],
     FontWeight->"Plain"], 
    StyleBox[";",
     FontWeight->"Plain"], 
    StyleBox["\[IndentingNewLine]",
     FontWeight->"Plain"], 
    StyleBox[
     RowBox[{"\[Theta]dots", " ", "=", " ", 
      RowBox[{"MyAppend", "[", 
       RowBox[{
       "\[Theta]dots", ",", " ", "\[Theta]dot1b", ",", " ", "TimeTotal", ",", 
        " ", "end"}], "]"}]}],
     FontWeight->"Plain"], 
    StyleBox[";",
     FontWeight->"Plain"], 
    StyleBox["\[IndentingNewLine]",
     FontWeight->"Plain"], 
    StyleBox[
     RowBox[{"us", " ", "=", " ", 
      RowBox[{"MyAppend", "[", 
       RowBox[{
       "us", ",", " ", "u1b", ",", " ", "TimeTotal", ",", " ", "end"}], 
       "]"}]}],
     FontWeight->"Plain"], 
    StyleBox[";",
     FontWeight->"Plain"], 
    StyleBox["\[IndentingNewLine]",
     FontWeight->"Plain"], 
    StyleBox[
     RowBox[{"Js", " ", "=", " ", 
      RowBox[{"Append", "[", 
       RowBox[{"Js", ",", "J"}], "]"}]}],
     FontWeight->"Plain"], 
    StyleBox[";",
     FontWeight->"Plain"], 
    StyleBox["\[IndentingNewLine]",
     FontWeight->"Plain"], 
    StyleBox[
     RowBox[{"count", " ", "=", " ", 
      RowBox[{"count", " ", "+", " ", "1"}]}],
     FontWeight->"Plain"], 
    StyleBox[";",
     FontWeight->"Plain"], 
    StyleBox["\[IndentingNewLine]",
     FontWeight->"Plain"], 
    StyleBox[
     RowBox[{"TimeTotal", " ", "=", " ", 
      RowBox[{"TimeTotal", " ", "+", " ", "end"}]}],
     FontWeight->"Plain"], 
    StyleBox[";",
     FontWeight->"Plain"], 
    StyleBox["\t",
     FontWeight->"Plain"], 
    StyleBox["\[IndentingNewLine]",
     FontWeight->"Plain"], 
    StyleBox[
     RowBox[{"Print", "[", "count", "]"}],
     FontWeight->"Plain"], 
    StyleBox[";",
     FontWeight->"Plain"], 
    StyleBox["\[IndentingNewLine]",
     FontWeight->"Plain"], 
    StyleBox[
     RowBox[{"Print", "[", "TimeTotal", "]"}],
     FontWeight->"Plain"], 
    StyleBox[";",
     FontWeight->"Plain"]}]}], 
  StyleBox["\t",
   FontWeight->"Plain"], 
  StyleBox["\[IndentingNewLine]",
   FontWeight->"Plain"], 
  StyleBox["]",
   FontWeight->"Plain"]}], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"p1a", " ", "=", " ", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]s", "[", "t", "]"}], ",", " ", 
        RowBox[{"us", "[", "t", "]"}], ",", " ", 
        RowBox[{"xs", "[", "t", "]"}], ",", " ", 
        RowBox[{"\[Theta]dots", "[", "t", "]"}], ",", " ", 
        RowBox[{"xdots", "[", "t", "]"}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"t", ",", " ", "0", ",", " ", "TimeTotal"}], "}"}], ",", " ", 
      RowBox[{"PlotRange", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", " ", "4"}], "}"}]}], ",", " ", 
      RowBox[{"Filling", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{"2", " ", "->", " ", "Axis"}], "}"}]}], ",", " ", 
      RowBox[{"PlotLegends", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1b\>\"", ",", " ", "\"\<u1b\>\"", ",", " ", 
         "\"\<x1b\>\"", ",", " ", "\"\<\[Theta]dot1b\>\"", ",", " ", 
         "\"\<xdot1b\>\""}], "}"}]}], ",", " ", 
      RowBox[{"PlotLabel", " ", "->", " ", "\"\<Test on dynamics\>\""}], ",", 
      " ", 
      RowBox[{"AspectRatio", " ", "->", " ", 
       RowBox[{"1", "/", "3"}]}], ",", " ", 
      RowBox[{"ImageSize", " ", "->", " ", "400"}], ",", " ", 
      RowBox[{"GridLines", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{"None", ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", " ", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"p1b", " ", "=", " ", 
    RowBox[{"ListLinePlot", "[", "Js", "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"Grid", "[", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"p1a", ",", "p1b"}], "}"}], "}"}], "]"}],
  FontWeight->"Plain"], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8636129749443583`*^9, 3.863613015823305*^9}, {
   3.8636130614177456`*^9, 3.863613061548704*^9}, {3.8636131046759324`*^9, 
   3.8636132169600773`*^9}, 3.8636132626354933`*^9, {3.863613317299037*^9, 
   3.863613325712351*^9}, {3.8636133602393255`*^9, 3.86361337832655*^9}, {
   3.8636134419612303`*^9, 3.863613443723667*^9}, {3.863613482179388*^9, 
   3.8636134827971907`*^9}, {3.8636135381195245`*^9, 
   3.8636135797742233`*^9}, {3.8636137397741327`*^9, 3.863613792025447*^9}, {
   3.863613833875084*^9, 3.863613859543887*^9}, {3.8636139070307236`*^9, 
   3.863613990162178*^9}, {3.863614052505271*^9, 3.8636140526672187`*^9}, {
   3.8636142755400505`*^9, 3.863614275735988*^9}, 3.864135358210206*^9, {
   3.8641356231244707`*^9, 3.8641356617179823`*^9}, {3.8641357036993933`*^9, 
   3.8641358101259522`*^9}, {3.8641358445638046`*^9, 
   3.8641358446887646`*^9}, {3.864135959424633*^9, 3.864135969935231*^9}, {
   3.864136047012286*^9, 3.8641360688712134`*^9}, 3.8641361082124805`*^9, {
   3.8641495465703897`*^9, 3.8641497074443254`*^9}, {3.864149799709464*^9, 
   3.8641498203557825`*^9}, 3.864149994860308*^9, {3.8641501178305116`*^9, 
   3.8641502460979977`*^9}, {3.864150355668539*^9, 3.8641503880850477`*^9}, {
   3.8641522848461933`*^9, 3.864152322656956*^9}, {3.864154041279755*^9, 
   3.864154071830866*^9}, 3.865342703619191*^9, 3.865342735583974*^9, {
   3.865342789927601*^9, 3.8653428432655497`*^9}, {3.8653429134781046`*^9, 
   3.8653429645057917`*^9}, {3.86534299882582*^9, 3.8653430048109074`*^9}, {
   3.8653431484289956`*^9, 3.8653432440684214`*^9}, 3.8653432786813564`*^9, {
   3.8654445628110285`*^9, 3.865444854999589*^9}, {3.8654460068932247`*^9, 
   3.8654460262340384`*^9}, {3.865446091527158*^9, 3.8654461690943527`*^9}, 
   3.865446407415139*^9, {3.865446495838863*^9, 3.865446498184112*^9}, {
   3.8654465674349675`*^9, 3.8654465724783535`*^9}, {3.8654466065404625`*^9, 
   3.8654466115468607`*^9}, 3.8654466634402647`*^9, 3.865446720697957*^9, {
   3.8654467597504654`*^9, 3.86544676421404*^9}, {3.8654467999786024`*^9, 
   3.8654468188955517`*^9}, {3.865447093827633*^9, 3.865447120448118*^9}, 
   3.865447150475517*^9, {3.865447183594925*^9, 3.8654471988060617`*^9}, {
   3.8654472349045167`*^9, 3.8654472349734926`*^9}, {3.86544740159221*^9, 
   3.8654474199253473`*^9}, {3.8654474644860983`*^9, 3.86544746739017*^9}, {
   3.865447584859602*^9, 3.865447593586812*^9}, {3.865952499809149*^9, 
   3.8659525292967024`*^9}, {3.8659525819378333`*^9, 
   3.8659525893724527`*^9}, {3.865971536327427*^9, 3.865971615231144*^9}, {
   3.8659716506068087`*^9, 3.8659716545185547`*^9}, {3.865971738635604*^9, 
   3.8659717394583387`*^9}, {3.865971771360116*^9, 3.865971773325487*^9}, 
   3.8659718432830696`*^9, {3.865971878869669*^9, 3.865971881703761*^9}, {
   3.865972099999814*^9, 3.8659721093028316`*^9}, {3.8659724284015865`*^9, 
   3.8659724335579348`*^9}, {3.865972467781967*^9, 3.8659724678729377`*^9}, 
   3.865972527892706*^9, {3.865972575741376*^9, 3.8659725758223476`*^9}, {
   3.8659727852052574`*^9, 3.8659727853102245`*^9}, 3.8659729110299406`*^9, {
   3.865973909258086*^9, 3.865973915857973*^9}, {3.866046878808134*^9, 
   3.866046926929607*^9}, {3.866558599295118*^9, 3.8665586344949017`*^9}, {
   3.866559033422757*^9, 3.8665590556406784`*^9}, {3.8665590875774975`*^9, 
   3.866559159857463*^9}, 3.8665592149938903`*^9, {3.8665592586919622`*^9, 
   3.8665592839419146`*^9}, {3.8665593600396614`*^9, 
   3.8665594066128187`*^9}, {3.866559444230831*^9, 3.8665595123061333`*^9}},
 Background->RGBColor[1, 1, 0.85],
 CellLabel->
  "In[1038]:=",ExpressionUUID->"db685101-cfd9-44ab-b625-6cbe825f64b7"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction", "dmval", 
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", \\\"6.25`\\\", \\\"}\\\"}]\\) \
lies outside the range of data in the interpolating function. Extrapolation \
will be used.\"", 2, 1067, 90, 17545095697018498346, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.86655924031082*^9, 3.8665593173452682`*^9, {3.8665593837571025`*^9, 
   3.866559408267291*^9}, {3.866559445449441*^9, 3.866559513626712*^9}},
 CellLabel->
  "During evaluation of \
In[1038]:=",ExpressionUUID->"7b7a2d2a-4d34-4d9f-b6a1-4c92ee8e191a"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction", "dmval", 
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", \\\"6.25`\\\", \\\"}\\\"}]\\) \
lies outside the range of data in the interpolating function. Extrapolation \
will be used.\"", 2, 1067, 91, 17545095697018498346, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.86655924031082*^9, 3.8665593173452682`*^9, {3.8665593837571025`*^9, 
   3.866559408267291*^9}, {3.866559445449441*^9, 3.8665595136347094`*^9}},
 CellLabel->
  "During evaluation of \
In[1038]:=",ExpressionUUID->"649ebc2a-17a0-44cc-9ed6-a83017f91885"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction", "dmval", 
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", \\\"6.25`\\\", \\\"}\\\"}]\\) \
lies outside the range of data in the interpolating function. Extrapolation \
will be used.\"", 2, 1067, 92, 17545095697018498346, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.86655924031082*^9, 3.8665593173452682`*^9, {3.8665593837571025`*^9, 
   3.866559408267291*^9}, {3.866559445449441*^9, 3.866559513657702*^9}},
 CellLabel->
  "During evaluation of \
In[1038]:=",ExpressionUUID->"070a2062-1840-44af-a2c2-420f2d82b4e6"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"InterpolatingFunction\\\
\", \\\"::\\\", \\\"dmval\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 1067, 93, 17545095697018498346, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.86655924031082*^9, 3.8665593173452682`*^9, {3.8665593837571025`*^9, 
   3.866559408267291*^9}, {3.866559445449441*^9, 3.8665595136806946`*^9}},
 CellLabel->
  "During evaluation of \
In[1038]:=",ExpressionUUID->"a1e4e4c4-f9c4-481f-b2ce-611b116f5e0c"],

Cell[CellGroupData[{

Cell[BoxData["1"], "Print",
 CellChangeTimes->{
  3.866559240857646*^9, 3.8665593215599256`*^9, {3.8665593838310795`*^9, 
   3.866559408342267*^9}, {3.8665594455234165`*^9, 3.866559513701688*^9}},
 CellLabel->
  "During evaluation of \
In[1038]:=",ExpressionUUID->"54817be3-e084-44cb-ab4c-22a5769247d9"],

Cell[BoxData["6.25`"], "Print",
 CellChangeTimes->{
  3.866559240857646*^9, 3.8665593215599256`*^9, {3.8665593838310795`*^9, 
   3.866559408342267*^9}, {3.8665594455234165`*^9, 3.866559513704687*^9}},
 CellLabel->
  "During evaluation of \
In[1038]:=",ExpressionUUID->"7a000bf0-08f8-4bbc-b136-e779b32325e2"]
}, Open  ]],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
PN14PZEYNHrXnQUOBY8WHvQgw6tnWs6FD1NA9UeOkPDQfmDo/6SH5yYNqzBj
NWb95YT/+o/WaPKygYifz6sgOT6ofIPPIeMu3k9Wy0fOxJJg/ErP9BL8vGk+
3f4grYQMw2SuqViMUIDO9B5hUd8+sO38t2qNEBrWmOZi+yqPC3aJeO4Xwu+X
ktJmntBZPmjaGPlj120m0Dy8rXPEiwT16tMwjjAW4LQd2DoSQ4Z3eCLsHuH3
34w/cTm3vwekxlr9VLlNw0ZPRFQOHuaCphYaJ9+psMHVmo0Kca58cN/Sqy+/
8ffnooW2DscXEtyatbJ6NogFjoQ94iSb4s+z3PZbZhcFkKI+n++c7wXc4uJP
FPD+KSPGVdIkkgu+eTnqpILXj8GHNI1Pt/NBgXViZ8/h/V8l9ZmX9W0S5FDv
93iEfz+Cj6/ZHajSfjsZE12k2/EGkyGttcTiBF6/K+3RYQif44OLN1q41+Gf
r0WobNwjE+8XZd4OJ+GfrySvUc6/ngwDEk8f2jRIAYFG+Lpd0w8+P+b+sc2H
hs3l3k3vaMffR2tVyYgjbPDD493RO09J0P6TuK87fr+H27t/fcskQ5G9T1Sf
4D9Ply6iydv1B7wzrMuOeEDD/N5TSx7oc8FIbleHAwZsEGg7+HhvNN7vmZMa
FvB6tCu9Lf3xdxJUsCv58tTv/39/kx6ebEuGKZW5VyKoFEDw+drFlMTc+9mI
z3e1sx9XTnRCPshb3tqlnc8a0fxUn1HF4VztXozwQW7WGH1dKUbFCB+k91MZ
t7/4+0v4IH9etPz+mUVF81ZNGm76h3X0Ix9kv8CtVq65HuRrjFjjfZvEmkK8
vdTXu1jC9XlA+BoHc9dKrlizDEb3baykmHHBxrRL5ZFGbFDz26om/hY3rMpy
NDnyZBncagyzNPNYCUfcQyZ+aiwin6N838Fi9+xp5HM8tMLm7k/1SeRz1H7i
MnXB7C/yOYq7s60jMsaQz1GoyKlD8icL+Rwf7LdlHMlnIp9j7U2t3R34/Sf4
fIGNAay4GCbyOX4X7uy/spEF+AOlaw6ew9fL+thiKx8WmPkwOP6gkQQbOotK
Wfif5VpONW66KAgPxTgOj75hAmL+a+s7J9Mf6cOA4PtJWP/1f9RBQPD9x8l5
nMcT+5Avcixifk+vdgvi+y9wT5WfZr9CfL9grPtsQEQYRvD9/6T53zS6hCN/
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

          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{563, 3239, 3237, 562, 976, 863, 770, 696, 639, 
                601, 995, 882, 789, 715, 658, 1013, 900, 807, 733, 1032, 920, 
                827, 1051, 940, 1069}}], 
               
               PolygonBox[{{3236, 3235, 549, 550, 551, 552, 967, 854, 760, 
                686, 629, 591, 993, 880, 787, 713, 1023, 911, 818, 656, 1012, 
                899, 806, 1043, 931, 732, 1031, 919, 1061, 826, 939, 553, 761,
                 687, 906, 813, 1046, 934, 1066}}], 
               PolygonBox[CompressedData["
1:eJwV0MtTzXEcBuBvatLlJClkYSpmXMZMbRqmiK4oO/8A3bHQRnZqQZcZNkab
FHVihjVRdKE/IG10W9PdbaUFi57f4pn3fT/fmTPnnIKGtqu3d4UQEhhjJBZC
nGuOJXxNDKGRZCbt+6Twxq7gm97PdUqZd2tiN1P2A1J5a1fyXX9KPWdJI51R
b1Ws6AM0cI4Y79yrWdUHaaSMDN6717CmP6OJ8+xhzP0i6/pzmrlAJnsZ93aJ
DX2IFspZcGsmhWm7iyw+2JfZ1IdpZcW+w0Fm7QoW9RZS+WR380u/Rz4LdmJS
CE/00+yzP8patqL/y1u/Htf/yi5OkOP+Ut5wX5Xt5Lnlykw5JI/LL94T5GP7
qCyWufK1PCUrvS/prRy202S6HJDH5Gfv//SHHLELo98nX8keb79lBwVkucfl
onuS3qefIduekHX80EfY1rs5yU17Td7lEHN2FcvR74u+DzGfNyhn3P/LRxTR
a/+RndH3Y8nOYVK/wk/9BbeoZj8H2AEfn1aJ
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{514, 3238, 3233, 664, 738, 832, 945, 519, 642, 
                699, 773, 866, 979, 568, 606, 663, 737, 831, 944, 518, 641, 
                698, 772, 865, 978, 567, 605, 662, 736, 830, 943, 517, 566, 
                604, 661, 735, 829, 942, 516, 565, 603, 660, 734, 828, 941, 
                515, 640, 697, 771, 864, 977, 564, 819, 912, 1024, 716, 926, 
                1038, 790, 1054, 883, 996, 602, 659}}], 
               
               PolygonBox[{{3236, 3237, 600, 638, 695, 769, 862, 975, 561, 
                599, 637, 694, 768, 861, 974, 560, 598, 636, 693, 767, 860, 
                973, 559, 597, 635, 692, 766, 859, 972, 558, 596, 634, 691, 
                765, 858, 971, 557, 595, 633, 690, 764, 857, 970, 556, 594, 
                632, 689, 763, 856, 969, 555, 593, 631, 688, 762, 855, 968, 
                554, 657, 714, 788, 881, 994, 592, 725, 799, 892, 1005, 
                630}}], 
               PolygonBox[CompressedData["
1:eJwV0sdOVGEYBuBfLAszSEmMwgCKjoltoQsSvQDsFfQG3CnNltg26kYRGBMT
XZiYGBQBkTuwApalbQMourRFBBRLovH5Fk/e9/3PJDPnzKne11LXXJBSmsFd
OjMp3SDncClL2MFR+vnJ3pkpPaFa384R7jDNHuePWaxv4zB9/KDe+RCL9Is8
o9Ru4T1b7UPc5jt1zgap0vM8pcRu5h1b7NdU6af4wkF7tWzlD732FLv1ASr1
9fIKc2alNGov088yRYe9Vub5F/dpX5OFPlssmxhjc3yPs169TNbInLwkC+Qr
15fL63axrIxnIk/Kz3HPrq+wu/T5clU8T3le/qbH9atyrrNJvULush9REc9I
ljtbJy8zWx9x3qmX6jl5hknana+Je+Nv/D92kWzkLZvsl/Ed+gk+xTO2V8pz
/KLbnmCn/pCsPhzviH6aCdrsIebpDbxho/2CrH6cj/EM7Vt8i3fLfhD3ol9g
kEL7AKNssJ9Trh/jQ/xuu4vxeP/s+/Ef6K0MkLH3M0Kt3cBNvsY76eweC/UF
/AfpV1+9
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1WWgFVUYBdBHh9LdHUo3SINISHcpHZISAip2gEEoJqKUhaRId3d3p4Gi
qKAimOvTH4u9v/Med+7MOQMFeg5tPSRRQkJCosTIR/2RmissMe+X3bnJI+YV
sjHXuGE+K+MD7tdny4qc04/JfkzXt8r2/10kIaGCeE0WZI8+gfV6S27rvVio
1+E7fS6+WsJj5jtYqo+iKR+aK3Fen0FFXjcXYq8+kd4k4XFrd7JMH00zKpGU
ZCQnBWP9ThqW62NoTmWmWCvMPn0SfUjJE9bSsiKeHS2owhvWirBfn0xfUvGk
tXSsjHuiJR+ZK3NBn0lV3jQX5UA8L/qRmqespWdV3BOt+NhchYv6LKrxlrkY
B+OZsEFvxR96fxbpdbmqn5QDmKfvlJ1JGs/b/LTMwGr9gOzBWH2lbMKP/GI+
J4fSWv9EVuV7LpmPy/5xbWabt8kO8fdIxJdxtvibe/z8bVk89p9D5sOyN7eY
Yt4Y1+E6f5ovyuE8pH8u68W19VNyIPP1XbILyeIcmJ+RGVkTe8iqOMP8qrfh
U70al+OcUZ13zHdxOPaXASw21+cHfQFpeNacibWx37RlTtxb3GvsNzV413w3
R2K/GUhanrOWmXWx37SjJlOtleBo7C+DSMfz1rKwPvaL9tTiPWslORbPlMGk
5wVrWdkQz4EO1CYDL1rPxsa4DzpSh4xkIjNZyEo2spODnOQiN3nISz7yU4CC
FKIw43x+djbFvdKJuhRhvPUcbI77ojP1mGatFMdjHxhCUV6ylpMtcV904TNz
db6Kd4P6vG8uzYl47gzlC/O9XNMXUoyXzbnYGs+C1XpTftO7Mlevwddxztmu
dyRxfJb5A1mGk/oR2Yep+ibZhr/0S3IED+tLZIN4j/TTchCL9N2ya1yX5HE9
RhP/GBYXr+i5+ZZt5oOyJ78zzrxGNuMnbprPx/Xi+jxgnidr8k2cdRow3VyW
U3F22Ky3jfdSH8ZS/b74zHjP2BOfRYp4L8yvyjxs1w/JXozX18rm/Bzfz3xB
DuNBfb6sFe8PV8wn4j2O95o55h2yU7yXJIk9ZRT/xHfx8xmyHFc5bT4q+3Kb
aeYtsh034u+YL8uRDNeXyYbxvfQzcjCL9b3x3UgZ76d5gszLjjhvrNNbcEvv
xgK9duxFnD0aMtNcnjNx9hhBCSZay8fOOGt0pxElmWQ9P7tif+lBY0pRmjKU
pRyT/V4BdsdzpydNmGWtAmfjLDKS5eZGXI8zzz69G6li/xmT6P///8v72b+w
oAHL
               "]]}, Annotation[#, "Charting`Private`Tag$171854#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1mWUVVUABeDH0C1KI53SJd0hrUg3SKooSHcpoIgiSqcSUkp3p3SHpLRB
dwiCfmf541t773NnhvfuuzOLjK071+kULRKJFIiKRKIYQxOuRo9EupEuRiSS
XCaS0+V+1yL6aL0Qhe0jshXRWWsPJjoL7VKc18fSlDeJwSLnpbmgj6MZRYjJ
YudluKiPpzlFOersPWKwzh5CLJbYZbmkT6AFxTjmrDUxWW9/SmyW2uW4rE9k
RoJIpKUsznHnbYjFBvsz4rDMLs8VfRKtKMEJZ22JzUZ7KHFZblfgqj6Z9yhJ
POKzwrWK/K5PoTWlSMBK55X4Q59KG0qTkFXOK/OnPo22lCERq52/xV/6dNpR
lsS8whrXqnBN/572lONXZ+2IwyZ7GElYa1fluv4DHfjd7k4KDtjlOam3Jy6b
7eHc1geQgV/D8+CZGaMX4VV7nazGjXC/XJukz9Afy2HkIKnz2fJ953/IHqR3
llImlt/L7PKg69Hkt3ZmWVimlPNkLlnB9VN6B9La8WR8OUVmk1tcf66PJJOd
N7w/OVd+7todOZCMJHE+Q54Mz7E+Vi/Ka/Z6WZ2b+kye6MN5gw/sP2VPUnHI
rsjp8P7C6yGBnzdVbnX+j/yKfHxh35WDwuvjlJ2UDXoNbumz+JBKJCN5eA2e
6xQyJRt9XU1u67PpSGXOhNcW/m222SNIxSa7Fnf0H/mIv+xepOaw/RZn9Q9J
yHb7S1Kz2X6bu/ocPuaa3Zs0HLGrcE7vGP6+sMMeyT19cPgsOW2nYYv+Dvf0
uTwNnw056WRfl314naN2VX7TPwrPCr/YL+TX5A/31r4vh5AlPJPu/Ux5xnlM
fZxeLLxXfUH4uc63ytqhO7sffpflZHue/nf4nMIz4iyXTCZ/DJ+97Oz6Db1v
+H2w08pX5A/hOZfHXI+S34XXIt8Mz4icL3PLaq6f1z8O3xfutbNpcqfzl3IU
BcJ7sx/IT8nKWTuWrx2vFw/Pvr1NvssDfT7P9BHh3+ET+6bsRzqO29W5EO5x
ePbZZY8iHdvtOjzUF9CFGlx01jncU3bb35CeHXZdHuk/0ZWaZOAX5/V4rP9M
N2qRkZ3O6/NEX0h33iYTmckSnn/PelaZjezkYJfvacBTfRE9eIdL4b2G31n2
2P/KbyjIaPuh/Ixs4Wvcv1nynPPY+oRwb2UJ+VP4fMNnz+Lw7Nt5SO76nPBs
hr9fXldP127Z/UnPCbs2l/UuJGWv/S052W035Jm+hF68Sy72OG/Ec30pvalD
bvY6b8w/+jL6UJc87HPehBf6cvpSj7zsd96Ul/oK+lGffBxw3ox/9ZX0pwH5
Oei8ORFW2QNoGPX//yUOOWtBNFbbA2kU/pa4HwXlYectiWKNPYjGXLG7ht8f
9tnf8UgfSnZ+s+O4rxP1kqTRfw73XRZy7T9HiA4f
               "]]}, Annotation[#, "Charting`Private`Tag$171854#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1GWYlVUUgNFLN0iDCEhLd5c0SLekkkqD0iFhEiqtNBIC0kq3NCjdKV2i
dAu4zo/17P2e75u5NXcytO5Wr2uUSCSSO2okkid6JHIkRiTSkqoxI5FXuqC5
Sdc3f9PpzAW6plnNLGvuNT9zLbZ9nL0gxe3bzRvOc9hX2hvyob5nDuQtDunM
ri+112aqTq5n2t/lkc7LUfsHvLavYDBx3DfeWSFu6lbctw8iLYf1NPJxLDw2
EVbqIbQmPwXC66QQhSnCcfe1Igqr9FDaUJQTzloTldV6GG15EN4H0nFET6cY
J3UborFGf047HurBpOeonkFxTum2RGet/oK4XusEXZhbuj2P7EN4m2N6Jinc
95Mux2NdgtP2dsRgnU7vnl/s7/Gljqcn2ovwt86pV9kb8ZF+bA4lA0Vd22oe
d57Fvix8bmYds7y5z2wcnoPrKc1ZurpZ3ixl7gp/B+aT8Lma63Rds6lZyTxo
NjFLun7G3p5qOmb4nM3N5nrX3rYvDL87/J3Y/zC/ch7f/kN4npSw7zBvO89l
Xx2eGx/rJ+YwMnJCZ3V9eXguzNKp9Gx7BZ7qUpwN7wex2KC/JoH7ftTF+Ed3
4Kn9czJxUs+mNOfCYxObjfobOvJMf0FmTuk5lOG87kAcNunhdOJ5+NzIwmk9
l7L8pTsSl816BJ15l3KUpwIVueCeTsRjix5JFypx0Vln4vO7HkVXXoT3mKyc
0T9TmUu6CwnYqr+lG//pr8nGWT2PKlzWXUnINv0dCb2Pk8L/Df7V3Xlp/4Z3
OKfnU5UruhuJ2K6/J5Gfnxw+c+7oHryyDyc753U29/xqr8cCnVrPsVfkma7G
VXt33mCHzuCeRfYajNZv6Cn2koF9p3nXeW77Gvv74ffZD5ifOH9tjgjfNWc5
wt+Juc1sYP7l+jvh/6quY9YPf2/m/vB7wnfU9TfNueHxzUpmaXN3+G6az8P/
NnN9eE1mM7OyeSg8nmvXzB4kprDzLeZO5xnti+01GaMT66nh+8k9nUevDd9D
PtURPdKekwt6IWmc/Rwejxe6OtfDayYJu/RYkrhvWnje3Nc9ieJslM7FRb2I
GtwIj0dSdutx9KImN531JBl79Hh6U4va1KEu9bjlnl4kZ6+eQB+ietxvneXm
kl5Mff7WvUnBH3oifYnm/u+c5eGyXkIDbus+pORP/QNJ3Ttdl+GB7kd0Z9/r
vFzR2fWK8NmzVL+l59mrhJ+z7zH/c57fvsHenIb6H7MvqSji2u/mPueZ7Evs
tcxaZjnzT/NH15LZZ9jL8lD3J4az0TofV/UyGvGv7kdq9utJDCCm+8c4y881
vZzG3NH9eZMDejIDeZ8mNKUZzWlBS+66dwBpOKinMIhYHmOsswJc17+S1tl8
XZWXuoDeaG8R3iv7YbOp+YFr/wPW3hdQ
               "]]}, Annotation[#, "Charting`Private`Tag$171854#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1nfcjmUYxvFHyt6rQmYyiqySFe1CCyVZZY+yyd6rZETIFmWviqxQKUkR
lU1GdtlbRt/zj9/nPI7fdd287/Pc93W/eRu2qd46SSKRqJ00kaiTLJHYlCKR
SIMOyROJJFjKDcMlrjQmcoWxj6uLzVxadOTuwNfccFzmHsEkrgj+4urhNy4d
OnFJsYy7N2Ui8Qa3Vn8RI7gr+qOYrD+I/dzD9rXmtumNUJ/boqdHZ/1OVLKn
l35EXm49u15b/1Z/Ca/pH+v/ySOtX5XLYIr+EKpYf18/Kx+wXlxvo2/XO8tL
5cbxf8uT5TsxRP7JbGD/VjMDhnPv2dfU/FyfYd6lVzZ76+PNo3p3c6U+11zh
+hzmm/po8zvr7czF+izzZf11c0z8vOYNfYC5Tv/ItdfMxzCVf4efJxeVq8of
yOfkg/aV0NvqO/QmeIv7Xc+ILnoyrORy2leH+15/BaO463pZTNOL4RD3Nv7g
MqErlxyruNFoiD/5zOjGp8A33MdohMZogqZohuZogZZohW2uy4LurkuJ1dwY
/MeVw6fcw/ibewfbuazowaXCGu4+v0ddbp3+KsZyN/TymK4Xx2GupH3tuJ3x
veFdboeeDT311HjCnj76MXmt9Vx6Pf0HvTpq6WP1m/I46zflCvH9x79nbb5c
Qq4mD5XPy0fsK6W313fp78lfy83kBvKU+D3j/jHfNzeYX8Sz4Lqd8t0YEfe9
/c3MmfpnZhr9SbOvPsE8rvcwV+nzzG9dn9usr39s/mi9vfmFXkN+Qx4n35IH
yj/In7jmllkx/g++ZDyz1j7UL8hHrZfWO+i79eZow+3S70FvPS2+48bjNvc4
PudK4RjXFru5e9GHS4fvuQloh/bYYy07+lpLj3XcRHTAXj4H+vEZ8AM3CQk/
VyV+Jlcax7mO2MflRH8uI37kJiOJ/ZXj2eMewQmuE/7i7sMALhPWc3nsbcCt
12tiCncH9wQ3W38UJ7nO2M/lwkAuM37i8tr7FvdTnFGYyiXlnuTm6GXi/NKH
6Rflf6w/onfU9+gt4r7hDui5MUjPgqfs6aefkDdYz6e/rW+IswS19U/02/I0
63fqT8V5pLeWF8SZIr8sD5cvyX3j3pH/tf9RuZM8ztxrrYu5LH5ms2WcLebU
eM7MZOYH5s/ml2YX1x+U82CkPjjuF3NW3A9mVv1ps3+8d8yTek/zG/1n1+aX
G0bmO8hfyrXkN+XxciKeG/vu0p+Oe95a2TjL9BH6ZfmU9TJ6Z32f3gpduUN6
3jjb9WzYyE1HMnuf4edz5XCa64a/uXzxfHJ34xfufnsbcRvjWcIMLjn3LLdA
L48z3GPxruD+inMbb+vT9ORx7lk/bOaPzy6+Z2uz41mSn5EHyP/IveTV8q/2
F5Aby2PMX6x1NL/Sa8t15AnxjjCTxH0Sz725yPzMtSnM5+J9Yi6MZzdmPDNm
hTg/zZH6ZPOK3i/eU/pC86zry8b3GueEuT8+S3O5/q7cUP5UToGh8sY4p11z
xLw/nD0t+Tnx7MvPygPjPpM32feA3iR+x/iOUVefqN8R94v1lPrz8btYqxjn
sf6RflU+Z72c3lU/EPd23EvcUb0APtSzYzNX0L6m3Kb4vDCTS8W9wC3WH8d5
rheOcQ9gGJcDv3GF7G3GbY6fEbO41FyVOLf1SrjA9cZxriCGczmxhZuNNPZX
jeeEq4yLXB+c4ArFec/dh63cHKS1vxr/VbyjcInri5Nc4Xi+uFz4nZuLdPa/
yC+JdwQuc/3wD1ckvn8uN56zb5B+Su4tr4l73/zD3sJmc/03a/Uwj0vPvcQt
jbMHV7j++Jd7EKO4PPiTm48M8XcN/3U867jKDcAp7iGM5vJiG7cAGe1/hV8W
9z+ucQNxmisa7zEuH7ZzC5HJ/lf55XE/4To3CGe4YvGMcPmxgytibwtui14f
i7jMXHVuRXwW+I8bjLPcwxjL3Y+d3INx5nFb9QZYzGXhanAr9edxgyvPdeMO
xvOFIdw5vXico3qB2BvnoX5a3mX9Ib2V/nucqfiCy8rV5FbpL6CGPkq/Jt+0
XkHvrh/Su8kr5LZyI3m6nDLu+zgj4tyy/7xZIp7dOAf5uXFvx78tD5EnmWf0
PubaOMPM3a4rar4Tn0XcF9Y7mUv02fGuiXvDnKRPM5Oag8318SzFme36bOZr
cW/E2W5/W3ORXkWuKY+Wr8v95e/lW66pKPeQ/+bbobE+Q08V56T1C2ZJjLdW
EHu4Yva8y/0ZZxG+4u7mXudW61VxmxuKi1wpTOAKYS+3BPfYX4tfw1VDIs4D
rid3WG6PJnGW6qnjXJB/jecy/kZy/f959cjA
               "]]}, Annotation[#, "Charting`Private`Tag$171854#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
XFdeyD+HbvweOokecc3/AXCmk8w=
               "]]}, 
             Annotation[#, "Charting`Private`Tag$171854#5"]& ]}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"Test on dynamics\"", TraditionalForm], 
         PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1b\"", "\"u1b\"", "\"x1b\"", "\"\[Theta]dot1b\"", 
           "\"xdot1b\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 6.4030785664046235`}, {1., 
          6.4030785664046235`}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 1}, {0, 12.806157132809247`}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.866559244128604*^9, 3.866559324577963*^9, {3.8665593843659086`*^9, 
   3.866559408881095*^9}, 3.866559446041252*^9, {3.866559492784354*^9, 
   3.866559514243515*^9}},
 CellLabel->
  "Out[1070]=",ExpressionUUID->"1d8d9c11-c438-4b0f-b3ce-cb3435d249dc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["errorInitial"], "Input",
 CellChangeTimes->{{3.866559461154437*^9, 3.8665594655130463`*^9}},
 CellLabel->
  "In[971]:=",ExpressionUUID->"73c0aa7b-996f-419f-9a43-1b7691872a45"],

Cell[BoxData["0.9999999999999993`"], "Output",
 CellChangeTimes->{3.8665594658249464`*^9},
 CellLabel->
  "Out[971]=",ExpressionUUID->"bf9de254-d7d5-4546-8d24-8be92c54879b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["Js"], "Input",
 CellChangeTimes->{{3.8665593321965375`*^9, 3.866559332651392*^9}},
 CellLabel->
  "In[873]:=",ExpressionUUID->"f4977448-0a02-40fa-a19b-a45239004ebd"],

Cell[BoxData[
 RowBox[{"{", "6.350944410686315`", "}"}]], "Output",
 CellChangeTimes->{3.8665593331022468`*^9},
 CellLabel->
  "Out[873]=",ExpressionUUID->"48f36c59-2a57-4edf-9a98-2962fdae04cf"]
}, Open  ]]
},
WindowSize->{1428., 741.75},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
Magnification:>1.1 Inherited,
FrontEndVersion->"13.1 for Microsoft Windows (64-bit) (June 16, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"e06e1de5-b45a-46e7-8dee-4a505fe946e4"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 1579, 48, 136, "Input",ExpressionUUID->"2f8dbb02-c7c0-432f-b262-a80ee09c7f5b"],
Cell[2162, 72, 7206, 137, 260, "Output",ExpressionUUID->"1f70384d-ab65-4179-9071-a07abcc60354"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9405, 214, 112918, 2802, 4993, "Input",ExpressionUUID->"e8e0b3cb-1c67-4747-8c43-f1659f15f5da"],
Cell[122326, 3018, 386, 9, 30, "Message",ExpressionUUID->"04f002dc-e06c-4787-9da0-c94a50004d35"]
}, Open  ]],
Cell[CellGroupData[{
Cell[122749, 3032, 8142, 214, 450, "Input",ExpressionUUID->"4d482704-5836-401e-a1c0-981b493daa65"],
Cell[130894, 3248, 146540, 2588, 225, "Output",ExpressionUUID->"743537a7-da44-4af7-beba-a5e499e58421"],
Cell[277437, 5838, 812, 12, 35, "Output",ExpressionUUID->"ef9edb23-bea4-4438-9d3c-695de48799d2"],
Cell[278252, 5852, 811, 12, 35, "Output",ExpressionUUID->"9f5d7073-a2d7-457f-81bb-bff987c40a45"]
}, Open  ]],
Cell[CellGroupData[{
Cell[279100, 5869, 7429, 202, 408, "Input",ExpressionUUID->"fa647c23-3903-42bf-a448-5077ddb72382"],
Cell[286532, 6073, 462, 11, 30, "Message",ExpressionUUID->"66e2276c-9d81-487d-997c-3c67a62696d6"],
Cell[286997, 6086, 462, 11, 30, "Message",ExpressionUUID->"a2236b70-2ad0-4709-ab8a-692458d37171"],
Cell[287462, 6099, 464, 11, 30, "Message",ExpressionUUID->"589aa333-79a7-4882-84d8-26614e12d2d4"],
Cell[287929, 6112, 508, 11, 30, "Message",ExpressionUUID->"2b4cd056-f833-4a69-84ca-9afe12863751"],
Cell[288440, 6125, 651, 13, 51, "Message",ExpressionUUID->"2384bc43-a091-418a-a50d-51734f1819a7"],
Cell[289094, 6140, 150030, 2652, 225, "Output",ExpressionUUID->"daf8d38c-b0c0-434f-88d7-8307af39ffc1"],
Cell[439127, 8794, 475, 8, 35, "Output",ExpressionUUID->"8f020c60-bf26-4e31-a35d-2bcca0532ea3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[439639, 8807, 176, 2, 31, "Input",ExpressionUUID->"58ab3423-bda8-4f86-acee-a113929cb7ac"],
Cell[439818, 8811, 215, 3, 35, "Output",ExpressionUUID->"4afc41d9-c24b-41dd-a5d2-399f2c572af2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[440070, 8819, 17521, 479, 1137, "Input",ExpressionUUID->"db685101-cfd9-44ab-b625-6cbe825f64b7"],
Cell[457594, 9300, 598, 12, 30, "Message",ExpressionUUID->"7b7a2d2a-4d34-4d9f-b6a1-4c92ee8e191a"],
Cell[458195, 9314, 600, 12, 30, "Message",ExpressionUUID->"649ebc2a-17a0-44cc-9ed6-a83017f91885"],
Cell[458798, 9328, 598, 12, 30, "Message",ExpressionUUID->"070a2062-1840-44af-a2c2-420f2d82b4e6"],
Cell[459399, 9342, 597, 12, 30, "Message",ExpressionUUID->"a1e4e4c4-f9c4-481f-b2ce-611b116f5e0c"],
Cell[CellGroupData[{
Cell[460021, 9358, 303, 6, 24, "Print",ExpressionUUID->"54817be3-e084-44cb-ab4c-22a5769247d9"],
Cell[460327, 9366, 307, 6, 24, "Print",ExpressionUUID->"7a000bf0-08f8-4bbc-b136-e779b32325e2"]
}, Open  ]],
Cell[460649, 9375, 82793, 1466, 239, "Output",ExpressionUUID->"1d8d9c11-c438-4b0f-b3ce-cb3435d249dc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[543479, 10846, 189, 3, 31, "Input",ExpressionUUID->"73c0aa7b-996f-419f-9a43-1b7691872a45"],
Cell[543671, 10851, 173, 3, 35, "Output",ExpressionUUID->"bf9de254-d7d5-4546-8d24-8be92c54879b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[543881, 10859, 179, 3, 31, "Input",ExpressionUUID->"f4977448-0a02-40fa-a19b-a45239004ebd"],
Cell[544063, 10864, 194, 4, 35, "Output",ExpressionUUID->"48f36c59-2a57-4edf-9a98-2962fdae04cf"]
}, Open  ]]
}
]
*)

