(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    291499,       6050]
NotebookOptionsPosition[    289273,       6012]
NotebookOutlinePosition[    289679,       6028]
CellTagsIndexPosition[    289636,       6025]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
Packaged the Stochastic approach in one single function and it seems to work \
well\
\>", "Text",
 CellChangeTimes->{{3.8648378409682493`*^9, 3.864837871408472*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"e1d1232c-86cc-4804-8aba-9808e8088f82"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Remove", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
  RowBox[{"(*", 
   RowBox[{"ICs", " ", "-", " ", 
    RowBox[{"Initial", " ", "Conditions"}]}], " ", "*)"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Error", " ", "while", " ", "cosntraining", " ", "u"}], " ", 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ffCartPendulum", "[", 
    RowBox[{
    "ICs_", ",", "n_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "A_", ",", 
     "order_", ",", "maxIter_", ",", "maxError_", ",", "uMax_", ",", 
     "maxCount_"}], "]"}], ":=", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "InitGuess", ",", "J", ",", "count", ",", "error", ",", "x", ",", 
       "dist", ",", "xdot", ",", "f", ",", "\[Theta]", ",", "\[Theta]dot", 
       ",", "\[Lambda]1", ",", "\[Lambda]2", ",", "\[Lambda]3", ",", 
       "\[Lambda]4", ",", "\[CapitalDelta]t", ",", "bcs", ",", "eqns", ",", 
       "sv", ",", "froot", ",", "xff", ",", "xdotff", ",", "xff0", ",", 
       "xdotff0", ",", "\[Theta]ff0", ",", "\[Theta]dotff0", ",", "uff0", ",",
        "\[Theta]ff", ",", "\[Theta]dotff", ",", "uff", ",", "\[Lambda]1ff0", 
       ",", "\[Lambda]2ff0", ",", "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", 
       "i", ",", 
       RowBox[{"xGuess", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          SubscriptBox["xGuess", "i"], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}]}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"\[CapitalDelta]t", "=", 
       RowBox[{"\[Tau]", "/", "n"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"{", 
         RowBox[{
         "x_", ",", "xdot_", ",", "\[Theta]_", ",", "\[Theta]dot_", ",", 
          "\[Lambda]1_", ",", "\[Lambda]2_", ",", "\[Lambda]3_", ",", 
          "\[Lambda]4_"}], "}"}], "]"}], ":=", 
       RowBox[{"{", "\n", "\t", 
        RowBox[{"xdot", ",", "\n", "\t", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}],
           " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
               ")"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", "\[Lambda]2"}], 
              ")"}]}], "+", 
            RowBox[{"A", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", "\n", 
         "\t", "\[Theta]dot", ",", "\n", "\t", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}],
           " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{"1", "/", 
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"A", " ", 
                   RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
                 ")"}]}], ")"}]}], 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[Lambda]2"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
              ")"}]}], "-", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "-", 
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", "\n", 
         "\t", "0", ",", "\n", "\t", 
         RowBox[{"-", "\[Lambda]1"}], ",", "\n", "\t", 
         RowBox[{
          FractionBox["1", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"A", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "3"]], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["A", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"A", " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "-", 
               "\[Lambda]4"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "5"]}], "+", 
            RowBox[{
             SuperscriptBox["A", "3"], " ", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
              ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "6"]}], "-", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             SuperscriptBox["A", "2"], " ", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
              ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "4"], " ", 
             RowBox[{"(", 
              RowBox[{"4", "-", "A", "+", 
               RowBox[{"A", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}], "-", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "\[Lambda]2"}], "+", 
               RowBox[{
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}], "+", 
               RowBox[{"3", " ", "\[Lambda]2", " ", "\[Lambda]4", " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"A", " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "-", 
               "\[Lambda]4", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "A", " ", 
                   SuperscriptBox["\[Lambda]2", "2"]}], "+", 
                  SuperscriptBox["\[Lambda]4", "2"]}], ")"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox["A", "2"], " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2", " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], 
            "+", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "3"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", "A", " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "+", 
               RowBox[{"2", " ", "\[Lambda]4"}], "+", 
               RowBox[{
                SuperscriptBox["\[Lambda]4", "2"], " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"2", " ", "A", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"A", " ", 
                   SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], 
                  "-", "\[Lambda]4"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], 
            "+", 
            RowBox[{
             RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[Lambda]2"}], " ", "\[Lambda]4"}], "-", 
               RowBox[{"A", " ", 
                RowBox[{"(", 
                 RowBox[{"\[Lambda]2", "-", 
                  RowBox[{
                   SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
                 ")"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"A", " ", "\[Lambda]4", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]}], 
           ")"}]}], ",", "\n", "\t", 
         RowBox[{
          RowBox[{
           RowBox[{"4", " ", "/", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"A", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A", "-", "2"}],
              ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{"A", " ", "\[Theta]dot", " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}]}], ")"}]}], 
          "-", "\[Lambda]3"}]}], "\n", "}"}]}], ";", 
      StyleBox["\[IndentingNewLine]",
       FontWeight->"Plain"], "\n", 
      RowBox[{"InitGuess", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       StyleBox["xGuess",
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       StyleBox["=",
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       RowBox[{
        StyleBox["Table",
         FontWeight->"Plain"], 
        StyleBox["[",
         FontWeight->"Plain"], 
        RowBox[{
         RowBox[{
          StyleBox["If",
           FontWeight->"Plain"], 
          StyleBox["[",
           FontWeight->"Plain"], 
          RowBox[{
           StyleBox[
            RowBox[{"i", " ", "!=", " ", 
             RowBox[{"-", "1"}]}],
            FontWeight->"Plain"], 
           StyleBox[",",
            FontWeight->"Plain"], 
           RowBox[{
            StyleBox[
             SubscriptBox["xGuess", 
              RowBox[{"i", "+", "1"}]],
             FontWeight->"Plain"], 
            StyleBox[" ",
             FontWeight->"Plain"], 
            StyleBox["=",
             FontWeight->"Plain"], 
            StyleBox[" ",
             FontWeight->"Plain"], 
            RowBox[{
             SubscriptBox[
              StyleBox["xGuess",
               FontWeight->"Plain"], "i"], 
             StyleBox[" ",
              FontWeight->"Plain"], 
             StyleBox["+",
              FontWeight->"Plain"], 
             StyleBox[
              RowBox[{"\[CapitalDelta]t", "*", 
               RowBox[{"f", "[", 
                SubscriptBox["xGuess", "i"], "]"}]}],
              FontWeight->"Plain"]}]}], 
           StyleBox[",",
            FontWeight->"Plain"], 
           RowBox[{
            SubscriptBox[
             StyleBox["xGuess",
              FontWeight->"Plain"], "0"], " ", "=", " ", 
            RowBox[{"{", 
             StyleBox[
              RowBox[{
               RowBox[{"ICs", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "3", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "4", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "3", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "4", "]"}], "]"}]}],
              FontWeight->"Plain"], 
             StyleBox["}",
              FontWeight->"Plain"]}]}]}], 
          StyleBox["]",
           FontWeight->"Plain"]}], 
         StyleBox[",",
          FontWeight->"Plain"], 
         StyleBox[
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"-", "1"}], ",", 
            RowBox[{"n", "-", "1"}]}], "}"}],
          FontWeight->"Plain"]}], 
        StyleBox["]",
         FontWeight->"Plain"]}]}], 
      StyleBox[";",
       FontWeight->"Plain"], "\[IndentingNewLine]", "\n", 
      RowBox[{"bcs", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"x", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"xdot", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"x", ",", " ", "n"}], "]"}], "==", 
          RowBox[{"Subscript", "[", 
           RowBox[{"xdot", ",", " ", "n"}], "]"}], "==", "0"}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]dot", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]dot", ",", " ", "n"}], "]"}], "==", "0"}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]", ",", " ", "n"}], "]"}], "==", "\[Pi]"}]}], 
        "}"}]}], ";", "\n", 
      RowBox[{"eqns", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Join", "[", 
         RowBox[{"bcs", ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Thread", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], "==", 
              "\n", 
              RowBox[{
               RowBox[{
                RowBox[{"1", "/", "2"}], " ", "\[CapitalDelta]t", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"f", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}], "]"}], "+", 
                  "\n", 
                  RowBox[{"f", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], 
                   "]"}]}], ")"}]}], "+", "\n", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Subscript", "[", 
                  RowBox[{"x", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"xdot", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]dot", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]1", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]2", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]3", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]4", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}]}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
        "]"}]}], ";", "\n", "\n", 
      RowBox[{"sv", " ", "=", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", "\n", 
             "\t\t\t\t\t", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "7", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "8", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", "1"}], 
        "]"}]}], ";", "\n", "\[IndentingNewLine]", 
      RowBox[{"froot", "=", 
       RowBox[{"FindRoot", "[", 
        RowBox[{"eqns", ",", "sv", ",", 
         RowBox[{"MaxIterations", "->", "maxIter"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"error", " ", "=", " ", 
       RowBox[{"Norm", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                SubscriptBox["x", "n"], ",", 
                SubscriptBox["xdot", "n"], ",", 
                SubscriptBox["\[Theta]", "n"], ",", 
                SubscriptBox["\[Theta]dot", "n"]}], "}"}], " ", "-", " ", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], ",", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                SubscriptBox["x", "0"], ",", 
                SubscriptBox["xdot", "0"], ",", 
                SubscriptBox["\[Theta]", "0"], ",", 
                SubscriptBox["\[Theta]dot", "0"]}], "}"}], " ", "-", " ", 
              "ICs"}], ",", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Thread", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   SubscriptBox["x", "i"], ",", 
                   SubscriptBox["xdot", "i"], ",", 
                   SubscriptBox["\[Theta]", "i"], ",", 
                   SubscriptBox["\[Theta]dot", "i"], ",", 
                   SubscriptBox["\[Lambda]1", "i"], ",", 
                   SubscriptBox["\[Lambda]2", "i"], ",", 
                   SubscriptBox["\[Lambda]3", "i"], ",", 
                   SubscriptBox["\[Lambda]4", "i"]}], "}"}], "-", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    FractionBox["1", "2"], " ", "\[CapitalDelta]t", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}], "]"}], "+", 
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "]"}]}], 
                    ")"}]}], "+", 
                   RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}]}], ")"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
           "]"}], "/.", "froot"}], ",", "\"\<Frobenius\>\""}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"uff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}], "^", 
                  "2"}]}]}], ")"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], 
                RowBox[{"Cos", "[", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}]}], "-", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}]}], ")"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"count", " ", "=", " ", "0"}], ";", "\n", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"error", " ", ">", " ", "maxError"}], ")"}], " ", "||", 
           " ", 
           RowBox[{"(", 
            RowBox[{"J", " ", ">", " ", 
             RowBox[{
              RowBox[{"uMax", "^", "2"}], "*", "\[Tau]"}]}], ")"}]}], ")"}], 
         " ", "&&", " ", 
         RowBox[{"count", " ", "<=", " ", "maxCount"}]}], " ", ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"InitGuess", " ", "=", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}]}], "}"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          StyleBox["xGuess",
           FontWeight->"Plain"], 
          StyleBox[" ",
           FontWeight->"Plain"], 
          StyleBox["=",
           FontWeight->"Plain"], 
          StyleBox[" ",
           FontWeight->"Plain"], 
          RowBox[{
           StyleBox["Table",
            FontWeight->"Plain"], 
           StyleBox["[",
            FontWeight->"Plain"], 
           RowBox[{
            RowBox[{
             StyleBox["If",
              FontWeight->"Plain"], 
             StyleBox["[",
              FontWeight->"Plain"], 
             RowBox[{
              StyleBox[
               RowBox[{"i", " ", "!=", " ", 
                RowBox[{"-", "1"}]}],
               FontWeight->"Plain"], 
              StyleBox[",",
               FontWeight->"Plain"], 
              RowBox[{
               StyleBox[
                SubscriptBox["xGuess", 
                 RowBox[{"i", "+", "1"}]],
                FontWeight->"Plain"], 
               StyleBox[" ",
                FontWeight->"Plain"], 
               StyleBox["=",
                FontWeight->"Plain"], 
               StyleBox[" ",
                FontWeight->"Plain"], 
               RowBox[{
                SubscriptBox[
                 StyleBox["xGuess",
                  FontWeight->"Plain"], "i"], 
                StyleBox[" ",
                 FontWeight->"Plain"], 
                StyleBox["+",
                 FontWeight->"Plain"], 
                StyleBox[
                 RowBox[{"\[CapitalDelta]t", "*", 
                  RowBox[{"f", "[", 
                   SubscriptBox["xGuess", "i"], "]"}]}],
                 FontWeight->"Plain"]}]}], 
              StyleBox[",",
               FontWeight->"Plain"], 
              RowBox[{
               SubscriptBox[
                StyleBox["xGuess",
                 FontWeight->"Plain"], "0"], " ", "=", " ", 
               RowBox[{"{", 
                StyleBox[
                 RowBox[{
                  RowBox[{"ICs", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", 
                  RowBox[{"ICs", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], ",", 
                  RowBox[{"ICs", "[", 
                   RowBox[{"[", "3", "]"}], "]"}], ",", 
                  RowBox[{"ICs", "[", 
                   RowBox[{"[", "4", "]"}], "]"}], ",", 
                  RowBox[{"InitGuess", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", 
                  RowBox[{"InitGuess", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], ",", 
                  RowBox[{"InitGuess", "[", 
                   RowBox[{"[", "3", "]"}], "]"}], ",", 
                  RowBox[{"InitGuess", "[", 
                   RowBox[{"[", "4", "]"}], "]"}]}],
                 FontWeight->"Plain"], 
                StyleBox["}",
                 FontWeight->"Plain"]}]}]}], 
             StyleBox["]",
              FontWeight->"Plain"]}], 
            StyleBox[",",
             FontWeight->"Plain"], 
            StyleBox[
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"-", "1"}], ",", 
               RowBox[{"n", "-", "1"}]}], "}"}],
             FontWeight->"Plain"]}], 
           StyleBox["]",
            FontWeight->"Plain"]}]}], 
         StyleBox[";",
          FontWeight->"Plain"], "\[IndentingNewLine]", 
         RowBox[{"sv", " ", "=", " ", 
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", "\n", 
                "\t\t\t\t\t", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "7", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "8", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", "1"}], 
           "]"}]}], ";", "\n", "\n", 
         RowBox[{"froot", "=", 
          RowBox[{"FindRoot", "[", 
           RowBox[{"eqns", ",", "sv", ",", 
            RowBox[{"MaxIterations", "->", "maxIter"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"error", " ", "=", " ", 
          RowBox[{"Norm", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Flatten", "[", 
              RowBox[{"Join", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   SubscriptBox["x", "n"], ",", 
                   SubscriptBox["xdot", "n"], ",", 
                   SubscriptBox["\[Theta]", "n"], ",", 
                   SubscriptBox["\[Theta]dot", "n"]}], "}"}], " ", "-", " ", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], 
                ",", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   SubscriptBox["x", "0"], ",", 
                   SubscriptBox["xdot", "0"], ",", 
                   SubscriptBox["\[Theta]", "0"], ",", 
                   SubscriptBox["\[Theta]dot", "0"]}], "}"}], " ", "-", " ", 
                 "ICs"}], ",", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"Thread", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[CapitalDelta]t", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}], "]"}], "+", 
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}]}], ")"}]}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}],
               "]"}], "/.", "froot"}], ",", "\"\<Frobenius\>\""}], "]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"uff0", "=", 
          RowBox[{"ListInterpolation", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"1", "/", 
                 RowBox[{"(", 
                  RowBox[{"1", "-", 
                   RowBox[{"A", " ", 
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}], "^", 
                    "2"}]}]}], ")"}]}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], 
                   RowBox[{"Cos", "[", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}]}], "-", 
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}]}], ")"}]}], 
               ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
             "froot"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
            RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", 
         "\n", 
         RowBox[{"J", " ", "=", " ", 
          RowBox[{"NIntegrate", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", 
         "\n", 
         RowBox[{"count", " ", "=", " ", 
          RowBox[{"count", "+", "1"}]}], ";"}]}], "\n", "]"}], ";", "\n", 
      "\n", "\n", 
      RowBox[{"xff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"xdotff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Theta]ff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Theta]dotff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]1ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]2ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]3ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]4ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      "\n", 
      RowBox[{"uff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}], "^", 
                  "2"}]}]}], ")"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], 
                RowBox[{"Cos", "[", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}]}], "-", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}]}], ")"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      "\n", 
      RowBox[{
       RowBox[{"xff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xdotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "\[Pi]"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"uff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"uff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"{", 
       RowBox[{
       "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
        "uff", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
        "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "J"}], "}"}]}]}], "]"}]}],
   "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"testSwingUp", "[", 
    RowBox[{
    "ICs_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "uff0_", ",", "A_"}], "]"}],
    ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eq", ",", "init", ",", "x", ",", "xdot", ",", "\[Theta]", ",", 
       "\[Theta]dot", ",", "xs", ",", "xdots", ",", "\[Theta]s", ",", 
       "\[Theta]dots", ",", "t", ",", "J"}], "}"}], ",", "\n", 
     RowBox[{
      RowBox[{"eq", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"x", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"xdot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"xdot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"uff0", "[", "t", "]"}], "+", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
             RowBox[{"A", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]dot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"uff0", "[", "t", "]"}], "+", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
            ")"}]}]}]}], "}"}]}], ";", "\n", 
      RowBox[{"init", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"xdot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]dot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
        "}"}], "=", 
       RowBox[{"NDSolveValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"eq", ",", "init"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
         RowBox[{"Method", "->", 
          RowBox[{"{", 
           RowBox[{"\"\<DiscontinuityProcessing\>\"", "->", "None"}], 
           "}"}]}]}], "]"}]}], ";", "\n", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"{", 
       RowBox[{
       "xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots", ",", "uff0",
         ",", "J"}], "}"}]}]}], "]"}]}], "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{"CalculateSMatrix", "[", 
   RowBox[{
   "x1a_", ",", "xdot1a_", ",", "\[Theta]1a_", ",", "\[Theta]dot1a_", ",", 
    "u1a_", ",", "\[Tau]_", ",", "A_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x", ",", "L", ",", "RHS", ",", "xdot", ",", "\[Theta]", ",", 
      "\[Theta]dot", ",", "u", ",", "K", ",", "S", ",", "soltn", ",", "Af", 
      ",", "Bf", ",", "Q", ",", "fx", ",", "xState", ",", "R", ",", "Mf", ",",
       "x2dot", ",", "\[Theta]2dot", ",", "S0", ",", "sol2", ",", "t"}], 
     "}"}], ",", "\n", "\n", 
    RowBox[{
     RowBox[{"xState", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
       "}"}]}], ";", "\n", 
     RowBox[{"x2dot", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{"u", "+", 
         RowBox[{"A", " ", 
          RowBox[{"\[Theta]dot", "^", "2"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"A", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ";", "\n", 
     RowBox[{"\[Theta]2dot", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{"u", "+", 
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ")"}]}]}], 
     ";", "\n", 
     RowBox[{"fx", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
       "xdot", ",", "x2dot", ",", "\[Theta]dot", ",", "\[Theta]2dot"}], 
       "}"}]}], ";", "\n", 
     RowBox[{"L", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", "2"}], "*", 
       RowBox[{"u", "^", "2"}]}]}], ";", "\n", 
     RowBox[{"Af", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{"fx", ",", "xState"}], "]"}]}], ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{"For", " ", "nD", " ", "stuff", " ", "use", " ", "Grad"}], 
      "*)"}], "\n", 
     RowBox[{"Bf", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"fx", ",", "u"}], "]"}]}], " ", ";", 
     RowBox[{"(*", 
      RowBox[{"For", " ", "1", "D", " ", "stuff", " ", "use", " ", "D"}], 
      "*)"}], "\n", 
     RowBox[{"Q", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{
        RowBox[{"Grad", "[", 
         RowBox[{"L", ",", "xState"}], "]"}], ",", "xState"}], "]"}]}], ";", 
     " ", 
     RowBox[{"(*", " ", 
      RowBox[{"Fix", " ", "this"}], " ", "*)"}], "\n", 
     RowBox[{"Mf", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{"L", ",", "u"}], "]"}], ",", "xState"}], "]"}]}], ";", "\n", 
     RowBox[{"R", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"L", ",", 
        RowBox[{"{", 
         RowBox[{"u", ",", "2"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"S0", " ", "=", " ", 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]]}], ";", "\n", 
     RowBox[{
      RowBox[{"RHS", "[", "t_", "]"}], " ", ":=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"IdentityMatrix", "[", "4", "]"}], " ", "+", " ", 
         RowBox[{
          RowBox[{"Af", "\[Transpose]"}], ".", 
          RowBox[{"S", "[", "t", "]"}]}], " ", "+", " ", 
         RowBox[{
          RowBox[{"S", "[", "t", "]"}], ".", "Af"}], " ", "-", " ", 
         RowBox[{"KroneckerProduct", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"S", "[", "t", "]"}], ".", "Bf"}], ",", 
           RowBox[{
            RowBox[{"Bf", "\[Transpose]"}], ".", 
            RowBox[{"S", "[", "t", "]"}]}]}], "]"}]}], ")"}], " ", "/.", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "->", " ", 
          RowBox[{"x1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"xdot", " ", "->", " ", 
          RowBox[{"xdot1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"\[Theta]", " ", "->", 
          RowBox[{"\[Theta]1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"\[Theta]dot", " ", "->", " ", 
          RowBox[{"\[Theta]dot1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"u", " ", "->", " ", 
          RowBox[{"u1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}]}], "}"}]}]}], ";", 
     "\n", 
     RowBox[{"sol2", " ", "=", " ", 
      RowBox[{"S", " ", "/.", " ", 
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"S", "'"}], "[", "t", "]"}], "==", " ", 
            RowBox[{"RHS", "[", "t", "]"}]}], ",", 
           RowBox[{
            RowBox[{"S", "[", "0", "]"}], "==", "S0"}]}], "}"}], ",", "S", 
         ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], " ", "}"}]}], "]"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"S", " ", "=", " ", 
      RowBox[{"sol2", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}]}], "\n", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CalculateGains", "[", 
   RowBox[{
   "x1a_", ",", "xdot1a_", ",", "\[Theta]1a_", ",", "\[Theta]dot1a_", ",", 
    "u1a_", ",", "time_", ",", "A_", ",", "\[Tau]_", ",", "S_"}], "]"}], ":=",
   " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x", ",", "L", ",", "RHS", ",", "xdot", ",", "\[Theta]", ",", 
      "\[Theta]dot", ",", "u", ",", "K", ",", "Af", ",", "Bf", ",", "Q", ",", 
      "fx", ",", "xState", ",", "R", ",", "Mf", ",", "x2dot", ",", 
      "\[Theta]2dot", ",", "S0", ",", "sol2", ",", "t"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"xState", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
       "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"x2dot", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{"u", "+", 
         RowBox[{"A", " ", 
          RowBox[{"\[Theta]dot", "^", "2"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"A", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Theta]2dot", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{"u", "+", 
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ")"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"fx", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
       "xdot", ",", "x2dot", ",", "\[Theta]dot", ",", "\[Theta]2dot"}], 
       "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Bf", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"fx", ",", "u"}], "]"}]}], " ", ";", 
     RowBox[{"(*", 
      RowBox[{"For", " ", "1", "D", " ", "stuff", " ", "use", " ", "D"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"K", " ", "=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Bf", "\[Transpose]"}], ".", 
         RowBox[{"S", "[", 
          RowBox[{"\[Tau]", " ", "-", " ", "time"}], "]"}]}], ")"}], "/.", 
       " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "->", " ", 
          RowBox[{"x1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"xdot", " ", "->", " ", 
          RowBox[{"xdot1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"\[Theta]", " ", "->", 
          RowBox[{"\[Theta]1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"\[Theta]dot", " ", "->", " ", 
          RowBox[{"\[Theta]dot1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"u", " ", "->", " ", 
          RowBox[{"u1a", "[", "time", "]"}]}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", "K"}]}], "\n", "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"testWithFB", "[", 
    RowBox[{
    "ICs_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "xff0_", ",", "xdotff0_", 
     ",", "\[Theta]ff0_", ",", "\[Theta]dotff0_", ",", "uff0_", ",", "A_"}], 
    "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eq", ",", "init", ",", "\[Theta]", ",", "\[Theta]dot", ",", 
       "\[Theta]ff", ",", "\[Theta]dotff", ",", "x", ",", "xdot", ",", "xff", 
       ",", "xdotff", ",", "uff", ",", "t", ",", "\[Kappa]1", ",", 
       "\[Kappa]2", ",", "\[Kappa]3", ",", "\[Kappa]4", ",", "ufb", ",", "u", 
       ",", "\[Theta]s", ",", "\[Theta]dots", ",", "xs", ",", "xdots", ",", 
       "us", ",", "J", ",", "S", ",", "K"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Kappa]1", "=", 
       RowBox[{"\[Kappa]2", "=", "3"}]}], ";", "  ", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"lqr", " ", "for", " ", "q"}], "=", 
        RowBox[{"r", " ", "for", " ", "balancing", " ", "pendulum"}]}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"\[Kappa]3", " ", "=", " ", 
       RowBox[{"-", "0.1"}]}], ";", 
      RowBox[{"\[Kappa]4", " ", "=", " ", 
       RowBox[{"-", "0.65"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"xff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xdotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "\[Pi]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"uff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"uff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"S", " ", "=", " ", 
       RowBox[{"CalculateSMatrix", "[", 
        RowBox[{
        "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
         "uff", ",", "\[Tau]", ",", "A"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"K", "[", "t_", "]"}], " ", ":=", " ", 
       RowBox[{"CalculateGains", "[", 
        RowBox[{
        "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
         "uff", ",", "t", ",", "A", ",", "\[Tau]", ",", "S"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ufb", "[", "t_", "]"}], " ", ":=", " ", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"K", "[", "t", "]"}], ".", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"xff", "[", "t", "]"}], "-", 
                RowBox[{"x", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"xdotff", "[", "t", "]"}], "-", 
                RowBox[{"xdot", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]dot", "[", "t", "]"}]}]}], "}"}]}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         RowBox[{
          RowBox[{"\[Kappa]1", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]3", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"xff", "[", "t", "]"}], "-", 
             RowBox[{"x", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"xdotff", "[", "t", "]"}], "-", 
             RowBox[{"xdot", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}], ";", 
      "\n", 
      RowBox[{
       RowBox[{"u", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{"uff", "[", "t", "]"}], "+", 
        RowBox[{"ufb", "[", "t", "]"}]}]}], ";", "\n", "\n", 
      RowBox[{"eq", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"x", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"xdot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"xdot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"u", "[", "t", "]"}], "+", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
             RowBox[{"A", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]dot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"u", "[", "t", "]"}], "+", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
            ")"}]}]}]}], "}"}]}], ";", "\n", "\n", 
      RowBox[{"init", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"xdot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]dot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}], ";", "\n", "\n", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
        "}"}], "=", 
       RowBox[{"NDSolveValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"eq", ",", "init"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
         RowBox[{"Method", "->", 
          RowBox[{"{", 
           RowBox[{"\"\<DiscontinuityProcessing\>\"", "->", "None"}], 
           "}"}]}]}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"us", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{"uff", "[", "t", "]"}], "+", 
        RowBox[{"Piecewise", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"K", "[", "t", "]"}], ".", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"xff", "[", "t", "]"}], "-", 
                 RowBox[{"xs", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"xdotff", "[", "t", "]"}], "-", 
                 RowBox[{"xdots", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                 RowBox[{"\[Theta]s", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                 RowBox[{"\[Theta]dots", "[", "t", "]"}]}]}], "}"}]}], ",", 
             RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
          RowBox[{
           RowBox[{"\[Kappa]1", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]s", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]dots", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]3", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"xff", "[", "t", "]"}], "-", 
              RowBox[{"xs", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]4", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"xdotff", "[", "t", "]"}], "-", 
              RowBox[{"xdots", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"us", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"{", 
       RowBox[{
       "xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots", ",", "us", 
        ",", "J"}], "}"}]}]}], "]"}]}], "\n"}], "\n"}], "Code",
 CellChangeTimes->{{3.862753343189165*^9, 3.862753411389415*^9}, {
   3.8627553611496043`*^9, 3.8627553647834463`*^9}, {3.862755542386807*^9, 
   3.862755582254092*^9}, {3.862756179429644*^9, 3.8627562078485813`*^9}, 
   3.8627563320549693`*^9, {3.8627564690202875`*^9, 3.8627565488258357`*^9}, {
   3.8627568793814173`*^9, 3.8627568873778677`*^9}, 3.8627585165043135`*^9, {
   3.8627585965107956`*^9, 3.862758689290209*^9}, {3.862758834699833*^9, 
   3.8627588555911727`*^9}, {3.8627590963373947`*^9, 
   3.8627590998392787`*^9}, {3.8627594410134716`*^9, 
   3.8627594626865597`*^9}, {3.862759635094576*^9, 3.8627596377257366`*^9}, {
   3.862759669455618*^9, 3.8627597448635693`*^9}, 3.862759795914287*^9, {
   3.8627603319473376`*^9, 3.862760490473783*^9}, {3.8627605307139487`*^9, 
   3.862760536806006*^9}, {3.8627610047197795`*^9, 3.8627610478400292`*^9}, {
   3.8627611285982723`*^9, 3.862761147921111*^9}, {3.8631982964294224`*^9, 
   3.8631982970332265`*^9}, 3.8631983363504767`*^9, {3.863208693665881*^9, 
   3.8632086943846474`*^9}, 3.863210007245922*^9, 3.863271804426487*^9, {
   3.8632718412836447`*^9, 3.8632718583741503`*^9}, {3.8632719591337743`*^9, 
   3.863271959351703*^9}, {3.863272049174841*^9, 3.863272070205083*^9}, {
   3.863272113471178*^9, 3.863272123024109*^9}, 3.8632747752128673`*^9, {
   3.863274857845314*^9, 3.863274901443305*^9}, 3.863274985905165*^9, {
   3.86327502591031*^9, 3.8632751590365314`*^9}, {3.8632751952308993`*^9, 
   3.863275233662552*^9}, {3.8632753992893295`*^9, 3.863275415841012*^9}, 
   3.8632757933676972`*^9, 3.863276112914017*^9, {3.8632763683199444`*^9, 
   3.8632763983313017`*^9}, {3.8632764721665745`*^9, 3.863276525061578*^9}, {
   3.863278235705888*^9, 3.8632782777863655`*^9}, {3.863278324944213*^9, 
   3.8632783286160316`*^9}, {3.863552728717914*^9, 3.8635527298355513`*^9}, {
   3.863613419658352*^9, 3.863613423534114*^9}, {3.8636150904008484`*^9, 
   3.86361513154671*^9}, {3.8636152078133564`*^9, 3.8636152525520706`*^9}, {
   3.8636152893383236`*^9, 3.863615479516596*^9}, 3.8636157247782784`*^9, {
   3.863615879717803*^9, 3.8636159617646036`*^9}, {3.8636160220243616`*^9, 
   3.8636160299278383`*^9}, {3.863616069486206*^9, 3.86361607601912*^9}, {
   3.863699007217822*^9, 3.8636991515617003`*^9}, {3.8636996033223495`*^9, 
   3.8636996129842625`*^9}, {3.8636997844214835`*^9, 3.863699805489752*^9}, {
   3.863699907217247*^9, 3.863699944316393*^9}, {3.863700788168758*^9, 
   3.8637008845809517`*^9}, {3.863702046275758*^9, 3.8637020830100203`*^9}, {
   3.863702595245346*^9, 3.863702645292355*^9}, {3.863884194660141*^9, 
   3.8638842031804175`*^9}, {3.8638909914788537`*^9, 3.863891009810995*^9}, {
   3.863891113237941*^9, 3.8638911537729845`*^9}, {3.863891279619763*^9, 
   3.8638912855948534`*^9}, {3.863891344230113*^9, 3.863891351574766*^9}, {
   3.8638925953132634`*^9, 3.8638925989880886`*^9}, 3.8641412354391413`*^9, {
   3.864141550931038*^9, 3.8641416655529428`*^9}, {3.8642361939817247`*^9, 
   3.864236202546955*^9}, {3.864236595072028*^9, 3.8642366322340117`*^9}, 
   3.864236674617306*^9, {3.8643997929515553`*^9, 3.864399794341104*^9}, 
   3.8647401548354416`*^9, {3.864740367280447*^9, 3.864740382577551*^9}, {
   3.8647404140084915`*^9, 3.8647404181541643`*^9}, {3.864740488606616*^9, 
   3.864740495693348*^9}, {3.8647405289317093`*^9, 3.864740542820265*^9}, {
   3.864741074561078*^9, 3.864741079667444*^9}, {3.864741140307036*^9, 
   3.864741143520008*^9}, 3.8648372672245474`*^9, {3.8648373045645533`*^9, 
   3.864837353847723*^9}, {3.8648373920424533`*^9, 3.8648375909655547`*^9}, 
   3.864837839079855*^9, {3.865356690975731*^9, 3.865356718635888*^9}, {
   3.8653568425522747`*^9, 3.86535688554853*^9}, 3.865356998743344*^9, {
   3.865357063056785*^9, 3.865357082860453*^9}, {3.865357192303467*^9, 
   3.865357202547192*^9}, {3.865357324369248*^9, 3.865357327732173*^9}, 
   3.8653573727697754`*^9, {3.8653584117496357`*^9, 3.865358421880398*^9}, {
   3.865359119417409*^9, 3.865359146498752*^9}, {3.865359181803466*^9, 
   3.865359209189711*^9}},
 FontWeight->"Plain",
 CellLabel->
  "In[4659]:=",ExpressionUUID->"8daba21d-9510-4b30-8c25-b5a0584418ca"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Energy", "[", 
    RowBox[{"{", 
     RowBox[{
     "x1_", ",", "x2_", ",", "\[Theta]1_", ",", "\[Theta]2_", ",", "A_"}], 
     "}"}], "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"1", "/", "2"}], "*", 
     RowBox[{"x2", "^", "2"}]}], " ", "+", " ", 
    RowBox[{
     RowBox[{"1", "/", "2"}], "*", "A", "*", 
     RowBox[{"\[Theta]2", "^", "2"}]}], " ", "+", " ", 
    RowBox[{"A", "*", 
     RowBox[{"Cos", "[", "\[Theta]1", "]"}], "*", "x2", "*", "\[Theta]2"}], 
    " ", "-", " ", 
    RowBox[{"A", "*", 
     RowBox[{"Cos", "[", "\[Theta]1", "]"}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.865347557533499*^9, 3.865347708031389*^9}, {
  3.8653478110874424`*^9, 3.8653478146772966`*^9}},
 CellLabel->
  "In[4666]:=",ExpressionUUID->"2e460f69-71dd-40ea-9e96-aaa585df6372"],

Cell["Test the working with random initial conditions", "Text",
 CellChangeTimes->{{3.864919546243415*^9, 3.864919566793731*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"74e82f71-7d3c-4f7a-b18d-cc3109df4131"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  StyleBox[
   RowBox[{"n", "=", "20"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Tau]", "=", "5"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Tau]1", "=", 
    RowBox[{"\[Tau]", "*", "1.25"}]}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"A", "=", "0.2"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"order", " ", "=", " ", "4"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"maxIter", " ", "=", " ", "30"}],
   FontWeight->"Plain"], ";", 
  StyleBox[
   RowBox[{"maxError", " ", "=", " ", "0.01"}],
   FontWeight->"Plain"], ";", 
  RowBox[{"uMax", " ", "=", " ", "2"}], ";", 
  RowBox[{"maxCount", " ", "=", " ", "5"}], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotMin", " ", "=", " ", 
    RowBox[{"-", "2"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotMax", " ", "=", " ", "2"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Min", " ", "=", " ", 
    RowBox[{"-", "\[Pi]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Max", " ", "=", " ", "\[Pi]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]dotMin", " ", "=", " ", 
    RowBox[{"-", "2"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"\[Theta]dotMax", " ", "=", " ", "2"}],
    FontWeight->"Plain"], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"xdotMin", ",", "xdotMax"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Init", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]Min", ",", "\[Theta]Max"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]dotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]dotMin", ",", "\[Theta]dotMax"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"ICs", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "xdotInit", ",", "\[Theta]Init", ",", "\[Theta]dotInit"}], 
    "}"}]}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"EInitial", " ", "=", " ", 
   RowBox[{"Energy", "[", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"ICs", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", "A", "}"}]}], "]"}], "]"}]}],
  FontWeight->"Plain"], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"t1", ",", 
      StyleBox[
       RowBox[{"{", 
        RowBox[{
        "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
         "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
         "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "Jff"}], "}"}],
       FontWeight->"Plain"]}], 
     StyleBox["}",
      FontWeight->"Plain"]}], 
    StyleBox["=",
     FontWeight->"Plain"], 
    StyleBox[
     RowBox[{"AbsoluteTiming", "[", 
      RowBox[{"ffCartPendulum", "[", 
       RowBox[{
       "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", "order",
         ",", "maxIter", ",", "maxError", ",", "uMax", ",", "maxCount"}], 
       "]"}], "]"}],
     FontWeight->"Plain"]}], 
   StyleBox[";",
    FontWeight->"Plain"]}], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", "Jff", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1b", ",", "xdot1b", ",", "\[Theta]1b", ",", "\[Theta]dot1b", ",", 
       "u1b", ",", "J1"}], "}"}], "=", 
     RowBox[{"testSwingUp", "[", 
      RowBox[{"ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "u1a", ",", "A"}], 
      "]"}]}], ";"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"t2", ",", 
     StyleBox[
      RowBox[{"{", 
       RowBox[{
       "x1c", ",", "xdot1c", ",", "\[Theta]1c", ",", "\[Theta]dot1c", ",", 
        "u1c", ",", "J"}], "}"}],
      FontWeight->"Plain"]}], 
    StyleBox["}",
     FontWeight->"Plain"]}], 
   StyleBox["=",
    FontWeight->"Plain"], 
   RowBox[{
    StyleBox["AbsoluteTiming",
     FontWeight->"Plain"], "[", 
    StyleBox[
     RowBox[{"testWithFB", "[", 
      RowBox[{
      "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
       "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A"}], "]"}],
     FontWeight->"Plain"], 
    StyleBox["]",
     FontWeight->"Plain"]}]}], 
  StyleBox[";",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"p1a", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Theta]1a", "[", "t", "]"}], ",", 
       RowBox[{"u1a", "[", "t", "]"}], ",", 
       RowBox[{"x1a", "[", "t", "]"}], ",", 
       RowBox[{"\[Theta]dot1a", "[", "t", "]"}], ",", 
       RowBox[{"xdot1a", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
     RowBox[{"Filling", "->", 
      RowBox[{"{", 
       RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Theta]1a\>\"", ",", "\"\<u1a\>\"", ",", "\"\<x1a\>\"", ",", 
        "\"\<\[Theta]dot1a\>\"", ",", "\"\<xdot1a\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<Feedforward solution\>\""}], ",", 
     RowBox[{"AspectRatio", "->", 
      RowBox[{"1", "/", "3"}]}], ",", 
     RowBox[{"ImageSize", "->", "400"}], ",", 
     RowBox[{"GridLines", "->", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], "]"}]}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{"p1b", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Theta]1b", "[", "t", "]"}], ",", 
       RowBox[{"u1a", "[", "t", "]"}], ",", 
       RowBox[{"x1b", "[", "t", "]"}], ",", 
       RowBox[{"\[Theta]dot1b", "[", "t", "]"}], ",", 
       RowBox[{"xdot1b", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
     RowBox[{"Filling", "->", 
      RowBox[{"{", 
       RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Theta]1b\>\"", ",", "\"\<u1b\>\"", ",", "\"\<x1b\>\"", ",", 
        "\"\<\[Theta]dot1b\>\"", ",", "\"\<xdot1b\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<Test on dynamics\>\""}], ",", 
     RowBox[{"AspectRatio", "->", 
      RowBox[{"1", "/", "3"}]}], ",", 
     RowBox[{"ImageSize", "->", "400"}], ",", 
     RowBox[{"GridLines", "->", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], "]"}]}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{"p1c", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1c", "[", "t", "]"}], ",", 
        RowBox[{"u1c", "[", "t", "]"}], ",", 
        RowBox[{"x1c", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1c", "[", "t", "]"}], ",", 
        RowBox[{"xdot1c", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1c\>\"", ",", "\"\<u1c\>\"", ",", "\"\<x1c\>\"", ",", 
         "\"\<\[Theta]dot1c\>\"", ",", "\"\<xdot1c\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<LQR feedback solution\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], "]"}]}],
   FontWeight->"Plain"], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.863699832878002*^9, 3.8636998879424076`*^9}, {
   3.8636999587037973`*^9, 3.863699966845196*^9}, {3.86370068689312*^9, 
   3.863700742439372*^9}, {3.863700775571786*^9, 3.8637007771342835`*^9}, 
   3.863700945211579*^9, {3.863700998427576*^9, 3.8637010107976217`*^9}, {
   3.8637016473912125`*^9, 3.863701669091281*^9}, 3.863702035899074*^9, {
   3.863702126179226*^9, 3.863702160529252*^9}, 3.86370251869481*^9, {
   3.8637025705572357`*^9, 3.8637025888983755`*^9}, {3.8637026681560507`*^9, 
   3.8637026692896886`*^9}, {3.8637027081322765`*^9, 3.863702762285972*^9}, 
   3.8637029838601737`*^9, 3.8637033230088053`*^9, {3.863884225388322*^9, 
   3.8638842448491*^9}, {3.8638842916161537`*^9, 3.863884295082047*^9}, {
   3.863891061309538*^9, 3.863891063069975*^9}, {3.863891163269951*^9, 
   3.863891163428899*^9}, {3.8638912925906177`*^9, 3.8638912940581484`*^9}, {
   3.8638913677266035`*^9, 3.8638913686183195`*^9}, {3.8638926039804945`*^9, 
   3.8638926063767295`*^9}, {3.8648376392630434`*^9, 
   3.8648376724073963`*^9}, {3.864837714278944*^9, 3.864837730198832*^9}, {
   3.8648378000064077`*^9, 3.8648378125593743`*^9}, {3.8649192769420185`*^9, 
   3.8649193477849746`*^9}, {3.864919494855133*^9, 3.8649194949211097`*^9}, {
   3.8649195280303416`*^9, 3.8649195281572976`*^9}, {3.8653430179727*^9, 
   3.865343036098905*^9}, 3.865343126059147*^9, {3.8653475497269955`*^9, 
   3.8653475530049467`*^9}, {3.8653477236523952`*^9, 3.865347782090714*^9}, {
   3.8653478250659747`*^9, 3.8653479145413723`*^9}, {3.865347947982681*^9, 
   3.8653479716121283`*^9}, {3.8653525506493053`*^9, 3.865352599733616*^9}, {
   3.865352652578721*^9, 3.865352654559091*^9}, {3.865353691929463*^9, 
   3.8653537130737047`*^9}, {3.8653538376038947`*^9, 
   3.8653538378768077`*^9}, {3.86535394844846*^9, 3.8653539491322412`*^9}, {
   3.865356726928239*^9, 3.86535675400958*^9}, {3.8653568966909695`*^9, 
   3.8653569073245697`*^9}, {3.8653569602766423`*^9, 3.865356975731701*^9}, {
   3.865357167158506*^9, 3.865357170606405*^9}, {3.865357223946353*^9, 
   3.8653572240363226`*^9}, {3.8653573936860905`*^9, 3.8653574653461814`*^9}, 
   3.8653581484318137`*^9, {3.8653592129605074`*^9, 3.86535921807887*^9}},
 CellLabel->
  "In[4743]:=",ExpressionUUID->"c47d3c4e-60ca-4c63-8b5c-ced31cd89cdf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0.6593147593989208`", ",", 
   RowBox[{"-", "0.908243002976981`"}], ",", "0.0827447699239956`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.8648376866338243`*^9, {3.864837721244707*^9, 3.8648377460817285`*^9}, {
   3.864837800602215*^9, 3.8648378151965265`*^9}, {3.864837882180011*^9, 
   3.8648379006680717`*^9}, {3.864917359659708*^9, 3.8649173767071624`*^9}, 
   3.864919300876232*^9, {3.864919337508316*^9, 3.8649193485657187`*^9}, {
   3.8649194958228164`*^9, 3.8649195287531037`*^9}, 3.864920239187001*^9, {
   3.864921249563326*^9, 3.8649212721359825`*^9}, {3.865342438564925*^9, 
   3.865342509036396*^9}, {3.8653477634896584`*^9, 3.865347782729508*^9}, {
   3.8653478492912292`*^9, 3.865348013067874*^9}, {3.86535368874548*^9, 
   3.8653536939258237`*^9}, {3.8653538219528966`*^9, 
   3.8653538384286294`*^9}, {3.865356737715789*^9, 3.8653567547593403`*^9}, 
   3.8653569273791575`*^9, {3.8653569657139025`*^9, 3.86535700435555*^9}, 
   3.86535703851363*^9, {3.8653570911278105`*^9, 3.865357172559778*^9}, {
   3.865357210731576*^9, 3.865357232535606*^9}, {3.8653573843380775`*^9, 
   3.865357407024825*^9}, {3.8653574402422056`*^9, 3.865357560552746*^9}, {
   3.8653576116883984`*^9, 3.8653576483786693`*^9}, {3.865358188766919*^9, 
   3.8653581946510377`*^9}, {3.865358314589696*^9, 3.8653583435974226`*^9}, {
   3.8653592266591263`*^9, 3.865359247679407*^9}},
 CellLabel->
  "Out[4753]=",ExpressionUUID->"8d8f73d8-5729-4551-a67a-68456265e1ca"],

Cell[BoxData["0.10171794033589289`"], "Output",
 CellChangeTimes->{
  3.8648376866338243`*^9, {3.864837721244707*^9, 3.8648377460817285`*^9}, {
   3.864837800602215*^9, 3.8648378151965265`*^9}, {3.864837882180011*^9, 
   3.8648379006680717`*^9}, {3.864917359659708*^9, 3.8649173767071624`*^9}, 
   3.864919300876232*^9, {3.864919337508316*^9, 3.8649193485657187`*^9}, {
   3.8649194958228164`*^9, 3.8649195287531037`*^9}, 3.864920239187001*^9, {
   3.864921249563326*^9, 3.8649212721359825`*^9}, {3.865342438564925*^9, 
   3.865342509036396*^9}, {3.8653477634896584`*^9, 3.865347782729508*^9}, {
   3.8653478492912292`*^9, 3.865348013067874*^9}, {3.86535368874548*^9, 
   3.8653536939258237`*^9}, {3.8653538219528966`*^9, 
   3.8653538384286294`*^9}, {3.865356737715789*^9, 3.8653567547593403`*^9}, 
   3.8653569273791575`*^9, {3.8653569657139025`*^9, 3.86535700435555*^9}, 
   3.86535703851363*^9, {3.8653570911278105`*^9, 3.865357172559778*^9}, {
   3.865357210731576*^9, 3.865357232535606*^9}, {3.8653573843380775`*^9, 
   3.865357407024825*^9}, {3.8653574402422056`*^9, 3.865357560552746*^9}, {
   3.8653576116883984`*^9, 3.8653576483786693`*^9}, {3.865358188766919*^9, 
   3.8653581946510377`*^9}, {3.865358314589696*^9, 3.8653583435974226`*^9}, {
   3.8653592266591263`*^9, 3.865359247683406*^9}},
 CellLabel->
  "Out[4754]=",ExpressionUUID->"4e10f72c-d972-4aac-b593-8289859dff43"],

Cell[BoxData["1.399591736542674`"], "Print",
 CellChangeTimes->{{3.865356965938831*^9, 3.8653570045704813`*^9}, 
   3.86535703873256*^9, {3.865357091341742*^9, 3.865357173091608*^9}, {
   3.8653572113273854`*^9, 3.8653572329794636`*^9}, {3.865357384801929*^9, 
   3.8653574200836506`*^9}, {3.8653574572297754`*^9, 
   3.8653575610115986`*^9}, {3.8653576119153256`*^9, 3.865357648610595*^9}, {
   3.865358189009841*^9, 3.865358211619613*^9}, {3.8653583146116886`*^9, 
   3.865358343834347*^9}, {3.8653592282546167`*^9, 3.8653592479003363`*^9}},
 CellLabel->
  "During evaluation of \
In[4743]:=",ExpressionUUID->"0181eecf-4df3-49c9-9b98-0f0471bd259c"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{313, 2000, 248, 249, 250, 251, 252, 581, 488, 413, 
            355, 312, 286, 599, 506, 431, 373, 330, 615, 522, 447, 389, 253, 
            582, 489, 414, 636, 543, 356, 622, 529, 658, 454, 646, 553, 
            666}}], 
           PolygonBox[CompressedData["
1:eJwV0s1L03EcB/BfQY9uPSyIOgS1zJUKZU9mpHmtLGvZA9ppHWoJGURRgZgQ
WJr5gBDRKc17VKc81SUhLFKb29SsrFtl/4DV63d48X5/P58v237bNqWakpcX
BkGwgGd8WBIEH8no2y1GLdo4SpylTNjtsBvT73KMzSwja1dmN67fo5ZClpOz
22n3SW/nOFsoIG83yRTT7HIvY97BCYqIcMj8p3zCBQ7w2f3d5hP6fZIkqDeb
l8+5QZTDZr9kPxdpco7xVq8kpS/ilX6ba/o6RvQZ77NHz+qd3NI3cFJPywg9
vHa+IxM8Yqtzg/wrH8gXskXGechN56tyLX28C787WcpjVjgfkb/D55MDsllu
JK1fkWsYDn8rWUyVfl4uppsh51ZZSKt+Xa7nvf7Fc+3Vc+Hno45LzlHe6Ns4
p/+TL8PnZiU1ZnPyaXifg3z1WuXmeb2LUxSzKvwPmf+RgzRSzTf395lP6t2c
poTVzNp9p8J+yrmHM5QS44fdfrtpvZez/AfByFWc
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwV0ttPj3EcB/Cnuogb2eRQYWuN2VqoxEVOHUg3UWFDklZudHBoY4tmYWu2
5sIpcZ1TuisucEMXmk1/gUOoSHROd17fi9fe78/neX7P8/s9zy+1urGsITaK
ohgG+BgfRYPM63PMMsM0U0wywRof2EY1Dxmh0IX+OrZa38pJHjBMgWN/HCvW
m+hhgcP2KTKHKjr5Qb79uPP36ed5zj8O2SfLFl4SZ65ii97PUr2eE/p9vpNn
/u1ag3qKfpFr+np5lTf6YnmKIj1dtjGg35LLOReY78pUWug2t8t5eVAmhWch
M7jBB/MduZImLps7ZBpXeGG+KWPD9yXbvEFe552eIOuo1NfKZjr0b+zWx8L7
0pP1C+G36OtkK6/1RbKWvfp7EvWzgf6MOcrNq+Ql+ogJ9yNLf8sS/TTH9XsM
scv8y71b9VfEm2vYo5/hKbOUhd8um+kNf7BwHTL1ivAs+cpOu58OF+qNPGGG
UvsVcjPHwrPkCzvsR51foDfwmGkOhHclN3GU23xmu/2I8/P1eh4xxX77RLmR
I+Fd84lc+2Hn5+l1dDFJif0ymcF/RC5k8w==
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{1, 175, 141, 111, 85, 200, 166, 136, 65, 194, 160, 130, 
           104, 51, 187, 153, 123, 97, 77, 2, 176, 142, 112, 86, 66, 195, 161,
            131, 105, 52, 188, 154, 124, 98, 78, 3, 177, 143, 113, 87, 67, 53,
            189, 155, 125, 99, 79, 4, 178, 144, 114, 88, 68, 54, 190, 156, 
           126, 100, 80, 5, 179, 145, 115, 89, 69, 55, 6, 180, 146, 116, 90, 
           70, 56, 7, 181, 147, 117, 91, 71, 57, 8, 9, 10, 11, 12, 13, 14, 15,
            16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 
           32, 33, 34, 35, 36, 182, 148, 118, 92, 72, 58, 37, 183, 149, 119, 
           93, 73, 59, 191, 157, 127, 101, 81, 38, 184, 150, 120, 94, 74, 196,
            162, 132, 106, 60, 192, 158, 128, 102, 82, 198, 164, 134, 109, 39,
            185, 151, 121, 95, 201, 167, 137, 75, 197, 163, 133, 107, 61, 193,
            159, 129, 103, 203, 169, 139, 83, 199, 165, 135, 206, 172, 110, 
           204, 170, 211, 140, 208, 174, 40, 186, 152, 209, 122, 205, 171, 
           212, 96, 202, 168, 210, 138, 207, 173, 213, 76, 108, 62, 84, 41, 
           63, 42, 43, 44, 45, 46, 47, 48, 49, 64, 50}]}, 
         Annotation[#, "Charting`Private`Tag$2049003#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1GWYVlUUBtA7Q5d0SA8p3d0tYYEBBuqAAgYgCIKKiDSodIMNgt3d3WDR
3d2drv34Y837nn3u1+dOWvqArv1TkiT5xZ+VskZqkvylj+cqypCVVfZq2vtb
n8DVlCUbq+3VsvePPpFrKEd21tirbe9ffRLXUp4crLW3jvVsoI7rVppP5joq
kJOO5vvl8/ShKRtdX9d8lf4kXanIzWYX5DsMIxedzA7IF+jLAOt8/Kg3I13P
xCf64wzRi/C7vsnr1NNX60/xsF6Cbno/mZNpfG09RlZkHldY3yIvyqflu3Kk
LMMchlsPloWYya/x3cmqLOAy687yYHw++aIcIUvTTx8o8/NT/FayMs31XjIz
U/nUepQsxyh9qLycP/TNPld9fU28P67nHutcfKNX4lb9knwvPje56WJ2SL4U
19OCLZ6rgflafQo3UJk8cYbMD8vF3EtLtrq+ofk6fSo3UoW8bLO3nUb211tP
4yaqko8d9hrb26BPpzvLsyRJNZk/zqW9I3IJ99GKnR7TxHyjPoMeVKdAnFXz
o/Jl7qc1u1zf1HyTPjPOFDUoGOfX/JhcStw4bdjt+mbmm/VZ8btTk0Jxjs2P
y2Vx7mjLHtc3N9+iz47vmVrcZpbwvv4IheNcW5+Qr8RvTjt6m2XhM/0J9npY
C+ut+px4nviu4wzxrV6bnnoKH+iPUoRu1iflqzwQrAvws96eu/SsfB6vI8sz
Wn9IFmW5vs9rt9S36XPjfesl6Rnfv8zNd/rYuCeoo98uU5nCh3HPybLMZYT1
g7Iws/jNepKsxsI4v3FW5am4H+Vr8jGZxmwGWQ+SBZmR+v//tQmyCh30u2U2
vtBHywqM0YfJYqzQ9/tMrfTt+rx4v3E2rPPwvV6XO/QMfBSvT9E499an5esM
5koOeK7W5jv0+fE46lEszr35GflGfGY6ctD1bcx36gu4k/oU55C9tvZ26QtJ
pwElOGzvCEc5xnFOcJJTrHCPnJZnOMs5ztPO8+32+EX0oiEl454zPyvfZAid
6GOWnS/j9+SCx7e33qM/E+dKL0XvuDdkXqbzg/U4WYn5NIrPJTPysT6SUnS3
PiffYiidueg1Opjv1Z+NM0ljSnPJXiJTSCUDGclE5vj+PW6ffC5+d5qQRg/z
8/LtOMt0oa9ZDr6K98pwvTh/6pNldRbFfWf9HxDs3NQ=
           "]]}, Annotation[#, "Charting`Private`Tag$2049003#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1GW4VFUYBtDhgnQj3dLd3d3dnYoCgi0IAoqJgUgo0t0N0o00SEmDdJc0
SK39Yz3fu98Td2bOPjdz596Ne0WLRCIJoiKR8eSMEYmsjh6JdCY9N3T7mMBE
JpHLOWsc60IGbur2U1V/xHoApYjNZH1u/Vq5Kxm5pTtANf1R64GUJg5T9Hn0
6+Q3ycRtXSvdDXk49Tmoq647Jg+iDHGZqs+rXy+/RWbetY4wQ77jeGv5pjyC
BvSxjsdi+ZDjNeTj8heU5UPrmMyT44XPJT82J/CdnJbWcj8zIRNZZj3MzMo0
98xnbtCNNLuFe5uvM5k3rHuZ0RjDTOsfzAxM5z/XtzFv6X83R5rfmKnDvWlo
3deMz3iWWA8N9+Uf19Y0T+i+5Cs5JeXkj8xYzJfjh99LfmJOpA39rRPxpzzd
ffLLG+W3ycJdXVvdbXkUjTisq6U7KQ+mPAmYoS+g3yS/Q1bu6Y5QW38qfDYq
kJCZ+oL6zXJ3snFfd5RZzGYOc5nHfBZQyDVbnNuD7DzQHWMhhR37S9eTHDzU
HaeO/rT111QkEYv0RfRbw/4hJ490J6ir/zc8AyqRmMX6ovpt4VmSi8e6k9TT
n7H+lsokYYm+mH673JvcPNG1092Rf6Mxp3T1dWfDXqMKSVmqL67fIb9HHp7q
2of9EvYJTTita6A7J39PVT62js0CORnd5KfmJNryuXVilsvLXF9C3im/H/aQ
nJy84XObUcySfzQz8r/zO5h3daPN0eF7m2loKn9mJmACS61/MbOEe4Tf1LUN
zfPh+5tDwjMxUzGVatafmHEYx0Lrn83M4Z0J71PYm+EzmH+Edyt8ZzMd7eQB
ZhJWyL+a2cLe9jdLmrt0H5Av/J7W0ZktP3O8o3wv3JNmnNE10l0I7ynVSR72
te6ZOYX2LHdeKd3u8D+E/DzXddLdl8fQnLO6xrqL4XekBilYoS+t3xPeVQrw
QneOJvpL1j9Rk5Ss1JfR7w3PmIK81J1nFWUd+zv8hhQiwgX9atawlnWsZwMb
Keeafc77lMJE46J+E+Ud22/dhyJEcUnfVH85PBtqkYrN+gr6A3JfihKdzroH
5lhacNl5zXRX5KHUJjXddc/NqXRgi/Mq6g6GPUWxsD+tYzBHjkEX+aE5jpZc
cU1z3dWw76gTvpd1XBbJaeghvzCnMUROT0d5oJmUSay0Hm5mD/9P3LOSeUg3
yuxnDjZTMIXiYV+ZrzGWueGZmZmYEXrrruYjczytuOqeLXTX5GHUJS1b9ZXD
/3S5PyWIyTX9Nrazg53sYjd72EsV1x0O7zYlicV1fUv99fA+UI909NS9NKfT
iUHWyVgljzBzhHcj7CXXvwKdhw+W
           "]]}, Annotation[#, "Charting`Private`Tag$2049003#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV0nmAVlMcBuAvFUrJkqIiI6SFioTsS6Yi2iVCSYhmogUlRUhp39Fii2hT
ZqaJytKC0q5pmWammmZLZWwRWZ7fH8+897zfuXPuveck9Uhtn1ImkUgk+zOv
XCKxqHwi0Z+bqcavuhzms4CFMYdPWMwSPo2xuQO4her8pstljetR3ENDKpAW
98qB3MrZ/K7LY63r1+nCpVQkPdaRz3Ab53BUt1VOoyfXsFf3jRzNvVxGDu+S
yilk8RaPcT0Z8fzyWVpQg93M5kn+8Ps2OZ1HyGcuzcnjfZ6iiPnsM/9bOYaD
dGU/H3KYRuTyHofoSyHzKKUSO5jBjzzOAT7iCDfEezKHpylmAUutmyaf43Zq
ks3b9OFPv/8g36AX18Zz6b6TY7mPxlRmJzPpzY1kmpcuB5FMLY7p8lnnehz3
04RTWabPkINpybn8pTvAZ3zOclawki/4kq9Yau7ztOI8/tYV8DWZxkNoTW2O
6wpZxTLjF7iD8/lHV8TqWNN4KHeSxL+64jibcd7izMSexbeI92F9PKN5w2jD
BfynK+H7eHbjF7mLOiRir/Ub4p1cv8TdXEiZ2Mf4n3I83bicKmyM95fDactF
nBDnItaRE3iAKziNTfGt5Mu042LKxrmKteVEHqQpp7M5vqt8hfbUpVycI/1G
OYmHuJIz2BJ7IF+lA5dQnp/0m+RkutOMM9ka+yJH0JF67OEdUijg47ifE9nO
mzzKdZS6f7OcQg+uoirbYk/la3SiPifxc5xhtpPFDnayi91kx36bN5LONOBk
ftFvkVN5mKs5i13M4gluYh8f0I8SFsaa8U7u/x8gesCs
           "]]}, Annotation[#, "Charting`Private`Tag$2049003#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1HV8lXUUB+B3wDa6pHtIh6R0tzQjpGOUxUaDiS0gFmKLYqBISDfYGNid
2C0YdONz/nh2vue8997Pvb9YRlZOZnZKkiT7/DmYmiSj0pPkdFqSrGIK7anG
Ic9Ge3ZGXk02HajOXPPSvC7PZziHvX6M2Vl5DTl0pAZHPBvr2Tn5eabSiZoc
9WycZwlr9dPoTC2OeZZlnsI6/XS6UJvjnp3gJKcY7zW5WO/ZDLpShyvNyvCG
vIARnPb6CWa52aCfSTfqcpVZWd6UFzKSM14/0SwPG/Wz6M7t+jp8KT9CPa7W
l+OteM4yuT1/y6NYIjfhR/lpzvrsSfpUNulnx2fJrfhD7sEiuS5fyY/yjNyV
w3J9rpHLs1dep/ZjkfyE2oF/5NHcJzflJ3mTOpDl8kr1IvZwXL9THc67sWe+
32Q1jRfYHHuo9on9Z058J7U1r/Cnfos6ONYgPld/h1qPl/hav0EdwFL5WbUb
R+Tt6lAukK9VK/B2vJ8n5Y78K4/hfvlCfo71IOESfTpb4ozSkzv19flGfowG
XKevyDvxnLGkcKlZXrbGuaEXDclFbvKQShrp5CUf+SlAQQpRmMt8Tj62xZmi
N40owuXm+dke54U+NGaeWaVYd/kuxlGUK8wKsCP2mr404Xqzyrwn300WxZhi
VpCdsY70i8+LdWWf/DhNuUFfhffle3hK7sR/8ngekJvxS+wTq+SenJCLky0X
YlesKUvlNvwl94/vJDfgW3mjmskyeYXandc4qt+hDov9iD3V36hm8CIf6Ner
/eMOszjujdqZVzmo36ZeHGeFCfoH1ea8zK/6zeqguNOs0K9We3FS3qWO4Dw5
Ry3Mbnmt2pd5cW7UtuyXB8RayQ35Lu4Yz8k9OCY34ya5Kh/K97Jc7sIheSIP
yS34Ld5LCabqi8Qdi30lk8X6Rnwf55/m3Kw/n4/kJUyiJNPMisaaxb4ykBbc
YlaNj+P+M5lSTDcrFncy1ptBtORWs+p8Encs7hSlmWFWPNY0fh+DacVtZjX4
NM5L3CHKMDPWNP4nxHdmCK2Zb1aTz2Kf4p5QlllmJWJP4zvHGZXbcUDeqg5h
b+xzrKnamB/izNKGBfpafB7rG3eMcsw2KxlnLX4bQ2lLeSpQkUpUpgoZVGWO
95RiT/xGhtGOhWa1+UJ+OO5mVH1LfpdXskbuzSl5tzoy7mjsm/5/3QHu4Q==

           "]]}, Annotation[#, "Charting`Private`Tag$2049003#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"Feedforward solution\"", TraditionalForm], 
     PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1a\"", "\"u1a\"", "\"x1a\"", "\"\[Theta]dot1a\"", 
       "\"xdot1a\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8648376866338243`*^9, {3.864837721244707*^9, 3.8648377460817285`*^9}, {
   3.864837800602215*^9, 3.8648378151965265`*^9}, {3.864837882180011*^9, 
   3.8648379006680717`*^9}, {3.864917359659708*^9, 3.8649173767071624`*^9}, 
   3.864919300876232*^9, {3.864919337508316*^9, 3.8649193485657187`*^9}, {
   3.8649194958228164`*^9, 3.8649195287531037`*^9}, 3.864920239187001*^9, {
   3.864921249563326*^9, 3.8649212721359825`*^9}, {3.865342438564925*^9, 
   3.865342509036396*^9}, {3.8653477634896584`*^9, 3.865347782729508*^9}, {
   3.8653478492912292`*^9, 3.865348013067874*^9}, {3.86535368874548*^9, 
   3.8653536939258237`*^9}, {3.8653538219528966`*^9, 
   3.8653538384286294`*^9}, {3.865356737715789*^9, 3.8653567547593403`*^9}, 
   3.8653569273791575`*^9, {3.8653569657139025`*^9, 3.86535700435555*^9}, 
   3.86535703851363*^9, {3.8653570911278105`*^9, 3.865357172559778*^9}, {
   3.865357210731576*^9, 3.865357232535606*^9}, {3.8653573843380775`*^9, 
   3.865357407024825*^9}, {3.8653574402422056`*^9, 3.865357560552746*^9}, {
   3.8653576116883984`*^9, 3.8653576483786693`*^9}, {3.865358188766919*^9, 
   3.8653581946510377`*^9}, {3.865358314589696*^9, 3.8653583435974226`*^9}, {
   3.8653592266591263`*^9, 3.8653592518170843`*^9}},
 CellLabel->
  "Out[4759]=",ExpressionUUID->"1301eb0e-51eb-4be3-90ab-3273a61ae967"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
UxVC0v5EnvvC9mHxjfN5YvOL2L47uEGH6cc/zvbdRYPNs7hqEkg9ate4urOc
1zSQetRY8bmHFaxpqDy0mlewfwISq/wuByybpuYrrRm7rWJoX/vJyYjOGni6
4dwa6yQx9Mku+MrBqmqoevT4ocgOcaTmf+7PWvFKIF7bPHDWenlYGRCv7eZZ
c3Qr/s2uL5U9/1eMyyOT7bUSFu7HG8QS2V6bvt7C2kOolO21nfPRxUsTKWxf
ja8+KzVfbpTtq5K5kujQigm2r67+XP2rNHwKSH3oLpuvqZ70aSD1oef9b6oW
5U+DfZGqQtWXSegrz6hx8p5i12vKqKpIKQV2sOs1y9vqbV8XtLHrNT+Jf37v
drr1v3rNkXkqezf+A+Knw683H1Ff3QLET5f45yi76jfDCut1jjlmoggXPN6W
blcPngtPu0GzKJq/ebn1BK0Ovr7p+Vx7QQzd/eE16qlI9bdN69mWNjFkuqJQ
kqu7Coi3CintdjSr/gvEW1sN79t+W1HKrhcVl1+x+kNnPhBvLeQ4Kr1V/yuQ
etGZLVhwjP8L218zSuKeym0vYvup3AFpLe2oMbafSm78dXPTw0kg9aG37WsP
81lNA6kPtT0+oWtHzYeRVxw1AqMn4NGDreJ/tanx6driGrxSDL232v4+ZVUt
TDe43Ez6IIbiunttzstQ6+mu4kReRXHk4sBk5NhXAvFQVNZr7y9VDsRD3+Ym
TPP2/GHXe/L4nJn+0JLF9lALaZPyptwEtof2bjazZN4uAVLPOdGhanxGdBoe
YHuZyBVjwPQVOXKGet91Psl+SpOfAMn6Y+c0nk2z6zWf/HrzqG1DAhQs1mv8
vXYULvdvmzcTPQ3JZ/MktJaOA02UO92/c5rti9z5yt97DUvZvqisNMztKPGN
7YH9Vukb9vSPsD1wWfH5WqHBcbYH2lUejhh+MAWkXvK9cpuLcsk0kHrJ8oVa
SpfLpuHEQF3T2YBJiHV/brQzYopdv0jfxevhkNbBrl+UlF1h+LG5jV2/6LTY
NpTLtpVdvyghiIJ/7f4HxPuWfToWenlLCxDvcxcpzT59vhlM89t+zxmLoq2d
3K83Pq6H8AOfsv7SRdH+kS6/UPk6uHRj4sSciRhaYm473HegBlbIPhw50yCG
JlSyy2Ukq4H4oOK/JdL3hCqA+KB7+c3PVWal7PpJ9VvBp/ve/ATig30910JX
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
t1kJY+k4BKVXqD9ecYEK+f6W4a+RrpuokO9ns68mV8hQIN8/PNOo5SjWBfm+
khb909+BNsj3sQJ/I9PQesj3v3Fta9VBCeT7jrYp+sewSMj3f7eEMJsLsiDP
79+kOpyygY4RPP/9sm0/XUcZ2IDL/uVGEhyQbp58JFse3/8WXNK1ZoujeqNP
HSklFHDRiftghReCjk5E9asfo4KdPtewADaCmvBP8ubtx9dnqZoSV18SKpdh
Vv32GgX6AQHMrFxsXyT0AXa+E77nDRiYK+b9s1qcDcqR8KoYHSbGOqZ+eFyU
CxzfvBI1rmZgpqIVdj47EXR+b66NOD4f3n2qNq/4CUF/LRYeQfH9wTX6bPmg
MQlN71Mb+zVPgX4hdbNNSn1UNvQJ6388WfD4wsBeZj93t+pig4RXy2KENzEx
OumG6sMrCNrvmCN25AAVuNFE0OyfCNpRyfJUwj8f4R/WXOTyJwe/BCb9bets
mhdBqDwzbSv++rx494qlVg4ojbehR/xgYMd5vDZmaCDooTdZwiWCVDAL3ryM
y0RQnq6vuf/w+SjZ8rmxsCYJLapqq/MiUcGw/O0w992LgM1ofH2an4ltUOGL
3WDNAZzpls1LK5jYRMbjwbBgBGU37WFdPk0FQjLtJsdXktBDB+I/t+7Azy9R
LV/Xlg0Oyus/WcLnRy610Ca1AUFnj0jq1+DXG+E3EgtrltcI5kC/YT8t2KqM
MADRb9hjmZO3r4kGiH5Dx88lX7xFh2He5l9rcUAfzyDM2zS8jFwbs9gL8zYb
C5+4RuuTYd6m9LoBsrq7AfqSDlPlA5GCZNh3eOaBleJ+3gHYd/joQ8AFzIkG
+w4T6i7XPwzDv///fMnwjVuO8rpM2H/Iag8T/PiIAfsPc3m95M5M0GDepWTU
qfnwyjbAIxNafyJTFGUYJpWBFZ2guCzojmmKGPrw0+PU07+7gN69qu+kAnHU
Jn7+rd91CvQlS96jO7fspEJfQpo18p46S4W+JMV5/KxGFQX6Eu0XVz65HSBD
X7LzmNoq99wO6Et0WWHkKeNm6EviV+ryzTTWQF8iW6jr69+YCn2Jr6IqvT/z
OfQlJObykpjxDED8vopJPtq26g4d+hKDBrJIfV0P7Ds8EJlssyJpCPYdXho+
NKWfRccIX/JvwmfzkBQTO/5bRMDenwMMIm6lNnLw61dAYEI79C/4HJ69TLqd
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
lte2YhD5/32K//37H9SshD8=
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{301, 1958, 236, 237, 238, 239, 240, 569, 476, 401, 
            343, 300, 274, 587, 494, 419, 361, 318, 603, 510, 435, 377, 241, 
            570, 477, 402, 624, 531, 344, 610, 517, 646, 442, 634, 541, 
            654}}], 
           PolygonBox[CompressedData["
1:eJwl0ttPz3EYB/DvLx22Vhe21kF0mBSdJtwqJESTdaELqi02qznMaLPpQNRs
rXWl+APIFd1wk824EJ1D4S70D+AqK7w+6+K19/t5nt/q+/tWfuuVhstxURTF
GONRUhSNMqlvd3jrcJODpLNmP0WB24S5k0NksG4/zQ63d+Yuqsnkr/0MhW7v
zd0cJot/9rPMMc8CRT436dZDDVtiGw+5335Z3ucMu/ngtNN+Sr/FEbI5afdT
PuYiMSrtvslhznLOnMi4XsFpfVU+5Tpt5hRe6x/9nl36tH6b8OI2c1RvCi+R
Pp6bb8hsBtlqrpe/ZK8clddkOgNcMl+QydzjVXh3Mo8h4sxV8nv4fnJEXpVp
NOnnZRIvw99K5rBHb5R/5F35THbITDr0dpnKG/2TRy/WZ8LzcYxmc4wX+jZO
6b/lk/C92cQBux/yQfg8e1n0s0rsZ/U71JJDfPgfsl+RD2lhH0s+X2o/F56T
4+SSwGe3L5S5z5v7OEEeiXx1K3db0Pup4z8sUVMa
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwV0UlIVWEYBuCTBdqkGYQUQdzKTF1YmUPTpskMGrwOqJvUJqHomoQVRBAt
mmxYVzZBQeUi21QLQ6hVy+a0uZxrV7lIwedfPLzv953/nMs5N9aQiB9IiqJo
Ai+4nRxFdxjWhxhkgH766OUn6W7IpYpL9FDsQT9cm6HnUMlFuily7btra/RG
bvGbzfZpMpsKLvCBQvtvzq/W93KTX5Tap8pm2hkJ99ktlk+YpNdTrp/nPQXm
r571XE/T93NEnyMP81Afo1ZfJefJYzzVT8nJ7AnMZ+UsmrlhPiGH5SY5PXwL
GeM4XeYzciqNHDS3ygwOcd98Uv6T5TJLzpVHeaxPlHXE9ZkyQav+juX6F+/0
TE/V94V30WfLFjr0UWr0lbKTFH13oF9niBLzNNnEPf4St1skH5Gk76BMP8db
8s2f/XaL/oD/VNutkLu4xiAbw7vLBHf5Q5ldptweviVvWGb3yfOK9Z20McAG
+ylyIdvCt+Q1S+0/Ol+kN3CVftaH/0ouYCunecUS+x7nC/V6rtDHOvsUOZ8t
4b/mJXn23c4X6HVcppe19skyxjgYEmI4
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{1, 171, 141, 112, 85, 198, 168, 139, 64, 192, 162, 133, 
           106, 51, 184, 154, 125, 98, 77, 195, 165, 136, 109, 2, 172, 142, 
           113, 86, 65, 193, 163, 134, 107, 52, 185, 155, 126, 99, 78, 3, 173,
            143, 114, 87, 66, 53, 186, 156, 127, 100, 79, 4, 174, 144, 115, 
           88, 67, 54, 187, 157, 128, 101, 80, 5, 175, 145, 116, 89, 68, 55, 
           6, 176, 146, 117, 90, 69, 56, 7, 177, 147, 118, 91, 70, 57, 8, 178,
            148, 119, 92, 71, 58, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 
           20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36,
            37, 179, 149, 120, 93, 72, 59, 188, 158, 129, 102, 81, 38, 180, 
           150, 121, 94, 73, 60, 189, 159, 130, 103, 82, 39, 181, 151, 122, 
           95, 74, 194, 164, 135, 108, 61, 190, 160, 131, 104, 83, 196, 166, 
           137, 110, 40, 182, 152, 123, 96, 75, 62, 41, 42, 43, 44, 45, 46, 
           47, 48, 49, 183, 153, 124, 97, 76, 63, 191, 161, 132, 105, 84, 197,
            167, 138, 111, 199, 169, 140, 200, 170, 201, 50}]}, 
         Annotation[#, "Charting`Private`Tag$2049114#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl03WcVFUYBuDZJZaSbiSW7u42UQl1UUABAwlBQgQEFUFUuu0ADELs7gSb
7u7ubqnn+/nHs+97vnPnzp2dM6ld+qX1TUokEgv8WSBLJScSf+lPcR35uWi+
kNL2/rYeyvUU4JL5IsrY+8f6aW6gIJfNF1PW3r/Ww7iRQlwxX8JSlrGccsn/
P8dwbqJwPBhNzLfJl+lIdVbYKm++UH+GmylCG7Pjcg69SaKp2Xb5Cp14yDoj
P+o1aKefl58wkJ7W2Zinr/Q+FfRF+gj66rlooXeWCUbytfUQWYSJXGt9uzwh
n5XvyQEyP+PpY91DZmEMv8b/TpZgMsnWzeSO+HzyVdlf5qWz3lWm8FN8V7IY
NfX28oJ8Xn4qB8mCDNJ7yWuYr6/y6BX1xfF83MJ91kl8oxflDv2knBufm3Q0
N9spX4vrqcVq96pkvkR/jlspRvo4Q+a75OvcT23WuL6y+dJ4Tm6jOBlYa28d
Vewvsx5JS0qQkfX2qtpbro+iFbNTEolUmRLn0t5u+QYPUIcNXlPNfIU+mtaU
JFOcVfM98k0epC4bXV/dfKU+Js4Upcgc59d8r5xGF+qxyfU1zFfpY+N7pzRZ
4hyb75PT49xRn82ur2m+Wh8X/2fKcKfZKfk+/cga59psv5wR3zkN6GD2n/yM
x9nifrXM1ujj4z7xv44zxLd6WdL00/IDHiUbLcwOyLfoFqwz8bPekHv0i/Lz
eB+9EIP1R2R2fte3eu/a+lp9Qjy3npu0+P/LdHynPxG/CcrpbeWZOCvyQzlQ
FmAC/a0fllkZy2/Ww2QqU+L8xlmVB+UI+bZ8TOZjHN2tu8vMjOYX66GyOI30
e+Ul+QWD9cIM0XvLHPyhb/OZ6ujr9InxvHE2rNPzvV6eu/Sz8qN4f7LHuTc7
JN+hB43Z7l51zdfrk+J1VCBHnHvzw/Ld+Mw0YYfr65lv0CdzNxXJyU579e1t
1KfQjkrkYpe93exhL/vYzwEOMsdv5JA8zBGOcowG7rfJ66fSnsrkpqX5ETmT
njSlo9ll+WV8nxz3+oZmm/UX4lzpeegQvw2ZgVH8YP2kLMokqsTnkufkxwwg
D63MjspZ9KIZJ7xHI/Mt+otxJqlKXk7aO8VpznCWc5znAo29bqvrXorvnWrk
o7X5MTk7zjLN6WR2RX4Vz0of65z8qQ+XJZkavzv3vQp7ht8I
           "]]}, Annotation[#, "Charting`Private`Tag$2049114#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1GWAFWUYBtDZZenujqW7Ow1UBEFBwQIUFMQCEUFQQbFbaZDu7u6Qkgbp
Bomlu8vz/Tg+7/vMjHfnzh3iW3do0j4miqIE/+kdG0VxcVE0PFEUPUcqDutW
04e+9COxc0Y41pDUHNGtoT9JHBupa0QajurWkke/0N6WwtzWDSCpfpT9edJy
TFdet9n8GdVZp8urW2R+hyLc0Q0kmX60/QXSUdd+RP7Kcccr2LeYP6cG63X5
dIvN7ShKfftJ2Zu7jtey7zV/R0vzHfkUjc3n5aDwd5hjGeT85HKM7l3ZWL4s
r8pOMn24Vh6V7eVvspW8L7vI/1xfUW61vy+/kM3lLdlZ1gzfjTwrO8oBso2M
+Me18XJJ+GxeM9+QxWhgPiX7cM95te37zN/zNE3sF+RfgeMp7GNDT4Zwjv2Y
/J0TjleybzN3pxYbdPl1S83vUZz7usGk1I+zv0hGTuo2UkC/LNwnJXigG0Iq
/Xj7S2TilG4TQxnGcEYwklGMJrVrJji3KZk5rdvMGNI4NlHXjCwk6LZQUL/c
/gEleagbS1r9pPDcyMoZ3VYK6VfYP6QUj3TjSKefbH+FbJzVbaOwfmV4zpQm
Yrw+vX6K+VWyc05XWbfd3IPabNcV0a0yd6AMMUzQZ9BPDc+XHJzXVdHtMH9J
HXboiur+Nn9E2fAO20/LvsSG8+z75Q88E56P/aIczETXZ7RPM78e7s18TeYM
55qPyz9obX4gLzi/qvnf8H3Kr2QLeVs+Ft5H8zn5sRwo28oYuoZrXFtMrg6/
HdkxfKa8KT+R5WRDmRDuRfaTb8tH8lOZKHyGPBCejfxRviHvynrhd2S+JIcw
yWdlsk8P7xW5wjnhvZN/ctHxavad5p48zk5dcd2a8PdTnrhwTHdQ/sSzTHZe
Zt2McO/k5pKuum6X+WueYJeuhG6tuRMVSMwUfRb9THNL8nBZt5uS+nXh+6Ai
SZiqz6qfFe6XvFzR7WEa2RybrXuTfFzV7WU6M5jJLGYzh7nMI7vr5ji/FfFc
0+2jlH69vTOVSMp8fQ793PBbID/XdfspHf5NsnehMslYoM+pn2d+iwLc0NXQ
7TZ/w5Mc0JXRbQjPmCo0sp+R/Ukevkv7IflzuEfzPVmfpubLcigL/X9y2eeH
30x458zXZcHwzMwnwvsle4W/Rz6UN11T07zH/C11Oagrq9to7kpVUrBIv5gl
LGUZy1nBSlaR23ULnNuGQtzSHaKcfpO9G9VIGe5dd1j+QgOa2a/IYbQLv3W6
hffa9f8Dt9z63Q==
           "]]}, Annotation[#, "Charting`Private`Tag$2049114#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1HmATlUYB+BvamSJElIpiZJdi9KiomxZikiWUE3JUqFNYhiUfVf2yBIl
hDEzGGbGDAaVUpb2lPaILKU9z/vH873nd86595577r1f5ZR+7fomJRKJtn4G
JScSLxRJJJpRhh/kLaxgMKkMYShpDGM4I3jR/OaU5Ud5KyuZI3ejBv/Jn8Y1
GCnfSTl+krfxFnPl7tTkf/mzODej5Bacz89yIa9r96E+Z7NK3yvqA9QiwRqe
oRGfG1+u9uVmziWD52jMSOOj1ZaUZx2DOBRrU5/kVjYylO3631AfI58b2EAq
JVnLALZyB7kMZwerHTtPfZDN1GY9g9lGEuk8yxZuJ4dhcV2+iOei9qOABmQz
hNJkMpAmjDJ3jNqKCzgsr1Kf4rZYj7xMfZwbKRX7pm+++hB1OIMvY38Yq92a
C/lF3kl6XCPGGMd4JjCRSUxmSow55i4u4oj8NmuZGsfou5sKHJXfIYNpcS59
bbiYX+V3yeSluIa+tlzCMXkXWbwc19Z3DxU5Lr/HOqbHmvS141JOyO+znhnM
ZBaz4x2OtZvTnkqclHezId7XWLu+e7mM3+QPyOZVOYW6nMmBeD/jfrQ7UJnf
5Q/ZyAL5Ya4ima/iHYl71L6PKpyS97CJhfIjXE0Rvo5nFvet3ZHL+UPeSw6L
5B5cw1kcjDXGXmh34gr+lPeRy2L5Ua6lKN/EGmN/tDtTlb/k/eTxmtyTehTj
21hj7KV2F67kb3m1+jQN2UQahXxk7E31CW7inPg29C1Re3Edxfku7iWej/b9
VOMf+WPyY92xljiOpfE/Ed9pvONx/nim5nelOv/Kn1AQc+XeXE8Jvo//MLU/
t3AeWTxPU/IYwU6Wm3sagT66Bw==
           "]]}, Annotation[#, "Charting`Private`Tag$2049114#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1GWAVFUYBuC7xC4p3Y10S3d3uzY2BhagoIAooqgoIoqidIPd3d10Cyzd
IN0g9Xw/Ht73fOfM7J07dyjXd2D6gJQkSTL8syBrktRPS5JVqUnyLJ0oyjnz
3uaH9TncQX0WmjcwX62PpjPFOG++iIb21lg/RxeKc8F8MY3s/Wv9PF0pwUXz
JTS2t9Z6DN0oScJSe03srdNfoDulSGGZvab21utj6UFpMrHc3gpW0syZDLMX
6UkZMnOl+RE5lztpwCrnm5tv0MfRi7JkId38qJzHXTRktfMtzDfqL9GbcnG/
zDLzuT6ErFxlfUzO524acb9ZTr7Xn2CN92tpvUl/Oa6RQdb5+U0vH9eqZ+GL
uM+yMkP1x2VJFuupXK0fl2/Ed6tXpJ8+VBZhMn/HdctazKGx9QMyFxP5Ie67
rMZMRlo/KcsyleXWr8grmBffr+tvJTebvybHy6fl5Uwn3XqwLMDv8Z3IGrEf
91Rm5ct4RmQVhukjZCmW6Glco5+Qb3IPw6yL8o/ehP56bn6Ma2Wta2ptvSWu
Nb4HKpCNa81Pyre4l6asc76N+Vb91biPVCQ76+1lsIGNbGIzW9jKNrazg53s
oq332ua1E+LaqUQOdttrZ2973Ku4FiqTk+vMT8m3uY9m7HG+vfkO/fU4QxVy
cb35aflOPFM0Z6/zHcx36hPjDFXj2TNL5Sv9UXJzg/UZ+W58/zG3LsYCvQUD
9Mv4SX+Kfd67o/UufVK8noetC/KHXo1+ehpf62NkVYbHcy5Ls1QfL+vEe+t9
5Nn4bPI9OVpWYgb9rYfL4kxhYfw+ZG3m0tJ6oMzDJH62HiurM4tRcd2yHNNY
Ed+trMt/PksnudtsMs/oFeijPyIL8adePZ43PRvf6I8xUi/DMj0PN+r/y/fj
nsUZ6xIs0lvxoJ6XX+J3wX5/u7P1Hn1KvJ4a8SyaZefb+F2Tl5usz8kP4rPS
mgNe38V8rz41zlCTfNxsfl5+GH+XNhx0vqv5Pn1anKEW+bnF/IL8iIdoyyHn
u8U90qfHGWpTgFvNL8qPGUQ7Djvf3Xy/PiPOUIeC3Gae8Ik+mPYccb6H2QF9
ZpxhiHVh/tLHyZrMjv9j4rcgc/CdPoJC3G6dwqfxDNKBo963p9lBfVacoS6F
OWbvOCc4ySlOc4az9PK6Q87Npi/1KBLdPBOfxXNBx7hP1vn4NZ4bRunlWalP
kPWYH8+E970EQO3yrg==
           "]]}, Annotation[#, "Charting`Private`Tag$2049114#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"Test on dynamics\"", TraditionalForm], 
     PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1b\"", "\"u1b\"", "\"x1b\"", "\"\[Theta]dot1b\"", 
       "\"xdot1b\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8648376866338243`*^9, {3.864837721244707*^9, 3.8648377460817285`*^9}, {
   3.864837800602215*^9, 3.8648378151965265`*^9}, {3.864837882180011*^9, 
   3.8648379006680717`*^9}, {3.864917359659708*^9, 3.8649173767071624`*^9}, 
   3.864919300876232*^9, {3.864919337508316*^9, 3.8649193485657187`*^9}, {
   3.8649194958228164`*^9, 3.8649195287531037`*^9}, 3.864920239187001*^9, {
   3.864921249563326*^9, 3.8649212721359825`*^9}, {3.865342438564925*^9, 
   3.865342509036396*^9}, {3.8653477634896584`*^9, 3.865347782729508*^9}, {
   3.8653478492912292`*^9, 3.865348013067874*^9}, {3.86535368874548*^9, 
   3.8653536939258237`*^9}, {3.8653538219528966`*^9, 
   3.8653538384286294`*^9}, {3.865356737715789*^9, 3.8653567547593403`*^9}, 
   3.8653569273791575`*^9, {3.8653569657139025`*^9, 3.86535700435555*^9}, 
   3.86535703851363*^9, {3.8653570911278105`*^9, 3.865357172559778*^9}, {
   3.865357210731576*^9, 3.865357232535606*^9}, {3.8653573843380775`*^9, 
   3.865357407024825*^9}, {3.8653574402422056`*^9, 3.865357560552746*^9}, {
   3.8653576116883984`*^9, 3.8653576483786693`*^9}, {3.865358188766919*^9, 
   3.8653581946510377`*^9}, {3.865358314589696*^9, 3.8653583435974226`*^9}, {
   3.8653592266591263`*^9, 3.865359251932047*^9}},
 CellLabel->
  "Out[4760]=",ExpressionUUID->"7a03d1e1-c206-4cd4-9ac6-4823203d3c5f"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
/w8s3cwf
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{405, 2448, 2446, 404, 761, 661, 579, 515, 467, 436, 
            778, 678, 596, 532, 484, 794, 694, 612, 548, 812, 712, 630, 830, 
            730, 849}}], 
           
           PolygonBox[{{2445, 2444, 390, 391, 392, 393, 394, 751, 651, 569, 
            505, 457, 426, 776, 676, 594, 530, 482, 793, 693, 611, 547, 395, 
            752, 652, 570, 815, 715, 506, 800, 700, 837, 618, 825, 725, 
            845}}], 
           PolygonBox[CompressedData["
1:eJwV0UlIVWEYBuBjNii1snKTChallaZE4kIiRLOCFhLYSltEWs6aC8uhYe3C
ndN1aJcra5PZoILRIohIrOzSYOWUjXsr7TmLh/d7/+8e7vnvTT1ff6ZuQxAE
MYzSER8EnVxw8M6imb0s6vfoopz3zq6wjyV9lG4q+ODsKmks6/fp4SIfnbWQ
zld9jF4uUUkVc3at7GdFf0Afq3oXhWzklbNqPpnbOMA3/SER/ujdHGcTr53V
8NnczkG+67tivaO5nEf6Vv22uYSd4R31KdlAv/1f2UMR2XbP5WZSzeOymjc+
l6CPmEs5Yn4pk8J7mZ/Kk7JJHpVRWSxrPffFfI1jeobMlM/kKfnDPkmOhb+D
rJC5ckaelo/tt8lhPV+elYflC5kY/ifmJ7KRPPOsHPDMP9nLCbaw225C1jBr
v12/Yy4jmTpn8/J6+H781McZZE3vC+9HHG+d1bNgvsEhfukTDLGuR8L7Ec8e
3zUpa4na79DvmgvkOZkjp2VK+J/YL8qbZPFbn+QWjVymif9R+WAj
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{2445, 2446, 435, 466, 514, 578, 660, 760, 403, 434, 
            465, 513, 577, 659, 759, 402, 433, 464, 512, 576, 658, 758, 401, 
            432, 463, 511, 575, 657, 757, 400, 431, 462, 510, 574, 656, 756, 
            399, 430, 461, 509, 573, 655, 755, 398, 429, 460, 508, 572, 654, 
            754, 397, 428, 459, 507, 571, 653, 753, 396, 483, 531, 595, 677, 
            777, 427, 539, 603, 685, 785, 458}}], 
           PolygonBox[CompressedData["
1:eJwV0slLVWEYB+CjVtLg0KK0IM0okITITJNoES4KstTcpG1KN9kmIbQ5K4cm
+xMaHXPYWG7KzdVKIwhBIsLSbGODFY7psucsHn7v+/u+c7ncc9PKK4vPRAdB
EEWExpVBcI8GRT111HKD61yjhqt08JYlcn3IXf5yxf6NteajNBMbEwRPdUMs
skd3hz9ctm+R5fSS7O6ELtFcRBMrdO26jebjdJOoG9SdNveRav9nzzHf5jeX
7NVyiAznaXKEHHOZfE6S+at7BfKjfa+slAdkv9wmE+Qh+V5mykK5Xz6Ry2Wb
5wvlJ/s+eVYelK9lutwg8+WwzJKlMk92yQT5xvMfzLnmCvmSFPOC/p15hzlb
3mKKi/oqOch2Z5vlSZ6x3j7uPHyxEbba42UBj1lmb3WebC6hk/jwu+pOmV+w
yT5v322+yS8u2FPlCXpY586YLs58hEfE6Fp0SeZjdBCne6WbI8vewE/O27+w
xnyYh0S726wbYJZdunp+cM7+mdXhb8kDotxv0vUzQ6auju9U20dZFb477od/
9PCd6SJMs1NXyyRV9v+JZ16E
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1Hl8z3UcwPEd7MBE6WRbjjI1Hco29zpsa0u1lcakZelQTEnu7oMOCt0l
SjeFihDRXTqodLiiu8hRbp3P98Mfz72+n/d3+/1+3+/n+1vzmsEVtYkJCQkX
+xFt6Mf7OiFmdLD+UxfQnVzrn3QmN3ESR5qt0mlcS2XMzX7XVxhHEgeYfaD3
0J8i2pr9rC9yMyfT3Gy1PsEwepFMI/MP9V4uoZj2tDBfo08ynN7UobH5Mp3I
pZSQR0vztTqdEVRRlwPNP9JJXMYZ5JPCQc59rJO5nFIKSKWJc5/ofQygLO4b
aRzs3Kd6P1dwJh1Jpx71aUBG3Pu4R3Gd8dnj88T7xuvH63AIh3IYh3METWlG
Jllkx37EPYz7EtdKq/hbn2O5PsCV9KBTnDNfp08xkj4cFe9jvkIfZCBn0TnO
mX+rTzOKCzg6PpP5Z/oQgzib48x+0Ze4hS7xu2br9RlG0zf23GyzvsodtI7r
M/tcH6Y27pn1dl3IORxv/avO4lZOsd6nb9I1XsN6gz4b++g4iTFxTnfrG/E6
jtO5MJ4j3aK9dG7sk9blIu60Pk3/juvVt/VcbUANObEX+oX21Ee0OL5M9GVw
3Gvdob319bifmkq54xP0N53NbXQjx+w7fY7rYma9R5dQTZ71Vp3HXZxu/Y++
Q5t4LqxX6qOUxHebq2IPdacuij1ynEaF4xN1o1bqHC3TOlRzu/Wp+lc8H/qW
Vmh9+lEY76nf6/n6vJZqctxbrrcu1L1apUu1XOvF/XWcr9v0tXguHadwt+Pu
+q++yzHxnFt/qY9xdTxP1rt0cewH7aw36cuMjWci/s7sB32BG+jHsWSaf6VT
GMJ5cY3kkuXc1/o418Sexv7TNp7pePZiz+Keke13v9GpDI3rj72I9zD/UWdw
IzUUmP2h8xlPkfV/+l68v+OMxP3/h9tZ/w+peZVS
           "]]}, Annotation[#, "Charting`Private`Tag$2049226#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1GWYFWUYBuCzu9TS3amiKNiBgoiIWKAgdivS4Up3dyzdndIdEtLd3d3d
3dzf5Y/b533embOeOTNDnnJxZf+KikQi1/ynPPujI5H65OWkPpu+VOCAXQOe
5ZQ+h35U5KBdQ57jtP4v/anEIbtG5OOMPpcBVKYKVTnsWGOe56w+j4Hc0/vy
IQnYYVeNI+YmvMA5fT6DuK/3owQJ2WlXnaPmpuTnvJ4txnc0V2CBnkwfa/6G
DOEa9WXybwY7/kD25yNecWyDTEQe80JZjV3OS6tPMf/MG+YtMnu4LvNK+Yms
LYvIvbKMrOFzx8zNKKoXkC/KtfJTecHx7HJu+B1kRVlQbpel5H+OJ5fj9GLy
W/ma3CQzhntiXi5rUti8Ww7xmYdyAB+TmKccWySrs9vxdPpU8y/kIDwox2Xz
8P24qC9kKI/0geH6SMIeuzhOmFvwEpf0RQzjsT4oXB+xPO3/tVjWYK/j6fVp
5uLyV/mm3Cpzhnvi+EnZkpe5rC9mODWpRW06x0YideQp57QK940r+hJGhIfe
3xxs9xlJ2WdXl9Pm1rzKVX0pI4ly/hC7kiRjv109zpjbhN88+v/3aBmjiHb+
0HCPSM4Bu/qcNbflda7ry0nh3PH6d2RitF2M3TDz56TgoF0Gu+nm38gV3ke7
c7JdeN64oedwzjxzJVboKfUJ5u/JzBi7BHbDzV+Qkmf0JeEec8jxjPoM8+/k
Du+ZvkrWoaHj52X7cF/CvXVsnbxpn9M831yZt8075Er7VOaJ5g/kD+Ha5ebw
W8osMp9cEZ5FWUu+K/fI0vIfn08oR+jvy9Lh3siN4d7JVDKvXBreTxknC8ld
4frkYZ/PJGfqf/CWeVt4d8lvXi3r0sh5F2SHcA639FyOLzBXYZWeWp9k/pGs
jLVLZDfSXIbUHLHLbDfLXC68VzS2uyg7UpDb+mrGkdi5o+y+JA1H7Zpwydwp
/I7c0dcwnqY0ozktaEkrWtOGtnTx7LeT7elARzpx2d/qzDvc1dcygSS+w2i7
sqTlmF0Wu9nmP8P7GT5nd0V2Cb9vePccXy/v2ecO/w6ZS8iq4e/LneHZlfG+
yzrnpDFPtvuJbEy0i7UbY/6KdBwP352r5ngKc19fzyTiuWbXNTwjPNA3MJmu
XLfrRhEe6huZQjdu2HXnPR7pm5hKd27a9aAoj/XNTKMHt+x6hmePCFvsptOT
23ovihHFVrsZ9OKO3js880SzzW5m+J5+j97yrl0fihPDdrtZJA3PvP416Tlh
l9Vujrl8eFcpoK+R9cL1mPeF50f2ce4TVyIBQQ==
           "]]}, Annotation[#, "Charting`Private`Tag$2049226#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV02WAFlUYBeBZdpfuMlERERXEVlTsbl1KpZdUYZcG6UYlFSkJCenu7u7u
7ly60+f+eDjvuTOzzDdzJ29ickJSTBRFKf5JiI2iVXFRVIVsrNf/pS3FKE4J
VjtWlexs0AfSjqN6SwpxSp9FSdbo1cjBRn0Q7Tmmt+JZTuuzKcVavTo52aQP
5qa5B+9xT+/AcXNrCnNGn0NcvHvWvyAd31tbJ38iF5v1jM4Zbi7GEP2W7Mn7
RPxm7YRsw3Ok6NlcMyb8Pebq8fpA85fkNy+Q6bnfPFm+JsuH3yZXyB9cs17+
HP6mtdzyETlTFpFbHM8kR+gvyeKygFwki8r/HL9t7sUL+gcyn5wn35AxMrec
KF+RZWVBuUz+7tqTsi3Pk9f6HHnWenbz2HB/zNNT64PMX5GBB/QpsgI/Or5B
/sJ9bNWHcsfcmw9JxR/WTsl24V45p8+nNBv1GuE5sU0fRkdO6+15kfP6Asqw
Sa8Z7oPt+nA6UZZylKcCFUmkEpudm8SD7NBH0JnKbLGWzEPs1EfShTN6h/Ds
uaAvpApb9Vo8zC59FF1JCfuEl7moL6Iq2/Ta5GG3PppunA3vIbwbLumLqcZ2
vU7YC+zRx3DX3IePiOVPa+fCc+VVLutLqM4OvS6Pslcfyz3zP3xMHH9ZOy87
hn3JFT2H9zouvFOW6mn0weavyRienT5VVgzfjuM7ZT0eC/+XY7PkPuuZzSPN
JXjKvFiOsx6Z+4b3KT+RT8j58k0ZH/aPnBR+jywnC8nl8i3Z3fUXzJ3CftWL
yMflXPm6vOp4Tjk+PH9ZWj4jl8pljqU1DzF/w5PmhTJTeOfmaTIxfIfO2yXr
h++B/XoWx0eZSzJej9H7mT8lNX9buyg7h/vgmr6cdOH71L8lc/g+rO2WDcJ9
c0CfQA8u6V3CN8t1fQU12KM3JB8H9Yn0pCZ7rTUKz5BD+iR6kUQytahNHepS
j/o0YJ9rfiU/h/XJ9Oay3jW8D27oK2nIfr1xeG4c0afQhyt6N4pyU19FIw7o
TSjAUX0qqTyP/vpnpAl70drVsI/D++WWnss5E8xlWK2n14eavyNL+N706bJS
uH/HD8qmYY+FPejYbHnMelbzaHMpnjYvkdOsx5oHmD8nLX2tXQvfAm9zW19D
Yw7pzcL1HNen04/renfe4Y6+liYc1puHPccJfQb9aUozmtOClrSiNUec24KC
nNRnMoAbYV/xLnf1dWRw78P0BLKSR58hK1PYvDL8BtnGuf8DIg8Dng==
           "]]}, Annotation[#, "Charting`Private`Tag$2049226#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1HWYlUUUB+APFRAVu0ERuzsw6VJYYOmGpcNdursbpGstMEABC8TAJJfu
7hZQURDEgPf88d5zfjPPfb4738zc/GkZqenZkiTJ8lEwe5Jk5kiSwpzWf8Uw
WlOIwhShKMUoTglK8qbvFOEv/dcMpw3zjdXiajbIH1CKt+SinNF/wwjaxjON
1eYaNsofUpq35WKc1X/LSLLkdO7kkNwunq2vw7VsknepfXiWGfJ6tSMP8Zt8
QB3ES7wqv6MW52/9UXU4C/Rb1e48wUnGMcr4cjWDf7iLE7zBRTmT5LD5ffoB
nOeFeD9MJof59rF2fd14HtdxjJFkM7/Z/G59X/7nOU4xkZnmNqideDjWwhh+
N35QHczLvCa/q5bgnP47tul78GT8VnmF2oq7OSJ3iHesr8f1bJE/ogzT5JKx
Xv33jKYjZUmhHOWpQCoVqcR03ynFv/ofGEMnKvOe8dL8p/+RsXSmCu/HvsT6
9T8xji5UpRrVqUFNalGbOtSNsxbrj3ev/5nxdKVenCvjZUhYKE+gG/WZYaxs
7AGL5Il0Z4FcnxvYKn9MGjPllNhzFsuT6EGDeG/GynExS+TJ9KRhfN9YeS5h
qTyFXrFHcho3sk2eRaOocgWys0yeSu/YB7kBN7Fdnk3jqHJqnDWy5O1qT57i
D8bHs52zTHMr9a25h6Nyn9gnfUNuZoc8hyZR5YrkZHncffrG3smNuIWd8ic0
jSpX4lJWxN2nX+yn3Jhb2SV/SrOocmVysTLuPv1jD+Um5GG3/BnNo8pVuIxV
cYdZpW/DvfwiD2Chvil52SN/TouoclUuZ3XcF1br23Jf3El5IIv0zbiNvfIX
bNR35hFOyi1jXF+NK1gj71B78TTT5DVqO+7nuDyIxfrm3M4+eY/ajwLMlTep
XXg07jhjYw+NH1KH8Aqvy3PV6uSOdTOCtcZ3qr3jjvEMfzIhzpL9n25+rb59
3E8e4FdGx7k1f8L8fv3AuC/yi+oZpsQZkAebX6JvwTnyxboYxX5ze9X+PM9p
JjHP+Ga1K4/F75EPq0MpSLo8T63BlayL/wnW6TvwYPxGeQhL9S25gwPyl2RE
lWtyFevjv4ShLIt3RX4OyvPZou/G45ySj6jDKMRZpsb5tdZW5i4AEHUEFQ==

           "]]}, Annotation[#, "Charting`Private`Tag$2049226#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1Xf8VQMcxvHboJ2KFqE0kKgo7YE2lYamdtqDaGhradEeNI1IaKmMSntr
alMURam0aMf7+8fn9Tyf59x+7jn3nCNXy661uyRJJBKDkiYSqVIkEn+lTCRa
4bI+E81QCnelSiTetmfDWj4YqXGGt8Y/+iw0R2mkwVn7K/hXn40WKIO0OGdv
gyv6B2iJskiHv+1tcVX/EK1QDulx3t4O1/SP0Brl4/vhgr09rusf4xU8gwzI
iEy46HgH3NDnoA2ejc84v+H27FjHh+BuXOIdcVP/BG3xXPw9nx9hvxfr+VDc
g8u8E27pn6Id8vvsh7ancIRXiO9iG8nvwwY+DMVsC3h5nOaZ8Y/eGbf1uXE+
PvMtrxbnyh/jH+lF0Fw/KI/aX9Q36w1RMc6Fj9JzoIm+T260V9XX6LXjPPXf
5Nv24vpCvad8Jn5j+bMcIv9y/CW5nfeXTeWr8k85QmZx/F+9C17n//FGcg8f
KD+Lay6/42/K5+M3lb/Gb+NYAf1jvSha6IfkL/Za+ha9ESrF9eaj9fuxiVfj
a/U6GM5L8EX6szjDs+KK3hUJzOMd8bjPzeFP41deOa697R3+ADbzEciGq3Gu
SILPeSdUQXZcs72GpPiCd47ri3txH3LgfjyAB5ETufAQciMP8uK6f98NyfAl
7xLnhny4EdcUyTGfd8XzyOL7vmt7EFv4SDyMm/wN3IEF/FW8ENfC58fYcmIr
H4VHcIt3x51YyF/DEz77CS+GY7x6XAvbWJ4L2+I78HV6XYzmJfli/Tmc5Y/i
tt4DKbAoniOfWa6/EOfLC/JP9eJoqR+Wx+219a16X9k47it5UtaI666Pi3OU
D8mmcr98S/4Q5yrX897ypXg25e9xj8fv63gp+RXvJSvE+0oekUPlOcfryR18
gGwWv688JfM79l88H0iJxvYf5eJ4vvUVevX4rXghPlcvgd94Hb5Nfxk14/7g
4/Xc2B7Xl2/Q6+FdXpoviecYf8czj4StF0+Fr/gbKBzPFi+J3+MdEPedbQLP
gx18TDxfSGJ/05YaS3j3eL7iHrVPtOXFTj42ng8ktfe2pcFS3iN+l7if7ZNs
+bCLj4v7BcnsfWxpsYz3jPOOe98+2fYwdvPx8bsjub2vLR2+5r1QN54T+xTb
I9jDJ8T1xB32frb0+IZX5CvjnkB7/ZgcFufo2JNyHi+FE/HuimfPNpU/ih/5
xLh+uNPe33YXvuW94x6I59T+Xvzu2Msnxd9FCvsAWwZ8x/ugfjzT9vdtj2Ef
n4ynkNI+0JYRy3lfNIjn3z7NVgD7+RQUQSr7W7ZMWMH7oWG8K+zTbY/jAJ+K
okhtH2S7Gyt5fzSK94p9hu0JHOTv4WmksQ+23YPv+YD4nrbPeWmc5I3j3WOb
yQviEH8fZWxLeSWc58WQ1jaEZ8YqXol/H/c5BsY58S/0MviDvxzvKdssXgiH
eQ2+Ua+PabwsX6ZXRhv9qLwQ11nfqTePdwZPx4fqWeLZ0vfK1fbK+ir9RXTQ
j8f7Ia6X/mW8k2RZ2Ur+JAfH/8vi/ot3CO8nm8iu8g85PDzel3I27y4Ly2by
gBwUf8fxmnIT7yMbyM7yhJzuWDn9a70K2uq/yItxL+i79BbxvuDp+TA9K9bw
Kny1Xiv+O/Eb8vl6OZziTeNda/uAP4mf+QyUt33Dq+JS3EN8t94S3fTTcqQs
6dj/9TM6Pg==
           "]]}, Annotation[#, "Charting`Private`Tag$2049226#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"LQR feedback solution\"", TraditionalForm], 
     PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1c\"", "\"u1c\"", "\"x1c\"", "\"\[Theta]dot1c\"", 
       "\"xdot1c\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8648376866338243`*^9, {3.864837721244707*^9, 3.8648377460817285`*^9}, {
   3.864837800602215*^9, 3.8648378151965265`*^9}, {3.864837882180011*^9, 
   3.8648379006680717`*^9}, {3.864917359659708*^9, 3.8649173767071624`*^9}, 
   3.864919300876232*^9, {3.864919337508316*^9, 3.8649193485657187`*^9}, {
   3.8649194958228164`*^9, 3.8649195287531037`*^9}, 3.864920239187001*^9, {
   3.864921249563326*^9, 3.8649212721359825`*^9}, {3.865342438564925*^9, 
   3.865342509036396*^9}, {3.8653477634896584`*^9, 3.865347782729508*^9}, {
   3.8653478492912292`*^9, 3.865348013067874*^9}, {3.86535368874548*^9, 
   3.8653536939258237`*^9}, {3.8653538219528966`*^9, 
   3.8653538384286294`*^9}, {3.865356737715789*^9, 3.8653567547593403`*^9}, 
   3.8653569273791575`*^9, {3.8653569657139025`*^9, 3.86535700435555*^9}, 
   3.86535703851363*^9, {3.8653570911278105`*^9, 3.865357172559778*^9}, {
   3.865357210731576*^9, 3.865357232535606*^9}, {3.8653573843380775`*^9, 
   3.865357407024825*^9}, {3.8653574402422056`*^9, 3.865357560552746*^9}, {
   3.8653576116883984`*^9, 3.8653576483786693`*^9}, {3.865358188766919*^9, 
   3.8653581946510377`*^9}, {3.865358314589696*^9, 3.8653583435974226`*^9}, {
   3.8653592266591263`*^9, 3.865359252177969*^9}},
 CellLabel->
  "Out[4761]=",ExpressionUUID->"a959f2b1-8f12-4949-9acb-17c476007dbb"]
}, Open  ]],

Cell["Initial Conditions which were not solved", "Text",
 CellChangeTimes->{{3.865357567824423*^9, 3.8653575802374525`*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"babf6ace-7c59-4428-a267-e74cf670ecf8"],

Cell[BoxData[{
 RowBox[{"{", 
  RowBox[{"0", ",", 
   RowBox[{"-", "1.3903695773492997`"}], ",", "1.2310181542446177`", ",", 
   RowBox[{"-", "0.6104047394312593`"}]}], "}"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
  "0", ",", "0.08036047668264246`", ",", "1.3496547583989287`", ",", 
   "0.6830225774268248`"}], "}"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{"0", ",", 
   RowBox[{"-", "0.6909899189385493`"}], ",", "0.6897150795907763`", ",", 
   RowBox[{"-", "0.7182564346929077`"}]}], "}"}]}], "Input",
 CellChangeTimes->{{3.8653575500541015`*^9, 3.8653575502740326`*^9}, {
  3.86535820377712*^9, 
  3.8653582040260406`*^9}},ExpressionUUID->"b9cd0173-657c-4653-9d1b-\
b1d172b2172d"],

Cell["Plot the timing wrt n for a fixed initial condition", "Text",
 CellChangeTimes->{{3.86491957909173*^9, 3.864919591628652*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"39878c2c-e942-4347-a752-27bba723a924"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"TestTiming", "[", 
   RowBox[{
   "n_", ",", "ICs_", ",", "order_", ",", "A_", ",", "maxIter_", ",", 
    "maxError_", ",", "\[Tau]_", ",", "\[Tau]1_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "t1", ",", "t2", ",", "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", 
      "\[Theta]dot1a", ",", "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0",
       ",", "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "x1c", ",", "xdot1c", 
      ",", "\[Theta]1c", ",", "\[Theta]dot1c", ",", "u1c", ",", "J", ",", 
      "InitGuess"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"t1", ",", 
        StyleBox[
         RowBox[{"{", 
          RowBox[{
          "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
           "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
           "\[Lambda]3ff0", ",", "\[Lambda]4ff0"}], "}"}],
         FontWeight->"Plain"]}], 
       StyleBox["}",
        FontWeight->"Plain"]}], 
      StyleBox["=",
       FontWeight->"Plain"], 
      StyleBox[
       RowBox[{"AbsoluteTiming", "[", 
        RowBox[{"ffCartPendulum", "[", 
         RowBox[{
         "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", 
          "order", ",", "maxIter", ",", "maxError"}], "]"}], "]"}],
       FontWeight->"Plain"]}], 
     StyleBox[";",
      FontWeight->"Plain"], 
     StyleBox[" ",
      FontWeight->"Plain"], 
     StyleBox["\[IndentingNewLine]",
      FontWeight->"Plain"], 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"t2", ",", 
        StyleBox[
         RowBox[{"{", 
          RowBox[{
          "x1c", ",", "xdot1c", ",", "\[Theta]1c", ",", "\[Theta]dot1c", ",", 
           "u1c", ",", "J"}], "}"}],
         FontWeight->"Plain"]}], 
       StyleBox["}",
        FontWeight->"Plain"]}], 
      StyleBox["=",
       FontWeight->"Plain"], 
      RowBox[{
       StyleBox["AbsoluteTiming",
        FontWeight->"Plain"], "[", 
       StyleBox[
        RowBox[{"testWithFB", "[", 
         RowBox[{
         "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",",
           "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A"}], "]"}],
        FontWeight->"Plain"], 
       StyleBox["]",
        FontWeight->"Plain"]}]}], 
     StyleBox[";",
      FontWeight->"Plain"], 
     StyleBox["\[IndentingNewLine]",
      FontWeight->"Plain"], 
     RowBox[{"t1", "+", "t2"}]}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ICs", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";", 
  StyleBox[
   RowBox[{"\[Tau]", "=", "5"}],
   FontWeight->"Bold"], 
  StyleBox[";",
   FontWeight->"Bold"], 
  StyleBox[
   RowBox[{"\[Tau]1", "=", 
    RowBox[{"\[Tau]", "*", "1.25"}]}],
   FontWeight->"Bold"], 
  StyleBox[";",
   FontWeight->"Bold"], 
  StyleBox[
   RowBox[{"A", "=", "0.2"}],
   FontWeight->"Bold"], 
  StyleBox[";",
   FontWeight->"Bold"], 
  StyleBox[
   RowBox[{"order", " ", "=", " ", "4"}],
   FontWeight->"Bold"], 
  StyleBox[";",
   FontWeight->"Bold"], 
  StyleBox[
   RowBox[{"maxIter", " ", "=", " ", "30"}],
   FontWeight->"Bold"], 
  StyleBox[";",
   FontWeight->"Bold"], 
  StyleBox[
   RowBox[{"maxError", " ", "=", " ", "0.01"}],
   FontWeight->"Bold"], 
  StyleBox[";",
   FontWeight->"Bold"]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n1", " ", "=", " ", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n2", " ", "=", " ", "200"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"TestTiming", "[", 
      RowBox[{
      "n", ",", "ICs", ",", "order", ",", "A", ",", "maxIter", ",", 
       "maxError", ",", "\[Tau]", ",", "\[Tau]1"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "n1", ",", "n2", ",", "5"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", "data", "]"}]}], "Input",
 CellChangeTimes->{{3.86491975170458*^9, 3.8649200747844825`*^9}, {
   3.8649201193449864`*^9, 3.8649201277452536`*^9}, {3.864920161157383*^9, 
   3.8649201804041224`*^9}, {3.8649202316614504`*^9, 
   3.8649202570341964`*^9}, {3.8649202887668743`*^9, 3.8649203111236*^9}, {
   3.8649203998797293`*^9, 3.864920406429599*^9}, 3.864920690003351*^9, {
   3.8649207565047197`*^9, 3.8649207687887225`*^9}},
 CellLabel->
  "In[415]:=",ExpressionUUID->"00a37dc2-62ae-4dae-b415-9099fdf1317c"],

Cell[BoxData[
 TemplateBox[{
  "FindRoot", "lstol", 
   "\"The line search decreased the step size to within tolerance specified \
by AccuracyGoal and PrecisionGoal but was unable to find a sufficient \
decrease in the merit function. You may need more than \
\\!\\(\\*RowBox[{\\\"MachinePrecision\\\"}]\\) digits of working precision to \
meet these tolerances.\"", 2, 419, 36, 17534376668544537073, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.864921300968604*^9},
 CellLabel->
  "During evaluation of \
In[415]:=",ExpressionUUID->"823c8845-e644-48f4-aa88-876cd1daeb4e"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGBQB2IQDQEf7F/81GN40c3uABVwSGKw+fs7/Zk9hMvhcMck
xyuj8RWUL+AgU7LubHbgeyhfxKHlQ8bjjtCPUL6Ew4T/sb8+yX6G8mUcfrPu
Trz96CuUr+CwrGbth8uyP6B8JQc33WaFbxEwvopDg8W/X9c9fkH5ag6r4l/W
VJj9gfI1HJ7ae6r5HBWCulfLoSbYvdbjHYyv45BesPTFpMcwvp6Des6sS6G9
glC+gcOju7ftvq6EyRs6zJK4o7BEQhjKN3LI0jLg3KMgBuUbO5Qys947WS4K
5Zs4HKit+HgzF8Y3dTjgIq5fuB2m3syhTMW3qOynOJRv7pDQYPz8/F0pKN/C
4bSo5fyp26WhfEsHt/3HVwXZyEH5Vg41IZuCvj+XhfKtHaR0nhmKXFWA8m0c
In2vC8fqK0H5tg4W0m2vHGNgfDsHC5fGx9f3wPj2DhwPLx4T5FaB8h0cZkW0
Frl3QPkNDg4bwxbzlu1Ug8o7OqguqGjpTFSHyjs6aJX/miOWrAmVd3Ko9Nob
+1RcCyrv5CBXsOPVVE8on8HZYWt70nTfRm2ovLPDFa1fzsbyeg4AVPuhhA==

      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 39}, {0, 15.060938}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8649204607089396`*^9, 3.8649207652348776`*^9, 
  3.864921541499359*^9},
 CellLabel->
  "Out[420]=",ExpressionUUID->"c8081f24-ed3c-49b5-97fd-6320a8ac08fb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Min", " ", "=", " ", 
    RowBox[{"-", "\[Pi]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Max", " ", "=", " ", "\[Pi]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]dotMin", " ", "=", " ", 
    RowBox[{"-", "2"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{"\[Theta]dotMax", " ", "=", " ", "2"}],
   FontWeight->"Plain"], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"xdotMin", ",", "xdotMax"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Init", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]Min", ",", "\[Theta]Max"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]dotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]dotMin", ",", "\[Theta]dotMax"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "xdotInit", ",", "\[Theta]Init", ",", "\[Theta]dotInit"}], 
     "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Tau]", "=", "5"}], ";", 
   RowBox[{"\[Tau]1", "=", 
    RowBox[{"\[Tau]", "*", "1.25"}]}], ";", 
   RowBox[{"A", "=", "0.2"}], ";", 
   RowBox[{"order", " ", "=", " ", "4"}], ";", 
   RowBox[{"maxIter", " ", "=", " ", "30"}], ";", 
   RowBox[{"maxError", " ", "=", " ", "0.01"}], ";"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n1", " ", "=", " ", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n2", " ", "=", " ", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"TestTiming", "[", 
      RowBox[{
      "n", ",", "ICs", ",", "order", ",", "A", ",", "maxIter", ",", 
       "maxError", ",", "\[Tau]", ",", "\[Tau]1"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "n1", ",", "n2", ",", "5"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", "data", "]"}]}], "Input",
 CellChangeTimes->{{3.864920781117711*^9, 3.864920799837621*^9}},
 CellLabel->
  "In[421]:=",ExpressionUUID->"21dbe1b5-6466-4952-9587-d4bdc27c8f51"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBmIQDQEf7F/GfJsw1YTFASrgMG3Vv6CA1xxQPoeDwszM
MMFMNihfwGHtZoHLJTZcUL6Ig9p73W8rXsL4Eg662Wv4TpnyQPkyDroqCSWV
yjC+gsMZnjK5AglOKF/JYYPeDgOZTG4oX8VhUpTGzDlaML6aw7Ybk36Fr4a5
R8Nh0mmVfp817FC+lkOGT3mvzzOYvI5DW2TGcxNvmH49h1ddyXkc+jD7DRzi
jjE3SG7ihfINHfbkfjgfFi4A5Rs5eHy5fqForSCUb+zQknZ9r+hLYQcA9SxG
5w==
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 2.3894566722222272`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 19}, {2.3894566722222272`, 4.977622}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8649218432941856`*^9},
 CellLabel->
  "Out[433]=",ExpressionUUID->"b8dc6135-5b4b-4819-8d59-1be07f569c48"]
}, Open  ]]
},
WindowSize->{1440., 747.75},
WindowMargins->{{-6, Automatic}, {Automatic, -6}},
FrontEndVersion->"13.0 for Microsoft Windows (64-bit) (February 4, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"dbf89052-0529-4a5a-9aea-3964104c39a4"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 271, 6, 51, "Text",ExpressionUUID->"e1d1232c-86cc-4804-8aba-9808e8088f82"],
Cell[832, 28, 82924, 2031, 2372, "Code",ExpressionUUID->"8daba21d-9510-4b30-8c25-b5a0584418ca"],
Cell[83759, 2061, 844, 23, 28, "Input",ExpressionUUID->"2e460f69-71dd-40ea-9e96-aaa585df6372"],
Cell[84606, 2086, 225, 3, 51, "Text",ExpressionUUID->"74e82f71-7d3c-4f7a-b18d-cc3109df4131"],
Cell[CellGroupData[{
Cell[84856, 2093, 11630, 318, 504, "Input",ExpressionUUID->"c47d3c4e-60ca-4c63-8b5c-ced31cd89cdf"],
Cell[96489, 2413, 1508, 24, 32, "Output",ExpressionUUID->"8d8f73d8-5729-4551-a67a-68456265e1ca"],
Cell[98000, 2439, 1387, 20, 32, "Output",ExpressionUUID->"4e10f72c-d972-4aac-b593-8289859dff43"],
Cell[99390, 2461, 650, 10, 22, "Print",ExpressionUUID->"0181eecf-4df3-49c9-9b98-0f0471bd259c"],
Cell[100043, 2473, 54743, 988, 206, "Output",ExpressionUUID->"1301eb0e-51eb-4be3-90ab-3273a61ae967"],
Cell[154789, 3463, 55751, 1006, 208, "Output",ExpressionUUID->"7a03d1e1-c206-4cd4-9ac6-4823203d3c5f"],
Cell[210543, 4471, 66060, 1179, 206, "Output",ExpressionUUID->"a959f2b1-8f12-4949-9acb-17c476007dbb"]
}, Open  ]],
Cell[276618, 5653, 220, 3, 51, "Text",ExpressionUUID->"babf6ace-7c59-4428-a267-e74cf670ecf8"],
Cell[276841, 5658, 706, 16, 67, "Input",ExpressionUUID->"b9cd0173-657c-4653-9d1b-b1d172b2172d"],
Cell[277550, 5676, 228, 3, 51, "Text",ExpressionUUID->"39878c2c-e942-4347-a752-27bba723a924"],
Cell[CellGroupData[{
Cell[277803, 5683, 4530, 131, 200, "Input",ExpressionUUID->"00a37dc2-62ae-4dae-b415-9099fdf1317c"],
Cell[282336, 5816, 599, 12, 46, "Message",ExpressionUUID->"823c8845-e644-48f4-aa88-876cd1daeb4e"],
Cell[282938, 5830, 1978, 51, 245, "Output",ExpressionUUID->"c8081f24-ed3c-49b5-97fd-6320a8ac08fb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[284953, 5886, 2638, 76, 257, "Input",ExpressionUUID->"21dbe1b5-6466-4952-9587-d4bdc27c8f51"],
Cell[287594, 5964, 1663, 45, 236, "Output",ExpressionUUID->"b8dc6135-5b4b-4819-8d59-1be07f569c48"]
}, Open  ]]
}
]
*)

