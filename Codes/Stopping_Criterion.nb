(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    913575,      17431]
NotebookOptionsPosition[    908396,      17350]
NotebookOutlinePosition[    908799,      17366]
CellTagsIndexPosition[    908756,      17363]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
Packaged the Stochastic approach in one single function and it seems to work \
well\
\>", "Text",
 CellChangeTimes->{{3.8648378409682493`*^9, 3.864837871408472*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"e1d1232c-86cc-4804-8aba-9808e8088f82"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Remove", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
  RowBox[{"(*", 
   RowBox[{"ICs", " ", "-", " ", 
    RowBox[{"Initial", " ", "Conditions"}]}], " ", "*)"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Error", " ", "while", " ", "cosntraining", " ", "u"}], " ", 
   "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"CalculateSMatrix", "[", 
   RowBox[{
   "x1a_", ",", "xdot1a_", ",", "\[Theta]1a_", ",", "\[Theta]dot1a_", ",", 
    "u1a_", ",", "\[Tau]_", ",", "A_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x", ",", "L", ",", "RHS", ",", "xdot", ",", "\[Theta]", ",", 
      "\[Theta]dot", ",", "u", ",", "K", ",", "S", ",", "soltn", ",", "Af", 
      ",", "Bf", ",", "Q", ",", "fx", ",", "xState", ",", "R", ",", "Mf", ",",
       "x2dot", ",", "\[Theta]2dot", ",", "S0", ",", "sol2", ",", "t"}], 
     "}"}], ",", "\n", "\n", 
    RowBox[{
     RowBox[{"xState", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
       "}"}]}], ";", "\n", 
     RowBox[{"x2dot", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{"u", "+", 
         RowBox[{"A", " ", 
          RowBox[{"\[Theta]dot", "^", "2"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"A", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ";", "\n", 
     RowBox[{"\[Theta]2dot", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{"u", "+", 
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ")"}]}]}], 
     ";", "\n", 
     RowBox[{"fx", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
       "xdot", ",", "x2dot", ",", "\[Theta]dot", ",", "\[Theta]2dot"}], 
       "}"}]}], ";", "\n", 
     RowBox[{"L", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", "2"}], "*", 
       RowBox[{"u", "^", "2"}]}]}], ";", "\n", 
     RowBox[{"Af", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{"fx", ",", "xState"}], "]"}]}], ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{"For", " ", "nD", " ", "stuff", " ", "use", " ", "Grad"}], 
      "*)"}], "\n", 
     RowBox[{"Bf", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"fx", ",", "u"}], "]"}]}], " ", ";", 
     RowBox[{"(*", 
      RowBox[{"For", " ", "1", "D", " ", "stuff", " ", "use", " ", "D"}], 
      "*)"}], "\n", 
     RowBox[{"Q", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{
        RowBox[{"Grad", "[", 
         RowBox[{"L", ",", "xState"}], "]"}], ",", "xState"}], "]"}]}], ";", 
     " ", 
     RowBox[{"(*", " ", 
      RowBox[{"Fix", " ", "this"}], " ", "*)"}], "\n", 
     RowBox[{"Mf", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{"L", ",", "u"}], "]"}], ",", "xState"}], "]"}]}], ";", "\n", 
     RowBox[{"R", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"L", ",", 
        RowBox[{"{", 
         RowBox[{"u", ",", "2"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"S0", " ", "=", " ", 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]]}], ";", "\n", 
     RowBox[{
      RowBox[{"RHS", "[", "t_", "]"}], " ", ":=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"IdentityMatrix", "[", "4", "]"}], " ", "+", " ", 
         RowBox[{
          RowBox[{"Af", "\[Transpose]"}], ".", 
          RowBox[{"S", "[", "t", "]"}]}], " ", "+", " ", 
         RowBox[{
          RowBox[{"S", "[", "t", "]"}], ".", "Af"}], " ", "-", " ", 
         RowBox[{"KroneckerProduct", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"S", "[", "t", "]"}], ".", "Bf"}], ",", 
           RowBox[{
            RowBox[{"Bf", "\[Transpose]"}], ".", 
            RowBox[{"S", "[", "t", "]"}]}]}], "]"}]}], ")"}], " ", "/.", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "->", " ", 
          RowBox[{"x1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"xdot", " ", "->", " ", 
          RowBox[{"xdot1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"\[Theta]", " ", "->", 
          RowBox[{"\[Theta]1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"\[Theta]dot", " ", "->", " ", 
          RowBox[{"\[Theta]dot1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"u", " ", "->", " ", 
          RowBox[{"u1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}]}], "}"}]}]}], ";", 
     "\n", 
     RowBox[{"sol2", " ", "=", " ", 
      RowBox[{"S", " ", "/.", " ", 
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"S", "'"}], "[", "t", "]"}], "==", " ", 
            RowBox[{"RHS", "[", "t", "]"}]}], ",", 
           RowBox[{
            RowBox[{"S", "[", "0", "]"}], "==", "S0"}]}], "}"}], ",", "S", 
         ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], " ", "}"}]}], "]"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"S", " ", "=", " ", 
      RowBox[{"sol2", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}]}], "\n", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"CalculateGains", "[", 
   RowBox[{
   "x1a_", ",", "xdot1a_", ",", "\[Theta]1a_", ",", "\[Theta]dot1a_", ",", 
    "u1a_", ",", "time_", ",", "A_", ",", "\[Tau]_", ",", "S_"}], "]"}], ":=",
   " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x", ",", "L", ",", "RHS", ",", "xdot", ",", "\[Theta]", ",", 
      "\[Theta]dot", ",", "u", ",", "K", ",", "Af", ",", "Bf", ",", "Q", ",", 
      "fx", ",", "xState", ",", "R", ",", "Mf", ",", "x2dot", ",", 
      "\[Theta]2dot", ",", "S0", ",", "sol2", ",", "t"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"xState", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
       "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"x2dot", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{"u", "+", 
         RowBox[{"A", " ", 
          RowBox[{"\[Theta]dot", "^", "2"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"A", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Theta]2dot", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{"u", "+", 
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ")"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"fx", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
       "xdot", ",", "x2dot", ",", "\[Theta]dot", ",", "\[Theta]2dot"}], 
       "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Bf", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"fx", ",", "u"}], "]"}]}], " ", ";", 
     RowBox[{"(*", 
      RowBox[{"For", " ", "1", "D", " ", "stuff", " ", "use", " ", "D"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"K", " ", "=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Bf", "\[Transpose]"}], ".", 
         RowBox[{"S", "[", 
          RowBox[{"\[Tau]", " ", "-", " ", "time"}], "]"}]}], ")"}], "/.", 
       " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "->", " ", 
          RowBox[{"x1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"xdot", " ", "->", " ", 
          RowBox[{"xdot1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"\[Theta]", " ", "->", 
          RowBox[{"\[Theta]1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"\[Theta]dot", " ", "->", " ", 
          RowBox[{"\[Theta]dot1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"u", " ", "->", " ", 
          RowBox[{"u1a", "[", "time", "]"}]}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", "K"}]}], "\n", "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ffCartPendulum", "[", 
    RowBox[{
    "ICs_", ",", "n_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "A_", ",", 
     "order_", ",", "maxIter_", ",", "maxError_", ",", "maxCount_", ",", 
     "maxJ_", ",", "initGuess_"}], "]"}], ":=", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "InitGuess", ",", "J", ",", "S", ",", "K", ",", "count", ",", "error", 
       ",", "x", ",", "dist", ",", "xdot", ",", "f", ",", "\[Theta]", ",", 
       "\[Theta]dot", ",", "\[Lambda]1", ",", "\[Lambda]2", ",", "\[Lambda]3",
        ",", "\[Lambda]4", ",", "\[CapitalDelta]t", ",", "bcs", ",", "eqns", 
       ",", "sv", ",", "froot", ",", "xff", ",", "xdotff", ",", "xff0", ",", 
       "xdotff0", ",", "\[Theta]ff0", ",", "\[Theta]dotff0", ",", "uff0", ",",
        "\[Theta]ff", ",", "\[Theta]dotff", ",", "uff", ",", "\[Lambda]1ff0", 
       ",", "\[Lambda]2ff0", ",", "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", 
       "i", ",", 
       RowBox[{"xGuess", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          SubscriptBox["xGuess", "i"], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}]}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"\[CapitalDelta]t", "=", 
       RowBox[{"\[Tau]", "/", "n"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"{", 
         RowBox[{
         "x_", ",", "xdot_", ",", "\[Theta]_", ",", "\[Theta]dot_", ",", 
          "\[Lambda]1_", ",", "\[Lambda]2_", ",", "\[Lambda]3_", ",", 
          "\[Lambda]4_"}], "}"}], "]"}], ":=", 
       RowBox[{"{", "\n", "\t", 
        RowBox[{"xdot", ",", "\n", "\t", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}],
           " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
               ")"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", "\[Lambda]2"}], 
              ")"}]}], "+", 
            RowBox[{"A", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", "\n", 
         "\t", "\[Theta]dot", ",", "\n", "\t", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}],
           " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{"1", "/", 
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"A", " ", 
                   RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
                 ")"}]}], ")"}]}], 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[Lambda]2"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
              ")"}]}], "-", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "-", 
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", "\n", 
         "\t", "0", ",", "\n", "\t", 
         RowBox[{"-", "\[Lambda]1"}], ",", "\n", "\t", 
         RowBox[{
          FractionBox["1", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"A", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "3"]], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["A", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"A", " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "-", 
               "\[Lambda]4"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "5"]}], "+", 
            RowBox[{
             SuperscriptBox["A", "3"], " ", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
              ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "6"]}], "-", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             SuperscriptBox["A", "2"], " ", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
              ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "4"], " ", 
             RowBox[{"(", 
              RowBox[{"4", "-", "A", "+", 
               RowBox[{"A", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}], "-", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "\[Lambda]2"}], "+", 
               RowBox[{
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}], "+", 
               RowBox[{"3", " ", "\[Lambda]2", " ", "\[Lambda]4", " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"A", " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "-", 
               "\[Lambda]4", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "A", " ", 
                   SuperscriptBox["\[Lambda]2", "2"]}], "+", 
                  SuperscriptBox["\[Lambda]4", "2"]}], ")"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox["A", "2"], " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2", " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], 
            "+", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "3"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", "A", " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "+", 
               RowBox[{"2", " ", "\[Lambda]4"}], "+", 
               RowBox[{
                SuperscriptBox["\[Lambda]4", "2"], " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"2", " ", "A", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"A", " ", 
                   SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], 
                  "-", "\[Lambda]4"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], 
            "+", 
            RowBox[{
             RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[Lambda]2"}], " ", "\[Lambda]4"}], "-", 
               RowBox[{"A", " ", 
                RowBox[{"(", 
                 RowBox[{"\[Lambda]2", "-", 
                  RowBox[{
                   SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
                 ")"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"A", " ", "\[Lambda]4", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]}], 
           ")"}]}], ",", "\n", "\t", 
         RowBox[{
          RowBox[{
           RowBox[{"4", " ", "/", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"A", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A", "-", "2"}],
              ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{"A", " ", "\[Theta]dot", " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}]}], ")"}]}], 
          "-", "\[Lambda]3"}]}], "\n", "}"}]}], ";", 
      StyleBox["\[IndentingNewLine]",
       FontWeight->"Plain"], "\n", 
      RowBox[{"InitGuess", " ", "=", " ", "initGuess"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       StyleBox["xGuess",
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       StyleBox["=",
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       RowBox[{
        StyleBox["Table",
         FontWeight->"Plain"], 
        StyleBox["[",
         FontWeight->"Plain"], 
        RowBox[{
         RowBox[{
          StyleBox["If",
           FontWeight->"Plain"], 
          StyleBox["[",
           FontWeight->"Plain"], 
          RowBox[{
           StyleBox[
            RowBox[{"i", " ", "!=", " ", 
             RowBox[{"-", "1"}]}],
            FontWeight->"Plain"], 
           StyleBox[",",
            FontWeight->"Plain"], 
           RowBox[{
            StyleBox[
             SubscriptBox["xGuess", 
              RowBox[{"i", "+", "1"}]],
             FontWeight->"Plain"], 
            StyleBox[" ",
             FontWeight->"Plain"], 
            StyleBox["=",
             FontWeight->"Plain"], 
            StyleBox[" ",
             FontWeight->"Plain"], 
            RowBox[{
             SubscriptBox[
              StyleBox["xGuess",
               FontWeight->"Plain"], "i"], 
             StyleBox[" ",
              FontWeight->"Plain"], 
             StyleBox["+",
              FontWeight->"Plain"], 
             StyleBox[
              RowBox[{"\[CapitalDelta]t", "*", 
               RowBox[{"f", "[", 
                SubscriptBox["xGuess", "i"], "]"}]}],
              FontWeight->"Plain"]}]}], 
           StyleBox[",",
            FontWeight->"Plain"], 
           RowBox[{
            SubscriptBox[
             StyleBox["xGuess",
              FontWeight->"Plain"], "0"], " ", "=", " ", 
            RowBox[{"{", 
             StyleBox[
              RowBox[{
               RowBox[{"ICs", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "3", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "4", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "3", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "4", "]"}], "]"}]}],
              FontWeight->"Plain"], 
             StyleBox["}",
              FontWeight->"Plain"]}]}]}], 
          StyleBox["]",
           FontWeight->"Plain"]}], 
         StyleBox[",",
          FontWeight->"Plain"], 
         StyleBox[
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"-", "1"}], ",", 
            RowBox[{"n", "-", "1"}]}], "}"}],
          FontWeight->"Plain"]}], 
        StyleBox["]",
         FontWeight->"Plain"]}]}], 
      StyleBox[";",
       FontWeight->"Plain"], "\[IndentingNewLine]", "\n", 
      RowBox[{"bcs", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"x", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"xdot", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"x", ",", " ", "n"}], "]"}], "==", 
          RowBox[{"Subscript", "[", 
           RowBox[{"xdot", ",", " ", "n"}], "]"}], "==", "0"}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]dot", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]dot", ",", " ", "n"}], "]"}], "==", "0"}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]", ",", " ", "n"}], "]"}], "==", "\[Pi]"}]}], 
        "}"}]}], ";", "\n", 
      RowBox[{"eqns", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Join", "[", 
         RowBox[{"bcs", ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Thread", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], "==", 
              "\n", 
              RowBox[{
               RowBox[{
                RowBox[{"1", "/", "2"}], " ", "\[CapitalDelta]t", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"f", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}], "]"}], "+", 
                  "\n", 
                  RowBox[{"f", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], 
                   "]"}]}], ")"}]}], "+", "\n", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Subscript", "[", 
                  RowBox[{"x", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"xdot", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]dot", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]1", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]2", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]3", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]4", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}]}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
        "]"}]}], ";", "\n", "\n", 
      RowBox[{"sv", " ", "=", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", "\n", 
             "\t\t\t\t\t", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "7", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "8", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", "1"}], 
        "]"}]}], ";", "\n", "\[IndentingNewLine]", 
      RowBox[{"froot", "=", 
       RowBox[{"FindRoot", "[", 
        RowBox[{"eqns", ",", "sv", ",", 
         RowBox[{"MaxIterations", "->", "maxIter"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"error", " ", "=", " ", 
       RowBox[{"Norm", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                SubscriptBox["x", "n"], ",", 
                SubscriptBox["xdot", "n"], ",", 
                SubscriptBox["\[Theta]", "n"], ",", 
                SubscriptBox["\[Theta]dot", "n"]}], "}"}], " ", "-", " ", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], ",", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                SubscriptBox["x", "0"], ",", 
                SubscriptBox["xdot", "0"], ",", 
                SubscriptBox["\[Theta]", "0"], ",", 
                SubscriptBox["\[Theta]dot", "0"]}], "}"}], " ", "-", " ", 
              "ICs"}], ",", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Thread", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   SubscriptBox["x", "i"], ",", 
                   SubscriptBox["xdot", "i"], ",", 
                   SubscriptBox["\[Theta]", "i"], ",", 
                   SubscriptBox["\[Theta]dot", "i"], ",", 
                   SubscriptBox["\[Lambda]1", "i"], ",", 
                   SubscriptBox["\[Lambda]2", "i"], ",", 
                   SubscriptBox["\[Lambda]3", "i"], ",", 
                   SubscriptBox["\[Lambda]4", "i"]}], "}"}], "-", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    FractionBox["1", "2"], " ", "\[CapitalDelta]t", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}], "]"}], "+", 
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "]"}]}], 
                    ")"}]}], "+", 
                   RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}]}], ")"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
           "]"}], "/.", "froot"}], ",", "\"\<Frobenius\>\""}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"uff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}], "^", 
                  "2"}]}]}], ")"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], 
                RowBox[{"Cos", "[", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}]}], "-", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}]}], ")"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"count", " ", "=", " ", "0"}], ";", "\n", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"error", " ", ">", " ", "maxError"}], ")"}], " ", "||", 
           " ", 
           RowBox[{"(", 
            RowBox[{"J", " ", ">", " ", "maxJ"}], ")"}]}], ")"}], " ", "&&", 
         " ", 
         RowBox[{"count", " ", "<=", " ", "maxCount"}]}], " ", ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"InitGuess", " ", "=", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}]}], "}"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          StyleBox["xGuess",
           FontWeight->"Plain"], 
          StyleBox[" ",
           FontWeight->"Plain"], 
          StyleBox["=",
           FontWeight->"Plain"], 
          StyleBox[" ",
           FontWeight->"Plain"], 
          RowBox[{
           StyleBox["Table",
            FontWeight->"Plain"], 
           StyleBox["[",
            FontWeight->"Plain"], 
           RowBox[{
            RowBox[{
             StyleBox["If",
              FontWeight->"Plain"], 
             StyleBox["[",
              FontWeight->"Plain"], 
             RowBox[{
              StyleBox[
               RowBox[{"i", " ", "!=", " ", 
                RowBox[{"-", "1"}]}],
               FontWeight->"Plain"], 
              StyleBox[",",
               FontWeight->"Plain"], 
              RowBox[{
               StyleBox[
                SubscriptBox["xGuess", 
                 RowBox[{"i", "+", "1"}]],
                FontWeight->"Plain"], 
               StyleBox[" ",
                FontWeight->"Plain"], 
               StyleBox["=",
                FontWeight->"Plain"], 
               StyleBox[" ",
                FontWeight->"Plain"], 
               RowBox[{
                SubscriptBox[
                 StyleBox["xGuess",
                  FontWeight->"Plain"], "i"], 
                StyleBox[" ",
                 FontWeight->"Plain"], 
                StyleBox["+",
                 FontWeight->"Plain"], 
                StyleBox[
                 RowBox[{"\[CapitalDelta]t", "*", 
                  RowBox[{"f", "[", 
                   SubscriptBox["xGuess", "i"], "]"}]}],
                 FontWeight->"Plain"]}]}], 
              StyleBox[",",
               FontWeight->"Plain"], 
              RowBox[{
               SubscriptBox[
                StyleBox["xGuess",
                 FontWeight->"Plain"], "0"], " ", "=", " ", 
               RowBox[{"{", 
                StyleBox[
                 RowBox[{
                  RowBox[{"ICs", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", 
                  RowBox[{"ICs", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], ",", 
                  RowBox[{"ICs", "[", 
                   RowBox[{"[", "3", "]"}], "]"}], ",", 
                  RowBox[{"ICs", "[", 
                   RowBox[{"[", "4", "]"}], "]"}], ",", 
                  RowBox[{"InitGuess", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", 
                  RowBox[{"InitGuess", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], ",", 
                  RowBox[{"InitGuess", "[", 
                   RowBox[{"[", "3", "]"}], "]"}], ",", 
                  RowBox[{"InitGuess", "[", 
                   RowBox[{"[", "4", "]"}], "]"}]}],
                 FontWeight->"Plain"], 
                StyleBox["}",
                 FontWeight->"Plain"]}]}]}], 
             StyleBox["]",
              FontWeight->"Plain"]}], 
            StyleBox[",",
             FontWeight->"Plain"], 
            StyleBox[
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"-", "1"}], ",", 
               RowBox[{"n", "-", "1"}]}], "}"}],
             FontWeight->"Plain"]}], 
           StyleBox["]",
            FontWeight->"Plain"]}]}], 
         StyleBox[";",
          FontWeight->"Plain"], "\[IndentingNewLine]", 
         RowBox[{"sv", " ", "=", " ", 
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", "\n", 
                "\t\t\t\t\t", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "7", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "8", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", "1"}], 
           "]"}]}], ";", "\n", "\n", 
         RowBox[{"froot", "=", 
          RowBox[{"FindRoot", "[", 
           RowBox[{"eqns", ",", "sv", ",", 
            RowBox[{"MaxIterations", "->", "maxIter"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"error", " ", "=", " ", 
          RowBox[{"Norm", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Flatten", "[", 
              RowBox[{"Join", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   SubscriptBox["x", "n"], ",", 
                   SubscriptBox["xdot", "n"], ",", 
                   SubscriptBox["\[Theta]", "n"], ",", 
                   SubscriptBox["\[Theta]dot", "n"]}], "}"}], " ", "-", " ", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], 
                ",", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   SubscriptBox["x", "0"], ",", 
                   SubscriptBox["xdot", "0"], ",", 
                   SubscriptBox["\[Theta]", "0"], ",", 
                   SubscriptBox["\[Theta]dot", "0"]}], "}"}], " ", "-", " ", 
                 "ICs"}], ",", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"Thread", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[CapitalDelta]t", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}], "]"}], "+", 
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}]}], ")"}]}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}],
               "]"}], "/.", "froot"}], ",", "\"\<Frobenius\>\""}], "]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"uff0", "=", 
          RowBox[{"ListInterpolation", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"1", "/", 
                 RowBox[{"(", 
                  RowBox[{"1", "-", 
                   RowBox[{"A", " ", 
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}], "^", 
                    "2"}]}]}], ")"}]}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], 
                   RowBox[{"Cos", "[", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}]}], "-", 
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}]}], ")"}]}], 
               ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
             "froot"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
            RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", 
         "\n", 
         RowBox[{"J", " ", "=", " ", 
          RowBox[{"NIntegrate", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", 
         "\n", 
         RowBox[{"count", " ", "=", " ", 
          RowBox[{"count", "+", "1"}]}], ";"}]}], "\n", "]"}], ";", "\n", 
      "\n", "\n", 
      RowBox[{"xff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"xdotff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Theta]ff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Theta]dotff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]1ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]2ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]3ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]4ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      "\n", 
      RowBox[{"uff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}], "^", 
                  "2"}]}]}], ")"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], 
                RowBox[{"Cos", "[", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}]}], "-", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}]}], ")"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      "\n", 
      RowBox[{
       RowBox[{"xff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xdotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "\[Pi]"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"uff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"uff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"S", " ", "=", " ", 
       RowBox[{"CalculateSMatrix", "[", 
        RowBox[{
        "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
         "uff", ",", "\[Tau]", ",", "A"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"K", "[", "t_", "]"}], " ", ":=", " ", 
       RowBox[{"CalculateGains", "[", 
        RowBox[{
        "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
         "uff", ",", "t", ",", "A", ",", "\[Tau]", ",", "S"}], "]"}]}], ";", 
      "\n", 
      RowBox[{"{", 
       RowBox[{
       "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
        "uff", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
        "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "J", ",", "K"}], 
       "}"}]}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"testSwingUp", "[", 
    RowBox[{
    "ICs_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "uff0_", ",", "A_"}], "]"}],
    ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eq", ",", "init", ",", "x", ",", "xdot", ",", "\[Theta]", ",", 
       "\[Theta]dot", ",", "xs", ",", "xdots", ",", "\[Theta]s", ",", 
       "\[Theta]dots", ",", "t", ",", "J"}], "}"}], ",", "\n", 
     RowBox[{
      RowBox[{"eq", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"x", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"xdot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"xdot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"uff0", "[", "t", "]"}], "+", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
             RowBox[{"A", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]dot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"uff0", "[", "t", "]"}], "+", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
            ")"}]}]}]}], "}"}]}], ";", "\n", 
      RowBox[{"init", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"xdot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]dot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
        "}"}], "=", 
       RowBox[{"NDSolveValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"eq", ",", "init"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
         RowBox[{"Method", "->", 
          RowBox[{"{", 
           RowBox[{"\"\<DiscontinuityProcessing\>\"", "->", "None"}], 
           "}"}]}]}], "]"}]}], ";", "\n", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"{", 
       RowBox[{
       "xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots", ",", "uff0",
         ",", "J"}], "}"}]}]}], "]"}]}], "\n", "\[IndentingNewLine]", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"testWithFB", "[", 
    RowBox[{
    "ICs_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "xff0_", ",", "xdotff0_", 
     ",", "\[Theta]ff0_", ",", "\[Theta]dotff0_", ",", "uff0_", ",", "A_", 
     ",", "K_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eq", ",", "init", ",", "\[Theta]", ",", "\[Theta]dot", ",", 
       "\[Theta]ff", ",", "\[Theta]dotff", ",", "x", ",", "xdot", ",", "xff", 
       ",", "xdotff", ",", "uff", ",", "t", ",", "\[Kappa]1", ",", 
       "\[Kappa]2", ",", "\[Kappa]3", ",", "\[Kappa]4", ",", "ufb", ",", "u", 
       ",", "\[Theta]s", ",", "\[Theta]dots", ",", "xs", ",", "xdots", ",", 
       "us", ",", "J", ",", "error"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Kappa]1", "=", 
       RowBox[{"\[Kappa]2", "=", "3"}]}], ";", "  ", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"lqr", " ", "for", " ", "q"}], "=", 
        RowBox[{"r", " ", "for", " ", "balancing", " ", "pendulum"}]}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"\[Kappa]3", " ", "=", " ", 
       RowBox[{"-", "0.1"}]}], ";", 
      RowBox[{"\[Kappa]4", " ", "=", " ", 
       RowBox[{"-", "0.65"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"xff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xdotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "\[Pi]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"uff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"uff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ufb", "[", "t_", "]"}], " ", ":=", " ", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"K", "[", "t", "]"}], ".", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"xff", "[", "t", "]"}], "-", 
                RowBox[{"x", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"xdotff", "[", "t", "]"}], "-", 
                RowBox[{"xdot", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]dot", "[", "t", "]"}]}]}], "}"}]}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         RowBox[{
          RowBox[{"\[Kappa]1", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]3", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"xff", "[", "t", "]"}], "-", 
             RowBox[{"x", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"xdotff", "[", "t", "]"}], "-", 
             RowBox[{"xdot", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}], ";", 
      "\n", 
      RowBox[{
       RowBox[{"u", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{"uff", "[", "t", "]"}], "+", 
        RowBox[{"ufb", "[", "t", "]"}]}]}], ";", "\n", "\n", 
      RowBox[{"eq", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"x", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"xdot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"xdot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"u", "[", "t", "]"}], "+", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
             RowBox[{"A", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]dot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"u", "[", "t", "]"}], "+", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
            ")"}]}]}]}], "}"}]}], ";", 
      RowBox[{"init", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"xdot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]dot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}], ";", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
        "}"}], "=", 
       RowBox[{"NDSolveValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"eq", ",", "init"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
         RowBox[{"Method", "->", 
          RowBox[{"{", 
           RowBox[{"\"\<DiscontinuityProcessing\>\"", "->", "None"}], 
           "}"}]}]}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"us", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{"uff", "[", "t", "]"}], "+", 
        RowBox[{"Piecewise", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"K", "[", "t", "]"}], ".", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"xff", "[", "t", "]"}], "-", 
                 RowBox[{"xs", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"xdotff", "[", "t", "]"}], "-", 
                 RowBox[{"xdots", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                 RowBox[{"\[Theta]s", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                 RowBox[{"\[Theta]dots", "[", "t", "]"}]}]}], "}"}]}], ",", 
             RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
          RowBox[{
           RowBox[{"\[Kappa]1", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]s", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]dots", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]3", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"xff", "[", "t", "]"}], "-", 
              RowBox[{"xs", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]4", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"xdotff", "[", "t", "]"}], "-", 
              RowBox[{"xdots", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"us", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"error", " ", "=", " ", 
       RowBox[{"Norm", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xs", "[", "\[Tau]", "]"}], ",", 
           RowBox[{"xdots", "[", "\[Tau]", "]"}], ",", 
           RowBox[{"\[Theta]s", "[", "\[Tau]", "]"}], ",", 
           RowBox[{"\[Theta]dots", "[", "\[Tau]", "]"}]}], "}"}], " ", "-", 
         " ", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "Pi", ",", "0"}], "}"}]}], "]"}]}], ";",
       "\n", 
      RowBox[{"{", 
       RowBox[{
       "xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots", ",", "us", 
        ",", "J", ",", "error"}], "}"}]}]}], "]"}]}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testWithFBClipped", "[", 
   RowBox[{
   "ICs_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "xff0_", ",", "xdotff0_", 
    ",", "\[Theta]ff0_", ",", "\[Theta]dotff0_", ",", "uff0_", ",", "A_", ",",
     "uBound_", ",", "K_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "eq", ",", "init", ",", "\[Theta]", ",", "\[Theta]dot", ",", 
      "\[Theta]ff", ",", "\[Theta]dotff", ",", "x", ",", "xdot", ",", "xff", 
      ",", "xdotff", ",", "uff", ",", "t", ",", "\[Kappa]1", ",", "\[Kappa]2",
       ",", "\[Kappa]3", ",", "\[Kappa]4", ",", "ufb", ",", "u", ",", 
      "\[Theta]s", ",", "\[Theta]dots", ",", "xs", ",", "xdots", ",", "us", 
      ",", "J", ",", "error"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Kappa]1", "=", 
      RowBox[{"\[Kappa]2", "=", "3"}]}], ";", "  ", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"lqr", " ", "for", " ", "q"}], "=", 
       RowBox[{"r", " ", "for", " ", "balancing", " ", "pendulum"}]}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\[Kappa]3", " ", "=", " ", 
      RowBox[{"-", "0.1"}]}], ";", 
     RowBox[{"\[Kappa]4", " ", "=", " ", 
      RowBox[{"-", "0.65"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"xff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xdotff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "\[Pi]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"uff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"uff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ufb", "[", "t_", "]"}], " ", ":=", " ", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"K", "[", "t", "]"}], ".", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"xff", "[", "t", "]"}], "-", 
               RowBox[{"x", "[", "t", "]"}]}], ",", 
              RowBox[{
               RowBox[{"xdotff", "[", "t", "]"}], "-", 
               RowBox[{"xdot", "[", "t", "]"}]}], ",", 
              RowBox[{
               RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]", "[", "t", "]"}]}], ",", 
              RowBox[{
               RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]dot", "[", "t", "]"}]}]}], "}"}]}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        RowBox[{
         RowBox[{"\[Kappa]1", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
            RowBox[{"\[Theta]", "[", "t", "]"}]}], ")"}]}], "+", 
         RowBox[{"\[Kappa]2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
            RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ")"}]}], "+", 
         RowBox[{"\[Kappa]3", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"xff", "[", "t", "]"}], "-", 
            RowBox[{"x", "[", "t", "]"}]}], ")"}]}], "+", 
         RowBox[{"\[Kappa]4", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"xdotff", "[", "t", "]"}], "-", 
            RowBox[{"xdot", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}], ";", 
     "\n", 
     RowBox[{
      RowBox[{"u", "[", "t_", "]"}], ":=", " ", 
      RowBox[{"Clip", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"uff", "[", "t", "]"}], "+", 
         RowBox[{"ufb", "[", "t", "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "uBound"}], ",", "uBound"}], "}"}]}], "]"}]}], ";", 
     "\n", "\n", 
     RowBox[{"eq", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"x", "'"}], "[", "t", "]"}], "==", 
         RowBox[{"xdot", "[", "t", "]"}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"xdot", "'"}], "[", "t", "]"}], "==", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
            ")"}]}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"u", "[", "t", "]"}], "+", 
            RowBox[{"A", " ", 
             RowBox[{
              RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
            RowBox[{"A", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "==", 
         RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Theta]dot", "'"}], "[", "t", "]"}], "==", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
            ")"}]}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"u", "[", "t", "]"}], "+", 
               RowBox[{"A", " ", 
                RowBox[{
                 RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
           ")"}]}]}]}], "}"}]}], ";", "\n", "\n", 
     RowBox[{"init", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "[", "0", "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"xdot", "[", "0", "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"\[Theta]", "[", "0", "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"\[Theta]dot", "[", "0", "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}], ";", "\n", "\n", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
       "}"}], "=", 
      RowBox[{"NDSolveValue", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"eq", ",", "init"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
        RowBox[{"Method", "->", 
         RowBox[{"{", 
          RowBox[{"\"\<DiscontinuityProcessing\>\"", "->", "None"}], 
          "}"}]}]}], "]"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"us", "[", "t_", "]"}], ":=", 
      RowBox[{"Clip", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"uff", "[", "t", "]"}], "+", 
         RowBox[{"Piecewise", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"K", "[", "t", "]"}], ".", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"xff", "[", "t", "]"}], "-", 
                  RowBox[{"xs", "[", "t", "]"}]}], ",", 
                 RowBox[{
                  RowBox[{"xdotff", "[", "t", "]"}], "-", 
                  RowBox[{"xdots", "[", "t", "]"}]}], ",", 
                 RowBox[{
                  RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]s", "[", "t", "]"}]}], ",", 
                 RowBox[{
                  RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]dots", "[", "t", "]"}]}]}], "}"}]}], ",", 
              RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
           RowBox[{
            RowBox[{"\[Kappa]1", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]s", "[", "t", "]"}]}], ")"}]}], "+", 
            RowBox[{"\[Kappa]2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]dots", "[", "t", "]"}]}], ")"}]}], "+", 
            RowBox[{"\[Kappa]3", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"xff", "[", "t", "]"}], "-", 
               RowBox[{"xs", "[", "t", "]"}]}], ")"}]}], "+", 
            RowBox[{"\[Kappa]4", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"xdotff", "[", "t", "]"}], "-", 
               RowBox[{"xdots", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "uBound"}], ",", "uBound"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"error", " ", "=", " ", 
      RowBox[{"Norm", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"xs", "[", "\[Tau]", "]"}], ",", 
          RowBox[{"xdots", "[", "\[Tau]", "]"}], ",", 
          RowBox[{"\[Theta]s", "[", "\[Tau]", "]"}], ",", 
          RowBox[{"\[Theta]dots", "[", "\[Tau]", "]"}]}], "}"}], " ", "-", 
        " ", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "Pi", ",", "0"}], "}"}]}], "]"}]}], ";", 
     "\n", "\n", 
     RowBox[{"J", " ", "=", " ", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"us", "[", "t", "]"}], "^", "2"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
     RowBox[{"{", 
      RowBox[{
      "xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots", ",", "us", 
       ",", "J", ",", "error"}], "}"}]}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Energy", "[", 
    RowBox[{"{", 
     RowBox[{
     "x1_", ",", "x2_", ",", "\[Theta]1_", ",", "\[Theta]2_", ",", "A_"}], 
     "}"}], "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"1", "/", "2"}], "*", 
     RowBox[{"x2", "^", "2"}]}], " ", "+", " ", 
    RowBox[{
     RowBox[{"1", "/", "2"}], "*", "A", "*", 
     RowBox[{"\[Theta]2", "^", "2"}]}], " ", "+", " ", 
    RowBox[{"A", "*", 
     RowBox[{"Cos", "[", "\[Theta]1", "]"}], "*", "x2", "*", "\[Theta]2"}], 
    " ", "-", " ", 
    RowBox[{"A", "*", 
     RowBox[{"Cos", "[", "\[Theta]1", "]"}]}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.862753343189165*^9, 3.862753411389415*^9}, {
   3.8627553611496043`*^9, 3.8627553647834463`*^9}, {3.862755542386807*^9, 
   3.862755582254092*^9}, {3.862756179429644*^9, 3.8627562078485813`*^9}, 
   3.8627563320549693`*^9, {3.8627564690202875`*^9, 3.8627565488258357`*^9}, {
   3.8627568793814173`*^9, 3.8627568873778677`*^9}, 3.8627585165043135`*^9, {
   3.8627585965107956`*^9, 3.862758689290209*^9}, {3.862758834699833*^9, 
   3.8627588555911727`*^9}, {3.8627590963373947`*^9, 
   3.8627590998392787`*^9}, {3.8627594410134716`*^9, 
   3.8627594626865597`*^9}, {3.862759635094576*^9, 3.8627596377257366`*^9}, {
   3.862759669455618*^9, 3.8627597448635693`*^9}, 3.862759795914287*^9, {
   3.8627603319473376`*^9, 3.862760490473783*^9}, {3.8627605307139487`*^9, 
   3.862760536806006*^9}, {3.8627610047197795`*^9, 3.8627610478400292`*^9}, {
   3.8627611285982723`*^9, 3.862761147921111*^9}, {3.8631982964294224`*^9, 
   3.8631982970332265`*^9}, 3.8631983363504767`*^9, {3.863208693665881*^9, 
   3.8632086943846474`*^9}, 3.863210007245922*^9, 3.863271804426487*^9, {
   3.8632718412836447`*^9, 3.8632718583741503`*^9}, {3.8632719591337743`*^9, 
   3.863271959351703*^9}, {3.863272049174841*^9, 3.863272070205083*^9}, {
   3.863272113471178*^9, 3.863272123024109*^9}, 3.8632747752128673`*^9, {
   3.863274857845314*^9, 3.863274901443305*^9}, 3.863274985905165*^9, {
   3.86327502591031*^9, 3.8632751590365314`*^9}, {3.8632751952308993`*^9, 
   3.863275233662552*^9}, {3.8632753992893295`*^9, 3.863275415841012*^9}, 
   3.8632757933676972`*^9, 3.863276112914017*^9, {3.8632763683199444`*^9, 
   3.8632763983313017`*^9}, {3.8632764721665745`*^9, 3.863276525061578*^9}, {
   3.863278235705888*^9, 3.8632782777863655`*^9}, {3.863278324944213*^9, 
   3.8632783286160316`*^9}, {3.863552728717914*^9, 3.8635527298355513`*^9}, {
   3.863613419658352*^9, 3.863613423534114*^9}, {3.8636150904008484`*^9, 
   3.86361513154671*^9}, {3.8636152078133564`*^9, 3.8636152525520706`*^9}, {
   3.8636152893383236`*^9, 3.863615479516596*^9}, 3.8636157247782784`*^9, {
   3.863615879717803*^9, 3.8636159617646036`*^9}, {3.8636160220243616`*^9, 
   3.8636160299278383`*^9}, {3.863616069486206*^9, 3.86361607601912*^9}, {
   3.863699007217822*^9, 3.8636991515617003`*^9}, {3.8636996033223495`*^9, 
   3.8636996129842625`*^9}, {3.8636997844214835`*^9, 3.863699805489752*^9}, {
   3.863699907217247*^9, 3.863699944316393*^9}, {3.863700788168758*^9, 
   3.8637008845809517`*^9}, {3.863702046275758*^9, 3.8637020830100203`*^9}, {
   3.863702595245346*^9, 3.863702645292355*^9}, {3.863884194660141*^9, 
   3.8638842031804175`*^9}, {3.8638909914788537`*^9, 3.863891009810995*^9}, {
   3.863891113237941*^9, 3.8638911537729845`*^9}, {3.863891279619763*^9, 
   3.8638912855948534`*^9}, {3.863891344230113*^9, 3.863891351574766*^9}, {
   3.8638925953132634`*^9, 3.8638925989880886`*^9}, 3.8641412354391413`*^9, {
   3.864141550931038*^9, 3.8641416655529428`*^9}, {3.8642361939817247`*^9, 
   3.864236202546955*^9}, {3.864236595072028*^9, 3.8642366322340117`*^9}, 
   3.864236674617306*^9, {3.8643997929515553`*^9, 3.864399794341104*^9}, 
   3.8647401548354416`*^9, {3.864740367280447*^9, 3.864740382577551*^9}, {
   3.8647404140084915`*^9, 3.8647404181541643`*^9}, {3.864740488606616*^9, 
   3.864740495693348*^9}, {3.8647405289317093`*^9, 3.864740542820265*^9}, {
   3.864741074561078*^9, 3.864741079667444*^9}, {3.864741140307036*^9, 
   3.864741143520008*^9}, 3.8648372672245474`*^9, {3.8648373045645533`*^9, 
   3.864837353847723*^9}, {3.8648373920424533`*^9, 3.8648375909655547`*^9}, 
   3.864837839079855*^9, {3.865356690975731*^9, 3.865356718635888*^9}, {
   3.8653568425522747`*^9, 3.86535688554853*^9}, 3.865356998743344*^9, {
   3.865357063056785*^9, 3.865357082860453*^9}, {3.865357192303467*^9, 
   3.865357202547192*^9}, {3.865357324369248*^9, 3.865357327732173*^9}, 
   3.8653573727697754`*^9, {3.8653584117496357`*^9, 3.865358421880398*^9}, {
   3.865359119417409*^9, 3.865359146498752*^9}, {3.865359181803466*^9, 
   3.865359209189711*^9}, {3.8654491379879255`*^9, 3.8654492290188136`*^9}, {
   3.8659657476182566`*^9, 3.86596576077604*^9}, {3.8659665703366394`*^9, 
   3.865966589562479*^9}, {3.866052164082869*^9, 3.8660522776132393`*^9}, {
   3.8660523127439046`*^9, 3.8660523189908895`*^9}, {3.866052389927002*^9, 
   3.8660524026289043`*^9}, {3.866052461586882*^9, 3.8660524626125507`*^9}, {
   3.8661445639235554`*^9, 3.866144564756291*^9}, 3.8662991531581025`*^9, {
   3.8663105616671824`*^9, 3.8663105911556373`*^9}},
 FontWeight->"Plain",
 Background->RGBColor[1, 1, 0.85],
 CellLabel->
  "In[715]:=",ExpressionUUID->"580f172d-8037-47c3-b83f-1fe6df9c977b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ListBadICs", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.5919233888024076`"}], ",", 
       RowBox[{"-", "2.626560404936485`"}], ",", 
       RowBox[{"-", "1.8337732091632066`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.8988421797170734`", ",", 
       RowBox[{"-", "2.781568090526754`"}], ",", 
       RowBox[{"-", "1.7208327942083077`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.5130003928325353`", ",", 
       RowBox[{"-", "2.7638782645015807`"}], ",", 
       RowBox[{"-", "1.5499618641831363`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.1258783007678108`"}], ",", 
       RowBox[{"-", "3.075660607934064`"}], ",", 
       RowBox[{"-", "1.8180933102904318`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1.0862158325400353`", ",", "1.389077323652403`", ",", 
       "1.2418614212135708`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.410811763077299`", ",", 
       RowBox[{"-", "2.6799695626956286`"}], ",", 
       RowBox[{"-", "1.249504352429808`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1.8018187254571911`", ",", "0.6312196180519329`", ",", 
       "0.3007314035275339`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1.6639286656315342`", ",", "0.3762926167702396`", ",", 
       "0.9290478726251834`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.03706862009377243`"}], ",", "1.2622064778502988`", ",",
        "0.8466788889730772`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.5434651973062383`"}], ",", 
       RowBox[{"-", "2.601835119680123`"}], ",", 
       RowBox[{"-", "1.7656478532020108`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.277167056780228`", ",", 
       RowBox[{"-", "2.939647560942354`"}], ",", 
       RowBox[{"-", "1.4975993973103163`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.591878596354511`", ",", 
       RowBox[{"-", "2.898678940703004`"}], ",", 
       RowBox[{"-", "0.8043365992636904`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.8881446664424688`", ",", 
       RowBox[{"-", "2.3394205463410316`"}], ",", 
       RowBox[{"-", "1.837011306641183`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.0744667175310116`", ",", 
       RowBox[{"-", "1.7285609705780498`"}], ",", 
       RowBox[{"-", "1.954902635840356`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.9498789296971752`", ",", "1.4434997322554963`", ",", 
       "1.0211631207173442`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.9096980484776003`"}], ",", 
       RowBox[{"-", "1.6160359759348495`"}], ",", 
       RowBox[{"-", "1.9523905732877624`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.401393896381272`", ",", 
       RowBox[{"-", "2.488365977780391`"}], ",", 
       RowBox[{"-", "1.3431904393576986`"}]}], "}"}]}], "}"}]}], 
  ";"}]], "Input",
 CellLabel->
  "In[3637]:=",ExpressionUUID->"e4a00a5f-0f4d-44bd-8fd8-356f3e97c1c4"],

Cell["Test the working with random initial conditions", "Text",
 CellChangeTimes->{{3.864919546243415*^9, 3.864919566793731*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"74e82f71-7d3c-4f7a-b18d-cc3109df4131"],

Cell[CellGroupData[{

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"n", "=", "20"}], ";", 
   RowBox[{"\[Tau]", "=", "5"}], ";", 
   RowBox[{"\[Tau]1", "=", 
    RowBox[{"\[Tau]", "*", "1.25"}]}], ";", 
   RowBox[{"A", "=", "0.2"}], ";", 
   RowBox[{"order", " ", "=", " ", "4"}], ";", 
   RowBox[{"maxIter", " ", "=", " ", "100"}], ";", 
   RowBox[{"maxError", " ", "=", " ", "0.01"}], ";", 
   RowBox[{"uMax", " ", "=", " ", "5"}], ";", 
   RowBox[{"maxCount", " ", "=", " ", "5"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotMin", " ", "=", " ", 
    RowBox[{"-", "2"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotMax", " ", "=", " ", "2"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Min", " ", "=", " ", 
    RowBox[{"-", "\[Pi]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Max", " ", "=", " ", "\[Pi]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]dotMin", " ", "=", " ", 
    RowBox[{"-", "2"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"\[Theta]dotMax", " ", "=", " ", "2"}],
    FontWeight->"Plain"], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"xdotMin", ",", "xdotMax"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Init", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]Min", ",", "\[Theta]Max"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]dotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]dotMin", ",", "\[Theta]dotMax"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "xdotInit", ",", "\[Theta]Init", ",", "\[Theta]dotInit"}], 
     "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"maxJ", " ", "=", " ", 
    RowBox[{
     RowBox[{"uMax", "^", "2"}], "*", "\[Tau]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"InitGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"EInitial", " ", "=", " ", 
   RowBox[{"Energy", "[", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"ICs", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", "A", "}"}]}], "]"}], "]"}]}],
  FontWeight->"Plain"], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      StyleBox["time",
       FontWeight->"Plain"], ",", 
      StyleBox[
       RowBox[{"{", 
        RowBox[{
        "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
         "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
         "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "Jff", ",", "K"}], "}"}],
       FontWeight->"Plain"]}], 
     StyleBox["}",
      FontWeight->"Plain"]}], 
    StyleBox["=",
     FontWeight->"Plain"], 
    StyleBox[
     RowBox[{"Timing", "[", 
      RowBox[{"ffCartPendulum", "[", 
       RowBox[{
       "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", "order",
         ",", "maxIter", ",", "maxError", ",", "maxCount", ",", "maxJ", ",", 
        "InitGuess"}], "]"}], "]"}],
     FontWeight->"Plain"]}], 
   StyleBox[";",
    FontWeight->"Plain"]}], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "x1b", ",", "xdot1b", ",", "\[Theta]1b", ",", "\[Theta]dot1b", ",", "u1b",
      ",", "J"}], "}"}], " ", "=", " ", 
   RowBox[{"testSwingUp", "[", 
    RowBox[{"ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "u1a", ",", "A"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x1c", ",", "xdot1c", ",", "\[Theta]1c", ",", "\[Theta]dot1c", ",", 
      "u1c", ",", "J", ",", "error"}], "}"}], "=", 
    RowBox[{"testWithFBClipped", "[", 
     RowBox[{
     "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
      "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A", ",", "uMax", 
      ",", "K"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox["time",
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"p1a", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1a", "[", "t", "]"}], ",", 
        RowBox[{"u1a", "[", "t", "]"}], ",", 
        RowBox[{"x1a", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1a", "[", "t", "]"}], ",", 
        RowBox[{"xdot1a", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1a\>\"", ",", "\"\<u1a\>\"", ",", "\"\<x1a\>\"", ",", 
         "\"\<\[Theta]dot1a\>\"", ",", "\"\<xdot1a\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Feedforward solution \>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"p1b", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1b", "[", "t", "]"}], ",", 
        RowBox[{"u1b", "[", "t", "]"}], ",", 
        RowBox[{"x1b", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1b", "[", "t", "]"}], ",", 
        RowBox[{"xdot1b", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1b\>\"", ",", "\"\<u1b\>\"", ",", "\"\<x1b\>\"", ",", 
         "\"\<\[Theta]dot1b\>\"", ",", "\"\<xdot1b\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<True Dynamics \>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"p1c", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1c", "[", "t", "]"}], ",", 
        RowBox[{"u1c", "[", "t", "]"}], ",", 
        RowBox[{"x1c", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1c", "[", "t", "]"}], ",", 
        RowBox[{"xdot1c", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1c\>\"", ",", "\"\<u1c\>\"", ",", "\"\<x1c\>\"", ",", 
         "\"\<\[Theta]dot1c\>\"", ",", "\"\<xdot1c\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<feedback solution \>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"Grid", "[", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"p1a", ",", "p1b", ",", "p1c"}], "}"}], "}"}], "]"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Tau]New", " ", "=", 
    RowBox[{"\[Tau]", "/", "3"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Init", " ", "=", " ", 
    RowBox[{
     RowBox[{"\[Theta]1c", "[", "\[Tau]New", "]"}], " ", "-", " ", 
     RowBox[{"Round", "[", 
      RowBox[{
       RowBox[{"\[Theta]1c", "[", "\[Tau]New", "]"}], ",", 
       RowBox[{"2", "*", "\[Pi]"}]}], "]"}]}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"IC2", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x1c", "[", "\[Tau]New", "]"}], ",", 
      RowBox[{"xdot1c", "[", "\[Tau]New", "]"}], ",", "\[Theta]Init", ",", 
      RowBox[{"\[Theta]dot1c", "[", "\[Tau]New", "]"}]}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"initGuess", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Lambda]1ff0", "[", "\[Tau]New", "]"}], ",", 
       RowBox[{"\[Lambda]2ff0", "[", "\[Tau]New", "]"}], ",", 
       RowBox[{"\[Lambda]3ff0", "[", "\[Tau]New", "]"}], ",", 
       RowBox[{"\[Lambda]4ff0", "[", "\[Tau]New", "]"}]}], "}"}]}], ";"}],
   FontWeight->"Plain"], 
  StyleBox["\[IndentingNewLine]",
   FontWeight->"Plain"]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.863699832878002*^9, 3.8636998879424076`*^9}, {
   3.8636999587037973`*^9, 3.863699966845196*^9}, {3.86370068689312*^9, 
   3.863700742439372*^9}, {3.863700775571786*^9, 3.8637007771342835`*^9}, 
   3.863700945211579*^9, {3.863700998427576*^9, 3.8637010107976217`*^9}, {
   3.8637016473912125`*^9, 3.863701669091281*^9}, 3.863702035899074*^9, {
   3.863702126179226*^9, 3.863702160529252*^9}, 3.86370251869481*^9, {
   3.8637025705572357`*^9, 3.8637025888983755`*^9}, {3.8637026681560507`*^9, 
   3.8637026692896886`*^9}, {3.8637027081322765`*^9, 3.863702762285972*^9}, 
   3.8637029838601737`*^9, 3.8637033230088053`*^9, {3.863884225388322*^9, 
   3.8638842448491*^9}, {3.8638842916161537`*^9, 3.863884295082047*^9}, {
   3.863891061309538*^9, 3.863891063069975*^9}, {3.863891163269951*^9, 
   3.863891163428899*^9}, {3.8638912925906177`*^9, 3.8638912940581484`*^9}, {
   3.8638913677266035`*^9, 3.8638913686183195`*^9}, {3.8638926039804945`*^9, 
   3.8638926063767295`*^9}, {3.8648376392630434`*^9, 
   3.8648376724073963`*^9}, {3.864837714278944*^9, 3.864837730198832*^9}, {
   3.8648378000064077`*^9, 3.8648378125593743`*^9}, {3.8649192769420185`*^9, 
   3.8649193477849746`*^9}, {3.864919494855133*^9, 3.8649194949211097`*^9}, {
   3.8649195280303416`*^9, 3.8649195281572976`*^9}, {3.8653430179727*^9, 
   3.865343036098905*^9}, 3.865343126059147*^9, {3.8653475497269955`*^9, 
   3.8653475530049467`*^9}, {3.8653477236523952`*^9, 3.865347782090714*^9}, {
   3.8653478250659747`*^9, 3.8653479145413723`*^9}, {3.865347947982681*^9, 
   3.8653479716121283`*^9}, {3.8653525506493053`*^9, 3.865352599733616*^9}, {
   3.865352652578721*^9, 3.865352654559091*^9}, {3.865353691929463*^9, 
   3.8653537130737047`*^9}, {3.8653538376038947`*^9, 
   3.8653538378768077`*^9}, {3.86535394844846*^9, 3.8653539491322412`*^9}, {
   3.865356726928239*^9, 3.86535675400958*^9}, {3.8653568966909695`*^9, 
   3.8653569073245697`*^9}, {3.8653569602766423`*^9, 3.865356975731701*^9}, {
   3.865357167158506*^9, 3.865357170606405*^9}, {3.865357223946353*^9, 
   3.8653572240363226`*^9}, {3.8653573936860905`*^9, 3.8653574653461814`*^9}, 
   3.8653581484318137`*^9, {3.8653592129605074`*^9, 3.86535921807887*^9}, {
   3.865449250153057*^9, 3.8654493036779404`*^9}, {3.8659655743007927`*^9, 
   3.8659655800469513`*^9}, {3.865965617846839*^9, 3.865965644481305*^9}, {
   3.865965768794471*^9, 3.8659657912472773`*^9}, {3.865965935003215*^9, 
   3.865965935326112*^9}, {3.8659659868356075`*^9, 3.865966006077441*^9}, 
   3.865966083507631*^9, 3.8659664582355595`*^9, {3.86596655432277*^9, 
   3.865966563962682*^9}, 3.8659666064800587`*^9, {3.8659666379409776`*^9, 
   3.865966662002268*^9}, {3.865966724901114*^9, 3.865966734984883*^9}, {
   3.8659667752089934`*^9, 3.8659667994792185`*^9}, {3.8659670983784432`*^9, 
   3.865967114308339*^9}, {3.865967415398863*^9, 3.865967415558814*^9}, 
   3.86596806058513*^9, {3.8659697572814713`*^9, 3.865969792480193*^9}, {
   3.865969847631523*^9, 3.8659698777298765`*^9}, {3.8659699125237284`*^9, 
   3.8659699227194633`*^9}, {3.8660520784155097`*^9, 3.866052078606448*^9}, {
   3.866299038992057*^9, 3.866299063807024*^9}, {3.8662991135359306`*^9, 
   3.866299117442664*^9}, {3.866299188589633*^9, 3.86629919001517*^9}, {
   3.866299354438949*^9, 3.866299364496692*^9}, 3.8662994378149586`*^9, 
   3.8662994758636427`*^9, 3.8662995455700784`*^9, {3.866309716236847*^9, 
   3.86630980613275*^9}, {3.8663098363239756`*^9, 3.8663098541502047`*^9}, 
   3.8663105182622347`*^9, 3.866310619892336*^9, 3.8663117939323*^9, {
   3.8665656447826576`*^9, 3.8665656490393023`*^9}, {3.86666037409522*^9, 
   3.8666605929433*^9}, {3.8666606653571625`*^9, 3.8666608053664308`*^9}, {
   3.866660839553507*^9, 3.8666608737455826`*^9}, {3.866661162186427*^9, 
   3.8666611737737226`*^9}, {3.8666653738348045`*^9, 3.866665397429268*^9}},
 CellLabel->
  "In[751]:=",ExpressionUUID->"c47d3c4e-60ca-4c63-8b5c-ced31cd89cdf"],

Cell[BoxData[
 RowBox[{"-", "0.2`"}]], "Output",
 CellChangeTimes->{
  3.8648376866338243`*^9, {3.864837721244707*^9, 3.8648377460817285`*^9}, {
   3.864837800602215*^9, 3.8648378151965265`*^9}, {3.864837882180011*^9, 
   3.8648379006680717`*^9}, {3.864917359659708*^9, 3.8649173767071624`*^9}, 
   3.864919300876232*^9, {3.864919337508316*^9, 3.8649193485657187`*^9}, {
   3.8649194958228164`*^9, 3.8649195287531037`*^9}, 3.864920239187001*^9, {
   3.864921249563326*^9, 3.8649212721359825`*^9}, {3.865342438564925*^9, 
   3.865342509036396*^9}, {3.8653477634896584`*^9, 3.865347782729508*^9}, {
   3.8653478492912292`*^9, 3.865348013067874*^9}, {3.86535368874548*^9, 
   3.8653536939258237`*^9}, {3.8653538219528966`*^9, 
   3.8653538384286294`*^9}, {3.865356737715789*^9, 3.8653567547593403`*^9}, 
   3.8653569273791575`*^9, {3.8653569657139025`*^9, 3.86535700435555*^9}, 
   3.86535703851363*^9, {3.8653570911278105`*^9, 3.865357172559778*^9}, {
   3.865357210731576*^9, 3.865357232535606*^9}, {3.8653573843380775`*^9, 
   3.865357407024825*^9}, {3.8653574402422056`*^9, 3.865357560552746*^9}, {
   3.8653576116883984`*^9, 3.8653576483786693`*^9}, {3.865358188766919*^9, 
   3.8653581946510377`*^9}, {3.865358314589696*^9, 3.8653583435974226`*^9}, {
   3.8653592266591263`*^9, 3.865359247679407*^9}, {3.865443792998208*^9, 
   3.865443801104616*^9}, 3.8654440595339727`*^9, {3.8654487336752205`*^9, 
   3.8654487504428587`*^9}, 3.8654492637776985`*^9, 3.8654493114634485`*^9, {
   3.865965582539151*^9, 3.8659656451141005`*^9}, {3.8659657927138066`*^9, 
   3.8659658125544496`*^9}, {3.865965935915921*^9, 3.8659659557085795`*^9}, {
   3.8659659882041674`*^9, 3.8659660068222017`*^9}, 3.8659660863577166`*^9, 
   3.865966459016309*^9, {3.865966598898487*^9, 3.865966735717648*^9}, {
   3.865966781206072*^9, 3.865966802194347*^9}, {3.8659670998539696`*^9, 
   3.8659671350117044`*^9}, {3.86596737708314*^9, 3.865967416340561*^9}, {
   3.8659680911663313`*^9, 3.8659680979531565`*^9}, {3.8659697724146223`*^9, 
   3.865969803929524*^9}, 3.865969850623562*^9, {3.865969890971634*^9, 
   3.8659699231933093`*^9}, 3.8660390961121736`*^9, 3.8662990686684504`*^9, 
   3.8662991222131176`*^9, 3.8662991578515816`*^9, 3.86629920027185*^9, 
   3.8662993658012686`*^9, 3.8662994388686166`*^9, 3.866299477311173*^9, 
   3.8662995466917143`*^9, {3.8663097469868937`*^9, 3.8663098065886*^9}, {
   3.8663098368937907`*^9, 3.866309854605058*^9}, {3.866310502074473*^9, 
   3.866310510541732*^9}, {3.8663105771391745`*^9, 3.8663106410764785`*^9}, {
   3.866311168140868*^9, 3.8663111757344103`*^9}, {3.866311795831685*^9, 
   3.8663118226190147`*^9}, {3.8665635751502676`*^9, 3.866563580078697*^9}, 
   3.8665655738792553`*^9, 3.8665657789678917`*^9, {3.8665767519812546`*^9, 
   3.866576756524807*^9}, 3.866660334114994*^9, 3.866660482879464*^9, {
   3.866660550000019*^9, 3.8666605935181146`*^9}, {3.86666067663256*^9, 
   3.866660712885977*^9}, {3.866660752264395*^9, 3.866660805816285*^9}, {
   3.8666608513737297`*^9, 3.8666608747462626`*^9}, {3.8666611627682395`*^9, 
   3.866661174481497*^9}, {3.866665386657707*^9, 3.86666539847793*^9}},
 CellLabel->
  "Out[765]=",ExpressionUUID->"86ad8bc4-2421-4200-80b1-87a1e464d3c4"],

Cell[BoxData["0.625`"], "Output",
 CellChangeTimes->{
  3.8648376866338243`*^9, {3.864837721244707*^9, 3.8648377460817285`*^9}, {
   3.864837800602215*^9, 3.8648378151965265`*^9}, {3.864837882180011*^9, 
   3.8648379006680717`*^9}, {3.864917359659708*^9, 3.8649173767071624`*^9}, 
   3.864919300876232*^9, {3.864919337508316*^9, 3.8649193485657187`*^9}, {
   3.8649194958228164`*^9, 3.8649195287531037`*^9}, 3.864920239187001*^9, {
   3.864921249563326*^9, 3.8649212721359825`*^9}, {3.865342438564925*^9, 
   3.865342509036396*^9}, {3.8653477634896584`*^9, 3.865347782729508*^9}, {
   3.8653478492912292`*^9, 3.865348013067874*^9}, {3.86535368874548*^9, 
   3.8653536939258237`*^9}, {3.8653538219528966`*^9, 
   3.8653538384286294`*^9}, {3.865356737715789*^9, 3.8653567547593403`*^9}, 
   3.8653569273791575`*^9, {3.8653569657139025`*^9, 3.86535700435555*^9}, 
   3.86535703851363*^9, {3.8653570911278105`*^9, 3.865357172559778*^9}, {
   3.865357210731576*^9, 3.865357232535606*^9}, {3.8653573843380775`*^9, 
   3.865357407024825*^9}, {3.8653574402422056`*^9, 3.865357560552746*^9}, {
   3.8653576116883984`*^9, 3.8653576483786693`*^9}, {3.865358188766919*^9, 
   3.8653581946510377`*^9}, {3.865358314589696*^9, 3.8653583435974226`*^9}, {
   3.8653592266591263`*^9, 3.865359247679407*^9}, {3.865443792998208*^9, 
   3.865443801104616*^9}, 3.8654440595339727`*^9, {3.8654487336752205`*^9, 
   3.8654487504428587`*^9}, 3.8654492637776985`*^9, 3.8654493114634485`*^9, {
   3.865965582539151*^9, 3.8659656451141005`*^9}, {3.8659657927138066`*^9, 
   3.8659658125544496`*^9}, {3.865965935915921*^9, 3.8659659557085795`*^9}, {
   3.8659659882041674`*^9, 3.8659660068222017`*^9}, 3.8659660863577166`*^9, 
   3.865966459016309*^9, {3.865966598898487*^9, 3.865966735717648*^9}, {
   3.865966781206072*^9, 3.865966802194347*^9}, {3.8659670998539696`*^9, 
   3.8659671350117044`*^9}, {3.86596737708314*^9, 3.865967416340561*^9}, {
   3.8659680911663313`*^9, 3.8659680979531565`*^9}, {3.8659697724146223`*^9, 
   3.865969803929524*^9}, 3.865969850623562*^9, {3.865969890971634*^9, 
   3.8659699231933093`*^9}, 3.8660390961121736`*^9, 3.8662990686684504`*^9, 
   3.8662991222131176`*^9, 3.8662991578515816`*^9, 3.86629920027185*^9, 
   3.8662993658012686`*^9, 3.8662994388686166`*^9, 3.866299477311173*^9, 
   3.8662995466917143`*^9, {3.8663097469868937`*^9, 3.8663098065886*^9}, {
   3.8663098368937907`*^9, 3.866309854605058*^9}, {3.866310502074473*^9, 
   3.866310510541732*^9}, {3.8663105771391745`*^9, 3.8663106410764785`*^9}, {
   3.866311168140868*^9, 3.8663111757344103`*^9}, {3.866311795831685*^9, 
   3.8663118226190147`*^9}, {3.8665635751502676`*^9, 3.866563580078697*^9}, 
   3.8665655738792553`*^9, 3.8665657789678917`*^9, {3.8665767519812546`*^9, 
   3.866576756524807*^9}, 3.866660334114994*^9, 3.866660482879464*^9, {
   3.866660550000019*^9, 3.8666605935181146`*^9}, {3.86666067663256*^9, 
   3.866660712885977*^9}, {3.866660752264395*^9, 3.866660805816285*^9}, {
   3.8666608513737297`*^9, 3.8666608747462626`*^9}, {3.8666611627682395`*^9, 
   3.866661174481497*^9}, {3.866665386657707*^9, 3.8666653994536185`*^9}},
 CellLabel->
  "Out[769]=",ExpressionUUID->"b565030f-02f6-4948-bdcf-ebcf05d8e783"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
8EwsVo9xPt3M6rsrVEQofu+aLbKunwBZLMv3Ktj1kQ18W+85RIShjlEn7M7M
Icti1i/BFWS4i75yLuYwExS9unw5PZkApSbOr+HuZ6F7hqzNfr/IMGT/Secg
YyaI2z317pECEXZOLlCjReYRx7SAe4w5GVY7Zx47g+1fGyuc/ZhFZJhqtCEm
Fts/cV7ta978+v0eYvH6nyctzvIQ4bNdjjWfsPne2hGo2LybDCPcXLvWmTLB
dn7x0oFKAlSTfurtzDOPJBMesep0iHBft5DA6WkWahZ59MnSjwyN0kJWnsfq
3fLXC8efzS3ND86z+fY5SJoIEaG/fnZKo3MrcNmd+gpW9AKDjruvpFb3AJ/V
rtNpBc2Aed/jU9dpGlDN79gk6vME4Hw7Uq7sd+OFSjbfPtdb/27rix9snn34
qADdFS7xbNfEt/6sezQ2z77lGvbIR5fO5tlJnX/P2y7+ZfPsjOp0lfGUMTbP
Nl1cp113ZIrNsxeTuCaHLRhsnl1jbBVsZMxCOaaVHG1HibCiWLpGms5CmVL1
bjcsOGB6Ts++/YxZNKwo/SXjLCeMP0uLqD09hqrazle9cOaCmiJ/KPW27ci5
MdzqrDc3PJ4waqce0QBOr1r4lXyVByZG/FBOpg+AXrtPtV53eGE4V3NeQPYE
qCo6te5KIAmmNc1CzvQZYKrTX9N6gw9ulpCXOP+ZAaKqqn6X3ifD2b8KxH94
hNCLPz177vHDoKqevwl9DLBeUijU9akAFOfTzD59Eevvfog1uL8ShPcPHv3e
qjANtvSZzHLFC8GuTuOJQbMJwJwaCZf5IAwzeNWXuW8fATiPL7SPYar8mUU4
j/9ETsgvcCEUz6Y/CaVZLtUn0fMOn557LN0POpn3W1ROdoIVyn4GMKIbQGOt
x/y7sf6+ZCH6YU85eE+5OZ9r1Afu/zzDs80vl83vZVbNmwtLNbB5fGlX+aVV
en1svp7JtfeX8KUZtLiSS37zy0VgTT74YgWDifarhYMXTQToG7gjKl9oHnVY
z50waiXCvt0OEzqv5hBPi/SZoS4OKC94f1jbfwpJv/9r1jrLDfvXVR9TnKcA
nYsCozkLWD+gXbZrLGkUcF7sdr/JTYJ7XGQfQAL2PJRXtpVF4IOXhPn17Ptn
QdwH3rExLqx+025zfML6edKfhec/+Pih5DMut5cHmKBia1NGj4gApF45q5C8
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
PUk=
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{901, 2748, 2746, 422, 423, 424, 425, 812, 708, 
                622, 552, 499, 466, 834, 730, 644, 574, 520, 851, 747, 661, 
                591, 426, 813, 709, 623, 871, 767, 553, 857, 753, 892, 667, 
                880, 776}}], 
               PolygonBox[CompressedData["
1:eJwV0slLVWEYB+Bj0sKMypyHzP6BBoeGpUGBRQWBlWWTEBSREY0mGRQ0WalN
uigocFfZYMO1eV40u6zUJoeVLRIabHy+xcPvfX/fOfdyzz3jKtbPrxwSRVEc
7bQNi6IYI5RvlDHy46PoqX0T4/mh20+y/qy9lJG81bVRoH9m38wEfuoOkKI/
Z1/AKN7pblDLQVKdn9cvJIkO3U0OkeasRbeI0XTqblGof27fwkQGdYdJ11+w
l5FMl+42dWQ4u6hbTArvdXeoJ9PZJd0SUvmgu0sDWc4u68pJ46PuHkX6F/at
TOKX7gjZ+lb7UtL5pLvPZP1L+zby+a2bo+sx11HCUV2O7op5GRnhOdv7ZSOf
nc+wd5r3stYcT3G4Xn6TNfK03CgTeeCeKfJV+G5ZJVfLiF0UhGciv8od8qTc
IBPYwx/3z5W9+ipZL9fJoexmlr1CDsqdsjm8M3I4x9w7Rl7VLWdV+DyZGd4H
8xfZRLfrZtq7zPuYHq63f5dneOh8qv21eTtrzHEUhv9MDshT/HXdPHufuYHZ
HNfl6q6ZV5BFj+4R0/Tt9mqK+Kc7wVj9dftKsunVPaaRPGex8JvJoU/3hP9P
hmz4
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{387, 2747, 2744, 596, 682, 786, 392, 503, 557, 
                627, 713, 817, 439, 472, 525, 595, 681, 785, 391, 502, 556, 
                626, 712, 816, 438, 471, 524, 594, 680, 784, 390, 389, 388, 
                437, 470, 523, 593, 679, 783}}], 
               PolygonBox[CompressedData["
1:eJwV0klLVWEABuDj1QyEfkLDda72VtokaZaZlBtbFKSWlppCEIGV2gBR6SZd
pFaW5Y/QJrXABm2wyVZNG7VBjYIiiJ5v8fC+33vuwDn3xisbyxpiURQl8ICB
lCgapN9wkxu84AdZXniI+6xMjKI+23PmybTVM8IK167bnjFHhq2OYZa7ds22
UF/Had6Rb39qnyXduZYhsu29tmR9LaeYZKN93F6kt/OZbbbvtjT9IPfIsl21
leqdzFBmWyB7+cUe5zx5krdscB4L967/ocJ5s0yS9bTpnyjWv4V7kY10247J
OblLpobPlP9ktTwgj8q7MlNe8d6zchFH6Le3yr+ySm6XZ2QyDXQ4N8lpuVMm
yRR5ONyj/pPdeq6MyVpa9Tes15/4vj79N3udC+UFPrLV+avrXfos5c5xWcMd
Mpwvu16iX2SKHbZEuYYWXoff1PbY6wr083xgi+2LbVl4Dtwm3dZji+mraeZV
+I3tj+yb9HO8p8g2Y1uq7+cWaeF52xL0VZzgJXn2h/ZpljjvY5BUe1f4k+s5
HGeCXPuofYrF4bkzQNx+yfYftkRk1Q==
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwt03ecz3UcwPHL3tzZ2xmHqBRJRpnhKCESJTMJnWwyKntUPDSMJqFklJHd
IDsNIqOByMgolArl+X48+uN5r/fnfb/73fe+v+8ld0lr9eQNCQkJfX2JlvZl
n8Zypj6qeRlCT+eWmpH+bHPuoUUZThPnBnpZn9K12lULMsncXnPxjbmXlqSq
+XY9pYsYTlvnbOyKn6GZ+T/dyHTSUcbuO53FEzSlod1fuo7JVKO63WldzAg6
kJ6y9vt1dlwLqXEdZCAjmchMOa87oK/RO64l3pM77H/VJYzkYbKQYn9QX6cP
zeO11LA/o0sZxSNkpbz9IX0j7jn3xmu50/6sfsAzdCQbFey/1zdJ4z4a2f2t
65kSP0tNu3P6Ic/yoHN2vozPNK4rPmw2yUtx/eY87DFnp6L5B32LTuZ89DW3
0kxsNz+uxWhhvkf/0X66QbtpIZ7m+bjvmptB7I57qaUYSU3nWnr+/+dwmXbR
AgzjOed2moOBfBWfuZagU9yzeHb53NxdC/Ny3GNN5FtzDm40/6hvx/NJa+fM
7DDfT2PzFf2YF+KaqG33my5nNJ3jntulY7P5FXJSyfknnRP3IP5PaGJ3VT/h
xXgv6tj9risYE38nuahsf1jn0j/uc7yWu+wv6ErG0pXc3GR/RN9hQPwt8Vru
tr+oHzEuPgfycLP9UZ3HQB6I15LILb73s85nEG2oSxJ5yUd+ClCQQhSmCEUp
RnFKUJJSJFOaMpSlit9xTBcwmLbUoxy3+t5xfZch8axSP67B/pKuYnx8tqRw
m/0v+h5D49mgqd01/ZSpNIj3t/tDVzOBx2hhl54t5lcpT1XnE7qQYXFvnLOw
0/wQqeZ/9TOm0TCuz+5PXcPEeJ1zTr4294jnyZyBrfF7tQgzzB01icHsde6j
yYyignM1Palp+n48b5qfofG/FJ+NZmUAXzj31OKM4DoBYZ5S
               "]], 
              
              LineBox[{146, 69, 104, 41, 70, 42, 43, 44, 45, 46, 47, 48, 49, 
               71, 50}]}, Annotation[#, "Charting`Private`Tag$423117#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1He8jnUcBuDXkZGRvfemKHtTFELI0aDS0FJCKZV2jj0yi4wyM9oDxyaU
vSqr7Owyyyy6vp/+uM79+96/53nPeZ9xSnTqntwtTSKR2OVHCtnSJhIzkhKJ
tmRmm24OfehLP7I7Zqa9ZLKwXTeXyvrV5h5U5LyuPzn0s8ztyMoO3Tyq6NeY
X6QSF3QDyKmfbb6H1EyJxA1ypz6VqvbWml/iZi7qBpJL/6n5XrIl/f995lNN
v87ck1u4pBtEbv1n5vvIzq+6BQxmCHnsf66/nxz8plvIUPLa+0LXnpzs1i2i
un69+WUqc1n3Hvn0X5o7kIs9usUMI7+9r3QPkJu9uiUMp4C9r3UPkod9uqWM
oKC9b3QPkZf9umXU0G8wv0IVruhGUkj/rbkj+TigW05N/Ubzq1TlH10r3SHr
YTRnlK6w7jvrh8kf19n8pxzDQftNzLut+9PFOi2N4nh5Xr4lJ8W9lpn53jm1
5Kb43bKX7CwT9KZaXBN5Vr4pJ8gX5PX041/nt5aH9b3kcNlVpiOFFuZO8rJ8
W06LZ0ZmYbRzi8g5ukd4Mj5PFojnwfqkHMvvjmtq3mM9gMZxvPmCnMwK+7XN
m61f4xnrNFSPeybPyYlcdVwb8xHrEbTkfV1R3VzrRynIId1K6ui3mF+nBtd0
H1BMP8/8GIU4rFvFGIrbS43vTGGO6H6Id8D7M1aWsD9f/zhFOKr7kbr6reY3
qEmCD/Ul9Qusn6Aox3Srqaf/Ke4JtUjDOH0p/cK4lhTjuK6Zbq/1QG5nja6+
7ud4HqhNEuP1pfWLrJ+iOCd0d+r2WQ/iDtbqGuh+iXtKHdJyt+6oHMldTHBc
Gd1i66cpEe+x+VR8N/6w39y833owTeIemC/KKayz39C8zfodnrVOom68b/Iv
+RE9rDNxnXVbeSyeAzlKdpPp6UOruO7ySnyenC57yqz0Z6LfV1YuifdWdo7r
IK/Kd2VJ2V6ejmdCjpPdZYZ4B53bQh7QDeG5+HtoGs+JvCSnst5xt5q3x2dS
j47mv+XHpCPZfFyOpnV8R+eU0y2NZ5tSnNS11B20HkozNuhu0+2w7k190sfn
6svrl8U1pDSndBtppN9pTqEBGZikr6Bfbt2FMpzWbWIyN8b/jfiOlOWMbjNT
uMneCl1XynFWt4WpTGN6/H/3LnwiZzCTWVR03sq4X5TnnG4rjfW7zH1oSEba
6U7Eu0sbZjuukm5V3I941qyvyQp0sD4T75UcL5+XGenLfzCQ8T8=
               "]], 
              
              LineBox[{844, 740, 654, 584, 467, 835, 731, 645, 575, 521, 427, 
               814, 710, 624, 554, 500, 468, 428, 429, 430, 431, 432, 433, 
               434, 435, 815, 711, 625, 555, 501, 469, 836, 732, 646, 576, 
               522, 852, 748, 662, 592, 868, 764, 678, 886, 782, 904, 436}]}, 
             Annotation[#, "Charting`Private`Tag$423117#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1GW4FWUYBdADl1ZJpUNaQRpplEZBGqSV7hDFxsLAQDokpLvBQEWlW0Cl
DFIBpfNRBEHX+2M97/72fHPPuXNmJn+Xgc0HJEskEknJE4nhSYlEiZSJxOcp
EonZZmvzA/MeVnKX9XNmgkXMtP7ILBDn8KvzO5mn9fPN983RZi5qyEPNO1kq
f2wW5VvnNDD36gZTjFesU7NA/tvxfvJf8kQa8aGupG613Ib0HNJ11p2J70xN
1uoa6vbJz1Kc67oRlNJ/Yd2WDBzWrWMkoxjNGMYyjtL2f2lfOzJyRLee8ZRx
7CtdezJxVLeBx/T745rxAP/oJlBWv8a6A5k5pttII/0B6+cpwQ3dRMrpv7bu
SBaO67rozsrDqcUmXWPdQfkFSnJT11/3d/xONI6pK6/7Rn6Cu+PzrJMxS/7N
8a7yubjOjJFzU1t+M+4Blsmb7Wsi/yS/yEg5B6XkV800LGGh9RSzcFxv/nXe
APO6foE5yRxv5uNTmlgPMzPF57DKerp5f1zj2O/8B+O+0c8xn4xrYGaN+zT+
dzM5s+VJZkF+d04387xuBGPlPNSR3zLTs1zeYl9T+Wf5JUpzSzdQ9488maYx
dRV0a+VOZOWErrvuQlwL6rJV10z3i/wyZbitm0JF/TrrzmTjpG4bzeM5sh5C
Wf7TTaWSfr11F7JzSredFvpD8cxQjkQ8W/rK+g1yV3Lwh24H05jODGYyiyr2
brSnGzn5U7eT2VR1bJOuO7k4rfuOlvrD8VtTnmTxe+ir6TfLPcjNGd0uWumP
WL/GgyRnrr66fovckzyc1fXQXZRHUY/dusd1R+XXqUAS8/QP6bfKvcjLOV1P
3SV5NPXZo2utOya/QcX4HtZp4z0mp+Ap+UbcqzRjvnMe1m2Te5Mv7nPrJObI
5x3vJV+OZ4Rxcl4ekd82M7BCnmbex/f2tzGPx/c2h8b/Z+bkEyrF/2ami/cj
i62nmkXivUNK60HmTXOhOdWcYN7LZzS3ftfMHPdy/E3rGWaxeI/67Brmdl2f
eK7lbHFu3OdmCubKF+zrLV+JZ4RHecc6IyvlHxxvK/8W7wIqk4qn47mO+44W
8f3sq6nbIfclPxd1fXRX41rRgB917eL5jOeQKqRmkb6WfqfcjwJc0u1lMbUd
+07Xn4Jc1u1jCUtZxnJWUMfeXfYMoBBXdPtprz8RvxVVScNKfV39bnkghbmq
O0AH/cm4HlQjLc/obsVvTEtW2VdPtyfuJ4rEcx+/HfPka473la/J42nIQV1H
3Sl5GNXjHrW+I96fcjoGy7fN6UyU89NKfs/MEvdZvDutZ5rFWRO/v79bP+67
eM7MQeYIM3u8UylqPcRMFfca860nm4VYzf8lrQ4i
               "]], 
              
              LineBox[{1269, 1174, 1100, 984, 1374, 1255, 1160, 1086, 1035, 
               948, 1352, 1233, 1138, 1064, 1013, 985, 949, 950, 951, 952, 
               953, 954, 955, 956, 1353, 1234, 1139, 1065, 1014, 986, 1375, 
               1256, 1161, 1087, 1036, 1397, 1279, 1184, 1110, 1418, 1300, 
               1205, 1442, 1324, 1468, 957}]}, 
             Annotation[#, "Charting`Private`Tag$423117#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1nf8zlUYxvHH3mTvsiMzMxQKEZUtIWUUSkZGoaGsSslIJUQhIyNCGdmU
WZS9s0MhZKR63398Xtd13ed8f9/nOefc5/kV7NCjafckiURiQNJEYnWKRGJR
qkTiLsxImUg8jqy4rL5LrRZ+lHugAtaoL1YrgJlyI2TDX+q71R7EJrknKmKt
+hK1gpglN0Z2XJTb4Dj/Lq6Yt0d+CJvlXqiEROpEopvaFX4C1pn3rVwIs+Um
SG/OK3ICOeRLtC1O8CNw1TN75drYIr8Un9kzg+TUqCwnkV/kr/L38dP4iXxh
/gM+J+ryC+izdL2/+R1fGPXlr8wtST+WW9GmcgbaX25Mk9DqdAZ9huaMNeaf
wqPyyVgvOiU+O31Pzk/fkZvTzLE2dB695t37aB1sNa+c+kS+d6wt/yafBlXk
pHL3eIafhCLyKDkXNvg7S2kRzDHWDLliL+V2OMW/j7/N2x/fH9vkPrFG2Ki+
TK0o5srNkRvX1X/AcvVimKfWAnlwQ/1HbMJmbMFWbMN2/ISfscJzd2O+Z1oi
L26qH1B7GNvlvqiKHerfqxXH1/ITyIdb6gfV6uEnuR+qYaf6SrUSWCC3irWO
Myg/jdP8SPxj3qHYX/wsv4wc1u8tOW3sp5xM7sH/zX+GovJoOTd+8fwqeg8W
Gitl7BP+ST4jP4BvQpPS++lM2p7eGWc2zgkek89EL9DP47zEeZTvpO/KLWiW
ONt0Pu1Ib3vvYf4RNJB3mH8vnSS3jl6Rc9LBcrp4t5xc7slf5yejmDxGzoNf
/b3VtCS+MdYad+FafF6c5UfhX/OOxDuxU+6PB7BLfY1aKSyS26AA/os7I/oe
a42VxmL1tigYvY+9xtapl8ES+SkUin7FUbWGsc78ANTAPvPXq5XFt3K76OHo
AxyLXovvww9ETew3f4NaOXwnPx09Emde7oDf+dGxz/gt9gO7+FdRCwc8v1Ht
XiyVn4kzED0Qe4Fz/JhYXxyXH8du/rXoNWs8RE4f96acQu7F3+Cn4GD0kVwe
y+T2yGTOQDlZ9Fb0E+2E8/zY2BfjI+SsSCGfoI2why9v7DP+9ehTfiifAbX4
OXG/qKfkX4pn6M3oLzo9+iLOn3w3HSs/QfNGL9KF9Dl6KHqbrxBnT15ufmk6
Ps487SDfQV+Vm9Lk9AE6K3o9+jvuVlzgK6t/wX8YZyXuQz4bUsonaWPs5d9A
baQyp7faLf4LHI47Rq6IFXJHFI95OBJ3j3olfC93Qom4L+J74A9+HFLjVPQo
9vGD4g7znmFyRtSJOXIf/h9+arxD/lDOh6Nxv9HKWGmsjLFP4zvymfnXYo9Q
g58d90TcObRznBO1P+UqdKrcjn4UfUHfl1vS7PEZ6NdxBmga46djbaMv5P1y
BTpZbhO/C3GP0uFyM5opzh2dS+saS8P35W/HPcl/yU+LteHH8flxLO5rWgWr
jJU1NiHWjc/Cvx57FHeFfJt2wUX+4+hb4yPlHEgrn4nPgQP8W8hn/G35jjhX
clq5H/8vPz36L34n5PuwWu4cd2rcO3JXXOI/QTqclZvjID8Y9aL/4jdGrSrW
yF3ifMY9JD+Py/x4pMfvcgsc4oegfvRS/D6pVcNauWvsKTLgXOwJDvND8Uic
0/gtU6uOdfLzsV7IiPPRQzjCD0ODOGvm71C7H+vlF1Aueh4X1FrFmeKHo2Hs
tfk7o4ewQe6GrNbsDTkVasb/JXGP0f8BU6RDsg==
               "]], 
              
              LineBox[{1899, 1779, 1690, 1552, 2030, 1881, 1761, 1672, 1612, 
               1512, 2003, 1854, 1734, 1645, 1585, 1553, 1513, 1514, 1515, 
               1516, 1517, 1518, 1519, 1520, 2004, 1855, 1735, 1646, 1586, 
               1554, 2031, 1882, 1762, 1673, 1613, 2059, 1911, 1791, 1702, 
               2090, 1942, 1822, 2119, 1971, 2151, 1521}]}, 
             Annotation[#, "Charting`Private`Tag$423117#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1WXYFGUUBuAhlFBCQlIBpVMaVLo7BJTukO4O6U5FFOnuklBBkQZJwSAk
lMagpEG83x/3dc7zzM6y3+zMkqFFl9qdY0RRlDZmFHWIG0Xp4kfR/HhR9A43
5a3Mpph+u64+CTip60h6/QL5XW7J25hDcf33ugYk5JSuExn0C+Vi3Ja/pY7u
F7krGZmrK6HbYW9IIk7rOvOGfpFcnDvyd9TV/Sp3IxPzdCV1O+2NSEx3+Z45
mTOON5Mv2geRlyFyTGbZuzj+pn2xvQR35fby3/bRbJfrySfD+zLenpDM9n7m
U/NT5ntdKXmXvXE41x6fV+w9zPvmInOKOd1MyVp+c15z81J4D3OwOSmcx0ry
yR+ZsVjCbPkzMw3r6er8jOGYfpZZ0hxhxuFfxzqY/+jGMNWeLHxX+vfNU+Gz
McGeiCz2/uYzcwYLvK60vNvehCT0lB+E9+Ks4y3ky+Gakj98L7pMuqX2UtyT
d7CQMvo9uqYk5ZyuO5n1y+TS3Jd3sogeZHFsub4MD+RdLKYnvehNVq9Z4XhZ
Hsq7WUIfsoXrqC/HI3kPS+lLdsdW6cvzWN7LMvrRnwEMJIfXrfaaCjyR97Gc
svq9umYk47xuEDn1a+SKPJX384HudLh+ZGWFrpxun705ybmga6m7Er5zCjBY
lyvcK/ZKPAvPonzTPpYDcn35jL0X2Rgg/xfuE1Y6Xl7eH541s0W4F8yXwjXj
1XCe+dBcbE4L97OZinX87vxW5tVwP5hDw3NlJgnXjoLyUDN2+M6ZI39upmUD
Q5yfO7yXfrZZ2Rxpxg2fMfxOmLd045hmT84P+gbh2dD1JjsD5efhvVnleAX5
gL0lKcLr5Efmx/zheGv5mn0YhcL11OUJz4y9Cs/lgzTUnZX7kIPVuorhM9hb
kZKLuqG8Ff4muSoRh3RrGMZwRjCSUYxmDGPJ67wvvb4aMTisW0sl/UG5Nam4
pBtHPv1GuToxOaJbR2X9IbkNqbmsG09+/Sa5BrE4qmukO2fvS07W66roDtvb
koYruja66/bhFA6/BboCus32msSms3zbHM8xxxvL5+39yMUgOWKmfYPjVe1H
7O3CPWp/OdwP4Rqbj81PuOp1beUb9hFMsSelSPjOzBfCbwJz5Znma+EaMtF5
Bc0t+jlmLXOUGS/8ToTz5C7mHXOhOSHcE+E+D88wPzq/iXlBP8/sb040E5M7
PG9mDL6wzzBTh3/XOdXMo7oPw71qTxA+U7i+5hNzOte8rp38Z7jHKcokXSHd
V/bavEhX+W74dznueNPwnIXnljxs1FXXHbO353Wu6yZTWP+1/B5xOKHbRI3w
t8kdSMcN3RSK6L+R6xCXn3Sbqak/LnckPX/qplJUv1WuSzx+1m2hlv6E3IkM
/KWbxtv6bXI94tMt/L8T/u7wPdtThN9C/gd1diWA
               "]], 
              
              LineBox[{2530, 2428, 2352, 2232, 2642, 2516, 2414, 2338, 2285, 
               2195, 2619, 2493, 2391, 2315, 2262, 2233, 2196, 2197, 2198, 
               2199, 2200, 2201, 2202, 2203, 2620, 2494, 2392, 2316, 2263, 
               2234, 2643, 2517, 2415, 2339, 2286, 2665, 2540, 2438, 2362, 
               2691, 2566, 2464, 2715, 2590, 2740, 2204}]}, 
             Annotation[#, "Charting`Private`Tag$423117#5"]& ], {
             Directive[{
               Opacity[0.2], 
               Hue[0.67, 0.6, 0.6]}], 
             LineBox[{385, 386, 384}], 
             LineBox[{906, 907, 905}], 
             LineBox[{1470, 1471, 1469}], 
             LineBox[{2153, 2154, 2152}], 
             LineBox[{2742, 2743, 2741}]}}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"Feedforward solution \"", TraditionalForm], 
         PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1a\"", "\"u1a\"", "\"x1a\"", "\"\[Theta]dot1a\"", 
           "\"xdot1a\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1:eJxcvHk81FH7/z9j38kSolJUKNFeUtepFCFaZN8iW5stZScpKdmSJHsqipKQ
EgdJ0mapVNaZLIPs64zBd+7H535Pv9/tnx4nY+Z91us6r+v5mhX2bkcdOUgk
ko4gifSff1dGz91PXXZpN4kUUL7z4vYyvTJewx5nDOXPZpaG0OPwZ+Gt/FzW
9RBVyZEJKQV4b/T+ikdGP2FkZok/1bcKO6ozhDcId8IQWrNu+5tP+JCK4+hi
nS64fHNvsxnfN1zwLdD7w3YaGA/0W9lN/cQ7xVWfcQX/hbmT1hl7brZh59m4
lAdmIzA99Dn879VO7FbTu+nZoTH4u/9KPimLgq9b8KyaOzMBATaigYI7qNjh
vb/TBpcpuOFu3f5ZgYoreWWPnDafAed9mzTDT1DwhkUhCX3nGaC2OzTPL7QD
243vWmd4hgmmrZuTX5T9xhmp7+Snb86D+VMFnRCHJvwiSrOl8SgJzVqLHHY2
fovPv951OMWAjES3Y44dKBlw3YOxCEsOdPdyX0XTxXpw1dlR5mrGifinH2vc
vNEBydkbik6f4kLVngdWmwrRIHa87JL7RW50eLek6KryYeh57H3BxZMHjUUn
jvWuHIfqA3GJoaG8CPRp46L6U0A2+k2NDuFDiQqOl2/2zwBpTzE53ZcfDa6t
Md+2exauSU8fagwXQIdntQPux86Bu4VD1fRlQSShwj1tmrYAlEubT8JtIfTk
qZTO4W4Skrx193dEhjCK8DQe950io4diqr7v74mgXiVvus8sB6r0XL5/zRNR
9HPl2dSrK7hQqkK6/C5jMaS7duRpD3CjsgAGyaVeDL1yPZfiYM+DVujzMhVN
F6G1x+/V6t7nRYVfVW78+rYI/VrtZPbtIx+KrJnXULAWR8oBsrUX5/nRLa++
U3at4uhJRwl24BREAVLLRFeaS6Atbuv3LqEIohwV7rrznRKoKibGNSddCPFM
kGUrbSRRJvnAnRANYfRI43lQaq8kIuv1S4+2CiMV+8eGc2el0Ir6S9VXWP1o
Ofiq4PiAFBo5oqAmay+KyjV7YlPfdAHpvz8H1MUPBQlzI6J9OPpaRtqZRez2
v/X+fz8uuaI3J+ck2L9/mu8+vbAg89+2GKqLbfGgOT+DsKRVS7U/e2GFuZfJ
c1trwWAlT9Ws7wN87UtZ13GTb+CnVyzHa1iKL4wfE++17Afxd1kLLrYtOIxL
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
MKEXcngNfH/1cQYTeiHfvi5ZRTtSBaEXEnodoRcSbUIvJNqEXki0G+/7qYHX
YnZ75sURrZVj/9oLJZ5FV89Js9v6Ggf2B0z+a7+3Vnc97SXDbv//9UISidAL
jwZnnNPVmgeeafkhri2t4HNxv/uTvx1gnvtsQVGVCpMrrI3D/d4BKdhj0wj0
wI6Vk57KT4rY+mFUwJE9cSP1bP1Q16NE6cqxX2y9cE/bep17df/0whUnpH7v
2NHD1gvjTeSXxHn0s/XCePVVOT9ah9l64YO5nbnxpuNsvbC086NFpNU0Wy80
2nWhu2eQwdYL9fZ+N10nNIeTqjwyJL6Rkfi3+caxF7NYMmK4mf6LAxkgtzZK
6iTm8Nny6hSFE835SaU/b6XhxV8uyg2NcCEN/ktXRPQLsNZX2YC/E9zIuqLd
T+clBb7PXA73ZvAgV+9mmaaIEaDqFe+KIPOhTo/fbWUjk0DS1R2TnuNDd87q
Zmt2sPLa3B9rXpEE0PeI6TLpXQxgblfj6+YWRD0/hdEjHQYoD+nfuickhI7d
ANmQg3TwE3BOOyknjDiZnW7+p6ahrYGSk71MBKneEg161zEBhZVKthcVRZHB
vutBovdHYeHvHVuapBhieCwWWjg0AIQeen+FLyX0KRP/jLo8mrT833ozifv1
Uf3+v7Ym7+H8olf/1gOhl2qOpW5+v4yElPZtMDXZ+xuqQgcDjndToWPw29XH
chTw+pr6WvfiV1htfDru8r5uMGskLTtrm8bWT23UVgkWFn5i66dGHEtUxfya
2XqpuPfTnuPMf3qpqN3o12PHutl6qba17NcZvT62Xro77rL52+NDbL3UxP3e
9BvvMbZeypXLm+dpNMXWS2dTeUMX1jLYemnEYIR8ew0Th5c3+5jFkJFJwxV/
kwtM3J+j112ZxIGYnJu1ytyncbHttp39yZxo6Z+N+8sFh7B5qTEtN48L6a7+
USF68yt2ogwErS/mRiJpfLPjZ39DewNz/lwxD9pq8Drv5pVBaNJVGuCu4kXe
ZYE8Nb8mIEQ/tr+pnA+d3mJD5jOagcwLNfHryviRZ2uTHS8PA/Yqiz9pqRFA
QaUORiW2DDDIan58sFYQVc9l2p7MoMP6ms/koz+FEO3vy62yk9PgU7Brr2yn
MNobNNRhFjkJaq5rzqR1iKDrw/HFgZFjYPdwDUdAvyj684n8/J7VIBB6cPau
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
38A6j4vF913ZMySAWvq93oYeZYDFuf3HN24ho5cpGxm23HP4DGdDQuA5AbQv
TP7EAus+RotZItA49q//TP+LwZxOZLQs+uZZzw9M/GUXpd47TQA9PSg6ncw6
jzNaz4zq/5VA35g94SLlpIqn7oViir0kxGTaPVVnzY9C2JN630EyinKNP+Zk
OovtKpjtwksE0A6a3GySPgPKH3h55WeTkMy4w3LuXia+ZshUC24XQJH7jM9F
mDEgdedk3u1VZNQ6MU9NEJvDHFNCnknWAujDuYIjpqz4tbbmXDCjXAA9NlqT
lMyKn4PeBv5STAkUZP3t4VMtcsXqH8a2VjxkdG+Ha10pa7w3toQpf9spgGI9
3NsULRiwVVCyqu89CW2Qvet/jmcOL864zfyiTUZ7OkSETKaY+JvY7VK7YAFk
lBsp58A676Qfzh+9N/tvfIh6K/8el8XmImQUoleY03juJ7jtfPwA1XSDQUv4
A5llnRCwzH0q9/U3YNzwLm0z6QKNkpZ14gGJQNRf41a+/dN46j27/mrTXZ+3
Me07u96qf1iI5o7+1Vvd7z8JYV7rYtdbL7tH3w7QobHrrVmtfx0cF/6y663P
P+Srj+WMsuutFguKe78cmmTXWxeyuCaGbOnsemud2YnrRmZMXGTxnuPXYTKq
qZCtk6UxcYFMvUegLQfKL+rcs48+g4eUZd89t+JE6VZdsZ9NRnHtL4fatHNc
SFOsn1Lv+Bufa4w5YeXPjY5mjDhtjm0Ak6Xz7dkXeND92O+q2bQ+6HYq/ex3
lRfFcH17GVo4DrXlxxXPh/Gh3KYZxJk/DRbavXU/A/mRmpSSlMMbOsTX1v6p
uiGAZv6uIv+nHiGS1t+pdU0QRdR2/s3oocPqxSJR7neFkCS/ZqHJaVZ+912i
wfOBMLpx4PDXn6umYH2P+QxXughqazUbH7AcB8bkcIz8M1H0nHfzIs+tw0DU
k8uckxjq/TOYqCeXCmSUvHYjVczkJ0Z12f07n8QdXEpTvP+tB+2CG83qxq2w
RDXYAMV2ADLbdUdwJyu/r5xPuNVZDU8pl+aKjXrgxg9Tnk3Bxez6s/zSOWtR
mQZ2PbmqrfrsUt0edn24gGt3u+jZabwgx6WklrkA9gIH0pbQGXjfhhhIayKh
oLBt8SUic7jFfvaY0U8y6tnpMq79YBbzNMuaDrZxICXhG0N7Qyax7NO/lj9n
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
fsv3LZvGCC/9LFuLd/glfn3DKQ/FfpCgna1caoMGfj6lnnaK/EuGKmskZgzx
/ZX9/Wl9vwtS8GCtm0JiQxHy1TWzE/GGg5GYze3Kz1giFWh87U8NwPe5Cb/P
bXt/nw9GbN7Crh7nYISn/hddJbH9E/79O6tHSUyTocEjpb138PWF8NTBXbTu
cn8GIDz167dbk98tcbC2H7w/KuPx642FbzUMYYICdYlqpzwy1Np+d7xIjQJ0
pGPNBA9Jwfk3V5O2bqQgX33zdFxUpC0DEL76sMY3H5FmDpa1Td3Ryp8EnR0z
eGxSmaCqeHhCVE4KRouEnlyhQwGabp38wnH94Lb67dstjxngSrvbhRjABy2w
2ou3hKYxwk/bew4rHH/KBEmTUv1YKxlqhjd4bTKmgI1tp76+c8Pv14PJdQ74
/pbw0g/jWlfOP/wGgiLDy8WEpOBXz1Ob3Y9RAJ/ENf1fUv1g4U5VNwv/vHRq
b2w9s4YP1tv+K0gSnMYyZCJbJKvIcHh+66r2IxTkqTMDN3BLeDAA4akvJWks
uI1wMJ3b66RJYSTY6VVquQzfRy1jHpEX3iEF36hH/BHaRwHe9fqlupupoE82
vzDvIQOE0a4n/rHjg5MfRCpP80xjhKfedeqKl3c8E8Q1vBx1ZpDhEbb8iAv+
PBG+etvjcsgZisYIX93Vcb08Y8odEL56491xhbnaBtSzHTgSHPn1dQ8gfHXY
G9Ukrn4qmpf9UuP6lghBBpqXLeB+ueM8fj8QvnrK+t/iww90QPjqmDWjVx7U
UFHvNvlNS+OqffWod0vtoN5uf1uCerdyK/Yb/B15i+Zhpx1gYuKbatG8a/sd
a+ybmlho3vV3naox8rJJNO868O6be+edOWjetfzqx4rZCxw07/phgsI9ueIp
jOjhJpeVqM5cn0B92m8brxRVfuxCXloV2753iyUVeekpV+8Yl9sDyEtnnMks
CDEYRl76fOrDgXv48094aQYX4LkgxUReGmTYPB23HERe+ohgVnxYJRV56cVN
IdUvmzqRlzaTGGSeSyhHXrpg5YL+15AC4EIem8kdlIT1F+rkX14vBFWvD2aw
r5FhiJbFzNnaIqB17L2Fxz8yvGJde+Mc/vyKc+XkH/SQgkf1Hmq7fC5CvdxM
JvvANb9vqJfrEPPRpvFmLurlOr6vbXt4JwP57A7xZDuV9bHIZx/YMmIZa1mG
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
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{838, 49, 47, 359, 360, 361, 362, 749, 645, 559, 
                489, 436, 403, 771, 667, 581, 511, 457, 788, 684, 598, 528, 
                363, 750, 646, 560, 808, 704, 490, 794, 690, 829, 604, 817, 
                713}}], 
               PolygonBox[CompressedData["
1:eJwV0sdLl3EAx/FHBQON6uRuWBAk5SE0yyKDgnbpT0s7JCh4M7Wdtveh3bGh
TfVkh4IyywbRQYoy92r8BQ1H49TrObz4fN/f5/n9VDC9vDpSFR0EQRSdZLKA
Dy6uUcuoF86RzXfdyjq6dSUJfNTXqWNMn2cRP/RT1tOjd5BIp77BQTawkV73
4S+TxCd9k0Nsos9dNcl06XoOM64vkMNP3cZm+nUNKXTrBo6Qz4C7naTSo29x
lAIG3e0ijV59m2NEGHK3m+n06TscZ0JfZDG/9DMKGdZ7mEG/vssJfutLLGFU
P2dKTBA06nziKHI3YvcykwGd4J0W5xLu6Vhd77yG+c5vbHT4vvNjm2fLbJZ9
Z0/6zB97OfzZ7nLtPPvKrrRjnqfah3q53W4X2g672rZ7PtU26VxbYDPtW7vK
xts5ts2usBXh/4x9b7f47Ge7j1nMDb/PDrpPdH7gvI37epJucF5LTPi+fmLL
OeX5X3uFpWR49tqOu09zfuRcygs9TTc7R5jMVndf7H7SGdKNnOafvsoyJvRL
ivmqDzCbYd3EGUr45q42/JsZ0c2c5T+JfWyp
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{324, 48, 45, 533, 619, 723, 329, 440, 494, 564, 
                650, 754, 376, 409, 462, 532, 618, 722, 328, 439, 493, 563, 
                649, 753, 375, 408, 461, 531, 617, 721, 327, 326, 325, 374, 
                407, 460, 530, 616, 720}}], 
               PolygonBox[CompressedData["
1:eJwV0NtPjgEcB/CnQiFauslFtqxUUtlsZkPksJnoAl1UdKRL7p1SXFDI+dBV
4qYipWWrtTV0sNn8Ceicw33SQZ/n4rPv9/t7nvddb8mVF06cjwyCIIJBssmh
2uEcZ3lANzNke/kGf6iy7/OOabLcrvObSvseXUyxza2OX1TYn1nikN1EZFQQ
NNqdTJLpVstPyu0RFjloPyfC+3ftGL2AV8S6vXWbYKt9jRnK7DhZSDsJ3ht2
K9ffs8lesA/oz8J/hn0n/O16H5vtaDlEln5cvmSt3hH+Fn27XiL3yC65UY6H
3ykH7DSZIXfJGjlNqedH7K/6Tlkt82S/TJHr5WE5InPkKblbtskNcsjnv+g7
9DLZQ5I+7/5Jz9Tz5FP+c9u9SvaS7NkqeYwW1thvPC/WO0m0x+x0/SpTnLHX
yZO0Eu+dQbd/7LefsESDvVLm84LV3nvtNkqafYVJTod/J3Pssx+zSL29Qh6l
mRifb3f7wRb7MhOU2B/5S679iAVu2W18J9W+xDjF9gdm2Ws/ZJ6bdivfSLEv
MkaRvQyzxWS8
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwt0ne4z1UcwPGLy0UlhXuNqItQCMlIRnmMBomQWbkyUnZp2mSvklmUlZG9
ChmZ2WRFS5mVhlEq0uvzPP543fc5536f3+93zvmmpnVu0CldQkJCOX+if7Oa
CiZDtLie0yraSlP1R62ki/Vevag1SDY+orO4x/h37UVR47O6krJkNd+pk+hG
YfNTuoxG5Df/TuczkPT8wxqGkkZNUjz3lX5Eb+7jBmu7dDLdaUwG/uUzhtGa
WrFnEslIJpK4wlqG8xy1Kc+NPne3vsdLPEVmrrKOEbTh4Tg7bvL8Hn2fl2lC
Fv5jPSNpyyPk9uxRnU0fKpLN2l6dQg+axrlxjQ2Moh2Pksezx3QOfbmfm63t
06m8wp3mp3U5zShg/r0uoLTxeX2Lu4x/1k9j38aX40yJl+NzGU0J41+1PQWN
T+gDuiTuVy9pNX1M8+rX8Zt0rpbSP7Sq9tNi+pNW1k+uv4d/6YNaSbPr/jgT
/UBL6m/6KkWMz+iKuHvjP7U5txsf14WUMb6gg7jb+BddFfcZWzLfqGN4nkLm
J3Updchn/o3Oo3/skVusfakf8hotuMPaD7qIwXH3pLe2Sd+mA3W5zdq3+jED
Ys/cau2ATuN1Wsbdk8H6Zn2HF3icKuSwflCn8wZPx12TaH2LjuVF6sUZk9P6
IZ3BmzwTZ0pG61v1XTryRNxZ7I9M/rdNx9GJ+nEf8Vvj++MzyUUyKeSOdzDu
Os4s9kn+eMfiLuJ8SI13Jc6YwvE+xv2R5Lu+0PF0pgEPxedbP6wz6cmzFCWz
9e06gS48SfV4j8jifzt0Il1pyP+ZTIfB
               "]], 
              LineBox[{67, 41, 42, 43, 44, 2887}]}, 
             Annotation[#, "Charting`Private`Tag$423206#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl03e8jnUYB+DXObJDyKbQIByVstplrziUvY6RUSiytyh777I32TLLXoXs
vTdF2Zuu36c/Lt/7ez/P+zrvM7LFtYhtHi8SiRzxT1F2RUUijUnFdn0UbShG
cUqw27EmpGaHPpq2XNf7kJ+r+jJKskdvShp26mNoxw29L29xTV9OKfbqzXie
vP62P+3G0p6bdv14m3/0FZRmn/4ladmlj6MDt/T+FOBffSVl2K9/RTp26z/S
kbKU44B9c9KzR/+JTpTnoF0LMrBXH09nbusDKMh1fRWfckhvSUb26RPoQgUO
231NJvbrE+lKRY7YfUNmDuiT6EYsR+1akYWD+mS6c0cfSCFu6KupxDG9NVk5
pE+hB3f1QRTmpv4ryaMjkel6BZJQ2e64/JYXOKyndc48c1Wm6gn08eaS5DFv
lFHhfPMy+YGsF+613C57+sw9OTj833ZFZC65Tn4ibzmeSS7W35e15Jvyd1lC
/uZ4CjlDLyIryhi5WRaVSWUOuUp+KBuGZ0bukJ/57AnZhhd5JXxf1P/vQDrz
fHM1pukJ9QnmUkSH8/XlMo7vHL8vh/AOrzm2Xt62z2xeYq7NGj2lPtMcSzI+
tzsp25KNo/p0evFAH8q73NHXUoVTejuyc0yfQW+qctquffjNHNdn8j0x3p9q
8ox9B17ihD6LH3ioD+M97urrqM5ZvSMvc1KfTR8e6cPDPeGevp4anNM7hWvJ
KX0OifzmiXpp4od33e6xHBGeB+7rG6jJeb0zr3Jan0tin5+kl+EZ+tk9kSPD
PeWBvpHnnDdLr8Sz1LK7ILuQkzN6eucsMFfnZz2JPtlclgThHugrZH36O/5U
juIjcju2QT60z2Jeaq5DfvMfcpN9KvPs8BzIyjKf3CKLyeThusvV4ftkI1lA
7gzvi6zt8xfNXcN7q+cK10GukR/Ls45nkAvDMyFryNflVjnPsaTmKeZy5DVv
kgnDc2JeKRswwHkRfXT4Th7pWfVfzHXZrKfW54T3gxThN9pdkt3Cs805fT7J
nDdVL08iBtrFsxsT3l0e61uoy2W9e7iGnNcXMIgo548N7ypP9K3U44regzxc
0BcymDj+susZfiMX9UUMoT5/h/eRGC7pixlKAxrSiHwuwReyMU1oylXn9wr3
i8v6EoYR7e8bF+4fT/VtpLGbG95dUtLM7prsHe5HeNYcXyuv2Gc0Lwrvlawp
35DbZHH5H/Tn8iA=
               "]], 
              
              LineBox[{781, 677, 591, 521, 404, 772, 668, 582, 512, 458, 364, 
               751, 647, 561, 491, 437, 405, 365, 366, 367, 368, 369, 370, 
               371, 372, 752, 648, 562, 492, 438, 406, 773, 669, 583, 513, 
               459, 789, 685, 599, 529, 805, 701, 615, 823, 719, 841, 373}]}, 
             Annotation[#, "Charting`Private`Tag$423206#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1WWUFgUchfEXCfWoKEioNEqHQTcqYNAt3SG1sIB1RClRSpBYQumWbgzK
oKT8IK2kpAJ6ACUEf/8PD/feZ+bdmJ0Z8rRPatArVSKRuOqf2qkTiUxpE4kx
aRKJyTKfHCBvygXyF8c7yOP2TNlfjpIPYLpjNeU2riU+0lPhYT1ZXpZD8aHz
StjL9Gq4Znezz+rvY6PdLL6X3h3ZUIfLzI3V8+OAPQO1uO12KzyCgVxJbrle
HdftTaiLLPxnXAEctGdiEOqhPhqgIRqhMbI6f5xzC+KQPQuD0QRPODaeL4TD
9mwMQSl+BVcDN+zNaIon+QlcYRyx52AoSvMruVfwj70Fb+ApfiJXBEftuajN
7bBbI31cX64Mt0p/Ff/aW9GcO2D3QHY047JxKXpRHLM72if0tzDPrmPv1Ntg
mH4fHtX7yivxvTBOT49hzi8rV3OvYbB+V97ku+vn9FlygBwjH8JSfOd4C3mQ
nyZ7yuEyLRYjh/2OvBY/kxwhJ8oMcY3Q3Oezy0n8FFlMfiBvyV8d66Sf1N/G
aP1BzI+/vdzFtcVj6Gdfjd8THztezl6jv45bdg/7fHxtfG+3tA/pvZATLbgc
3GS9OH6zF8R9xP1kt0MGfMKV59bqNXHb/iG+HnLyU7hncdxeiOGowK/jauGO
/SNaIRc/lXsOJ+xFGIGK/HquNv6zt6E1cvOfc8/jpP0lRqIN2qId2sezjDzO
/cJ5L+CUvRij4h5BXsem8SVw2l6C0ajEb4jnEnft7XH98XS8B7iSOGMvxaeo
zH/F1cU9ewc64xl+BlcKv9vL4lnkdtvtkTHuIa4K97VeDwns5LogHz/TLo2z
9vJ4jrk9dgc8jrFcVe4bvT5Soad9Id5F2BXX2D6sJyEXunL5uVl6GZyLn9c+
FfcoVsS7wt6rd4z7SE+NTHp/+Vc4jI/nKN47zn9RfstNlQ3kEHlPLoznLe4v
eVHOlgPj5453Z7wn476Kv6s8wk+XveUImQ5LkNt+V16X8+VImSIz4k2fLSBn
c2Xjd9Zvy/NxDfXT8VmsjHefvU/vhMzxfrD/jns5nn/HX7I36g2RGrvjnuKO
6n2QB924gtwcvRwu2KvincrttzsjS1wb7mVuk94IabAn3iEoxM+1y+OivRoT
4tlEYcfm8RVwyV6DieiJXkhCb/RBkXgHOK8i/rDXIgXV+M1cY6TFXi4ZRfkF
diX8aa/DJFTnt3BNkA77uL4oxi+0K+OyvT7+f+B+trsgKyZzNbitelPcH/eZ
fUkOwv54Ju1jejLy4j37hhyFfo4XtxfpVTBQvyOv8F31M3E+Ntj/Azn2AEQ=

               "]], 
              LineBox[CompressedData["
1:eJwV0DkvRGEAheFPjGBEItGgE3rLL7AUllJjq6hQWIIZy5BYCiIkEonYoqCx
hegsleUHWFo6HQmmoJF4bvHmPefc++W7uaXdAy39GSGEBB5jIfSgCBuZIYwi
gSTGMI4JVGSFcOidGnzqF9hEg/3G1oYcPNgmUWk/0mvxpV9iC432W1s7cvFo
S6HKfqzX4Vu/QqvtSe9FMbZtTbY7uQNxDOrvPIsnz7v0F3kYZZjUf3gZU55X
6ydyPWbkP07be+W36H2syHFc29v4Obqb+3iBY9G/QIme5DTv8yKvcQHOsON8
M9/bt7iT5zngAHn6EH/wHs/xKufjNLrX+W5+te/yCC9xNsrlFP9G34t1uRDn
mHbuH1tMP/8=
               "]]}, Annotation[#, "Charting`Private`Tag$423206#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1XccVlMcx/Hb3kOS9kBbUTRIFCWlvciIMqI0ldGgVEhDqJQ0NKW9p1Kk
Mtp7UpGiTbS9f398Xt9xzn2e5557z3mKtO7YuEOKJEl6pEySRWmSZHq6JMmJ
MWmTpAYy4A/9T7oKWCm/gJJYrJ+huwlj5ZrIiOP6n3UVsUp+EaWwRD9Tlwvj
5IeRCcfkhtjD98YJ8zbKlfCN3AalcUF+Fsf5oVhq3iz5ZoyXayFV+iRpL1/g
M8dv5xthL98HOY2/JafDn67fRCtjtbGixj7kX4pr+df46/zt+JdvhRP8HcZG
8R/x+fl3+Xo0G72PTqHLfPZsmhvVdV+YW4QOjN9DH5FT0w5ybfqvfBcdIz9O
s8Q68o1RU94Xa0iHyU3pO/JN9G05Pe7hJ9K/fO/myFhjTjH9UP5lPgv/Op+g
jPwfbR3rwH+M5a6dI+fBBLk2ssbzkJtgP98XJ83bIt+Lb+W2KIsV+rm6vJgo
10E2nNJ/jXn6fJikexTZcVq/EqvwDVZjDb7Fd1iL7zHfdfkx2TV1cQPO6Lfq
quA7uV08G6zTL9AVwBS5HnLgz1g7HOD74ax52+KZYa38Cu7ERfm5WEv+E6w3
b6FcEFPl+khjLTvK//E34i++GQ7y/ZHLeG85A865fjutiu+NtY91Nf6GnALl
5Ev0eZyM32DsM34YX4B/j69Ps8dn0Kl0g89cRAvhQd2X5t5CB8U7QxvIaWkn
uQ69KN9Nx8otaM54jnxzPCwfij1Gh8d9xDst30z7yBnjWfOT6Hnfu4Pej3Xm
FNd/xHeIZ82/yadEefkyfQGn+OH4wbWL5cKYJjeMdxh/63fqHsB6uWPsBfyo
X6Irgq/kRrGu+CfOozhjsNTYLZiubxy/Oc4J/S5dtVgnuVPcOzbql+luxQy5
CXLH3tbvjn2KH+TOqIBN+uW62zBTboo88T7Lj+EX/r3YR+btieeAH+UuqIjN
+hW6opglN0PeeOdjj+NX/v1438zbKz+En+RXUQlX5Bdxmh+BLbGP5GKYLTdH
OmveWb7E54s9Ec8Xh+PcMjaCHxD3GWcGnynm+px9tAZ+NlbC2Md819iTfHf+
UZqKVoqziz5JKxu/yrdBLfmMXI6OjveIfioXpO/LDegN8Z7Eu0mfpltjr/PF
417lOebfSgfHevLp+S785Vh/flzs+din9Akc4cvE9/AfxLPg+/KZ4xqfvT/O
Smw01i3OCOM95NRxHsrX6Es4y4/Etjh35BKYKz8e+y3WXX8g9gU2ya/hXmyP
M0pXEvPkFnG/sSaxJ+Ls0pfCfN0TKBTfqT8Y64XN8uuogp1xzulKY4H8JArj
XKw1jvIDcd28Q/Ij2CK/gfuil1+Os4UfhV1xZsq3Y6H8FDK4/1flK3wRnOef
wm98WWMj+UHxTvL9+Cyowk+mif4XWjvek3h2ckn6idwk9nmcqbSnXJemoZXp
hPgOWtV4QtvGb6fn5fL083jWcb7F+tABckOaI/Y/nUZ3x9lPy2CRebfph8Q7
xGfku/JX47yLsyN6/M4Pjj1gvL+cFSnkX+P8wza+e5zVxnvJaePdlFPI7fi/
+dHYE/85clksllvGOxpnjtwSx/ghSInDsU+wne+BB7A3/q90d2CJ/Ez8fqTC
kVgr7OB7ohr2mb9OdyeWys+iKFJjv7H1+nJYJrdCMaTBUV097OR7oToOmL9B
Vx7L5dbI5P66ydfiTOLHx16i/wOhRkk5
               "]], 
              
              LineBox[{1887, 1768, 1679, 1542, 2021, 1870, 1751, 1662, 1602, 
               1502, 1994, 1843, 1724, 1635, 1575, 1543, 1503, 1504, 1505, 
               1506, 1507, 1508, 1509, 1510, 1995, 1844, 1725, 1636, 1576, 
               1544, 2022, 1871, 1752, 1663, 1603, 2050, 1900, 1781, 1692, 
               2080, 1930, 1811, 2112, 1962, 2142, 1511}]}, 
             Annotation[#, "Charting`Private`Tag$423206#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1XWwVVUYhvEN0t2MOgbdSNg6IEjNGCAhMyoql5K6NAICKt2dJkiDRYNF
dyilhEp3K2WA/r4/nvne5117c865a+9FoZQO9VPTJEmSLW2SpGRKkvezJMnh
zEnSBP/wlZiA2fp06Kd/EL/pmqGf7gh/Hf/ybzARc/Tp0V9fCL/rmqO/7ih/
A7f5t1ivK4xpuiqYpJvLM2AAL4zDuhYYoDvG38Qd/h026Ipguq4qJuvm8YwY
yIvggvwctshHrO+VK2Mhr4uWuoH8uNwU//FjvBpW8e/5RrkoPuNZsyZJG/kZ
+ZrZALvku/U95Cmun29mint0g6xlMFvwR82i/KL8PMrxrbyA2Y1XMY+6f5/8
MEryRdZzmqn8CbNe7I/8Cirw/fw+s3d8J7OV+wfJJ/QpSKtryhP5uFkdq+Uf
XLdJLoYZvBquyw2xW55qfYGcGYN5MRzT/cwfwWL+Et7SDeYn5WZIg1W6D/C5
PguG6IrH5+taY4juFG8e3w+rdR+iDdqiHdpjqOtOW2+Bu7BG9xFSMczamdg/
pMNa3cfogOHWzupaIT3W6T5BR4ywdi6+d+wL1us+RSd0RheMdM15a62RERt0
0/CFPiuG6krghK4rRuku8DbIhI26zbrimMmrY7ruS54Nw3hJXJJfwDb5pPVf
4hnBEl4f3XSj+UW5LTLHZ/JnsUbeZH2LXAKzeDZ73TbW5RtmI+yR79H3jOfX
9V+Z2WPfdcPj95kt+WNmKX5ZfhHl+XZe0OzOq5qn3L8/rkUpvtR6LrMDf9Js
EGeB/Coq8gP8frNPvE/x77h/jHxJ3y72VJcSz0j8frMG1sqbXbc1nn/M5jVw
U34Ze+UZ1r+Wc2AEL43TugP8cSzjDfG2biy/LLePdxdbdDOxUJ8TI3VlcEbX
A+N0V3hq/D2xVTcLPdEL76A3+qAv3sV7GO++q67vgOzYFmdnnKtxjlr7Q9cR
ObA9zkks0ufCKF1ZnI1zNc5R3Z+8U7z72KHbFn9zzOE1MVe3mOfGaF4O53QH
45zAct4I/XWT+DW5c+wXTvGaWCfvtL5dLo25vBbm6ZbwPBjDy+OKXBc75PPW
D8WeYwXPbR87xv7It83XUEl3kD9g9o3z3D2Tzeu6wrou8d6azeKsM3PHHsq1
UIav53nNzvwp80f374i1eK/4vPg7m+1iz83a/JbcGA/xffxesxef796lZl6M
jXc0zsm4Tr5q1sNO+YLrfo3Pw0reGHfkJjgkD7Q+Rb4hd0WeeG54bWyQf7K+
Uy4bn8nrYIFuGc+HcbwCLsYZjam6m/Gex2/FrjgzsVyfH+N1FeOciDM2zlTd
Ld4d+bA7ziSs0BfABF2leIfjjI0zVfdXvAfIjz1xBsX/7fqCmKirHHsbZ22c
rbq/eQ8UiOeR18HG+LzYM/lp83+Zbhz0
               "]], 
              LineBox[CompressedData["
1:eJwV0klIVXEcR/H/K4I0aBGE8/BoEYTNWVlaUSttgFzZQEa00EVFEERZDlub
E5rVxlWDVjbg1LSonWb1bFCrba2aByv73MXh9z3nvoeXh/FN20q3xkIICUxN
DuFyUgjFaBkbQjtPxTE+B5+0ejRqw3wXUvBca0WHnobjWj4+a/vQpP3hu5GK
F1qPNg1XeAmua508HSf4XHzRBnkh2nkZ9mvN/K9dhTR84MV4bCc877Wn4ypf
jl92GRL2Dc+77Ayc5EnjQqiw50Xv665GT/Se+k77q88PuUWYonV4NsHdztfY
I+4GzNYGeK5bw5e6B3z3rP1Pn8T3uGPczVq+m84/2iXI40/4RHdH9Pfcft9/
as/AZH7N8/HuFr7C/h29A/rtTL3Kvuk73W4mTunJeqU9P/o93VL02t987q29
CJ18LYLPlvNB+6Dn5+wRey8y8FLr02aiha9Em3aPZ+E0L8B37R1fjC6+Doe0
8zygOnpfvNKe8Vlo5atwS7vPs3GGL8AP7TAuaDHUaFl4rd3GAy0HjdpC/NSO
4KI2CrVaNt5od/BQy0WTVhj9f2hHcUkbjTotBwPaXTzS4mjWiqLfXXvPl6Cb
r0fMb7eRD9lxu9Ze5jb47H/XSncY
               "]]}, Annotation[#, "Charting`Private`Tag$423206#5"]& ], {
             Directive[{
               Opacity[0.2], 
               Hue[0.67, 0.6, 0.6]}], 
             LineBox[{322, 323, 321}], 
             LineBox[{843, 844, 842}], 
             LineBox[{1460, 1461, 1459}], 
             LineBox[{2144, 2145, 2143}], 
             LineBox[{2885, 2886, 2884}]}}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"True Dynamics \"", TraditionalForm], 
         PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1b\"", "\"u1b\"", "\"x1b\"", "\"\[Theta]dot1b\"", 
           "\"xdot1b\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, GridBoxItemSize -> 
                 {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
2HgUE9M5mbfwQ6hybiQW24/74feqEbevQHvXq1qjq8GI1Z9qRpacA3kzKsRX
qlRUtflsV43EAsjsUb4+cYaKcq+Vk1W3LoHR/KM+tem9CDx80RagQYZ/XySJ
vDHG5vN0ikPgbzJkkzKLF8XqhwKDnaGL5yjwut164Rq2/vg0Vuof/aHAcAUd
Tw5s/i/4ptyymRCC+rtyOYsE2WGFnL05q4Un2LKLnP7qEQXdvVHgpFtWDExO
2iv1uD9H/RuTVWU76sD1a48bf73MQoFRQpIyHsNgnp5/+bNiK/KpGxGULBkH
5+SNRuIrOpGQ+tKhBecp0KW45tEZ14MyM5b5ku7MgKF5dkfub71I/9N2y8yg
OfD72i8ltotUZPFq18ZTfguA9ViC56ZjVKTvcueg2P0l0Jo6WS7s3ot0J9u7
r0XQgPTwE+VtX7oRxVbtq0UIHVi67HEcHWpDIZEmrA4Za6A12FSg4FEjsvse
+OjODSz/h/dJaIWUop0ifvNGnbyQb/zRY7twVmhoH6NAucUHN5BN82xvssHP
RdKPpfv5oN+9hzveMBMh8v2p9OI6GcorHz+7aEuE5xbmQq4Mk2GxxKfmOWz/
1g0ZTp4zp0A6T6tOEzafxaWZVixTFHho4dujSuznJO2xpgYnfth6gVC7AXu/
27Vbmk2z/PDoobY/g8lEuOBA/qzgLgQ3za5++MfKDh3Ynt53eP8JBO37Q3s2
7oImvWzHjE9XA0MN1xvTR5LRubyJcs34UWBV1krwj2lHtSVDRmfaJwAx7UWu
eHI3ep22k/m+wzSoSdF2ksLy9bdlfw4tz1nAlh7wVVOYisrMWwI0A+eBZ9ho
K68hFUUdvUvr9VwE7tIXf+TO9CKe1Z36VP9lkGuyyXhfVQ+y6imQ4gtbAY2x
fJTzIZ0o+2Sg/PG4VWAcLJHw+tFf1FMZfiE7iQ8eX7pfcSefDb7jPn05eCcZ
Rr5R/34fEGEzD4yCb8nw7vXKZxvCsPxz1THXcw8Fnin8vqUU28+ivgpvij5Q
4M3Cflt/bH94GaY1ystj9ZKCgzsf9rrFNoXlByVCcJY+9tiAlx0+2EKkzsQn
gtW6jW/HLK+hz/YRma0by0GBQtIBN7d41OYW/Fpxfgo8kvM6+nq2B+XrKoc6
L84A/o38LXdne1EI531XD4550FLj+CwCG7/X2E/PZxsWwbr0KiV3GxVlK1VX
MDMvA/P7uaESkr1IevDIhOEGMuRXGQ1+v5MIa7R8R6y8yVDpk0H9/EMiHJTI
fjPORoFf3DlIDS+xejy3St03gAKPSyK7Zmw8ojwZIq95+WHV7vRr+7H9nsQk
7Gvl8wUUhIrZP3QMQGWxdX7CbHMg6LKf6oUTVEQrORgtyL4Aet7diVa9QEWZ
T7Y6ydEXQZdcen1lUS8SPaxbXKRMhn8EVATb9Ymwt3lZjb+SDOdOd+b+wOIN
JeRADd9pCjQ+euKVE3Y99UvxK3O1FFh7OPdkF3Y/O+3LtiUNCMGhRzuvuwiw
w0i4kD4b/AKcUh2zGWtRQzPGZ6YFfs4Bnbp7VpxXqOjuSVcV63Is/y5Pb8+S
oSJVS8nwhw5kaF+1x2OTK5bvQpuExJbIUNV8UtsJW9+mv/le33ahQN6Pmu+P
Y+t/aiTjVB2BHw5VRzVYY/Hnic9fwp0XOUDtwomnblaPkMrPj9UKpbMg/O8/
6od9VGTMz8b3qXoeHPqlYbR0mYquzr6elMolQ0VhWgk/Vk/XzOlAjcMUmJxT
vvkx9nO2zei51kIKpCVRBuOw8WVSno+PuX0Atd7vy9652CKJglSmfs15oELk
r4zC4vt52T6oF0GGz+NyCfEBWLyOfTCfEE2BLmkTH15in1e3nztF1JoDLKNb
+g5oUlGknenOB+oL4OCpoacTp6nILF8vdv0vGXYYOp/ago3XZA+fboceBcYI
vvsTjo2v45heCk83BTaLf65Xxsbv9Soo/dCiENQ89DCUsJkdfndJT5KwuAN+
1+d3DIXOfQsSvfZL7FgxCHQUPLquEIFaAiZ2v3xdB+S1JjYlCmSh2ENa51cM
hoHlsEZzIk8rMpkO6IuMHwcvfaWHbN91ouKEU6NnLaaAlfX3rqaIHsTz1S4x
1XgGdH9Dke9ye9H0Rr7KP+5zgLBgsU8MW09mn+oOfnVeAOvJHQ9OACrihKon
T9/G4qv3pUrfx71IhSD7NcmHBvZplrgJt3SjArkSx6sedDARGkZW29yOorY8
e5oduwb+bPMNu1nRiPhSqLIJBgRoeLxEdfxAGbJy1i/e2soLWTUWOm89YYVz
W38d2HKdD1rMpLj+MmKDb4Q4XNR6+OAW+yuct9fYoPC5+SRDIzKUjGf7oGJN
hPRNHtLm/WSYZddr0IPN75jNPhbiTQoc13d1Y8LmV4Em51Q/RoHrGoVHE7H5
NWut4R2254d+SIiQgeW797qhaxGT/FDLwXvIHIuvxhYJXHXOWH47HTysisVX
aQtgIJ+RCeT0E6VPad5DREBWlUVVoGD6vMJX3XfoxqUd40IPRsHvF05/Olza
UUqfn2TBlwnw4OXBAb4n3UiVzS6n4cY02Hjy3WaZQ71o+0bCa23bWYCCVdl9
N1ORUeHPITu3eWBsr8n2CYsvzy+I7NW3WwT0jAYYstSLysoWb7G6LAPHG2mv
BJp7kME0J+tlrxXw+KGxt1Z2JzJgZR3fF7IK3v7LsbQr+otcHErPF8TzwX/j
u6pvZ7HBF5a7NJOFyTCFtiOW5xg2Hy0WzKwJZGi881R/QAgR7nVauRgshu0/
vjiBLVg9f5STLe9eMgUOCm1t/y++zoXLdBL28cMamb3yddj+qect0d3yTQim
0j89y8HOn9PtpnF33ycAxT2GBx89uoJq9h1hT/UoA7URZxPcLOLQo6a282ED
U+ABZ+fS85EeJGiSL+IxOAMGBy59MPjXi/Zcv/M3cWUOHI6kJ0xg50kPJpdM
9rkFQJio7FHYgeV35tim3dNL4H2Hk7yGAjZ/ykK999b5IN9LkcvNwkQoQc64
uN+TDPkOd7u0emL138UpBxIzBZqPZvi5Yc+XfPyVEXhMgXtDrOEYNp4ItX2S
llz8kE159MYqtj6Mb/w0lQ7IB82EFG+tKD8k/v60kPjCLGBRHVkcUaKiZ4JS
S8eX54GLdbqdHFZvpCVUvH03vgioIsWuTOW9iDf8QNbf42Ro9v39nd5LRAhj
dn5qKyHD8JvTruvYfJYkF5iLnqRA5avKijlYfL3Z7sCTXk2BubTNIj+w+3li
puMCeoXg2P4vMc3Y+cmjNENyMf4ZeOhD52/7DVBQFjx/vHAOnNfiiKjA4pv9
FXFHas4CMN6zfdJ/PxUlyunQ1Wyx8cdP5b69R4SnUw1z5ebIkMR8dSQb2w+e
lwYyxe5i+2Gv0qAxtv5NReXOx9ApkO2F7SOIjV914HH3vtfZ4GifTcGGJi+U
8FfMQOnzLEiMTqNG7KWiJcuVO3+/zIMNfq39x7D4XlBQfmXqExk68PbdmcY+
78zd3qknT4H7X93c+9/6+D1beDM8nwJH4n5qR2LjE/8znWrjkwqcWYMfOl6+
jUq4Y6+Rjs6DB73u7hFYfE2f5/iwNYwMX19NSWn0I8Jk8Qukq5EUuE/jV3AS
9vlkd6s/XEpz4FXVoooHFk/3let7JSkuAN6aM0XeWLwt9/QkljeSYRzzgZkU
7HlzKUdPj+hg54MGRdtK7P4WSySKqtsokCdgzX8XNv7hsC2khhkhuKAZOGss
hOWz8FMn6MF+4EIEz9oCyx70zVCSI/D1HNCo3tpbip2/Ezqsp7XGyXC+Senx
f/VbzvXAtudWFGj51O/Ae+z7pMj9e8Wjsf0rc8BHA1u/9zQEZe+nkuGRYg4Z
C+z+NxJuBLNkUqDb6nRwIPYz6coHcfsXb4Fzir4Lbe4Gmsvz3Xp56zwQZ+dX
48Pmo1NuQb42mALN0q9alGDvv/XsyqKQ0Bzgqqq9GKRMRddtlY9NCy2A3c1M
8bLnqegRd33H+R/Y+G+5ezzE6gmZ37WDRxsocK5D7+vsf/mt6JjClNsr8Cev
ay9l43l0haT/bKp9DgwlBTpIYee3f05n7vPTsfjpteuiKDY+DQ3o98mdAkVV
NS6JYOMrL+bLDmydBzd9/+wPxM7X9L13H98qIEMdz3YdcazeejkkqCT6nQIF
Qp+PfMCuF3orJ7HIYB7sd91rchcbj73Qx57hWAo8e9PI4Sn2OnFaRkGpgwzl
3tVa38WuJ/huTefVihC8XT/ZnYDluzyipIiNxTXwwSjVdiK66dv+9RvzAlMI
PJ/r5LGPeIYatPiifrnXAcK1Q+yPmz+jlMemN6gaw4BfqpAUSG9Bv5gMqmtD
x0FY9D94IrITRZwbL3U1mQLVHVmxqqE9qBh+tJLWmwGXj5Qc6vvci07IcS6M
3J0DVZeXrHZqU5Hpsd3nFu4sgOltYc4VkIoGE2U1W68vAfJPUafdgb2ogPhX
otKdBrYIlh1yHupGXHyEuqa7dHCsjniiaH87em0o/fdS5BqIOCV4mj7UiG68
4t5YoEeAisoE4m+fMhQm9v0t7Q8vzBgzUOjyY4XQfnD/9mtYvNbl4FoxYINb
1NzsL3bxwQapmGANOhus/cRuAK6SocSzDJfe20TYsE15xYZKhnd2iRj9wuZv
KTMqpN+EAsfM8uU3Y+vdln96OW8EW59Oe7qeYs+vKkYpc+YOP3Ss3LHpMbY/
VM4n6Tv944fUAaMfEli+47tp8TXGSQj22gQ6TG1kh/5RkdXP9meCYd+7PBGs
TogSe2uK/34VoNhe83vY9xZZJymtr1uPAiZFDXN7s3YkMHd503TKBLjhP6c6
5d6NhLIFQtcMpgFf5HBnwv5e9DPwqGnjrVlQ/GWnN1mQit4PVgj4OMyD2mJp
xWks30V03D35zGIR9J63ibdc6UWxElTrqDvLwFD18cu77T2ofjnH0dVlBTwI
5HEUruxEaUMn1VMfrwL90iz/uLa/qKyy/VxRLB8ETnF6/ZlskOdFxMnsbWT4
NJxj7JISEfYd9cgbjiXDF1KZ+8uDiZD5EdoZsYMCW0oW8tWw+Kx+3k754lsK
THPJZvtvf8qm/7s+JM0Pm85Nf87A4pkvZwDz8FchOHrYlekmlu8+HCM/OJgR
D+z6xc/YVOmhPyFPcsKOlAG+1td62m9jkd7Dh5KFnVNA/MPXSN/+HlQxMDu0
3jkDnsnOlR8f7UV3n1iy5s3OAaqTf3QQFi/cg2qrVMcXgL3HrSumYlSkYubf
nj+8BI5JvnpWdqQXRdr6tXmv8kH12T0zA9uIsOVeKZHiQYbnHd5MlT7Azgte
LMNbvbH65ofzwUXs/n9dn0w7z8EP30lv3tyPrYev4WJNQRz5gPPwvaypTF/U
tM+7592/WaCj6l226wgV9SiL77kwPQ9yfXSjBLB491F627fe/kXwc0uDS3BV
LwpECR/7j2L19GNP0Wu6RDhJOGxWVIzVE7rnV8Ow+YvKfnBojzIFzh8+wP8H
y292wh3RgZUUOPmE2fa/+AWvb97N1S0Eyd5Doj5Yfpvy4Rxyef8U7FD1OFX+
8whq6VR6oJ09BxavVJRQsPxm1+/6ZHv6Anh5PUvYVJ6KdCLMPklak2GLU0CO
pRMRCueKPj48Q4YHRbK//sTWf1DUuaMEBwq8RVSNscPWe+zRqUZvGgVOJ78Q
3IuNP4G/81yYcDZY0IqQq+D2QtpG13YWpc6CzEu32F0lsfNJxHzs6Kd54Etp
i/iN5TdL4Tbuxgxs/VS8k7qMff7c1riPRvsp0EsyuHYBWw8dh3ZP2OZS4Kfq
EvtwbHxdh+L9ZQNSAGk7uvzlhgXiPhIVsl1+Hmi7pm33xuKf0RVRk7VgLL8t
J1MHfLHzh3lBxOEICmRWFSP8Fy/1mJNjw/bPgdmxoVxeNWw9TOpk5MktAAtW
XuNvWth5qu9ZUXI9ln8M1d6ZY/u3/6xx8ZQ2Bdqc1fhGxe6PhTX89LsWCgxt
6zgqhI3/9ZPevLgpIcgra8/OjeU3d/71/PV4b5AycDrxJJMo4vATU4qJmAO5
20+5j2L1jMuIXLHOKBmGVgCNRWw+S5JmTR0sKXDisjb1G/Z9zse7DA6HY+vj
5FrzZ2y97k7b22eUTIbc0gOP87HzOd/JH4K9aRS4neIsE4CNp+zLlQ0HXicB
VWeXPS5a15Ey1UvzNnkecDha3GvB9vuo47VvqU8oUA3bhv/VP5TNz9GrTXPg
un7hJWxXoPSoo1YsvAtA90Fp3wksHh9wGHh6oJoMq5d+Wkli+U2J77C9UB0F
5keF5QxjnxfzfDlt7/MSLOno0r5XaqJ3CjolG5rmwCmrktvx2PMse8SjuY1G
hvsdxB+excanF5TKG+JGgY3lt8VksfHxjXH2xdTPg+lMuocatv4+hvorqeeT
ocXNjRVx2PN+J/WwjP6NAjUkHkW/xa7XEZrRUKczD0wKUj48wZ7vg6v8VuWv
sfVhEab0HHs9T1dlZFsbGf4cv6esiV3vZ3w5wXJZCEKgoHwBy2/PDvUbcoU4
g6osQjB9MxvateGLkckgGd4cubDvH/Z+nvCGfKNH82BLSMUzM2y+ZKtjpKNT
KXDTGbGL/9XjbYecUsI2zAOtuep4Nex1Vtr+xht+FPiFS3a9G3s97Ag3fbEM
O2/fMjC1wM73JOaL1k4vnoOaJqXX3YonEQhQE5UqmwOqGvwutvrYfnsdNSS5
QIa3qm9Uvvjv+WdebM0pwJ6/wcHaaOz7nPoT5RZV5kFj2a7cV9h4o3uHPB9E
UeCKn0ll7NP/fn9idZHaTIafie4P+rH1mbEpqHTJ7QkgmE3fZdbah2p+p+w8
NUGGucPNPuPY93cNj9B53mDryTa5pxmrP5YKl5glPlNg9k6b0CDs+1KCg8ZP
imH1RurgmjJ2vbp/QalToRQo12w9/gV7nbPHyLSzbw6wEm94vsc+b/FxU/D8
KhlezHQ3m8KuH5SUnnGyFNsfIlYN//37qcrRr3ff35gHB78N9uhg32farKLH
mUCB29RtdEKw1/WDN3te7iLD/Hu/vkdh93fjw+G3tatCkCsw1moGe17/e574
3+sR/r8/FKh3VsA5B/sZ9wL9DQquysJMEPcCWzwkmh5J0ADuBbx+WD4IrpkG
uBeY2HHF8VXrAMC9QOnfHTblFs0A9wJjN2iV2+8lAdwLcNe7c3dElzG8QJk2
tye3dBPDCyx/eN2+wa2d4QW2ONdslcrrYXiBMZczBDvJfoYX0NkkcP03xzDD
C+x6cuKdU884wwtsSPUyzHo9/X9eYEhBWkljnuEFztpwabTKLzO8wO6PC/f3
dawwvECV/y/eSzkrCPcCF0pCL+wMWUC4F1CUlSQsXJxAuBfYN6rh92vqL8K9
gB7FjERdq2B4gXy3OhanxH6GF3AvVqTXvJ9meIHdp92aLIMXGF5AjJtiKmG+
zPACdhMHU/0+0BheYO+j2kp5TxrDC7h5Et86HlgGuBfIOVjnyE1fALgX+CnD
uZlLbg7gXsBO930kq8EUwL2AOvu7h5pCwwD3As+MN7JLVXYA3AsIykec+V2U
DXAvUH6VBr7cbkC4F4AG+nw3kgYR7gXULM+3lY5MI9wL7Jt2GIopXkK4F6h4
teh25hqhGPcC9ON6u4vbmwHuBWK1pWut0uoA7gUsCrdcyxCsBrgXeHRI5CGl
pATgXsA9aJthuUIBwL1A/51T54IefQK4F/A/tyNsy58kgHsB7enfpkNyYQD3
AnBxALwrt0K4F1BvS/EZC3qOcC+g0vQn+aP8GsB9wO2lE0+e2Y0D1sVtEywH
O8Bcz4+eutlucOVjxrqYFBUE7K9VWwupAARPe/kpMAiygttTc559YngC1RR9
4pLab4YnaJF6HHybvYXhBwoqFr7/M/0/P1Bx4k6WxOIAww9cKXQ6wm8yyvAD
DXevfHnxa5LhB9offgIT12cZfmCnnwF75tVFhh8IuFbtXB1DY/gBi9XN8zx6
dBRdYp9AbmLC6utiJZOSZUQJmPy73MoMDz/jGUlemEHNS95+TjRW6LrHrSTM
YBxQNXOPBzARobljj4ur4xwgqKvPCK4S4dhu6sxLuSWg+vHPni8EEvw46zSc
q0IDdEUZ4sBGDtgVmZks84UGJCa0nr3i5ISLGl0Rm5eXgRvJPM50KxfsRGZB
e+WXQGd9b2qKMDeMfTe4ovRhHmR/F7/mLLYJfrOS8GM3mQHr4y+uDVN44NGR
0paUsHGAewatlCCO8RQ6wj1DUHXR7ra3LQD3DHqtX6e9djQC3DP4v9Uc1tlQ
C3DP0FnFNfKnohzgnqHQNKQz4RkCA3sHszM/C0Ca6GB2fXIOcD9EddGVE4Tx
2+Y/73v1Aby9a+jB9FkQSujaLD869xqwVyr9dVQQgoRnn0uMEp0B7iGKXf/9
OjEbgHAP4cjGmUreToC4f+i5Z61yamYSiJ/cf1lPpQ0YNvh0pfyhgu5/Tb7v
t/YCN8VD38lSdWC3rlW498kBUHFzUeN5bxjDS5R1vrcYkapheInB4lcqOlJ/
GD4ioNdS9kvg//kIvufrLFzEAYaPEPwhbZMlPcLwEaHeGkPw9ATDR1h+En06
6DbD8BE/TmwYb9FbYPiI5NjUGNGlZYaPuC5Fjb2vREd+3/666IcxwdfP71ON
+mloNFVz4Hs0M5w7Mvpm4Occ6qqnr9nmssIvdN2gnU+HQaO6+NjGEjYoUXfx
SofILPDSejra+I0IfdwWHr+1XgRv7lVESBexwyM7rpTG9C0DFQm+D+0VJFh4
Ay11fqWBM0l/32tUYevt9s2JKlUakK2oZdJp4YRLR5M1CQVLwOXzcZXNPVyw
um/8XJr+ApCx3GMd180N2csrd/ScmwUm7/Ywu49ugqojnHu8P04A3Gu8JFzx
/5BBQ7jXeLqR/lPPqQngXkPtz907LaK/Ae41dB0F4lRvVQLca3x3ST9ucOw7
6DCXm14MF4Ca5zpMP/fkAaX5lwZHeQWh4ZYCnWdKGaAh0nyzapggVKeM5adY
JoD39yH3EkUI1l3rs/PofAxw7xG2kk/Ny/RCw++Jj7P2dAHDE4Lh2X5toPF2
oEuMYh/wtUu7LrJaAFpTnZsMjw2B6vB9WcyDRQz/4ag+nSmzVs/wGP6p6bZL
F5ZQWywLsXMTAQqLmm6ZUVhBPpP0z1LcTNBh9n2agRQdfazgqPklyAwPfSck
JJ9ZQj9FOHjcT7BBlu2ZjqT5STBzRj2MU5kI3S7O/NsYMg+8VNeXrx5lhyoP
Z2a0WpfAYO9gwSlVEnQtfFXj600DuRrqtyZUOaD+B5gUnUQDLIrF9/9pc8Kf
Zt4xDTHLoPIc4bizMRecE/9NMotdBCrTj3kVjbhh1M/fWV7YORX3IWOzVIF7
aWsI9yHnfa7umz78F+D+I3Ofm07AtacI9x9aVnFJHLEEiHsPIP/pdHv3FJC3
/Mqxrt4K+sJKE8wv9oM3IeY1NhE94Cuv8eqfogZQcGJY+Wx5P7hQxNzkPOYL
cB9Csk15pORQyfAhQRHlZo77mhkeJPAz5R0Q/T8PorhvQKc6sp/hQY6dHbo1
9XKY4UFEbke9qAn9x/AgJ7jCeEJIMwwPolIvdrKybp7hQVLS5SPcXy4zPEjy
i3R/TTIdPSgM7HezZYJ7Ve476F1eQbpKS2O77jNDDtFus8LMeXTjxJcCqwhW
2Bxfs64QOwh+nm5XVn3DBu+093ICyxkAa3MGP8UR4ekW31fWhEVQf/WEltkr
dphnq1gtnroMBuJ86HrJJHiTcOvt7lwaMPaMyRV9xwHv0zdwQ1MaIIozZVXl
csKAN2/HuJaWQMUbq5D6Yi7IqR8S+OPDAhgtTHHIKuKG3rPERJnvsyAsKDGx
vmYTzNw8cUooaxLgPkXXVar5X+4ywn3K3O2xgh2dhGLcp9QL9LzYs7sZ4D5l
fe1xlOD2OoD7FAuXwsmRo1UA9ym7D3bPFdO/g7+PL4Vu9RaAPCJfSiHbF/Cy
yelHOpMgTP/5r1kiOBMM77Exv+UpCCkn55UfbEkEtEulkkobheDUvsNkyPME
4L6lh0X9nkiJM1qsCz9iKNsJZFwWprkUOkEkx/ZCk09UcC/StdZt6juwjpjz
3v1tELRJxWXQOvIY3qUu5pLRnz91DH+iVql6fUPrIuo423isrGMd3G2y1Q/s
oyHOQEPT6QkCrOsw0TuvQUeJZd8OTs8zwb+NOu46/MtIO6jyh8s2NihuMudh
LDsBRrXWBzV3EKHZwTRhfpZ5ACvEFo5sY4cTx42q9PyXAH+lsb3nThIU3sz7
QMeMBq58L8i13MUBtdaZODZ9ogEBsq9fmSwn3Mvy77BP7TKI/yg/8e8YF6zK
C4/0Gl0EYb1ZRlPHuSF/wiipWXse4B7mdrjuzezUVYR7GJ3G212x438B7l0y
b5ddTjIPQdvQ1soHmQR4hDXIcF6bjsKKxbkOfWaCvstdA/xGNNSmYRNR2csG
Q+JM3qn8mgXF1dYT851EGMNzcIDUsAgcn57rmulih76ShN5iARqIy4y7YjJI
giItpyYaC2lAqZo3zmGUA+7vfZo+JUoDuGe5rbn3TunNVlARGTd9eT8BSkqk
nPEMW0F03RgmUxnsPJBEs2NbXkG5VfrGH48ww5sD6rafHRZRcUnbqocBO5yn
NhoEii2DPLotC6cZCb6eiY7wi6YBckMz2dGUA0qsfUiafkYDuF8ZMDmyYJi9
jhg+ZakjUNjjGcJ9ijxz5bRKFwHiHmX27uLufN1poOROMLv4swXIX37zR5d/
ALB0y1n/1u4BNyRPe5rzNAGW7HebD/j2g+xRTYEPnNEA9yumchtN3EkVDL/C
BxyNO9ObGF5FiXv/dNBYD8OrqD9Wlki81s/wKilMgpVaOsMMr7LFhCly++F/
DK+yZKHacKZxmuFVbMYXesWD5xleJeTwYUEv82WGV7l56PjyB2w+XY+abgky
YoL6bz+cW/VfQYHM5ycvWzFD0lRs6QXRBZR094XQbW9WWHDO8mxRwgBQrzxk
czOcDc5q1ugsk2aAKHdVv2gYEQb4q0SXVi4Ai3Nuu70D2WGomfTnzQHLILf9
+NuIFyTotONl4D1s/Q5Zex3jfM4B2xvcnp5xoIG5hmgOlnecUOlJbkMu/zL4
F/0oW+YTF7zoe/KPetMCqDIbcSr6yA13t4pocizPghTP63fpBZugWKEEVWzL
FMD9DGu12Zjr0WWE+5lDlsdussQSinE/c6l3Y7K+VzPA/czl/TX0GtM6gPuZ
bbpaz3enVgHcz/Q96BL4YVwCmigWxjL3BeAUaeTDjpgvQL2sz3t4WQAGeVl0
7WH7BO5O3eFeuCcI5TZ5nZtcSAQ7S30OX10VhD37N13dmRMMcH9T/HjZKLzN
Aa31/X2W+akDdK2HjTx62gWWrg4aldhQgdiIN5uIUhnIZc+6yuE5CO7u2yz+
sDib4XHeMO+LyT1Rx/Axlhe6B1ujF9HUJcWLGl/XQbXrfXrddxrSvsxZpNtN
gLI+N2VnLtBR7MkoK+YBJih7UamKx3YZhZe8lXTmYIMbQ7VjNqr9A2Y/DPhu
8xKhX85kaHThHBBlOzSXwskOeZK3iOkYLYGPX6LPvOYlQcP3v7p0L9GA1Krj
tWR+Drh6aLP8hxxsfxMsuTK3c8LJdZ3hRqz+C75aqyYpzQUPWJt+V920BHJb
a7zPyHLDhl6NmlsP5gHudbbua02YlVhFuNfpf3uvJkW9BeAeB776nrl1fxAy
CfohQo0nQHKyRGnbaToKAmsqpxOYoMf4denDiTSkV12FBuvZoNGxPdlbXWZB
PMlz3PQXEQpVWiwfiF8EJJ/AL5t+sUOdb1IbBdeWgd24PnPsHxI0P2NdPoHF
o9LcOXHjVg7Im0bqN5OnAdzbvONPq/IuawV1Wxrco0UJkKS2f0OM6QqCO88a
VG5nggrT4lOrWD7/dPpARJEEM4QjCcrbehdR/IZ/K+Oa7DBc80URXF8C5ybf
d0tcIsHi1XybmlAa6OcKLczU5YDNR2Wyal7TAO5rWFbYVh/KrSPcz2jrujzl
swtHw7v31qc8JEDncsAzIUFHj45/Srf0ZIJFqWf22YmuICVLZjuNj+ywUrl9
8VzlMqCY/ri4OY8E47bubHmNne+anxbIHczjgAW101/4sOeHexrbA7fuJ29j
Kq4q/MgRskaATza93ilyDKtPmnZG3pAnwW+yvzRznWjA/zETt/RBDpgRtNPJ
6AMNtExb2W4tJkCPA9F/8y7RUUcs34Y/k+zw16X6+AQZGvh1dzBz5wIJSnZo
cYdj9X8hn40ZvwoBOgbNhFnmr6B8v38phONM8KJTjJtL6woSJclLTt4jQZWR
zMiyRBpQidxmdfAuB6wrrzQlB9IA7lu8el7dzfeNQLhvkW7Y3qSB3TfuWdhP
nRb3CZ0G3zaKPVsNbgE7AtyPyjgPAAU//uOEfT3gMKklreNrE0iZePw4yawf
cOqcF0v9Eg9w/6L1Okzk48Vyhn9JGpZ3/2bTxPAuIjFnd+rU9zC8y6VF/hwr
1X6Gd/FZr3wxLDvM8C4H6D9PB3D8Y3iXpWsn40fzphne5dqSpNRhq3mGd/kU
H/e85+wyw7uM/NseaD62ghZo2jmUS0zQlpYx1Ri3gpLMaFN2N5mhKG+wpdPl
BVQe6nt6xI0VbiFZi9fvHACsfv3MjoFsUP1nqYFw+zQIk62/qe+P1f9W/mk/
3y+A7NNCEbyP2GGz8B8xY5dlEOca7ZoVSoJaZ6yUk9Np4GOf/frDIA5Ym2Ug
MuBCA7ffD+UlxHBC07TingPiy4AgGFJ5NZULKuqiZJXhBZD3NcBZJYkbznMr
fk6mzAEF1+IO3qxNcHv89vG9SlMA9zeRD9nEl1eXEO5vnD/4Tb56QCjG/Y1Y
yPGzA2nNAPc3xKlc71X/OoD7m45fvfLKPVUA9zd7GisSToeVgIuG06cOOQtA
n4N8zQXDX4Bo4RaTjQsCcLdtvlia6idQoDt9/ZuDIKwj2IvKmCWBXNdb36yW
BaF2SukPD1IowP2OKHn8YKGJHXpkQys2cOwAF4T7erhVuoEEyw/ZWS0qOFHC
zr37Zjm4qhpe6XFtEBRf6PoiKZ3F8DxPFa4n0am/Gb6m/sie8Jv3FxGt9XbX
k/frwHjfj0b+TBqaOW5q6fuXAK9+Crz5VJeOtm14zPqkgwnefFe8UhW1jLI7
I/QXmNmgHLN824e6cSD+hJjiyk6EhDuFISei5kDYHuDYw8IOE4WdQqVPL4Gl
z4oFUuwk2H6CfFnpDFbvvKqTr+DigFLn0odD82jA1Nmgbhc/JzxpKCAXNbEM
WOS3zFaIcUG5pB1jF3csgZpLfyLddnND+XLexqGIeYB7H5uGt4TWYTrCvQ/P
njmNbc4tAPc88bJTMpvJTxCzo9hP8kvsfLOqfvezMh2R1kc7f0cxwYq7lgFW
ZTRECbh3aaGaDYoQmpxOnJkFPHv9rV5XEGEd24uxN76LQM9DYk9sOVa/BTln
U6aXwZXAnD+Fv0hQzcZcOAiLz/4yg0ONdRyQ32QyXekYDTxTOQZpGygwL1as
TH++FTQbWpUcFSJAg+/ekcfPriAq8S3rMj8T3N2o44lE6EiWTWSfmigz5DzW
o6UsuIR4xBfcxE9i9bZQy8j98SUQPax+Nu8MCXJdm6hvDaCB2g9jYb/PcMDH
Kds3NcXTAO5zdlvV+lIn1hDub6rSOc6dGH6KArm8PdpcCTC+UPB2jDAdEVZj
NGbuYec726figcdWkO+N+M6/iezwpfjWZKf8ZUBnkpBQzCBB+/KxNGI+Fo+J
H2ffp3NA95CBw7WGNIB7HO18daO/dELx7USWfLRAgNsKd5tpnKSjmtriDdNS
JFild+nQYVsasBMzpmrKcMBb14ZT9bH969ZSuuVsPgEuZhArqBfpSCIq0850
iB0WyUSsWu7Ezvd8Jx8rT2D5/G9b5GVsfr/rsn7MPUKAO62TTi0krSAD21OX
Dhxkgk6nJJobRlaQ9Yb6SA9bEqwoOZl7KQ7L/wquQNcaiw+C4v92YvkM9zE8
Qxe4rzBHoF9tB/4cv02AQVt+9iyx0tGv4711TnEkmLpQvnMBOzfjPuag8akD
vkWE4sH6jVWsP9fBZWuWmKUGGkq3y+YRGyJArY2KQ/vP0ZHKNcEn/ts5oNmD
Tbxe2Oe/vXV0zEwhwMOc7v3TZ+jI/xxdxrOLBAs3zXmzFtFA7NH5tOe7mKBq
hWg/PxsdMS9wOkQbkWDaaOLtK89pQA02ijsHEOC4g5LkkQPY+q6w9aR9I0Fj
vePf+gpoAPct5yLNXcOPMRXv/qN7zZCVCW6IySr+LU9HhzgoJSOVBJhbtMXX
QY+OBv4EdGxYI8FrUm193tjnm3iefzXxJMFntEpaUzIN4F5F8Zqr+AnSc4R7
le5ryXGnuZkg7lOSjPv2M6VNAy/N7NQG2xZgdyTh7YWUAXCm3e+tkHAPkA04
+HInXzOgPXH62qnXD+axzPct8g3APctu6R2BPotlDM9yybiqbulME8OvqB6Y
aDla1sPwK/eLMhwHD/Uz/MqOQ0vfdLYPM/yKrJWMzeT8OMOvXLYweqrxfprh
V4gPTpkrGcwz/Mqm9DeFI3CZ4Vd0mTLyRvpWUI5BJXOrNhOkCl7RQO9X0Geh
OnuPa8xQT5adq91hAeltX+tKuccKoy8/qZfr6wcDZl9r3XzZIOvVC682lE6D
qm+XxO76EKF4f/4XidcLwEB1qKbFgx0uqow+a7izDCKqqvpKnpCg5mGxgB1p
NMAdN9pzzJ8Dvv4X8IUfu+/dAtwhdi854YqMSabB3mVAaibXO7zlgm16u7Rl
ZxaA7OCVJZZ4bii67KF2feccoM1Phm3L2ARRoOCksOYUwD0N05hSu1r3EsI9
TdIH4tZpW0Ix7ml845ZHqsqaAe5pLDbelpR5VQdwT3O2IfP3v5UqgHuav2xo
TSy1BPARcr8oOQnAzwdO9X7iLgCciod+kecEICtLguPTm59AB+vnJ2/sBOF4
XEAjV2wSIDQ3M91dFIRT8s0WQzmhAPc4XpkjnRGqtkj185O/+3Q7wEmvYLHq
6G4A9Y+/4DhKBRonDLvylspBeu/D1dzzg4CacazS0eQzw+cQdj2BMs9/M7xM
9Px21adWi2h9K4u4zJt1UJB3MJkpmYZO7g8DcY0EeJemw+aE1X/tN1Yunm9h
gmmkkxxf0paRqhXnVM7af//vYXZ77vNxsMGq2+HhRiIcJp/fMvJ4DlTllR6g
E9jhiRrl/qmjSyA2g216moUE9/oqVD8+TQPE0bWYZnYOqJKQl2GOxceKA42f
eng4oeC6+qne2WWAYmH1cxEu2N5Ky1CTWgJNZMP4pzu5IZX/0EnB+HmA+51k
U/W2jips////fkcn7lW/fUgLwH2OV+3P3ebegeii2fk30s8JkLs//aPiCTqq
Mr6+NyKCCc5rsUkEN9HQnMVZ0bVyNsi2IXRi+6FZoP6Vc29+CTaeWznUT66L
gO66aHTrOzu0tVHtMB9dBuda++DPGhJkozb6nMDi6+iwcXXITw6oHXLSPxDS
AP774ReNz6utuNpAy+rhW5wUArwjazWvoLyC5Ol1Hbx8TNBBQbR7/y46+mf2
3J20jRn++Bv0nfPAElLPdlOCgB2Oc4xfnqYuATgg6PNAnQSjMs1SCn1poIS2
eaVLnQP6bPYvQG9oAPc3SRr5y7t+rSHc19g5ZK2uJz5F7YSMi7NOBMjl3MdO
2UxHyJDyIteBCT5fMtu9RXMFSV+7Q4mLY4dW0hUKHZnLYEpbL/z0BxJMALvv
7MDqC3qpePOt9xywlfomPtSEBnBvo6jzW2V5nFD8NVIupGWGAL3ZFNvs1OjI
riZUKX83CfrI/H114TZWnzgEnTGQ5IBHnuh4FGbQwI8fk1O3sgmQ58ijpRAd
LH9EeCbv7WOHYqn3PiRuo4H31+0ntUdJcMPY5+lYbH7L5hvO+R0kQKPY40Nt
0Svow3X7vVr7meCJ+RfUp9MriI8QX6t6mwR3n/33koadt4S9k1NvWnBAo3e5
t8Of0gDuX4RyUtT+omdI5JfxRz0z7LzC4fDKnkBHJUGbjj5+RYLONzaeLP5M
A7h/YfnqvrkkDatfyXFcKaXrgP+G2U3nGhpav9kzeLSPAH/K6Csf0sbyRfqp
+RebOaCjKr95bDYNbHoZp1GdRIC1/yoT/DXpyD1GKiqkjQS7S+yWNmD5a1J2
h0/6DiZY/sviSzoXHaXMtKdcv0KCVvmQHBtOAy/k12mhjwnQ1+mlV7YMHYny
x4ywf8Xyc6joqAaWfxh+xZIc9VKaqdi52uugEzMTHFdJE9mmSEd+ayCKuYwA
rdljXipi+attV74amUaCTU/OsVCw85obl+nMnvsk6Bgw+qTlLQ3gHqVFfdw6
sioCvZey3pT0jASlWhcHhDKxfK6p+MymnQD72+X/3MLqDeEzb6pzeTlgnDTR
9F0uDXzyXJynvSbAJpPyqGFVOjI96med1kCCFgHnWyqw50fMWi6SyCLBvHQx
pw5sv+O+xPB0ikAhJ1Px5syW3nc0LJ+UVXW0ADqSHHihqlBIwM6PRu5TWP1c
UkrZemCGBO+FfJ9cxe6/N9T60a2mdfAy1MVIt52GjDz8lUhjBJg3tIfWr0VH
Np9Px7z4iNUPicHHBM7TUcR6bekdKglOUuzdFrD7OeQM+cdKSNBs1M38NvZ9
uN8ofvjwUoUWU/GA4PBY3Q8CDD+gfuMWNn9Tflcd5pg44CNOAurFztu4B5FY
2FKVofUc/e9+/9/vwz1IaFRM/n7KOPqf/hHHcQ+yprSS6k0PZ3iQlc0f+Xw+
fWZ4kOqQr1n2mSUMD5IcY2u3aFbL8CDbqneKynU1MTyI1UfV3YXP2wDuQaQf
99d6KvYA3IO8nNIk1TVQAe5BhJ4X8fVN9wPcg7B+UrQ93TYIcA/yopI3c0Jh
GOAeJGjVQjKcZwTgHqQ+myzZYzQCcA9SEXLaT35yGOAeZPsNQqSp9xDAPciT
7+/Un630A9yDvLl4rcnZp5fRP+KfZO/pNyqtjP4Rl5Yk7p5SrWX0jzjy1P+O
jmkio3+Ej/QmNT1UgnAPwm4sFO74qhHhHsTHen3mqEUnwj2IbnxVXf0jKsI9
yIcz5MIkmwGEe5DW7fWRQfFDCPcg569uOPy+ZBjhHmS7h2ACF/MIwj3IpTKF
X1XnhhHuQUT3jFL/9gwi3IP8e6IZqxzRj3APIuw13d3S0otwDyJ6iuCwxacT
4R7E/1K/3KFTfxDuQTi3bz7V2/yL4UFk3OJStzcUMzzIphFX89TD7xgeJFgp
R19BPhLgHsS2ueLmR510gHsQp0+99CfOnxgeJGPVmmZ5OYfhQXT1R0Zv+hYw
PMjL/Y7cGWLFDA+i/8u+8XBcKcODeK91Lzhvq2R4kPeOyY470moYHkQ/3NjW
5s0vhgdJt6ddb5KpB7gHOT7k9MAbNALcgximXA70r3UEeP+I72kpbY0+bxk+
5Lei+LX7D78CvD9E/mW/8qTxPoD7jpVwo3nhuQGA+47ErKLDf54PAdx36MX5
xk58Hga471DR7OEXOTcCcN/B3VGnPHxiBOC+YwTyBm8wHAa470Did+7l3BoE
uO+o2tcW6nyjD+C+w8s9+fq4RRfAPYdtsv40zGpBuOcI3v2mVSanB+GeQ5Pr
ajYbuR/hnuMd3/yWnORBhHuOQ/GP/NvODiPcczx6Ss0yxtYf7jke7BuvPVU+
jHDP0RjGax2cPoRwzyE3qavxun4A4Z5j8KWqhYdaH8L7V5xZeL6juTYH4f0r
xizbx0yyPBHuPSIjcts0jyYD3HsMR/B7LJzOZHiPxeJL6UbyWQzv4Xfm/vql
6jyGx7jG3MhhdLgB4B7jS9ngxusHdQHen6LUTPxM4lwMwH3GI0WWKO7ZXID3
n3ALPjmhgM0v7iu4pj1vXL83AHBfoTsnVeF2dAjgvoJ6+vvGWudhgPsKM6+4
kzUKIwD3FbrkGFs53RGA+4qLF6zfDKQNA9xXWF9Pe9m3OghwX7Fu/TIl93A/
wH2FT/WKVvitHoB7iqvndohPH/iDcE8Rj6rOf3fqRrinCPRT8PK70IdwT5G7
dIX0k28Q4Z7C42YkVWttCOGeQnot/Hvs6DDCPYVrKVjeODaMcE8x6sjn7c0y
jHBPwbLnY4jKtUGEe4oSwqTTm+k+hPfHSJnXcQ6L+orw/hiX3/vMjti/RLi3
EDZIXMksTgC4t5CVHXjtcfozw1tY358+reaby/AQ2Zo2Bfmf6wHe/6LM+Gzi
n/rHAO9/oXZXwVtsYxrA+1mwmJDvttweBHg/C5sbW2P5R4YA3s8ix2TsCW1g
GOD9LKRcygRYDEcA3s+i49Sfaw7bRwDuJ87ffL9QsjQEcD9xvj/rgVnBAMD9
xB0N5bqp+1SGj/Da2tYY/aYX4T6CWD5lIVLZj3AfIeN1heWs9BDCfcS/+GIB
9dBhhPuIGe+GJ1tJIwj3EY87+ZMFng4j3EfcWpfxP3x2iNFfw5F89a3MmUyE
99cQJTMtDq55MvxElPbjB/aOHwDuJ54Py1+RbsgEeH8NuZ7E76eOZDM8RTjv
mkHK1waAe4pO0a16SpYKAO+nccDWwrF9fxTAfUXqtJGPUFU2wPtlrNP7uYW3
9gHcR/xaNFRcUBgAuI9w8hfZlM8xBHAfcXvZTET78jDAfYSkMPEKs/gIwH3E
Edt4VQeDEYD7iNDfAbLhdcMA9xFxPzYaT6sMAdxHfCnlqKx71Q9wHyE+aOxt
vNgDcA+Rf1qAtDbShHAPcePl5vNcDl0I9xBDc09//h6jItxDJKQIB54oGUC4
h6AOanDI1w8h3ENE11qPpbUMI9xD/KG+kru1NIxwD7H+xXjXjr3DCPcQb4y7
b79IGES4h7j3aFiFQ7Uf4f08lupchKsjvyG8n4dW7ZZHVdcTEO4lEosSlbN3
xgDcS9h/ZjY5JZMBcC/h8ywsdaj9E8NLlBkrVxwZz2F4hrlPT8bO2NUDvF9H
hgtqz4l7APB+HZsP3rGp2pMK8P4bD1bYgk3kBgHef0Nspm7UqHgI4P03XP/d
E/CoHQZ4/w2xl6wt/nojAO+/MfJhPrJw3wjA/YOMbsPlV9LDAPcPqq01gi58
gwD3D15HjipemaYyfINdsvVmX5lehPuGEE4nu1LbfoT7ho4T3/o5xgcR7hv8
3nYe0bUbRrhvED/atUeJOIJw3zB27zhY/DiMcN8wb959UMNziNEP5EY5G4vh
hiyE9wMxSTxQH35yH8M/cHDsU+d9mApw/xC2d80uLCAT4P1AKqYtN8hmZTE8
xOsFX/VQ1waA9/8wdImYyn1oBvD+HyUPy+a0Rd4AvJ9HYrRprUHkMMD7eSR2
s4S3qowAZrXkcxn7V0Dewf9H1pvHQ/n9f9zZKvsojEobSqkQbSrOSUKKhJQo
WZNIqSwpSSpJtmSLVMgWYVAprqyVbNmy78Ngxr5v3df38fid87kf9/1nD4yZ
6zrXOe+3nq/nO+rlyhP9IKzm+mPWgUXwKNdgfPUTBuYl3u0urThO7s+Il7hg
L3e7QZpBIF6C65OOmSe5Pg1sInSbZ/lgV9VLz5lGBiFTIDh16R8/fBV/LHy2
qY9AvpBsFUXJ/thYzFeUPo+VCeVPA8gH4l28qbrR/DlAvg//og8N5xcYgEO+
ptx19xwQsbp54t7FfrB2/+Nws10L4FHd1RVTK/oxT+G7i+Pf5yQGMWYy5yB6
kw/+tjkuwUPer6GRsmfLPPih4pfHWqk3GATiLVya3dQiBFMA8oXkXPVdHbQ5
HSD+Qvqit3ncYjVA/MWHZ8EgxlMYID/IBv+u1PWPXgLEY4wNdu2Ry6EB5P94
sszcb/10F0A8hejMtNTb1XSAeAqvG53/9oz3AsRTbLvdYWCszgCIp9irEHjy
9dp+gHiKvEuyEZ7k+YJ4ihOA+415BwMgnqLfn2d7rkUfQDyFcq5U3uGyHoB4
CmKz1KuHKp0A8RO22vymNkdrCcRPZG94bdTLaiUQP2EeIb/+y6cuAvETT9fz
sBzD6ATiJ9gb/UNPf+kjED9x5b1cnmwFg0D8RNqoy4+0RQaB+Im5Oa3TBsoM
AvETVzSydr7K7yUQP5Fsm/PT3q6HQH4SCVHj53X83wnkJ5lrlxbZ/yOGQHzF
MNuarZ+/hQPEV6QZWfdLlKYCxFf4HM57VJGQjvmKqoVLx6XfZmH+YUXuc+5V
p/4A5B8xeZJlIDPsApB/pMdvbWOVTjxAPhHVM+m2/9tfkE+EZSZ+Tz+5DyCf
CM3sqbLzdwZAPhEFk70haXr9APlElj80WJm1vx8gXqLnZu1MsxoDIF4ix0I+
Mu1wL0C8xCpdnxOOMt2Yh7hX0ZGfP9pBIB5i3lxn3+kjPQTiIdREL0hZlPYS
iIe4nn9d3duUQSAeIgzobizj6icQDzHpTrcK/MIgEA8h4TqRdCy0D/tNRM7r
xgHrTAL5TRxHtx/ecPoagXiJLqO4bddsEgDiJU7UNX5sv5wGkN/kR+IyTVdH
GuYn9MKubHY9Vw2Qz+SDxl3uQVtTgHwm5xmMW/5ebwDyk1T47HLRI/cj5CeZ
2bfEJ3O4H7RfPsGltGoeGF1It5471Q96ztlMV4suAu4b0rwcrxiYr1CdOCH6
XKmXQHxFfkf2q4erGQTiK7ITtjYKjTGII9Q9iaL9fPCksLLzRBeDOJ2zVTx3
mB92Mfvc1o30Ech/cqjHSt3kcAzmMR5HsyxMez8C5DeR/3BDSsT1KUD+kp92
TaIOowxgR9ztzxecA5uf6Cq8u9APps/J6A7yL4DTo0Hx61b3Y/7ix+r12dej
GISbVuskmzkf3Gyv+DmAu59oirbuOeTAD2WWKfyqfkD28//HZ8yrhsbdOfkB
IP9JQsYxK+7ZNIB4jdmqHX5JLdUA+U7MlvrCZRvVwWMj8aWgvBmg1jp69tvO
fhCe/MLxZM0cmI3lmfpwth/zGV3Tl0y2kddj3e3L55//4IPO0+19O8jrhXiN
OY8Gnh9uHwHym5wi7i4aXfMEKm2Vm/TKZoEVz2u3OKN+kB7pmLtUMQ/O1x55
uLC1H/MbijErPqt4MIjnW2LYGgEfNK43SEokPy/yn2T/c21u8koCyG9SkxW1
3O/ONdC1zsnf8dgscFgYja/X7AdbpDjCtpyeB9dGE+LPHSN/X7PsmifzvPAt
Q1lslNx/Ln9ZNhPNww8NqAzl1VXk+3+zPWO3/hy4Ve9ZGUSeJ7YO1AEZLz74
62NjkTf5fCDfSbJ/ltKtbymY97ids+gWtqEGIN4j9Uyp74D/hArymQT99U8F
h4MB4j8ehLd4yO2lAeQr0V6wvbSM3gUQv9HgMbCjkp0OEL/xaN0Ol9+9vQDx
Gy+8BQdoygyA+I3PrEsbUkT6AeI3xI9ahWqQ6wnxG7++v6ka6GMAxG98jAxT
y7rZBxC/YRhbFsfT0wMQvzH0zkMg1qwTIF5D+kywQ/hwDYF4DUUhrTNHklsJ
xGvIyG50M43qIhCv8bd1/4adD+kE4jUkbur48Kb0EYjX4PDMlXv+k0EgXiNJ
z0V88R+DQLzGvjcjzlvVGQTiNYpPHvLW+9NLIF7jZtXLxCsePQTyqTxwGv1M
OHwnkE9ljRCDWL0USyCeQyQmL8BkIRQgnoNttZw5KyAVIJ7jRrA0Y9Q/HfMc
WoavX62/m4V5i6Fz9Cc3Vf4A5EupZPGUG5x0AsiX4jYiM8S8/B4g/wnl4MZf
Rhy9APlPlHqtJWPe9AHkP5mqKJcr/MIAyH9icjqgwV23HyD/SeGC45bLh8h/
/x+f8TakgxakywCIzzh1XsDG6HQvQHyG7FKwS6h6N+YvTI9rJgXWdBCIv8jX
yNbXkOkhEH8hznhWtPNLL4H4C7vc9e/LDRkE4i/uBvhZ7OXsJxB/0TGmb+VN
MAjEX+zN27l/WUwf9rE83vxKwWlNFoF8LKcM3yatNnMmEJ+h/S9y1Lo2HiA+
I5weQks/mwaQj4Xdz6Hrkx4N8xqWwh8qBjWqAfKvHM3aeljmoRFA/pVTkLeK
dicaIJ/KxzPHtKPvMwDyqehovBUIONAPKlyiOu6xzwPzYQViJ3ne+qzr+VjM
tQhCs1/QXsYyMM+RnzgnrL2VrO//j+cYH67ZwMnNIBDPMeq4K9lliEF8HvI4
k9nBB090fAtb20der30KcoN9/FD1uGyF9VwfgXwtV2bS2Oke7/D/n+08sqfE
Jf8jQD4WT4u9FkJRTwDyrVRtO1lfPMgAm56cnqYvzYINQuwmg2Q913vl7g75
pXngP99dckmsH/MeVVFVzi4hDALmV3x2NuKDMyeDEifJ/VHXmRbQaM0Pf/9R
6wx4Sn79/3iQa+ILHildyQD5WkT4bdms6GkA8SExn1LOy5RVA+RnKZQXt19X
BcDBzaO8n1JmAN+Txzm3tpH78ze6dmDhHEhrWTTdSu7fiAdxyz6c/qyVQQSd
zFy+g+CDMsk5u60nGQTiQ9TSDTZuPPsRIB8L/3ue5ZfrPcBYXKys09dZwKdS
Wyh7rh+8SSkKO0rMA4FCwYTbO/oxL/J+ncY7KxcGoRcZXKSznw8yG2OShcjP
i3wtj6aVGkO4kgDysezl8T3dds4WhHRrRYXsmQUqG7X9hsj9X3jvmZu2R+aB
0DHWE03yfHDS29SyMMYLbwCeQaN5BtEWoB2rzM4PFztEZiTqGISOzRJxRnUO
CCsY9b8hzwPZ3pUpb9z4oF7y+2+M5f3Yz5I7YJVdZ5OC+RI9PTPmRoEagPwr
jX/ZVbi5pIFV21POdbFzoMhQezDAuJ/se7VNrVP5oJkFV+E28vcj3qTzsobD
0aVUYLJXRysvfBa8uJzKmWnQD5qeOmsd3MoHP2oZskuu6CeQb8WvYJaSNWkO
Rgxnt09sngfxBuvFw7X7wRLgMGd0ks/3tJqFLXk/Pk/HN0dtmgOj3zQ1t5Gf
J7tmUMHXlg/mF6ysZ5L9EPKtCK6WtilP+wCQX6WakcHw5zoFkiKOhK7ongPy
qX25XGT/jfiTDbPHbim++gh8ROdXybbOgqSeV+nM//09JTVdxUKTD04q5EB2
nn6CaalsKMTJB/cPXvmnsayf6G0wiOW3nAOHOK4n65Hv5/3MFuksXz44GH7c
eICjn0A8SmZ9E5egXA1APMrZvhjGcEStCvKnSB5caj706gXA/hR9s0nZ8QyA
/ChHftSEDTR3AcSXOAZdNDOZ6wGIL3mlE5nv29ELEF+SpufBeUaJARBfMlW2
0CBF1mOIL4m8duJKOHm+Ir5k1XyscCj5/CK+JG3dF7YQtz6A+BL+qtOv/w73
AMSX3Cy39qPe7ASIJ4nkYegGFtcQiCcxvLYUX/q0lUA8iUAh35aNAV0E4kkm
nW67X3ehE4gnef/p/q6a930E4km8FXo7Y4oZBOJJ4u8WN/Gxkevl/3gS3Snr
6HtaDALxJB3PfV3XNfYSiCfhUnTcct6nh0D+lqA3Zec63nwnkL8lN199/ElE
HIF4k0uTFdkdYqEA8SahtXJf7B1TAeJN1lKcedMepmPepLpuYeHzlSzMg/is
fL9Sat8fgPwsVwd2hNisvA2Qn2Xo/f1jvZNxAPlWdE2Mu4l5OkC+laljYcrw
VR9AvpWODd8mTLIZAPlWVjJVaAZkP4B8K38nRyp2KfcDxI/8GHGs1zdkAMSP
JESu5ww07gWIH7m0FLgtwKAb8yG7si/usy7qIBAfQkxpHUzd0EMgPkTBq0TU
Na2XQHzImtQYaWM9BoH4kDbnHl49cn0jPkQum6VzrYBBID6kL0nmfllCH/a/
BHgotnvczCKQ/+W+XcERriduBOJH3jRcqbzjHQ8QP1Lq4JZefCoNIP+LompM
zaIqDfMk2//4RMSCaoB8L+JdOVLjPw0B8r1Yrnz88XX2a4D8LTPEVZ4cNwZA
/hY+c/vXGfv6wbEH6jpv5uZAxXW3y3v0+0HrwmY+sLgADjwqnT+WyMC8CfGM
LS1YvJdAvMmxuwtiHzkYBOJNWMW6lS+YDOLm+fgdD1v4oNIOixhqP4O4NvHp
AHsPPzSR/7Z0518fgfww66ZWDZhtfgeQ/yWEoF09l/UYIL8Lm4LFtR4GWS8N
HFpynpoF9+tOF9wjz9MLjlvC9abmgaac8sLw2n7Mn2g43DzZF8Qg3t3ViFA4
wwc9m13dKeR+xdfdaJ1gTp6nfqJ/zj9nEIhPEZZXivmWnAyQH8bz5sNtX5vT
AOJV9g/EvOgvrAbIByNs6PNkpEwJCD9qXnU8bgaEa4i0QbLf+Vfk95X2dQ6c
XnRc+kOep4hPyfu3aVyqmUFof25qmc3hg4rn34mzphgE4lXkw2Lb/6p+BMj/
Qllb/H6U4gHKuP33rqTNgvPn4j6akf0aNdt+ufWnedD8zNYselc/5lfWzAvN
WtxiEJln+d9zK/LBeVn5lhRy/0d+mHsy1f7zhYkA+1+eT3wftrAB1zX2xm7b
OQu+7uFNuKLWD54pL3X4Ks2DNA8zr9Tj/aCBPzz30xAvfNeipDg1yyDCF27e
4Vvig5ZVAVwv/zKIbWWMkj6lOVBlvO/kS3K/D3j7wM/Ymbzfp74cfUCeZ8gH
o76XrXvgcArmXQhlzt4urhqAfC/ZlL2JJ9k2gZZeBUflyDkgdfjMBUHy/ipd
vrV3bxJ5/8pElG4tMLD/5biktlV9TyrYF37gtG7gLBg2ExT/TK7Xw8dGdkxu
5oPeY/t87pPnOfK7cPCdUFx90gzYmL4LFV07D+7qH4yt1OkHl+bdjsa08sJb
P/bsLhkn6x3joC45sTnQ1+Z+fpA8D8T8LYU1rPkgt/WJGHWyPkF+l4kAC16D
+x8A8rlwc5vs2vBTC0jEDHDKNM+BkmgdsXbyPEU8zJHH5VpbfD8Cyzv0Nd9r
Z0H54RLeU+R5KmMrs2mDGh90synqaCVfX2dT9v6yf7xwsSjohRTZP30/DJKj
jeeAwp9BDlfy+q7MfL3yujcfPOp9wCSfrOcRH0O5aMJeu7UGIF/LrgaFdra1
K8DvaS9tT985cGM+MmmAvJ7s3zqHbNeQ50fMwbyVZP+rLnl5RH/FHDgVzdd0
kvy8bVyGf79dIM9z4W7Kb/L9IB8L9/J7CoJKRzEfU0G/MLDG9iMQU82R7imc
BeHCy3lHyHpvpGNd94tDfFDdpDrcivz5W5zCXwq15oDckq/Y/+qtMpmA3/T7
fDDu94pASN4f5F/pm+ETlzwhB1wqlmzuy/BBzXqRZ9nk+ml7kVvLu30OBOw3
HT1H/ryB2M3Tf67xwXuJlwwekusb8SzEurdXjid8BGkZFL5I+iz4e/CwhTtZ
j1mPH7iQcJJcrzx15aL/e/5v20a52c0BGbOrXzeSr4d4GduylY+O76/5/9X3
/9/XR7zMzdQBamfmR4B5mdgTSZvpIXmIl5GM9CxZ71SN562olS7pG6h14Hkr
4dvjRTaK9eB5K7vfFrH1PKbjeSvdZ/M+6oz04Hkrs+nLqjM6urA/xUne6Ox+
nnbsTymoXFGhN1SP/SmhUlLD4jVl2J8i/zI++sOmdOxP4Rxu848/+BnzMrZG
01/vwD+YlxG+80R0it6GeZm9h7gTc/J7MS/DtVNcGnQPY16mOfzAitq2CczL
iJ26kChjNYt5Gdtn7c3cPIuYl7mdPiJpf2YJ8zL3/OrE5Z4tYl7Go5jhXnR0
HvtTnAZ3NN98NYP9KeG7zi44Zfw3byXoj/fQL41x7E8JFmRppBqPYn9KSkLr
zrDYYexP8dn4yiosn4X9KVpPK26ExzGxP2XBb5J1Rp+J/Slb9sy2n/RiYn/K
M181x5h/TOxP+WjIcfSENQv7U0orniUo2bCwP0U5TUzirT8T+1NO7fn21T90
ACBeZv+Gnws///YCxMuE6XIbuod3AsTLnLl45NgfzTrMy2RXdrek80ZgXkaA
nvynWy2UQLzMLLtvYWuYP+Zl7KK27V4pG4d5mTHv8XWqvimYl7EX3nHtU2w6
5mVyd7m+1ZWgYV4mXqPATqyAhnmZ49sTt+3IpWFepm5ybNpShYZ5mV37va+t
PpWBeRkegwiD1d8L8byVBbc1sWnqTXjeypn0EzP0+10E8qmM9eoOnFlNJ5BP
xSu+OE7nDp1APpW13BJBeoI92KeyN9SjTOx0J/apqOq6/rgi2Yz9JtyKmbtP
KExj/mVXd8lrZed5gPwmmZJPZiiTi4DdZe8X204O6JN8uL5QbgmIVjivGxrh
hN3CklGJjxfA4co1d5kTXHDObsO2IrIOQbzM8n974tZc/89/0iinHGqhOob9
JxXur1z/eI1g/wnlukOsZcgQ9p+8+fMhei2Vhf0nu9LOlFy/zMT+k1it25lT
pkzsP/GCslJ1uUzsP8ma4HlOV2KBVJ1yP70gCvwpfaZ5nysLDHd7LBWvFoJv
q3xSgzaygO3zsMKll0JwpP3aLbncQYDmxcT6PhavGmUAxNsc9B29//JGD0C8
TUTTYwHOTy3YrxIcc5retOsn5m2CV/yWOqYYTyDexsmhKtuF9xKBeJvIe2HS
judeY7/KD7WKW+t+JWK/ikRzXFm8VRr2q9z+pXl448MM7FdxcOK+LvyUhv0q
o5LLGq/U0LBfZXN7eKOUDw3zPKeqc4cv/snAPM+ZSoHBOLNMPG/mB7e9vGVA
PZ4302DNcYLbuZNAvpX11qtXusb3EMi3kt51OdstkE4g30ruEemjdmQ/hXwr
3nZ33I9u7sK+lcYgfXnPza3Yf7L9eMzgZZ4pzOfwzH0fdnObA8h/wv/wbp50
4CLINt1/aCCSA5aNW2jH6y8Bo68GjA8pnPApZeDp71WLwLpz0F02mwt6imxf
x4iew36U+aDt/BYCk9iPsmr5xhuG+WPYj8Jx1u5c3OAI9qN0Plx2kCo6jP0o
uZHLl5otWdiPQpMWrajxYGI/ir7kvL2GIRP7Ud4dlZXSj2ZiP0rnVKJrzXoW
eP8pu07jJgXuPCnh4HWTBQzTcv+JjlGgpXUOs+EEC6gzK00DnYSgIzgVpyLP
BGhejumERV5GdT9APFDUMq3igAw6QDyQ9u4DP5S5O7B/ZTZCsIReX4V5oIO3
dYClkTeBeKB5LiOxDVdCsX/FR7f4llFYPPavOAuGs6cd+4j9K3voy8vNxTOw
f8XuazJ3rTEN+1eusdI/baiiYf9Kq0yOF1s8DfNG0bpGhtU8NMwbmRTYtqxK
KsPzdl5e6gvbHd5K0FMfVC/p1YOI2xXLO0y7sa/F38044sgFOoF8Ld+W22wq
OUonkK+lUfHjxTqPbuxfsbRlTYrrzQDkX/kz0LlDVH8BqNgEl+5ewwFT1mQV
Ce9bAqcCFPcPbuGEfWe7TEKYi6C2I0JHbg8XjPQyqVo9OI99LLf53k9t/j2K
fSxbRH6oUaVHsI/lpVGBt8CWIexj+SF4MOTVXyb2sfBICC4LPsfEPhatE6Ud
EQ5McHCthN6py4LwZy97un0bE1QsF88L2kOBr/OLvZ/osUA2vVvjQjoFRt69
Vz58m0We12qLt/YKwfdrhB5c7mQCf1kzabss8t9vXuae2jsI6r2fPhE4tArq
C+1Jqh/vA4hnusP0vb9ZuBsgnilw9XHX5RsbMc+kmX2S2kD9hnmmx/a+QGv3
WwLxTFVg/mGewj2A5gVtOhvbPaD3Dgz5Z4X/+y0CXdX+pU4UJgMD7dIKtdOi
8LTgYcKCkg6Ghl+5XKkWhau7G9avbsoAec4yofanqFD+olM2PYkGXPROd+bV
UOEOz1BafRkN2Kza+2ZYn1wvFmbGay/TMD/FrT3tERWUgfmpaytlHA3TY/E8
ou27hQ/m+tfieUTmv3sVprs6COSnqZDerqVv2UMgP82gUkuUXwCdQH4a7a3z
5yW+9+D5RT5JH5TlHnZhP00ddDmVJNaGfTEb5jSdq29NYh7Kd9uCzvHxWYB8
MV9+t3POnV4EAfoHFhLvcMAO1+ZlHEZLYG53oQ6fLyfU8g9h5ZFfvztg4FEZ
wgXvP/3eGj02h30yeUu1Jd9NJ7FP5qmK61QMxzj2ySztTFb1lBjFPhkdh1NH
nI2HsU/GJdBe81QgC/tkpMOnJ74FMrFPJqRSiDpA1m+Inwp9QP2nRX4d8VPX
w9bqDAiwgITdDtcCCwq8q96UlW/PAj6iJh6gkwLfgT9cfcYskPlqMKXJWgiK
bqy/oWdOrsf/m6f0vUt2yv/AAED8Vbj5z6JwzV6A+KsdDxbes9V1YF+Nk3J0
zfU1NZi/ynBoKgpaG0Ag/ir8m/0J6YhAAvFX82EelbvTX2BfjXc6g4i2fY99
NVN32k+kOqRiX43P92zX3K507KvR/KvyLAHSsK9mc1q//INSGvbVvPtFV5zM
oGG+68O0ibvZFhrmu07IylUOHP+J5zEZ+O5oNVtoJrLzoo2TDOrAoc1x/EMT
Xdhv4/9qbtLhMJ1AfpvQ2uWTFeZ0Avlt0mZMpyxKu7GvRl+WWOtROA2Qr4Zn
63Cza/88SJw58uflLDvM/fuou2PNEtjmtWcmiYMTbvRfylu7agncPsud5beK
C24LlRX0O7iA/TXCXodsSrnGsL8m7kJrbI3BCPbXOF2ZDZ00HsL+mu0/1DJf
TzKxv8Y0rec3cZGJ/TUW3M7CYmT9NW0fc87imCA8Ubb302Q5E/TONvrlSlGg
wZyE0Fd1FlCIODf49y0FvtR/2fDLhQW+3eu6FyUlBBUX4pfXs7PAQuvd21lx
QnBuj5bwoNsgmO+vyOCSWQUX3QfvPXZiAMSP/bueT79d0g0QP9Zavk4qbawJ
82N1bCbXvXcXYn4sWCf/j51kLIH4MY3qH+/D2K0BmidFv21scP7XGzCTofjc
4JsIjBKOpAuUJwERCcdoDSgKszlov5i5aWCAP1/0eYEoBBrv1TzSMsD6s8tX
dgIqjKtnNV54RQN+3YZyHQVUaO7/3PzUHxr4zPz0dbeaGJTOqOa+4Pofr5Z3
szYoOiMDGLU127OdqwG033/9Y5d1ESLr49+lHGoGcm6XthOdPYS4turRvned
QNe4yWr6KZ14cWWo60s+HbTflA2wOdWDfT8RH7pEVi7Ogftrotou5LDDc2CQ
w+vHImi5uu+ODMEBFZ9P5xccW8J+Hx8u9mVXa4ew32duWv+x9GEWQLzasSjN
e4WOTIB4tYF8IlL/PBOIdZyRX81Fgf7rXzrt2ckCMhyqCuWeFGg/KuVn5Uzu
D1ob7w+xC0GLD0Cydj8LNBzOFNJ8LASvfR06A2YHwbEPRtwTK1bB6jNRGTVW
/Zh3AweX7y0xSyJCf+dD7Q2ikGcqaZXpijTQcZxXv/YdWW8M7LEuO50BmkXy
+n9sosIrndtUhm/SwDcu898Sb6mQ3W/NLX6yvj3/NncsS0oMyix7tccsnAaE
oy2O65/+CyTTnyZ1fe8mGr3cq3g2t4NbVZaPljnRCUrp9J4mohuErXvx4cF6
OvYVye5SvGVJWwC1f3sLyw+Q+/XKDVNNx5eAU6SC0w5NTvgjM17SklgEiKe7
WTbVNP2NCRBPF7ZyBW+VARNMLDtXfP+uANxgd9jEzJUJsldfZF1WI69fs2iU
+AUWOLjbIbbrOwWqC3DNul4nr3963N2T6kKw9dPFKqGvTDD+x6npWJcojPq5
3mXmXwa4GKazde4iFUa1LCmXfKIB8/wTL6J6qHDXCjhILaFhPk+OXV79yo0M
zOdp577aQ28IxvO7vmUG5fA+rsHzu74xLh+fDe4gkC/pquiXggugh0C+pOEC
kF3nSyeQL6nd2TmQ1dCD5301MrtLHmR0YV/SCgOvp9uC2rC/aMS/403D9knM
27nYTAcOfpgFyF/E/ZwjRUyOPP/KP7c8vcIBn+0O8jE5twRO2M+xHXbjhNzs
USt2OyyC5Q7cbJuecMHQL1lDNuvmsd/I+Vb7qzHvSew3ci6UvX13yzj2Gz1Z
KX2uQmUU+41+dFpW+N0fxn6jkGi1z9MJLOw3+lEwI3XiFRP7jX5lDh+2Is9H
xOc51eitSvBhYr9R8Yq7Y6dWsMClEnrpP2MKnEnRWnvQlgVijyd/r2mgwILC
ZcJe5mQ/eXPW4N9FIdjZePKfP7ke0Pyxp7+v7+63GQCI7/uwYXQLb2AvQHyf
rFKtvfSBTuxPao3unPBQrMV8n82hIt3yu7cw33ev4jI953Iwgfi+tWJWRx8W
BWJ/kkbNWcP9FXHYnzQhbTH64V8K9icpWwq2ahalY3+S7vDJFT27adiftLs0
fTGeXG/In+TClyh4/DMN84Pqu5/3iyjQMD+4zfV0jhxPCZ5fttXr9uh7qWYi
ukR2k0ddLfjWsrTs49cu7Fsa1mCqDm+jE8i3tCi9vdLLgXw+/8+3dKXR9pcj
qxv7k3TkfZTk3KYB8if5hOoHWabPg7bvYbU/+tnh/IvWNr+VS0BkKbPBZ4wD
9t71nW/dvARKgqBNHhsX7DzudUDQbAH7lDTWpUs0So5hn9K2gKNCPnYj2Ke0
fOL61q8uQ9inJKxiu4xJ1oWIH7wj87ihmKx/ED/oW6tvaWTBBPXUHmP7PYIw
4n5k0N9iJnAcPzBdLU6BspZiL65BFrg+sUpZJIICO4+oCJ5wZYH6tN15u8WF
4FbfdoUfQixAy/IRb4oSgmwJtKW9UYPAL+KG5oPNq2CZ6q7VolkMgPjEedW/
3QPiPQDxibVb1z/Lr2/GPqepFm2JisxizCcK+F3c8CI+jkB8YprhVaed/koA
zV+zirTZ9nwuGtwrGlt+P1MEDphaPs89mQSc+EpW/NovCo8eTzjxJCgNMCJr
6K9zRCHXFePkExEZoEz91ve1B6jQTPr0XFAQDaz9YFR/PYcK7a/86k2spoEO
I9dfeofF4N0TLMPRB//xkCf3JbzZVpABVHttFf42VAORw7ZLkrmdhLg8c4GN
aAKW13/yZhX3EO5RvHRN005wM/3HcIEfnWhp+5Dz2pNOrqcvlgH2Pdg/JbTo
vVIidw5kdo53+iexw4Ey04PXUxbBL3r2eZ5UDpjf63GW0F7Cvqk15TFuvyeG
sG/K7InVBV5dFkA8ZM7i9cOO5POLeMiet1m6a8h+TpN2ZffpOUHIx7E3lLqF
BWwuLDzkcaNA/VL31Zlkv3b43jXCc44CL/p1ixupsoC/cMFnO3chqPf0WslF
ESZoMFl47fBPCPIeM327Jaof85Sj3M+v1XJ+IGayRBIrREShY46kWEXyR9DW
sF6iN0IU8n64kR+5PwP4cO18x7aGCk/09q1QtaEBjQpLR1oYFdow2LYNkPWI
p8D9ZX/FxeBkkE2fFVm3Lrwf499eXQ8sjXhyIgO7iY7QQhnT2DaweCVyLNqW
Tjiuza8/dLcb+LJrez/eTcf+rP2+r4LtvRYA9xvlH/+2cUCZrWcV2Y8sAXNR
miHvfk74wTxYk1G/CBCvaULZd6X9FxMgXrPj4LNea0MmWDd7bbDZTgAyv9/1
O3uL7If5c8/cO0yBvoaizPmzLODybPvUxi8UyOFZpfHsJgtc65n41qEsBHeL
gD8tFUwwculp4tkmUaj6a+a2KysDCHh/a1M8S4We2jyqiek0wHqqc1C2hQo/
/YkLyPtFw/xn1+mR6G2eGWCnoVN6UnEjcO8SXc/1pIeAKq+38TV0AFbWkY1i
QXRio+NbxrgPO6TFDN5LclwEMY2f1pU+44B6XsYc9meXAOI/X7OlRAx6M0F0
koHN7Sp+6PBhEXaS53+P0A3pR1cp8JRUoFULeb5f7+aDyf0UuJjAs9bYgIX9
XkEDQ4F7/rwjBnpWrL7NTYUaZzYtvNWhgQumtt9rn1Ch+u9fwfHlNFDNYBNf
wy8GQ7TKZnen0MBIrnb7iuRW8CxhybdNm07s+aq/9t9EFzgpyV+9z4BO3JIf
LLfg5oCs7MxK3u1L4DBPJvW3MCcc3P9o4tyyJYD40hda11/L9TJB5mL4ywxt
flh621PQ2JgJrvRH7g/WFoC5Qb2ScleZ4Pwyt60JOylQ+XOnTvFJ8rwEr8Mj
EinQb0nwUgpZ/73TeqHMvUsIzqprmn0eY4Jrl8NOxWtQYZ6/oqFLDA1wrDPw
PvWbCmX/yuteqKQBAR5zTaPPzaAtPc48ar6HyFlwefuotxMoMy7kSTykE1qn
1Zt3lLLD95+poRbti2B4NCtcq4oD8tkVPCQOLQHErz4P899SZMcEnKUzlZyC
AnBylXv0uAkTMBOedPj7UGC0hZTwC7LfWEmtUjnPKwRr+osMAVm/yiubSgUl
UiFP2jkZX7J+rL6h5JQd1Q62j+1Vtb1PJ14LBnx/pckB39vnO73XXQJsqoqK
xQH88HXo0w+/yXpAZu0/L72TFGjIbpndbUb2L/WZenE/KTBeGvJm27FAakKH
/XdrKjz1UpoGcmmgfkaTyceiwgELrR/0fBrmZx2D9j8yu5SB+dl5XcH6eKYX
gfjZn5GFUi1L1XgeoGUAe+u8XQeB/Gk1wVf7VuzsIZA/7aGQ4TMpHzqB/Gnj
lIi23z09eH4gld2VjfjVhf1pnqoNVy5WtGGf2XOXDYQh5yTmYY2U7i/ufToL
kM/M0izjfb34InDkmS2bvcQB12xo/ypLPg8TPCHNNY6cUKp85LfpvUVwMt3i
iOZ9LjgIVMZj5eax7+zPCs6spKhJ7DuLtxSIC943jn1nMyt463Zoj2LfmULD
5x2TgcPYd/bGaFXztiwW9p3V5oatPk9+DsTPvuu7l65D3h/Ez9Z9/Sx74wkT
+872U1Ni3ThY4P54wc0N5yjwxXvZQ6dsyPXQXd0RVUuB1amHzrpZsYC6qUeC
kLEQnHefKc/1YgI0z3CFKeuBo8cAQPyt/PQugzeZvQDxtyusBvz4rnRin5rW
+2Uu3/NqMX+71uH6yQ0q/pi/LdILOnau9iWB+Ns47Z+1jF8B2Kc2eP6xf7h7
HPapKe2qjbEqScE+tR2SbnyxmenYp9bZ7W6/R4aGfWpRs/VKzkU07FOTXJ3p
9jOHhvneVj27o1oHaJjvPT94ZtautwjPQyzkTiIrhSYiWMuJffBlLfA+38Qm
/roL+9eeWDFWW2+gE8i/NiweWC99m04g/5r40bZlT5e6sU9ti6rx9QrDaYB8
arzDf9cHBc+DWSm1+o5OdujPP5oi8m8R8B2a/DnXzwFff+pT5Sf3r2vyLUcM
ZzmhOUfzobmbC9ivZh9IZQkojmG/2pY7b6JeuYxgv9r37R6aN58MYb9a5T/J
CWsBFvarbVVQu7Pcion9agHPfPUizZig2M7rwtgOQSh8/+ST6nwmOHDdJrlV
jALZNZer71Ymz+/NI3TFEApcOCV9TJ+s18y1jNrmqUIw0UDg4B8xFvB7K3Sd
GS4E87iDYkxSBsHfMdXVYP0qWNzO+TSlhgEQP+xNrdJ11egBiB+O0ouEJhot
2O/GKfxvZcRYCeaHdY7mF7vYvScQPzxDH0s5d/c4geY57kn3K/0uEw2gdvXR
4DQRKGr8/NpZ3iTwnm3k61NFURggZbRH424asO4xKY/PFoXxEWqfa/0yQKxK
cuT+PVRYPzx9ceA5DVyiNG9XyqbCrFQL8/Xk/niLcl7X4oAYbHqeq0d9/B+v
fLlF4kjFrwywzzZDWDW8Gty9dkvCNqKTePNFQOaDRxOoUCh635rdQ6QeG8ly
Ve4EmZWBx8wD6MSDNb5bhSzoYDvjy/Ftd3uwj66tnRX9KHIOVB6L7k54xw4T
C1aHBkUvgu8S01p34jjggd6c71Pkfox45QauLfX6XMPYP6e7vJp+5jwLIF45
SeLoLb57TIB45TIep/WSZ5mg9sPPcOsxQfiWJbb5zmYWeOLTuHO7M1mvHRxO
TL7FAr9EQ9pPTlGgV1a1jJIGud8sO853/44QFM2uuTglwQSbs8qv7JoXgsIm
/V5Sn/sxD3Fryw0RK9UUYlsyuOAvJAqvtCt+2+L6EVzYFM89HCIKE49vNN4s
kwHMF83dN4hQoa+ziqGkOQ34KvQWuwVTYeaYesoasl4TLTZ90icmBteKsma/
k+fniMzBkRdB9SD48eJTftduwnJz71lu6zYwQ5UckrekE+8K4uLtzncDrT/z
Ie0H6dinF6XNf4TfbgFIcfb/FNvMAVOOgvsV5Pl5Tn9c3U2WE17YzWk337kI
EE9dUjHx6V0VEyCeOm2vwHVb8nrJ3r6zxG0lANfEnDYcvsEEK32Y3N4HKDCJ
f776xBkWCP28PFoliwIbNtiXVJPXb/6eeGuSkhDc+Vvx9/EGJnBIWBV4qV4U
3jikdru7OwP03h/P0dWnQq7RS54mqTSgMFT5fOovFR6/kfzO5DcN89mn+GM8
7HwyQFp7WJvBk0aw5rmH7sTtHuJGr+fs4ewO0D/aQgsLpBMH608O8D1kh5f3
wodh5osgQnSG9+BDDng14flP93NLAPHZf5wjOg8/Z4KMrZfcYn7yw1dHqkLO
kvUaB9CpirlM9u8Jz5ZfcGCBxbt7Lt2mU+D+ZR1m4BwL+/4mzrLgx9oIoqBF
ZTiQiwrtxDtt8jRo4F3h4Oqoh1Q48qXtoUwZDVhHd73bzi0GlZwumW5OI58f
jet8GXatwCnPSvzKMTphZXFgUK6mC7AujQTkGdMJv+CQyrtsHHDJqXAoh+xP
FTQmVhzi44QOAd+OuXEvAcR/c+6aDv7NIuuPut4jusf4IcfZ0buzZL1z1ypB
q+CYAKxnGJSKXWGCTfeSmjK2UaCKsHLtz+MssNreTfVLHAVWNLObnyLrIbme
nAs124Sgr3+UHGuOSZ53lTuKjlIhOL18xCOaBjTv1zVTf1DhDA997ZUqGgh6
4XWb404zaOxVMR8f6iEGYy84Zhd1As9fy16VP6YTllmjLWoF7PBjUaBKTs0i
6JWdeprzgwPek7EVZiP7A8SXay+XW5fqwARUdc5uhRUCMMY8hDuUrDd56y2f
pj4m++Ep45385Pt7mTZ9UWqFEMw8dUpzpwILOL3tcD4fR4XGCgLbzcj9yHDe
OOaSaTug7Q2uHL9DJ77cPFSQCTmgk5xz4wOyn3NZ49Fu7s0PdSZifh0i7+9I
iKzSBU0KvHBi9OszUxZYxxk0X1hEgcMuprTUayzw+A1Vq9WcChXcgg6Hkuej
+IVSUMegwufMBjEKeX4ivp33q+fpIZsMULPv5KvXjh1Aw7YwZYbsPx8HuDDX
OHLAlvl94jPkemva4Pz232d++IFhtyOcrEeOhK+U6DSlwA/FLjK8ZH1ITXv4
hruVAu1yTMb0yPcj6zuUs8uNCqNpG2SSf9LADxrb80D/LiCc115ifYVOFJmw
qlNH2eG59u2r7gktAVEvj4hne/hhVtxqh9RLZD/6Y2/wVBQFpqSnua8nz6Na
jQbPhDwqPNqSUiJI9tvak1uFxR50gpX+/P2vfelEdYKTbUQ2B+whNhazay0B
FZV13P7T/DDk5Lo3242Y4Lj8xuZBdwoUmcwai3RiAXbb7g2DkVRY9DM1PIB8
PROBt4uZXW2AM+LTI//rdGLoUFBxrzwHjHeQ/JZ2bAlY/lxz4LUzP1ym6c30
PsMERhdParPlUiBdnRki5sgCCVvKe606qPD1Do62hR80QAn5crZ5tgMoDucK
CpD914dI5x3ng8nnQW2VVuWZJeAre/yMRgM/LLk3nPyYfL3inhfu1g4UaMEt
sA6Qr4d4fEbrCj7WkQRCbJ5hx+dLhRfanOpmKmhAZat2v7AhP/Tpf8bfQ36+
ulX5I24pFOg9943aTX6+vOzqPU8qqVD+Lst8J/n9PgbBVQYru8C56ltcM+50
YibzdmJTAwcsfqT+99/eJVDulrT/hh8FUkTSfafI9TrQ0Fr1K4Xcv9iK+/3I
9anDED3O19IODske/GpJ9jNeyT15nrocMDxGtv24/hLwse19LB3ODzlfXtl/
n1wfLYl/Ex+XUeC+r4PH/G1Z2Ec5m+ouWXg2A/P/VzaFJMdO3SIQ/x8m8vNn
ak41np869znVLPdcB4H8lCGS2xlbJHoI5Kc0jZlTC/GmE8hPySfAWxI20IPn
rSZoZW9TrevCfkpmxKNAQ2Yb9kXapfpcejk6gXn+Jd2EpoPOswD5Ime+5vk/
WL0IhratKU434YCZO/w9LhkugZ+NFj+jr3FCBv2Aj77XIrhWHWBm4sYFRWzX
nf+sNI99kjrBCucFEiaxT1JQuj9hBxjHPsmG6GIHG4NR7JMsvDkgDF4NY5+k
ZEJj+bmvLOyTFFW2SR1/x8Q+yZGUawH/6w8Q/38o0Sip5RET+yQ35ZQu+rOx
gIDP7p+7DMn9c7HFUPcyC0x97B3xrKbAfwpG/p3WLLCn7mj1WiMhuDB7MPeA
DxOg+a96D0+HCfgOAJQf4D52SVG1pBeg/MDFD61/9cnnEOUHRkMOvxviqMP5
gaU4zjUlf4NxfuCXg9rnjb4hBMoP3DD1lPc+EYB9ldWnam44GMZhX2XyhT4v
h8QU7KvM4XPKz/6Qjn2VV0cvihzfSsO+yhuRAa+0C2nYV/kpdfra4lcazicc
XaX89/whGs4nmCvPDQTpF+H5sXPPnfoK3ZsIP76Im5ucakHMF9HLIv5d2G+p
u9FzcEiMTiC/ZcvQ+4ZSZzqB/JbcJfftppf3YF/l7yNy8wFq0wD5Ki/KRM9M
PyL7x79rzrJa2eGb7uZfUnOL4ImRSH4GnQO+TF6W67xzCaj+S5SVmOSE/NKV
943uLWB/Jf3I1stZB8ewvzIh5yVbhvsI9lfC78a/e/yGsL+yzq/ow5dVLOyv
3MrRZbHPmon9ldffND8vIffbw6EGbZnSgjD2E19dNcEEkbIeXN2iFBimlr/j
+SEW2PD54sGjweT5wv8k7Di5H2+j2g91iAhBfcuWmYPiLHCXWhc+GUrWj8uH
7ulmDYKF18kz69etgjq7l18u72IAlH+Y23Mj6aVJD0D5h4+iDs4691uwP3PE
/GLcs4AfOP/gIJjX+bbyPYHyD3vSDFNSLAwJNP82r3W52ED+a/BWSLXrdaoI
DG/8pGEwkAhUFjhFbXeLwo3Xspw5bqSBrd6bj3zIJOtX4be1bE8zQEBOCY+6
AhXe5vAUe/SMBjwLXumvz6TChqtGXprkfpd3tfTF1X1iMPLr8LbN3v/lLX6d
qjwYXp4B5HfWP3J2rQa3NxlHVXh3EuZL0fCBWRPQpsXwKH/sIUrCzTcE7STr
ibM/yv+R/UFttpuJlj4dHH5dWG3wsAf7Po9wixwT8J0DLdO3LLNes0P31oU/
18IWwaEj1KMKbzlgn3TDoqneEvZ7WmwIlEzlH8Z+zwO86+8EkuctylvoXhN1
GnBnApS3mD4bN5RuyAQR22e0bwwJwtLVjYz4jSwgulnzwYHbFDi6U655HVnf
BnQnDu+eoMBW6UrOQLK+OufEt8/bhXz+OcUsYreT9ZTZvlN8s0JwLkI11bW4
H3yPM/jkICgKnSXrErxMPwLxoqv3xoNFYUr4cU8tyQyg4+rO3LmarL8GO36x
mdLAx573w6ZBVBh/Y8L7LVl/XdpUVTosKgZVRa4HW8bRwADzgtkvx3rg5zwa
6WPXTWy1dr7Wpt4GQkRWmvy6RCdyRMUoj453g32saGAG6NhP2lz1wSnWdAHs
zs47vmU9B3zUdec6u9ISqL2xGijKcMLM8TiRc32LAOVBzGhp18RqmQDlQVYJ
VjrMkf3AAcVlKzebCcCosHOvCq4zwVVNTsvn+ygwfe7ENqY+uf+euj2uTaPA
xI2HnlvfZoECLXmW/34haBf57kFXC7n/nvzLaVUrCt/0u0Syt2eA6nmB7aan
qfCek6fl+w80cOZNwKemOipcfevk7g1kPY3yJbz/5i89IftVRymZye02jaCB
x7Rjr30P4XNw0uxMXAdoqpcR2kL2AxreElfX3GeHXX+aKs+fXwQie8U4x9w5
oMb86Y/VZH2G8iWeijt4nclz7lsP3SuniB+e91h5Yj1ZLwbVfZOiWVFgdvZg
VRBZHxYd17x+vpsCacrPv6wl+0uUR1lXDIZkb78kUs+dv/CGgwp1NVf/VlKj
geLbH5QfPKDCr4oFV4zJfiZtTq939woxKPGul/BLp4F9vmyST7RbQZLrIt8i
pBPun5L0NQu6QPrOivwzpnQiUt1O9+kiO+zV2yHWvn4JpFgJLxtfwQmnlPW9
m/mXAMqvMK/IK6WOMgEd8ottPMIPrwhyvv17gQkeS8oaNB4RgGNDb2giNkzw
8FDBns9bKbA3UImipskC7zgGQn7GUGCsP/fDQLJ+mUqrsP+8VQgqCN/lG1xi
AoXmgfDqI2R/Kvm481YUDVzdHcK1UESFkc8kJjvI9WjQIOLbcL4ZKI9MhNky
egjO2cqmChr5/Posz3Yk6wvHyz8unM5jh8skogvSyheBmbaop2MhB3zus5LT
8egSQPmYHzfqzyqS/eQmTh/mcQ4BuNBWuW3sPPn82dW05nqR/biDu3euMwuY
3ON14OYSgmkJvqUr97JAuP7btyox5PPRs8XuMLn/iEHWl72Q7AcOatc8daET
JVuEjuYf5oAHQ6Pz804sAcVH77N2e/HDhAcrLj4g76/+GfUX5uoUeOKRFNfZ
iyyQFLFMt6aAArcW102Fk/2fo7ji58FLVBi7s6lG8QsNAMFnV770UuEm+dmz
YsU0nM/Zu36ER9Y+AzB98jg+mXUAKiOVPvOcTrB9DOv5Y88BeTy4PL+R662n
ZSFJNIvs18rX+rmR9UeVnLPTyAUKPGQe1bflKgu03Q1NG2qiwFU/C8vHLrHA
aZWPPUKuVLj98BfwkayPO1bcmkx07wKnPZOpj+zoxB+BQv2vLHYY1+2uQyXX
Q/Xw++vn5fnh2FQ3R5YZE3RciGVwRVLgj9dziwfI82d6NuyD7zcqPM2hFmdG
1u/Wx8Pvyl/vBDl90CGffL86P0LM9TI4YOgrlbBR8nppLrxZ9X6cH64bv6L8
+hwTNJQ8l5u/S4FDNgv3d5L1spR4rGZlBBVGGbdGqJKvt0FfQdinsA3kFDpF
xtvTiQXWZfXxnRxws/4tQVvyfm/cAwXsb/JDvmhuME7W74yJnLeUrxS4W0Df
7C9Zv5f+fU7RaqPCWcNLW7rI/mfbwI7v44wOsG5Fq6IU2Q9s+xoquSqAAyad
Pe/zkawnQ5gVFy/W8kOH9BkvefL1DNzYa27bU6B50tKlwBssnCdS/nUywMA7
jjiYkhgy8pQKJw14E86Q9f1s4E2i+zQ/dBHzTogg15tlotyxZ8kUqOB5RVeb
XG8dNi8uXi0n9x/1Rudf5Pe/S1iuZD/dCbb/kNda/4BO3Kp5+TaolgPGRfgY
DB9YAiar1vh6+FKg46HZ7f/jm/ifvZ5LSabC4LZdz4LI9UnZlWDa+a0dfM7l
G3Eifz7wQg7wP8kBY595wJXkeaVez3dhKpgf9skTnG/J9WEH1ZdelpL3T4vh
nECuD5RfSqijewqbZABxxZjaPtABVNdNz/o9oxPTgw21R6w4YKFuM0fD2SUw
dW5lnloKP7zl/kTNkHy9Zc8eBEqFUeDtooZf//t7pfLFtcvOfKbCgHuy9xnk
/QsZvadtptMJJO6sUovxpxNqnH/1ChI5oJCNa9nVU0tgZty2YY0rBdqsulqk
SO7nth5bIkNDqLBluEvhyR8aeMn7PIfnKj9Ma2COdpPn50qJMC25TxR4VOCb
2R7yvDwXRAmU+tEB5gQZyf3k/rxh5u9qzyccsBcGuK8gn48Em6YbvmX8kJKv
yAojn08PoR0Dnx9R4fICl+dD5P7vVc83lBhPgRECUhc5yOu7tVw4Q/EXFd59
3dPeV0kD1bqD3K/rOkFspvehlY/oxF0wtSfam+zPPvmbG5Dfrz+8Uccpngqt
pni/uJH3Izi71PeZezt4UDL9UuUe2W/mWx1JUOOAYfy/TaXIz/stxYg72Jcf
Ngfrqfwjr19OV6PC44cdgG/7gmIdeX14Hc9NmDlxwAjLbc8EjZZA1aXRUMY3
fhj+YPPKPPL7C+R/gL5oClx7muPODPn7019SjYq+U6H6I9GzmeT12vM2M/lf
YCdwXJP70Ji8fznhaY9bPCjw7e17Blzk+mv/JDG5PJoKJT9+VKgl70+iybhZ
pRvZv7pId0iT633miMZwAQ+5Hu9ua6wjr+du97OK78LI/pIy6lJmsITzWIoS
P2U3NScR6nf1Iu0+ktfv7bPX18jnV4V+qNssgAKX/RiSWkeuh59b18fTP1Kh
Q+hZgwfk9XGaFVBxMuCAT0ZHb10lX69yiUg7F8UP1WeW9liTnw/lwfZKajrY
62f8//7++f/9/SgPFhsj/q5A4MP/y5+s/b88mArKg+UVXf4x5lmN/cnr66X9
77t1YH/yeN7lr6sLerA/ufoZ+/rE4V7sT751sM+iy60P+5MXOu8LaXztxf5k
J4+97nfne7A/+e32l04z0f/5k6kiDQ8fL7Zjf7LlrdP1RqaN2J982y81zUW2
GufBDEdUL9unFeI82KVeGYm+lwF4nrbOIbtHEh2leJ62zq7mRwezW/E87Ttv
ei1Zc314nvZQ94F7m8xH8DztQ6+MmSr6E3ie9iPHJzHv7afwPG39S1t/evVO
4Xna4Zu9BHp+T2J/8iT3mw5W7Tj2JwttmmWeGRrB/uSnaSF5GVaD2J9sTujc
N/Pqwf7koWXnI2+FN2J/8pqda15ZPy3B/mSfa7/S076m4DxY8kOQbuP6B+fB
HPZv5dm1phXnwYq+cW+xnO/GeTCRddOBw8v+m6e97nWFWuSXAZwHq74ms7Fi
5X95MHH9Hu9ndwdxHqwsf+IQq5SB82AKS1tUZnf34DyYCXu1V4dmM86DmQSy
D+fafMd5sHf1fUL3wrOxP/ndK7X3Ttb5OA+WRBH6KtpZjPNg7uP2IZSZnzgP
phS8NJJs/Bvnwe56iSV5N5XhPNipbWqvJArKcR5M20mnmO/gf/7k72wNa08d
q8B5MKuHVvvXTJbjPJhkmValcWEh9ic7J46VhN9qwv5knqSB1WW9Xf/N17Z5
u9i6qhfP187JNv5yzbYPz9fWrzBubjvUB1AezFW1xdljgg5QHmzNJd8VaW3d
2Mf83vZd3U/jTuxbXvXH4XG5ZRn2LScHvKQdy8zAvmVlk5bi5blf8TztLcst
9Xn21+F8mUFG+Frea0w8P3sHb5evgPcYnp/dGcdrqRwySaB8WcY6OtvB7ikC
5csMvbLc7j2YIlC+TKm8szGZMYHnbfu08BHSLmPYz9yv+nS/65ch7E9WXpYK
ey07cR4ssnNZqKtEL86D7QzL/FzxpB/nwditdvx5GDmI82B62ytt1y38lwcT
efjr/Y+rAzgPduiwEUX3ey/Ogw1GcwTG7+rEebDXVQ3i5dbVOA9209h9345r
H7F/efGU5ezfzbnYvyznuWefZ0UhzoOxvUhdn+fzA+fBHhuD6WT1UpwHa9pX
FXZXrgznwaR/am6yvliO82APX5iF3uevwHmw6wln34RoVeA82C6BCL/d2ypw
Hix4y8v3d8wzsd+5Mre2+mpSPfY722jLuBYVduL523HWe9K/udLx/O3IhUcj
6uR6Q3kwa/uWk9mWfQDlwfKS2KVrLvYClAdzV3KQen+jB/uijzDeOfxb1oV9
0NzJ1KfOh6qwD5rF+Hxhl1Yu9kGL7/KX7tf+iOdtlxT1brA69Afny87CleK2
ewbwfG2HXCfd3e6jeL524ld5163skwTKl6kJGLJqsqcIlC9znRB7e4WYIlC+
7LgYv0bUpUk8j9tpbu25qJ3j2B+taaAxKbd9BPudIz9LTtkt68B5ML0/X1V9
qXScB8vaca7qSQUD58G6vxiu11AaxHmwkZsnxh5T/suDeXvF7GByDeI8GFv+
JkFGXR/Og1XHCWkqfu/CebDR2HdrR5f9xXkwa/W8ub65L9gPfWmcoys/rgDn
wWxdgp3/5pbgPFjGy/aN0+9/4TxYWY+lxXDpb5wHuyO/IJG6qRznwep1bjR2
DJbjPJiKRM6cLLnfoTzYBoOv4/FKFTgPVk//fmB5Vhn2T4+oKmg3dbUClAfL
5lV3KqV3A5QHE5jeK7Lg14vnd1tQv1kdvd+H53c7tvCH9LH3ATS/W8X7qmji
vf/80jf+sRb83wzh+dwOu7j8lNzGCZQPgy+2dKoLThEoH3YxKow/Y3yKQPmw
pxHm25/KTRFCuRquSYrLYb5w+OtkywkC5bnGVgjuY33uwnkuZf7f4Ni6Ppzn
qgrzd6zaMYDzXKqMvFecXYM4z3VaxW/nZOl/ea69b0J4X6X04zxXjyGvdelT
Os5zUZbyFX6Pt+E8F1Ewyq02WorzXE7CDSsF1WjYTy0eGGWYv/I7znPd2RAd
yugswnkuy7+f2F9o/sR5Lo7aqcLFv6U4z9VQ5/em6WkZznMttEwoiAaX4zxX
uebNTDvpCpzn0hDp3u5D7jcozzV9wrBdWagC57l2CY+2PkuPxT5s4+jmzCvv
arEPO3n1ykhjqU48bxxWzDRUbabjeeN3nmya2bamD88bD1c/euiVYx+eNz6+
yIQd5HpBeS7dvJX38z/1YL/23TciT4+d7sL+7LeaSp+i9//B/uy6W5+b9BXy
sT+7OPRV/c6EGDxfvL6t8tfh6AqcD3v1ZledErUfzxOvCXxpJjk2gueJ23HJ
17OlThAoH1aSYrN85OUUgfJhn/dvfcxWP0WgfJil270eeuh/88eL08X/nPUc
x75tPnfDoBzfEezDDl/lUf05oA3nuZaHfJwMeNaD81x7DQ757LNl4DyXprzf
+8GFAZznUu2sFt9C+S/PFWG3szbm2CDOc8nzWBg7GzBwnqt0v8+dbfe6cZ5r
dc+1c8JyjTjPVTSpc/aiVzb2aRuPUUezT3/GPm1ix+3nbNwFOM/13dvN9P7p
EpznuqjuKut8+hfOc6XMbmJ+CP6N81wGxotJH5fKcJ5rpMSJxtdQjvNcyjYg
yQhW4DxX8czQ74Pkv1GeayTRI0xL9yf2dRODL5TW728BKM+V93jz4CfbboDy
XCM2y5/dMujF88ol6/ZdZHPpw/PK56qWHz21uQ+geeVLm+qtA3Po2McdyzYU
m+TNwvPIPUodjxVwjhMo35XcKj+yqX6SQPmuvonh21uHpwiU7wK+AlPN56eI
rSVpd04IL4eFsWsUZBMmCJTHEtpxMZ1bqAvnsVr8vl9VfNuL81iJS6vMnrT0
4zzWLpMNpnyFgziPVdXefntb3395rKNBihsPCg3gPNa+HUqJ8tt7cR7Lyca3
euJsB85j8b2OtkqbqMR5rPoXXw/QvNKxz3uJlx5v+SYP57H+7HW7VXG+COex
5Dfx894f/IHzWG3lEv+EA0txHmtH/cVD/RfKcB7rllxP04E75TiPtbX274jV
ugqcx3qfVOp18EQFzmPlsB0INl9fgfNYl05+8Wg16gIoj2Vzb5XD8lI6QHks
6rIuEw3DPoDyWHLTlYS1Xh/OX33sUpp5cWqSQPmrSf8gw0dVU8Rntd4H2pWc
8MyJNT83xEwRKD8le+LD16Jd/Tg/JXBgBcXn2iDOTx0rDXRs52bi/JSOff6S
Xu4Azk8duXFcMikrGeejpCDX1UBYjvNRoS9MN6YsluN8VPfGjsyXmhWgteXJ
BskEMSiqv+n0290VAOWjSjq09sYX9AKUj1pb0rLbxaMPqBNzUi9y+sAfNQG/
uo5enI8SVjJ58P3IFIHyUc33joWnjEwRCrY7GZVnuGA13w6Fsn+TBMo7NfiW
sp7dHsB5pzx3lzSd2UEgcf9Yo0SxEEzP8P99PX4QpEurmVBProIXDHkCm2E/
zj8d7/1E8Hwox/mnB+vY9r4h37/YgQyvFAsx6EWL0vYjPx/KQ0UaHGeWcVTg
PNTOj5OLYw3B2FcuuigT8vplDfaV58dUCmz404Hnx79Oua0zPNaD58e/Vu31
NuLqw/Pj1T9dL69z7sPz43/Xu7g/i+sFKA+l3/75PbOxB/vPswJbvv5x6cJ+
85//T1l3Hg7VFzcAXBmkRJNkUKSylyS0qM6hQlLRopQUkShp3yxJtEpCspcl
RfYWFN0sjXWm0ILIMmOGmSmy3BZL7/09b+f0PO/rv8Pjuvfce879nnE+368f
vzH/ST3Ob57dsmpw2YkynN988hfZfas743C9+AheclxicR32VTt37NcUXO3B
9eHvNdiVRWX04/rw3HqO3vGLQwTyVcb+4bIvA0kC+aoNserjU9pJAvmql5/G
btjmD+N68it9S2dKZw7ifOjn5Fe3Vpb043zl87ilSq0f2rCHWlpEfBxfw8Ue
6nu/c/Mikx7soRpdmLpzWgXYQ7Wrjv6yn/rPQ5nfmHLDwEWIPVQtc2LF07Ae
7KH4WZfiI5s42EPdVUySCFzdgj3UxLQfnglPX2IP1ayV+/XimQKc7/yN60TR
mcJS7KEcdOIJthITe6h5FoJd5hrV2EPx+802B5+txR7qmuw+1S5RHfZQeUsr
LXazWNhDCdevrXBZxcYeKpPmc3TYnI091GHun/dNskycT92/6npfwc7PAHmo
60U3Ktp1OAB5qOkh09aFGvFw/fmvQw77JKl4BnmoEHKnlMIiPkD15/0Vn5wX
fOrG+dKdbb0eJY+IcH35TdUJQo3KAQL5qDvy3clSBcME8lEVkxWTJAUkgXzU
zQ1zHlYeIYk8a7eROJok3PXayZBdNUQgz7SiJafY72Un9kzk1k/+Hi487JnO
mxSpfMrvxZ7Jq/jJ0sJcIfZMhe5hvKsD/zxTj+VLtWQgwJ5JR9w4oOoUD3um
gWcB9U3lHdgz2ZzeXGeypB57JvdH1/Ly7/3Lt/77x8C6hq4S7JlmdSW22ipU
YM9ka6P74M7LSuyZfjO3/rI7XIM902iit624ZR32TKfSPQZDD7OwZxpup/nm
zGBjz+Sp8iNNnnq/IM8Us8Z/3/BcNvZMpZ8jH/yU6wLIM4HGwI8Nyd0AeaaF
GnFhaev5AHmm14dM8hmOfOyXmitd1J/pDBPIL03WiLx/q4IkJgXMNvZ7RYO8
0QsZQ3kkgfyR9jrJlzXjPdgfFWU+/8XaJsT+KNaBHqUg+88fnbEpqi/uEmB/
ZNaR02HATse+KB98dukyYGFf5LLSUlFqmIV90b3Q2YlylmyQXZnyweEeAxre
qPNuMKb6568v8jmaMJ6ezgPIF5laB1nGUe+XMKOi0TM+fCB+M0fWboCHfdGc
9a/e79AhCeSLDEXmWirU+uvSg/1xf9ZKQN3en41LGCSBvJDEisBiZzsB9kKO
4eVLk75R71P7rQGWJXT4JeXQbNUXQrC2ifc9fM10aMUWW7PvbC/2Q2ZO4dU2
91nYD1XI9ym+XsAG8MGJcPZuBhTqys17tp6NPdGEgbfbsydTP//rh+bPbBOp
6fHB0Wodz4O0blCwVx0uP8zHfsgtTDtqw0OSyCBvxLXG06CEucfwsVqSQD4o
1jRa67eKEIyVt0k+P0KHafv8BozpIjBaYlZz4Bsd7nz/Ro2jKcR+yE+F4ZUA
87AP4se/zhug5pstCZ/XVN5kwIF104LnUPMR8kJTyqbK3T3OA8gL6T18bXLQ
lw+QFzrTUlV5fXCYQF7o2AztTtcBkkC+J39t3VHfRiGwkPRmh2XR4eoLtX0/
moXY9zgoGAWkqrNB2AUya5oNA45FVG6RocYD8j3E3bPdi535wHpo0ZQPYjxQ
55pUlmbJx75n22ab5pctJKHuluY5L5QOH3T9WtAlLgKGRqPcyAUM2CH/Y0cZ
1f/Z5/QjzopzwcGc5vNd/nxwbW7+nQ0ONJi1oaX/tIgkVvjbryzcRIeKHu6n
pSeKwKGHSw3H6+iwsUXJTBguxB5njYR4lKwJ1T81/adDDjHgg60aKTOp5xf5
nNdiGxtiR1nY5+yMjyl8LAoCyOdktij00aY24vz2nfdnLYpL6wDI58xq2jin
tIULkM8ZUff6XfKbB5DP8SxyM5t4ng+Qz/mlW5hxJZcHkM9xcyw3qBJwcb58
58ADjcdCunA+/LTE1Ingez3Oh6/LeVZiOb0c58OP964Bc5dGESgf/qWZ21Xj
WbXY+6QfcGxqN+shkPex2ax758zlfgJ5H6N5xpkhnkME8j4HuKFaXmdJAnmf
L1IariNdJIG8z5uK5T7GxDCB8uevDnYyu/N6EOfPv+c1PkHtYz/Ob5+t0LHj
1Zk27HM+dshsa1DjYp/TFCv3+LlKD/Y5OclSozNqBdjnrC1OKFw/5Z/PaX34
blaqtxD7HNsoryv07B7sc8aL0suvSHCxz7n0ta12S0UL9jmSi8WzT697hX3O
kVX3nX5PKsD58QNLGaFpt0qxz4m7JvElYuwN9jnGk1ZvqJatxj7Ho3n1iL5n
LfY5zUuejDE5ddjnZJ6hDb+tZGGfY2Le97LclI19zi09r/P6a9nY59gzqyN2
Cypw/n2JZw9d9vFbAPI5lq85OQmTOAD5nBNvA970zeMB5HPCe1dkHDnCB8jn
OOvpvY0x5gOX7eoihr8A0KJz9DbxunF+/S9Fer28pyICeR1tNeeYqocDBPI6
moajT5vShgnkddTZy+gfeSSBvE6ulpNwPfW8kCGEacWoBNSXPPz6fdMQgXyN
oPeK9tawTuxrek21JkeZ87CveZx9MM8voRf7Gkm7QnZzmhD7Gt2O7PIbP/75
mpJXL+THtguwr+mZu3XFpjge9jXvBte/nPirA/sa33PAL4NVj32N/WXx8016
//LzC71VOssCSwDyNeuqCwblB8qxr9m5oavRMqUS+xoLTvTlOIca7GtoE6UM
tpnWYV8jCfwDrruxsK9Rat/yTpPOxr7G3ND2d7s1G/ua+DnWTokabOxrlKTG
y7UFnQD5mtMD9FNBod0A+ZrHrvLzc8z5APmagiAf7+v7+NjT2KikZc2bOUwg
TzNb1+i7oIQkcmcXySo8p8EYmeUjnwtJAnmYcO+PGg28Huxh/Jerh62xFGIP
Mz16R8FluX8eplY1KTNuSID/H2y+6/h6/p5H2LuURE4Xb9ZmYe8y1XaZSlA/
C3uXXMtbOboWbKBYsnjxcCwDyrjGvKhaygbIu5CdbZevxfMA8i4K+wQr1Kj4
wcg7+qBgNx98YDhuKKLmV+RdzFLrbgfNIgnkXaZMOGCZTMUPC9b8OXl3pQTc
En7NasJ8kkB+ZeuKaOLNagH2K7P1+JFhPULw1Lyl0aGIDr9OJzdWlAnBTYPC
YlswHer+uFJpEdGLPYs768BjGMvCnoU2IZU/X5cN3u/eptS+gwFNBx7161D3
F/mW5e9ueIjJsgHyLFoC619Oc/lAgSb9sYXLBcB8dlmoNx97lrXOPrFNiSSx
JVLr1MlIGmwkzWJ635EE8ircmhNvM2SoeCfHdVeVJx3amTY7dE8TAYuZ8nfm
C+jwk/rA7OsmQuxZHGLClvZz/3mVG1+dPuWZscHLcI97LtcY8MVCmytFq9nY
r7CXb+4s2c8DyK+MrOcyD1DvL+RXWNJy+VO6hwnkV9zsbyfTvpME8ib60lO1
L9YKgfrAsHpKOh2WbaDvrOkQYm9Sa3BrVqQqG8w3+WSkbsWAi+8bjS6k4gfk
TRzaszoGqPv8TV/ujGVnNzj2OVZVeyMfe5Pk57nTmj6QxKjtwlfG1+nQ8kB+
s5KUCDAFrYceaFPrsSK7eUup+KFdXd41vZMDDi+X0fh8gQ8C9g4Ev7SlwWtq
m0JrvpFEpaK/Y6A1HUYlnkoSjFHxTsSr4GnVVLwsw1zgkSDEPoR1zimoewkb
BF2sH4t3Z8CVZrcutVLxA/Ii2cucu1aJscHec5VZxAMuKP11s2XPKT5Ifuuk
nXqJBjXKWxYWUvHOrSvHJ3x1ocM3yy6EDFPxeKhMaq71BAa0Sd0lKaD6/6Zf
sH1MAAPOUB7TSqXuD/Ih1Y8MRCbU8VRLT/Yoj1DjWdLqUh0V/zRVi1dXJtHh
E7/todO/CoFNSrS5OWTA5CmHqhdT/Yk8yL7Hmlb6tnyAPMikhMG3ZTUk8VTb
1G1XIB0aMITmS2RE4NuOxHPMOQxYmXipt426PrPjrRJTEjkg1cI8qpAaf4eb
jx+IAzTo/sBxjyoVL3Zas+JnmtPhwsl1dJMhIcj8Fj7l1V4GzDrk2aX3X/zc
ZP8k5TgdDntm3JlJxbfIb9gYJO0p188CNHnv9eyZHODwB5ZIUvGdBeuE1u7Z
NFg1soRtRY3f0SoFLTFbBmQuTH78gRpPyGu4h6z1kzjAB8hrWDzee2NxO0lY
nFNTpIfToX+wnPoyMRFI9FNxCjJgwGUfv51aSv2+f/36MksNLjjpc3b5LT8+
CO8+9uCzMw2O17Uff9pLEtlc/VnfttDhgMLkigwJEXCcMa3fx5sBQ3Qsalf+
N1/99Ronxsc6OT9Z2Gtss/ebnEaeBMhr7C6b1q9b1YDrNQQ2ul6Yc7sDIK/x
x2Z073k2FyCvcdY9mGk+zAPIaxyxGOsdocYb8hr2C3dL9D3jAeQ1Nt5SstAa
5OL6DwdbyG3LorpwfQcvafYsnlwDru8glWly5YxzOa7vkFVfGObhFkGg+g7L
23sNsu1rsf/Icyk7tl+1h0D+o1057suWk/0E8h9XFyZXDzgNEch/CFwP0ZRO
kATyH+6zyb46LhUf/PUfXsEDMRFvhglUD0Jyhb50Vc0grgehNT8+eHVXP67X
cHlJBz3Iqg17jaKC254pU7nYa/xcqf/eUbYHe43dGx2sDpQJsNd4GnMqT2ny
P6/hnC61Vee0EHuNmnlFAbeKe7DXGN9m8eSdChd7jcElueOlkp+x13hsveyK
fAiBvUbY/OCQXfXPcb2H000Np5R9SrHXGDVZEben7w32Gu/FpEUnxaux12jR
jKYPutRirzGztnHVgvY67DXaQh6FjFWwsNcw0eyFwhVs7DVCl19qKaXiReQ1
xl81jOjtqMD1JO5rzBXXy24ByGuErlJtY/7oAshrDGkq7zilwgPIa8xs0K3x
odavyGuMX8/dWbGMGu+pK/78OSwAb0VuV72+duN6EdNDIit9b4sI5DduBm2U
/nF3gEB+Iz7+XEx04jCB/EbG9sAghW6SQH5jeGVjwldfklDKFu1u+ikBr5nL
LWF2DBHIW2RLLCJTz3dib9Gz9mBPmCEPe4v6ZOv23PBe7C04LYkvSpKE2FsE
8jJ/df765y1OOl5zG9onwN7Cbf2fxPYsHvYWiX3CCjf5Tuwt5oZot7spN2Bv
ob32orc2JwfXm5DfpUYe3FICkLcwMokp3N5Rjr3Fz1X6PpPvVmJvUbjYo0fX
tgZ7ixnigWe8jOuwt/CvM7QbdWZhb9H3IWrSDjk29haCKQYSr6j5C3mLwxkB
+QJNNvYWxb6TjaU/dQLkLe7cdq1dFNQNkLcYFloZSQM+QN7C7nWlZroLH/sK
qySrq4YywwTyFQtfzKr0ekESQaLLIx15NPhNKVtZv5gkkI9w0g7QK2jpwT5C
837Gja1QiH3Ej753ohnT/vkId7VzT7aPCbB/UFNfyqycz8L+QXxP2GWTbyzs
H9b4qOXmrGODuoKfX8qiGXD8mNzKl8vYAPmH3DvK59/d4QHkH2I30XeVUO/3
yzJXE+fZ8MGGIf0Xn8Z52D/sCBPKDCqQBPIP2rvSDYqo94vYdJbz/mUSUDDn
1AhLhySQZ8gaf25qbyzAnoEvPjTi0C0EyYUJYy4FdDiUE7lfyBSC/NY5yYtW
TYdTncX0L93vxb7B/1H8qkV3Wdg3dMn4HavTZgPVggpH/nYGvHtePNmRup/I
O1zcHPoiibrfyDfkNvs9bpjNBweTfk6Z8YEL8l+9XqB6jI99w3hhtNyJWOp8
9w87wzAaPHXS5N7FRpJAfgFI/dRrpgkBU0M7qP4gHfpK1utG/LefpMznvHgP
HW4MDkrQXi3EvoF5uiZ6jfEz7Bdsj+3ImkTFH0dvGmw0uMKAD73F5vsBNvYM
vxa9tNRy5AHkGQJ08pLhOT5AniFjUlF1StswgTwD0afsqtFPrQ//+oOU+D7h
9kohkD1YtCHzITVfRw8LpbhC7A+YQTVlYrPZ4Mhty7M6FgyodrSOZ0LFM8gf
zMyvJHQd+ADWjWcG1HeDQ8ofGt5u5mN/oBZ78d5Kqj8EzH7+6qt0mDSlh3N9
kghMs9iYk6XJgCZ7g4x7rdjg56ngutJ3HGC66+MiYyq+GfGb7n/ChgZ5XnZm
NX0kEcq9fdjdig4N5Yh1mSNCYCQdmKNUSYcj3p9LfZKF2AvYRPu4Mw3ZgN1q
ZvbAjQELNtp+XUodH/kB2H5OIDWRDfJnFnB+3qHe20+emqSc5oPTiQsUjl6g
weLyqde/tZKE75ixHrmPDhX6jqga/fd5rfuMoS1/FOEOn6jdOlR8aH7Whubu
z4BSb/fUbzZnYy9Q23r5/OMT1PqhPbKjgRSHY6nOLaeFJMEElQPv7tGhjJu2
fmufEESNT7psvZoBta+uc9eg+hP5gEembXY/qXGDfMAVxdFdBZUkkZw4Hro/
gA5bPbzvGk4VgWVPZEvYqgxIfyIedY6KD3cxNx2Zd5MDVMDgs2dU//F/hDtt
NaXBqV0XHR9T8eEjxc7MEUCHR1mTNXy+CwG5Xnwzcw8D7tA3kDtBxYfTNim3
ZR6lwwjF95ZGVHyI9vPD4jVdy5tzwCz3zjyeBAdsnejFXEPFa6XCCDV5JRoc
yc615FHHt5h/2XPSJur5nPAifpAaT2j//tFrX6am7+cDtH+/Ye8Zd1obSRj1
dUHlMDr8bZZ8RmWiCPQ03UgK0afiu5Koh3+o84nSKNbdN4MLjvZ/mbWWikdl
aeEJEXuo9U12/vF5VH+ezDNf0GhLh4kfP7zvFReBNO+AJUFe1HpvoolRJhUf
ov37teWsxtLfLGBvF7X50GkumGNzLGj4LB/s7C32n7SHDtVSX+s4UfH2tNyd
zBbHLrDoR6yP5VE+CJv14Z35N3F4UsO52KeHJHSf9crsXsGA3v0qQaPU9fle
D+465UuH8VamVq3U83H9yBKw7RAHfHVI1PGg+r/NqHFTuSENzpkRecWLmt+u
i3E/fHRgQF27pcoD1PUJlicZEIfp8GdX1T0Vqr9t5JiBitwuEGXQLjrhwwcF
2u/lLk2jQd2McbcKaj3X0nLgO8OaARvl3KvVqOdF9rNH5IIQOqSdu2wdQsXH
vrcOayfoMuAqWmbgBer4TNb9kbABDoiRkF7iSc3HNLOGm+LbadBM/8Pz7K/U
fLvB0ybBhg41jTSeS1PxeTI95xPHlQ69Dk5YEScnAinJ2/pd/ohDTa9nz6Wo
9dlEK+0/y80Z8O352vpl1N9n5p8xtQuiQ1dx5VuKU0RAW9UzYSCbA/qPVEmn
Utf//cWWI5w1NKgacHHvSer8jVwirsWepMOJr9rqW6n5D+1XD3OyLR1KyQCi
V6Mdz7Q4wD4zYmUedb9rsrcuSlGnweddWukhVP/lez3g/LBjwG1fOZfyqf7f
Nvexsq8hA7Ya7q/0oNoH/D45LDLhAiNxye/lvny8X17YEjdhwg/W//t85P/+
fbRfPsTRWeJbQDp4/UI0z/4n9+/3xcQUEi4c0J4jAVGbI7JeUkatp1D73/76
//1Cx0dtsYcKFqqODNxG54PaaD8yav8Pmn9img==
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{565, 3251, 3249, 564, 968, 860, 770, 697, 640, 
                603, 987, 879, 789, 716, 659, 1003, 895, 805, 732, 1020, 912, 
                822, 1038, 930, 1057}}], 
               
               PolygonBox[{{1054, 3248, 3246, 551, 552, 553, 554, 958, 850, 
                760, 687, 631, 593, 985, 877, 787, 714, 657, 1002, 894, 804, 
                731, 555, 959, 851, 761, 1023, 915, 688, 1009, 901, 1045, 811,
                 1033, 925}}], 
               PolygonBox[CompressedData["
1:eJwV0rtL1XEcBuCvWZl3MzumQtmiSyDkZt5v7f4D6dFKK8o2bSpSK6hBMMK8
dRu6aGUOLlY2l+ZiLbqUmpkuQZCD4PMbHt73/XzhnDOc4/ErTZf3hBASmGYi
LYRxmh3L+JwYwhn2MWPfJIXndjk/9EFaOMUXt2b2897uIZUXdgU/9YfEKSeN
dF56q2RFH6KVCjJ45V7Fqj5MG5VkMu5ezZo+wlmqyGLCvYZf+ijnqOYgr91r
WdfHOE8N2bxxr+O3/oh2aplzayGJD3Yvh3hr17OhP6aDOubd4hwg7A1hQObJ
j976WLG7OMqi/V/e5SQ59qRs4I++I/t5om/K6xRFv8XnDckL7kuyk2y3mEyU
D2SBnPP+T79Drl0iU+WYPCbrvX/VW8myk2WCvC/z5az3v3ofMfuETJGj8pa3
VdkdfVb0X3EflN/ct+U9Sjlsv5ONbOpP2dJvUMxFe1lejX4j83YDC3pb9H18
sm+zpl+jkO92jCn9NFv6My7RSC5H2AXYiVdk
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{516, 3247, 3244, 664, 737, 827, 935, 521, 642, 
                699, 772, 862, 970, 569, 607, 663, 736, 826, 934, 520, 641, 
                698, 771, 861, 969, 568, 606, 662, 735, 825, 933, 519, 567, 
                605, 661, 734, 824, 932, 518, 517, 566, 604, 660, 733, 823, 
                931}}], 
               
               PolygonBox[{{995, 3250, 3249, 602, 639, 696, 769, 859, 967, 
                563, 601, 638, 695, 768, 858, 966, 562, 600, 637, 694, 767, 
                857, 965, 561, 599, 636, 693, 766, 856, 964, 560, 598, 635, 
                692, 765, 855, 963, 559, 597, 634, 691, 764, 854, 962, 558, 
                596, 633, 690, 763, 853, 961, 557, 595, 632, 689, 762, 852, 
                960, 556, 658, 715, 788, 878, 986, 594, 724, 797, 887}}], 
               PolygonBox[CompressedData["
1:eJwV0klLVXEcBuB/JhJ0naqFOZRXLVJQCuoz5NzwEYRGyyGHjbmpoHKMFhHR
IhfN6aqyrDaVlStTG6xF00bdqKUpFIjPWTy87/s7VzjqjdfUH6xLCCGsYZj+
WAgDbHfcRgH7aWWAZQ6sDeEF+fo+WuhnKfqs+3Py9EuMsME+wSTVdjMP+Bv9
vNsz4nov70i3a/lMld3EfRapdhsiV+/hLWn2cT5RaU+Qrbfyi1N2kTzHPPfs
Bar0p2zV98he/vPVzpftzNBtl8gLLPLGviITEkNIlenymPxIhWe59g09JnfJ
DNkplxmP3s2+qifKLLlRtsifNHqeY1/X18lCuUmelXPc9fyyXOGPnupZpf6E
LXafTHbbLXv4xxf3azLJPU+eZpou92J5ngWG7RR5lA+U2ztlB0uM2ZmymR80
2DvkGWa5Y/+mQh8kR58krrcxRaf9mmT9CBOU2e/ZrDfxnXr7NvOU24/J1jt4
Rcw+HP09KbVHyYj+13wj+lLfYo4y+xFZ+kVest4+FP1O7LVPcpNZSt0ekhm9
E6u/hGW6
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwt02dsllUYBuCyh+y9peyh/GGUXQr+kL1klgRlD4FgFAQUlI2RIQqI7C0o
Q9EylCUQNLK3AaQoyBIIQ8OQ4PUk/Lh6389p+vV7zzlvYq9hHYZmSEhIGONH
5Lt+5OAvNpsPyZ484G1zmnyVW9wzn5NDaKkvlzW5oJ+U/Vis75WdeKbXZJae
yK/6x+zQ2/JI78V6PZnr+joyMsqck+/0d2jFCnMtfteXUItPzOU4qE+nN5kY
be0FvtdH0JraZCYLWcn2fB9ykaaPpA11mG2tPIf0GfQhO+9Zy82W2DvaksSn
1ipwWJ9JX3LwvrU8bI1noh0rzbW5qC+lLp+ZK3Ik9ot+5GSstbxsi2eiPavM
dUjXl1GPOeZKHI09Yafejsd6fzboTbihn5ED+Uo/ILuRKfbLPE7mY7t+WL7O
GH2LbM5t7pvPy7hIj+lgXi2T4vO5ZD4l+/OQ5eZ9sjN349LxR9wvnlLf0lxZ
mWscMx+TvfmX2eZdsj1P9ItyOAP0jTKFm/pZOYiv9Z9ldzLH+Zo/kPn5Ic6Q
rXqLuOd6R9bodeN7xT2jAfPMVTge58tANpmb8nfcW3LzobkAP8Z58xpfmuvx
Z5w3DfncXJUTcd4MIg/jrRVkR5w3nWjEfGvVOBnny2DyMsFaIXbGedGZxnxh
rTqnYj95k3xMtFaYXbEPdCGZ/EyyXoTd8Rx0pQkFKEghClOEohSjOCUoSSlK
U4YXKUsi5ShPBSb7/KLsiWelGylUZIr1YvwUz0V3mrLA2kucjnNgCJWYaq04
e+O5SGVt3CEux7tBMxaaX+ZM7DtD+cbcjFvxPlCZaeYS7Iu9YJvekn/0HqzT
G3Al7jj79S5k4BXzIlmDs/px2Yf5+u54L/hPT5dvMUz/Nv4u7k+8S+bf5GA2
6r/I1Hi/yBLPwwiexT30+49kSa6y33xEvhHflcnm7bIVd+K9MV+I/xnvDP8D
qh66iw==
               "]], 
              LineBox[CompressedData["
1:eJwV0jcvRWEABuDLgB+hjurFjE1NGDAY9ERiEDXiF4jOrpsQBnViYdAHiUSi
RCKixaAsSBDPGZ687/ude+49OblJjW3lrRGhUKiXHOVBzpPPtB3mQh9nR6/g
V29nXc/nVV/hSK8mimR7SMayp5/KRvr0LVnKp34j26nRl2QuLzza57KZbxbs
PVnFB5Hc0c0fBa7PyEyeubTPZFPwO0zYu7KSt+Ae+1Z28UOHvRF8T3Bdv5Qt
rOrHwfMRTYo9LOPY1/vZ1sv40mtZ1vN40hcpZNbO4kqfpJNURpzFc6APUEcR
aYw6T+BQH6SeYtLJIEwmWYz5XCJHwXungRLmnGVzrU/RxaZdyLu+xoleSwz3
9AR/iEj3iX88akng
               "]]}, Annotation[#, "Charting`Private`Tag$423296#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1GV4VnUYB+ADjBgMBkNGDJQBknbR3dL4VWq0EiJhe0lKKIhKt0qZ2Era
AkpLqaS0dKOXcT8f7v2e33NgO9d7/ufNzhnceVCuJEnW+5GSO0nezJMkNdln
fp2HeYC85OMt12qx3zyNLtQkP4vta3PAPJ2u1GKDXRfysFIfSQGW6HU4aJ5B
N2qz0a4rKazSR5HKUr0uh8wzeTctSbrLOvxk3428rNZHU5Blej0Om2fRg7r8
bNedfKzRx1CI5Xp9/jDPJod6pFGYt11rwBHzHHpSnyK8Y9+Qo+a59KIB6XGv
9o04Zp5HbxpSlPfsG3PcPJ8+NKIY79s34YR5AX1pTAYf2DflpHkh/WjCJrse
5GetPpbirNCbccq8iP40ZbNdDgVIUjx3WVquc20cR/QnuZmd+nX5Evdwk/6h
bM6f5n/kVN4wn5YvUDnuxe+bIx+x/10+RoZdZpwLOUNmyU2uXzFPoKR+pywk
F8hbZDPXt5h7UlRPlbnkNFlGfuX6RfM4MvXbZEE5X77o2lH5VPyuOCv2s+Qu
+xvyZe6lhP6RbMHpeCc4Yx5JFR7V98khcY9s1puz1dwr/h5f6+M5Zn6a8uzW
M/nY3JIz8T4xgBaUpFScB+e6tCzDJ/5dK87G+8VAWrLNrnd8NnyjTyCLT/XW
nIv3i0Hs1x+nFFv0Vmw39yGNb/WJlOUz/UHOx/vGYA7oQ+NMsFVvzQ5zXwrz
nT6J4+ZnyGaPXo7PzW24EO8iZ82jqBpnQD8oh8WzY5t+VU7krrgP/RfZjyJ8
r1+K58jtcQb1E/JZKsS77HnOlnvt/5KTuS/u0X5RnF/7L2Rb0u0u6v+aX2W5
+ZwcHWfatWrxPsi5spwc4voh83CK61kyRc6UZeV216+ZJ8XnrN8dn61cGM9e
tnF9p7k/xfR0mVtOlz+4dlmO5444h/pJ+RwV+VX/W07h/ji7+peyHZfiO4nz
5jFUj2etH5Yj4t7YobdlV7x/8d7woz6Z8qzU23M5vsMYSjt2x1mP+2W9PoVs
VukduBLfawyjPXvsBpDBBv0VKrBa78jVONsMpwMVWWPfiWvxXccIOlKJW6kc
e+9DFVmValRnrf/TmevxPcgTdGKv3cB4RmzUp3LK/DyV+E2vwTrzQ9ww/ydf
Y4X5ghxLCc+mhkyV8+LsyP8BaErdzw==
               "]], 
              LineBox[CompressedData["
1:eJwVzzk2g2EYBeA3oXRUUSpS6AwxLiQy/r8qC0hKY8QSHHZgB2Y6JMI5lKrQ
Ke2AGB7Fc95771d9+Uar2MxERML7SMQ6k7xkI4oM5CY5nvQDprnRS3zKx2yw
ygy39jJf8gmblJjlzl5hKJ+yRZk5uvYq3/IZ21Qo0LPX+JHP2aHKPPf2Or/y
BW1qLNC3JwSX+i51FnmwpWS40jsk//8Zi1hyH+1rZLnW90h51VtM8Kwf8iF3
mOJNH7r7rDA+GnHk5t1lb3/qhjBP
               "]]}, Annotation[#, "Charting`Private`Tag$423296#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1GV4lWUABuBDN6igdAwY6uhmYwxHDgYGeCmpNCgxfiipNBiESkmjhEGn
dKuEdINKg0GDNKj3++PmeZ73+zbO2b6zqHYpTXqkikQit/0TnTYS2Z0uEnmD
xPSRyB27lFxlN5Lf27nlLLueTJTV5Db5vmup9JF6DBX0DfKU82L6Ir0xb9p/
y/fIyXa7oOvf6fUZa2ezJ+lVuWyXYE/4Wu7q8+hFaveNclaS03YzLofXQi52
2ON4nr12M+7p8+lNc17gRWIoGd4vpdnn3ubc1xfQhxaUYb/zFjzQF9KXllxx
1otn2WmPpywH7JY81BfRj1Zcddab59hlT6AcB+1WPNIX05803utoZ6U4Y7fm
mt6H3PxiTyS7+yaH3wtX7PIc0lvzWF9CHvfMtmvxgZ3WHqOX5qxd3F6sv8xb
9nXZlzyUc22d3O28UHgm9CSZJKvLn+Vr8kvXc8gpdh0ZKyvLzeH7yqvhZy+X
2w1lE5kgd8qmsoLrh8P/H16n/ST8XuRqe6meV5+j1yZW/1F+6Dyd/plehor6
RnnOebS+RH+Ft+0bsh952WMXdn2e3oBJ9lP2VD2Oa3ZFjoSv5V99GQNI777P
nZXlvN2Gm3p/8rHXnkwljtpt+E9fzkDaciv8HsjPPnsKlTlmtyXCCnsQ7bgd
3isF2G9PpQrH7XakYqU9mPZUpRqxxFGdE+5pT2p+sIfQgXhOOutAGlbZQ+nI
P/YACnLAnkYNfrU7kpbV9jA6ccceSCEO2tNJ4De7E+lYYw8ng5/jF+H54oLd
mbv6IApzyJ5BTX63O5OetfYIMvr6sXZ5LtpduKcPpgiH7SLumR+eN2baT9vT
wnPLdfslTuldyMA6O5975oZnmI/sTPY4vQKV9E3yUvgbpS/VX6WGvkO+4/y+
HBKeU2dR4fXJ9bKxPOJ6lFwQnjuZLOPldtlEfuX6M3K6XVfGyypyS3iO5Y3w
t0uusJNlU1lT7pKJrp0Or4GM4fPgfI1c7zy//k34nnxsZ7bHh88Lf4S/l/ay
8DnmXfuBHEpRjtpfk9M9M8J75aZdizPhfjKxwf6ELO6bEH5W/Gl35aE+jGIc
s2dRm7N2VzKz0f6UbtThnLNuZGGTPZLu1KUe9UmiAefd052sbLZH0YNH9nCK
c9yeTUMu2D3IxhZ7NCk8tkcQzQl7DslctFPIzlZ7DFm9z4l2Zf6ye/IkPDOU
4KRd1D0L9UbMtXPZM/UEqupb5S3nMfpK/fVwr31J9iQHZV1bK7c5L6B/q9eX
9WSc/Ck8g/J/MbT4YA==
               "]], 
              
              LineBox[{1431, 1334, 1258, 1137, 1534, 1416, 1319, 1243, 1190, 
               1557, 1440, 1343, 1267, 1101, 1511, 1393, 1296, 1220, 1167, 
               1138, 1535, 1417, 1320, 1244, 1191, 1102, 1512, 1394, 1297, 
               1221, 1168, 1139, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 
               1513, 1395, 1298, 1222, 1169, 1140, 1536, 1418, 1321, 1245, 
               1192, 1558, 1441, 1344, 1268, 1579, 1462, 1365, 1600, 1483, 
               1620, 1110}]}, 
             Annotation[#, "Charting`Private`Tag$423296#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1ne8z1Ucx/GfvSPK3hktI3tvFSote1+7cG3CdRGy3cresmdmhGwZhcre
e5aRUBR6nj9ej8/79T7n+/i533t+58oVFf1hp3iRSCQufiRSP3Ek8nPSSCQ5
opNEIk/4KozAfV0RTNTnxQldA+zXpUBn3VO+GiPxQFcUk/T5cFLXEAd0KdFF
94yvQcZkkUhd3UZdDYzSPeTFMJnnxyldAfs66H7lzdBId5CnQlceQXl7+vEL
8lrrmXg9vonXRB0+jj+SR1v/Wy6OKfzl8PnWh/Fb8mnrBXlH/hvvKa+Vm8tN
5enybDO+OczcbTb2zC/mcxit62ZvG3Men2vG4xXMmPBuzIu8r7mBLzO/83xm
sz7/yvzBehdzBV9k1uJ1zfF8hvmYDzZ38DGe/ccsgan6Dvol8ivhZ5eHy7fl
M/YV4p34Id4CTXS/8tTozuNjnS6LfQ10m/k7GKt7xEtiGn8VZ3VN8ZsuDXro
EmC9Lg7NcEj/PHrqE+J73ZdojhaIQku0Qmu0QVu0w2HPpUUvzyXCBt1XeKwr
hem613BO1x5HdOnQW5cYG3VZ/RwNdVv4u/ha9y8vHd4jfx3ndYXti9Yd5lH4
RHeUv4DPeBJUtKc/vyRvsp6NN+Jb+Xuoxyfwf+Vx1v+Ty2Am72htqVxAriWP
kO/IF+x7g3fmR3ivcBbkluGsyzPkb8wE5nBzj7na/NRzx+QXw++f97G/rTmf
zzOT8kpmbPgumZd5P3MjXx7Ol+ezm4351+Y2613Nlby2XF+eKP8nD5F3yuM9
88Qsi1n6guFsWBvJ78oXrRfhXfhR3iqcRd1xnh59eTJs1k3AU1258F3SFcIl
XUec0GVAP11ybNFNRCdE46S1jIixlgJbdZPQGaf0mdBfnxLbdJPxTFc+vEtd
YVzWdcFpXWbE6lJhu24KIn6OCvo5ujdwRdcVZ3RZMED3HHboctjbRLedv4+p
uni6iuG7z4vgqq4bzuqyYqAuNXbqctrbVLeDf4Bpuvi6SuF3yYuGs8tH8T/l
a9aL8q78GG+N7rpzPBsG8TSobM8AfkXeZT0Xb8Z38g/RgE/iT+Tp1hPwynw+
7yQvC3dxONvyaPmePFDeKl+3v1i45+QJ5nFrvc11fKnZhjc3Z4Z3aCY0R5h7
zTVmD8+fl7NjLP/c/nbmgvD55vO8ijkw3NHmVR5jbuI/eja33Fzepe8mr5I/
khvKk+Wn8gz7EvIqfAEvjtp8DP9LvmG9OO/OT4TvT7jrdRd4DgzmabFbNxOJ
7K2qX6grgZu6Xrioy4khunTYo3vJ3hbh38o/xixdYl21cJ/zkuGs8LH8vvy7
9RLhvfCT4V2E+5nP4onCnWb9kpkLQ621t7Yw3E9yVXmQfE3uH77b8l7788hR
8rjwNyqcEXM1X2zW4Y3MKeF+Mp/xoeYuvtKc7fkkZnUeZy62Hm0uD+/SLBXO
qhkX/h6YD/igcI/wFeYfni9p9uQTzVPWPzPX8/bhjg2fISfGSHlfuGc9c9nM
jS/CHaxfFO44uVo4I+Hcyfvsy8tb8j28LhrzqTwSvuPWk/I35SXWSofzzr/k
D+Vb1kvxXvx0+Bz00V3hL2EYT4+fdPnsaxXeZ7jfMUeXTPdWOOe8DG7r+uKq
Lk+4p3UZ8LMuv72tdfvCnYq5uuS6t3XLeFnc0fXDNV3e8D3RZcR+3TyksL9G
uLd15XBXF4Prunzh/eky4YBuPlLaX1P/ra48/tT1xw1dfozSZcZB3QKkCv+/
CL83XQXc08Xipu5ljNZlQXX7BvMbcqy8OXyG+T/MKVvu
               "]], 
              LineBox[CompressedData["
1:eJwV0klQz3EYx/Fvl5ZLdl0shYMW0jHM2ONgrRwsOdiiiIsZcolUzBhL4UIz
BoeUrYTqYsbBJZLdxXJW2UKFg9f38J7P83k/z69+9f9nbN1XWJEQQujBzuQQ
upNC2ICmxBBSU0JYybXqCzDIVaGPy8QpbhJ6uesY5X4V38YtxE/uCPq5LJzm
JuM514zR7lfzd7lF+MUdxQCXjTPcFLzgWjDG/Rq+nVuM31w1vnA5OMtNxUtu
pttS7om+ETe4sdxa7p6+BEPcMXzlZqGeS8crLtPtLu6pvgk3uXHcOu6+vhTD
XD53kHuvl6OG+6bPRoOegQI3Nfpn82v7LH233qNvxi1uPFfIPdCXoUiv14fM
I/Zz9UP6B30PtulX9CTU2n+XuTgX38Ou2TzNvNxca74o+/Qq+VB/45lsc5n5
vHxmd0C26y2yRC+Rl/TLMkHWycfx85W3PT9BFsX/u+xwvz96vUkW6MWyQW+U
w3q1fKT/8ew8c6X5I19p7jTvNW83XzUnx9/n7oecE9/RbjpW2Nfp/ea39jl6
ud6rb8EdbiJXzHXGvx9/ueMY5PJwgZuBd1wr0tyv57viz8c/bj53mPukV2CH
fk1PwUlzd/weyRNu/wMAk3Ii
               "]]}, Annotation[#, "Charting`Private`Tag$423296#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1HWUFlUcxvGhlFK6W5BWWgkJpXVppduWjiUkBASVbiykMRAbpKW7uxeO
eo7Ekrv0An7uH9/zxPxm3nfi3kJdezXvmSyKouLJo2hVmij6L10U1cGGtFHU
FllwWZ8hfRR111+QR6EqVusv6Opio9wOWRGvz2i+h/6i/DGqYY3+oq4eNsnt
kQ1lzE7QpcYC+Yq5TLqe8iV5NF7CWv0lXX1sljsgO8qanahLg4XyVXOZdb3k
y/IYtJSXyWVRXa4hz+Zz4nd5nXMu8w2wRe6IGDNL5KLIIZeTJ/Fp0Y8/SBeF
WX4tXxkj+Dh6zfWy8L358TTeXC+6V/6Eb8Uv56fTcnQYPR3+P63heE36jTyZ
5qID6VE6l/7h+Jt0o/wFrU5H07/pd/Qvvx3PN8RYeav5D+gOuRPfiP+RLxbu
Xy4vT+bTYbHcSV7HV8F118oq9+GvOPZp+G+opZujy41l8npzV/hXsU3ujFy4
oc9mtq/+qvxZOBcb9Fd1r2G73AW5cVO/Edf0Mdih64o8SNBvwmZswXXHG2Fn
eB7Ii0T9VtzQN8Yu3VvIh1v6bbipb4LdureRH7f125Ggb4o9undQAHf0O7AT
iY41w179uyiIu/rs7rFfeO/yWLyMXfpbuubYJ7+HQrinz2G+f3i+8ji8gt36
27oW2C+/j2dQwewUXXp8K983l1MXK9+Qx6O1/KdcHrXD78tz+TxYLu9xzh3+
dRwI3wMam1kqF0dhuaI8lX8K/flD4XsK7zJ8U3xVjOTP0Qeul4sfwE+gN831
pvvk2WE9y23oCnkGrUCH0zNhzdA64Z7pPHkKzUsH0WN0XriX8N7oJvnLsCbo
GPpPePZ++y59AwfNddPv5LvxTfif+BIoIleSp/FP43s5ybm5dQPlBHki6qK2
br4uH1bI+8zd41vikNwdz+KhPo/ZQfpEeRLqYb/+vq4VDss9UBSP9AfwQN8a
R3Q9UQyP9QdxCIdxBEdxDMeRZL4Njoa9A8URhe/c7w/W3+Inoz5OmH+oa4tj
4V2gBJKFb9/8h/rb/BQ0wEnzj3TtcFzug5J4wex0XQb8ICcP60M3RL7DT0VD
1NEt0OXHSvmU6z3m2+OE3BdNzfwsl0Qp+UV5Bp8RS+QUYX3phsp3+WloK6+U
K4a9JLwbeSFfAIP543RVWLf8Zv4rWjPsqfRfetr/iPgO/Dh6Mrw7ukv+OqxR
uRn9RZ5GS9EhYY7Op6Udr0xnypNoJhpLD9M5Yd8MexVdL8+i1egoep6mDPsB
P4y/F54pv5+fzrfjV/GVwp4Xvhl5EV8Qq8NeI2/ha+GMe0gmd+RPOdYfzeVf
5dJ4Tq4iz+IzY6mcKuwtuuHyfX4GYsK3oVusK4Q18lnXTq7rFJ6VHIvn8UTY
a/QfhbXNz0QjxJlPoe8c/pc8AGXwJArrR+iT+FlhP8E58yn1XfRn5YEoi9Qo
oh+pf8h/HtYqzptPpe+qj5MHoYX8W7hPDOVP0QX0fzckM8Y=
               "]], 
              LineBox[CompressedData["
1:eJwV0ctTzWEAxvE3Uc6l3FlLucu4VSoLbFw2JNQMm1y6GJmxMCOXkC4YCwtT
nQgLycItO5eyKWZYWFi0MZzqnPBH4HMW33me7/O+8/vN+Z2ldWeqmrNCCJ/Q
HQthAZ5FQ4igKB7CNf5X78E+JCMh5NiP2X/w89iAKJbb2+z/9F7sx4T7ufbj
9p+8BRsRwwr7dXtAgldh0v3Z9hO2JL+ATYhjpb3dnoU+fgBT7kfsJ20T/CI2
Iw+r7B32GbjHq5FyP2qvt03yS9iCfKy2d9qzcZ8fRNr9mL3BNsUvowTlth7b
Qjznc7DG1sVnop8fwi7bAC/AOz7teXFbI0/xVpSiwtZrW4QXfC7W2m7wWXjA
j/A3egkO8938ib4M73k9H9W345f35PEmPe3stP5Zv5L5DvqQXowyXskT+mKc
07/Jl/Y6/YPeLStlm0zKATnP+Tp5k9+WOfKs/Jr5dvKh86PyLb8rS2Wr/C4f
yxrne+QgvyMLZYscl8POGvQxfQc69ZT87Tfl66f0aXea9S/61cx/pb/W12Mr
38b79CV4xeej2HaL5+IRr8Ve21NehBHeyD/qO9Glp+Wg/OPd/wFj3GOG
               "]]}, Annotation[#, "Charting`Private`Tag$423296#5"]& ], {
             Directive[{
               Opacity[0.2], 
               Hue[0.67, 0.6, 0.6]}], 
             LineBox[{514, 515, 513}], 
             LineBox[{1059, 1060, 1058}], 
             LineBox[{1622, 1623, 1621}], 
             LineBox[{2487, 2488, 2486}], 
             LineBox[{3242, 3243, 3241}]}}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"feedback solution \"", TraditionalForm], 
         PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1c\"", "\"u1c\"", "\"x1c\"", "\"\[Theta]dot1c\"", 
           "\"xdot1c\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.8648376866338243`*^9, {3.864837721244707*^9, 3.8648377460817285`*^9}, {
   3.864837800602215*^9, 3.8648378151965265`*^9}, {3.864837882180011*^9, 
   3.8648379006680717`*^9}, {3.864917359659708*^9, 3.8649173767071624`*^9}, 
   3.864919300876232*^9, {3.864919337508316*^9, 3.8649193485657187`*^9}, {
   3.8649194958228164`*^9, 3.8649195287531037`*^9}, 3.864920239187001*^9, {
   3.864921249563326*^9, 3.8649212721359825`*^9}, {3.865342438564925*^9, 
   3.865342509036396*^9}, {3.8653477634896584`*^9, 3.865347782729508*^9}, {
   3.8653478492912292`*^9, 3.865348013067874*^9}, {3.86535368874548*^9, 
   3.8653536939258237`*^9}, {3.8653538219528966`*^9, 
   3.8653538384286294`*^9}, {3.865356737715789*^9, 3.8653567547593403`*^9}, 
   3.8653569273791575`*^9, {3.8653569657139025`*^9, 3.86535700435555*^9}, 
   3.86535703851363*^9, {3.8653570911278105`*^9, 3.865357172559778*^9}, {
   3.865357210731576*^9, 3.865357232535606*^9}, {3.8653573843380775`*^9, 
   3.865357407024825*^9}, {3.8653574402422056`*^9, 3.865357560552746*^9}, {
   3.8653576116883984`*^9, 3.8653576483786693`*^9}, {3.865358188766919*^9, 
   3.8653581946510377`*^9}, {3.865358314589696*^9, 3.8653583435974226`*^9}, {
   3.8653592266591263`*^9, 3.865359247679407*^9}, {3.865443792998208*^9, 
   3.865443801104616*^9}, 3.8654440595339727`*^9, {3.8654487336752205`*^9, 
   3.8654487504428587`*^9}, 3.8654492637776985`*^9, 3.8654493114634485`*^9, {
   3.865965582539151*^9, 3.8659656451141005`*^9}, {3.8659657927138066`*^9, 
   3.8659658125544496`*^9}, {3.865965935915921*^9, 3.8659659557085795`*^9}, {
   3.8659659882041674`*^9, 3.8659660068222017`*^9}, 3.8659660863577166`*^9, 
   3.865966459016309*^9, {3.865966598898487*^9, 3.865966735717648*^9}, {
   3.865966781206072*^9, 3.865966802194347*^9}, {3.8659670998539696`*^9, 
   3.8659671350117044`*^9}, {3.86596737708314*^9, 3.865967416340561*^9}, {
   3.8659680911663313`*^9, 3.8659680979531565`*^9}, {3.8659697724146223`*^9, 
   3.865969803929524*^9}, 3.865969850623562*^9, {3.865969890971634*^9, 
   3.8659699231933093`*^9}, 3.8660390961121736`*^9, 3.8662990686684504`*^9, 
   3.8662991222131176`*^9, 3.8662991578515816`*^9, 3.86629920027185*^9, 
   3.8662993658012686`*^9, 3.8662994388686166`*^9, 3.866299477311173*^9, 
   3.8662995466917143`*^9, {3.8663097469868937`*^9, 3.8663098065886*^9}, {
   3.8663098368937907`*^9, 3.866309854605058*^9}, {3.866310502074473*^9, 
   3.866310510541732*^9}, {3.8663105771391745`*^9, 3.8663106410764785`*^9}, {
   3.866311168140868*^9, 3.8663111757344103`*^9}, {3.866311795831685*^9, 
   3.8663118226190147`*^9}, {3.8665635751502676`*^9, 3.866563580078697*^9}, 
   3.8665655738792553`*^9, 3.8665657789678917`*^9, {3.8665767519812546`*^9, 
   3.866576756524807*^9}, 3.866660334114994*^9, 3.866660482879464*^9, {
   3.866660550000019*^9, 3.8666605935181146`*^9}, {3.86666067663256*^9, 
   3.866660712885977*^9}, {3.866660752264395*^9, 3.866660805816285*^9}, {
   3.8666608513737297`*^9, 3.8666608747462626`*^9}, {3.8666611627682395`*^9, 
   3.866661174481497*^9}, {3.866665386657707*^9, 3.8666654001034107`*^9}},
 CellLabel->
  "Out[773]=",ExpressionUUID->"5fae7b78-99a4-4d1c-9803-fa490ec9dd8b"]
}, Open  ]],

Cell[TextData[StyleBox["Animation with General Cart-Pendulum swing up",
 FontWeight->"Plain"]], "Text",
 CellChangeTimes->{{3.716613652345023*^9, 3.716613661762876*^9}, {
   3.7166171500953703`*^9, 3.716617173133562*^9}, {3.716626783084096*^9, 
   3.7166267858131742`*^9}, 3.845482883460244*^9, {3.8454833355827293`*^9, 
   3.845483336286716*^9}, {3.847433954599126*^9, 3.847433968468281*^9}, {
   3.8474344191285405`*^9, 3.847434424821303*^9}},
 FontSize->16,
 FontWeight->"Bold",
 Background->GrayLevel[
  0.85],ExpressionUUID->"69635ce1-2bd0-4048-a821-d10e9209db8b"],

Cell[CellGroupData[{

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"AnimatePendulum", "[", "rules_", "]"}], ":=", 
   RowBox[{"Animate", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"DrawSinglePendulum", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "[", "t", "]"}], "/.", "rules"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]", "[", "t", "]"}], "/.", "rules"}], ",", "1", 
          ",", "1"}], "}"}], ",", "t"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
     RowBox[{"DefaultDuration", "\[Rule]", "5"}], ",", 
     RowBox[{"AnimationRunning", "\[Rule]", "False"}]}], "]"}]}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"DrawSinglePendulum", "[", 
     RowBox[{"cart_", ",", 
      RowBox[{"{", 
       RowBox[{"angle1_", ",", "length1_", ",", "mass1_"}], "}"}], ",", 
      "t_"}], "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"width1", ",", 
        RowBox[{"density", "=", "30"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"width1", "=", 
        RowBox[{
         RowBox[{"mass1", "/", "length1"}], "/", "density"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Graphics", "[", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Blue", ",", 
             RowBox[{"Rectangle", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"cart", "-", 
                  RowBox[{"1", "/", "4"}]}], ",", 
                 RowBox[{
                  RowBox[{"-", "1"}], "/", "15"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"cart", "+", 
                  RowBox[{"1", "/", "4"}]}], ",", 
                 RowBox[{"1", "/", "15"}]}], "}"}]}], "]"}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"Orange", ",", 
             RowBox[{"Translate", "[", 
              RowBox[{
               RowBox[{"Rotate", "[", 
                RowBox[{
                 RowBox[{"Rectangle", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"0", ",", "width1"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"length1", ",", 
                    RowBox[{"-", "width1"}]}], "}"}]}], "]"}], ",", 
                 RowBox[{"angle1", "-", 
                  RowBox[{"\[Pi]", "/", "2"}]}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0"}], "}"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"cart", ",", "0"}], "}"}]}], "]"}]}], "}"}]}], 
          "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"PlotRange", "\[Rule]", "2"}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "280"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Frame", "\[Rule]", "True"}], ",", 
         RowBox[{"Axes", "\[Rule]", "True"}], ",", 
         RowBox[{"AxesStyle", "\[Rule]", "Dashed"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"PlotLabel", "\[Rule]", 
          RowBox[{"\"\<t\>\"", "\[Equal]", 
           RowBox[{"NumberForm", "[", 
            RowBox[{"t", ",", 
             RowBox[{"{", 
              RowBox[{"4", ",", "2"}], "}"}]}], "]"}]}]}]}], "]"}]}]}], 
     "]"}]}], "    "}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"anim", "=", 
   RowBox[{"Animate", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"DrawSinglePendulum", "[", 
       RowBox[{
        RowBox[{"x1c", "[", "t", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Theta]1c", "[", "t", "]"}], ",", "1", ",", "1"}], "}"}], 
        ",", "t"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
     RowBox[{"DefaultDuration", "\[Rule]", "5"}], ",", 
     RowBox[{"AnimationRunning", "\[Rule]", "False"}], ",", 
     RowBox[{"AnimationRepetitions", "\[Rule]", "1"}]}], "]"}]}],
  FontWeight->"Plain"]}], "Input",
 CellLabel->
  "In[781]:=",ExpressionUUID->"c527e034-dc28-4127-ba8a-d72f69a3351b"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 6.25, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0, 6.25}}, Typeset`size$$ = {
    280., {146., 149.98193418979645`}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Graphics[{{
          RGBColor[0, 0, 1], 
          
          Rectangle[{
           Rational[-1, 4] + 
            InterpolatingFunction[{{0., 6.25}}, {
              5, 7, 1, {646}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
               False}, CompressedData["
1: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
              "], {Developer`PackedArrayForm, CompressedData["
1:eJwd1QFHIAASBtBur0uSJEmSdEmSJEmykiRJkiRJkiRJ0iVJkqykS5IkSZIk
SZIkSZIkSZIkSZIkSZIkSZJ7e8MzP+D7xvy7/j/lrf8ICAj476+A/8/fFUgQ
wYQQShjhRBBJFNHEEEsc8SSQSBLJpJBKGulkkEkW2fwmh1zyyKeAQooopoRS
yiingkqqqKaGWuqop4FGmmimhVbaaKeDTrropode/tBHPwMMMsQwI4wyxjgT
TDLFNDPMMsc8CyyyxDIrrLLGOhtsssU2O+yyxz4HHHLEMSeccsY5F1xyxTU3
3HLHPQ888sQzL7zyxjsffPLFNz8EKMIvAgkimBBCCSOcCCKJIpoYYokjngQS
SSKZFFJJI50MMskim9/kkEse+RRQSBHFlFBKGeVUUEkV1dRQSx31NNBIE820
8LfkbbTTQSdddNNDL3/oo58BBhlimBFGGWOcCSaZYpoZZpljngUWWWKZFVZZ
Y50NNtlimx122WOfAw454pgTTjnjnAsuueKaG265454HHnnimRdeeeOdDz75
4psf/h7/LwIJIpgQQgkjnAgiiSKaGGKJI54EEkkimRRSSSOdDDLJIpvf5JBL
HvkUUEgRxZRQShnlVFBJFdXUUEsd9TTQSBPNtNBKG+100EkX3fTQyx/66GeA
QYYYZoRRxhhngkmmmGaGWeaYZ4FFllhmhVXWWGeDTbbYZodd9tjngEOOOOaE
U84454JLrrjmhlvuuOeBR5545oVX3njng0+++OaHgH/Kn0CCCCaEUMIIJ4JI
oogmhljiiCeBRJJIJoVU0kgng0yyyOY3OeSSRz4FFFJEMSWUUkY5FVRSRTU1
1FJHPQ000kQzLbTSRjsddNJFNz308oc++hlgkCGGGWGUMcaZYJIppplhljnm
WWCRJZZZYZU11tlgky222WGXPfY54JAjjjnhlDPOueCSK6654ZY77nngkSee
eeGVN9754JMvvvnh7+P/RSBBBBNCKGGEE0EkUUQTQyxxxJNAIkkkk0IqaaST
QSZZZPObHHLJI58CCimimBJKKaOcCiqpopoaaqmjngYaaaKZFlppo50OOumi
mx56+UMf/QwwyBDDjDDKGONMMMkU08wwyxzzLLDIEsussMoa62ywyRbb7LDL
HvsccMgRx5xwyhnnXHDJFdfccMsd9zzwyBPPvPDKG+988MkX3/wQ8C/5E0gQ
wYQQyv8AsPhFGQ==
               "], CompressedData["
1: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
               "]}, {Automatic}][$CellContext`t$$], 
            Rational[-1, 15]}, {
           Rational[1, 4] + 
            InterpolatingFunction[{{0., 6.25}}, {
              5, 7, 1, {646}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
               False}, CompressedData["
1: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
              "], {Developer`PackedArrayForm, CompressedData["
1:eJwd1QFHIAASBtBur0uSJEmSdEmSJEmykiRJkiRJkiRJ0iVJkqykS5IkSZIk
SZIkSZIkSZIkSZIkSZIkSZJ7e8MzP+D7xvy7/j/lrf8ICAj476+A/8/fFUgQ
wYQQShjhRBBJFNHEEEsc8SSQSBLJpJBKGulkkEkW2fwmh1zyyKeAQooopoRS
yiingkqqqKaGWuqop4FGmmimhVbaaKeDTrropode/tBHPwMMMsQwI4wyxjgT
TDLFNDPMMsc8CyyyxDIrrLLGOhtsssU2O+yyxz4HHHLEMSeccsY5F1xyxTU3
3HLHPQ888sQzL7zyxjsffPLFNz8EKMIvAgkimBBCCSOcCCKJIpoYYokjngQS
SSKZFFJJI50MMskim9/kkEse+RRQSBHFlFBKGeVUUEkV1dRQSx31NNBIE820
8LfkbbTTQSdddNNDL3/oo58BBhlimBFGGWOcCSaZYpoZZpljngUWWWKZFVZZ
Y50NNtlimx122WOfAw454pgTTjnjnAsuueKaG265454HHnnimRdeeeOdDz75
4psf/h7/LwIJIpgQQgkjnAgiiSKaGGKJI54EEkkimRRSSSOdDDLJIpvf5JBL
HvkUUEgRxZRQShnlVFBJFdXUUEsd9TTQSBPNtNBKG+100EkX3fTQyx/66GeA
QYYYZoRRxhhngkmmmGaGWeaYZ4FFllhmhVXWWGeDTbbYZodd9tjngEOOOOaE
U84454JLrrjmhlvuuOeBR5545oVX3njng0+++OaHgH/Kn0CCCCaEUMIIJ4JI
oogmhljiiCeBRJJIJoVU0kgng0yyyOY3OeSSRz4FFFJEMSWUUkY5FVRSRTU1
1FJHPQ000kQzLbTSRjsddNJFNz308oc++hlgkCGGGWGUMcaZYJIppplhljnm
WWCRJZZZYZU11tlgky222WGXPfY54JAjjjnhlDPOueCSK6654ZY77nngkSee
eeGVN9754JMvvvnh7+P/RSBBBBNCKGGEE0EkUUQTQyxxxJNAIkkkk0IqaaST
QSZZZPObHHLJI58CCimimBJKKaOcCiqpopoaaqmjngYaaaKZFlppo50OOumi
mx56+UMf/QwwyBDDjDDKGONMMMkU08wwyxzzLLDIEsussMoa62ywyRbb7LDL
HvsccMgRx5xwyhnnXHDJFdfccMsd9zzwyBPPvPDKG+988MkX3/wQ8C/5E0gQ
wYQQyv8AsPhFGQ==
               "], CompressedData["
1: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
               "]}, {Automatic}][$CellContext`t$$], 
            Rational[1, 15]}]}, {
          RGBColor[1, 0.5, 0], 
          Translate[
           Rotate[
            Rectangle[{0, 
              Rational[1, 30]}, {1, 
              Rational[-1, 30]}], Rational[-1, 2] Pi + 
            InterpolatingFunction[{{0., 6.25}}, {
              5, 7, 1, {646}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
               False}, CompressedData["
1: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
              "], {Developer`PackedArrayForm, CompressedData["
1:eJwd1QFHIAASBtBur0uSJEmSdEmSJEmykiRJkiRJkiRJ0iVJkqykS5IkSZIk
SZIkSZIkSZIkSZIkSZIkSZJ7e8MzP+D7xvy7/j/lrf8ICAj476+A/8/fFUgQ
wYQQShjhRBBJFNHEEEsc8SSQSBLJpJBKGulkkEkW2fwmh1zyyKeAQooopoRS
yiingkqqqKaGWuqop4FGmmimhVbaaKeDTrropode/tBHPwMMMsQwI4wyxjgT
TDLFNDPMMsc8CyyyxDIrrLLGOhtsssU2O+yyxz4HHHLEMSeccsY5F1xyxTU3
3HLHPQ888sQzL7zyxjsffPLFNz8EKMIvAgkimBBCCSOcCCKJIpoYYokjngQS
SSKZFFJJI50MMskim9/kkEse+RRQSBHFlFBKGeVUUEkV1dRQSx31NNBIE820
8LfkbbTTQSdddNNDL3/oo58BBhlimBFGGWOcCSaZYpoZZpljngUWWWKZFVZZ
Y50NNtlimx122WOfAw454pgTTjnjnAsuueKaG265454HHnnimRdeeeOdDz75
4psf/h7/LwIJIpgQQgkjnAgiiSKaGGKJI54EEkkimRRSSSOdDDLJIpvf5JBL
HvkUUEgRxZRQShnlVFBJFdXUUEsd9TTQSBPNtNBKG+100EkX3fTQyx/66GeA
QYYYZoRRxhhngkmmmGaGWeaYZ4FFllhmhVXWWGeDTbbYZodd9tjngEOOOOaE
U84454JLrrjmhlvuuOeBR5545oVX3njng0+++OaHgH/Kn0CCCCaEUMIIJ4JI
oogmhljiiCeBRJJIJoVU0kgng0yyyOY3OeSSRz4FFFJEMSWUUkY5FVRSRTU1
1FJHPQ000kQzLbTSRjsddNJFNz308oc++hlgkCGGGWGUMcaZYJIppplhljnm
WWCRJZZZYZU11tlgky222WGXPfY54JAjjjnhlDPOueCSK6654ZY77nngkSee
eeGVN9754JMvvvnh7+P/RSBBBBNCKGGEE0EkUUQTQyxxxJNAIkkkk0IqaaST
QSZZZPObHHLJI58CCimimBJKKaOcCiqpopoaaqmjngYaaaKZFlppo50OOumi
mx56+UMf/QwwyBDDjDDKGONMMMkU08wwyxzzLLDIEsussMoa62ywyRbb7LDL
HvsccMgRx5xwyhnnXHDJFdfccMsd9zzwyBPPvPDKG+988MkX3/wQ8C/5E0gQ
wYQQyv8AsPhFGQ==
               "], CompressedData["
1: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
V/hOZ8H/ACtR+6w=
               "]}, {Automatic}][$CellContext`t$$], {0, 0}], {
            
            InterpolatingFunction[{{0., 6.25}}, {
             5, 7, 1, {646}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
              False}, CompressedData["
1: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
             "], {Developer`PackedArrayForm, CompressedData["
1:eJwd1QFHIAASBtBur0uSJEmSdEmSJEmykiRJkiRJkiRJ0iVJkqykS5IkSZIk
SZIkSZIkSZIkSZIkSZIkSZJ7e8MzP+D7xvy7/j/lrf8ICAj476+A/8/fFUgQ
wYQQShjhRBBJFNHEEEsc8SSQSBLJpJBKGulkkEkW2fwmh1zyyKeAQooopoRS
yiingkqqqKaGWuqop4FGmmimhVbaaKeDTrropode/tBHPwMMMsQwI4wyxjgT
TDLFNDPMMsc8CyyyxDIrrLLGOhtsssU2O+yyxz4HHHLEMSeccsY5F1xyxTU3
3HLHPQ888sQzL7zyxjsffPLFNz8EKMIvAgkimBBCCSOcCCKJIpoYYokjngQS
SSKZFFJJI50MMskim9/kkEse+RRQSBHFlFBKGeVUUEkV1dRQSx31NNBIE820
8LfkbbTTQSdddNNDL3/oo58BBhlimBFGGWOcCSaZYpoZZpljngUWWWKZFVZZ
Y50NNtlimx122WOfAw454pgTTjnjnAsuueKaG265454HHnnimRdeeeOdDz75
4psf/h7/LwIJIpgQQgkjnAgiiSKaGGKJI54EEkkimRRSSSOdDDLJIpvf5JBL
HvkUUEgRxZRQShnlVFBJFdXUUEsd9TTQSBPNtNBKG+100EkX3fTQyx/66GeA
QYYYZoRRxhhngkmmmGaGWeaYZ4FFllhmhVXWWGeDTbbYZodd9tjngEOOOOaE
U84454JLrrjmhlvuuOeBR5545oVX3njng0+++OaHgH/Kn0CCCCaEUMIIJ4JI
oogmhljiiCeBRJJIJoVU0kgng0yyyOY3OeSSRz4FFFJEMSWUUkY5FVRSRTU1
1FJHPQ000kQzLbTSRjsddNJFNz308oc++hlgkCGGGWGUMcaZYJIppplhljnm
WWCRJZZZYZU11tlgky222WGXPfY54JAjjjnhlDPOueCSK6654ZY77nngkSee
eeGVN9754JMvvvnh7+P/RSBBBBNCKGGEE0EkUUQTQyxxxJNAIkkkk0IqaaST
QSZZZPObHHLJI58CCimimBJKKaOcCiqpopoaaqmjngYaaaKZFlppo50OOumi
mx56+UMf/QwwyBDDjDDKGONMMMkU08wwyxzzLLDIEsussMoa62ywyRbb7LDL
HvsccMgRx5xwyhnnXHDJFdfccMsd9zzwyBPPvPDKG+988MkX3/wQ8C/5E0gQ
wYQQyv8AsPhFGQ==
              "], CompressedData["
1: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
              "]}, {Automatic}][$CellContext`t$$], 0}]}}, PlotRange -> 2, 
        ImageSize -> 280, Frame -> True, Axes -> True, AxesStyle -> 
        Dashing[{Small, Small}], PlotLabel -> 
        "t" == NumberForm[$CellContext`t$$, {4, 2}]], 
      "Specifications" :> {{$CellContext`t$$, 0, 6.25, DefaultDuration -> 5, 
         AnimationRunning -> False, AnimationRepetitions -> 1, 
         AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
        "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
        True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{330., {181.13403309800196`, 186.86596690199804`}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.866665403734251*^9, 3.8666656180797677`*^9},
 CellLabel->
  "Out[783]=",ExpressionUUID->"42a70722-2679-4446-97fd-44d919b6162b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<anim1.swf\>\"", ",", "anim"}], "]"}]], "Input",
 CellChangeTimes->{{3.866665548419026*^9, 3.866665553344452*^9}, {
  3.8666655972944098`*^9, 3.8666656126215134`*^9}},
 CellLabel->
  "In[784]:=",ExpressionUUID->"2bcea045-de16-4714-a162-cf2dd2432fb7"],

Cell[BoxData["\<\"anim1.swf\"\>"], "Output",
 CellChangeTimes->{3.8666656489708986`*^9},
 CellLabel->
  "Out[784]=",ExpressionUUID->"852e028c-065e-4820-8aa5-86715aa9711a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Import", "[", "\"\<\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.866665728281559*^9, 
  3.866665736062073*^9}},ExpressionUUID->"b3628257-2d5a-4de6-80ee-\
b0f4238b7453"],

Cell[CellGroupData[{

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"n", "=", "10"}], ";", 
   RowBox[{"\[Tau]", "=", "5"}], ";", 
   RowBox[{"\[Tau]1", "=", 
    RowBox[{"\[Tau]", "*", "1.25"}]}], ";", 
   RowBox[{"A", "=", "0.2"}], ";", 
   RowBox[{"order", " ", "=", " ", "4"}], ";", 
   RowBox[{"maxIter", " ", "=", " ", "100"}], ";", 
   RowBox[{"maxError", " ", "=", " ", "0.01"}], ";", 
   RowBox[{"uMax", " ", "=", " ", "5"}], ";", 
   RowBox[{"maxCount", " ", "=", " ", "5"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", "IC2"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"InitGuess", " ", "=", " ", "initGuess"}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"time", ",", 
       StyleBox[
        RowBox[{"{", 
         RowBox[{
         "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
          "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
          "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "Jff", ",", "K"}], "}"}],
        FontWeight->"Plain"]}], 
      StyleBox["}",
       FontWeight->"Plain"]}], 
     StyleBox["=",
      FontWeight->"Plain"], 
     StyleBox[
      RowBox[{"Timing", "[", 
       RowBox[{"ffCartPendulum", "[", 
        RowBox[{
        "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", 
         "order", ",", "maxIter", ",", "maxError", ",", "maxCount", ",", 
         "maxJ", ",", "InitGuess"}], "]"}], "]"}],
      FontWeight->"Plain"]}], ";"}], " "}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x1c", ",", "xdot1c", ",", "\[Theta]1c", ",", "\[Theta]dot1c", ",", 
      "u1c", ",", "J", ",", "error"}], "}"}], "=", 
    RowBox[{"testWithFBClipped", "[", 
     RowBox[{
     "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
      "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A", ",", "uMax", 
      ",", "K"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox["time",
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"p1a", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1a", "[", "t", "]"}], ",", 
        RowBox[{"u1a", "[", "t", "]"}], ",", 
        RowBox[{"x1a", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1a", "[", "t", "]"}], ",", 
        RowBox[{"xdot1a", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1a\>\"", ",", "\"\<u1a\>\"", ",", "\"\<x1a\>\"", ",", 
         "\"\<\[Theta]dot1a\>\"", ",", "\"\<xdot1a\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Feedforward solution\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"p1c", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1c", "[", "t", "]"}], ",", 
        RowBox[{"u1c", "[", "t", "]"}], ",", 
        RowBox[{"x1c", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1c", "[", "t", "]"}], ",", 
        RowBox[{"xdot1c", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1c\>\"", ",", "\"\<u1c\>\"", ",", "\"\<x1c\>\"", ",", 
         "\"\<\[Theta]dot1c\>\"", ",", "\"\<xdot1c\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<LQR feedback solution\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"Grid", "[", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"p1a", ",", "p1c"}], "}"}], "}"}], "]"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Tau]New", " ", "=", 
    RowBox[{"\[Tau]", "/", "3"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Init", " ", "=", " ", 
    RowBox[{
     RowBox[{"\[Theta]1c", "[", "\[Tau]New", "]"}], " ", "-", " ", 
     RowBox[{"Round", "[", 
      RowBox[{
       RowBox[{"\[Theta]1c", "[", "\[Tau]New", "]"}], ",", 
       RowBox[{"2", "*", "\[Pi]"}]}], "]"}]}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"IC2", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x1c", "[", "\[Tau]New", "]"}], ",", 
      RowBox[{"xdot1c", "[", "\[Tau]New", "]"}], ",", "\[Theta]Init", ",", 
      RowBox[{"\[Theta]dot1c", "[", "\[Tau]New", "]"}]}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"initGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Lambda]1ff0", "[", "\[Tau]New", "]"}], ",", 
      RowBox[{"\[Lambda]2ff0", "[", "\[Tau]New", "]"}], ",", 
      RowBox[{"\[Lambda]3ff0", "[", "\[Tau]New", "]"}], ",", 
      RowBox[{"\[Lambda]4ff0", "[", "\[Tau]New", "]"}]}], "}"}]}], ";"}],
  FontWeight->"Plain"]}], "Input",
 CellChangeTimes->{{3.866299214773159*^9, 3.8662992458810883`*^9}, {
   3.8662992798640895`*^9, 3.86629930973042*^9}, {3.866309891962967*^9, 
   3.866309895632778*^9}, 3.866311820264778*^9},
 CellLabel->
  "In[4206]:=",ExpressionUUID->"85bc551a-4b91-4c90-8cc6-0e1dfbbf40c4"],

Cell[BoxData[
 TemplateBox[{
  "FindRoot", "cvmit", 
   "\"Failed to converge to the requested accuracy or precision within \\!\\(\
\\*RowBox[{\\\"100\\\"}]\\) iterations.\"", 2, 4209, 487, 
   17543413912280077400, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.866311801189951*^9, 3.866311835095976*^9}},
 CellLabel->
  "During evaluation of \
In[4206]:=",ExpressionUUID->"141a4bbe-b075-4ab3-af0d-5b936eacb216"],

Cell[BoxData[
 TemplateBox[{
  "FindRoot", "lstol", 
   "\"The line search decreased the step size to within tolerance specified \
by AccuracyGoal and PrecisionGoal but was unable to find a sufficient \
decrease in the merit function. You may need more than \
\\!\\(\\*RowBox[{\\\"MachinePrecision\\\"}]\\) digits of working precision to \
meet these tolerances.\"", 2, 4209, 488, 17543413912280077400, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.866311801189951*^9, 3.8663118352059402`*^9}},
 CellLabel->
  "During evaluation of \
In[4206]:=",ExpressionUUID->"fdca1bba-02ae-46f4-a3cd-0b215f5e2dfd"],

Cell[BoxData["0.546875`"], "Output",
 CellChangeTimes->{{3.866299285262339*^9, 3.866299328491346*^9}, {
  3.8662993844302387`*^9, 3.8662993940861125`*^9}, {3.8662994510506735`*^9, 
  3.8662995142982006`*^9}, {3.8662995586928296`*^9, 3.86629956576654*^9}, {
  3.8663098995345144`*^9, 3.8663099077608514`*^9}, {3.8663118028724065`*^9, 
  3.8663118377961016`*^9}},
 CellLabel->
  "Out[4211]=",ExpressionUUID->"e8d3095b-0d6e-4a2e-8139-3e26da2476e3"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
u8kwlFMlIUwtH+zZZTdqd2ACrO/vOcdNzKeA+Vr9OjsyNIn5qOpKfF4eUUSy
nf4zf+fkrkt53JoAlo/410cT+lMhYPMqdW8yRNdjHTKJ802Vxu+eGsUU0LXl
1nJWYn40r6fnfYx+DYbTT9wFh6lgwd1SeiSfeD7e3ZEyIJ4PFrXL4185PoP6
jhp31dNUsKtfuXQdywRoSv6k/Jw4ryWKOj08PzYJFlZvGIvToiFhn4oVT16T
obXjtjglYjwwb1Y9wOjTcG5Gv1OVHKuWpYGwiAyz28R+/g6waBfmj4NVIVr2
xoQetbus+zXhVjzQubZx1QkbKuh2mZU8SCfDV6kGTjKEnmsLO33wMZwAsZ/v
jZ/6K184X7DK/gwZ9q8z7PNQyQfhvF4RjEAyfLsvlmZO3P8J1/sbDq75CDZa
g6YC4nzlMp30MpJGhrKy79vDifEQ1tvN/3PlBLixf5lDBaEffFmXvdL5QIav
43QfyRH3j/n3thMTtnEZzejyKO3D/qUZRL+Ewg+cowK3EPE7V+jjwGFLeCeV
0H+3R3wPvLVPBIraUaqahD5OHr4crGdOjNcUz/Z9xO+feacRXTH/Z74wP4+o
Ht2gI9bFrLfU3LUwLyDWyay33ATacuK725n1llmLgevW1jGY9ZauLadtG763
MestuTy1017M0Jn1lgUa7zVyT9GZ/HyHT813kYlWJj93n3b8rN3cyuTn146o
pJB46Ex+fn9PpoLSeTqTn0cJnKvNZ9CZ/PzSQAt1y4U2Jj9f/nQwZJkQg8nP
nZwEfvqGMpj83Hk616yCpZ3JzxWHNEweb2xn8vPy41028/LtCPPzQtecmNIu
BsL8fMV6/ncaVxkI83OD87evd5W2IczPZ31LuLp76Ajz89idBj83z7QiZr3l
xIub11J+IczPU/PucUzY/0CYn8tofkwdE/uOMD+/K24a7He1EWF+zvvF6/qX
2XqE+fmR47/frdKvRZif+5WSkjJiqxHm5xevmEx/vVnO5Of3J190nXGgMvl5
4q2xn9EDBUx+zipsWtcdksPk5+vYneMGrdKY/PxzY2zY9cPvmfzcImpxUHB5
JJOfcy2OmoDYACY/t7GN2noy3IXJz0d3N+5LlX29438LPz/n+f7k3eedCPNx
7tuWoyzGDHQsIWlxzbo2YOTWo/jAsg2RbjltHAKdYNbGnFspmo5cRw8LdZ3o
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
8cW5svJ4bM4EMIlwGVIivu8n7Vo/vmUSTAmFDXcR37+9t3xzm8QkEOPwHRwk
2m6v3aYzWyaAq2G2PYVo4/zAEQWu93O1B0DAyAoX7mOTIDV7i8xj4vP/lh+w
VCwyjn5LY+YHQIiWfXhELTM/YChgclmsppaZHyB7ocN09xpmfuA2Vcvadkk1
Mz8Q52Zz7/RoCTM/UH0/+xGPYD4zP5AiMfmC62YSMz+gMrHMQX3zXWa9t/Cz
0dCpa6nMeu89V5xPTFXlM+u911ZpDZ46Wsys9+69+si8jEpl1nu3Gjdv6dpT
xKz3vofeB0vO5DHrvY/TpL3cz6Ux6731pz9J89wNY9Z7u8jHW+rwRDLzA+Sr
rBEvfT4x8wM99LwMbakvzPyAP9+OoZ6dpcz8gCKp8fPGngpmfuAsh9OBtRnV
zPzAmY95QZTNNcz8gLzqsgpvrVpmfiC32WCHzkAtMz8QVhZjKmBZx8wPyIa/
zl0aWMfMD7Ao2GcOetUx8wNmlzN+n99Ux8wPyH33O8mSXsvMD6S/Ozva2l/D
zA+U+LV4co3TmPmBsh3PfpvkVzPzA422LscEd1cy8wOxo10a756WMfMDvakX
EieKipj5AeG9WYYrzP7kB3KMzyjQNf7kBzwWzOZiXv7vyQ/IKKq9qWitYeYH
AsovTZmM1TLfl/bS4qlK3sFa5vvSgnioIyRrGsD14Ms97E5/zSln5hOCLmU2
6o/HMuu7wVqxNy8Ss5n13d4Gp2J32xYy35+WemnN2VRfKvP9aQ4RtZMBjcXM
+u8DFTUJ2iZfmPXfz63QUDRHNrP+++IyaHk1K4FZ333S+rR1eCBivj9toTFf
vdy1mPn+NNLCBR+B9K/M96ex1xUddyysYr4/LYH9/3Ry5lE1fX8fL0Lde5s0
kEJKKQllSoa9Ec1JkmaheaCJJGOTSiqalEYpUkgjkXsb7r2VpnvPaRQizaGS
JOE51vqd/Vvru9Z3eZ7nz7vuWt3O2efsz2d/3u/3K0i2IoiD+Glb0t+1NDG5
iJ8m/9WtXSENA1r5baue8lDgiBB/mqs6DmY1VPn75lHh5KmsQm/ieVX6pB97
i0aDanxzIrnE83yW4pRuLy0IZ47L7mk8joPXnHe595YJwbsRp365zGKguHLl
ET95YSie65S7yRIDv0cTjwyKi0DLjgIFLX8ueGjUGGVyQwR6Zi1aeuE4B3zu
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
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{257, 1994, 194, 195, 196, 197, 198, 199, 200, 201,
                 202, 546, 436, 354, 295, 256, 233, 563, 453, 371, 312, 273, 
                584, 474, 392, 333, 203, 547, 437, 355, 612, 502, 296, 592, 
                482, 646, 400, 629, 519, 658}}], 
               PolygonBox[CompressedData["
1:eJwV0TtMU2EYxvHTJqRq2FBpRQZHwKBsSAImQCImuFQBHXDoYOIl1MRBMWGB
DiZAQqohMMjGxRYvqJuXWYQRHQTbRRYY8AKERePvG/75P+/zveeSc05lsumB
eBRFMeSxnIiiTyjIRSyiysKshctI4pfuG+r078w30YgEnuuP6ufkK0jht65Z
91l+gFas6+p17+VbOINDaNet8TAu4IW9Y7p5uQcn0G0u8Rj+OD9nXpEHcVv+
y224Km/xFDbsNZg/hB3ckA/4LNLyD37Eeb7Ph/Ek2NzBX3iERzjLMUygy9zP
OzzKT/khV2ISLz33OC/oh7iXM7zLNbgkl3kc9+SKcOaaFl4N98Id+R+fxzV5
m6fx3d5p88ewg6bwj8yb/BhH0Gn+yjnO8V2O46J8nX/yDF65V7X5mdyHk9jT
lbCE13iDpJ1C+Laoxb6ujLdIOSuGd8R/rmBK5A==
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1:eJwVzzsvw1EcxvFD6hILFdXZggQrA4MO7VBD6WKxELcYSAzYlEWQSETEYkHd
3gFeQaUbiUvCZDIoiaGLwec/fPN9fs+55JyOqaX8Ym0IoQbTKKLcEEIJ1/IV
XvGDpE15FNHq0KWuXu7DPO7QrX/Rf6PdPIYzxPUXuoy8gUekdHXcizncokv3
bN+QvIp7DOgqul35HSPmBI/iFC3mc+vHcgUT5nT0IY4+V5A3+YGHOcYH3IgV
7Ju3+CN6L/fwHld5hmd5nW+4k59cfchNWMORfps/eZwH+Q8L0f1c4BL385ez
MV7Gju4NWbmNfzEp5/gEzfI/s58yNw==
                "]], 
               PolygonBox[CompressedData["
1:eJwV0s9Pj3EAB/AnbToQnfv9JW4liQ7USqu2GFuLAyrpEAclc7F+bA5qM2pt
ctChf4CQJSSVutQmbumWUB1ycDAq5PU5vPZ+f95Pz3ff5/sUu9Rc1bQtiqI4
BplJiKJZJvUJxnnLGKtssd8f1/OcmJvf2Fb4xz7bRYbIdG3UlqQXcJ1p8uzL
9lK9g48U2f7asvQ6npFhe207qXexQIVtt3zAKmedj8hNrugtcoqD+jf37pA3
6bfdkd/leXlc9sgteVW2y1vygyyUf9zbK7dzgx77bflZnpZ75T35UzbI2vAs
8qlMl6/cnyhbGbDdlT/Cs8kTMj58Vzr1T5Tru2QfK5xxPiw3uKxfk+/I1b/6
7If6GuecS2Qbcxxz3nS9W1/klPMeWcMT0pxful4Znod5ymyJ8j7LVDvny3Ua
9WY5yQH9i3uL9Vbec9S2YYvpFxgk1TZi26kfookJcuxL9nUyw3vgMSn2F+Fd
hf+N8D4YJzv83vbfZIRn5RHJ9mHbIr9It/0HIZtcKw==
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              
              LineBox[{1, 133, 108, 88, 72, 60, 51, 2, 3, 4, 5, 6, 7, 8, 9, 
               10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,
                26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 134, 109, 89, 73, 61, 
               52, 36, 135, 110, 90, 74, 62, 53, 140, 115, 95, 79, 67, 37, 
               136, 111, 91, 75, 63, 54, 141, 116, 96, 80, 68, 38, 137, 112, 
               92, 76, 64, 144, 119, 99, 83, 55, 142, 117, 97, 81, 69, 146, 
               121, 101, 86, 39, 138, 113, 93, 77, 148, 123, 103, 65, 145, 
               120, 100, 84, 151, 126, 106, 56, 143, 118, 98, 154, 129, 82, 
               150, 125, 105, 70, 147, 122, 102, 155, 130, 87, 152, 127, 160, 
               107, 157, 132, 163, 40, 139, 114, 158, 94, 153, 128, 161, 78, 
               149, 124, 159, 104, 156, 131, 162, 66, 85, 57, 71, 41, 58, 42, 
               43, 44, 45, 46, 47, 48, 49, 59, 50}]}, 
             Annotation[#, "Charting`Private`Tag$976567#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1GXYFlUURuEXkJDu7u7uVBQkRBAVGwUFxQBFxURAUEIFlbKTLmmQ7m5Q
GilpSWkB7335Y31r72fOzDfznijUvkvrzkkSicRlf0ZwhqSJxE/qlminvsBZ
0Uy9hwegq/o2/G18dV4l68nd+AX+l+vgYfVx7s/D+S1OjaH4w73Feba8B3fk
Dkn/f4+BXIbv50Pclz/nbpwKg+P/6+/gLfwB9+TOnEAj9RN8mr/FSHFG/c/q
VsiG5vq9/DFOu15Dv1r9Jupiu6yE7Df1cyiL5LhTtpV7oTFGGZdJ9ku8L7Lj
jGwHSsrn6J9HOaTAaHlm+Qh1a+TAWdlOjMFYrEqZSIzj8ZiALMaPNO4B5MQ5
2S6Uks/Vd0J5pMREeVb5KPWDyIXzspqyNTEHqIfdstKyeTFnqIBUaCjbFr8p
7sEk47LJRqsfQm7cq9/Hn+CC67X0a9Vv40X1Da6PR9Qn+EvsMa6Mfn6MQUf1
Fa4Yv4P6MPfjL2IO+HYMCevv4t+5N/fmLpwEn6GJ/kk+E3PJ3/E7nBbD8Kv/
m53HyLtzG27P/3AetFD/yZ/iNXXyuOae2rwunoWX1De5AR5Vn+SvsNe4svoF
MQaVYo70f/FgpMbdsda5D/fhVzgpmqrb8ln+HpM9K4d+bOwb5MVF2T5MwVRM
Q05jxsVvi3y4JPsT05HLtfHxjlhtDeXny/L9mIHcrk+QPYYCuCI7gHLyhfqX
URlpMFOeRz5R/TgK4qrsIMrLF8V+QxWkxSx5Xvmk2HsohGuyOrL16ndjv+KQ
rIJsccxj7C31Va4a61V9hIcgHRrpt/OHaIbZ7s0XcxpzjsK4T7+fB+K663X1
G9TvxV6Nb9Wf4q9x2PWK+iUxD7Ev1de4Wqxt9VEeivRorN/BH+FVdTI0Vz/F
52Lt8w/xXZwuzgnPzs+TZe9zW36GL8ba4iLckg/E9/Agfp1TxNkWZ6b76/FG
eS/uHvPBt3gQN4x5iDOXB/A3sd84Taw391bipfGu6KS+ztXRRn2MhyFD7Gn9
Tu4b+xhz3FtANiW+DUVxQ1Zftim+JfYfjsgqy5apu6IGMmKuvKB8qvppFMNN
2VHMQyHXpsnaoThuyY5hPhZgIRZhMdZYs0t4KZZhOVZgZZyJWB1jUNgzp8c+
RgkkcJyqyJfHPkZNZEIT2S7uhxZYa1wR2YyYHzyrvsQl0Up9MOY8zhZ+g1PG
mRTnjb4Bb+Yesa9xwrOqylbEXKIWMmOdvKh8ZjwfpZAUJ+XrsQEbsQmbsQVb
sQ3F3DfL2A4ojWQ4Ja8mXxnvhNrIgqay3dw/9kH8/vrz/GOsf3V6DI+z0/3/
AQoA/uo=
               "]]}, Annotation[#, "Charting`Private`Tag$976567#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1WWAFQUUBeC3sHR3d3eDCoiFRQmKii0YqLjYrdjdSXd3N0iDdPfSXdIg
6Xd/fJx7z8y8XWbmQan2ndukJCUSiVR/dE1jSE4keqVNJFqQg726pXSjOz1I
ck5vx1qSk326ZfQkjWN9dK3IxX7dcgrpJ9ufoyJXdL1Iq+9rv4/cHNCtoLB+
iv15KnFV15tkfT97a/JwUFdV94/5XRqyUldEN9Xckcpc09XTrTV/yh300aXT
9Te3IS8327fJ7zjkeDX7UvN7NOJu+375B6scL2qfZn4hPsP8r6wSn2/eHb38
RT4m/5PXXVPfvC7uhfxMPiTPyldkU9lMHpJdedJ8RfZ1XXrzAPP95KOJfbv8
nsOOV7cvM79PY1briummm1+kKgka6NbLz7mTfs7LoBtofoD8HNGtobh+hv0l
qpFEf31G/SBzWwpwVLeWAQxkEJmcM9ixBynIMd06Suhn2jtRnTQM1mfWD4n7
QSGO69ZTUj/L/jI1SMsQfRb9UPPDFOaEroZuufmDeJZs0JXSzTanxL0zn5Q1
aWreE/dG/iofl5dkMjeYN8gv4vPN5+RdNDcflt14ynxVDvUzspqHmTvIdvE+
y+PxO8si8haZGu+z/EE+Ii/IV+OdcX1NucL+rPww7pk8IzvLJvIeeSCeg/xT
PiEvy42uLW3+O86N52c+JWvFszXvlb+RjhvtG+WX8R7Twn5EdmeYz8lmHx6/
G0W51b5D/shJx2vZV5o/ir8Pm3RldHPi3aU26blJt0l+Fb83w52XXTfC/CjF
OKXbTFn93LgP1CEDI/Q59CPje0NxTuu2UE4/z/4adcnISH1O/ah4hpTgjG4r
oxjNGMYyjvFMYCKTmMwUpjKN6eTyeaPjPlOSs7ptzCC3Y2Piu0kpzum2U14/
3/469cjETH0e/dh4XyjNeV0qFfQL7G9Qn8zM0ufVjzM/TRku6GrrVpm7xHNh
h66ibqH5TRqQhYa6zfJr7mW28/LpxpvbU5bb7DvlT1x0vI59tfnjOBbX2Q/K
v9jpeCX7IvNbtDWfju9HfB/M++TvZKWRfYv8hnbm87IZLc1HZSfZI/5e8lrc
p3hvfX5+OcH+jOwgW8sTMkWWk7fLXbKj/DneIXkx3oH4N9X1deUa+ydxLrt0
lXWLzW/He0825ugL6CfGz6I8l3S7mcs85rOAhSxiMUso6LpJ8f2kApd1e6ii
X2J/J957stNYt1V+S3Na2Y/JnvEMzNfjmcf/Wa7/H/ZB9OQ=
               "]]}, Annotation[#, "Charting`Private`Tag$976567#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwNzWWYlGUYBeBvYRfp7pAUpLtTQro7haVrF5FdpFMUFKVLOqS7U6VL6VRQ
QkAa6fb+cc8553lnrskcHtkgIiQIghg+okKDoGxYECTgpn6IDSwmmnLuCbml
H2YjS+jLl/SjPwMYyCDK+34i/tWPsIml1HBLyxP9LL8ymApuibmtH2UzDews
vNEvs4yadjqe6ufYTVM7ByFcs4fwiZ6EO/pvbKGhnZW3+l8sp5adnmf6eVrr
efmAPXYz+TEx6EQxrru3lQWIy1C7okzKXb29LMzvekuZm16E0YUSfMFW741k
NiJ4Z3eURenN3/ZnMj+fE4fulCaKFd5rywz05LndQRbhgt5G5iM23SjFXvfm
MieRxKQzxfnHWztZkHgMsyvJZNzTj7GNxvZHvNevsJI69oe80C+yj+FUdkvO
ff0421nFCKq4p+CBfoIdrGYkXzGKr/mG0YzhW75jLN/zA+MYzwQmMonJTGEq
05jODH7kU/+Zkof6SXayhrpuGXmp/8F+ZlLVLRWP9FO00vMQi66UpA+7vDWR
2Qm4aq+lnp6JV/qfHGAW1dxS859+mp9Zx2zmMJd5zGcBC1lEdb9Jw2P9DL+w
nvpumXmtX+IgLexchHLDDpeFiE8PyhDNT97+B6AehqE=
               "]]}, Annotation[#, "Charting`Private`Tag$976567#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1WW4VGUYBdChUbobKQERpCSV7pAyQKS7u5XuRgTpTklpQUFKaelOlQ5B
ASkB1/djPe9+9zczzD33nkPGJh1rdYgSiURqRo1EesaIRD6IFYnsiBmJ1OUN
Dul66l7K31KO73QNddfkfuRikj016+S/nQ+SYzPPXoOZciZ+lHs5/1DeKX/B
fDk7b8pjzMQsl1eY+fjN63uZr3RTWCLnorw8zXyLn/jB/r1ZkF9Y5n2NzOv6
jWZ/c6GZg595zz7ZTBO+F+vtq80C7OYf7x9svhE+m/nhZzdzU1OeZWYO/7a8
1ixMb+8pZu7S1SMOY+1JWCEfdt5bfi1PpQLLdY11N+QB5Oahbki4Jiyw16KP
rnj4bnJ94nJEt4Im+pv2geThke5LSoRrYW9API7qVvIVfelHf0p63a/OGxKf
Y7pVNNXfsg8iL491Ayil32NvRAKO61bTTH/bPph8/KsbSGn9XntjEnJC10cX
YZq9Yvjd6Zrb78hDyM8T3VBdHBbaPw7fRVfGvk9uQiLG2ZOyUj4ZfnY5CtPt
lZguZ2CzvMZ5C/muPJRF8ru8H/7GzbRskJ963TA5bngfi3TLzDzhHuET+2wz
C1vDz+z1ZeX9clMSM96ejFXyqXDd5ajMsFcOfze6lvZ78jAK8Ew3XBePxfZP
w/XQlbMfkJuRhNO6dbTS/2UfTkGeh2tGef1Be3OScka3PvxMVHB2SNeCZJzV
bQj/LiMYScVw7zlrSXLO6TYyikrODutakYLzuk201t+3j6AQL3Sjqaw/Ym9N
Si7ofmAMVZwd1bUhFRd1m2mjf2AfSWH+042lqv6YvS2puaTbQlv93/ZRFOGl
bhwf6Y/b25GGy7ofaRfucftoivJKN55q+hP29qTliu4n2usfhmcUH/BaN4Hq
+pP2DqTj93Bv6aIx016FrboO9kfhecCHRMJ10sVnifwZX3tdDfspuSPpmWBP
zmr5j3DPytGZZa/KNl1H++NwH1CMKfZ0bJSjhGsoJ2CpvNzMS215jvk22+R1
ZhEm+rya5mndBrOTucB8J7wuPG/D9zRTsIXv7SvN/Ozkz/BMMWOwidnOl4bn
Ldv5yD7DzBjum/AZ4Z40C4VnUHg2e38n899w/7BYzklxeaqZPnyuHDX8ruWE
fCfXYa6cNXyG/I3PqSWfkTuTgYn2lKyRr4ZnmRyTOfZqbNd1tj8J150SRGOS
/mP9WbkLGbmm20EX/dNwTShJdCbrP9Gfk7uSieu6nXTVPwvfhVLECM8d/af6
83I3MnNDt4spfObsgq47Wbip281Uaju7qOvB29zS/cI06ji7pOtJVm7rfmU6
nzu7rOtFNu7o9jCDus6u6HqTnbu6vcxkFl84/13fh3e4p9tHN/3zcO0pTUxm
6+vp/5C/JEc4t6dirbwqPHvZFZ5j4f8LMxZznVVnv667/UX4PVCGWOFvV18/
/L3JX/Eu93UHmMs85rOAhSxiMUto4H1Xvb4vOXmgO0gP/X/h90dZYofngy4R
y+TPmSdnC3/L8nqzKHvCveX9/wOIa0GK
               "]]}, 
             Annotation[#, "Charting`Private`Tag$976567#5"]& ]}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"Feedforward solution\"", TraditionalForm], 
         PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1a\"", "\"u1a\"", "\"x1a\"", "\"\[Theta]dot1a\"", 
           "\"xdot1a\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
14WSDIj+Ct9JbKQGEuvrsd1hK/G+fTHJ3CzC/Ij2JvaiJzEecH/R6nucggLy
9eRGiPgkqZ5g+6iagnZLWzdXEPOVfUn86bQmFX3hbTylRMwn3/H5Wo/vVOQS
k3WPSqzPWe+E67eGhFBLJjkB8XOiEnkbU3YzV/C+mPHhxK0lHHv8Pa2+mQeZ
jUq3j6YS8eP2rNbyVV4k2fFII3SKA4lvfDh55Qcvcjpek/dZloz0bF4pUK/z
Ia72xY0pumSUlif7QLaHD4mc10i8TIwfe1cceGFAQQ5exuvuEfagOTXhr9tH
QRsPGW6pIOyh5o/esKYpFfGuTdIXJsZHK0q1YBuhotLrtn4ixPhjz/xrqLPn
Rx93V7nbEN/reO26RsM4P1oV+jV64hkZTdlS0hSchJD6jkmDaGZOlP7pkWjr
K150Qd6jd4SPjPzDbY65b+JD5cHmhWuPkFFHaeDZjFg+tPt27GZ8g4zi16hf
fCJOzB8n/YEK4f+NPCgUxVFQoK7/+XBifVwu38503UpFxbnHIlcT8UzMWyE6
7z0VJc62G2wjvs9N70P97t38qOmwxqIOsb5mogqzLoVCaDzSKr5yNSd6LSp0
uMeLiK/qZ3o3GZKRbO/+IT1Wwj/uaSYB0d/XE95/LTwpyOPnkxsxxPt6pTKi
BzioyHa4mF+N8N+ZzLJj3r5U9OdTvYEK8T4xnpSNEbz86H6nxNQU4f9iilq0
PFVi/Pur1c4S89PZOHuUv5SCZKW1d50j5pvqv+srnzoVLRt9mflIzOexC5Hz
E5VU1Bm32qCG6E/cplg09rcQWlOe0k+ncCK1G9KB7rYUtPlQ0NRuYjzhTxuE
JGYoqGCz+5fNhL8YV/NFmDtQ0earS5sCiedH/qYcqWHiRzvc18VME/33RFc+
3ryLgj6aPfr5m7j/8njEsEwmBXE8dOrbQPT3deIcOq5IRdLZAq50YvwZt/o1
W3KpiKy/7Z8p0d9puW6kHUxB5X/EWUv+84/XLpNR4VSUfW/guyjRfvVb68SF
sxS0Z/53rith7yZZ2q+XmygIPezz30Vc62/l02rXJvbnlA/kWsKe2pW1E3h+
UZGUveV3Q+La7aVf8t5pITScy0TKFuBEBQ7JsVJmVnD1O8XRxWEJy3fXdbxq
4EHbNBffPU0m9ptrbgm8l3lR8fbYnTkTHMjirg5NpIUX6a/9UEXdRsQ3kapd
wgZ8qDr3FEegDhlFC61yONrBh3TkhwxT7Mlog+ZkrN4VCrpdTSlSIdZjYa2z
rGkPBU32PpyVJtbr360dbGQjKrrWeLxfjRifwpy8fe0/KirLUtzfT1ybtHzl
7bMh9pufChxcxP3vtJ4uBQ8T+cVWVZErhP1fNYtaXXNXCP1zVT77g8gP/KN4
rQfCeJHpnWwtxEtGTWOHKLCeDw3zn38We5iMHGyLTmdH8qFT9e66TWZE/Lqx
WePtBgoiv3ph+Y2wN4VmMxb2KAp6JnLzXRIx/9vs588/kaCiLUZfN5gR9qrE
zfH5zltiPY5fuSRBrMdE4PYfTDv4keJanSoSYf+1vIVawvlCyFEmS2Y1Yf97
S4+p9rvxodsv+DZuNCCj9apCnXeW+ZBDhl5AChHPpCgp53e6UhAnf32aP/G+
oEPKaI6VSuRnl8VziPFQDr68Ag+o6KJWgbcm8b7gozukb6zmR+EpvX/TCfvh
DdyV3nSQgppDcwUXiHiCXol/bC2koM/OdP4nxHwXvs02FTtMRaGL6uQxwj6N
2mx5ksupaNPGIZRG9PfY5JwDdAqh1g9pnGTC/mPkzy0ctaSgkIzJQ9zEeNQT
9TLlJyhoVayCbQhhz64XfqdK2FFR9IiZXArxvLGY/OlXC1TUXN8BeUT/DYvv
XUCOgviUDr9yJ+7Pzqbrjnwk/Kd68ewRor+7a9p+aO+moqCyS158xPdXj+ca
BWZRkXe0eogW0V/y5Kr3IgEU5NqtFFdM3P9W8izX5RAqKj+ZEi1GtGtu+fLH
6hQFnbCd7dpP2Dvd1ZVMr6cgH9/fWh7E9WrV8NG/56hocDgumo0Yz3ShVF55
KxWd1z9tdICwp74AYa66MSE0oz/ksUjEf30cU1N7nYLimX5VJRPz9cngUetz
CyqS1DRWGyfed+e4oNz9RGJ/zNvE7EmMh8Rk+IQtlYqYfA4d30u0W3hdcY1/
SEFfNdPOpRPtP+Sndlc+IfJBVvq1nUS7x5ra9tPfKOiaPp8YH9H/9urKXqU6
KvrwUnLTKNHeG8UklXuH8PfMkHFt4vnjx9HDj05UpPz7/hUHon1hm92D69nE
/pmmaT5OPB/2R/CAWAEVVdS5LDn/F39Msr8HhFLQy3N3nQqJ522Ekjr6XlPR
TfGH3P/FC8H4pXMv54WQe6bX9juCnOgzWXrjLbNrsFn3kDifyxKeSukd8ajj
QUHxKreufOBACo2H64R1eZHrxbhX38Y5UIBEQdzcd160J+zI2kMyhH3Z9O5c
f40P+SbZHWYh/F34qKPN+Z98iFlmy/hFwt8rP3JegssUdKRE9sdGYrx1oqrz
t7oIezLwF79I+O9Maqh/jz4VTQWQ7l8m1sOSf3T2818qcm+StaojrsteHUgd
s+JHO3eIV30n7PnQ6Vgd+0F+5O+okc9L+DufkVnOK3sh9IztaKoj4e9Ogo1h
ky94UVqN9qIJDzFfr9/PrBfhQ0FNiTGDRH5fXNqmmfeaDz2KZpM1JPyd50Xw
4QxRCqLuFfAIIPyrW8n5c99rChreeHb2v/Vj8cDiwZuoKEyyJCGE8Pdjp61V
z8dRkd2i/K3/7E8uedDgjyw/on79MdxOtHtz+7L05QghLVJzVRKRv3uIGqBB
Fz5UdWHxfgSRf4dYPmz1XORDNv6Z20wIe2++U0SmOlPQL1ZpPw/ifeanmdYy
s1DRgHTW6hliPGJubH0inlT06xCl/CLxviqD4Q+nV/EjyemkHUGEvz/CUUk9
ShTEPtBMrSHmZ5hJ0SSPRiH2+ZkXCcR8h2a47N2qSkW0l9yHKMT91hvawx+V
UpG94c4dsUR/yGDdltW/hBB7zehMApEPnws2+Sh9k4KcWhzip4jnN2SKPVAc
o6C3NZdJlYT/+oVqKjHZUlFPi/tYPvH8a6WRes85KhqixHVHEv51cpuIw0lZ
Cgoa2CagSdx/Y0PrmvoUCvr5gxz1nz1rirxJurKTikwvSx05QHx/+94tQ5aZ
xHzatU+eIPq7oiumv/SEgupFr4j/Z78ZptnBisFURFr/8f1/8bXkvFSn0wkK
Oihb6MlP+Lddd1De21oKWusdoJJAXPecukobOUNF64WeP99IjIeNPVA9vpmK
1p1tE91K2FPE487Pb0aEkLnaI7E3hL/zSGQ9yDCioJ0//XyC/4uPsePGtjeo
6PXm29fZifu3fNjWfeUtBf1r2qzxlBgP3+Fvgp0fqMi5W8hRnhiPcJ+Ngu8D
Cqqqk5t5T7T3376Wn/iYirhCp50UifZdtr+f7Son7Mn2bvUuov8DfIo2QjVU
lNn87FYH0f6cxP/jtR0FPZdX4z5KPK/tl8jr70hF279faPIi2pOe+hw4lkVB
nZVGFZxEe7yMe/FCPhXF2Pu9siXaI79WPb4dQkGGBjntxf/Pz/gt6BFUxLNI
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
37R/8Rw4yEaeesT5w7aq6tLbvCmQit/b0eeTj/Xz2EmbM2egqvpm7C9dGrYo
27GRs38JdmhJ2Ym7NWLriNA/0lMUZLms7pBm04prxoPWHEschcW7weVbif20
8iHHzY7JZVjV/eNpnWcjzjeUFl4rxo6as8f3SBLx1dz+8Lck13ewGHUzL5A4
n60pWEogyY7CY6/Axy276DjXVT+E7eAslB89PRYWRcPrE17SJ6yWITfFYuYV
YQ9/7eZFz3aS0IxnxLyaSi0EbpG2e7RlDLgm7OO5LtJxV/jVs8/QFJis/p2C
3PPxzTnJ3KDXU+A0ZzcRYpePv55MFbsVPAOeau8tRE1pWOytnP207yi0flBd
ECL8r/PpTY/rDcvwniU6t+xNI46J1hoxXGZFtg5o09utFXD8z4/wazzEepos
RSf+x5fMLBxJDYwHldH3NiHEem5Zy5V2UmQWUjnkfajONCyfytR+T3MZSuLK
wz/lNuILR3Leiq4egehUuuKZvUW4q6WodT8HEd/nXVvqiXhGVVNf/VNsishv
xyfOvsrHGf3Csq6UGTgtQX8hyl2AlRd+3bG0eQWNp7tFb60uBYdoh9ns9ik4
tsqvZywxH89sv/K3vWkG4g4/ipMg1k/ghk/SmiUKSrySsOHJ51bshmbfhpaN
gkFq6N5HhD8r/LQLy9/Bjhak3da7Et/jNeZ7JvFmMhgaWWwqYi8Fzsi9KVbP
luFhzr61j/Mb8dWRoxFMoyQU+PU2cYglztuj9s/V9KfgkI2dVJ91Pmbw/Ux8
J/MKxkMxg++XtJfadkjwz8r/ZVBnC07kzP5e+b8MlzkzD4+snpX/yzhJ4atx
8O9e+b+MiltuJ7Lvd638Xwblpus9k3udK3z/mtr4m9sLOlb4fvWWF1eWTnSs
8P3Wt7+LVSp1rPD9Z9MmpW/7dqzw/f0HCqlpezpX+P6QsdGGaOJAweD7zbQ+
KZl/71rh+4uVm6N2B3ev8P02lV8z43l7Vvj+qF23WzeZ9Kzw/WpG9xpDg3pW
+P7RvzbBA9E9K3x/VFvzL8WAHszg+/+V/hygaPVgBt//q6jGo6C9GzP4fjsT
mq66fDdm8P0Z42deBBl0YQbfL20s/btfqxMz+P4Ga6urnHs7MIPvd88+EtvI
/BMz+P4L3cmSl3a1YQbfv8f0+IMkm2bM4PsnTS+q7b3WiBl8f15GqanU2TrM
4Puj71v9ihmvwgy+/0PktwWN32UrfH/o021F2KJohe9PXYh5tRCSu8L3d1w3
y+XYnrbC97tt1mA+FRq9wvertHZftPK+scL3U2ZXdzvYvwAG3x/WqOTKNRoH
DL5fmUtcbLPyB2Dw/ZJvFkb/bvy4wvfv6zkpMJT/aYXvt5dtsRBrz1nh++0C
hfkfaBas8P3Sr7oXNhrSV/j+N2fDCljvlK/w/R4bN6158KZyhe/P5aKxtG+o
XeH72209EpI16oHB979VPkpXymgEBt/fObRuv/GjXqyblLIsIdMFd16+f8U1
0YkZ/L7rJQ1bZf7OFX6fx9ma85Njxwq/z7xp1youxY4Vfr+wXHUo9mLHCr+f
FaaUPdfYscLv51J6dm992bnC60evF7nfodS9wuu356yTP9HSvcLr++334vug
2rPC69tfJe366Nazwus/ZZ8lv3vds8Lrs0ZkONYQ1wxePyzK/2Xz3R7M4PUD
0wrUkjf2YAavz8Xjhrc+6cYMXl8IntZsr+rCDF5fwL/aKKGjEzP+H+T8k4BT
Ea8eAOP/QeZr/EcXFKNWeH3hE8kVahvfAYPX/1Sy6h3opazw+k+OGTe17U5f
4fVJQZvNg6OzVnh6V9P3vupuDcDg6ZvJSsKXa3vxr8EG73cinTCesU/Wam8X
ZvDyUl8C79oc6Vzh5alsqx+IvuxY4eUD+gX9dFQ6Vnj5rxZxTH+Pdqzw8p7z
DulMHzpWePmy3h+yZ007V/h4sz2PzcK4ulf4+OrNG5/qZ3Wv8PENLykysK1n
hY9v1/obb2PXs8LHa077146E9azw8fk7WqkCRPxh8PGHQnPTTB70YAYfH/l6
JDhFqQcz+Pj/FXXecTH/Dxy/CG0NdUXSklnIatD7XVLKikKiISMtWkpCEyGF
Fk2Vkob2lda1tK5117gWrjolTRWF1O/9ezx83l//3SN397nPeI/H6/l6vcLf
XGQnUgaoBB9fGzSWF0waoBJ8vO5BQeo92X4qkXfSufTxcYWK64DIO2GLFwfW
ykRjPl7K39i8e2MyIPj4PRI7eIMPv8N8/Mbmv4/GJLIxH//z5NakXevzMb+u
PAFj4760glabRzejVQbAJ76TC19z+6gErz5c11oqMMzCvHr06pIl0IKFefXc
M40qimg8JHh1ciBtYsCehXl1cnCpSc3SPsyjj8lUurVbD2Aefeir8NCS2QHM
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
9c16MW1YrzBOiO1e/a0d6xW6uWHSr0o6sF7h4ib7oXwfE+sVNavfmCqcYWK9
YtN1v5zNa5lYr9AM32em4d+B9YrgYm0GJb0d6xWe0fn6IY/bsF7xWWzP9fXo
+hN6RUJ1kUqSLB3rFXmzRdGvHRqxXvHogMHS1Zy1WK84bfW6aLqgHOsVvmtr
P0fq5GB/WUHpO1l+nSLsL9vuwL9+LLIK6xWbeNUUhwrrsF4RKbW34cSBRqxX
dJY5/DRYaMZ6hfLIdslXXS1Yr5Dq0gRGpnSsV1hFtqyve/Wfv0xx5rnVYCId
6xVbg737tF3pWK/4uerB/bmdDNwfk7LuocCXIQbuj3GJdF6WX8/A/TE5BX7e
e9PpgPCjSY8HTOxJb8J9MmbOPjcuONUAwo82THZxuhNahPWQsBmvj5bfc7D/
TEj9wcneu1XYf6aqVfTbPKIe98ccqaeLrhipx3403ca9Zbqx1diPNsxrxLut
g4r9aLuEX07vTMzBfjQH5ZeT9wITsR/NL2q3wP7BIOxHC/zoE2i38xkg/Gin
bCl8rkfe4f4XE8X8fSaiDNz/ok13XZL2uRVop3VseE/igS+eH/+58mQ7mFdR
5PqyjBdyDf0+6mTeATaOHw6O5OODQl5fwC4eJrjFYxV7aQ0/NDLO/VR6igk+
0vveJksJwHyaQ27XASbILZc3d5NbCa9HaS0Wf+wAi6Ph5l9XCcJQPk2rCPkO
8O5YY+DJ54Iw44jsejWFdkD0Z48lXCy53tgKiP7sbcs2WTqKo+v5rz9bnvVH
weRXMyD8cbrklTNunfVYP0pbPGwNKEX/+eEGZKI9ruZgP9yxTzYRL8zKsX5U
OuwWoXa+ButHn0rVZmLiaFg/2jao4dJS3oT1o9sHL0ysutmC9aNVfTMZ2fJ0
rB/JRw0Xfn1Ax/rRt9amrCg0XhP6kWSFj4NVCB3rR2HPU1Nlpui4v6Z2Mevq
ZnR/Ev019grJWX1fGbi/RvS23/EOfgYg/HkHFVau3C/Ugvts1oZeXG5jWwcI
f57LkMSqEJ8yrE812GZFcd1Kw368gJ0fn8YJV2A/nnE5Xaz5bR3ur4kRr7bp
Pk7D/rwPVz/YPZSsxf689fC42Y+n5difZ7hCSefAHQr25ylSJCt4DN9ifx7N
oXvi0/sw7M8TG4jseB5xFxD+vIHNtmaP45Jx/8wFdRV3g+d03D9za02BvYlb
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
Mys1q1foehGvCT8D/rx/PDfx+n+YvIE3
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{359, 2728, 2726, 358, 881, 706, 578, 488, 429, 
                394, 905, 730, 602, 512, 453, 936, 761, 633, 543, 974, 799, 
                671, 1021, 846, 1075}}], 
               
               PolygonBox[{{2725, 2724, 341, 342, 343, 344, 345, 346, 347, 
                348, 871, 696, 568, 478, 419, 384, 903, 728, 600, 510, 451, 
                935, 760, 632, 542, 349, 872, 697, 569, 982, 807, 479, 947, 
                772, 1041, 644, 1006, 831, 1068}}], 
               PolygonBox[CompressedData["
1:eJwV1GWQVnUYhvGXEJbFAaRRgaEbURjFIaSXEgWkBRT8iCwhXcsXpWF3aZAS
EKSl4wMljexijILSKDN0jwm/58O1z33d/3POnvdUuX6pnQbmTCQSOZDmz1fJ
icQKNJA750okVlqsiBN8JgbgM/13upa4yTejIT7Qr9JVwkk+C59imP6IrhVu
8S1YpLvFB6AwGum66FbLlXGKr+P/ymORzqfx3+XeyIX9/CWkywOtD5ePyin4
Ra6G2/rtZh58rv+WL45eTsrt/Mzr/E1U4kX4Ubkk5suNbd9V/lqugtN8Pf9P
HocMPp1fkPvgkvw6cssHzMIo7rgZ/LHcCqn2GWEe0+W01tr8lVdHGX7H+g45
b+zPv7B+T26KWnyr9S/lO/p8PG7gH/wtVOZF+TG5FF7mC/hfclu8Y99u5hpd
VWTJ5fC9foP5v248MvkMflHuixcwSDdSd1xug7t8G5qgu36trhrO8NnxvOgu
8Y+QB4N1o3Qn5LY4J9fAPf1OMwmT9PfNZtiuX2Le1SX7Hanmn7w+qvBi/Hj8
RrzCF/K/5XZ4gze1fw/5G/2zuL5mtlker1rPsr5RfqYvwCfE88wbxrZ8TjzD
8mX9x7gcx437Ih80iyBTHmK70fJJuV2cP9/F82Ey38GXxu+U8zvuIPMGfxtV
efF4v+I3YJH8j9k+roH9eprr4gW1XQ3zLK+A0jzb+iY5gYI8Ld4vuVFcVz7X
erp8Ja4/72de4XXjGDyJH5KLogSfzZ/IKRhq3zHmKV17nJdr4oF+t5mMKfqd
fJl8P+4vSqC5rpduvVwzzpnPi+8GxupP697Fw7hOaIEP9Rt0tfADn48M3VXe
P55zDNONi2dV7oBHfA/Pj6l8N18e5xj3BCXjOxT3Govje2W9t7xRrh3/R66I
H+MbZuZAIddhorXbcmMssJZpXtPltfaJeZXXi315Mj8sF4tvRjwz/KncGnX4
cPuPl8/EN4u/Z/4W7zHK8sfW98ovxvPEp1l/IDfHHmsrzIe6oSgV31BdH90m
+TX8xBfG9wQT9Fm69+M+xnGRgr76zbo6+Dm+vfEeI02fresY58z34Tn1esG0

                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{2725, 2726, 393, 428, 487, 577, 705, 880, 357, 
                392, 427, 486, 576, 704, 879, 356, 391, 426, 485, 575, 703, 
                878, 355, 390, 425, 484, 574, 702, 877, 354, 389, 424, 483, 
                573, 701, 876, 353, 388, 423, 482, 572, 700, 875, 352, 387, 
                422, 481, 571, 699, 874, 351, 386, 421, 480, 570, 698, 873, 
                350, 452, 511, 601, 729, 904, 385, 527, 617, 745, 920, 420}}], 
               PolygonBox[CompressedData["
1:eJwVzj0sQwEYheHvtiwSSQ1ibWupicnvIlEzuraTiTYhYWO2KGITJmoQBha7
gfiZjAYSc6/BYtJEPB3enPOe796bW1her6xlIiJBDePKRV9EC9N6Awd4wbAH
z1HJRkzxOvbxjKK9hSW3ST6gN/CFE9uNLUWZP2DTtsozeg0faNr2bNt6B1f8
iRf0MyzyCX6kD+mPyOl1pDjm1+6z8hs7tl55i7a9JN8wZ096Iu7lBl9xG+Xz
+g8O7YM8p98h4UU+pn+i2v0uf5e7vOn9ET6jp9iy9/Nfedn9T/e8fEXe9idP
5YL8B3HmLrY=
                "]], 
               PolygonBox[CompressedData["
1:eJwV0kswlWEABuAvrORo05jpwrCoJRPRTOsWndziKFukstIGDV0M0q7aFJtc
cmmm5RHa0MWMXW1CElp1s1ZCzPT8i2e+932/+Rf/f05ew43q5pQQwgFeMJoe
whg1hgTVVHGRSjoZYZ0zHnzFtdQQKvQ59qm1LXPffld/xholtmmu2sv1bPkm
f3lue2fb47L+iV7bHT1TbuIX/bZhW4+cKk+wqp90LlFsn6JRLrOXO/cYtOU4
P3BcPuvcoE3OSAthyzmuv/VMvn5O3uSR/bB+SH7NP/d5eoH8lUvu0/Ql5z39
tvtTelzeps9+RM+S54npxc5vXJd/0icPea5bTpGTfNFPOBc5bZ/kilxqH5Cz
5fcck1v5w5j+xv1DOVOeZVev0Rfp0W/pGdFvxg+eRN/GtkKR/pIG2wX9qNzC
b0aj97c9kGPyDDt6rnfLl9dJuFugW+5wdzD6rfnOY9uA7TOF+gT1trg+y3b0
X7N9pMverj9lOfqetiR19vP6f8/sWoQ=
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1Hl8z3UcwPGfdrStNtO2Zs2atXVSaSZXUumky5RIJUuu2ELuo0SH7iJ0
XypUOhCddFDpQlGhk0LODnJFz/ejP56/1+fz+z6+j8f3+/l8fr+SqprK6lqJ
RKKJj+hvPM8QOnIajTmAJJJJIZUDSSOdDA7iYDLJojbZ1OEQcsglj0PJpy4F
HEYh9SjicIqpTwlHsI5pDOUyTqeCUtYznWF04ox4J/5iNuO4hgsoYwMzGE5n
2nAyfzOHW+jOhRzJ77zACC7nTPbyDnfTl6Zs53Vu5Vou4ig28iIj6cJZ/Mu7
3EM/mrGDudxGj1hTm/KZPsrFsQ/mH+gEBsTami/TpzmaTbzEqFhj177RK2Kv
jD/WY3VKrK/+qGezj/lxv+/ujb3QVXqSVsc+6hI9Xp+MvdA1cS60uf7DvFgn
89tjT/U7PVF7xpnQz7WBPhZ7qj9re5KMP9SJsffG3+vAOC/GX+kzHMNmZjKa
K0lz/RN9iHPYzwLuo4YW7OQNxtOLTPd8oY9TSbL5Qn2QG8gx/1qnxjqxhZe5
kXzXvtWrSDderMfpw1qsP+m5xI/ovXhmvV8LdbWW6/WarUv1BH1KS3WtVmhL
3cWbcWbM79ACXamNtLdm6ZfaUJ/QEv1FO5BivEgnUWT8gw4i13i5PhvPzFZe
4Sa6kuH6p/oI58UrmL+vD9CfU9jNW9xJHy6J/WQbrzKGq2lLq3g+/uA1bqYb
7Tg1zlG8f5yPeK84Z/zJLMZSxfm0Zg9vcxfXcSmpnu8jncxg8sxX6HOUGf+a
+P//rFz/A/iqhzc=
               "]]}, Annotation[#, "Charting`Private`Tag$976652#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
4A==
               "]]}, Annotation[#, "Charting`Private`Tag$976652#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1HV8lmUUBuBvuiEgYreo2J2EIN0doxtG1wZKdygp3SBYYCfYqHR3x+ju
sBWM6/xx7dz38+63fXHeN3daRmp6UiKRyPQjT3Ii8UZKIlGU8/KnDKAVeclH
fl7gTb9TjAvyZwykNd85q0c2VurTKcBbenEuyp8ziDZ876w+2Vmlz6Agb+sl
+Fn+gsGs0zuSiz16W+bLDbia1foR8xXy8Lq+0+zBIxzXT5sjeTHo75gl+UU+
b45hrnzAHMAz8ff09WY6d/MrE9nr/IQ5jJQsPhfzEjPIobdz/Qe5IQk9R7wf
xpNVX+P6UflVkvW85l9Mi/ejz3R9l9yTJP1R83cmc8K1M+ZrFOJyvN/Izmeb
peJ1yhfMscyTD5oDeTb+p77BzOAe9unt+VFuxDWs1WexW+7FY5zUCzNHLs1v
8pcMoQM/OWtMTtbFPlGEd/Uy8frlrxhKR4pSjPdcK8sf8tcMI50FzppwLetj
7yjO+3o5/pS/YTgZLHTWlOvYEHtHCT7Qy8fnK3/LCDbqnbiX/XonFsnNuJ6N
sYeU5EO9An/HjjOSTXpncnNA78xiOY0b2BT7Rabcm8c5pZfiI7li7EvcAxyS
B/FcfKf6ZvMl7uOgftIcToE415eYzbkxdpcJbHZ+zBxCvnitTGe28z1mH66w
R0/E58wUsumnXT8rjyKLXtj8h5mxB3pp1z+WK/Ff7Jp+0RzHVa7P1w/Lg7lS
fz6+F6aSXR/l+hb5Ze6PnWESh5yfMkdQMK7rS80W3MQW/bg5lPzM0feafXmS
M3oZPpErx2uO+43RbNW78ACH9S4sk1tyM1tjJykbzzm9Cv/G/jOGbXpXHuSI
3pXlcituYVvsLOXi+adXjc8m9p+xdKN8POucVyPBAn0c3akQzzVn1UlioT6e
HlSkEpWpQlWqUZ1UalCTWtSmDnWZ6++kxnfMIn0CPVmht+ZWtse9Qz3m6TXi
O2OxPpFerNTbcBs74t6hftznek2SWaJPYrvcjYc4qvdmldyW29kZ9w775H48
xVm9QTwH5FqksFSfzA65Ow9zTO/Darkdd7Ar7h0axnNCrx07yzJ9Cn1Zo7fn
TnbH7tIonhN6ndhZlutT6UdjmtCUZqTRnBbxrPC7dcnKCn0a/Vmrd+AuMmMH
2S/352nO6efM0RSJ3WIWOd0PLV37H4M1BWQ=
               "]]}, Annotation[#, "Charting`Private`Tag$976652#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV03fYzgUUBuBXyazsPT97772LsiLZEuXLrGxCyoqMz96EdtGwicxCyy5a
RhMNGkZoqPv8cXuec67L947feZOSB7YdkCqRSKT4J1OaRKJ22kTiR/kaw2nH
HWQmC1nJRnZykJNc1PH/fpIreZz23ElL+7/kVibTi9zUtf9ZrmIEHehql4GP
9EU05h7z3/IdptCbnnbZ+ER/njzUM/8iX2ckj5rz8qXekQf0jHysj5HlWawP
lUX4Vm9CK/0fuY0n9bJM1QfJQszitHmSrMZC+sTnktmZwafmcbIi83ghvhNZ
nDn8EJ9F1oz3EO/TXF+el9PkG/IJWZpR+mMyH1/pE2RlOund5K3s15cwTC/K
d/pdtNb/ldvj79I3vj+7HBzTXyQfDcwX5JvxunTmbu61vyF3kEI/8tPQ/lf5
FqPpQlMKUJBCFCaJIhSlGMUpQUlKUZoylKUc5alARSpRmSpUpRrVaeS1f5Or
4/lwP81oY/+f3Ml0HqFG3K7973INT9HfnJ8T+tOyCvPpau4ub+OAvpTm3GdO
sEufEXdFzbhtuz/k2rinuC9a0NY+Fbv1mfHsqBW3bHdRrmNsPLv4bdDO/ibe
1WfF+6N23KLdJbk+bineW/wWaG9/M+/psxlAnXjedpflBsbzYLC7nYP6s3Hb
dDCnZo8+h4HUjedtd0VujBvjoWCXiUP6srgnOppvYa8+l0H0MefkuP4S9eIe
zH/KTfE9x/s0F+Ck3iPomTmsL49bo5M5Dfv0eQzWC/N1dPrqufgsPqOsxMv6
CFmCM3r9uAf9qtwc96mXYWJ8VlmQmZwyT5RVWUCyOVlmYTpH4jnJCsxlhXm4
LMZsvjdPljVYRBtzZ5mWFN6Pe5Pl4r70ITKJb/RnZHWG6P1kbj7XX2GkXpKz
eoO4Qf2afJtJPBzssnJUfy5ulC7mdHygL2AoDeMm7a7LLfG69Iwbjd+NfXo+
1BcyLH4z5jx8ob/KKL0U5/SpshZLaGT+H8xVuTg=
               "]]}, Annotation[#, "Charting`Private`Tag$976652#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1nf8TQUYx/Fr72wyQxlFk8qsRBMNRUOpRFFmZJNdRgipbFJ2dtl7Vfbe
pOy9y+z9/PF5Pd/v5zzn3vu795xDwTpNqjdOkkgkUidLJIakSiT2pkkkSmFy
6kSiEq5yxdImEp24f/V+WMul4t7jduiNUQiluf5caozUh9rbJz+KKXplPGNn
uJ49Xs/xe/XO8n+ONZRXyP3lN+SpclGss5daf1/e6Vh9eYncRH5J/ln+2sxv
tjE3mUPNux0vY36jf2WmMZuZv5vfmaMcr23+qn9jPmB+Ye6Iz28O87775cfQ
Tf/Ffl1zgf6M/Kw8Qs6Bz+V18Xc45z65i3zNTiN5Zby+/KY8TS6G9fbS6B/I
uxxripf1cfpduEcvqw+Q02K0Ptw5B+THMTXeH9e44va6ctf1AdjApeXqcLv1
ZiiMEfxBrjSm6c/hOrcR6ex/yO/hPkMRjOT/4spguv48bnCbMAqH+LKYwb+A
m9xmjMYY/O1YOcx07EXc4rYgvfeqy+/lmqMofuT/4cpjll4Ft7kSdrtxN/SB
2Mpl4Opx+/QWKIZy3EAuHcboY+0dlitgtl41/l47I/WcaeKCTyTu17vLN+VB
eEufrt+Lbc6/Q/9I3u9YA3lp/M7yK/J4uQDaypvjHL68PEjuaaY3PzP/ML83
f3T8PfM3fYD5oNnJ3GmOMn/yfkfkJ9A9rkn79cyF+iCzWnz/cc3qfcw7zZbm
ejOJYw/IPeRbcT/Kq+Rv5bflGfJ92O49Muofywcca4lX9Ql6wdjRK+jfyhkw
Vv/ZOUflJ/Fb3G9Iih18Jrv1+YN6KxTHOP4Y9xTmxDWNZNjJZ7bfgP9Lb40S
GM8f5ypibny3SI5dfBb7n/CH9Dbxe2ECf4J7GvPi8yMFdvMTcZKvhPlcdaTE
Hj6r1/qU/1tvG98XJvGnuMpYoL+GVNjLT8bpuM+xkHsdqbGPn4JfMBXTMB1n
7D2LRXZqIA328zNwln8Oi7maSIsDfDafqSH/j94OD2Imf457HkviOYh0OMhn
t9+IP6y3x0OYxZ/nXsDSeMYgPf7ic9hvzB/RO+BhzOYvcC9iWVzzyBDvbfdL
7rY8GIfs5eSacEf1jvF96hP1QnhEf0IfLN+Bn/RfnXNRroLlce3Fc8HOaD1X
7MVn1r+K+y+e3/LqeBbzteSZcnF0kLfFb+X17pSbyj3MY/Y+MZfFtW1+Eb+Z
OUnvG897s525xRxmlnT8SfM7vZeZ0Wxu/mn+EP9uOP6+OUcfaD5kdjZ3xbXu
vS+ZVbHC3kf8IrlWPMvkMXJuZIzvVe8Z92Hc6/o7+iy5RPy2XieX3kw+7lin
uJb0yfGMRyn9Kf17ORPG6XOcc1muhpXxesiER+z14pLG59cP28vNfaaf0Dvj
Uczlr3AvYZX+LjLjCJ/HfnP+pN4Fj2Eef5V7Gav12siCo3xe+y34U3pXPI75
/L/cK1gTzzVkxTF+Af7jX8Xv8f0iG47zC3GNr44/uA+QHSf4RbjOv4Y/uTrI
gZP8YizBDcdex1r+Q+TEKT6fz/g5f1rvhtJYyt/kamCdXhdV4jms50EreYM5
JJ6ljpU0e+vJwumnnZ+fa6mf0bujDJbxt7iaWK/XQy6c4e+y34o/q/dAWSzn
b3NvYENcR8iNs3wB+635c/qXKIcVfIJ/k9+of4w8OMcX5Nvw5/WvUB4r+ST8
W/wmvT7y4jxfiG/LX9B7ogJW8Un5t/nNegPkwwX+br4df1HvFfc3VvPJ+Fr8
lrj/kB+luD5ccgzVL9q7h2uvX9J7x72HitwPXGaM19fYS869o2/VP8Vdcd1y
X3Mp4t7VL9krzHXQL+t9UEOfoheOf1/0p/UhchZMiOtJnys/HNee81Po78rb
4nuUF8sN5aryWDkvWssbzQJxL8h95ZRoKq8xh8f9I8+W+5v3mx3N7eYI87L3
KWJ21L80r8TfZC7XB8ffpNeM/zvq/cwiZntza7y2WdHxSuZQvbeZ1WxhrjUn
xn0gz4vnLbrIu+Pe8Z4p5drydjuNUC3+D6HnQ8G4T/V+cqr4nPoV5xSNZ6Z+
Ve8b3x8qc8O4bJgU95U+Xy6JrvIec3Q8M53/Pypcn1g=
               "]]}, 
             Annotation[#, "Charting`Private`Tag$976652#5"]& ]}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"LQR feedback solution\"", TraditionalForm], 
         PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1c\"", "\"u1c\"", "\"x1c\"", "\"\[Theta]dot1c\"", 
           "\"xdot1c\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.866299285262339*^9, 3.866299328491346*^9}, {
  3.8662993844302387`*^9, 3.8662993940861125`*^9}, {3.8662994510506735`*^9, 
  3.8662995142982006`*^9}, {3.8662995586928296`*^9, 3.86629956576654*^9}, {
  3.8663098995345144`*^9, 3.8663099077608514`*^9}, {3.8663118028724065`*^9, 
  3.866311838195972*^9}},
 CellLabel->
  "Out[4214]=",ExpressionUUID->"e7dd54f8-9940-408e-bad4-6bed731d5925"]
}, Open  ]],

Cell["Initial Conditions which were not solved", "Text",
 CellChangeTimes->{{3.865357567824423*^9, 3.8653575802374525`*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"babf6ace-7c59-4428-a267-e74cf670ecf8"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Energy", "[", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0.04393531553158958`", ",", "2.564108617112703`", ",", 
     RowBox[{"-", "1.8934398671106587`"}], ",", "A"}], "}"}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Works", " ", "in", " ", "MPC", " ", "sense", " ", "with", " ", "both", 
    " ", "constrained", " ", "and", " ", "unconstrained", " ", "scripts"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Energy", "[", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", "1.7176561578501914`"}], ",", "1.9865343349458087`", ",", 
     RowBox[{"-", "1.0173496185733697`"}], ",", "A"}], "}"}], "]"}], 
  RowBox[{"(*", " ", 
   RowBox[{
   "Does", " ", "not", " ", "work", " ", "in", " ", "MPC", " ", "sense", " ", 
    "with", " ", "unconstrained", " ", 
    RowBox[{"script", ".", " ", "Works"}], " ", "in", " ", "MPC", " ", 
    "sense", " ", "with", " ", "constrained", " ", "script"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Energy", "[", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", "1.3903695773492997`"}], ",", "1.2310181542446177`", ",", 
     RowBox[{"-", "0.6104047394312593`"}], ",", "A"}], "}"}], "]"}], 
  RowBox[{"(*", " ", 
   RowBox[{
   "Works", " ", "in", " ", "MPC", " ", "sense", " ", "with", " ", "both", 
    " ", "constrained", " ", "and", " ", "unconstrained", " ", "scripts"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Energy", "[", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0.08036047668264246`", ",", "1.3496547583989287`", ",", 
     "0.6830225774268248`", ",", "A"}], "}"}], "]"}], 
  RowBox[{"(*", " ", 
   RowBox[{
   "Works", " ", "in", " ", "MPC", " ", "sense", " ", "with", " ", "both", 
    " ", "constrained", " ", "and", " ", "unconstrained", " ", "scripts"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Energy", "[", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", "0.6909899189385493`"}], ",", "0.6897150795907763`", ",", 
     RowBox[{"-", "0.7182564346929077`"}], ",", "A"}], "}"}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Works", " ", "in", " ", "MPC", " ", "sense", " ", "with", " ", "both", 
    " ", "constrained", " ", "and", " ", "unconstrained", " ", "scripts"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.8653575500541015`*^9, 3.8653575502740326`*^9}, {
   3.86535820377712*^9, 3.8653582040260406`*^9}, {3.8659655274867916`*^9, 
   3.865965528011625*^9}, {3.866038916664071*^9, 3.8660389170649424`*^9}, 
   3.866039137588791*^9, {3.8662985288122025`*^9, 3.8662985558464513`*^9}, {
   3.8662993319152403`*^9, 3.8662993475391808`*^9}, {3.866299398205779*^9, 
   3.8662994288358645`*^9}, {3.86629946644569*^9, 3.866299466748592*^9}, 
   3.8662995366149793`*^9, {3.8662995715646653`*^9, 
   3.8662995977132006`*^9}},ExpressionUUID->"b9cd0173-657c-4653-9d1b-\
b1d172b2172d"],

Cell[BoxData["0.5409841449619704`"], "Output",
 CellChangeTimes->{{3.8660390743381987`*^9, 3.86603914292107*^9}, 
   3.866298560402975*^9},
 CellLabel->
  "Out[1544]=",ExpressionUUID->"c6bdce7f-dc38-4887-92bd-ff2cb6d9da44"],

Cell[BoxData["1.5182970043634338`"], "Output",
 CellChangeTimes->{{3.8660390743381987`*^9, 3.86603914292107*^9}, 
   3.866298560406974*^9},
 CellLabel->
  "Out[1545]=",ExpressionUUID->"731384d3-0bda-4e58-a666-53d8e039173b"],

Cell[BoxData["0.9937373965832886`"], "Output",
 CellChangeTimes->{{3.8660390743381987`*^9, 3.86603914292107*^9}, 
   3.866298560408973*^9},
 CellLabel->
  "Out[1546]=",ExpressionUUID->"a5b78502-7477-4f93-9b49-69b258772eb9"],

Cell[BoxData["0.008420046823809028`"], "Output",
 CellChangeTimes->{{3.8660390743381987`*^9, 3.86603914292107*^9}, 
   3.866298560411972*^9},
 CellLabel->
  "Out[1547]=",ExpressionUUID->"9c80e7a4-072b-48df-9242-7b3b5a078c7a"],

Cell[BoxData["0.2126104012178086`"], "Output",
 CellChangeTimes->{{3.8660390743381987`*^9, 3.86603914292107*^9}, 
   3.8662985604159727`*^9},
 CellLabel->
  "Out[1548]=",ExpressionUUID->"51eef66b-dc2c-46b2-a954-452519f744dc"]
}, Open  ]],

Cell["Test computation speed with A = 0 and Areal = 0.2", "Text",
 CellChangeTimes->{{3.866310813683607*^9, 3.866310829802389*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"6dcbb24e-a9ef-443e-b5e2-a43dfa73ff1f"],

Cell[CellGroupData[{

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"n", "=", "15"}], ";", 
   RowBox[{"\[Tau]", "=", "5"}], ";", 
   RowBox[{"\[Tau]1", "=", 
    RowBox[{"\[Tau]", "*", "1.25"}]}], ";", 
   RowBox[{"A1", " ", "=", " ", "0"}], ";", 
   RowBox[{"A2", "=", "0.2"}], ";", 
   RowBox[{"order", " ", "=", " ", "4"}], ";", 
   RowBox[{"maxIter", " ", "=", " ", "100"}], ";", 
   RowBox[{"maxError", " ", "=", " ", "0.01"}], ";", 
   RowBox[{"uMax", " ", "=", " ", "5"}], ";", 
   RowBox[{"maxCount", " ", "=", " ", "5"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotMin", " ", "=", " ", 
    RowBox[{"-", "2"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotMax", " ", "=", " ", "2"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Min", " ", "=", " ", 
    RowBox[{"-", "\[Pi]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Max", " ", "=", " ", "\[Pi]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]dotMin", " ", "=", " ", 
    RowBox[{"-", "2"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"\[Theta]dotMax", " ", "=", " ", "2"}],
    FontWeight->"Plain"], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"xdotMin", ",", "xdotMax"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Init", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]Min", ",", "\[Theta]Max"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]dotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]dotMin", ",", "\[Theta]dotMax"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"ICs", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "xdotInit", ",", "\[Theta]Init", ",", "\[Theta]dotInit"}], 
    "}"}]}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"-", "1.5919233888024076`"}], ",", 
      RowBox[{"-", "2.626560404936485`"}], ",", 
      RowBox[{"-", "1.8337732091632066`"}]}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ICs", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"maxJ", " ", "=", " ", 
    RowBox[{
     RowBox[{"uMax", "^", "2"}], "*", "\[Tau]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"InitGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"EInitial", " ", "=", " ", 
   RowBox[{"Energy", "[", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"ICs", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", "A2", "}"}]}], "]"}], "]"}]}],
  FontWeight->"Plain"], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"time", ",", 
      StyleBox[
       RowBox[{"{", 
        RowBox[{
        "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
         "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
         "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "Jff", ",", "K"}], "}"}],
       FontWeight->"Plain"]}], 
     StyleBox["}",
      FontWeight->"Plain"]}], 
    StyleBox["=",
     FontWeight->"Plain"], 
    StyleBox[
     RowBox[{"Timing", "[", 
      RowBox[{"ffCartPendulum", "[", 
       RowBox[{
       "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A1", ",", 
        "order", ",", "maxIter", ",", "maxError", ",", "maxCount", ",", 
        "maxJ", ",", "InitGuess"}], "]"}], "]"}],
     FontWeight->"Plain"]}], 
   StyleBox[";",
    FontWeight->"Plain"]}], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x1c", ",", "xdot1c", ",", "\[Theta]1c", ",", "\[Theta]dot1c", ",", 
      "u1c", ",", "J", ",", "error"}], "}"}], "=", 
    RowBox[{"testWithFBClipped", "[", 
     RowBox[{
     "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
      "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A2", ",", "uMax", 
      ",", "K"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", "time", "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"p1a", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1a", "[", "t", "]"}], ",", 
        RowBox[{"u1a", "[", "t", "]"}], ",", 
        RowBox[{"x1a", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1a", "[", "t", "]"}], ",", 
        RowBox[{"xdot1a", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1a\>\"", ",", "\"\<u1a\>\"", ",", "\"\<x1a\>\"", ",", 
         "\"\<\[Theta]dot1a\>\"", ",", "\"\<xdot1a\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Feedforward solution\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"p1c", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1c", "[", "t", "]"}], ",", 
        RowBox[{"u1c", "[", "t", "]"}], ",", 
        RowBox[{"x1c", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1c", "[", "t", "]"}], ",", 
        RowBox[{"xdot1c", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1c\>\"", ",", "\"\<u1c\>\"", ",", "\"\<x1c\>\"", ",", 
         "\"\<\[Theta]dot1c\>\"", ",", "\"\<xdot1c\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<LQR feedback solution\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{"p1a", ",", "p1c"}], "}"}], "}"}], "]"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Tau]New", " ", "=", 
    RowBox[{"\[Tau]", "/", "3"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Init", " ", "=", " ", 
    RowBox[{
     RowBox[{"\[Theta]1c", "[", "\[Tau]New", "]"}], " ", "-", " ", 
     RowBox[{"Round", "[", 
      RowBox[{
       RowBox[{"\[Theta]1c", "[", "\[Tau]New", "]"}], ",", 
       RowBox[{"2", "*", "\[Pi]"}]}], "]"}]}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"IC2", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x1c", "[", "\[Tau]New", "]"}], ",", 
      RowBox[{"xdot1c", "[", "\[Tau]New", "]"}], ",", "\[Theta]Init", ",", 
      RowBox[{"\[Theta]dot1c", "[", "\[Tau]New", "]"}]}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"initGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Lambda]1ff0", "[", "\[Tau]New", "]"}], ",", 
      RowBox[{"\[Lambda]2ff0", "[", "\[Tau]New", "]"}], ",", 
      RowBox[{"\[Lambda]3ff0", "[", "\[Tau]New", "]"}], ",", 
      RowBox[{"\[Lambda]4ff0", "[", "\[Tau]New", "]"}]}], "}"}]}], ";"}],
  FontWeight->"Plain"]}], "Input",
 CellChangeTimes->{{3.866310861993969*^9, 3.8663108764762793`*^9}, {
  3.866310918668623*^9, 3.8663109267929964`*^9}, {3.866310994358122*^9, 
  3.8663109985797553`*^9}, {3.866311859242159*^9, 3.866311866960662*^9}, {
  3.8663125695042505`*^9, 3.866312588432122*^9}, {3.866563598159934*^9, 
  3.866563603232319*^9}},
 CellLabel->
  "In[2084]:=",ExpressionUUID->"4586b62f-1931-41f8-b45d-20c47c3c2d76"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   RowBox[{"-", "1.6851945913353008`"}], ",", "2.725490843324895`", ",", 
   "1.232626343325748`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8663109335478053`*^9, {3.8663109999823008`*^9, 3.8663110214563494`*^9}, 
   3.866311194894208*^9, 3.8663118684581766`*^9, 3.8663119082363005`*^9, {
   3.8663125738458433`*^9, 3.866312597307249*^9}, {3.8665635939962616`*^9, 
   3.8665636095343094`*^9}, 3.8665657963703446`*^9},
 CellLabel->
  "Out[2094]=",ExpressionUUID->"f609e647-0941-46a3-84e6-74dea5982a11"],

Cell[BoxData[
 RowBox[{"-", "0.2`"}]], "Output",
 CellChangeTimes->{
  3.8663109335478053`*^9, {3.8663109999823008`*^9, 3.8663110214563494`*^9}, 
   3.866311194894208*^9, 3.8663118684581766`*^9, 3.8663119082363005`*^9, {
   3.8663125738458433`*^9, 3.866312597307249*^9}, {3.8665635939962616`*^9, 
   3.8665636095343094`*^9}, 3.8665657963733444`*^9},
 CellLabel->
  "Out[2099]=",ExpressionUUID->"c9c5cfca-9d8a-422f-8c07-34a018db6d95"],

Cell[BoxData["0.15625`"], "Output",
 CellChangeTimes->{
  3.8663109335478053`*^9, {3.8663109999823008`*^9, 3.8663110214563494`*^9}, 
   3.866311194894208*^9, 3.8663118684581766`*^9, 3.8663119082363005`*^9, {
   3.8663125738458433`*^9, 3.866312597307249*^9}, {3.8665635939962616`*^9, 
   3.8665636095343094`*^9}, 3.8665657967222323`*^9},
 CellLabel->
  "Out[2102]=",ExpressionUUID->"c4c3a4d3-c052-432b-a0be-e1f24f246559"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
vz+BsFVyScJlP0qPUo9g7V0GO+yTRGqx+S0pZsv7iV+ckOOVRG29whD9PoUf
F46cdN8lDvwFV/jkOpfApBZFehzbP1S+zzlyQ4sT1ryfebsbqy/8fgXCq7Ov
vN8bgoGWC0lcZsuAZ8oqyM+bClIWd+3OC+CERs1n58ax98PvV5Cznw12f8OL
/if/hFB38v4me0GE37fwedjgrf1nf4D7KELXZ64bHM+i+yhFakVZ8dZkgPsk
tiYOa+FLFID7JAmV7X++b+sDuE/SEEVu2sY+AHCfZJcpq+mg+SCg36/QcsVx
Ezb+cZ9Eu+OI01ns+3GfZNOHCKk//FSA+yQfKt1LjQoGAO6TWBwp3+Vp3wdw
n+T/VHfn0VR2/ePHlUMROofMU6MkSkKk7F2KUjSQDJESaVCSMmtA0SARUklp
Mg+hOVdCaSCRDIXDOcfBwTmmk+HE73p+696737qf9fyee33/+z7/WfeT4TrX
de2913qt90dp2tqYmKNtAHmSqSuiwvKvNmEfUvBMUcfcrolAPuTWXlpS6v42
AvmQ5Y3BDsxSJoF8iIFW5u73e9kE8iEiy5MHfn/qJJAPGbW4rtpFrt/Ih1jJ
39u1+3YngXzIQfaOWKoemxgb5sao5M6Ed88HapozmLgHcba87XFjfjWBehBw
b2r4Xo8yAvUgDE8waDpXCgnkS45Xvh6eWZWEfUmlgmzKq7sLwX/zJagXIeTq
cfWIwR6AehF5nzhzbsrdBagH4a/8Ke/aXBZAnoQVtDzs4rsOgHoQTOKN0DsG
G6AeRF+3f37iiU6AehBmh3PHQ1w7AfInnDl7g4fPsQHyJ9+LM/VfFrIA8idp
jEONr2YwsB8xdy9dcUmXQSA/EiQyeX/YsINAfsRGVmzesGEngfzIY6r4yb0L
uwjiNvwQry4JadIiEfaSXcQ3mV13rs6VgrfO5pgdEOrEPYoj4+Kri2cWE6hH
we35vQ04phPIn9g9fJacfjKU+G/+BPcqHh+tWf91PoF6FZFq+bbqLxIA6lEM
g/hzEelsgHoU59z66s/u7gTrz5hb3xkbA+b6jfmuvp2gWTBHAvwWAM+ewiCV
OjZA3kTp0sdYozo2gbyJLuVdSvrULuK446PFYT8loMakS+BL8nx7ZOip0VSm
JIy8s6/t+o5O3LuYZxNYknw4j0C9C2I7EfjrdzTxd6+C+hd0vnuL3IdAgPoW
zsWvfO1kO8FYt8mEH38U5BQqpPwi3zfOPguStvPHwe1zX6ZEkvtv5FMWvXfy
k4vqJFKDLW7o7ZCAltu5p13J9VuC0eiRtlcS+lf//NXa3Il7GbyHF/uM8lMJ
5FkKtZKD9B/uJf7uWXA/gzm+TvKtCTEr4of0xgcjQL0wZmgZuX5OlkW/LHg5
BvTO3pDqI9dvQen8OveMGZC60EY/vquTsHrW9HP0hQQUe3nwrAt5/kJ9jcV0
ZV0fctONfMthse0pW+tWANTXmL2X8WXhbW/wWeyKwfSCUbBlltfMdeT6Lf/E
S9Tj6Th4WfNcXILcPxTulHwotlwCRhS/Yswiz48sKKmgvkYSrg4xOZj3qxP3
N742eGV1XvYhcH8j9uwjTpw58LYwuK+pPQoSY3UkJw51gourJ+iXjMfBrBVX
2d3k1w2SSa+f9s2ATU/DNdfIdxFJguOBEhMSkGc6dUhcvQv3OrTaJiA76Byh
+bnzHdt4DGh4C0QeketXzN0z0U5+EnCBKZ1qTa7fqNfB3s8/dL3VnPi7l8H9
DleP8ZcFBoTxfl8DgwwJ+P7pRMQj4y7c62i323Z1eMoKgHodp7WnJV3M8gSG
SUbbtl4dBTKPKtduJj+PVet5i4fnSMDlyrMlPuh04X6HZeybVKaOP4H7HZob
z812XASavrcQ3uKjwPfzFbayRyfw3J2aKKc0DrS+XfgY5t0JXMeDzO41z4Ax
r01uhJPP+7lMyVqLXgmYfuHCsn0aXUSsU2z7UoUxUE+NuJhH/v0KV/bNsvCQ
gBattn57yfUR9T8WqmV9reXbEbj/8eLeQCpvBTH3XjdF68cYUA4PCwzzI3+e
2Jrw4k8SsOn+1D0z9bpwD8QzW3H0lZU22BfIUnzzbRRsTyx7FEKuX1oHtWar
rZOAVZkHKBYruv70QaR6r9Y93QHerAKZKU5j4NuTDRmN5PM0vfD2dO9I8jyo
IHd2Pvn5oD6IYm8UZ660BvF3r4N7IdUKASH1OkSuaUlbzV0JeOpVmU0X+byh
foi2zdPItsd6APdChDYkuXSmF5vP28+zmTYG9j7XsTpMXp8WEbv6V84S8KlB
vGP4v9Yz1A+5qZz8UtqEoBauoh/5NAbKpkxkfvHvxD0RvXf+7nFb9YHC2hcL
maWjIDp+4pk/ef7m0ZUZcSYS8JDqdKVt5H7ZlzLreanlGJDql+qyJ3/eZ62Y
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
dGbdW1fyftC/W5g5ebUNXBNc2nmV/P79L7YfYZhRYCBU2l1Bvt9Ejce+3dwm
Amu/Jx1dZygAI2ssuG/F24CPYctQ7FUWYWi9QGvnMSo8XlNmMY/8/si/KmU9
6m/k+4KzLzRkzB0l4RWXw482k3+Pj9Bcz1WK7UArwuXEVPJ5kH+/LXueBwXO
iPNSVCP3l1Nan55cu50Kvwpi6x6S1/f/08ube+50oinyrm383YaX42pwL+/B
U04zbScd9/Iq9We/5Fxk4l5eeZ9vdW1tB+7lURV3XfmZwsa9PCljqSNvpdm4
l2f6UPaiywkW7uVdk0uxb13AwL28UmA6Vh5Ox728r+4/HVuWNOFenmof83Qp
owZ7Vw2ZYDtJlXLsXa+FhT6/ruKD5/OZUiJNjve/x/P5Zt0/onvergnP5xO3
vCYVNMDE8/lC1X2Vxfb34Pl8v2VqpWM+9+P5fEuEVdnHzg7h+XyPbl7/6LyV
j+fztdZpZYL7fNzLu3dqxYLZF4ZxL88p1aRlbOEg7uXN7rI+/5rLxb28mW2h
35WPd+JentLKnHI5t1bcy7t34fZsw/pK3MubJZrclGqWir1rSU3wJZ3Sr9i7
BoY9tVVxacHe1dc5r5v7mYm9a7DPpcQV+Z3Yuwo+bW7RleNg73o1wDvNrZ+D
veuz+pbyyLFu7F2XzUuRbmxnY+8a4vRM5cFYO/aul7aqfjHY/8e7dvVT7Zbk
/u/xruLLFcrXTSvDvbyYrRu/yjk04V7euwupO5cUtuNentZ8zlg2k4Xn9d13
aYotO8TG8/ri5osdzQ9mA+RdvzSOjW507QDIu/76unlVw24m7u2NLq+ur2C1
4d7ey7sy+cFvm3Ffr/zg9SkKtZW4rzcrzCuZfqoI+9hXdrpXb87i4fl6cvtP
J2SZDuL5em/rxApd44cJ5GOvf+tLMMzi43l7cvs1jTNN+ATysetXSb4wDRki
UF9vYJx9tyanH/f1ascCWA2benAf74kBK5tj3YC9q2GBwzwL8rog76o8oD/S
zenA3lXBdoltnXQ39q5vpl4x0H3Dwd7VJMU+yDKHg71rdGTOnYzCLuxdJ7vp
6adzWNi7HhU6s6k6qxV717QGhsn0sqr/sXedXXfbPqCiECDvWufY4hr+8Dvu
6V3uWWsom9iGe3pnMmwbtcxZeF7ftAOLSqbpsPG8vvuhvM3mSWyAvKv+0RKR
xSUdAHlX0Xd6H8e5TNzjMzt2/JQg6k+P71zZwLPLR1txf09TTlTcbaAa9/c+
uM3aFCnxBvvYLKbVotGtfXi+XtbTW4PPIgfwfL3j7+3M98kNE8jHtpwc4PRE
8fG8vdxTell7A/gE8rGbzk/tXy45TKD+3oFrcTR5nwHc3/ueELHYf0Ef7ucJ
r2RlV8jXYe9q1zD+xuwpHXtXaknpiC+bhb0rz0tC/4JXF/aut9JdvwgCONi7
6lynDhU1c7B3faNq0tfs2Y296/S0mXUnGzqwd5UvHg1d5f/HuwpfKBi9IP4/
965qTE5iEO8z7u1FhoG6mNxmgLxr9TB13UAuAyDvKqwT6frZswPP80t5+Csw
+iobz/ObnlUl57iFDdA8P+8pCzfb9LOwb3XR36K9r3OQQL7VoX3qtB0TwwTy
rdtLM/s6nvAJ2muLgIzlotBl3Um9Qs4wnteXIG4El/wYJJBP/b3MJmD+eQb2
qbdVCp2HG9nYp2au7eyNvtONfSp99q4NSzs52KfavFZtKtjLwT61OvaMVEBz
J/apNTeoqWn7/vhU7fGd/s2L/vjU8/tMEo81/XOfesfMeDVf6wFAPtW4NsvA
Kf0b7vGVGuaevzBOxz2+TLE7t673MPG8P/qhtcfrhNl43l9+HONyx202QD6V
N8y2HCLfR8inSs2u/0bTZ+Ge3yJJaslow5+enx6j7JqfOh33+5gL+sP6e7/i
ft/s5oYqxs232LPOG9G+Os2lF8/ne/+Wl6uuPYDn812eZ9nKrxoikGc9lGKt
NM2bj+f1vbjs/8PgKp9AnpV11yNZ0Zr8fP/q93VwJi1eVw3gft/ZAz/s0iW4
uL+n5p3wSepYLfap75PcnU9xWrFPhStTOhp3sbBP1fbPkzSW7sI+1cQ8ZpjY
xME+9frqyPO/uznYpyasN60VFHVjn6pLi94fv4eNfSqxUz/ScfUfn2p7kMaz
XfvHp+oW2XvM6L3/j31qsAxseBBbgXt9lw50L4qb+RMgnzpLgic+15ABkE/9
rM7PHVrUgecB/tgsND/vDBvPA3z14qK/kCcboHmAlr1Fy09pdWCPeuDZ9O0H
4wcJ5FFXernpZn4eJpBHPdUiFRBRyCc03uUFbpolCm99DM3uleXjeX9NGr4p
B5cMEciTnhtzD4n60Y49qVBVsD3hzsaelPPp2KesXd3Yk9LFq75M1nOwJ3VM
lFw94xIHe9IWY78yf6su7Ekrp3rHx0v+8aQV7jJTLAabsSd1GZ8wcmz/8I89
qWr03NOsRe0AedIm40+rqq6zAPKkQo2VQbfI9xfypJZm2aLml9mg/JBapnpt
F3jWee7DldgO7EkH45eejLMfJpAnXdx/4LHQbT6xreFsyOU6EWi50qCkYRef
QB40+nDhIcXSLuxBdZRrvWvvcLAHpZirtIZ+4ID1WQ5iQ9Ok4WED+ToVme5/
86HIg47FJwa43O0AyIMK1E7Rom+ygTkxNj/uBRtsMzo6yNBjYw/62vGXqZkW
n0AeVHnqgdS1BXxCUNDiJ2YjCulV8jtlXg8TyHtu7Dssd6ilG3vPb76JE5k8
Dph7an3j3HIaDDcRtVyhx/mP/vPNrEnVJ7viAfKfe/rOpF69W4t7fgcLKXpH
M+i45zf1q5qZ5msmnj94K+BdXn5PB54/6PzhzsxR8nyG/OeSc8vcmyfJ/edf
/vOBV5GwzA4W7gFGnAgmcif/9AC3PnuieGg7Hff/3k0xrL1yoAb3/2L1TRc3
N5diL2oLAxqFGT14XuDti9PvFgr68bzA2YnllbbpQwTyoq4j61q6XPl4fqA7
5cmsHTf5BPKij3QaLrw4PEyg/t/hEKefH8cHcP+PsiDj3MtQLu73mX/8mDp5
owb7z5/ty9bJarRi/6nCFN19WZaF/aeshRH0au/E/jPn/KUjbcs42H8GH/zS
PoPLwf5z8aj+ctvGbuw/pdYLDS+7x8b+M6iYWz5664//bClaeWPOzj/+M3Ui
QTXQ8J/7z8g10bpF29/h3l+P4xpjnRU/APKfo1vtni7ltwPkPyOTX9bMmd6B
5xPerj47EOrHxvMJ18zKm97kwwZoPmFMQnZvzfoO7D3rh48eOHNwkEDekz1l
ycpn+cME8p5w2/Ldyvl8It/SffwmRRRmyu0zcF7Ex/MHSzWf3nezGyKQ10zb
dNztZlg79pq1b8SLzi9iY6/5ov9hdqhRN/aagV/9G8UrOdhrzg3NlZS8zcFe
s9jq0yWts13Ya+Y8efFefPcfr6mVkVEvWtOCvWZWYb3sr53/3Guul/zke7Wt
DSCvuc3pUO5ObxZAXvOW9+9XcwEbIK95ripWczSODXoehf16Gd0FcqJSFuzI
6MBe8/F0x4EFRsME8pozlc1b8q/xiZ+7Vkw0l4tA3ow5uwsO8QnkLauMDBbM
SOrC3vJxos88u2gO9pa1VfONAr6R779dgttHJ2nwsxpxXRp0/5u/RN7yjKXq
lR8RHQB5yy7dNlOLRDaI0X8u8Atigy/mybkJa9jYW14s0l0kQq5fyFu+iwh0
bi7iE+eM4kYczERhzQZZN+63YQJ5yqdZlh9M33RjT3kq6vBc917y97OzOW3x
mgZzZuWKOJH7h7/7SuQp3e99dluvSN4Pf3nKrLay0PRbbOwnzx8aO1QQwif6
3e9Mhj4UgVqjBzcwI/gE8pHT+D85H9w44Hdps+iTIzTY/SmhypDFwV5SdlXZ
cmlKPEA+0kRspbjLBTb5PBtmrfndAW4cIGIX7WID5CUDdUL6DTqGCeQlk7fz
tH3J/XWqZdxqMR0aLCze9UqijTyPiB6tiskm90O0VXvN/DnYQ0ppC8kGubCB
5dDSGXVCHeBpbe3bMxFs7CELvq4QbnjAJ6bLV5s6zqBB1YLM9T75HDDH/eHB
edE0mBLisKz8FQcg//h6+8q7nuR+FXnH4t7dc06Q5/WVoXarnlnT4NawLQlT
Bjj/2S9SLo6Un4gAyC/Csg2Mncq1uP+3vHqLrtgZOu7/lURVNJfeZ+L5igP0
pAOB9A48X5FYe/gX9Q4bIL94/1J3ibcYGyC/GJbQ+3iLOwv3Ay9olro2SDNw
P7AwctqdzEN03Aucp3Cn4PvDGtwL/KV0QutISBn2jouirBPmP+jB8xDDRnIt
njP78TxE6ez4OTMShgjkHTkBEZe+2vPxfMTNmy4p9KfwCeQdHwf7jl0LGiZQ
L1BX/Wv5BG0Q9wJPy/ao7H7Kxb2/LDX5c9ZLa7Bf1IxYpnnwbQv2iwxZs3jP
fib2i/cszoVNfujEfnFoV4ep2XwO9ou5PplBR8j9APKL2qe4T/S6u7FftHLo
VVlXysZ+sVAssUXyczv2i4Nf8x+8ba3HfjGeZmFkvfCf+0WKmXPZkSXluA/o
Sfec21jRBJBfHASem4/VtQPkF303r3W8xWf9mb/4YIFF7TE2nr940F9jSwe5
vqD5i2wLr21aNh3YK15Ui9IqtB0kkFfsZA9+fnZvmEBesXRRgVlDDp/gXyJM
ygQiMP8040qaHh/PV7S4+VRr+MAQgbyh9tYHn1V3tmNveG/Oy68scTb2huO7
r5o3LujG3tBh7Wr5pncc7A11n5sb7nvIwd4wsfZHXt7NLuwNjdNVYkTOs7A3
VPDKX9sN/njDl9t9ubpX/rk3zDLtKLn+qg0gb/j2Tr+bvxMLIG+48ER2xUZD
NkDesOxGRH53AhsImT9RvXC4C0wrXmrbUtSBvaHk7IsORxcOE8gbvuM0U0Ov
8Ik5KVdNRYtFYMi0wfg8Hz6BvOBHM51W/7Au7AXPWvbU7AvnYC/42Ud5yZZG
8v1TVHlAZ5wGNwgdOL7atvvf/CDygu2ZMjURfh0AeUGT9FMnk66xgf7R657d
TmzwbWZxQsIGNvaCmiM6i36I8QnkBc/rfiq8Sr5PPwf2Gp01EYXaD5x/+tKH
CeQBz264pJ2Y14094EmZs7xpHPL8ubap1uE5DVpkriiAOzn/5gORB+S+unCm
VIoNkAes6lek9Sazsf/Ln+g6NcOPTximjYFHt0Xgx1NbjAou8gnk+zJkZ2ZO
kt+/IXefY8VBGlw0U8VmWycHe7+SbLpVoF8KQL4v8FDT3BXn2OC9g6xCYXMH
KE/qcNPfS57n/vJ+v8NkqpMbyfP6X97v22jExixyPV3KfOFcq0mD8sY/Dpf+
JK//wPCce+k0uMnAYLHrWQ72fB5pCz+b7mSDviUz/SzaWEBR3e1pRBQbez51
qZ+7lVP5RHzeL5f502hwVf6Kry7p5Hlxq06xwQUa1JgyT8qxlAOQ32t6veO8
Jnk9kNe7dGJkhlgen3gvH7rrrCUNro7Vl4/v5/ybv9sd8D6beMAE/LTg/fHk
eeLKeZ8pvXtpcIlvwH0Tcr1H3u76q6jtFcFsoDZ8P1pDXASyHh2qmnzMJzbK
i9/eP5sGixKMdd/WcIDR/Upr7VQWON37WfJtDLl+/OXrvpX4zotMIp9/TRN3
x7M0aHfte9PyLxyA/FzzlvkXryexsZdLITwZH8jzd5tl5S25tTT4YPz9NXNy
v/4p2nJieB4LvF3R7aZCnu/mNtgV3POhwdP9N0uyyfUbeTjT/au8n0+GYw8X
o3r02oJoNggONdR8v1gEXomfJ9NM3q+y+YdUwTLy9/l0//gPJgcUH5IZjuik
QPqGOycN0/lE6NeNby0WMEGieK/0FvL6rLzq4DT9qAhMbLYxPp/GJ3KYS1T6
ttNguRh3eT95ff+jd3uw7bX/2RMAebckKcWq+/U1uPc30mxVrH6Yjnt/TvJr
t3hcZ+L5k0zVMRmDpg48f7JX3MVOiFyvkXe7co3TMId8PpB3e/uxkr7Li4V7
gYmjLGlXFQbuBep6tMSu9qfjPmBIpYaNfXkN7gPqTqsZ+PG5DPu4UK6Shdq5
Hjwv8tXTPa4ZDf14XuTU6KhDGy4NEcjHbReTkb1ny8fzIw20wmfNJe9n5ONm
aB84xTw7TKA+4KMgdo2w6iDuAx6nZ4gl1nJx32+91DB/0+hX7N2ijXwjdsa0
YO+mucrziWErE3u3nbf4VQ9fd2LvlnMx+coGVQ72br7yIy/55HqNvNtyFZkP
Rwa6sXc7Y3nERK2Wjb2b9cUp8gcY7di7uU3hDNyd98e7heb0uZYd+ufeTf/O
nmOGN8twD3DdFyHGgqtNAHk3VY8nR+ll7QB5t59mE9se97LwfEoFv0mHhiNs
PJ/y0e5iSdtANkDzKY/lL9UocejAvu2ZSuGdpxsHCeTbXNdZVCXeGiaQbzuw
OGd1XDafUMzpcWoYEYGR+emTeiv4eP5kk1/jSOrxIQL5tL2+9bGvYTv2aVuF
n4ceH+/APi0NXFJyU+nGPs0qPmb9NfJ9hXzaDb2uY+4ZHOzTPCVfLAZpXdin
dVP8qbU3WNinzUzo5waf/OPTUqUN2zoX/XOf1hMx5NaZ3gaQT0vS3X2sdSsL
IJ+2K+XWYNEycp37y6cFB9ySgtfZQDz+i+4xpy4Qa3/V/NLLDuzThtyU7IbU
hgnk02Lk9DRKLpHX602xi9ILEXhPmSkmc5JPIF/m5cOgXfbvwr5MYSQxFZzi
YF/2zuz28Zgf5H5yj+EWiVEazGiVGL3t0v1v3gz5MnMNtRsG3h0A+bLF2kkZ
6uR59ZxE5O15m9kg5FR9z+QmNvZlC8IWJMyj8Ankyw5bjepXkO+/vptKDgkr
RKEmIbZNlTwfIT82vcteNSWtG/uxq9xk0cwuDkh9lvx771Ma5GVvuDbdmfNv
ngz5MRDtIeFInh+QH3v8TlT5OHneQV6s81pAw7XjfMLhw0LXlzdEYOFHZYXQ
aD6BPFj9GD2gbxsHvFugGf7VkwY/8T4vLyJ/PvJhvAu/+713pALkwYJaxR5P
hpHP6y+KdW9lBzCctmnLXHc2QD5sMJT2YWntMIF82ASoej2fXK/5eVVezzRo
0KZhJ8O7iQOkPJ9vynpEg0Nvitlm5znYf01TmnIs0IYN4OeJrNNfWcDxaL3z
kYts7L8cfva8V7zDJ3aFzDgqJkKDzbx0Rc0HHND9jsc2jaTByNmPfQPJ/Sry
Xis6tO95kOdh5LtAttLC/Hw+Ec28enj/Bhr0t4lT1CXXk797rcdyTxkj8Uyg
U/8oo5pcj4J/Gyzmu9Lgj03soGV9HOyzvMvU6UvJ98FAqU/QgIgITLra66VI
rtdUpmrOZjUaNMgWeTpMrr8X1rwOd49lgRGuuJlHLLnf+8tjHWB+K9RMJM/H
tyei3U7TYOOJHwHMrxyAvNUsqHYgiHw+kK+a+VQ4Yjd5PdPk27LGAQ1Wjqra
u5O/j5r2Sv2ls1jgovJtxR5yvaZaKzVnedPgk42ZKqcZHOyndHzdg+dG/vFT
jQrOuf+aH7fViiIbt5A8H++6frqQvF9/hpzSmb+UfH8fzT0qTP772JVtbduY
FEho6IjEPeITCQteabnOYgJj5Q5hNnm/Sbku3PDtoAjc9SJhf1QGn/DNX6td
u5UGJTs+ioiR5+u/+yi7bQlbDp1kgiGpc+FS5Ppq3/UqdLozeZ6bZk//SO4/
buyR2nHhNwXuNdv1QITcXy0JvsWr92GR++PM9MB4cv91ZDmwPcQAvl9ShsfJ
r+19l0V+giLQVt/Qy4z8/fXzp1eWm9Ag93edYH0PB7z1ULxzd4gJzhZ/PmNL
7t+6je/qEodpsLvNreVrB3m/dKf0aamLwCfpXEUV8t97yj+y6tOiwUM7xvb+
aiGfj8o74zEDDMB0jPhWS/57oU0HNydvpsF7nON9TeT9I/Gz3u9cERPkveDv
tCDvl1Rabj1jHw1S3rnt0CJ/vqVG/V1HKRHYeut5SFUBn9BUO5g8kMMACXEF
L2/fYGPvtFBwyF+F3I8phT6/tGwdDfLvW32ZTq6f/v2OFa+Ws4CN5LKjK8n/
P/JOQSH6aV+bfUFarqfJ+FIRWLZ0tL2X/P09QuodlhoyQdjOh8w75O/TKa8s
IbaDBqOsPsq/IH/fv/smJ+marUIRDIC+bguWYT9eIIL/+xqN38mhNjT89f/j
of7v//4PS6YfuQ==
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{504, 2769, 425, 426, 427, 428, 429, 817, 712, 625,
                 555, 503, 470, 837, 732, 645, 575, 523, 856, 751, 664, 594, 
                430, 818, 713, 626, 877, 772, 556, 863, 758, 899, 671, 887, 
                782, 906}}], 
               PolygonBox[CompressedData["
1:eJwV0jdMVWEYBuADaDTExFhQehFlt4J1sCT2ARxsoGJNTFBjjL0MmmBXwIqD
iQNudsWCvZsIKoxKERu4gIOJCeDzD0/e73v/e+695+RkFW/IL4mNoiiGz9TF
R1EtRxSJcVF0xeFCBvJFV0Ou/r19KyPp0h0lSX/VvohBNOoekqevtW9jFN26
YyTrr9kXM5gm3SOOk+Lsum4JCTTrHnOCVGc3dEsZQovuCSdJc3ZTV8hQvuqe
Ml5fZ9/OaHp0ZaTrb9mLSKRV94xyMpzd1i0jiW+651SQ6eyObjnJfNe94BRZ
zqp1K0jhh+4lE/Qf7DsYEx46p/XD9HfNxaTyUzdT12guZSqvdBN1H807GUsM
+bpfsoy5rLV3yyrOuCbbfs+8kvXmWNLCM5cd8jxbzP3C9/j8LNmk2ysPyo2y
T5iZFr5H/pMH5KVwL3IAh3nt+knyk36P3CVLZG9KGReel/wr98uL4Z2Q/cP/
MhfINlnOZnM888zrZI+8zFm/Mdx+37yK9PCO2DtlJW3OZ9ubzYeYzhvdZF29
eTe5xLFA1y4rmM85nxuhe2BeTUZ4x+x/5AXanc+xt5j3hXuWm2RfZpjfOp9i
bgj3Tx69wjPW5+hrzGvI5LfuHZX8B44KcIU=
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{391, 2770, 2767, 508, 560, 630, 717, 822, 444, 
                477, 529, 599, 686, 791, 395, 507, 559, 629, 716, 821, 443, 
                476, 528, 598, 685, 790, 394, 442, 475, 527, 597, 684, 789, 
                393, 392, 441, 474, 526, 596, 683, 788}}], 
               PolygonBox[CompressedData["
1:eJwV0NsvlgEcB/CnjMJsrf9AJYeOtyLpsJJVaMNVbcwhqd7WzGbNKplupG7S
TTo4dPgD3Dqkww2hIuoy6saxaBk2n+fis+/3932e14vE0sj5a5uDINhENyNx
QTDKa8MrXjLGP9K8eJ2PHIwKgi7bV5ZJtUX4wAHPOm1fWCLFFn7Je/Z71mGL
07No5Acn7J/tufpDfpNv+2tL1q/yjn22dluB/pg5im2xsp0VSt2H5V2+c9w9
Gv4t+joV7tMyVt7ggf6LPP2P9xJkLU9tDXJZXpS75T0ZxZWQu14OyL3yhc82
y+3c5I29SQZUke+OlzW06nfkrCySW+U2WRf+HP0/JXqmjJERGvRJjukjvqtL
X6PcnSNbmOace9HzNn2JC+4kWc1b9rife56nP2KGQtsWmRH+Xkxw1DbsvVP6
faY4a1uw7dIv00+a7ZktRj/Ebb6Rbf9k79RXKXOflM385Ix73vOdehV9pIb/
d1u0ns4txjliH7LPscN9iV5S7G22QWZJtFXSQ7JnT2wbo61fxw==
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1Hecz3UcwPGzVzh7j7N3ZJVkFScUGWXTZYdDGdmZ0Z6KqFSUEW17FbKy
R2iXomE0jKzn+9Efz3u9P+87j/v+vt+vS0pJbTs4TUJCwjRfomV9OajD9WVN
0dyMp79zO03HaLY4D9JiTKK5c1P9R0fpCu2vhXiUGc5d9QZ2m4dqEjXNN+uv
upg+5vyMNXfUzOwwd+Eu8xXdwHOkpZzdIX2FAdxJM7t/dSUzqcUtdid1CePi
WkhHefvDOpsHaUFt0pOBjGSigp87onMYSEvqkJmKvveVvhr3hFbUpZ79KV3K
eLqRhUr2R3Uug+NzxT3gVvvf9D0m0J2sVLY/pvNI5W6S7c7rKh6Pz0d9u991
GRPp5JyFneYe8e/MV3Ujz8fOOSf7zNmoYj6ur/GAOQ9DzO01PVvjerU4rc3N
9YKujntvLswT8Tk1O3vMw7QUU6nnfJv+oSN1ufbVAkyM98S5s2aN588u5yFa
kin0dG6t1/QR3RTPTIvwgrmnJrLf/JCWjvfNXFW/1tfpZc7LUHMHzcAX5jbx
7pgv6hqejOdBA7s/9X0mcX/8bPxn4TN5kexUc/5G34jPzD3xLtld0rU8Fc+H
hnan9QMmk0IObrT/VufHtdM27hWN7M/oh0yJ50JOqtt/p2/yMO3iWmlsf1Y/
Ymp8XhKpYf+9vsXweKZxLeTiJt/7Qd9mRNyX+L3kJg95yUd+ClCQQhSmCEUp
RnFKUJIkSlGaMtT0O37UBfHsuTeulbLU8r2fdCGjuI8mwf6cfsw0elOO2vY/
6zvxHtCRlnb/6Tqe5vZg95d+wnT6xHOJv3V8bn6J8tRxPqHvMjquzTkj28yd
aGW+rOt5hu7OOdhrviOY/9ZP6WcuyGPmLpqNL81945ma07LZPFCLMiveKc3F
OA7E89Qyaf7/u1zBua7+Es9GF8V90HxMYEzcL80UM9udU7UEk+ns/CxN49qo
SDMqUZkqVKVavIPxXsW7QnK8F1wHNvellw==
               "]]}, Annotation[#, "Charting`Private`Tag$389369#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1WW4VGUYBdChpbu7u7u7G6QMUGxFQFEQRbHoTkFauhukG6S7u5FGStr1
Pf5Yz37f/c1c7pw5h5u5bYcm7aNEIpE4USORXoZk0SKR2ebXScAJ3Qp604fk
zufom5GQk7qV9CWFs7m65iTilG4VxfW77F9TkGe6fqTUz7O3IDGndaspod9t
70whnuv2xolE+stUzubrWpKEM7o1lNTvsXehMC90A0itX2BvRVLO6tZSSr/X
/g1FeKkbSBr9QvsbJOOcbh2DSOtske5NknNet57BpHO2WPcWKbig28AQ0jtb
onublFzUbaS0fp+9K0V5pRtKBv1Se2tScUm3iWFkdLZM14bUXNZtZjiZnC3X
vUMarui2MILMzv7UvUtaruq2Uka/3/4txYgwUp9Fv8LclnRc09XSnTX3pgrb
dGV1B8zfUZwoNNH9LYdSj4/sL+V0fvOerPaV5vf4zByV9OGay3vy93CvmOOF
n+P1teU5XXfZR3aUscJM1fBz5FPZQ04On0Umph9/eX85eVD/g+wm28sY9KZE
uF7ysfxVTgz3hEwYfi9zU3ldDqOTOQ71zR/LV3IGo/wb2eyrzO+TIdwj9n/k
GK47r2M/b+5LNbbryusOmb+nJNHCc6e7IYfTgNFel1232vwBGcM9Zr8vx3LD
eV37BfOP4TPLL+RrVDfvcF7BfDh8fkoRPVxjfQ79GvOHZOKmbidj2Od5Gytz
es3a8B2SmVu6XYwjl7N14VqQhdu63VTUHwnfF6WJwXh9bv168ydk5Y6unu6i
uT81wvWzP5NT2OO8kv1o+GyUISYT9Hn0G8yfko27uvq6S+YB1GSvrrLumPkn
yhKLZrqbcgQNmeh1eXUbw/1I9vCs2h/Icdxz3sB+2TyQWuG7sD+XU9nnvIr9
uPlnOphjUi48b/JfOYmu5kThuzE3l7fC7yVHyq9kXBqF6yMj9GRmeLZkEvoz
yb+VT24K941sJ9vJaPQih721fBh+Fzledpbxw/3ovQ3lFd0gvjTHpna4B+QL
OY39XlfVfsL8C+Vpa38i/yA2Ley3w/NM49B7T37dZvPn5OS+rpHuqnkwdTig
q6Y7GZ43KkT9/2/PZH0B/ZbwfJKLB7qDTKGgs63h2pKbh7pDTKWQs226juTh
ke4w05jODPa7n2fKWcxmDnMpHP6PCM8MeXmsO0J1/Sl7DyoSl5a6O3IUTZjn
dUV028O1DJ/bHJ185jbyUbh+coLsIhPQN9wP3tdYXtMPoS5HdTV0p809qUQ8
5uuL6neYO5GfJ7pjLGAhi1jMEpayjOUU876d4d6iAE91x6mpP2PvRWXi00p3
V46maXiu7FGYZe4mkzIg/A3x/v8A9C0LRg==
               "]]}, Annotation[#, "Charting`Private`Tag$389369#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1Hf8VQMYB+BbSkobTdFCkZSGprQHRTvR3nuqSLbs9kBoT9rR3nvvPdCk
FNE28rx/PJ/3+37POb97f+fec3O17Fana5JEIlEpaSIx6I5EokzyRGJVskRi
kdnU/MbMzQbusX9g3s0KpttnmoXZwo+u725e0S81h5mTzfxUlUeYWfhBnm8+
Fa/lmpfiWt0AxssP8aQ8yMzIHPk/5w2QkzDWXo/BurL21XIz7uUnXQ/dVXk4
1Vite1n3k/wGRbitG8LT+jX25tzHz7o1DKWcY2t1LcjESd1ahjGcEYxkFM84
d51zWpKZU7p1jKa8Y+t1rcjCad16muh/tr9JURJ8rq8Q91tuTVbO6DbQVH/S
/hbFSMIX+or6jXIbsnFW11N3Le451dmoa6Y7Jb9NcZLG/dAlZZxcny+dV8m+
SW5Ldj60p2aGfM7xXvJ1eSRT5EepEbuZlYXyJuc1l0/L7zBBfjg+8/jc4rsU
nxtz7XPNYmzjjrgfMVnGePsMs2C8JxrEezQfiM8mzrEvMEuwgzFet7K5Wd+O
+/nInoaVfGufFd8vfnFub/OGbhRT5cd4NnYzG4vkzc5rIZ+R36UEQ+z3Mk9O
Fp+JnIwJckO+ck2VeC7k9uTgV90rupvyaJ5ji66l7qz8HiVJztf6qvqtcgce
4LxuK6305+zvU4o74znVV4t7KHfkQS7ottE6/lf7QEqTgrH66vrtcidy8ptu
O+OoEfdT15lcXNTtYDwTmMgkJvOsc3c6pwu5uaTbyRSec2yXrit5+F23izb6
X+P3hDLcFfdfX1O/W+5GXv7Q7aat/nx8FylLSqbpa+n3yN15iMu6Prpb8SxR
kz26droL8V3gaVLFc6BLzkS5EdOd97x9r9yDh/nYnpbv5D8d7yv/Hc9dvL5c
gFrxeZrZWSzvdV57+be4nonyI5STh5r3xW8O8+3zzOLxOcTvajwr5p0sZ5L9
W/OJ+D7zon2M+WD81sQ59u/NknH/4/n0ui+Y+/SLzZ7xOZt54vXlT8x0zJRn
m0X4yzX9zH/iuYp7ID/O83H/zPtZIu9zXgf5YvwdnmGYPRML5NTxbMgpmCw3
jvfumtr2/XIv8nFF96ru3/hfeIH9uo66S/KnlCcN3+nr6A/IvcnPVd0BZlLX
sYO6V3iUa7qDzGI2c5hLPecdcrwPj3Fdd4h51HfssK4vBbihO0wn/e/2z6hA
WubrG+iPyP14nJu613T/xTNPbY7oOuv+kAdRkXTxfOvuYor8Eguc19B+VH6V
gvH/29MzS77leH/5dvweUCe+d/YcLJWPOt5FviwPZpKcj0rycDMz38vp47dC
TsnUuK9mIV6O92zmZD0r7D+YpeKZjWv9/UbmMf0S8zVznJmXjfG9jPtjZmAV
s+1zzKLxuxXPietfNxN841hdjum62v+Uh1CZDPG6+hf1x+X+FOIf3XEWsojF
LGEpy1jOChq77oTzX6cw/+pO0C2+3/HMUYWMDNSlYprcJO6rnIuV8kKzdPz+
xO76/wEHXTkX
               "]]}, Annotation[#, "Charting`Private`Tag$389369#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1Hf8TnUYxvHH/MlIirISSWaKyl6RbIXMlDKy995CVEaEaBipNKwoKmVV
pFDZo7K3ZMvW+/7j87qu676/zznP+Z7vufO07Fq/S7JEIrEweSKxOVUisSEp
kXgM36VOJFoiH1LilFpD/MWPwFPYYv1GtcfxvdwKDyIV/lVrhL/5kaiGrdb/
plYCy+XWyI/b0iQS3dUu8zORGqflxtjDv4rqyGbdK2ppsFDe5nq/8yWxQm4T
/9eacXJmFJDTyj34K/wsJOGM3AR7+VF42Jqpci7UkLPLw/nb8Az/Df1CvRz/
EV8Y2937D1oKK/Wq6s3nX4494MfznWiW2Ae6gvanBfXT0Z5yO3pVrk2/kvvQ
D+SSdKbcjT5In6dr6GCaRv8s3zTuJe+LvaFfyKP5R/hp/H1oxv9Aa6rn4Efw
aVGP/5YuUi/Pf8wXwQ7PtImWxiq9tvF+9N+U70YhOb3ci7/Gz453h3NxL+zn
X0Mt7HStzWplsFpuh8LxPrBLb4t6Wfwgt0eR2Bfs1vsTf+Fv7MFe7MN+HMBW
vyuHH63vgIfif+G82nM4wL8e+4qD1m9TK4+f5I4oigy4oNYcB/k3UAeHrN+u
VgFr5E5xPmK95+6tdp3/ELfjYrwbHOLHoC5yWjdSLR0Wy4ddbwdfEWvlzihg
zQT5HjwS15L78Df4j1BKniXnR0b5En0Bh/kaeov4sXwx/h0+dzw3/yN9Wv1e
/lW+A01P69NltC/9Ur8CnSN3pw/RF+k6OoQe8X938pXQWv45vnW6QO5Ju8gF
6US5M80a3yldSYvpZeT78jdjP/kl/Md86Tjb8U3iDvk/2gJH+HEorv+unCe+
OTmXPIrPgAb8d7RffCd6FeknclEc9X930SewTq9rXAuZcExvt3pl/CJ3w6O4
E8f1TsRZ06uCX9W64zHchcuxL3F9fjzq4WScS7UnsV7ugceRGVfUXsIx/k3U
xz9xhtWqYoPcEyVwh//fT+0WPwdZcFVuieP8BDTAqTj/ak9ho9wrZkM8m9/3
V0vgE/luXONb4QQ/MZ7Tmvfk+/GsfJ88mr8dS+RK8qf8w/g3vjFaDb/p9UYh
/bfkbDHjYs/kAXwy1OWX0k/Vy/Cz+YJxRvm1ca7Vr8f5QVu1k3JNuljuHdeN
fabvy11p3vgO6U90EG2on5u+JnekGeMZ6Pd0qd4T/Gfx7cSe87/Q0zEjaHX8
bk2fmDd6k+TsMdPivcoD+eT4TM6KG3wb/MNPQiOciVmjVgN/yH3jOZENN9Ve
xil+MhrjbMwltZrYJPdD2TgX7jdILQU+l7PjVuxJ7Dk/Jc6PNdPlB9BEziO/
Ht8IGvLL6dfqlfnP+R60WJwV+isdSs+5/0G+VjyLvNn6anSh3CvOSsxXOlnu
QnPEvegqOoCWizNIB8vtacqYI/RrOjeehf+QLxTfbMwEmkM9wbeLvedrxWzh
344zzs/g86GpfL/8Bp8J38hV5Ll8cZz33w/R2tiiNyDmuf4UOSfKx/mWh/Cp
MC9mLJKptZfP8FPRDHnVxqjdiW9jvrv2Yb4OtsoDY/bhHuuGqqXG/JiXSK7W
QT7LT8NzMd/9/kicd2yTB8XsidmEFNZ3VD/Hv4PmMaetPxp7h+3y4PjO4ttD
Sus7xfPy7+L5mIHWH4t5hx3ykDjbcfaRyvrO6hf49/BCzCTrj6vVw055aJyL
ODNIHbNZ/SL/PlrETIoZp1Yfu+RhKGrd2/K98W741XQgrRLfAx0mJ2FBvDck
qXWVL/HT8WLMKtc9qdYAu+VX8GTsf8whveu4gZu4hUS8r9jjmInxLeNPfjiq
4gGkcZ9u6v/xM/BS1NXGqt2FZXEPeR7/aMw6fj0dRlPo/Q9IPl1p
               "]]}, Annotation[#, "Charting`Private`Tag$389369#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1HfYjnUYBuAX2UTInpGZEcnKJltIIXuW7D2zyd4pO1v2zF7ZssrM3jsj
I4l0/v44j/u6r+d5j+9732dkaNKuRtsokUikatRIpH+sSKRInEhke+xIpC7x
OK5bTT39ZXtvcvJUN4CP9Dvs9YjPCd0a6uuv2L8hF890Aymq/8Venzc5qeuk
ey5PoAxrdQ10V+U+5OZv3SCK6XfaG5CAU7rOun/kiZTlZ11D3TW5L3l4ruun
i86P9uoM1hW375IbkpDh9gQskk873kV+IX/Hx3xvT806eZ3jjeTrcj9my1l4
Xx5nJmWlvMzMF/5H5/c3Y7CRWY4tNHOyhxr2aWaG8Juy2b7KLMBBhvh8CXN3
+I5mI/NH893wm/CWfYSZkC0sti8287CfP3y+q/mvfoM5yZxnZqec/IOZhvXy
euc2lm/I/cnLeHsyVskvwvWXYzLb/inf6kqG7yI3JhFndN10L8NvR/nwt3VN
dDflAeTjX91QSun32puQmLO6jQyjtGP7dE1JwjndJoZTJnxHXTPe5rxuMyMY
SVnHD+ibk5QLui2M4mPHftW1IBkXdVsZzRjGMo7xlAvXwjlfkpxLum1MoLxj
h3RfkYLLuu001d+yD+QDXuomUkF/2N6SlFzRdde9CteCCuzQNdPdlgeRPzwn
9uSsll+F50qOxRx7zXCv6iraj8hfk4qR4f5giXzV8R7yf/Jk5ss5qBh2My0b
5JXmh+F5dX5z8064L8zB5hwza7gXwznh2TNTsI019uXmB+F3DX8nPLtmbDYx
1/GfzFzhWvOZfbr5Trhv5dVmwXB/+lwl86iuFakZZU/EUvma4z3l1/IUKrFT
10J3Vx5CAV7rBuviMM/+ebgXdZXtv8mtScN13S6+1N8L9zMFiYTroa+i/11u
Q1pu6HYzmaqOHdO1JR03dXuYwlSmMZ0ZfOLc485pR3pu6fYyk2qOndC1JwO3
dfv4Sv+nfSiFiBKefX11/Um5A+9wR7eflvr79mEUJiqz9DX0p+SOZOSurpcu
wlR7ZQ7ovrY/kIdThGjh99TFZb5ci9nO+9R+Wu5EJkbbE7NMvud4bzkK0+xV
wnWS04X3n/yr463kh/II5srZ+Cjcw2ZKtrPWvsLMzxvhupjxwvuRBfZFZu7w
bqC2fYaZMdy3bLWvMQuFZzM8I/5mzfAu1K8zO4ffxczMrvAutY8xk4TPsty+
xHw//P4++40Zlen6BeZ7VJWnmunD/S0fdF5r+VF47ijKJHsqfpajh+sox2eh
XCd8d5/5zH5G7kJm7uv66KIxw/4Jh3Rt7H+FZ4FixGCe/nP9WbkrWXigO0xb
/eNwbShOzPDM62vpz8ndyMpD3RHa6Z+E34ESxArfVV9bf17uTjYe6Y7SXv/U
PpaSxGahvo7+gtyD7OG4/W1WyEvNvOGdHL6Lc/uGa8tMx6rxm66D/Zk8jlLE
Ce8N/Rf6i3JPcvBY9zuLWMwSlrKM5axgJXV97pLze/EeT3TH6Kj/2z6e0sQN
z43uTX6Sv2CmnCm83+S1ZmEOs8rn/wdO00kq
               "]]}, 
             Annotation[#, "Charting`Private`Tag$389369#5"]& ]}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"Feedforward solution\"", TraditionalForm], 
         PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1a\"", "\"u1a\"", "\"x1a\"", "\"\[Theta]dot1a\"", 
           "\"xdot1a\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
jZLokue9gSTNGsB9pka2Gt0p2A26ZD3vue2aAtqd7GWa5P0O+6Lj50b5HpHP
r+oFYeuypCXRvXyl0SVN1ZCncfbdAd1JeO+ckveIqxcin65+p7ZvGh7t9crQ
JL8v7It6FvScqVrdR5w8K923JlAYMU7LZ17S6COccqxi/zVIIG2DM2vlnaoB
+yOGcuhAk+kMYH90ZrZB0PnQ1Dbsj/bwSUaEr35C+aNDiiZPTmtnAfZDrtdO
96SXdwD2Q6UD0pb6Ct2A/RBqmUhQm+4B7Ica6gSq1G+xAPshu0sj77NvsQH7
oaO+Ao0d5PMJ9kN7fw7dz+lnA/ZD/W3POKV08nr1nx/akCmfOqXHBOyHGq/z
Bp5x6gLsh94KpVwwud0G2P/kHlR+7Tevg8D+517+BrnG7m4C+x+DSbU97kMs
AvufEG1F4yEVDoH9T5+0T4fzRvLz/c//9Hgp7rmj0Edg/8NyeRaS29dLYP/z
tOKk2LpqFqHp9blV/L0Y2u+5/Kbcy24C954M9su7R0olAu49rZFeLXRB+Svl
heLjMp+bWZUD9kIzO6eZgzeqAXshJ0N7Tt2/GsC9p4dXS336vRoA954Gl9MG
eqzbKT8kGGVzdkxxEnDPaYvjyVNmIt6UJ6ILsZcnmicD9j69dbpnVy3uAdxr
Mtr79vGdKiZg/+Mhq3nDW5oNuNf0O8XtRjV5PuJek/GiV8OPxXsB+yD6CcXT
lVFswD7ottVLk3pTFmAfdL2k99HtsW5QCBZI8hIUQLXJRuo0wS7K9/wSbdwr
GcgksO/R9RbUvKbZS2Df42yWblFVyyGw76mUZ4usJM8n7HuIf8KFd5PJ6+X+
+vDLSqKIlRf5++Q0m8B9qJWMasOstR8A96Gm47UkRvKKKQ8089F8oadvFWAP
ZJH8b17DWDXgPpRJ36bHml21gH3QYscNpbPdU4D7Tz3EkwfOmkcB95287dmu
Hj9ZgPtOUY0mE58zyOcF7thapZFJ2M9GV/7v39sqLsV0+HLPQJXsiSVKpWzK
G81/an1o6iMLsB8qXX7l0WQkm8B+SNvnPPeeIA6B/ZBOqs2JNXv7iJzBgP0Z
HcJI/0PYjyfDHAL3ojbcs/984UAlYF8UI/Bo8GlONeBelI/OZ6Opxp+Ae1A2
q8cirp0KgdT4wsQX/RPQbMTl/XiUDfI3zSeYc1Pwo9BgaC1fL7BcfNaqzs2A
4tA7HUV7NuWJNNp3mZwS7SOwJzoZWGjsq99H7L34/n6TkwjqsekqrbTgENgX
xV1m2q5aQq7P/+tDdeoueiHrUAPYG4mHy5uYfJ0G3H9yfvXSGW7vAN3lIwuy
Uydh22UpB3fy+exWHtMklPw589teNe3kegd7IxfT0Pyd5O9/YJzBv5YQRl/F
R5VahPsI7I+ajqh0pSdWA+49uXe8EHGxDoT4KTdn/7QJWHYvAr6y2fA7MUHF
8+MUJCmdTO8U7qU8UaKttkTeHw6BPdEyP80URH4fuP+Edjf8/vqzCi6KtrRZ
aUgijZ0paXFKNYB7T/MTpAwFhc9BePeemHDNKfj0z3SjPXn/wL4IpR4PX0Ie
74wW2dKvEpKoT3v7TvHqavhguLi7fM0k3Fv+L2v7PzaYOs8R+7dPg60Ks8Fh
mg3YF0leaXZtI69nKiyB1Kfewog3LORLB3m9++7vL/D9pwSyiemet+VgNWB/
9Pnv7WW/1WcA952C5obvVVuug4Q3kcr/gieh6PBoTAB5/8T+qHuewTcP6COw
P8q1faPY/rgaDmuZ7smPmILZP+WPosj7e/Pti3t0lYRRh81jN9N9fQTuN6W3
qpr5K5yAeRdGc9oXTsGc/81YdfL9Y18UmPx3/nby5zeJreNjLJBEU3H/1hh+
rYaciZctMfLk933OyH7tvF7I+vlLPeSkMEr+pfa8hHw9V0WrW81+SKCQ7qj8
ri3VgHtN3o+T/hZy74Oa0N3DZyonYcG9cZFccj2M/ZHvh33K9Ubk88N//ijy
enf0wTfVECQ1s1ClbQpeVflwTpDPQ8Vpb7c5GJDrtbi+59Pkz6tYxl8xtZqC
4bpZWhN5fvc7brUS5xVGxhpS6Z/I7+960oJ7SbKS6DfDOGWwsxqwN1KT6Jn+
fHIGsDeiNe5w6ndp2oa9kSgt6tol18eUN9IeXn8zuj8TsBeKDbi2NuxrB2Av
1LHsKtos1w3YC7HLFs7N/9MD2AulpQxFbb/GAuyFHK64SGdeZwP2QguDVu9o
5+8F7IWKdUomAgbZgL1QiqFDOm0pG7AXcn5woniHEROwF7rk+qJa4kIXYC+0
1jtj3rnXbYC9z4bv7WkrGAwCe59WpRYFnvpuAnufqh9sX6UeFoG9T3L4VseU
VRwCe58Vh78Ma2j1Edj7mPm7slWVyePpP+/z+oSlp9lIL4G9j1fsnWixVhYx
PTZ0Xy5dDGmKhAh4ZnQTuP+0v+icjdyKBMD9J8l4B2HhiQLKB/FPRdjpa5QD
9kE2J9szNl4l19//+aAHi+J29/+pAdx/kh7s9uJzaADcfzrF98XXZHM75YX0
ZOqkhOmTgPtOseK/Vz+96UX5IUPr4kreyleAfU+E3iau6oU9gPtN25a5+RmX
MgF7n/jYgJduEmzA/aYqu4yS8no24H5Tz/UT6VPk/Rp7oPbS2BqxODZgD8S1
MTpA0YoF2AMxLGZuj8/rAZ5TDLcrfAJIt/hQgNtUJ+V57hr+DmNcZBLY8zDn
Dv68sLaXwJ5n51blVy+qOAT2PGZPFdafII9/7Hm2jGxGHukcolbi8NPQFaLo
xRJh42LuXgL3ooytVqpy5eUA7kUJ/DZ7PRFWTPmfyCfVYiXnqwD7nwWLd3o+
HK4G3Ivyzz/WuLOqFrAHSolw2StQPwW4B3Ve28tRsusQ4N7TotOHW8YrWIB7
T0JF/2w3vyPX3063WnJ6J+Hb4LaiafLz23VF3/Tp9DRccKzieVHGpnzRiIG9
DRSwAHuhCvbyzO/32QT2QvVcP7YuvM4hsBfqaC1boGHWR1ywebn2Wqswmt0v
8tRulEPgflTTFxlpMd1KwJ4oRWaTnEdWNeB+lP6wjflEyU/AfaiOqD6nRdbB
8HqdXH5nzwR8tioaXfyHDdN9m+cujk+B2dbkHSbk+WzrphhhMT4DgXk2YyrH
2ZQfCvG0zNu7oI/AfmiFVce3qd19hHB3k1PSMRG0NUvnboU1h8CeyMymSy5D
shpwL0rHZmTeL5sawL4oanj3TuvMacA9qIO+86LNMgAkr7csNEychOT2pelF
Ir3w79vdj+8/TsOyMM82LgYbsC96eXxRSdrOPsIkp7l1KlcYxVaeDRSn9RHY
G4WbW5beeFYNuP9ULnup38j1GjwNLA7IfUHer/MTXbhZbCgTvKcl8H4KNoyn
iz4jfx/2Q5YPhntkyPUR9kOdL066Liefv3EPqrWvrfV1SRWYysa9tlWTREJ1
ses7l9UA7j/dCoyR//LhNJzbrZWwat0U3LmWG+1E3q+wJ4qtzjH+ZtlHZPUy
npSKS6KBJUn1luXk/ar27IzASvJ+8zbrz4I5Nqwq6y1kb5qGQH6/a70zbMCe
6O35K/57VvQR9+Ov3D10URiZbw1lT2zqI9y7wz69rJZAA5mHAy5aVAP2RlNF
YxN/FWYA957+mL0QuZ+5Evwkr6uEXpuEQuJvdpJQL2BvJJjz8vD9rX0E9kZp
g3/f9IdVg3aEjvne0CmouWZus468H27ZNbx2bLkw8k6wnOsg77+453QmQHZj
3rLj0FzfTpwTmoJ5yXapQuT7x55IJ1CsKMKij6DJDf9kCpLnZ87yjH2fq+HB
oQddG+jk+XPWVNKPfN6l33OU3O0kjD5t5Q8P0yOfj92Yoeol5Hr8UyOxU6sa
cL9JVcf43ddTe+H1mNrEvKJJ8DM1k9hEvj7sjcZTu+7c20O+vv+8UUeB1pWZ
1GpwvMyU+Vw7BULS1y9Zk+9/zck18kt3CiNiQdSR1SZ9hEBO8K0OkylIP5Fx
SJh8/abyWRvL/i1A257+VHtPXq8OZ1bapstIosvLgrtPt1UD9kVfrFrulB+e
AdxrsvZfOFvmJQx9diJH3QOmQED8rN8a8nrBndc5eFJGGNVq8pv9II+Hu7Hv
yx9OTQLDYHRRBLk+UHI7zS9TtwCt2fZ7UoQ8/vK0Lp3/w0eub+Z3nPyXWw24
zyT4VqG3+clusPvEz6eYNQkGYy5aUuR6CvsjU/lfXi+SqmG4Q7Y7bLMw2sb8
d9yYvL7k+duF826dAsvOkeN7yfcn+fjltN7EAuQ97/IqB/L94f6SdNGmXTqg
AZcq5pz915Dr9X8t+5LI709JTOidsewUuK46tduM/P+jA4MC1rMWoJILhTfr
yeNhcr0tp7VhEqouKPCpku8Xe6Ilx97cD3xXDZbDWZfzjkzBvS2J2pHk+w16
9c3dSkAYVZflBmSQvx97IZ/pcLUM8r5EeaF2O8sTO6PzsRcacppsXp9ZR80T
O6zd2/dWvYuaJyZvdqb2vT+TmidmxIj8e1ucRc0Tc/n9eoDfr4fqK1Xwh9iO
J3RSfaXTzA0pX43+11firOu8ucK0huoraY9a5Wy8V0D1lZ5Yyd2JaXpAeaHU
ybOddy8VUV6Ic8ne7ApXA+WFfvr67tl9qIvyQpVXNkYJP+dQXujU5AcvQY0R
ygsp+J4TORU6RnmhH39feZqpT1FeKPrh4sOfcmcoL7Q0ultZY8cs5YUu5egm
zCjOUPPEHjs/zZpYMUXNExMX/JU6WDFO9ZXKHc+MGiwfpfpKaOFBs9bPI1Rf
SWHlmh/sG0NUX8nlo3SqoVE/NU9s2+a8ug8H+6h5YgFLzWcV9TlUX2ll1ecg
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
afscZzHnh+TvFw3afvZcRkP+fn25xYylpX2Qv6/Y/WzptZYOyN/32LZ8+S+1
CfrmY2ac9Lc78Qr65j2M7mnFcqqhb/6Lum/86uft0DevMMFSq2lOH+Tv/5Sn
yV4wHoD8/Ss3Xe9nrQLI31ecfa7fUTQE+fvA2G9qT8aPQP7+svNSakr3COTv
d1FnVr/cKIL8fcxxZYX8wLfQX6/9zutj+KVGRPL3Owx3Cm+8akMkfx9e3p3Q
vZyHSP5+gU63qlwq8z7zN39/P8Ro0azLXETy976zxiXlJvRSJH//7Fxubu+K
AYrk7+u8Oz7MPsbM53/z9x7vdwbVMPf/yj/35msJmfkx7F/L8yIBNS2zx6lm
RBJHbj3zeKu4gLLYN5Gf/1sK80N8gzssBiiSp7d/EpSo3c6DPP1Q3iOVEp9e
yNM7Uom7VOL4kKc/WNYk8/0WDXn6xg/rQgNu0pCn3/ujyN3uKB/y9MF+ip06
M3ogT6/5y/lI2JR2yNNXzlu4s8CyGvrtk+Pf79amX0Ne/v3s1ErX53zIy9eV
6a28encQ8vKHeo3CcKsQ8vJH3rf8LvEdhrz8Zp9tvh0RI5CXX/Eu/2D0XBHk
5WelbX7szTwfSV5+rX+ThviV74jk5f/8fvf7fVErInl53yMb3r/7wkUkL//u
xQ7WpHwe+vLomPNah3akdGS56VWaC3n5DaujFEoUBBTJy3t3h/e/XCCkTvWc
Hm3KZuES7TsNpzWElMWL5ztUCiWx+ecN117bCSiSf7+To3bD1oAP+fe1Uwr0
zh6mIf8ud8v+w71CZr5wXWo3UcTGk9QOBNe18CEP7xQX33inPAvy76ZhXw0O
24xA/v1MVIb1zskiyL/beOdYmjLrNZJ3n7JK6GmU0I5I3t1JqWfA/jjzvv83
786NnnosPpgH+XbmuWrS+V5AkXz75fpWiVZmvSamUOHqvkwSu6n5V34sE1Ak
ry4dmrjcop8PefXNvj1ti5/RKLkgYcztMRtXiR21X8WMl+TV3VhxMe0rRZBX
d90r7ZDCzD8kr34gdYwVxtxPJK9+su7TkmnMeo3k0ytUC14oM8db213oii+w
8GLT2OO/5gkpkjf3uHYosmwLjUpm6Zz65MnG8ol1WgHFNOTPczkOWti7EPLm
EX5K7nbOIkTy5ZMX6Yr7uPBQyOP7DmtetqBzzWp11bE8yJdL3ZzN3Z0qoDI8
lMQGpVk4VdVpbJCZX4eyPvgUaLPxmx2Tzltn02iy55N16XfZOFoR/WSdoyE/
viT2WAPfUIRaltrHBlZwcIjw/JNiZvwkT75pw68bx2R5iOTJWZoZ+7qyeJAf
L9G72mfEzK/OwbIHZCTZOMPjQn4n8/u7Svg80zNsfHqn9LKMhzTkwb+9X/Mh
brcIkfx30r89Ld1XmPn9cHh5cWUrulKdZJjFjJfkwfv9jyVyuwXUaLBCyCFr
Fh7Ut2sfYtZr0W0XvfesYeMoVpLBcWZ9RfLfjZ15+X7WIsh/X5+h8ViVuR9J
/ntyeGxWTQYPkfy3wyF35UWKQipozGDukAsb+/aaija8oiHvLax0ty3aIkJN
0n7CeyEtyGVFQteyRGa9/iO26fOQBN7kcWAyzVyP8m3qmdYabGwj7dg/4z7z
fqDpsy77NQcv7UBrVzHHc7dVXNDCg81IcXvK+RpmvWZbesVtQ44EDry24mvS
UiGVnPg72j2UjYemhbzLzqfRz/L62VG3OJgXEPMuYZcI8tzuz5SsJaJ4iDcc
s8PBmIXv9SWdaGWe12lTm9NHERv7vyqc00sx59d/bH81j4P9ZKrHT2T+vk7X
3BeDHU2oTKei/xizXpO3VWlIP8jG7KztYVee05Dftv7++vhM8TxU3H1puuI0
Fh7/xPl7N3M91Qcf15u5gI2bxKo0NjymkYK1QYN5NQe3xjfZNTG/PzlNarnP
cDOyitiqapvOQ35Vl2/FfJHAkktH9ycx52vL8O0nGrkcLDJRf7CEWa+RfPaK
9GcpU27y0GRWTMKl7cx4ViVlaDPrf7/slfOq1rOx/rLLDjzmfJD89UaX7JQq
Zr2mtiTlCw81Id0gq0DxBzy0pfNZyPjtbBxM3xBvYP79BbWvlSv7JPDF9WPa
45nzozZ1NNX6BfN9z5/Y1s5cD1foYBtX22YkfbLqyX3meDToV9m+WszC+wLz
Q8SZf6+fPb7ijTEb9/QODegzx6d6X2TZv60cnHXbpNWNGe+WGPmLM0uZ68m0
8Ew4cz67lt9aSHmz8cvkWrE5zHr5sc4XuZPyLFy3bEaaPPP+FGj2atmPT8z7
bEJgZD3z/z+v75ZJ/NqMjnwzsv+UyUNe8tUXx5VLYLuZ6+wumQqpFz2LpxRm
cvCXl0Y9vsx4xdZ5WSdYs7FxESthCzM+/SsOziwhB2uYm10MY45nYUvt4tMn
m1D6EMfHgLk/k9kPv7XuYmNrCweF/5j7IyV5I9/tjwRu19waHcucT+t5P/qn
vOPgaJ/d2eeZ76N/K+/Bn4vNKFVx/OhV5vmmEvIkapEFG48pWWxwYp5XUicO
KBr3cHBR+bmeROb4jZit7n85oRnpp0r2jjHHj+SpQw50VCW+ykJlmQ4LUjRZ
OFSj9Mdp5u+lbbp7Iu07Bx/RClpQwfy94CuO2VoNElhiVJTjslJIdUxVnSjj
yLxPelybNZdZ/5F8tG2WzlQ5ZvyLjrs/1pvXgsT+/hi5yKQbxkti8tnp6eHR
iJ1s+CwXwlks/UcRPr8aNPec3saBz5C3/vtD8qbk8/8Byu0a2Q==
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{609, 3290, 3288, 860, 782, 1106, 982, 882, 1130, 
                1006, 1154}}], 
               
               PolygonBox[{{3287, 3286, 595, 596, 597, 598, 1037, 913, 813, 
                735, 675, 640, 1064, 940, 840, 762, 702, 1083, 959, 859, 781, 
                599, 1038, 914, 814, 1110, 986, 736, 1089, 965, 1137, 865, 
                1123, 999, 1149}}], 
               PolygonBox[CompressedData["
1:eJwV00dwTmEUBuAros1YkkQXrLSNLkpEWeijD4PRo0bvvY/eid43SiRKghUL
kiBasGCYYYzee/d8iyfvec/9kvzJvTdxcFq3cTFRFBWhpi93SkdRIWVjoyi9
aBQ14JkDR2jAZ306Zbikr2AEcc5vt2vIc/0oDfmiz6Asl/WVpBLv/A67RrzQ
j9GIr/pM4sjVVzGSBOd32jXmpZ6iXzIP5rheT882d6cYnfVbclz4Hte/yVnE
k6evZhTlnNtl14RXegZN+K7PJoF8fQ2jacoPuzmU44q+ljGU97N22zXltX6C
JH7qcynPVX0dY2nGL7t5VOCavp5wQ5rz224+FSnQN5BGBb9nj10Sb/RMWvBH
X0AlrusbqeVsht6BP/p4Ktrt1ZvxVm+tXzYPIUuvr+eYe1CclnZ/5UIqcyN8
PmcumPuzSa+tnzB3pK/5ofxr395cYJ4sR8nh8mX4m+UE1yvJffpY2Vz2lvfD
MyPfud5G5uoT5VA5VD6XJ8PzaD5r7skA82NZgi7m23KKTJOp8nX4X8pk3/fP
vIjRepXwzMh7cpq8Gf6X8qI+Xg6Qg+TT8DzIza7XkZnh2ZKdZD/5SP5zrYP5
evjZjDC/Cp/dvrJ5v7kFfcwP5Hv7tuY88zBOhXdGP2fuRUlahZfTbrG5Krf0
LdS1ywrPORGT7KrYHQj3iw/66fCeUMR+iV0it/WtTKaq/UG7ZD7qZ8KzQIz9
UrtqFOrbmEKi/aHwmfikZ4f7Q1H7ZXbVuaOnM5Vq9oftUvist9PzwzNATnjf
9fPhnjPQ/CS8+7KU7CoLwz2grbOx+nJzDe7q/wEGt5ex
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{3287, 3288, 960, 1084, 704, 764, 842, 942, 1066, 
                644, 679, 739, 817, 917, 1041, 608, 643, 678, 738, 816, 916, 
                1040, 607, 606, 605, 604, 603, 602, 601, 642, 677, 737, 815, 
                915, 1039, 600, 703, 763, 841, 941, 1065, 641, 772, 850, 950, 
                1074, 676}}], 
               
               PolygonBox[{{560, 3289, 3284, 614, 649, 709, 787, 887, 1011, 
                564, 682, 742, 820, 920, 1044, 613, 648, 708, 786, 886, 1010, 
                563, 681, 741, 819, 919, 1043, 612, 647, 707, 785, 885, 1009, 
                562, 680, 740, 818, 918, 1042, 611, 646, 706, 784, 884, 1008, 
                561, 610, 645, 705, 783, 883, 1007}}], 
               PolygonBox[CompressedData["
1:eJwV0clLlVEAhvHj0KDef0LKa2ag7rRNgta9ltOVAg1FEaIESyRQywZaNjis
1bREcGipLcphk7sSbKGmlhSI4KJlpbt+3+Lhed/3nMXH+XLbuxrupYcQ0jCF
jVgIm2gwplCPOjzFJPZwISOEYcQyQ6jVn+AtfqDQPoQcZzX6Mo6RsL1Dvv2x
/gbfcd42iGx7tR6Tb2IFF21Ltg55DVX6kX5FnkNcf6Tflb+iRs/gX2iRU/we
JfKEewdyu9zGqyiXd+19vK3f4ALu5AHO4mvOn/FvvYO7uYc3OMU53M/73MZN
3MXLXMaL0fvwoX6L7/B9/sJJ/he9m9wkX+ZZ5Mn99k55HdV6Ov9Es1zPCyiW
x91rlT/hkr6jf5Ovy+f4FU7LV+3ZciOWUGr7aLstf0ZC/6tXyjM4qz/U0+Q6
zKPI9tq2jXz9JU7ZqvQP+IMK2zTO2B/oY9H3IG57gZP2ZPTmGMUW8uzPccJZ
Ivq/6MUI/gNPo1DX
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1nfcjmUYBuBPtsjee5OVopSyS2WPsilZ2YVS2aTsiKy0FSUqRSGUvcnI
yG7I3nt0XL/+OJzndT2+8T7P/b7kb9ujYfdECQkJZe5KSIh83x8FyGJeYb6h
D6awub/5iN6J3OaU8m45XtZ1bYNswHk9sf0IfY5+Vr5CVh4wL5SPcUCfwr96
D9Lxovl32Yrb+o/4VgkzzAVZqQ+gHuXiul0lDupT6Rw/mw/sCrFKH0h9ypOE
pCTjw3hdrNYH0YAHSc5H9kVYow+mIQ/xk11lDunT6EIKPrYrylp9CI2owCK7
KhzWp9OVlHxiV4x1+lAas9HckAv61zzMYnNVjsSzoRu7za25E78PqfjUXJz1
+jCOxr0kFc+YN8lGXIx74IaO1Ofq5+SrZOMR8xJZjaP6HfkmM/Tjsif5fG16
mVZOkiVld9f36G3IGQ9LppBj43eSi6yu6P3jbJnzyAxyiiwl73b9M/3eOCPm
Deab+pD4+fqfsnOcNVK7PkE+a79ZNuZSPFP7Ufo8/bzsS3Yqmn+W1fkzzgUn
9Jfid4hzZ94rnyMRi82pmamXYKM+nCZsiXvJZf0bHmWpuQZ/xXmiJ2n4PO4N
m/S3aMpjLLN7nL/jjPES9/BF3As262/TjEost3uCf+KM8TJpmWVXmi36CJpT
mV/sanIszhi9SMdsuzJs1UfSgiqk50v7+9imj6IlVclARjKRmSxkJRvZyUFO
cpGbPOQlH/kpQEG+8r3L8ps+mlZUoxBz7O9nuz6G1lTnV7sn+TfONr0pHO+L
+Axhhz6WNmyN88AV/VtqsML8FMfjbNGHfebnuYsl5iLM1cuxUx/HX3qXOGdx
JszbZBOu6t9xQX+NHPEczSvl05zQ44NquD5TPSlfJiPp7N+Tr9j/IduSyy6x
TCnHxdmXP7t+VR9AQXPe+Ho5NZ61LOr6PL18vF/Nu8y39KEUMb9j/lvvSh5z
GplGvhuv27XfZFOu6cnsR+vz9Yvy9Xjvxlkzr5K1OBnnmFN6LzLFZ4V5v3yB
JCw1F4v3g/4gv+vjact2czOu699Tk9Xm2pyKM09fDpjbkZRl5uLxHPWH2K1P
4B+9G/fEzzbvkM25of/AJf2NuK9xbsxrZB1O64m81rf0Wfpp2ZvM8RzNB2V7
kpEq7qFcbn9NDqSQXb547XJaPKc4B7IC2e32mG/rwyga99p8TI9/VPOa08bv
LCfKErKd6zv1FnGGzDfNyeUYczG5wHxZ70d+c26ZXk6O8+zaWlmXM3Hc7N/W
Z+tnZB+yxLM0H5IdSM4v5hLM1x9mrz6R9uwyt+SWvpCnWWeux9n4bOANSsYz
tHuEffokOlCLUvEM7Cvyh/4eHalNacpwH2VZ4O88yn59Mp2ow3q7+pyLzwv6
cdjckRT8ar4uB8V9iefntU9P9P//W+537T8JLwa8
               "]]}, Annotation[#, "Charting`Private`Tag$389454#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1nf8T1Ucx/GvWaLIiLLJpoxs2UVEGckeP0J2kpFQymxYZRdlFCqrrKJI
WRnJqqiMVET2yKjn59Efr8d73HOv8733nPOTN6l3417JEolE8+SJREn8nSKR
eBbpsV4egSSUwhldP2TABnkkOiJjykRisq40jskfoDTOys/hTnwlj0InZDJ+
iq4MfpMXoAzOyf2RERvl0XgKmY2fqnsAx+WFeADn5QHIhK/lMeiMPekSiSzu
maYvi991i1AWF+SByIxv5LHogruMn64rhz/kD1EOF+VByIJN8qvoiqzGz9CV
x5/yRyiPS/LzuAub5dfwNLIZP1NXASfkmvI3fBI+jt8vr+SbIBUayrtpr7jH
9ct0MLJii/w6uuFu497WVcRJeTEq4or8ArJhq/wGuqMSruqG4G5sk8ehB+7x
rHd0lfCXvASV8Y88FPfgW3k8eqIKrumGITu2yxPQCw/iuu5F5MAOeSJ6I7t/
Z5auMk7JS1EVN+SXkBM75UkoZuxiuT5uyH2QQzdbroLTci15E98Ry2JtyKv4
pkiNarqbdDhyYVfMz5j1fBu8KReXl/CPoiX/M72pr8fviHVPu9HO9ET8ZvqM
6znpu3JP+iB9kv4Ua4b+7XptulnuSzvRTvQPujzWI7+afwJt+SP0FjzGfx97
h/amXelf8S5pdff9y7+M7nLuWDN0f+wF+l28S7pB7kPb0g70t1gP9C3XS9Cl
sbZoA9qK/kL/da0+vzOejS78yZi7Phf/Hl8VzfmD9Iz+IX4L/xQ+iT0jr+Gb
4VbU0CV0r/B5sFuejPt0y2KdI4Fndbl1c+J74az8aewTJNOP0OXF9/IU9EMe
/VxddZyTV8RaQHL9SF0+7JGn4jnk1c+LOeG8vDK+D1LoR+nyY688Df2RTz9f
VxMX5IflrbEGsCr2u/xZfHO044/G3qdp6ON0T3wDPGRsSnk0fy/2yXudUdPp
gHgu6iCVMWNcL4D98gwMRF2kdm2sviAOyDMxCPn17+tq4aK8Go/gFv2rukL4
QX4b9+uWx/pCspir7l7dB3xtXIp5yNvi22ONXEH+PL45bkM93a261/jCscf4
A/RHfTX+q3gXeEcuKX8S7wKt+V9p8thj/C7aA4ONKyAviPeEFvwhejl+N/9t
rA3aNdYY/ZMOjfce5xxdK/emLWh7eiyeSdPSRnQv7R97lT5NT8UZQ+u7Pw19
PeZBi8Q+pD/QgbGHXa9ON8ZzkcQfp7P0pfhP4/lxfvCHaQo0iP0XZ0HsNeMK
ygv5h3Elvou8PeaBz+MsltfFeYN08V50t+ne4IvioDwbQ1BIv0hXB1fltWiA
tPpxumI4JL+LoWiIdK6N1xfHz/J7GIbH8DgaoTH2WYtNaFM8gWa43b0T3FcC
v8hz8CIK6z/U1cU/8rr4G6H7Is4R3B77QXeHbiJ/X5wF/I/0V30N/mv+GdqB
dqS/0yFxhpnHXGNK8yt0jZEyvpeuiO4j/hFck79I/v//WdLrJ+nux2F5Hoaj
BVqiFVqjDdqiHTK4503jS+KIPB8voz3ujDNSXwpH5ffxCorqP471j+vyl6ii
+zL2o3m3pnfEnHX7aF9040/T4fFbjf8P3qkpDg==
               "]]}, Annotation[#, "Charting`Private`Tag$389454#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1GW4FGUYBuCVRpGQRmnpkEZppLu7u8ECCRuQDunu7m5pkJZOKVFBQjqk
9P5+3Nf7vM/M7NmzOztpW3ar2fWNSCRSKkok0jdaJFIgRiSyOXokstKsZ04y
U/Mzb9r7mrFYzxz7fDM7J13b2byvG8YMOQMl5JFmYlbKa51XRz4v9yALg+xx
WSQ/dLyX/Dr8barQT1dQt0Wuz1uc0q2jrv6C/Uuy8kjXnw/De7Y3IA6ndev5
kQEMZBCD+ci5W53TkLc5o9vAEAo5tk3XiLic1W2knv43e0+y8Vg3lML67fbG
xOOcbhP19RftvcjOE90wiuh32JsQn/O6LroH8nBKslnXQHdJ7k0OnuqGU1S/
096UBFzQddU9lEfwMVt0DXWX5T7kZLA9HovlZ473lv+TJ1OVMfbkrA2v43gx
eZfcLJwjp+Gd8N2YsdnAXPsCM0f4n8Ln47pu5iP9GnOkOdPMGD5TStl/MpOE
e45V9qVmnvC3wvfn+kbmFf0q8ytzmpmeD+QhZnyWyIvNXPzrmj5mhCn6OWYW
qsljzRSsC/ek84rLu+XmJKR/uMeZJ190/BP5cXiPlGarrrHuqvw1uXiu+0r3
BlPt1cP5uhL2PXILEnFJ96nuiTyKMmzTNdH9Ln9Dbl7oRlFSv9feksRc1m2n
qf6a/Vvy8FI3mo/1v9hbkYQruh2MoZRj+3StScpV3U7GMo7xTGAikyjt/P3O
a0Myftftopn+D/t35OWVbjJl9AfsbUnONd1umuv/tH9PPl7rplBWf9DejhT8
oftM91QeTVn26Fro/pJ/ID//6aZSTn/I3p53+VP3ue5ZuG8px15dS911uS8F
GGpPwFI5Er5DOQrT5BqMk98Nz7Zwn7m+vHxY7sAUOS3vyT+abzFfXmjmDO/T
+V+E+0+31hxrzjIzhecB5cP3biYNzzFW25eZecM9GL4717cyb+hXm/3M6eb7
4dlEQfuw8JtjE8vsS8zc4d4L948ZlenyXDMrNeXx4T2H32d4PX+jgnxE7khK
BtjjsEC+7nh3+Xn4LKjAPl1r3d/h98GHRAn3ny4aM+RazHBeRfuvcidScUO3
nzb6m+Fz4yOihueAvpL+qNyZ1PytO8AsKjt2TNeFNNzUHWQ2c5jLPOZTxbnH
ndOVtNzSHaKt/lb4HylEtPB80lfVn5C7kY7busO009+2D6Qw0cP3q6+mPyl/
Qnru6HroXoTPl4oc0bXX3ZEHUYTh9oQsl2OE340cnZnyPDMbteUJZko2you8
TnX5lPwpU+V04T4I78t8O5zHwnBueA6yk39c96X5Ur/OnGDONjNTKfyuzGSs
kZeb+cJ35ZoO4VrdYIoywp6IFXLM8NuVYzBLrsNi19Swn5Y/IwN3dT11r+SJ
VOaorqPurjyEYsQK96y+pv6M/DkZuac7xlJqOXZW9wWZuK87zjKWs4KVrGI1
tZ1/znndycwD3Qk66e+F3zzFiR2eI7qYzJbrhvcqpwq/J3mFmT88s8Nn5Pr/
AewEN4w=
               "]]}, Annotation[#, "Charting`Private`Tag$389454#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
               "]]}, Annotation[#, "Charting`Private`Tag$389454#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1Xf81WMYxvHTor1VMiMihJb2sneymwpRUlIoFUpFmRXaSkVEypaWtIRC
lE0hlE1mGe/rj8/ruq/rOb/T+T7f+76r1aNfh75FCoXCxqKFQtHShULNsoXC
zWUKhSKYyXdCQ7SVPyI7DGv5ESiGfeS3yIriIb4zuslW8SdhG98I7WRz+cPx
Kn8rimNf+XBZMcziu+AS2Wr+ZHzFN8bxskf5uljHj8Q1sk38hfidL4H9ZCP4
4pjND+G3qHugK9+dX6M+BV/zd/A/qa/FcfwJ/GPqI/Bafif/jbo3RvH9+c3q
izBHXQp/yMfR32WD8JS6GvaQ709vlT1HS9BJ9B+6hs5xPpRu5ZfSS+mjtBzW
o5vzHnStfBE9Ne8k34PX8ruc30l/lq+gA+iTtAqaODuRzpMdiWnqIng9d0e3
y67CaP5a/j31xfiTH59nUg/GnvwB/Ej1Hng47weXyl7lT8N2vilOkj3OH4U3
+NtQEgfKR+W78EjeAZqhFGo5Gy0vibl5XjRHaZRBWZTDQT53m8+Uyh3l30cL
lMfBzm6Xl8Zj/GVoiQqo7WyMvAzm8ZejFSqiEirjEJ8Z67wsHud7ojVOlj8h
q4f1/O2ogkPld8jK4Qn+CrTBKfL5sqOxgR+Dqqgjv1NWHvP5K/MbZev407Ej
84VTZU/yx+BNfhS/Q90HY/kB/PvqjviLn8D/qb4Re/GH8XepK2Cy+t/0g3yY
+nP1ZeiVO0j/qM/IzKZP8a38LvqL7BU6kC6gVfE22jk/jS6Qv0CPpdNp0fQB
3nI+Ot8jX06vzl3Singz9+V8IP1A/hLtlF6ipfG3s/voX7IheFpdPTMkP5ze
LauY38PfxH+hvjwzmXeVnlafie+yJ3C6bCFfH29nRnCd7EO+M3bx1VFXdg9f
CQv5q/IuZW/wZ+H77AOcIXuKb4CNuSfUwBHye2WVM/N8n8wczpQ/LWuId/i7
sTeOlI+TVckz8ldnZrJzcZSz8fKqeIbvm/7Lfs2OzF7LLsksZp5Qz+cn5L3j
Wb5f+g9nyZ+RNcK7/D2ZMRwtv09WLbsouzP9hrPlz8oaYxN/b2YNx8jvl1XH
89l76dvsJf5s/JB+QHvZc9md2Jw9iOtlH/FdsDvziWNlD/A10j/8zfyX6p7Z
vXwvfoO6PX7MnfG/qq/LjPDn8M+rm+BBdbHsrOwY+p2sb2ZRXSn3KL+Bfixb
TLtm79Ay6ZXsX+f3p+/kq+jQ3DmtgY2o7bw+nZhnp3vTKfQ/upa+6PwWuo1f
Rq/I3qHls4Od9U7Py87BLPWe+Cnvgu6UXZ/Z4zvwL6ib4v3sF/57dT9M4Afx
n6i74d/sKTSQTeJrYlFmKn2b+eM74Of0H87N7+Sb4YPMV/YWGsony/bJHGYu
0jM4T75I1hwf5n6yt9BIPkW2b+4y7zY9g/PlL8la4CP+gewfNJZPle2HJXkP
6RFcIF8sa4mP+YmZbRwnnybbH0v54fxX6isxT10hfYFBma/sIvm5+CU9gQtl
S/hW+ISflLlGE/l02QF5R/zg3HdmFk2dPSg/MLuKvzH3lflEM2cz5LXwMj8k
d4OL5EtlrfEpPzkzi+bymbKDsIIfmrvBxfJlsjb4jJ+SmUUL+UOyg7Nn+WG5
G3SUL5e1xRZ+amYWLeWzZLWxMvsvz4xO8pdl7bCVn5aZRSv5bNkh6e3MWfZM
+po/D7/mWdBZtoI/Hp/z0zOjaC2fIzsUq9Pn2UWyd/jzsTPPhi6yV/gT8AU/
hv9BfU3mM/fNf6q+BP+lP/hd6mHZy3wb/mF1HUxVF7BGPoJ+LeuF4dlr/Lvq
CzBbXRK/ZU9Fcyf0BrqQ7oWOzrrSlbIX6Yl0Bi2Oddk5zsfSH/N+aX86n1bO
DOXdpx/oZ+lf2p3OpWXz/0J+Jz+R7s790Juyf7Mjckdo4O//BxBkd9A=
               "]]}, 
             Annotation[#, "Charting`Private`Tag$389454#5"]& ]}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"LQR feedback solution\"", TraditionalForm], 
         PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1c\"", "\"u1c\"", "\"x1c\"", "\"\[Theta]dot1c\"", 
           "\"xdot1c\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.8663109335478053`*^9, {3.8663109999823008`*^9, 3.8663110214563494`*^9}, 
   3.866311194894208*^9, 3.8663118684581766`*^9, 3.8663119082363005`*^9, {
   3.8663125738458433`*^9, 3.866312597307249*^9}, {3.8665635939962616`*^9, 
   3.8665636095343094`*^9}, 3.866565797018138*^9},
 CellLabel->
  "Out[2105]=",ExpressionUUID->"318f4db0-9f01-4012-b6b1-3af1446145a5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"n", "=", "15"}], ";", 
   RowBox[{"\[Tau]", "=", "5"}], ";", 
   RowBox[{"\[Tau]1", "=", 
    RowBox[{"\[Tau]", "*", "1.25"}]}], ";", 
   RowBox[{"A1", " ", "=", " ", "0"}], ";", 
   RowBox[{"A2", "=", "0.2"}], ";", 
   RowBox[{"order", " ", "=", " ", "4"}], ";", 
   RowBox[{"maxIter", " ", "=", " ", "100"}], ";", 
   RowBox[{"maxError", " ", "=", " ", "0.01"}], ";", 
   RowBox[{"uMax", " ", "=", " ", "5"}], ";", 
   RowBox[{"maxCount", " ", "=", " ", "5"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", "IC2"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"InitGuess", " ", "=", " ", "initGuess"}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"time", ",", 
       StyleBox[
        RowBox[{"{", 
         RowBox[{
         "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
          "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
          "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "Jff", ",", "K"}], "}"}],
        FontWeight->"Plain"]}], 
      StyleBox["}",
       FontWeight->"Plain"]}], "=", 
     RowBox[{"Timing", "[", 
      RowBox[{"ffCartPendulum", "[", 
       RowBox[{
       "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A1", ",", 
        "order", ",", "maxIter", ",", "maxError", ",", "maxCount", ",", 
        "maxJ", ",", "InitGuess"}], "]"}], "]"}]}], ";"}], " "}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x1c", ",", "xdot1c", ",", "\[Theta]1c", ",", "\[Theta]dot1c", ",", 
      "u1c", ",", "J", ",", "error"}], "}"}], "=", 
    RowBox[{"testWithFBClipped", "[", 
     RowBox[{
     "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
      "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A2", ",", "uMax", 
      ",", "K"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox["time",
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"p1a", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1a", "[", "t", "]"}], ",", 
        RowBox[{"u1a", "[", "t", "]"}], ",", 
        RowBox[{"x1a", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1a", "[", "t", "]"}], ",", 
        RowBox[{"xdot1a", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1a\>\"", ",", "\"\<u1a\>\"", ",", "\"\<x1a\>\"", ",", 
         "\"\<\[Theta]dot1a\>\"", ",", "\"\<xdot1a\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Feedforward solution\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"p1c", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1c", "[", "t", "]"}], ",", 
        RowBox[{"u1c", "[", "t", "]"}], ",", 
        RowBox[{"x1c", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1c", "[", "t", "]"}], ",", 
        RowBox[{"xdot1c", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1c\>\"", ",", "\"\<u1c\>\"", ",", "\"\<x1c\>\"", ",", 
         "\"\<\[Theta]dot1c\>\"", ",", "\"\<xdot1c\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<LQR feedback solution\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"Grid", "[", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"p1a", ",", "p1c"}], "}"}], "}"}], "]"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Tau]New", " ", "=", 
    RowBox[{"\[Tau]", "/", "3"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Init", " ", "=", " ", 
    RowBox[{
     RowBox[{"\[Theta]1c", "[", "\[Tau]New", "]"}], " ", "-", " ", 
     RowBox[{"Round", "[", 
      RowBox[{
       RowBox[{"\[Theta]1c", "[", "\[Tau]New", "]"}], ",", 
       RowBox[{"2", "*", "\[Pi]"}]}], "]"}]}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"IC2", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x1c", "[", "\[Tau]New", "]"}], ",", 
      RowBox[{"xdot1c", "[", "\[Tau]New", "]"}], ",", "\[Theta]Init", ",", 
      RowBox[{"\[Theta]dot1c", "[", "\[Tau]New", "]"}]}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"initGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Lambda]1ff0", "[", "\[Tau]New", "]"}], ",", 
      RowBox[{"\[Lambda]2ff0", "[", "\[Tau]New", "]"}], ",", 
      RowBox[{"\[Lambda]3ff0", "[", "\[Tau]New", "]"}], ",", 
      RowBox[{"\[Lambda]4ff0", "[", "\[Tau]New", "]"}]}], "}"}]}], ";"}],
  FontWeight->"Plain"]}], "Input",
 CellChangeTimes->{{3.866310891625377*^9, 3.866310909168697*^9}, 
   3.8663119033668776`*^9, {3.8663127088501434`*^9, 3.866312708951112*^9}},
 CellLabel->
  "In[1240]:=",ExpressionUUID->"fa5c8a58-d8d5-48e1-a656-4765e0d09f5b"],

Cell[BoxData[
 TemplateBox[{
  "FindRoot", "cvmit", 
   "\"Failed to converge to the requested accuracy or precision within \\!\\(\
\\*RowBox[{\\\"100\\\"}]\\) iterations.\"", 2, 1243, 103, 
   17545095697018498346, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.8665636136410003`*^9, 3.866563620077949*^9}},
 CellLabel->
  "During evaluation of \
In[1240]:=",ExpressionUUID->"5e10b99f-7cd7-4da0-b41b-ea3c4c0b2845"],

Cell[BoxData[
 TemplateBox[{
  "FindRoot", "cvmit", 
   "\"Failed to converge to the requested accuracy or precision within \\!\\(\
\\*RowBox[{\\\"100\\\"}]\\) iterations.\"", 2, 1243, 104, 
   17545095697018498346, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.8665636136410003`*^9, 3.8665636201729183`*^9}},
 CellLabel->
  "During evaluation of \
In[1240]:=",ExpressionUUID->"cfa28793-beac-4099-8093-3778958ee089"],

Cell[BoxData["0.328125`"], "Output",
 CellChangeTimes->{{3.8663109480511103`*^9, 3.8663109548219194`*^9}, {
  3.8663110103439465`*^9, 3.8663110410939927`*^9}, {3.866311204431121*^9, 
  3.8663112114568467`*^9}, {3.8663118768634553`*^9, 3.8663119511404123`*^9}, {
  3.866312604436941*^9, 3.8663126430494423`*^9}, {3.866563616806991*^9, 
  3.86656362227125*^9}},
 CellLabel->
  "Out[1245]=",ExpressionUUID->"6532e93b-6b4d-4255-9325-bb5b7224d600"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
J6rbFKN8WOVmZbj9klSUD5dezN78eWg/8sniGPcsE/STUD4ssv7LtXT/XJQP
F1CvfBweKEL5cLnT6C4hUwbKhw8yFQWywotRPtyQdeeiktLvfHgPXrN+t/P/
P/lwR8lYGaWCjeahPvI8IynizUHzUO1zAsMPbORg5DzUjAADT931bIych1pg
kpikvXEY+WBF/C2eVWqvAemD1WJ3Q1UUGwDpg9V1bFQTM2sGceWuiWIt3PCk
Yo4bH9YKxG8MsybbeeAPB7/TvmdZgMdrG8Ohlxd6NwktGvXCwYI3nou/jVCg
nuFU44s2HKjVS1348oMKZ45/Ha6IxEHrxJXr537ywTl78q3nvmSB97uL1G9w
C8CE2tigpy5tgEtPjyM5IwA3HNqmPsJsQflzifOCakf7CJQ/V8/fz85RykD5
s+SdXnPG9QKUP0f1BeJmd+kof5539GjL2Awd5c+CB61XnqT8zp816HwGlbT/
e/7cs8w554ATG80/dfVX6lx+koPmn87O67r30YSDkfNPzzESi/W82Rg5/9Q0
baDJXXgE+V+vxb4l83+qAKT/ZWb09qha0BtA+l/2L6SOLU5tAtdLWF6Hwrhh
8APBh/YKrWAobfdAWRwPnN0rb52wiAWKjmxXHUrgheIXaS4hO3Fg/tTkY+YT
ChT4sunrlXocnOz97LexiApXxDc948/DQVfj9C+XIj541IOyz4EfB816cp+p
5fyw6McTTffaNnBxT/hQc4kA9BXZcEme+Dwy306ONpZcF3cJ5dvvN83TxXpT
Ub59e3Zv4W3JfJRvi4aNy+V1F6N8+6bVcJLbbgbKt+/zqSy3c/2dbz8InzMr
ue7/nm9TW3mbFYU5GJlvO0WPyOdd4GDk/FOHhtk+jWk2Rs4/3a/w68fqthHs
7T2KwLt5XPDAtTR1jQWN4OrwdN7audwwaYFy6eKpZpD5Srj6jSQP9Jww6dTV
bAMadpHVm6V44XFfK53F5SywL2zr9s8rKdBPyTJj9gEOWnriDDcpUmGAk5lX
XTMORJ/rnk/fygerc9R/6J7GQe1S4fkXNPjhJvmwkh5PFvLB+Bc4uURoZaO8
PHxLxlnnukKUl//IKPgsvpiB8vLbue2ntzjRUV5Om2HFb9T9nZe/n2P8oE/q
v+flvhrzXJ4qs9F808fPO3ZYmnLQfNMTFso1STYcjJxvqrdgnjD/PTZGzjdN
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
8mvyPAn59f8Dzzpd9Q==
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{2230, 2233, 323, 697, 597, 514, 448, 400, 373, 
                324, 698, 598, 515, 449, 401, 374, 724, 624, 541}}], 
               PolygonBox[CompressedData["
1:eJwV0UlQzmEAx/F/MmMZ+z4OjJGdjrYLThw0Y3JBKG8bDlxVqGyVcsGppAgz
ZoxhpBI3exuRG4nKvs5QXZTPc/jM7/k+/3fmnf/7zontT943LIqiODpoGBlF
9WxxsZVtpLCd+z6YyhiadDn5vNYHmEe3vsUOHug0xtKsKyjgjc5hPj26lp08
1LsYR4s+x3fnEpbzRxfS6ZzLAnr1bVJ5pGOMp1VX8sP5JCv4q4/w1jmPhXzQ
8fFRVOW8kTrdZ0+zhn96lOeXnZPD++jHNp0J4d08u2rb3A/actYz1f1Ne979
T1vKbHcr7SR7PXy/7fN8hK3RCXaTnWnr7FJ71PMu54PM0ovC99pr4f3tR8+H
22o91ybZGbbW1nvWb8+wlinub9hB96OdrzhvDr+5fmIzmMgzPWQr2ECV/mXL
WEW/PsY750Ms5pNuYMD5LOsY0jGeOmeG9+a5rua38ylWM6CP8975MEv4rO+Q
TpPOYjLt+gIn6Nb54Xfii24kg2adHd6XF/oiRfToApbxVd8lkxa9O/xnvNQ1
FNOrC0nkm75HFq16D9Po0JcoIZs2d3uZziv9HxDldJ4=
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{2232, 424, 810, 690, 790, 585, 801, 668, 768, 472,
                 682, 782, 538, 621, 721, 362, 512, 578, 661, 761, 445, 493, 
                559, 642, 742, 396, 423, 471, 537, 620, 720, 361, 395, 422, 
                470, 536, 619, 719, 360, 394, 421}}], 
               PolygonBox[CompressedData["
1:eJwV0rlPkwEcx+EXFChqQoyDMQYteCTGsIhs4mSrFgGpB54M/gESTsWDTWFD
DrUdMJEwmKDWCxkQDxTQP8ATTzaPAUUXqYlPhyef3/d9SRsIRcfq48ezgyDI
4h73Q0EwQq0H+9nHXvYQp4bdVFNFJe0kecFiH1bHOLvsO8yw1j7BNGftBM9Z
ZB/lCRV2mq3ubv5w2/7CGncr7ziT+X4dIHdBEMzZZe5OfnDZjmqSf0zZ13SJ
n83XIzwm5nmJZyPulVqj63RQQzrv/QZN2cu0XMN6QX9zy/uN9l33cq3QYr2i
2frZ+/U6ZBdosRZqi77ltPfDusKzKr1KjvuX5zfcS92btYPvXPI8ognSTNoh
Pcwjdtp/2eLuYo6UHdN+snzeJ7vI3cwbTtk/KXWf5xsX7W2ZvyPzTNh5eoiH
7LBv8pGw3cRr2uxZNrnP8ZU++xm57oOMsT3z+/GB1XYjrzhp9/KUHPsAD4ja
13nPKruBl5n/J7uHcRbatYwSsYeY5j+U1VxP
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1Hecz3UcwPEjI2eTU9ahiOussldGUZEQKSuhIqFsJbI1UdlNGVllZRUq
soukkNVE2Ssi4/l++ON5r8/ne9/73ff7/n7virTv3rRbmoSEhDq+RM/yOcN4
nHu4i7TcQDrSk4GM3EgmEslMFrKSjezkICe5yM1N5CGJvNzMLeTjHEsYTjvu
pTz5+ZeljOAJ6lEhrslFr9W36cbDFOA8yxhJe+pTMa7f+d/qO3SnGQW5wHJG
0YH7qBT36vx1Oo7naE4h/mMFr9CR++OenbtV36c/lWNOjq3X8TzPIzEHx3bo
xwwimYt8was8GXNxzm79hAdilvbb9ANeoErM37ENOoEecR/2+3UeLWLW9j/p
NFKsj+jLFLX+QxdSzvq0FuYSX8bzduw1LaYHtbo+Fc9Jf4n70lmaqsf0bm0Q
z1p/iDnrh1pS/9Ga+mL8Dv1Nq+p8LauntLZWjXdJN8Zz1Yl6ux7WnjFz6wP6
KaWtT+ij8S5Z/6zTGcyt9n/qIorwPyt5nafjPfP9PTqbhuS0364fMYBqZHJs
k06iF4/FzLjMKt6gEw/GbEh0/madTG9axnVwhdW8SWcaUYPbYrZc5StG8wwP
xazI7PO26BT60IrixB/o1zKGLjSO2ZPF8e/0XfrSmiTHduoMhsQs48cd+0bH
8iz57ffqHJqQy/5HncpLMT/733UBtchq/72+Rwnrv7Ufyda/6meUsT6pbchr
vUsr6Uy9Q4/q0JiB9V8xb12sd+qZhOv/h0poWl2j5fWtuH89FPPTrlpA92kV
naul9HhcpzbVgfFe0Tbew/hcUuIaSI3z4z2K6433kHLUjevgGo79il0=
               "]]}, Annotation[#, "Charting`Private`Tag$190549#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1XV81VUcBuC7jRhgFyKKDBO7O+mO0a2jJUaX0t2NdIe05DDo7u7u7m6f
8/GPh/f7nnPZ3S8Xl5AYXzsqEolc9E9W/oqORIoRzSK9Fw3Jxt/WihPDYr03
jdim1+El5sZGInutTSY7/1grQTKW6H1ozHa9LhnYp08hB//qJUnOUr0vTdih
1+Nl9utTycl8vRQpWKb347S5PR9xSW/KTnN9MnJAn0YuFuilScly/a78nWz0
18/IDnzMZb0Zu8wNiOOgHhUTiQwz52G6flX25Bvu6LlZaC5DLCv0e3Ig2Rmg
n5Ud+YQn/byp8or15OZR5gKkM8+Rv1rfLRuGc24tk3xcTpavy0P2o+VwPZPM
K9PKWfJt+af9a+Ze4Xzo38qn5XSZWd61HyvH6q/JwjK9TJLvyjz2F5nLkopH
rP0hV1q/LweRI5xH/ZzsxKdc1VP47GhzQX7T98hGvMJhfQbXzb35jnt6Xhab
y5GaVfpAmrNXb8yrHNFnko8lennSsFofRAvyU4CCFKIw8RShKMUoTgmS3Msl
ZSlKU4ayLPUzK4TjZo0+mJbs05uEc8ZRfRblWKb/xKOs1YfQiv1603DNOKbP
pjzL9Z95jHX6UM6bO/MZ1/TWHDA34w2O63OowAo9IdwTrNeHccHchc+5rrfh
YLiXeJMTeoxrM8KcLzzH+g3Zh++5r6eyP84cH45HXykr8kQ4NnsT5QbrD+Rg
cvKs9RlyuPWLsmt4hq19IZ+S08L3yxv2U8ox4VrKQvIFOVe+I9vaPxTuGTLo
mcP3yinh+OVJ+8nkyHAvyfzyeTlbJtm7KfvyA8+EZ0A+sJ7aPN5cJJxzfZWs
FJ5BNuoP5RByMUK/JLvxJTf1dhw2N+ctTunzuGXux4881BNYba4cjptN+kgu
m7vzFbf09hwxtwjPKqfDO5mKrNGrhGeVzfooOnBUbxnOE2fCe5pKrNWrhuNl
iz6ajhzTW4VnmbPhHU1l1unVwjVjqz6GThzXW/Me58I7miqs16vzHNv0sXSm
Khus/UJatodz4lkaJ7tQjY3Wa4RrxA59PF2pziZrNUnHTn0C3Tiht+F9zuvz
uW3uTxYi4TutbZa1wv0TniHXd5LcZT1iHmqOk7nD7y1nhusW3l/2r5h78DW3
9e6cNLflAy7oC6jBFr026dmtT6QHNalF+KOaSB3qUo/6bPX5RF5kjz6JnpzS
2/Fh9P9/ixdyxzyArESRxu85QRYN/988L1wT2cBn/wMzcALQ
               "]]}, Annotation[#, "Charting`Private`Tag$190549#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1GW4FWUUBtCBC6gY2KgICiIWSKfS3d3d0qCEdDdSSnc3KnbQ3d3d3d2s
78d63v3uOQfmTNykdVqUaR4riqKY2FGUOiaKfo4TRXm5bJ5HJ2qThrSkIz0Z
yMgvPpuPK+b5dKYOmfjVPj9XzQvoQl022NXgedboo8jMIr0A18wL6Uo9NtrV
5AXW6qPJwm96Qa6H86Yb9dlkV4v4rNPHkJXf9ULcCOdNd47o3/I+B/QGbDbX
5kXW62M5Z+5ECk7p2fjDXJib4bdy3dyb1PTQj8rvSMxBvSFbzHV4iQ36XTmQ
jIzTz8vOfMLLcaNoijxtH5l/MucgoXme/Mr+T1mERHa39LhyTPi+XKTfMPch
qZ5Gviqny5Syp+PHzK1JoicJv1lOkp/LQ44/Mg8luZ5NviXnyG8c2yrrhvMM
99J+vNxof08OIhPj9QuyC59yRo/lsyPMOfla/0sW5Xa4p/TiuN6GDzisN2Kb
uR6vsEmfQHb+1otxJ9xjetOY7Xb1ScBmfSI5+Ecvzt1wD+lDE3Lyr30J7oVr
S1+akovc5CEv+chPAQpSiML857sluR9+F/1oRhH+ty/Fg3DO9Kc5O+wahHvD
Fn0SRVmsl+ZhOGcG0IKddg15ja36ZIqxRC/Do/A7GEhLdoX7xets06dQnKV6
WR6H82YQJ/S2fMgRvRW7zY14g+36VC6au/IZZ/USLDOX40n4rdw09yUtP+gn
ZbvwLHJUfyyHhec4vIP6HtmYN8O77hmZIHfY3w/fJ3M4B/tZcpr9JdktPKvh
mbCfKs/ZxzaPNH8sc8l35PzwXsqSji83lw/vvP5UjyfHhudTLtZvmfuRTE8X
rrOcIVPJwY6fMn8fnk09WXiX5WR5zLEncnh4rnnbfm74G2C/VzYJ7w879Qdy
MFmYrl+W3fmC83opVpgrELFEH8Jpc3s+4rjemn3mpuH/Y5c+g9Ks1CsSi6X6
UNpQhrKssq9EbJbpw2jLfr0ZCdmtz6Qcq/XKxLBcH047DujNw3Vmjz6LK+Ye
pOSCXp415irEYYV+W/YnPT/qZ2QHknNCfxr2ZA/XWz8oW/Au8V3biXKv/UM5
hKzh2bGfLWfbX5U9w7Nsl0omkNPCNZYXHY+Ro/QUMnf4d+UCmUZWcHytuSqJ
9bjyOTkuPPNypeN3zAPCvdAzhPdLzpRfhr/Vjp81dwzPISf19hwyt+Q99ulz
qMg6vRrxWKWPoAOVqEwVqlKN6tSgJut9vno4N1brI+nIYb0Vidivz+WauVc4
Py7pcZznaHOecD7mhTKtrOXYM8TOCMU=
               "]]}, Annotation[#, "Charting`Private`Tag$190549#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV03fczmUUB+CHQhIRZRQlhJC99ywkM2R77RGSXYgK2XtEZe+yIpRRZplN
M6FBSjRoULrOH9d7vuc8n9+67/vNmdS7Ua9kiUQiyZ9iKRKJx1MmErfxifyS
WoG58gC1GH/Lg+guP8JleTsdaanPzBl5DeN5Tl+IP+Q9FOcJ/e0ckOcxmE60
MsvCN/JaJlCC2mYpOCi/wRA6U5JSlKaO31NySH6TF+hCGeqap+Kw/BYv0pXW
Zlk5K69jImV50uwOjsjzGUo32phl45y8nkmUo55Zao7KCxgW60Nbs/s5L29g
MuV5yuxOPpUXMpwetDN7gG/ld5lCBeqbpeEzeVHsCz2pSAPzu/hcXswInqUS
lalCVapRnRrUpFbsdexFrG+sX6xTfHt8T7xjPDfuT0MaRfWctHwhL2EkvWhv
lp3v5I1MpXFcY5aOL+WlvExvksxy8L28iWk0iWvM7uYreRmvxLro8/KLvIM+
dNA/yA/ye0ynr/4xrsl7eTruqU/PMXk5A+Xi/CO/Gmso5+NKvJtamZ1xPtQy
3IrzG2dbfogL8c1qJTbHOVRLMYF/9WPUGkxhhv55tTDjuR7PVKsyiX1xTtRy
TCQZr1GTqTSNb1AzMI7jsbdqRVbIg9QS3JBHqdUYFXuv5udqrJ9ahQ/jDKtl
SdBX30nNyUV5S/y/yKX5T55JP7kIf8r7aUZT/T2ckFcyOvZf/yi/yh/FN9NZ
/zA/yluZRfO4h1lGTsqrYr3iPOgL8Ju8K55LF30uLsnvM5tn4h5mmTglr2aw
XJKb8S5qdSbHOsY5UQvyu7yb/nTV5+Yn+QPm0CLubXYvp+W3GcsAWtKK1rSh
Le3ivMcZjmtdcx9fy+8wLs4Y3czy8LO8jdfj+fqi/CV/zHC5PMkZSy2m0cFv
/wNIua7K
               "]]}, Annotation[#, "Charting`Private`Tag$190549#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1GUYFGUUBtAFCUlpkO7u7g7p7i7FABRUFINSUUGkpLu7QzqlSxrpDgEJ
SQnP9+M8773v7GzObIYO3Rt0ixKJRDJGjURGxohEsr0ZiSyNGYk0Ij4XdI11
5839Kc0OXQXdXnM3svOp/ZWcynPHO9rvmIdSg2/tbzLf/Jvj2c3LzI35zhyf
t8xd5RM5jose18R+wTyAQeaklDH3ltGYHdhHywzhOdnpvIpyn36S7C4HyoTh
9clh/0y+ljPlNDlSpmUJ/zm/k7yrnyaHySEyBTXNfWQsFoT3KTMzyjk55HJd
ExKE78b+VI7nkuNN7RfD56Usu3SVdPvNH5OTF7rOun/Mw6kVPpsup26FuSkJ
uazbTWX9Afsn5OKlbgy59CvtzUjEFd0exjKO8UxgIpOYzBSmMo3czl/lvOYk
5qpuL9PJ49hqXQuScE23jyr6g/Ye5OaVbgZ59b/bW5KU67r9VNUfsvckD691
M8mnX2NvRTJu6A5QTf9nuNbIS4RZ+vz6tebWJOemrpnukvl7ynFQ947ucPjt
yUcUZusL6NeZ25CCW7rmusvmHyjPIV113RHz5+QPaY8w3RyVd8335Ahq09ce
m4XmOc4vaF5vbhveV7jeedvcXT6TExhmTsXfHt9CXtFNkQPlYJksPB8V7F/J
6MwJ7GNkxnANhu/J+TXkUf1k2Uv+KBOF65YC9l4yCrOYEe5LmS7c/7xhf0/e
D/cGv4b3Sh1zPxmHRea5XqeQeYO5HSnDtWx/Lidy2/GW9qvh9anIYV1N3THz
FxQkGl10D8L7oC7zPK6wbqO5Pam4o2ulu2b+iUoc0dXSHTd/SSGiM19fRL/J
3IHU3NUdZQFFHdus60ga/tEdYyGLWMwSlrKM5aygmPO2eHwn0nJPd5yVFHds
q64z6bivO0Ft/Ql7bwoTg1X6Evpt4dohPQ90rXXXzT9TmZO6OrqT4TenCDF5
X/dQjqIeqz2upG57+O3IEP4Xwv+ZnMRDx9vYb5gHUYWv7TGYaz7leF3zqdCH
79ecmKLhd5JRmRleT6YP/+fmD+S/crocLYfKlNQ395dxw3Oz2D5eZgn/Y+H/
wGuVkn+E60R2CfeaTMC8cB3be8gXcoacLIfL1OG6C6/p/Lbypn6qHCx/kcmp
av5GxgzPZR4rM/GXc+qFDMfD92tOQrFw3YRrPtwL5lh8aH4U7ikasMa5pXU7
wvdOJh7p2uluhdemGqd19XWnzd9SnNis1ZfR7wzfGZl5rGsf7nXzEN7hjK6B
7oy5DyWIwzp9Wf2u8N7IQk/7y/D/wAhzmvA988RjO8jb4b6lOmd1DXVnzX0p
SVzW68vpd5s/IitPdefYwEY2sZktbGUb2ynvvD0e35VsPNOdp5H+nL0fpYgX
nlv3OPwWNGSAPR5LzBNkVlaG68H5/wNRMCX4
               "]]}, 
             Annotation[#, "Charting`Private`Tag$190549#5"]& ]}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"Feedforward solution\"", TraditionalForm], 
         PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1a\"", "\"u1a\"", "\"x1a\"", "\"\[Theta]dot1a\"", 
           "\"xdot1a\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1:eJxEnHk8VN/7wBFm7MuMJSFt2lREG9U5SdFCKqmIVNYsWVIokRZRSVIhQqkk
Wcoejn3LjG3IWpax78vYl9/9vF7f4/dXL6/LnTvnPOc553ne79uaqzfOmHGw
sbH94WVj++/ftS8WPr6XvX9wM3j8Z4vFADieRdLpskCAUj9eqSE0CmgCu3k4
jSrBhtDrLk0T40D9xZGcL6fqwSKlfd8Pu0lgtmNWQEmgFbxzla6MCJ8G2pvN
RsU1mSCyc4DL/tcs+MFwdy7d2wOC/GXN+VzmgZrolnhOjwFgdZ4/nH/DIrCY
Cwj7dGEEHPlbUk7+uARuFHUrx2uPAX77n4IrXNigrwH3hgWbCRDmeimraD07
vFZ8x1zJchL4RffODeayw1zSytPWF6dBsJZI38BFDqgk4vmm9+Ys2Ea/uPr6
Agc0GT+goGMzD3YanAl6E7gCRr4vlJ56vgiyP/+JUdzNCX/6qTZVn2GDvVNS
cupVnPBmxgHdsJPssGL7DvoxIy6Iyj6N+RhywCd+jAD/IS5opbkvy+rCCjhf
TM9/ZscNQ6OVkq2vc0J+OY52z2Fu+HI86779bS642/uPM/kaCXbFON+ydOSG
1kIUnhUFJFhwNCDIy4sEgySFqoLkyJD9VGP7C08yXJAYlYm7ToZsh1LYI1x5
INiUqnLmCxk+kZjSrvbmhf4WtT2GTWRob3Atb+oBH3yU9uQqfZEM2+6rmILX
/PAINCdVivNA6qvgRp9IAWi7im+ItpoHfhbe4lr8ThAy26ccdFfxwFzH1Uc2
fhOCwc4nIzLJPPC9XIT0AT1h2OK4Ppa3nwyz7s6yWVYKwwCqQ49EPhmuOUGa
X3deBFoyG0+XPCPDpIrNTxsYIlDeUqBP9zQZPitaVJQzEoU0LznyQx4yfOXU
e92kWRTq6It06+SR4F0xWaG1Fymwlv0XqeUOCX7dzFV2s5UCO96KypkokyD3
BPvKXGMqnOSyWi/MQYJfFBPvve+mQkSRVf42yQ03X43RWbAVg3JU3yZ7PhJs
Opb+41y/GIyMv3F1N/H31R/dtgEncXjvVRnzuy0JTv88vX/tmDg8lUE68vk7
CS6lOSY/tpOAITuMHO1HSfCE4tEjd1kSkOehmandATIsNtphZe0kCVvdfC9q
PyTDuAT7qaUlSchZ/ENSt4oMy142OfRYxINHBhv+fDk5DNqPpxzwYSfDiPOX
ZzZpEvOlpTUmsUCGpPdTPPd9yVAjtm5jOhsvLGs8qr6BGL/5vdvInVx8cDYg
43nsEBluGjrx6h0/PxSa2h8az88D3Xgtwk1XCcAWWlrEKhke2FLV9jVaVhC2
Z7ttXEnMX1Lu+su31wlBXdF6o2IKD1waeHu5hyoME7d0BOrPEc+rQ/M7EyAM
LV5fNDCoJ8PhDs/FQooItJFJzz/ylQwDwl/a/A6lQD9FD64CfRKs93swGrKa
CpP/3a9GYiSoH9Dwe8dHKtx0RLvYb4obWpZ+76JtEYN7buvf+bXADTnqEj2/
xopBx7zDDE0ZEqybXGl/fIc4LBOtSq3RIUFVkm5Ccrok/PT14Talb2RYqvog
fcAiHBxduPhdtnkQ1Git7+ci4uCD9vebh1TI0PPEy76abDJ87R2kOuVGhh9u
FQUqZPHAdQ7WxXHJZKi+SfRbUxEvPB5T3G7VSYYno/7EHCvhg4/N/cX2cPPA
7UU09jP1/PCG+cujVlI80OXHAfWVrQLQZlYgsI4Yr21WG23C/xHxvif98IIE
DzT5vJHjbp8QvK7FrLLgINZDakqtppMwXOn4NI27nQz1E7KWxMeEYdPTFx+9
U8jQu/FP1qQbBbqpORyRtyJBeKmghcRGhXeHO7m/ryPB7fm2jtOeVOjmGrXa
a44bkt3jd+7mEYNd1o06J2e4obh0nMXZ52JQSnToB41CghcirER0BcQhLBX+
9BKSoOcP9Mz/jSQ8ZUDzY7wlxkNjacZQjQf+8Ei7djyYDLvaujKOaPBC7gX0
LqmCDFOOaZkNafBBVCjrsW6KDDn35twZ1OWHwXbjnXtEeWCxDtuB28YC0LXh
77tuWR6oPvpIZK+RIHwhy5byhognVam1Z05ZCMEUVDiXIMgD6dzS2QEqwvDA
rYCKp+Nk+N70xKqIbAq0Fd8VRdcgwRu56lzbARVujih4GMpLgveuHNlgUUiF
8T0lE+zEeiwRiw0xOykGqR7m52tWkODQi+Tgpd9i8NjMX6/ijSQ4Ydha09gs
ScTZzcuXiHkueVatxbJ4AV48lju+ee0gKNdsOqTxgQSLwiO2PNpChpCW3JUY
ToatRx979TmSYZXhwRPm73ig/mb+HWFxZNgZ/nBe/wsv1Iv+rXm3lQyNPcJS
5D7zwdcCB1EEMZ/k9ew/S1L4YYYpt2+6JA8s+mDtV5UjAH/+iRftJ+KhLzPa
8WeWINQMLT2Tv5IH+j/7+LGqTAhGUD6MfOXigWtttrrmXROGsg4jM2FdZOgr
fskTtAlDb4EVxl2ZZMgx7WbOf50C+0RWBbo4Et8vj3n24AgFhrgo3HLaSoIh
TamFzTeoMDLv/VXHRW5Yr59w4fo0FXrcev4cEetJDigYRrsT8VHWTXUTIkEp
Z5H2M/NiEIYXvi3cR4Lrn0zNLjyUhKrK87VifsR4FK2b3CfNA7/fvfxn4SUZ
ihUbO3is5YWDn1ntPqVkeDE3I8VqAx9smzJ/wE7MnzjlsXfBdn5Y1Hev5KUQ
D4yIVR4a3C8AT/1RNpEl4sG/7afRyAFBePXJVXd74ucp248Xrh0RgrMrSOIX
RHhg10yDX9Z6YSig4brzCRFfkl5D+cnfKfB9h/naDG3i+TZdu2O6gwrb0813
1RPP3+f6wuVEEhUWGy59u0fEQ9BwbE6wmhg0en71ZSAbkX9/KD/XyxSDp5N5
LS3XkuBbJUl1rd+S8M3Z0PO0JDJULRUJd+zjg4E7Dpu85OGBepYhuk0z/DC/
zfTYP2J/2pInNGmyJAAFeXb5+xPzZy/22ewpuxB0Im17vCjGA5+xPlpUCVHh
2d20povSJJgXs241NYAKxbLP3d5LrL+9H+P4OaTEoMME7cFJYn2OXZq9Ie7E
D68Pbp2JpPLAoZHyp2yeAtC/Ts3mNnH/CbYLhR53BeHRQfmZp8S4ZxisfTGl
Q4VLhjJe3NwkKHpsrsqrjgpfm2hlihLfd1rt200lIzHIZxDu5UQiwdOPo81s
h4h4N5bzaSkmwyJFBwtuSw+guC+Ns6xgAGgV77a9FkCCtg+OzgduIEM5wRKm
nD8ZRq7de7jajgwtddzkH/jyQJ53tKbFGGK9Nx34FPiWF1rn3bwx1kKG3Tae
+/lf88H71SdFEBvxvNUhfJyf+aHM74Mc5UR+GwzxStqWKAC5HAJS2onvU2Le
65wVKwhtQ29wviTyY7THlZvzGULQ9be02j4SkQ+LOsuWDIWhYRXjW0MPGUYd
+5ZTUy8MhTjTajlzyBA9Lld9e4UCqWuiUjbdJkGdyQm/iz0UGLNtaqfZDhKs
7L40rGNBheHWKuu2EvOdk59gzTlChbEJ1zjkiXiP0u1nVDuLwZyn56etBUjQ
7bLZcca4GOyXUt1xazcJTjpSfqjclYSVzxdzd/oQ40HaPRFN7IMx5xJuHSHi
PzY95GSoCC/0XkikGReR4ZYFp8tfxPig9N51Fi0jZBjOZiWQIMMPHzvpq2wi
8tlzQ9rRzQoC8Inaxp1RRL5LaSh7cHK7IDxw9dJ0GRHvdRJMQ1sVIdgUJ5z+
hsiXjuN7p6qlhaFaLnWL8wwZ1grDIPiJArcevnRX7QyR7wydUjw2UiHDcnZ1
iigJyj1W+ZD1jQpzD4f1jxPz73npe42yshgcmXbnW7XEDd0Lxrg9ksSgyKD5
msrVJGgprTJzL08SxoSubGJLIMP8lIn1xg18cGLmbWY/Mf6HJFS+ivfyw/er
be5tJeL9dIa8dNawADQYachJJ+ZPB3VZvh4RhKo23yY5ifnt2pT0YYBEhQUF
PX/7iftPp5RoPfahwnIByQ6tWSK/CMevDhUhPv+P29GDxM93jrew2K/yw23e
D+xvEueFxnBzptoNAeizIjd+N3H/VTN2/U02gjBPJsBJghgvqt/OMlFNKvx2
w0LxAJkEtc5FzE3QqJDDVJl7hsUNW6O/ef/WE4N/7RYevuUiwbUOBdJRnZKQ
h0H/JUucb1Y5Wxg8L+aHX5K1IoKI/Boeo2fpXCkARb3HuLqJzzOtECUqByr0
Cg5m75znhiO98Ucq2cTgI3aznbenuWHSQvDrH9oCcJrktM2XmC+r3tA9gdrE
etzN84uH+Lls4gw8tocKtzzcpLGBiKck2z6dhkwqXNXDd3g7MR8W6WzT4bzE
/G/U+/qQWL+cZdMVnEKC0DHiELch8fnP3t9jRYZQoV2OAlmX+Dzd3XEzFmvF
4GXdIodbxPOwqysrF/oLwNIoUu1X4veb9+tHC/+jwhOX9C7p/Dff757F7Z6S
hD9e9McHlZNhrktc1CbLG4Acc1Cd480A4PZmcjj5kmD3ZK2Z5Doy9N9ede3C
EzI8R2L/nmtDnJc1JQNFvHjgWy6nM1uI81i4a4jrzxe8MFNHNy+6mYj3Doel
+8/44OQLVnDJEhlej+lOjQzjh1eMtWtOEfPPJuFXbPiVyFeBlNYG4vlSf/nc
Vo8ShM6Nux6OEetbxTWnWeSnEIx7SLKeJ+LLYzzPSfaCMDwaQX4w3kuGih3V
rWEMYSi8T532IpcMZXVYUZeMKPDz/QZjL1cSnBdyV7BgUuBEobbPFSUS7Lfd
wUm+RoW7PkcJSLKToMqsonNVPxX+nZRLZxLjYd5QJtLjIAZ1Hz9dYcNPgjF6
LxYDh8Wg+yO2UwwVEjS2jBSovC0Jbxo46+c8JsZjI3Bq5eSBca7Pck2J+mH6
x96MLTy8UFDofl1+ARlS3lUqFwnwwR2T8y+LhsnQ9LZB5QYxfjjFX1xiK0DM
p7LUeNE6AWj4iCvlChGvZefq3rjJC0KxnLjgcSI+Cm0eGo1tFYIOznW/FYl4
32tv+a1FUhjavm88bTFLhir1lhzckRQ4Nvu27Z4eCW51njv7fB2xvr8JO+2i
kqAaPyn11hcqfCBhHLyfyF8TAdta2HaIwTfqHXMWxH4OtasPByaIQc5Ctkkf
WRKsEsnTk8qWhIn+M5bB34n6bFtXd00lH/w67XqMQox/2pDnuaRWfuhQrKxY
TsyP6e6dO/q7ifPIP+OUUmL+DlK9r0v1CML9J9e1exHz+0p9P7EXU+Hue7qe
RWtIkHLgnRF4RIUjw/MXW4n1HHh0x2YrATE45/QxLZfY32AuPe32RSL/d3nx
1RP5TPf2T/8GcwGYzjk1Ikzcf7uz2yKPmSBMAqtDLxDjlfclw0LuMBUaWX9I
t+AhwWtNjsJxpVQY9HmvzH/rW+/f1pdBumJwZXSo9Q9OEnxqfsYFtEnCgiHe
xSxiPwg4mcS9FfHD7DugYwuxvn/Im9z5WCIAD0UoBfcRn+dxrjNh3U0qTGHt
0/tM1Aumcoqnwuap8G1v12cJYr1tqe06pHtEAL6ryxfVJ+brrln08bwjgrCO
rzHqIPHzbcGmFn1lKhyQWn3dVZAEK8YzrwWkUWHVNY+e00S8/fXXjjrAIQDZ
Vr8tUibWt8RRzo6dJEGY9UBG/7/9+8v607yGb4h4lbigjYjPK7DZvmKXrBis
Os0t+JfY/11Wev67+kQA5ic0Xg8gfn8qb1NWaSMVXm6LNFAg7t/jL8VbPSYJ
3UPpAWplZNgoeztyKU0Afk+ddOghfv/kc8WreyaoMOlm+KwdER/iDz1DnqoI
QDV3e7EOYnw/GiF72d2CcOUGikY48X242K4+50ygQt0jg1FJxP0PHlzF82JK
AH5LmP75mbhfi+KkMu05FX7+YRbxi5hP05KVe9/fFoASegn1F/6rXypoXWrV
VJiZeyHov/P2s+3HzmnWC8DrglYXW4nrwd0SqnK5VOjsoxFFIa6PaA9m1okL
wv6/ipFqxHUHydjWnvdUeOT0E78+4nl9r3c93hgsAOOt1b9lEdfzUh68Ot9B
hVfEP3xzIf5e4vPimXdzkvDRQ++WCToZppI3r7a1vAxWJXa7Bd0bAJ3mv2hu
j0nQbmn7XP0a4jyffW7dTaJOrqrx0UizJkMDje6yenceyJiQSDkYTYaBJSUd
eU954d3xxQwOIr8Jhve17n/CB+WSweQJIr/Jiwv62Qfzw6rQORNhIv55aylV
jp8E4Iq73scZ/8Vv18VpzghBOPHabHANsT/Osob9peOFYHPMpc5LZB4o6KtU
sk1fGHYn37T16CPDyfiuEa9qYehz+fVuvTwypCXyGABDClyvzHwV70aC1dKH
5mzbKfCfpsFzk53E/pkQ5Mc0oULIn5QYQOQ3O7HRmdReKkyUcZov+q++CVNN
GLshBjOa19UO8pGg+qmoC86DYpB853YDJ5HfRK9Z/gpzloSe3/p6Hz8ixiM1
f+c8cS4rGeM+6vSUqKfiSaOjnLywh7qwNEHsj+S+xbBaHj649lYmax+R34p2
1iS2CvNDM5PILUJEfkPvYenr1QIw8IePLCDiiUG5FPFyrSC88EAwn5sYj/1v
9f4mbRSCrzlWPLpL5LfQ7Z5cHeLCEEoJ6f4j8luHmntqz3sK5I503x95jgQ5
vNDawDVUyFP8FswQ+U3rlP2hs5+osJI3+54pEQ/b4wavdCuIQcqngB5hIr9F
iqi3v48Tg34mO671EPX9Y34fjp5fRH2apWpqFkuGfT3GpX7lfPBYb9iXT0T9
7WTwZeuDZn54abh6+zsiv9lNpO7lYArAQt59TyqJ5005eL6/uUMQqrSoPswh
5vf6KTYhdg4qDPbdeSSNqAfkPDl7Vj2gwjyjU6M7iPVJvzL8/RSfGPzKQ5F9
TKyHD3c1Q3ae44fFZ+n2T4j8xt/RYB59VQBuLlJLnyfW115lNvKaK4JwmnuE
14UYr6Cke7s3HqJC0ynLWjaiXrWXbQ7xLSbOa1dcb8wT+c1vtl/MQ4eoB1JL
V6sT+Q1eWSkv8E8SMkW/HX+OyFA7rbF5JoMfKq5QiBkj6sdMZufDjAIBuBYq
7vuvfnwWpKPG5kiFa2qUOPiI8XqvNlLzYJYKv25PjPlvfXVCAcnVhwSg50r3
WFXi+R6v267XcEgQrtLRHT9P/KyzKjzWSIkK16996rqRqJ+ad8sP2aVQ4eky
0gYLIt6C553c+Bf5YWHF6TkeIr/JcfoOHFshCOXK+s49/K//Y5ERuCeQCtdF
yETNEvlt0XvIe5U0UX9TX9gEEuOn/OhzstJDAVhzeY3xI+L3ObkDND/XE/V6
X5i7LHH/0KdtqeEjkjD9m8E3fqJ+ZDbPx4gnC8CoyYipTuL3H0ePdMmMUaHS
3y6fY8T3qR7+bG+gKADX5bWJFxDjG7vqiNuunYIw+Mtzz2Ti+4ge/i3R9p0K
N3GwpGuI+2vNR4h+HheA1vt0whL+q7edLmd/fUqFJi/b5tmI/Wu1ChS0dRKA
H94M7NYirquK7nGQrKTCkoI3av/Nz5sBurExgzi/fa8QZf7Xr9xyv2A+mwpX
/tJirCbuP8vnVDQoKgjvdOinnCCu3zMUsy4MpcIdD+9QpInxOFrHbzQZSJxv
T77bmURcr5gZkFFpo8Jzoe/vXCX+vjyikM1qRhJu/FTPLKIR+eICOVvjuwAc
O5IV9/e/fFMaphDylRivDB6qBPH9DVxiNzD6BaAreCGbR1zXD+J5XPWbyOff
pOamiOeNtmx0eFYuAEeK83b2/pdPE842JGcQ+VTabfwg8XmZ3y/yBD4TgDkO
twPe/zceHmjnYDMV3liy191PXK80GX3bkykARd5Gbvhv/5zOnObY9IMKJdef
8Qwirss9M710mUGFUzrPV/IQP3vZ559QbBaApj20hqb/4jEqLv5wPhUe06Qk
/He9YhElXAgTgN2cAqDov3hxkuK500mFB9ck9voT169+2/OJtiAJdfaEBK+t
JEPc729wvGmvJ92PcL+f+VflwTuFLoT7/dsili73fWhFuN8f8kRUq+hqFcL9
frZ5xvtzK1KX+/30PSFqqmbty/3+JMvjbnHXhpb7/XcK45+/+T2+3O9PacyH
ct9Zy/1+7uH4hUtfWAD3+9uM899QzScA7vcfrudadd53DOB+/2qb7rCYSyMA
9/vb3+a1mL3vB7jf3zN0OoXW3AVwv3/x0mWF0b42gPv9q5p07Y7+awS4319g
7Ja5dKYG4H4/dezMtg0rSwDu9we4rdqXYJQGcL9fMV7wHyvbHeB+v2Fmycoh
1USE+/2kHtmXQqdyEO73a514zXH2djHC/X5NzuNKJRQawv1+8VgHqju9EuF+
v6/yzSPsGdUI9/vj7fyPNU/VINzvPw5t/E8mMxDu94+VpjwZy2Ug3O9//y51
lH8DA+F+/3YuhWLNtGqE+/3NwOI8PaAS4X5/5jPHuHS93wj3+6nBRl/2kvMR
7vc/Fhu2rD77A+F+/yHHpP4tRREA9/uv8JqEqvjkA9zv9x/YZbKhvhrgfv8E
lR7xMu0vwP3+92nO4OniBMD9fsbYuP9t1xGA+/0nb/sfJz/rBbjfXxKqfsTj
RwfA/X63kYcCFp+aAe73D0XcjZnbwQC43+/CpuPEY1wGcL+//mrIZNbFXwD3
+2GEdWBwxXuA+/3Cw7WZN5KiEO73B4f9i9nl0oPkFlJDF3aXgPaVjr96P3Sg
J/Qs5jl9Bqi20JdUVGtE3FPSQ5y7moFlxlmaDvkXuhgbv7RuSzuYXizXdZpk
ADYPB+UR0AU+nNu827qhB9waPyvabdgHfuw7aLuhahQ85NzE2hg0BMQdQdkp
fhboN8my3HJ2FHw4cf2EJoMF7grfVtA3GgfpP8Wb72xkgUnh3CNvr7PA77kT
GXsfjYMAizJDuskUuJOq95R0d3SZT/hPiv18a1GGMJ+IqlW5anCrAmE+8VFU
r/JbXRXCfOLgn+d/i61qEOYT6sNed+9YMxDmE8eG+gznqxkI84kKk6yKv94M
hPnEZkfnGgOfGoT5RHaw7ieznCqE+UTkPo/V1Q50hPnE5+yNUQs3i9H150H5
i69F4D6hg4sPszOR3Anq33lJUcjYOXgqoe4NEpaZ0M4JFYU3E8+/lJ9PAU8K
VhzIlaLAPwd/N5fvLAeYb6w/72Gt5lEPMN8obqrK0TOfAphvsM2H6D+MGAOY
bwT4BJcbig+Cu7vbXfQUJaBbT3/wVZ9K8OnmJXf2HxJQI9rEiDctH/AUq/5x
UiHOe1mph+SoiQDzDk9bj6D82LsI8w7VIr2sirRe1D7YcsWFlQ+muzKkVUeY
aMvQzGTsxWqgOCsYWjrRgtYfVjqvr94InuXEfMj+UIL+DTIex6xqA5ckjrro
mpUBeT3rgAeHO4G6giGX7VwnoDJ7Dl843gvo1Amm0qsRYMK3+cybp4PAfr3M
85P3J8Dm7ZtW9NSOgEp17tPkcha4Zb0jwat2DEh8HC76bs8COcnXdpX1T4A3
hn1CUzPjwE1iXZsHcxKcNTX8lck1tsxnji/KBLycKkGYzwhkcak9OklHmM+Y
h8gflz1fhTCfOff2ab6VeA3CfCbvIiurYDcDYT4TwCxqelXKQJjPSB4q7Gj9
ykCYz+wfl3kW31KDMJ+J9rn69/nhaoT5THW3hopHfQXCfCYnRnVfh3MpOjpQ
cfnlLRHYNFD5I60gB10XCFfpnxSB9fdWgTzTaER3cAUjd0Xh6J++cc0V8UAw
dLLGf04U2h46u/FuQTHAfGfbx4XsbSG1APOdf8YSO8wSpwHmO7oqPl83lIwD
zHeGjEz/lMwMAVVWsIGaiAQsP1xlxzhTDarfWKzU8JeAKtZD+3omi0DMHSg4
TZWEWtwCVeIrUwDmPWzsE4t2Xx8DI/6AP14u5eBtSMvaxD3tqDPufvXimTpQ
Fvpk0EKgDtVc93UJ29sBek75GGV1NIOGr7cZl/Z3g0OrkpWEYvpBPQdqdbbt
B7f139/h7xwDXxfkg9KjhoFCa4mFyw0W+P7qDN2mchTQ7X6ZuBezwIPk7OjN
neMgyvLnh0HaBMC86elceWCIViXCvKlsJ52XU7saYd5kSupSn02qQZg3vdg4
GYheMxDmTfe3Kb6ZrGQgzJtkDltbxRkyEOZNZQd+u8dtrEGYN13/orvQtaMK
pXR2aBolCsPnzu+TGSPlxH6nsXBzlwiMMA2UbdAtRJhHnVSSN6t50gQwjyKP
xK6T3joJMF+SY9K6x34FIcyXWq3C3EzN+pBGl31BMiMXnKw3Vfr+ohPNL0h4
XjCsAj+jtMWeff2HlK1+8S1pNQBdoYMl6TU09MHPosw2sBUw+NZJxjbmgYyD
PYe0C5nA9/W8TZkKE1y79LPZP7cHfHzrL1dSPgzofl89tbkGQVC050zv1glQ
EmhUefTtCEhvtLPyQiwwFsQ3FvRyDPzpcc5y8WOBDeRd36/FToC9O5p2HVGa
AHY3Kj5e+DwJot30fX9pjS3zsDlD90aXfSUI87Anb6s2r/hBQ5iHffietG6I
UoUwD9OVKeAP661GmIcNJe9rCpBkIMzDek60vivOYSDMw4rMjlLXpzIQ5mGZ
n43AFAcDYR7G+1co1dWjGmEe1nV6TFXqUCXCPExtw8lCd6sylPSu/3ujuQh0
2sQ99qkvF72wY15u7xSBPbqhFWGhcWib9P69ZFtR6HYyzGw9/QuoJNmHT/eL
wszi24uBEYUA87T9ldKHW1UYAPO0a/fuv7m6phVgnibXYfvB9soEwDxtOPMq
yX98GAQznH/HsUvA/ZkBuV0Ha0DPRlsLMw8JGPRcTf78pxIwey5/syqXJLTf
qGZPT0wDmK95tiVy844FgmzODao558tASaPDXPloO0rJDjeM0asFBdY+fA7K
9egNn0ymSWI7+PtFYqywrx7YBE48kM/uAvcE+sX2H+4DG+/4uMYx+8D6L36X
P5iMAfH7X4rsZYfBvbODqdHqLHBy1vvd75ejgFZ88rVlJQuwdYT0gchxMHn+
Uej7+QmA+d72g/OHGByVCPM9BeMPfWyUaoT5nkKjQYKlfw3CfG/tr6vSI/cZ
CPM9I6t/T71riPn7H9+bc0p8LOzEQJjvkb3f5uwyqEGY73Gfy32T5FqFdoZc
6P8TKQx91QtZX5NoKNO93T1svQj0DVQtNbcoQpj/xe6IGL201AAw/5vRND5R
VTQJMM+DAzt/IGF/9MpqqD09txOwzaFO9xvdoNBa9tvqml6wYgBVSuwZBWPe
0ev+iQwB99fUrQu/J4Bv8dguH+ooeJ0Z4tZRzQIzB87a2awcB96hVkbqOiyA
+WBnkbLm9TMMhPlg0PhGu+gKBsJ8cIviue9rQhgI88E5zzvyW5JrEOaDjmas
RBrPNPD1ndA8MNkP3g6dEKQajwPZAzUq98VGwLP0HSI/AlhAcJsMu6DQGAgU
YdzITCfW7/94oVdI0/W2zwyEeeE3X9Z0bRkDYV4YT5bjTzjEQOs1ox19KyhQ
46nBQvWqFoB5YKt1honk2wiEeaDuBkHX26gP3bya4axXkAMUKqarzv/tREyu
LxrbmyvB9JmaJ6cPtCLVu2zmZ8vrwZNIw83qWyoR5z9FmwrdVpAQKDPGcSob
cCZ9XrnzMROceeu8bUq7A/gGSW7e5k7kJ5+qIXapYfCwsldic94AaOxIN1mz
MA4ktaZ3T94eAQ9zT/YKpbJAQvyMaNSNMcBmFk569o4FLiTKWCU8mwB5z9zz
lk5MAMt3G7iOeE8Co8dVN1Ktxpb55fAuenZ3fTHC/NJI/WfupWs0hPllqnOd
p/toJcL8kl9F+rtIdTXC/HKl4r9EbzIxfv/jl8GStpaXfzEQ5peXEo84N2Qy
EOaXv+R3fLagMhDml8Z/19YdDq1GmF86bfhieuF6JcL8MvZescGG1jJ03WlG
b8lYBM7OtT5wcctDa1d7s4xaROBJRvzxPzUJ6JJDmArVTBQ2l73d+kIjCvzI
UnikwBSFZd/YQs+/KgCYf6rdFjdwelQDMP+8/9G6LuDuP4D5pyHn63Me8RMA
808RHrVujX0jQKug40HPjDgkH9N6WpFSA26O3BCcvCUB5VxUYkw9S8Ha/Id7
DBckYGu0rVXjigyAeWiElumOH/XBYNjTrt9YsxSo6/aFXzvRgcKLtst51jJA
i5WdK0mtAU0bdhnl2baDVlDA9nW4DqTw/DTk8+gCrTHD9x/59QKd1KHC4xF9
INCFqgWkxgAtr9voZNMQ6PbyT0naxAKh39dy3HEcBe9OL7bME+sve+YJ3wmP
caDg/6DlqSgLYB7rLzN80zW7AmEemyHrpy3HqkKYx2bKxHdddK9BmMcK2eZ0
89xmIMxjqS+uvHhH5CfMY23yj74rdWcgzGNnLQfzlR1rEOaxL8wOStmHVSH7
CdEDYiHC0PrSkpAolY7qEpSylaRF4GTsgI/OcBHCvFY/lp63/mADwLx27vv7
P+LiUwDzV0/dQ0eSjnuj5r+xGe+9OgEnl+j1q7+6wMCXB1O/iHHik0nefqZr
BHwt7cnIoA8CFZOug5NfJkCj2/PQvawRcDGXV2ATkb/T9A69uD01BlpLXheT
TFgA89ybId2+vRoMhHmurjlbPKucgTDPLcw7dPj0BwbCPJe6SlCvtpTIx//j
uaZngidEjaZBYtHFwIbEfmDKUk5eWjsOxn51sf3tHgZlh7oPO3qxgHFrqkXW
8CjguaYHVHJZAPPdsqGxnM/vGQjz3QDeE5sO0hkI892JE2lHV5xioLbamaNi
xRQ4I+mUKnu6GWB+GxF6W1pqPhTZl26+bsnZCYJVfnBdXdkJJLSteh20BsGc
/OoZ1vkJ4NKWZ/U2ZQSIurqz3ItYQMVLpur5zzGgan8/aqsnC2D+W0p7sPph
IQNh/mu359ujqgQGCnnBkFw3TSHiffzA20etwARY7Hh9ZRhwqibrqxqwwPzR
QRXpxFFgt7JE5SVRvzzf8JG9AfDDvEa+FdueEfXl//jwn3UBBxBRf6pSL1Q0
KI+CfdeDxiBRH2P+y9S5PxdTRZxHpZWtKHtGQJi3M+/vCCK+Xb1CjLePgWz+
aJJMIgtcvyHRt+UhP3zGY2ltF8dAmP+GSElLZBUxEOa9rXx8FUpfPyDMe2vZ
+v/6DPahZ3KX6ev254BMh3f9XlxdqN5nSD44tBJYxteaudm3omyuda8WnteD
o2wvYjyKK5GKt9gBth2tQNd9Pjv9UwaIHnr0KMqcCXZ71+RUNrSD97tPnJoz
6AHRqww2a6AhYDLq0/EmYgA0HGn3SGKOg5zII33aliOAR7p7ndYPFhD+Zf/x
q/EYCAlzvxQWyQKjXKLFdXeJc8W9J0dXX5wA5omVu37dngQxYhe5KG5jy3x6
56fjjQeiixHm0zeSYw8kqNEQ5tPGB+4dEGqtRJhPq3A/lpEqqkaYT0tvQJNH
2BgI82nugAxoncZAmE9zX+1yc0UMhPm0/yOJ4BppBsJ8OtTztpdxTDXCfPqu
Y4FO7L1KhPm09Aar6ESp3+joZc9oEUMRmB7zJDwkNw9Z376Qs6pBBMr/u/rz
UWAimlhF3yl1RRR+Uhh1n37wAXyQ5HM52ioKz8h2qHcIFADMty8oczU+2V4D
MN924+O7eVLqH8B8e4/xk5TOugmA+fZFnWx9zYsjQC5TyoRrUhzuLVDmOjBe
AzL0Rq9kO0pAfq3dqGOoFKS4mmVbz0hAxRdfInTjMgDm3XJjl/ukzoQCMqBo
bEclgH+w9YfZ7Q4UePwWR/9rBpiicLZxZzagTZy/t4+faAeZPyQfFI7VAkON
gGL3y11ADWwSW1LuBVfPrRmQvNcHmh/UKZEnR0F0h/fmjPQhoH7G72CVFAto
kOyTq6+OgtmK0fzfNSwgw8UWqms3DvgbfYXXy7AA5u2u/q+7vEMqEObtm5ra
Pac7qxDm7XukQg9FOtUgzNub15/6ct6BgTBvH3r69cRVIn9j3v77dFpEjxcD
Yd7+7+xFkXYi/2Pe7hr/8NmK+Cr0Ys1Ip/IbYaipL9stf5iOrh6/+HdOQgTK
Bg802+wsRpjHC90ajzD/Ww8wjyfNvrAXPzgFMF/3VOl6dojhhe6vfCYvcq0T
EM8p8fNKF2A7miLja9ML3OsUrPmyiHNN35PHm74PglPupy0nAyeAF6PxlH/n
COB48HDlEToLSJikrXbvGgPGvXs1PSxZAPN6bYMfb/oPMBDm9avylwINfjMQ
5vVfvx3k2Eac/zCvZzsS4dxcU4Mwr/dxKVsl5T0NCkyfZXx50Q9OD9z8cYVz
HNCbH5efKBoGLTZ9bftdWYBblWuVWOsoSKllE/AoYAHM73UiVb5qEedXzO+Z
RjStBOJ8i/m9pIFSme05BoJhaxMb8ygwtdHFMHagCWA+n3PhucnvlhAkxslT
18hkgvDx9+VXvzDBmC1P8j/5QWBqZiOrqT4B5NSEZYY/jwB69qof2/NZ4NXz
wCuvPowB9yNpLS7eLID5vksK01Qtn4Ew3xdVKPUUTGIgza+XUhQnKLBUPvDE
xbOtQM2ENMcBh0FdeWx3JnFej4pQ7XGKHAVl0Uc6oojxPhMaWKCzhx8m3k0t
XedNnNf/x/8TyuOX9hHx1G77yUtp/Sj4cLjrYRYRv5jvs4b/lKFKBkpQWHHq
uPwI+Ftb7zwVzALmNRXaKbJjIGbcRvVlMgts7yJ/j7jDD/dsPvQzK4aBMN+f
Tfzz/V8JA2GenzO1bYg9MhLZD8U8eO89AnJ/V5m7/GKBe3Pal83jiHqie033
pmwGimy2GT0xQIHfW2M9zf79AxNna3XWeY2Cded3PmyqYgHM+5++8uKKJp5/
5xrY28o5Co418w4nEtfLQPe8yyg/dAJinGbE/vtM+6NUGucIcF53YHrGlwVS
Hl9PMlsaBW5vWnPDslgA8/5/h55JRBDnhUpv5xRQNAJmaYJM+1JiPMOk4oYr
+OFMr0N0ZDFxPnY+eUdsngL31L0tl05rBXqD4fcLckZBYLqx6fYyFjgor91L
1SfOG88Ch4WJ/TEgg1fa6/Ao4BP1fmdH7I8jbT9PcFAEYNY7iTYr4jrm/TkJ
RRUx8R8R5v3z73zW1XP2I6WlqyzxEQR4eTZKiazsQtUnRIPodyuB46Z/oNSn
FXkeT/pabVcPFL/fjLkiVoVONnl/kpRtBWSXbU+/1KSB2afOv1r0mWDg7Nua
gPB2EP3I9Gr7sR7wtzLQ/9XLIUBnNyilvRgAs8ps8Wr14yBQZyDf1WQE1Inz
Hs6JZ4EcGGutoD8G7Da73PKOIr6fIv9k780JsHQgG4ZfngCm++V1Jm9Mgrnk
ANJer7FlPyFL8dnzyhfFCPsJ+9Pto/M30hD2EyKvdUcd/1OJsJ9wbM7lj0hO
NcJ+wi15P2nx+RqE/YRd7F/2tKUwEPYThEul/mXkEOvzf35CWfDn15NyDIT9
hByfuZMXE4n7/c9PyLR/8Sz/SSXCfsJt3w9bi/b8Riq1h6ulLhL1SS5JZpaZ
h/zX5X6arROBoYkjWy5MJCLo0KUkc1kUqnCty0+LigRSR90czv4VhX5rX2o6
/c4H2G9QaorQPLqiBmC/QVGaO8qo9y/AfoPCy3XPEvomAPYb0q1Hki5ajQD+
vbvplAlxaPONf1uACAM0c/94+sGeqE+eeqVdkS8DbLW17DenJGB0yxa9nhW/
APYdIqYGpc/7hwHqe7MRsTslwKDIVmrP8w7kxx/iJHeLAWSEewZq5xoQvHDg
LZ9aOwh9XIOe3KwFcW33F1JOdYGiTm+RFO5eYBOlurRk0wd69KzWxnaMAvGJ
80Kj0UNgVq7HOIrCApJJ4i8WDUZB/0ljDioRv+W+aqY1ZuMg7flJyoW1LIB9
C2dngw8uTyoQ9i0GJwby9f9WIexb6F7N/ZxmV4Owb1HvKUyzs2Mg7FuI7d7b
rUKsZ+xb/LGaqbR8xEDYt/A7WSD36UENwr4Fw6wpNyO1CsmmGaseDhSGwsYc
iT4GdLRJwnaoVUwEbtHX7Ck6W4ywj2FjfSg5O64eYB8j6EF+6rYzUwD7FTmf
0tngG0/ESLlz6fjZTmCjswLcV+4CvK8rFB0Me8GHvyUFitEjYGz2gs3l0EHg
4h5WsfvpBNC/f39zZssISEnzmVeisYhxHe9eahkD+7NU0sJtWAD7GvQbExpG
qgyEfY2XJNbXu2UMhH2Nh5rlA3zRRH32P18jOWuzR3l9DcK+xs+P/dJ7QqcB
/ecnmt+9fkCS8RylTRCfM6j/wyt5GKTJG3yxuckCjV3fJmD9KKBMKNaQiPoA
+xsrzO3u8gQxEPY3RB5Rey4Q+R37G3GZGnqvLjDQMNse86wc4jzwazEnNqMJ
YD+jtVM/WZcWjCwjp/motUxwPfi23GY7JjC51xAiLj4IBNUnr23fMwEmulMm
pcJHgCOv+z5Toj5Sp1RuFg8ZA7xca59xPGUB7He8CGZr5c5jIOx3dKj82PU+
mYFkU+Qe7RmjwJORWkLnVFtBtP2f1n07hkFb1NrCQi0WcNFuyw0PHgVvRvlL
/CtYIOm8wGceZWL/cPYGLx4yEPY/FBJOXDf/r96VOnnJSHoUbG8+dcWQ2N+w
3zFvLR6xj/j+3Sr9uZ0yI+Db3738196wgKrnrY3t4mNge10LR0IqcX6LvO9n
eJsfrv+XuMgg5gf7HW1HBgxaSxkI+xyKp+k+GtKRSOPdaaMyjxEwGT61Qjed
BfZZ3Ny1K4YfFj0bv1eaSeyPvYo5Z/ooMGn15Ju+7/9ACdvdTafcRoGLv4HD
LaL+x76Hm7SG+Rfi+bnpXXn8CyOg4IgDdZqofx9/E6jRHOSH+td8GD9oDPTo
m/iqL9PDoIuyr+/PYxbwVRbxezk1CvzU5a87IhbAvkfA96Lwm8TvR6lI+1tn
j4CV/kf6OUpYwITn0MPs3/ww9o/1ySCi3irwEj4uPUuB0dWFfFXvW8GmkKOG
I2mj4IRIfKTVbxaYeemEOk4LQFd+0RZ7Yv8yt0hkfVcbBa+DoxyvEvkhVrtx
TZWgADzA/XlGiLiOfY+IX58WoxQ+InuD0qbP10fBp6a/3+2I+dAqHpee3kjM
V/KqRw+J7xu3UeWW6eAI+FBnm3uImN+TflaH8+NGAPrm29tGnNfsQ4O6N09S
4P25Hedv2LSCyvFXglpfR8ENpLYURay/G1Y51vePCcDrBSGaHMT9BHMXo7kU
RsGO8qfsvMTzrd2wkW7HLQBrTEL6VIn6VO7Lducpn1HQ3TappECcHwwlDQoy
9wrA/dbVlmHE3xvfDBZK5ifyn3nwz3PE/IhbPYkVXKTA2mrzZ25VrcArQ55y
1EAADnteO+VD3C9bwFRd/8QoKDqr/9iM+Lxdt547K0sIwLmZxu9pxHhg/0P3
2fy7wzujEPY/Xn7wyGvY1Lr8vuetrLQarvI/y+97Hlsvcjj5cfny+54Xtlje
PdaWtPy+Z+BqzuN29FiE/Y/jNwS7wt+VIux/hNasNb8Sy0DY/zicpugswdeM
sP+xf958/FN/K8L+x6JfT0DuYDvC/sfucEXdSxeZCPsfYfHMdC22ToT9j/Tn
1gxz4U6E/Q+FcBgv689E2P9wNe6TjvjYgbD/cUJde2lGtR1h/+Ob6tAW5cet
CPsfl5sHJl3tWxD2P4zrjPM+7WpA2P/Q0Kf85ZGoRdj/uMisj6X4VyLsf/SO
3rVUOVuy7H/43BUu8Lj0//5HapF5FId2wrL/Ma99kOsij+ey/xGWurLyUtIn
gP0PzfGjr56eSwXY/7i0XWaJJzsHYP9D/Myiu86VQoD9j2w5ze9reUoB9j8O
6jEyf0f9Btj/qKn0iEkIpwHsf3xcwWxIT6cD7H9M0lYujW+rANj/aD0/L6Ir
XgGw/7G5K7rlahAdYP9jEOw2e1tDW/Y/ilh9pCdytGX/wz0yNKrlV/my//HS
T0zHjIO27H98499yy3uUvux/HAhXqI7cVr3sf7CbxjX2bqtb9j/CT1xYI1nX
uOx/sPmRdwafaV32P6bvaDveONGx7H8I0C9025p0LfsfZ6s3M7/X9S77H2e3
Du9glxtc9j88F2iag+YjAPsf8lqMRfuVzcu+xuxmvSMW3vUI+xpvm4MeR6z5
h7CvMf7wxj5rjnaEfQ2HNRbKOpkdCPsajUOHQHkOE2Ffg0sN7Xi3shO5Pit3
2mIxA/SGIxr+tjGRFsfltnf2c0AYfJ1PlGcittL7UWvdF4B0s+6sxVw74jQO
s6IHL4H18czLNlZty77GgHPLhiGFfIB9jc93e1xrTxcD7GvEB5t8vnejDGBf
o4xr+mJpVjnAvoZf2L2IJHU6wL4Gj7y/KuCuANjXGNB9UaSnXAGwr5FpCaBq
Gx1gX2NHhdbVkX10gH2NOYp64GZn2rKvsfKX2KxM6//7GlpDgab0nPJlXyNO
XTvA7S1t2dfIuFZlvCGyctnXQAd0q5+RGQC/jxoXtDJdyap+2ccoVf2reXFq
CGAfQ5T2ru/p3r/L/oSpyX595ag6hP2JpnfKX/Z+aEHYnxh+4lx4624bwv5E
SNK1AG3DDoT9ifvp5V92BDAR9ic8J4Vnrol0Ipkyx/bjrdOAPdYzK22BiTJ9
hn/ljc2ChNrZznxjJlL8e9kybWIePF09HvjrTAc6c08pv52yBLh9D54KZLQt
+xOZ4QUK2fO5APsTLrP9F9JMigD2J/YWxfK655UC7E9kd6rEHttbDrA/4ajU
qls/SQPYnxjka+UsYdIB9ico6rZpGrsqAPYnAkJvlwUu0gH2J6oLf4n9vE4H
2J94r9PWnvSRtuxPQOd3ijcWypf9iVdrqjjTU8uX/Yno3AMK51Rpy/6EhR65
/fBSxbI/ITV86tlmkRqA348V3faKbUjjz7IfsUZGan0839Cyz8B+R9nxmkYr
wj5Dmi9v8H33doR9Bg7j/IkBYSZSsJHVN+1lgSBNlX3WnUwUk+pQJ90yBS5d
GpBRJNZXrY48F+/QDFjH8ezl7iwmYrjRuZ2H5gDtdWj+7p6OZZ/h5VGBWx9U
SgD2GXJOr9RQE/4NsM/wIODI5fu7aAD7DCuultx58YAOsM8g+iPRxVO2AmCf
oVDpcnDJpgrwYvuVjTbJIpDTf6F4IJsOzpTYXfLPFIViQpcWBI/RAMeg8OfR
fRQ4WXlBlFFaDrD/8GfK6Q13Q/my/0BVSmAyt9ABfh/3efvh2q+GVcs+RITO
cF15+zDAPoRfYqhF35F/y/5C2GuT0JKYWoT9hbd8BaKvG5oR9he+9SZaW+1q
Q9hf4Nu5eu8q+Q6E/YUd90Og8G0mwv7Ckzf+zZM8nWi4p3BlE1EnnH7rR1Ij
d6JbtD2b637OgkGZEzzaLkxU0qNz/EHCPBjrGW5lv9uB3PzmhgcqF8HbbX5T
puT2ZX+h6VHqrZ2XcwH2F7Z1tdwtby8E2F8YONw+ZWhRCrC/oP8iMkB75DfA
/sLJngi5H+U0gP2Fe2nDoa6VdID9hXPhSfvpO4n97H/+wtix3DxFPmJ+/ucv
2L36cHTxPh1gf0F431D901+0ZX8BFq9lnBOkLfsLxx/Py6inlS/7C4cPVR7b
JE1b9hcMPNqnHjlULPsLP7IfXKkNrQb4feCpQbu55NS6ZT8hbrHZovb14LJP
UKRrQVev/4ewT3Al91DP6UPtCPsEf66W1csT8fsye5i28JUFWjVGMs8zmOi9
kGww6/0U0PvSmO4s1Ym+2LruD4mZAaOfjr17X8lEftniN5/EzwE2/1/f9pOZ
yz7B1XjhEa7CYoB9ApHKFYqmuWUA+wQ/PU8FG8yVA+wTiCl5Gbqb0gH2CYbk
59Q8KRUA+wSGiZkPJHZUgPmWu87Jn0Rgw+yGyM/EfCQ6Kp2LjhWFFP6mzZnG
NFB4wdfh4hYK/D40UbeCUQ6wfyAUYe7ZVVa+7B+UZzBngxppAL9/PMR+r81k
rnLZR4hd5d0ubTu87BMM/S4YuvS8AxleC8hS3MoCJ8bLj+fGMNFjdEv2y9op
EMN7nDtIvBOd+Lb6W8a6GbBbavFW/wgTSbaeU6RwCUNBk8tvtsrSwZYV6jtp
XsLw+unekIRJOlh7fLXHEIcIXO16qf86kU/r9yeJaD0WgRnaXLP+I3TivOFO
3sxHgQyTb4Mzg+WAP0tFrO0pBd5Sq1W9l1EOsJ8w+JFWMHCFBvD7y76/jlZu
1q4EJSu1/5ZtmgQ9fMpHBCeYKOVyIUVj1TSQ4xzvqRbrRCsUa2iuSrOgq/Ja
2I8vxHWK8aCFBhHvz7WtWeF0oKp0I6o9Rxh23mas0t5YAfQSP909eVQETtxA
uvfkKgC4/7bR5xgF7tE9k5WWS4zv//yFnqMvD9j3lwP8/vPpHN+Di970ZZ+h
SflfjJLCCMA+Q8lMieaK8n/L/oHN/M5CJYVahP2Df5pt4sJOzQj7B2uV+Q3+
Crch7B/M6lk9O8vbgbB/cCHZ7JCPJRNh/yCdu9rKkqsTXXC5sWvdnWnwrf60
cyh/J9Ibbvp3OXAWzBiQrts+ZCKq3dFfln7zQNl9fxG3fwfye2PC7Ri/CO6J
qn74s6Z92T9IG2nyERHKBdg/2JHeHO/xoRBg/yDu20fnD3tLAfYPmiftcxbK
fgPsH9x5On/ieQoNYP9AbP3EG8tCOsD+Aen4S1qcInE++p9/oLf9wolR4QqA
/QODwiv6p57TAfYPxhyGRZ8X05b9gz0SClWaErRl/+DApzaFxPTyZf+gWGid
fBaRf7B/UKEqWldMrC/sHxRqGtUHmlYD/P61sclYuIlj3bJfQLY2V+4zGFz2
AdR7fKKT3P8h7APcFmHd27W2HWEf4Jb5kFpYdQcqsKj3Oe7LAgv3nji0lTFR
kNrN2TaPKfCQVcOuTeQX4YW1F9qfzIDZp0yHhw1MZN2asUXUfw6oCw9wxEgw
l30AwetWKq1PiwH2AXyVtSxqgsoA9gEWOidylprLAfYBagf2OI2cpQPsA5ju
a4jcJFABsA9Ae1Ke6KpUAX4m+0o3hokQ9Tftg3gDHbQWB5xOihKFKbsvSbZY
EechQc3zz9dSYKyAmXwdsZ9if6DCMfKpUWH5sj+QzHKYMkqlAfy+9+rUDWfv
0SqXfYLdqlzbDuwcXvYBzKjt59Nv/tf/vOPqzscCW+f5c0vfM5Fnf7nHqxVT
YK71TrgGtRMlqZYWcXDMAGvJgzkhU8T5/qeV0ulZIdh8NKiwiZcOLI3mH/De
EYYPvuadJA/RwX53O+Q1KwzbQi98jCDyywtqXprNPRH4enHyRfYUHSh07Ru6
tIIC+6OPDT5glYOyE497rR9QIL97FF8csR9hv6DRRj/F8CQN4PfF/XY3rwrc
UAlm83aFSPBMAlnT1ad5B5ko4ekqZ8X5KRASVdafL9GJbNDd3lyhWfBY2kk/
9QcTqQtknXPfLwxz9tWflgigA5enmydXpwtDq+grVxTWVQA75kRm6wER+EYz
zLptfQWQ26OXk3WIAhuyQ2XvE+OL/QPHDCAb11YO8Pvmwyts61rO05d9hJd5
S5U0wRFw87Cruk3hJGCvXifAEuhEjy9KLwZkT4OTXPdmD6/oREwRh42PrIVh
rqKR1lAjER8d/PBbrzAsG9b4padSATSsNgfcd6TAnE+lL98S51PsH7jkXWr+
voUGjMVIoomlLFB6+SWnYgsTRXUU7+HJngLjqy9bihPxPAHeB4d8FYahW1qi
NFdWgA/HXx3g2SYCZVYG9ikqVADmB9rTDTspcF9Kz6pYejkwHA8d3pJC7FfK
A44OVcR8/O999SCzK8dWsxP18iu5rIxDU+Ada5PKZclORJaoPGjAJwJVflVS
PhPPe2p7B9QPpEDp1gl5JaIe25n3SiFFggr3hFaemXOjgTf2pmvvaU0C94wc
UZdZor5QvvHjvOo0WNW8Z7sxpRPN1yWd+VQiDB36T5kzt1QA1Xv6+9N0RGBe
3oW9H1ZVAOPfjRPnTlOguLi0tWd2OTBP03+/9IcCL2jFbTw3WQ6w72BzUy70
5bERgH0HCTeD8zdJrct+AtfnRBv7AQbCfkKG7iyfOmhG2E8oj4ilnV9sRdhP
4FBkb103346wn1DDmn1FusJE2E/YvYG9tI+jE/FDjcOa16eByanosEDBTqTO
tv1X1MNZkGy/d4WeLxNlKOY5GbrPg/SNwvOtwR0oSOrVy6T3i6D3I/eo4/b2
ZT+hfPyGX0xXDsB+wpOME5ErvAoB9hNMFh2M5uRKAfYTIuS8hNnTfgPsJyi+
/cK1+xsNYD+BNc7H9QnRAfYTXPj4ZkyJfIv9BCFrKPSdOO9gP8HzIJ2njVgf
2E+wSf978SWNtuwn7PKYvfF3FW3ZT+D1ituaQJwHsJ/QKAPUb5Bpy35CTgJZ
aA+xf2A/4Sj/mlOjWtUAv39fuTVSkUe3btk/KNGWN3Y+MLjsC+xPvbm/6dQ/
hH0BKZedK81F2xH2BViRcQ5+xR3IKLO8296NBXZy56O+QiZ6fXr11gv2U+Cs
OFWbi1gPBQVTZtwuMyC72XhrPrFeDEb5uc97zoGPOWPZqquZy76An9v521N2
xQD7AgsfrZ4eelgGsC9w8NQBQU9aOcC+QEFcmZvlCTrAvoASOehQEU8FwL5A
fI3qcRfivO4XKWI/ECwC39233Lqzhcg/jvmnMiJEIRczX+HeDRp4a7Xh+BdZ
Ir6fpCb0E/sH9gsCHa/CqbzyZb+gbXPsE7YvNIDf969PuwXkUiuXfQOL78VJ
v6nDy76AWp7rQ2nLDrTxyo0/H+cmgFCBB/VlEBO5s7sk8ExMgqmmKM4u0U5k
yfGeIT86Dc69zF/6RaxPRmxJsPmYEFz5+czLETY68PZtUNh8m6jHZVLBnV46
KBV/8+/kpDBcatnD84jI79fZjvF7uIlALfZTeSpzdCBzSLLt1pIoTFe+l2o7
Uw42UeLPKnlQoLyaS6gkkd+xfxBh1q3TpU4D+P8LOCaVtMVctBK8ktgyfWCG
BdavVN2n08tE3yOLPn0emAKfrnkk+BL5R8779FTn4gy4sjf4FymNici+AzxP
9grDNAGjnz2+dPA2jTv8YLIwLI5LHuomzotz7tItMftEYGO/VDxTvgKIBOz8
+ecABT7JnAwLLibq///5CTH7w3z3tJQD/P8NbF+18cccpC/7CgUObT5SbCPA
4eJ6p/bkSVBipjFIIs5zqmtG+VK/T4NPwzMy1cR5bwXQqfxoIQxDzk1bFNfS
wcJdFRPnTmL/uS3tFKVcAT4qnpk/akeBce0aVTVEfsd+wpZpozOa64j9zmru
xp90FqgeVA34U89EkTOOlh5xU6DaVoP9PBHPFNs76umfhOGhH7XNzuIVYAcz
w6hmE1H/7Y0OTtpWARgL3+6B7RS4Rq71nBaRzzMyCi+OJFKgBMzazUfke/z/
FTz2XevqNEgDPl9/DyrunAKNLwYoz4n983XClPF6kggM+7+i7jwequ//A7hd
C2IsM0SllZIkSaXOESKFNhWlhRJJ2bKlSCqRLEm2lCVLVEKS4kpC9hn7Pox1
yL5E5He+j8fnnt/nv3kUc++595zzPn2ej9c7RGm3FHq+76eWp6wMFIUVtH8d
OV/LQUfLytIfomJwVvLLFt4bFWDbzzOe8WrTICiv8uIpVB98OSTFqtj8B8zn
8IwlofphJU/w3x+FwtAtX6FGXr4KFFPvnvPSE4EBXFo7V6+qAgYbv/Td1BeF
D+/77lmWXw5+engs+VkjCl+UCNfnjpYD0kO8GTfb2LVnFFg/cKutDJ0GVSuP
fP3O30PEp0VsWvT7Axhsw8d3l/UQ1LT7r5e2CcNMXrlSOqqvLhJx1fQropA4
pOfTid6/yA2/flkHzADf48K29mg8D1GXRV9dIwIl5padMEb1r9MhquLtZFHo
LOl5iKukHNyvkzWUEZ0BZZ+s2R7o/PKBdfBV9j9hGNCRWfsCjY+1t6lHwiP0
PKn9Wm6o3t29QoG3Y7kY5OdbmZdxqgJk3LLVyln+B1yy7h9vQec14/NH9Dlz
heHJM3eXGGyoAkqttyritEXhks0dmn4/ygHrUM/qzt/C8JClqHkH2l97Yzjk
vjmJwoFF6eNP0fuSWCHN/6xiBiTtUhfJlOwhAu7ceqJ1bAZsG6p9JIQ+u99J
WhW4QgRmOHHThdDPj1rk1AeGicLy74e5utD+mSdTeK/z0B8Ql5HwY1ykh2hN
bkh+WC4MN6TzCd5B9YGN7TynuhG6HpPIfyvRfk56i2NLXDngmVFAeovRJb8+
y9GY2EdweOU/sy+vJUgfEVCmdkRtQytB+oglk9WHeKaYBOkjlLedF5qd7CJI
H5H2yWPjLtNugvQRW95uORbN2UP0xinqNV36A0JdJN28VvQQOUsa5Ird58DX
HUeb1P27CUEKR3Wt4zzQTVMa/xHNIqLOKTQYhf4Dr78IcH9R6cI+Qs+W0+US
Ix+QPgL0TG5Ps/sJSB/xNLRATVz8FyB9xHsVC3eb92WA9BG1Qeqyrm8qAOkj
4l+evpL5rRKQPqLxutOVj4pov/vPR6Q+93/HKV4FSB9xaumDmbjnlYD0EUr8
tG0h1RXYR8xvXdertKoC+wiTd10bNdB8I30EZ6x64yXeCuwjXHs+cfzgqMI+
Qkf1Cg/YywBk/kPV1P7b4/vrsX/Yf/my0lfF39grbPlqzV+q1kGQXmFdVALt
xrIugvQKw7nhXpPfWcTb3iIJb/spkP+c2/nij24ipNVR85nlDKi88NK/Fr1v
0XJd18NuzoLEmXaLuo5ugj77ycHV5S8IX8MfOLu2G3uFd/xZr20uFgPSK/Re
+ban17UUkF5hJH1zaAqqt0mvMBh6XEBMpxKQXiHj6/pT/EuqAOkVXmVq0dlo
f3Wn1oVPvRCBX2pnktU6KkFhcYtBbjQFHj61/tVx+wog/CJEM1NaFKrYvdG5
147m13++IWPFWpWW7+XYN1QkXniw9lUFIPMmnqssnpVIrcbe4WuEYySFb+T/
vcI506NfL7EIRz8rvs8Tk0DYaMT5yvNuwv1JRYnW0DQwYC7ekEf76wELn5bs
/j8gNad4bP98NxEh/0ffbngFvHmDLsb+WwEkZHXvqd1C871y7trGvkoQyEoe
2T4pDD/LPnS3QuvLGScBVR8XEch7oz2wb74ShN541Hx/gQL/sQx9rP+Wg0an
H0vE7qB6WKFtfRdaH0j/ECUfInVvPzoP/pdXUceK/DW9pBowNdZvOjY2BZqk
FcIu9XUTqQrSeZ3dM8D/ztGQTrS/zrH3/nOengXnRezOxuWg87Auz2V/VWHY
IGJko/GoEmw0vDWhn4HOs+qRL7JXV4ECPaXfAbtEYOlFzefNm6qALxGT2r1X
FC5d6hmfjtZP0kfkTC9el2gpB2TehcS/+JL6nZXYS1jIZsvfGxsBtt2ufjLv
p4FwFUcP9/IeQuxBC+XQmz9gYKhDfTla74Prvq3PuCIMKWdDzTbUoOd9SNfW
hIXmY8VTqf1ofz0eYvFR/roofKe39icPWu9JH9HkdHno/eoKoBUyFc3+OAWE
Z2ueR9V3E6+9SzxzEmZArndO5DW0H8Rys0NL4oThjZc5votiVWA6rdIme6MI
NGC8V7iG5veRLStdjiiIwvuyibtiGeXAalWzUM0HUahvte+rbXk5IPMyhL7U
zwyyKoCPiizf9c0zQOV63ZAE2l/P3Vl+cymvCKTdWMqng56vqfGai//80fq+
wthSHM33rP6OsFIRtH+8Xrux7WoFcB85/uGz0jQY+rBz7eepbiK79ubfJev+
gCWnHy85gPajtxEcR2sKhKFr2X0CyKF6szvo+lVdEZjXJPTgOHo+RSfkOt0P
i0LJ++6jrWh/dWQ9y02ko/OkjhhLcBjNt/88BmPk1RLfHaPgmnD10NIAtP7G
+kaE8/UQd8UeKAbd/wP8AvpUgtHzaHd/kTbcLAy3HpiX1Ub7q/C67AeZ5qLQ
itvgkiba/yLSVnUlPJoB791jFs3/9+8r3TLvj6wSgYbfmz79RvvrxndbWKaJ
ojBXv355UlE58LrofPXM8hlw5RQrtRfVC05pJh9ezgvDjzOw8H//fiDVb6fy
+IEo3K/eDATR7xeWHq3pWSoGVWOMPK2PVYB0jqJzU9x/gGfwO9GTaHz7J3Ni
hL+i+tS0x1cDneeTlvYUpWmKQuW1H+n3CsvBW4nZbUWDqJ4VN86LRvvjc17x
tmhHUTh4rtrrCZo/CWfsV1f+nAHuOo72A2h9e7qkLN7j0Awojru/8yuaHwf0
vineEkTrjenX6vPo51+XVvo5hIrCmM2Dylxof81NkoyQPvAHHFXI8ktF8/86
PPjveakwzDX8NpG5Be3nL63/6p4Qhd+/ed/53/+/JL2HvM6Osf6jaPwliOrs
emEob7f5hxAarxts5ojrBVF4JZGrajM6b4UW/aLIuMyAav8r9lvR+Ebd0a6U
kBKBRh6b1RfQ8+DS86q6+kcYcq8Dlv+rT1w/REQb3EP7ecjk43NoPryXsPO3
npwBm860Om1B96OatuZoYJ8w/HFI6ignup/J8n06l21F4dmQrIsf0HjE3pA5
qpU1A6qCcob3oO/zXeVUN7V7BsRveesxh8a7ksUyAEtFYH+ub0A3+vl/QTNT
asGiUDFKIv/Gt3Lw8WzAypGropDC0ZTrh74/KsLho9KLGXAmwey0C/p9/RI7
Amo4RKBLt237/84T39YcKv3xWBReNVqzewo9b+k79BXzI8JwJlgpQwL9uer+
IfsmF1FYXMu56iW6vqQDxcOn62ZA1upZXSf0vALHVzsuNZ4B2S67thmjz1lp
IUIpIiLwbMOl1VlofSA9SVnnnZLQC6OA9CSvJ/Q20zpnsCdp0woRGYidxp6k
sLbHPaR9EnuShPMvTbpnx7EniWmM/72LewzniWjarTbu6v2N80TUxCeG9gex
cZ7IxLftG7MK+3CeiPFqhzUezB6cJ9JOL7dZTnTjPJGVFslch/i7cZ5IxYL1
nFYKC+eJ7DvwZFusKwvnibzR5zSlHWXhPBHeU57hXdIsnCdyA9QaZxZ24TyR
/GenGopgF84Tee8htPlBWCfOE+EePCcZl8bEeSKZamtHtUw6cJ5I+cEm/991
rThPZENevPcwtRmQnuTs2TgJidMNgPQkpoNRNqPbagHpSe6nhw2tXk0HpCcR
f63NTxMux57k9KnAh9lqP7En+bR0xLrROxd7kjNt1xLi2e+xJwk/HsH+E30b
e5I+Na9Iga9vcJ7Ic9qC2hlqNs4TOXH3irNe73ecJ1L3AcafVC7GeSKlXH7u
mprlOE+kJafhwDHhapwnMnWax+G8D50gPcl3vhMX9NczCNKTJMsPZFJr6QTp
SR6smO4vUKkmSE/i/WmsiyM5lyA9ifu8Q8oK33DsSe6WbRU7nE9gT5LZZqB7
GJRgT1KiLu85e7YSexID7Xv3On9XY0+SUnQr162Wjj3J3Tg9lYeSDOxJTLgU
OAWa6NiT+C4Wld7fSMeeZK3vylcG6JxB5olQFr89v182hfNBtnX8cc3aNIS9
CdxH/50nOIDzQaKmbV7pfunF+SCJwO7h5/09OB+kOvBk32GjbpwPslrMXXs5
g4XzQY75dQ0ZB7AA6U1KI4fvyV5hAdKbyCyRj9+8mwVIb7Jdb85lcaoLkN5k
N49LbaNPFwhZ/008u4oDNp7341Qe7wQRBXYxorWc0EmO8bhxcycQezzSMNvE
BZk54ZolO5jYj2RtkOWUqPuF8z78dnTpxBytxHkfA44fawS6q3HeB1+b23rO
MTpB+pGM+48sbKQZBOlHXOu9U5aq0AnSj6ynUGpWG/0iSD9y6KDZLmmjeIL0
I4t8frIPNmRiP3L+yZnLf20KAZln/oLHZlr/TRno2dKbmZYuAQMtpyeWKVTj
fBCWhYrZtDMd54Mc6FjW8Hg5A+eDdHz42xnEx8AeJfoq+4yfHx17lHlNEYfw
lzOAzAeh7Ax8uGfPNM77iNCkhIRw/cZehVpm7aFbMoDzPugzNT1Gan047+OE
B+enpX49OO/j/N51hfoPu3HeR6fhY+WXbBbO+5g1TqUbRLEA6VXG1qrPqt1k
AdKr1BkUSW3RZgHSq8QKHsuLXcYCpFdpfmUSfyCpC8Qb33bRDkLr3bem4Xap
LvAor8HlTCAnZGUe8dUx7wTsZL2e7xFc8EvAPytXByb2J2rfHOJ+Pi7B+R37
C4N+SB6rwPkdl8rv2H3yqMb5HXVhibVTBXSC9Cdexsd4/25iEKQ/ceh82K8T
QCdIf5Lz5J6XsXIVQfqT1Asl1jHeGQTpTzqy/Vm7VqZgf5KhcGNxARQAMp+9
rtZdP2hpKWi9qjQ2EywBmxrnts9ZVeG8j9uDb/n+qNFx3kdq8BqNB1N0nPcx
kUb3eSXKwJ7F8+68/sNPdED74ab52/8zCLbNoFgvTOM8j1pr4YdTp/4/zyOl
5d+Zvkv92L/EC0LdwYO9OM/jV3ne099z3TjPo2+/Iqfalm5A+pcAh9h8Wi4L
kP7Fb6zGcvQ+C5D+5a/Fr+geExYg/Us0t8JVxhYWqM6IYz7h/QfG8pjr89u7
QHM0z5K2FRzwbGLOrQsWXdiv6Lz9OV8Lq4h6n8ePhPZS4MnKIm4/dTpBehbt
oCv62SIMgvQsLgUrfQs5GDjP43X57gGu79UE6VnK69aq/Ov6QZCepTcN+NYU
uxBkvrzB2bvygTtyAJkvX3fPVpF1vQic1C+t1DomAQ/9u3t+v3gFGB6JdLFi
SMAfThmvBUOqQZ7z5hc2huj5NPX9C0qhA5fjxzrzaqhQmupQdZjKAJaUna9H
TtCgm83hyM7x//czFetSLD6epWM/cylFh98nfwaQeSKZDDHm+ZvTOB9k6ppc
VqjDb+xrNljHlS9sZuN8EDufsM8M9z6cD2J72DQyNLMH54M4CjrLJsV043wQ
Lo7fzyz+sHA+SH9biJxXHAuQvuZtkXHkWUcWIH0N9XixWL4eC5C+JsqpZfdy
MTTf//M1g8IHyxqzuoDCZLO8gD0HbPJYobJFsQvc/ebb7XaDE4Zkn9fWv9sJ
Tu75M7jhNhe83fzK8mIwE3sZ/3fpHfc6inHeh8SA0Mv+snKc9zG975LHmUPV
OO9jRVDP922JdIL0MrWnd2z8h+Yr6WXWlltZWGbSCdLLyPWV7PCurSJIL/PP
qywoxD2bIL1Mc79E3SaJeOxlyg0eGt+W+A7I/PySM09sbTb/Ag0PjAJW3peA
KYJSAmLo/E/mg8S/L3vyV4yO80EaJwp1bHrpOB8ktitfwhO9D6S/satNuCxb
Qgf/tFXyRl9noH0xShjIzeD8j028X+5x5Q3i/I9jlzMb/n7qx16nJSxdLeBu
L87/ELR8ale2sgfnf1zPfNRnC7oB6XXqnlfYbyhmAdLrKB/U7XB7zAKk1yl3
5aKuuMgCpNdZAta8fqfMApZ5wQWnvy+A4fPXfbLYXaBVv0a9sHUR2PJw7lp0
7sLe5uKeKwFZpZXE34HKdN7NFDhvOtRfI0InSH/TGVHJLcbNIEh/4xRUHvRW
mIHzP7ScTvY8X6gmSH/z4nXLnU0BRQTpb9baqRU7iL4gyPx/s9ZSjd37PgMy
/z/+/YsHmxx+AvG19q90oAQkXIY3PjcrB2zB7xL+BRIwhEkt67hUDWRO8y3p
BFS452XViQ3P6OAp69Q2ZgEVUjXcaIkUBsge+vx1uxYN5tspcj1coGPvE9Hz
yeyYIx3niThMLc37ad7z/3kin5wMu653A9L/7NWtFWhuY4GwGtuHv9UW0Hr7
42AMBwtopxovneRH7++fYTvDDLQ+FWcdbHxCgVyTVXvDW+gE6XlM9qnckEf1
KOl5eLjApN9lOs4bkdk/9KVlZznBPLT8RG2sBDR+nb2mr7sKtIjnDRSvocI4
Gf3vw8Z08I3XrGxtDBXeuG34r4WTAUxicsc/rafBUEX1A1OCDNDW+mjVuiQa
rMxr6NOPoYOPm7TOUY9QoGTOg2Eq+r5xmVRzl3IKzOXQv1SL6iHS82hf9Kp5
OUTHeSQ+ZRdTZe9WE+fDDDbOnafCc7JZO49/pwOz74efveymwro+/W9PUf1K
U0v3fmdOg9ZPnbsy0PwgvU+3/C7Pbxp07H0IfsGaVfQZQOaXcDfyDpx5PI3z
SFpD4cBU6m/sgba8vLbhvSkb55GcN1n+5tTrPpxHcrNL8OD+0h6cRxJbPMlP
TevGeSRiQy1OGYssnEdSrlDz9mgiC5AeiKtTymrWiQVID5R2dt09B30WID2Q
r1GQnw8NzZ//PJCip3ZiW24XsP3u63XTjAMeWDbJG7CrC7juvSz1xJQTntJP
4r/v1wl8uQxHTltzweuOiXahMUzse6qD3vocfFyM80XqeHqCuXzKcb7In4cj
n+W2VuN8kRvyvoKbwugE6XtaxySiIjYyCNL37H+YkDJYSCdI35NjU2MO0HmI
9D15fLu4pQW+EqTvSXAUOq3p/Br7ntSteb9H3fMB2V9BdHP/zKWsElArZnl+
620JeCPZZUlQbCXOI+Fw5vtWw0nHeSTBR5xnq9voOI9EMVboIUFjYC808mjX
dEU1HdjzB922f/sRQP+285z7ZnDeSPtIm9fj8UGcNxKZaXr7amc/9kU9iWq/
HkX24rwRBbnPjv8UenDeyAvu20Fyet2A9EVLWKMy7uVofv7ni46FwvHzT1iA
9EUZjQ9ORZixAOmLLtStsprZyQKZmr479r1aAFFZHfq2o11g1EjtxKGvi8Dd
3S3J27ML+6BHN3rj5Z5WEk8j7HTvyVKg+rXcgqN/qwnSC8n8Fa90mqMTpBea
yXsWKURl4LyRBytMiUBJOkF6oQ6XL8XNw8UE6YUyzdYOFxa/Isj+EJmaicGR
nz4Bsj8E2z42mGe8EDgJFPH/2iUBP099DdfjLQf9UTU90TkSMPJF7oy1TjUo
P+iYL6VGhctfaPn2PaADqVTjetscKtwf1sRrtYIBmMauv46r0+C+1oFZwMXA
PkmE0FCS9qTj/BK1zuay1c492CvxfrhYfta1G5BeSW9i5eLKbhboPmM5w5BY
AKkNweGfeFmg8dx89M1FEViY/P5aa3g1ES1N0+z2pkC5wKYL76roBOmPPPsE
CvzR+0z6o5Irwstfu9FxvsmuHa5/gtIqiPZGmbW9ERKwYrRe5npSFfDlVYjl
lET3Z9j8jnGIDnQqL9tnhFFh0whNg3+eDryEPDgapGnwOU9qMJcIA7wvjqsz
fkWDn/odg6NQPafV2DsWrEmB3wsPu2cfpRNrHQQvehdSYI3n5n/Z6HmR/mjp
Eflte2foOP9ESI3gvvC6mhDy+da+4zQVTvAUmxRl0cHvxwZ7FFup0PJmlWQ2
ev/hG4fgyrM0eJPPZ3puiI59ktkdfg+mAaoPipr3zjtS4FmF3Ym3PtGJkWMZ
XwonKHBC/kKWoxyDIP3R8OrL/T6xdJx/4mpXmOz3oIowvXAtv/YRFfo4fJ88
PozOE/2c0pKCNLjhV4VwqTgDeMlUn4nKpMDiJbSQumUMgvRGz9fE5u5byiBu
XA0zTNRB8/Xkuifpr+iAe+VJH8MyKjzpHUzRQT8f6DH9TvgIDda8DB688ocO
rrnlr52iiEK9nF13S9cwCKV9F9YHJ1Nh0QYrLz5+BlBWme8OUUDnlfBLKa7L
GKCgRO/q9VoKPGXft8gnyyBIP2Th0fKyn0kn6v/oDgn8psKF5pB7DLR/kH5I
rzTRX0eFjv1QmLeS77amGUDmpThsnLypGDqN808i392rav71G/sibsWtCSbO
bJx/EuT1tO5aeh/OP9H8sNvqcF0Pzj8Z12Ke8vzcjfNPfjZrcN7i7sb5J24O
kbPaySxA+qLKEjf9Iy4sQPoia90DH4oNWID0RcmXXrO/SKH15z9fdPJx/jeD
712AktSlGGPCASmTwteV1LvA9NzRT2JGnHDhmXvAsuBOEG8xN2przgVteX2n
ZZOZ2AuJBOlt6TYtxnkmBo0xg7lXynGeydETdoX0VdU4z+Tn57tPTQLpBOmF
lpx7vhi4gUGQXqitcNuh1HI6QXqhsn27BdLWVhOkF5rfp1DdfuYbQXqh2f5z
hls0XmIv9Llbd9WkYj4g+3U4aKt/V7tdAk6cG9NWdZaA5ut3G/h4VOL8E8Wl
x6QnZ6px/kmf0oT+viY6zj8pmrWRVEbPn/RHEWr6k3O1dKBgCUx2fEgDgaU8
nao6MzjfxEo+9+5ywSGcb/L6xLu8WzP92CsVGUwsGLztxfkmmRwdoqU7e3C+
ydnIxyGpht2A9EobAr081KtYgPRK6kZ3nZr8WYD0SuncpSfazVmA9EqBvczi
Z7vQZz6+oW1PF8D2gWT5fRNdYK7pWrvf20UwCca6Mr27sDfyLHNk3r9ZSTSM
HxAFMhT413QmrWikmiD9UfxoSm39FJ0g/dEP4W227ZIMnG+yZdlqiYWNdIL0
Rx5DruvkY0oI0h9teqFlFioZS5D9RsQyysNihjMB2W+E5vPAyjStECRwjn59
vEMCet47uTOurgxYdJ+rSMySgB9O9B9v2l0N4venRO1SocIuzq6nvB50cFG4
RX53FhWWHgku8Ef1pKOwyVFzNRpMOOIr7MTDwN7J+4TV2Q60v5B5KZMcN6K5
7vVg//Tm0l/vnx7dgPRPq3b3+p3sYwHfld0ffvIugNerF7i2L2EB2U8VVlv/
ikCFyD9qHU+qCdViXQ22JwWOpcW1XftFJ0jP9IRYImiOzoOkZ5ro2bNF9gEd
56kY5ofcCbKtJEzXJC4dCZWAllSj2/aPq4DZgtndVeJU+FQwwPgOqkefKPf+
vB1Chbf1Vki1ovVN4ueFR300GoyROLjnAjovUHO3b5+KoMH701dVotPowF8p
+9tRQIESfLY6Xw/SiRyZ/ed98ynQvG9Msk6MQZCeacR0/eq183Sct6L85WUR
K62a6PWYyDl6ggoDd+laaHykA+XhKv/pBjQfLuvUi6H9ovbsScmO0zRoa7Dx
1twIHXunQ/lTzieM6CDUbvkeLjsKtFT8p279nk4wU4NS20coUK/7r8ZptF+Q
nim2oudefAod563ceFBnZPmuioj9MSj68j4Vam5NzHVi04HFq65Y+aU0aH79
4M8MCQaQKuE4HZtGgYe4cxyE+RkE6ZekiW+u4oIMtP5UbSnUpMJR78N198Lp
QNejroVaTIVpSa3Jy8TQ+Ve1QUVWlwbTeyyjuP7SgUldtPiKFaIw3NHBK3wt
g3CKYTqbvKHCby97Tj1E708Ru9X6jRwNamufX6UtgM4vDrev2FdToGJFHcfy
1QyC9EhOCfftenvphLRpKajrR/vr0O+KArRekB7pyT0lboG9aL8wMwim9KPx
SRgus0Lvx1OB+DQ9ThoM2v+9QBGNb1aG5WWHjaLwT7Cm84Iouj+dRq+kPCpM
viDOJY3qA3W/s38P8ItC5oqhdDe0XnJdY60ajKJC+hp7Kv8iHQyfjnYtWkOD
spYetY9R/eRb0nrpbgkF8r6MCTSXYhBJGyp6rzCpcIzz4sROdH3/pmuL3s5Q
4B8+R6lT6PmQ+SsC3x40D52rIvYryz5fIkKDe3oZe3+g8cvLYqg8qqLCjzkL
KefQ83Bd3bWtRUIUSoquGP26ikFsXiVlZdFIgcoXt44Uo/EMDCkO0xqjwoG7
L5Ty0PeRPghkL7t8cysd+6CjG1275dpmAJnHontSY31A1DTOV8ks33nYpPE3
9kPniv/Ua3uzcb5KJFsu9PHXPpyv8vUtw4bZ3IPzVVJ9amM1vnbjfJVDFbrv
z/F243yVdZ/qgNZbFiD9kN1QbfM02j9JP1SRnelga8gCpB9yGew1qlrJAqQf
+tatOsv1owuYRQrx5pzigBtqeznu7O8Cn0yKuZqOckITmwK3Q887QTqt2u7O
BS5IX02vZaUysQfSPh7Eu1a3GOel+Jl/uvLoZDnOS0kWefYhlFqN81La3t65
YfaETpAeaOdnU6tpdF4nPZD8I4fI69V0gvRAJWK18j+3VBOkB9LrF7S9z5FL
kB5oL6HNqLeIxB6osnTHhkT+fED2g3nPeyrexLQEUDiyvuy5JQEDNAK+0G0q
cb6KC/W0yth4Nc5XWWo91N9ZT8f5KnD81twF9PxJX0RorP/H10AHPmGhv55t
TwO5bTOeB4/M4PyU8O8m3WelhnB+yuyLp7PBXAPYI3ldML/982Mvzk/pPV7u
r76nB+enrPaOq3A53g1Ij2S28jYltpoFSI/kxewbCXvKAqRHaqm+xOl5mQVI
j+SesrP7ghoLvOvT1E1+sABCLPfFvJrsAosredZvjV0E29IPXy552IU90ecX
mw5KXawk5qNT/sispMDa4TOfRgaqCdIXBSsufWc/QSdIX3TpoQCH4koGzk8J
MR3WD9hKJ0hfJA18lEfmSgjSF/FlqKlGq8YRZD+b0l676dO+mYDsZ8PH5d2o
GVAI9s/zSFzbLgGnjntaPM0tAxt9ZDVSMyUga+mzmFnlahCYU7TsoDIV1igZ
xt+/jfbDgsgTMplUKN890BeI1rc869Jn1qo0mBctfPARLwN7pjafDVrZPnSc
x6I4aR3F+bAH+yZX/f0VvPe7AembaJnmDdP9LNA2LysAFuaBBc8zMeulLHDw
kqqhwKwIfG7k02n4sJrwkr4Ef9+lQEmHhTjVIjpBeiXta9dTs9D6SHqlMaUH
ZcCXjvNaBqSiFNTplYR0ofWdiRAJ6BBzZE+RaxUwcL07pCBKhUcyfT/BfXTw
oTth5EIwFRY098mrzqB6YU116YgEDYba1Y1yiTJA+ec/7QVhNKj7kt9ZPIMO
0lvXxG7bR4HO9lKeyRp0gs/hlKl/HgXelzpRqo/WY9IrdQz7t93+R8d5LtJJ
ShwcX6oJxl8h+QvH0H79bBXfzfd0YPQ68HNzHRWuEW0V/kRlgFWfC8/1GdHg
hUsUqt0YHXum3VbtYg/O0EFX0brdvDcpsLvxa2TNWzpxppkjYfA3BZZl3lqr
jNZn0is5Lq64KJJGx3kurTP7Dwl9ryJ+3krdd+8eFZrUbvro3E8HaXPHe7fz
0+CfLX7RMuj7LWQkT715T4HLu46vluRlEKRPkupSPNEvxCCUW9jhDA0qbP7g
LmocSgfW20N55wup8Oy+ljJTNF43gnRc5A/SoIesi7sOOr8yuIRWSAui/Y96
5KTVOgYRfiImZn8cFebJH3VS5WYA4YP6H95tROd1+pnoNag+Syh5dvlWJQV2
cG35Ny3DIEhvxBfBO1A6QCfACj+rL71U+MzY/tQ7tF6Q3qhxfNlPi/10sCcw
1291LwVaRWz0Wfq/9+Oq2OTxRSoMd2vtcUP7p2Jng6nnelRvmbvueSrOIGZm
w1KffKPCkNifD3WEGSAzu3TSkFcUnt5Lm1uOzvPrpeN1qyKokFNfN/DJAh2o
ZQjlVq5C50ldmH4I/f16mamL94oo8OaFZBdxVO+WNvgL67VT4bSJxvu/6Puc
1mvlf56iwMQZzrHr6PmQ+S4qIv2RJ+2qCB//oEbhFTRYzVQ7qIfOq0zLZ+et
K6jQaVNURj36PH7kmHy/mCjkXu+yrQzVE04OypZW9ai+kHdlDqPzaMZBnwK5
ETQeVuK15Wg8SP9zdkxssE2JDjYPRt7d3UWB/6pbxWTQ/VxfNeVm/pcKa420
I+bR9cWLJvdZcaJ6/cQfGgcaL2H1FZcpzVTY+qZjszX6c0uPtRn0MVQvFiQ5
26Dr31ghlr7jFxUyd2XlvkP7fVfiNmkuEVFoLO7O/oKuR2iVucVNBgWmVpid
FUbn69m3SyXG2FSYu3twaxW6Pt2dHWG8bAp8NXbM5Cv6Pq2PO2wOcNPgF0rY
hhb0/hWaDnGqLhWFHzaYtDeh/eqBg0DuvS40PxeMJi3Qzz/8daXi5SwFvt0R
tkEJXQ+ZB7NsIXXPSd0q4kYX382LE1Rolakdm4D+PulzXOskOOfl6djnxHEE
TW3gGMP9fqxLj8sWvhvD/X4GXnEekl01jvv9GPEEl33ZO477/ZjJv15q1zuG
816+lX4YgOWjOO/l/kB20pHlwzjvRXLF81vl4/0478VY6C79vRIL570cy/Sc
4DzSgvNeLEzsLtgersJ5L4MT++PEdbJw3kus6FMlg4dvsc85tNXlmfjpYuxz
vGKfnelWYmCf41a+apHS0YB9TpembocHrRX7HJPkPUUeA+3Y5zgpcMXo2Py/
z2H9O3+V1cbEPofDVekmpZeJfU73b7fXV3yZ2OcU24QLqtI7sM9xmT8xKtvT
hn0Of+vNfJ23Ldjn8K0YFVq3oQn7nAirRtohmXrsc7gTX14fFqvBPsfLLTK5
9GgV9jm1w3yXA++WYJ8TN2iT4bK7AOe9+D+iHshx/ozzXgLqIidff0nCeS8l
SVdeWYs+wnkvqzefi14h/hz7nN+31l11C47HPudhNJeaIUjCPmc04sA1H904
7HPSMi5EULfdxz4n14RKez2eiPNenoxxprB1y3Hey4/oU7erW5qwz+lJy1Er
Nu3EPidta8B5ncfd2OdwqiUVC1P7sM+RjxDS7Snqxz4nY6/4kenOAexz/A2o
K3cEs7HPWd7ScF+MzsY+h77ejkvwCxv7nIwm4prxpTHc78fL9bNr6vAY7vez
KS+Da7faOO738/zc/Pvva8dxvx9huEFq460xgvQ863uzZoxmRwjS8zRVhfTu
ih3EeS8GlE7vrSl52N9QGwS0X26pxP5mYNqUkbizDvsbNZ+GnSc2NGN/c4DN
lN0a24b9zY2yjpQgLib2N7v2exmJZTABl8vOL9c6uaFO3uVnxSNMIFHpvHJ4
lAfqpQTCNz+YQL1K0n1okhcKGfJ6/9Vggro/9x/dmuODKSFKhsuH2nE/IdE2
47NtNa04HyY9vTRv6v1L7HsyLlP/PF3vgn2PxK2BxpOar7HvySw/GTjmkIh9
T2hlyPsQVgL2PWaTdzpn0yKw75nIpjlSu57ifJg1tYq54ZF5OB8mYe/SyZIL
tTgfxpOpZ1MW2o59Tx7f4eEqIRb2Pbb7/myUGuzBvmfUKAHEc/Vj39O7vOvl
4csD2Pc4VZk+eXqIjX2Pxdj1gvRvbOx7fk8H3tpXzca+ZyFbjqdqxxju/1MS
vv30xeox3P+nuZumGb91HPf/+aZQM7Jjxzju/6PTvpPbOXOMID3Qi0X+rSNW
owTpgVY7zDE+Modw3oz2/cdHpNZlYb9zljYmuaauFPsdWWb3kfK8Gux3rFyH
0ooEmrDf2ebl3UHvacV+Z22RRM9Zzw7sdwIdTZ8kP2OCrAu79rKj0Hoop19t
xWYC468n+1Pf8UC/NzOcNQ1MYNE5eFcxixfW1SyzumzJBO30+X83svjg0z0n
K5aad+D+QtdsT+qkX2jD+TRPf9bbOafFYR90XdyIsjXRHOfTxIqs+rt2XST2
QTYt55JVDiRgHzTucfFCXV0i9kH95kFih16/xj7I8WP2SkWjizifZm+IbQ3b
MQ3n00iu0d13/iwd59OsSNz2nEO/Ffsg4L77veW+LuyDtprzHtur0YN90Lrx
Ww1/g/qwDyqtOff3m+QA9kELG7waGJJs7IPU1n64Y/yWjX2QTlvoZFQNG/sg
k+pHLgWPxwiyP1CFoJhX6pJx3B9o+HCo/rZ940T/2yUPMja1A6OylZtclo7j
fkFm2bdMmzaNEaQvuupVy65YPkKQvudw1DYi+Xk99j2Ty4UWqfItwHtkPn2z
ECfknntWM6rfDlKLlpdWUrnghk8LWorqTLDfMqR0uyQ3FCwNoxNlTGAYuGPX
4AYe+DKj/TQYZoJaZoTBNhVemJAltOZHMhOI5Oq4vt3BB2NbzusaUZk4H0fK
1lD8w+UQnI/jI+V7mlbmR5C+KOD5/UdfImKxL0pvXj2qtCYJ+yLhAsn0x5fe
YF8UxcV5Ub4mGPuiy8bbY4XTo3FejrUvT+vNvz9xXk7F3cItN1UaAOmLvtPE
tvqYMrEvqhdZURvCYGFfJB7uHXL/US/2Ra1rqgRdrfqxL4pQkusZTBjAvuhx
6Q+1p3Zs7Iv8Q/JPPfjFxr7oadWaJt1iNvZFO50GO6ulxnC/IqVCZZ1XxBju
VwTbhJudNo7jfkWuSV5tV9D+Q/Yr6rv18btI1RhBeqRrISG6r6NGCdIjbTqo
JRDu8hvn86ztfHGWI+8j9kPX1y2XFFz5C/shB82JW9/mGNgP7dITOPnCpRH7
IYc++6v691qxH6L4SOWq7erAfiigYmzW5B4TBJ5Qm09244bu4cmTK3qYYG77
DwOBJzwwvFREKbODCdzZJz2rQnnh64rY5ElXVFfu/5JjHcIHn5f53IWRHbgf
ko3Kusd749pwno/PoMduuC0B+6TRi2lSLpm3cZ6PwGPNwVKlMOyTtm7kvRTj
+gb7pFMnMhXByiTsk06FpdF6+GOxT8p+89S9YOgm9kmrPp7MSTFIxXk+6gfs
NKqe/H+ez7S1QZKjZAv2ScaPVvJZVXVinxRSMnVCqK8b+yTLJP3MOqM+7JPK
/I5JXRzrxz5pFWVcZuTfAPZJz9qsL/C8YmOf5P1Qe0EKrRekT3J5yz+x3mmM
IPsZeRfIu6rNj+F+Rtmmz/c6ovp9pjp49znFNpCrmXLrIHUc9zdysXpldvDo
GEH6psyiA5ZT3iME6YuS7cP2e/bXYV+ku/BFqiS5GQj4nrs8NswBwym59JVz
bSCuMG/n2BQnnIVfXzuuYYLkPxr057NcMGTPs/v785lAzlvlz1tuHrizUFSq
FdUft04v/fSUgurn3LsKVz8zwcaiNLfDYnxQMHur09atTJwnlJxS02Q+H4bz
hEZbT5jfpnkTpG+Su8n3LsEtBvumsgNLruxuScS+aeXtPv85lQTsm8pX9YOK
oVDsmzhcu3lLakNxvlBI3Zbds2kFOF+o8vqSvYNVdYD0Tfz0X3P33nVg35TQ
sfGuqT0L+6b9shzFE3t6sW/SuChy/sCufuybArbJjTx7OIB90+zGHYke59nY
N1nUuT8r+cHGvsn10rIW23I2uDelt7hHogg0LY9/IMQcI4zbW2w4z9QAz+6m
7FBUP4jLJMa+29sC6oTnuPkVxglp/QOafbGd4FRh5sMHoWNEYP56QdV0TniS
V6h+trADeEi+bDfN4YJW6WtO7YlnglZrVbfNBDekvdXzmf3NBNlavff0q3hg
4OUFTadKJs434pqXW9/IfkmQXqpUpt5YbzABe6knGSuB+o1E7KXMjnc8C5ON
xl4q/umzf23893D+kXo2a+e12M/YQ5mn6jm9V2ZjD/WG2HN6byYbe6jHrlaj
8Qw2mBdddNQOrwTrT8a8+Sc6Toi9Mj904lgDeJdCaTNE+2OT993qZbIdQHrO
VmnP7BhR29D7o0KNGxp87dv2qo4JnKKUnbbo8kD+N6p2s6ieUb6m0F9lxAv3
8m6Ry49ggrUe2k1rf4rAfIZPTndsHEH6qw/fBxJYGknYX3GfU7xmahlPkJ5q
UsN9XZEXG3uqVsP7GmMVbOypys8lLqnKZ2NPNRz1LyBDcAz3gzLe7xtflzWG
+0ElqxWO30TnC7IfVPe12NJDe8ZxPyitwy2cm1rGCNJfPcnhuF6TOUqQ/kpF
3MwzquA3zk/qUjZPDOD7gL2Ug+yKzYZ7SrCXshEuy34cysBe6ssdRztPhUbs
peSUd9jYovqI9FJPtj3gGRXuwF7KaKfcKV9ntL5XZLc+tuKGWjfu+GZ2MsFh
mzlO9ds8UOOv4HoxFhPw3VzKueYRLwwBO68c82KCeMcXtGv3+WBYwyUV76wO
3G/KfmlDmnlhG85benj8eCyPQyL2WK3+zmt7bbxw3pLXRM033qRQ7LFeqtlf
YCx9gz1W1usv669sT8IeS+idgRv/u1jssYIDKtV+XLyNPVZ80bLLjpJvcd6S
86Wpik3DFThvqaR8Z8bA7Wbssf6mNb8VfNGJPdZ1Z2+LV9nd2GOZRH6dLVbt
wx6r4s5Gxaut/dhjHdM+r5g1OoA9lpKPck1ZGBt7rL9fmmZ10ftPeqx4s8PW
vdZjBNkvSk53iPf51BjuFzVjIcnPi96Xf6yGZ2kfW8Gc4a03R2TGcf+omrcr
tTaZo/3iP89FV959N48YIUhP9dNW5GppQB32VLQzmlI7LJvB0dMCuSc7OOD4
vmLHpMo2EK0ZZs3VwwlNF682loig+j8/rLZ4gAue94+caf/CBOL/Mht9x7mh
5InY+0tGmaAoGFrmcfLCJQ3TFhm5TPBR78rfSB4+SFfaJpq1i4nznm4dNde+
eDwS5z2dXAGrEld7EqTnsqNIy7Z0vsaea8fs5VvVKYnYc60JHleuDUzAnsts
19cWh6Yw7Llsf39d3y/6DOc/bbhOHfTm+o7zn3KffmIfl6wDpOf6npixyXBd
B/Zcp5JehXFpsLDnOnK9wdJOtBd7rpPizhQNmX7suVzFIx68vzWAPZfi1zNK
WifZ2HPdm4w5ZoXWB9Jzue8rVrxfyQbpdiFpTbw/wcqxcXfjxjHiQO815YZG
BtC+/VK6SAmt90pD85xEM+CvTvzQvm2cuPtyeY/uhU4APibEst+MEU/AvwM6
MZzwWE+Ry564DpDZOdEZ8JYLBl912iMfxQS/erJMlr3nhi1mQxbXhphgiafM
zjt5PNDk4cKrEzVMnD+lEXpk4MqTKIL0YV8Kzx7Ii0jAPqysKe/8uYRE7MMO
3uC5teXrK+zDjh571jLGcsT5VFqHG34doWRi/yURUMv03MjG/kuaK0Hb5QMb
+y+3tDePDVH9oxCou7HbpwL8Frwc4CY0TswnjAvKM+oB79LeGEe0/jNf/Nh8
Ib4dbJnZ0p7EOU4sfb2veFGOG+bv7jZkVaN6UyLj1PJdPDC66PgSOrrf+2/M
Ixe1eKFzapCgTSza706d8NTJFYHl2kll9bJxBOnNaPwJHV47k7A3040Ns/0y
EE+QfkxsNk/nshsb+zHHHqXu7jI29mNPmXJBOwvZQHTa56tXMx0oGG77umPz
OKFwyunj259NYF7hrN0y1XEirunzylI/bphzviptuo8J3k77RbZG8UBz03DP
iRYmmM/VKLUYFoERTjUpZZ1vCNKj9cdtLS6YT8TeLGpX/Mebwe+xL3twxre7
LZ4Njr9s0Sz2R9d3Nonph8azMkv4RW1NHTD0MrO4rz5OjObqd/CntAFZp1aP
FOFxwlFpsMJ8KTcMEvBp2FHEBOrLMqllYjxw3Dn5vCaq5yx3K8j4KlNgU4jW
ASGuJIL0a+l6YnsGq94QpEdL41J6Ri9C+9/BeV+RWho8U+T4jr+UDWzrjyRv
aagBH2fa9ETR/QstM9M1zm4BbjYv9idvGidGxj6F61Vzw2aiENLQ96X/zXJw
EabARTqdkbMjkYD2RnrlIRRoc3PrwzNbEwnSsx1Yu7siLpsNBMatrw6l0eBI
q5NrNJ0Ntryo9b5T3QAuHDKwzUX3G70iMD9SlxtK6RjpTDYxweO16c8PG/PA
gkP5z770M8Eq55iiyJMUWNLDiFPWTiJGS0ednljToLpijmNKFRv7t2+JWfYS
uWzs3/RPLsr85RvD/cLWawdOG6WP4X5hpsVRt46tGcf9wr7+sF8hjOp1sl9Y
+IeGrT2o3iO9XFNj8nhs/ihBern4+6mmq/t+4/yswmhPnpLiVOzbTma+KOf8
VYx9W8Ou71d6zBnYt0lLRLyc5G3Evs3/nVaq1I5W7Nt2JanOnFtox75N2unb
YWd7JrBfNls+e5EbnvP9kN+MznOTy0Jbaux54Iq8NP9X3Uxw5KO5hq4HLyT+
3Ht5+SET/Ax4qDPgxgcFjGtujfzowP3IzH/nrKmubcN5W9ujBd7/EU/Cfm73
V/Es+zxvnLfVXTB8urLjOfZzCnSrfPGqeOznLM/84ry4Own7uaenKk/O/Y3F
fu6Rv93ze06e/+/nih3sIU8yztt6c63P1lS6AudtfcqoNdum0Iz93K2k0IVH
bp3Yz23aGfNBOKYb+7meOLtUzk192M89fLLd/jO9H/u5tjc2qlcHBrCf++gV
HOD3nI39nLp2x9qv6P0k/dwZneWDyRZjBO4n5vXeSH58DPcTg0JHrTfvHie8
bObyTRxaQRGPg5gkep/I/mIq+ap1B66PEaS/63sbYpbWOkKQ/m2D+pIfvWZ1
2L8FKv6KHjrYDMb3XbZ62MCB5q9/l192G5DmfsDn18oJi/1TiP3LmGB2vVY9
s5MLOvLtpD7KYgKBvVMlcwPc8Hbj3eIpND9vKLVqnJrlgalTy99/Rue/6SfE
3sJ5Xii/2X9vpzoT532FOUz8aPKIwnlfUp3dpvy73AnS3z2utuIxePYa+zue
9pyO34GJ2N/lNkRUGH1NwP7OySZndUNxOPZ3O4qSbhD7g3D+V85aSuW4XD7O
/9qZd7Rs6FstIP1dEHdkw+m2duzveCf3XeSRY2F/1/3Dze/iYg/2d0dV36vw
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
lxZ7bw==
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{433, 2775, 2773, 468, 856, 746, 654, 580, 524, 
                874, 764, 672, 598, 892, 782, 690, 910, 800, 927}}], 
               
               PolygonBox[{{2770, 2774, 384, 801, 691, 599, 525, 469, 434, 
                385, 802, 692, 600, 526, 470, 435, 836, 726, 634, 560, 504, 
                386, 803, 693, 601, 527, 471, 436, 837, 727, 635, 561, 505, 
                387, 804, 694, 602, 528, 472, 437}}], 
               PolygonBox[CompressedData["
1:eJwV08lvTWEYB+Bzb2lVSCQiodVWDUvz0BaltrSG29oaa2pRCyIhkaCtljSx
cHuVqiksiIR/QAedLTWWrU5qTAwbrDzf4sn7e3/nnJzc796bf6gmcToeRVGM
9wzNjKJ3JBXNpFieFkXtbjrMAkZ1r7nNCtc6dJVkMaZrp1Q/bL9CYXgBLfqV
+k75CNmM6zoo04/Yr1JEjDv6Vfou+SgLmdB1slP/wV7LRuLc1a/Wv5GPkcOk
bp/uh3yL7XTpdulG5To2cdaezjM5LbxP/mO2kuCCfRYvQ+f5NXK3fJxL8hxy
5RozxhO5wczio/v3mz91yfAZ5XnskM+bmaR4YW8y82gLn8Nzu80x/U2z3rxs
zqWFzfZzZgZJnttvmDm0Mi2cg/nXvEe9PJ9y+aI5m1fhmveslXvkE+Rxxh7n
qTzl+gH5l9xMKd26Pbpx+RrFTA/noftntlERpvvW6XrlKhbxSXdQ91tOUUaP
LqGbCOfGFtK5r1+v75Oryeezrpdy/aS9ka1k8EC/Qd8vn2QxX3R9VITvwn6d
EmbwUF+gH5BPsYSvun726qfCmbKNTB7pC/WDcvjjLOWbboDHFLn2NvwOWMZ3
3SD/AQG6a8s=
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1:eJwVz6lOQ0EYgNGBuqLQVRj2gmdfPIKk4JsgMNCyo9AkoDAkCAw7tPAedF/e
gRrWAgLDueJkZr5/Jrm3J72+uNYZQuhghUY8hCa/wqjBPk3mYyE8aXV+GNH2
aDBn9qjV+Cap7VJn1iyvVWkzrO1QY8Yspz1wzx0Vvhgy36bKtHu3WplPBrUt
KkyZ3Whd0TdyTItlvaQv2J/SJq19aGfWBIdc6yfWGFkGnLutB2zal5mM7nmX
sj/nj1UtHv07R7ywpBXde6ffeYMSE/qVVuCNPi1LkXGzS+2ZV3q1DAXGzC60
f2YjOwQ=
                "]], 
               PolygonBox[CompressedData["
1:eJwV0d0vlmEABvAnaTMdGMlbW7M5CKmjEn+BrzqIzkIq5Ui01Wa1EZmKUniZ
FXPg46C2phPLtz+CE9857+tItgr97oPfruu+nvfheZ83q/bB9caEKIqOMMVy
chStMGDoJ04fvfTwljd0s8gOp/yBWpa4cDSKXtsW+ErMdodFzrv2ynZIofMz
trhqn7eV6f384qZt2zYRHk5vJEO/zQJ5zl2uf9aP60+o0GPyOcP6HnX6gc+d
Cf+bj7YBeYxHFDi/k2m0Bc49clNekXPuHZGZdPPJPiiTaKLUeUim007cuU/+
lNVyy/2n5UvGbXF5KBvkSZkiW7ilz3NO73TPpJ6sP6Zcz5AdDOm/uafv+9wH
PVF/yGW9lQ3KnGddLwnPww+qwveyjekH3A/PLWuYIzc8p+vX9Pfsctf2z5av
P2WdUtuMrVjv5TuVtg3bifDbMUuO7YXtL5ecW1ijxD5tKwrvmm/csK3bRvV9
6sNvEt4hM2SH39X1P1x0bmaVYvsX2xqp4Tsyzdnwvmz/ASk9Xys=
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1HfcjWUYB/DXfO29R7xEJSubUpkvWRGpjIyUrDd7R1GKsopCoaEhlVU2
LaNBg+yZWUoR2eN7ffrje37XfZ3zec557vs6T1KXlFZ9UiUkJIzyElnCyzY5
nSdoSGVSk4a0pCM9iWQgI5nITBayko3s5CAnuchNHvKSj/wUoKTv/FW+RneS
qUJBbvbedvk6T9KIqkH/uPyQYTxMIUrp75Az6EFjqgX9E3I+w3mEwpTW3yln
0pP7qB70f5cfMYJ2FOEW/V1yFr1oQj29c3IZL1Aj6P0hFzCS9nFtvStyLZMo
yq16u+Ub9KaldRrWq5tSX/2fXM6LcZ/WmdmsrhnUJ+XHdFHn4Wl1G5nIt+oO
8TvVV+W6OFd1QSbHezI7g/g5foMsxkhusr5N7pFPyTdlJ5mLIfSxbiXTMoAN
cUayMMNpZt1Anpf95ArZTeZnfJyBzMKW2HtZlFrqWvJP+Qld1XkZpX5QZuA7
dcfYH/U1+QVTKEYZvb1yNik0jxnWuyBXMoE7g95f8lNG8yjFuV1/n5wT90wL
7gr6p+RCnol9IImy+vvlXPpyP7UpQTnvHZBvxf3H2XI3JWOuY1Zj/mKmKO+z
B+Xb9I995Z64lv7fchHP0jlmhgr6h+Q7DOABkvUuylW8xL3xfXr/yMWMoa11
Rr6PeaGZ+rr8kqlx3lTU+02+y8C4tnU6Nqpb00h9Sa7mcXUBXla3k1n5Ud0r
5oc6cR/ydOyPXCIfk/kYyljrh2QmBvKDdQ9ZhBF0jTOMBxP9+UrZXRZiGK/E
LMgcDOYX63igFY//AWWs75CH5bzYP3XumPe4F5meTfF/obH6slzDRNpbZ+Mn
dd3YT/UZuZTn4j5iPuK5ydfqV2N+qGR9RL7H4Jhb6lFH/1/5Gc/TLeaHyvpH
5fsMiTOifsxPzEWcdZxJ3AdVfPaY/IChsXc0iN+nf1Z+zrg4l5hFvdR8o54W
M67OyVZ1ikxK9f9zv5L1DarMofQ=
               "]]}, Annotation[#, "Charting`Private`Tag$190634#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1WW4VFUYBtABpFNAGumQ7u4GaZRSGiwQFBRBUBqL7kY6BSRVGunulkY6
pFNc+/HHer53v3vOvXfO7DM3Q+tO9TtGiUQimaNGIr2FDNEikWVyI+JzRLeU
PmS0t1zXmAQc1S2jkv6o9dfk44muL5n0K6ybkJBjuuVU1h+z7kF+nur6kVm/
0ropiTiuW8HBOJFIfzOL/VX693idE7qVVNEft+5JAZ7pBpBV/5v1+ySmvfVL
cxon7TexviEPpTKrdFV1J+RvKMhz3UCy6X+3bkYSTuma6m7Kw6jCb7pqupPy
txTiha6N7qE8njp8p8uu+0NuTlI6WP9rTue0/fesb8nDqcrvuuq6U3IvCtPZ
+jXmyi/tt5UfyRPoLyejrtzNjMMi+Xuve0teLbcI71NOyBvyp+Yrc4Q5I/yd
Zkr+cs375u3w95gjzL5mUiZQzbqrGYsxLLQeZL7J5PA+XV/DPB3utdk7nDUz
MeMoYt3FjM4o5ln/aKYJ98S17czHuokMkJNTT+5uxmWx/IPX5ZDXyC1JRkfr
CDPlM/abyXfkkVRnte7t8P7kPhTlle5HcurXWrciOWd1a/iJXPbW6VqTgnO6
tQxiMEMYyjCGM4KRjOKQszzaHMNYcvtZ6/2MNqTkvG4d48hjb4OuLam4oFtP
Tf2Z8BlQjEg4W/q8+o1yO1JzUbeBWvqz1v0oTpRwRvT59JvkD0jDJd1GauvP
hTNECaKGe6/Pr/9T/pC0XNY1192VR1GDTbo6uvPhs6IkX1jHYL4cLfw++Yk5
ifrhe8M6HktC5/oC8mb5o/AcyYnCWZI7mVGYFc6xmYq/vb6F+Y9udHiP4Szz
tvyVGZux/GI92EzHlPA+XFfXvBCeX3NgOANmEsZTyvpLMyajWWD9k5mWSeG5
C/fBfGpOZqCcggZyDzM+v4Y9v6egvEX+mHR8Zh2V2fIV+y3le/IYarJZV093
MTyDlCZ6uB+6Z+YU3gnT6wrptsqfkJ6rula6+/JYarFFV193Kdw3yhCDqfrC
+m1yezJwTbeVBvrL4bmiLDH5WV9Ev13uQEau67bxTvgswnNLOWIxTV9UvyN8
t5CJG7rtvKu/Eu4p5YnNdH0x/c7w7Eb9/3/STd0OZlDc3q5wDsjCLd1ODnum
Zpol7O8O95es3NbtYhYl7e3RfU427uh2M5tS9vbqOpOdu7o9NNRftR5EBeKE
z1D3PNw73mWO15XW7ZO70Et+nbfC7zKjMZI54V6aqZkYzqvrWpsP9OOozV5d
I921cFapSFzm6svo94dniRzc0+1jHmXtHQjnlZzc1+1nPgtYyC+U87qD9ruS
iwe6AyyivL1D4ZkhNw/D/10WU8HeYV038vAofI+xhIr2jui6k5fHuiM+j8Nm
Y3vXdUOoRLxwTnUvwlmiIT2tE7A0vM5Mz9Tw7Lj+P7wkGq8=
               "]]}, Annotation[#, "Charting`Private`Tag$190634#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1HccTmUYBuAPiURGUkZm9ohkr+xNhGyyt5Z2qWgrKhpK2XuPkp3snZk9
MkJ2SKiu54/r99zv/Z1zvnHe8+Xq1L9pvySJRCJv0kRidLJEomzyRGLlHYlE
F7JzXredMYxlHOOZwETKOf4Xx3UlBxd0O5hEea+t0nUjJxd1O2mmP2T9JuVJ
xWR9Bf1quTu5uKTbRXP9Yeu3qMDdTNFX1K+Re5Cby7oeusvycBqxW9dCd0R+
m4qkZqq+kn6t3JM8XNH11F2RR9CYPbondUflQVRisPU9zJbT8Lz8rzma1gy1
zsxieZrzK8vr5F58IefkIfkNMyVT5b8c10v+K45hlJyfx+WPzPtYyI/Wk8wS
cZ/4zXktzWP62eZgc2RcnyVUtn7HTBvnMsd6olmcn+N7WA8w/zPnm2PMMWZh
2sjDzCxxrfjNzEeZ7j2rmOt1vflSzkVeeaB5F9Pkq47rLV+NY2jCXl0r3e/x
uahCWl7QJRgrt2WG4x6z3iD3IR/XdPtorT9u/S6PkY6Z+qr6jXJf8nNdt59Z
VPPaJl0/CvC37gCzmcNc5jGfBfzAjyzkJxaxmOqus9n5/SnIDd1BllDDa1t0
T1OIf3SHaKM/Yf0eVUnPUn1N/Vb5GQpzU3eYtvqT1u9TjQws09fSb5OfpQi3
dEdopz9l/QHVuZfl+tr6X+XnKMptXR/dNfkrmnJU1173h/whNcjIi7okjJPb
scJxday3x36nWDy/1qliP8j/er2vfF3+mic4puugOx17mJpxz6zTMVe+j5fk
pIyXx5pFaC9/amZlaTxDZqnYr65X19wR99scEN/DzM3D8f9g3s0CZliPN4ux
PPa3c/uZf+vnmiPN78wC8R40sx5iZuKneNasJ5uPxP9b7FfndzTP6OeYQ8xv
Ys9TK+6tmZ55ciZelpMxQe7AZ3I2lskrXauevDP2PcVJxJ7S3Yjr0pzjjntK
d1b+mNrczy/6+vpdcZ8oQRJO6FfRwGu747flEZJyUt9J/6f8CXV4gNX6hvo9
8ZkpSbLYw7p/zG9pwSnHddadk4dSN/andQbmy5l5Rb6DifI4sygd5c/NB+M+
yNPN0qxxvUbx/6WbZb4S+8bME/+b8T9j/baZmh+YaT0h7jMr4n3iuTFvmvPM
Ueb3ZsH4jXkyfjPzfhbFPbWeYpaMve69u5jndcPiO8r5qBfPkHlv7CE5C6/K
yZkkP8VwOXt8Bnmt6zSW98ZxlGKQdRpmycnjWZVvxV5jtFyIlnEPzAfis8mn
XaerfCH2PfXjWbTOGN9dzspr8p1MljuxzjmPW++L1yjNnfGs627Hb0Erzjiu
m+5i7EEakI31+ib6/fLrlCEFZ/UbaOq1A9ZvUJaU/KnfyCY2s4WtbOMJxx90
zEDKcRfn9N31l2IP0JAH4/10KZgid2aEnCOeb3mGWYZV8d/l/P8BJBAjnQ==

               "]]}, Annotation[#, "Charting`Private`Tag$190634#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1GXYVFUYBdChBQmREmlpRERBGkEUaUS6G0npRqQkFJBulJJG6W6kpbu7
pREBKdf5sZ5373fO3JlvvrmTrmGbiq2jRCKRAlEjkW0xIpHusSKRmMyIGYlU
JBlP7CfaZeJPvT152W7fwy4Wv+mVeIen9jvYyS52850zbzDT45VJzjP7SXaZ
2ap3IB9/2fe0i80svQrv8p/9ZLssbNM7kp899t/bxWG2XpUUPLf/xS4r2/VO
FGCvfS+7N5mjVyMly/XPOCcP5YVzv+rZ2KF3piD77HvbxWWuXp1UrNCLcV7+
mZfOTdHfZ6fehULst+9jF495eg1Ss1L/nAvyMF45N1XPzi69K4U5YN/XLj7z
9Zqk4bX9NLsP2K1341MO2vezS8ACvRZpiTDdLgd/yd0pwiHnf7B7i9/12qQj
CjPsPmSP3IOiHHa+v11C/tDr8B6r9C+4KA8nKr/pOdkrf8dnHPH8AXZvs1Cv
S3qiMdPuI/bJPSnGUecH2iVikV6PDETnmMcG2SdmsV6fjMTguMd+tE/CEr0B
mYjJCY+d5BSnOcNZznGeC1zkEpe5wlWu8ZPrJWWp6zQkM7G47rHB9slYpjci
C28wy+5j9svf8zk3nB9i9w7L9cZkZbVenEvyCGIzW8/FAbkXX/Cn/hW35Unc
dL2henJW6E3CvSVX4x85G2vkL7ksjyQOc/TcHJR7h++PXIf/5OJslStwR75i
tmWyfNJswmOi8jdduOV9/Gy+y11WOnvWbM4Tvgn3sFmdh+H5+jWzPc/D/aOv
NUtwnyv6RfNbnjEq/N/NhuHv4rV+y+wc7nF5rvkJh+TzZkv6hO+5WTe8hvwl
2+Svw3uUf+FUeG9EC3+Lv2GYmYJVHmsafkfkGvwrZ2edXJKr8mjiMk/Pw2G5
LyXYrlfknvwrt117uJ6S1Xqz8Bsj1wyfT/gemR14Ee5tfb1ZimvyGOIxX8/L
EbkfJbnjuiPsUrFGb04O4rPALh9H5R8oxV3nR9qlZq3egg9JwO92+Tkm96c0
95wfZZeGdXpLcvIWf9gV4Lg8gDLcd360XVrW6634iIQstCvICXkgZXng/Bi7
dGzQv+VjNuiluS6P5W0W6YU4KQ+iHA89f6zde2zUW5OLjXoZbsjjSMRivTCn
5B85LNcLn7lcnh1ypfD9k6fwyLXH6enZpLdhv1yLp3JuNslluSlfMlszXj5u
NiJCYn2J+Smn5QtmK36Sj5j1ecTLcD+bncI9Lu80K/Mg0K+a7cI9ylT9tNk0
fDeJzm26huuEe8R7H29mCN9BNjt/zmwR3jtt9QNm7XB/hd8ls2O4h+TNZjlu
yZfNNkyQT5iNiUISfalZhDPyYI7KDXglV2CXXIWH8jQee08T9Ixs0duRhy16
+XD/yRNJyjK9KGflIXzNbr1q+Kzk6ZyRmxGDO3QLrx0+D6/zP7YxQjY=
               "]]}, Annotation[#, "Charting`Private`Tag$190634#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1GcYjmUAhuHP3qtUtEVLw6ZB2kNLdqWFFkJlE4omLZuMaGihFAkNlRKa
KqNhtTeloqLz/nEd93i+8b7PqtGpZ6seRQqFwuqihcLuUoVC1bKFQt8yhcLf
pQuFiWiLejhOP1m/P5bIA1DAXvp+uh38JLRDe91LuhPxmVwfx+sekg/Ay/JA
XKdbIZ+Hn+Qi2FvXX97JT0Zv+VO5A9rLHeRFfFNM5v+ln+tv57/lr8fTfAU0
0J9Ap+gOxHj+b/qK/hZ+Q56FXkWfoGWxCoOMX09X6hfS8+l0WgTL8bPxUfQX
/eu0F51DK+N9FDW+Dx2gn0f/kUfTP+SH+D78Gv5iPMKXQAf9xXSxrlk+x/9H
v9DfwX/Hd0VD+UR5Kn8QXpWHyBv5Thgsd8178BfgF7kYqukGyv/yU/JfuES3
RHcSvpQboalumnwwXss8oTiqZ150//FT8100RjP9dH0NLM2zoAT21Q/W7eKn
4VI0QUmUQmmUQVmUw34+f4vP7+ano2P2HMpjf2NDjBXwsHxZ9hMq4ABjQ/VF
MEO+PGuOk/QP6w7JGslDUREH6ofpimKmfEXmE831M3Q18YY8DJVwkP5WXbGs
lXxl5ggn62fqauFN+VZUxsH623TF8ah8Vd5d97LcHBsyZzhF94h8KJbJt6EK
auiH60rgMblT5kL3inwyNubdcKruUfkwvJX3kzfxnTFc7ia/y1+IX+V75V/5
G7GHfIg8gi+JMfx2+ri+L7+WvyTPz5dE58w5fVW3gJ5Cp9BddJOxO/nvs19o
N/oMrYj30Nz4afQx/Xx6OJ1Ad+S56duZa7o555J2oU/Scnn+PKPx7vkt/Uu0
ZfZAzhh+M3ZfVHcT9pRryrfzpTBL7iev4y9Fl+wP+TX+VGzOOuJ03ePyEVie
uwQ35CzLF2GrXBW1dHfIpXNfyFdnHXGGfpbuSLyT85p7EYfq79SVyTvJ12Td
csfhMGN36cviKfnazFPujZzVnLecoZyL7P/s8+zd7Ecc7rt3+1653HW5R/MO
OFP/hK42VmRdsh9xhP4eXfmsTe62PDPO0j+pOwor5buy/3CkfqSuAmbnPsk5
0S2VT8OW/BfO1j0lH41V8t3ooftAboVt2WeorRslV8w9KfeX1/Md0S1nSn6d
Px1f5TnkH/juOEs+R36aPwYT+Z303Zw5fkvuQHp15pGWz7sa60k/1C2irXM3
0GJ4B78bv59uzVmnN9O5tEqeHTWNH0Xv1T9PK9Gx9M+cdTrX+AD6mbyYXpaz
Skuhe848fUN3Bqbyu+nXmR/+R/4GnC23kJ/hj8V7uQPkr/hrMFLuJX/Et8Ef
2X84WnefXBnPZp/mjtC9KZ+JbzJfOFc3W66D9+VR2Y84Rn+/rgqey3qhs25Z
5hrf5rlwnm6OXBcf5P7InsWx+gdyh2CePFD+nL889wdfGivQ01gX+lbeFd/l
mXB+5k+uhw9zfrOfUUf/YM5w5jzvnmfABfpndfXxUdYt+xl19aN1VfGCfGN+
Gxfqn9M1wGr5gexn1NOP0e2Ve0i+Kb+Nlvp5uob4WH4w+xX19WN1e+fOk2/O
b+Mi/fO6RvhEHp29ggb6cbp98KLcO7+NVvoXdI3xqTwma4iG+vG6algo98lv
o7V+vq4J1shjs2ZopJ+gq557UO6b+yf3p3wOvs9/oY1ugXwc1srjMje61XJb
bM8aorFuorxvzog8SP6CvwL9clfJy/kW+EG+R/6J74HWclv5Rf54rJOHy1/z
12J85lf+mG+HmXzxnJ+sB92m6539y++BOvomdFLWku5Hx9G/6DK62Phg+qW8
hF5JZ9EyWIn+uT9ztjP39Fw6jRYyPzlzxkfSn/VLszdzr+Vco42xdnSh7gRM
4v+h6/Uj+G/46zAhe0D+hG+Pv7JXcpfwfXKW+D1z56Cusf8BHoxxiw==
               "]]}, 
             Annotation[#, "Charting`Private`Tag$190634#5"]& ]}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"LQR feedback solution\"", TraditionalForm], 
         PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1c\"", "\"u1c\"", "\"x1c\"", "\"\[Theta]dot1c\"", 
           "\"xdot1c\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.8663109480511103`*^9, 3.8663109548219194`*^9}, {
  3.8663110103439465`*^9, 3.8663110410939927`*^9}, {3.866311204431121*^9, 
  3.8663112114568467`*^9}, {3.8663118768634553`*^9, 3.8663119511404123`*^9}, {
  3.866312604436941*^9, 3.8663126430494423`*^9}, {3.866563616806991*^9, 
  3.866563622540164*^9}},
 CellLabel->
  "Out[1248]=",ExpressionUUID->"6ea968fb-95a4-45be-b91a-7314af2c2faf"]
}, Open  ]],

Cell["Plot the timing wrt n for a fixed initial condition", "Text",
 CellChangeTimes->{{3.86491957909173*^9, 3.864919591628652*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"39878c2c-e942-4347-a752-27bba723a924"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"TestTiming", "[", 
    RowBox[{
    "n_", ",", "ICs_", ",", "order_", ",", "A_", ",", "maxIter_", ",", 
     "maxError_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "uMax_", ",", 
     "maxCount_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "t1", ",", "t2", ",", "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", 
       "\[Theta]dot1a", ",", "u1a", ",", "\[Lambda]1ff0", ",", 
       "\[Lambda]2ff0", ",", "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", 
       "x1c", ",", "xdot1c", ",", "\[Theta]1c", ",", "\[Theta]dot1c", ",", 
       "u1c", ",", "J", ",", "K", ",", "InitGuess"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"t1", ",", 
         StyleBox[
          RowBox[{"{", 
           RowBox[{
           "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",",
             "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
            "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "J", ",", "K"}], "}"}],
          FontWeight->"Plain"]}], 
        StyleBox["}",
         FontWeight->"Plain"]}], 
       StyleBox["=",
        FontWeight->"Plain"], 
       StyleBox[
        RowBox[{"AbsoluteTiming", "[", 
         RowBox[{"ffCartPendulum", "[", 
          RowBox[{
          "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", 
           "order", ",", "maxIter", ",", "maxError", ",", "uMax", ",", 
           "maxCount"}], "]"}], "]"}],
        FontWeight->"Plain"]}], 
      StyleBox[";",
       FontWeight->"Plain"], 
      StyleBox[" ",
       FontWeight->"Plain"], "\[IndentingNewLine]", "t1"}]}], 
    "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ICs", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ICs", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", "0.5299673880107454`"}], ",", 
     RowBox[{"-", "1.8812572134750898`"}], ",", 
     RowBox[{"-", "0.6808113420271384`"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ICs", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "1.684020641268611`", ",", "1.9548442211134827`", ",", 
     "1.8410749066439154`"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{"\[Tau]", "=", "5"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Tau]1", "=", 
    RowBox[{"\[Tau]", "*", "1.25"}]}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"A", "=", "0.2"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"order", " ", "=", " ", "4"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"maxIter", " ", "=", " ", "30"}],
   FontWeight->"Plain"], ";", 
  StyleBox[
   RowBox[{"maxError", " ", "=", " ", "0.01"}],
   FontWeight->"Plain"], ";", 
  RowBox[{"uMax", " ", "=", " ", "2"}], ";", 
  RowBox[{"maxCount", " ", "=", " ", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n1", " ", "=", " ", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n2", " ", "=", " ", "50"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data1", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"TestTiming", "[", 
      RowBox[{
      "n", ",", "ICs", ",", "order", ",", "A", ",", "maxIter", ",", 
       "maxError", ",", "uMax", ",", "maxCount", ",", "\[Tau]", ",", 
       "\[Tau]1"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "n1", ",", "n2", ",", "5"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data2", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"TestTiming", "[", 
      RowBox[{
      "n", ",", "ICs", ",", "order", ",", "A", ",", "maxIter", ",", 
       "maxError", ",", "uMax", ",", "maxCount", ",", "\[Tau]", ",", 
       "\[Tau]1"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "n1", ",", "n2", ",", "5"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data3", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"TestTiming", "[", 
      RowBox[{
      "n", ",", "ICs", ",", "order", ",", "A", ",", "maxIter", ",", 
       "maxError", ",", "uMax", ",", "maxCount", ",", "\[Tau]", ",", 
       "\[Tau]1"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "n1", ",", "n2", ",", "5"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"{", 
   RowBox[{"data1", ",", "data2", ",", "data3"}], "}"}], "]"}]}], "Input",
 CellChangeTimes->{{3.86491975170458*^9, 3.8649200747844825`*^9}, {
   3.8649201193449864`*^9, 3.8649201277452536`*^9}, {3.864920161157383*^9, 
   3.8649201804041224`*^9}, {3.8649202316614504`*^9, 
   3.8649202570341964`*^9}, {3.8649202887668743`*^9, 3.8649203111236*^9}, {
   3.8649203998797293`*^9, 3.864920406429599*^9}, 3.864920690003351*^9, {
   3.8649207565047197`*^9, 3.8649207687887225`*^9}, {3.865443836032448*^9, 
   3.8654439001889315`*^9}, {3.865443943847969*^9, 3.8654439516324787`*^9}, {
   3.865444005309313*^9, 3.8654440126169777`*^9}, {3.865444117090568*^9, 
   3.865444129382637*^9}, 3.865444205232381*^9, {3.8654487745611453`*^9, 
   3.865448794117893*^9}, {3.8654493307732735`*^9, 3.8654494059632287`*^9}},
 CellLabel->
  "In[529]:=",ExpressionUUID->"00a37dc2-62ae-4dae-b415-9099fdf1317c"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
     LineBox[{{1., 0.5801234}, {2., 1.3931291}, {3., 2.0573704}, {4., 
      2.879207}, {5., 3.7488331}, {6., 4.619808}, {7., 5.5689755}, {8., 
      6.5179724}, {9., 5.9206332}}]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
      NCache[
       Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
     LineBox[{{1., 0.6558979}, {2., 1.4056329}, {3., 2.007635}, {4., 
      2.7655901}, {5., 3.4780036}, {6., 4.4364822}, {7., 5.361985}, {8., 
      6.3502002}, {9., 7.6669694}}]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
      NCache[
       Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
     LineBox[{{1., 0.9342993}, {2., 1.422374}, {3., 2.0171202}, {4., 
      2.7667796}, {5., 3.6646655}, {6., 4.4807373}, {7., 5.515782}, {8., 
      6.3943324}, {9., 7.7256335}}]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 9.}, {0, 7.7256335}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8654440903271246`*^9, 3.8654441524952445`*^9, 
  3.865444998743621*^9, 3.8654490003749323`*^9, 3.865449534716054*^9},
 CellLabel->
  "Out[539]=",ExpressionUUID->"c48e2050-8d10-451f-b104-0d216a786bc6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"tempfile", " ", "=", " ", 
  RowBox[{"FileNameJoin", "[", 
   RowBox[{"{", 
    RowBox[{"$TemporaryDirectory", ",", "\"\<saved.wl\>\""}], "}"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Save", "[", 
  RowBox[{"tempfile", ",", 
   RowBox[{"{", 
    RowBox[{"data1", ",", "data2", ",", "data3"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8654450594542084`*^9, 3.8654450658101754`*^9}, {
  3.865445097341092*^9, 3.865445128001289*^9}},
 CellLabel->"In[84]:=",ExpressionUUID->"b093ee39-dd32-444d-9179-98c9db25b0cb"],

Cell[BoxData["\<\"C:\\\\Users\\\\Administrator\\\\AppData\\\\Local\\\\Temp\\\\\
saved.wl\"\>"], "Output",
 CellChangeTimes->{3.8654451302915535`*^9},
 CellLabel->"Out[84]=",ExpressionUUID->"e6ed3ba0-0036-4061-9283-289e12e8d71d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Get", "[", "tempfile", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"data1", ",", "data2", ",", "data3"}], "}"}], ",", 
   RowBox[{"PlotLegends", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<data1\>\"", ",", "\"\<data2\>\"", ",", "\"\<data3\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotLabel", "->", "\"\<Time of Computation vs N\>\""}], ",", 
   RowBox[{"AspectRatio", "->", 
    RowBox[{"2", "/", "3"}]}], ",", 
   RowBox[{"ImageSize", "->", "400"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.865445145808591*^9, 3.8654451951498137`*^9}, {
  3.865445286170705*^9, 3.865445373405808*^9}},
 CellLabel->"In[98]:=",ExpressionUUID->"5d6d656e-289b-47f2-843f-38ea3bde5006"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGBQB2IQDQEf7LW3avw9t4DVASrgYPLBI7GZSwDK53CQigrm
b5/90h7CF3CIOntfs3PiOyhfxEF+YZqH6NEPUL6Ewy6BgDb//Z+gfBkHk9Pr
DfqqP0P5Cg46yz9PPzNfCGq+kkOEdLL6HhcYX8XB49382JIb/FC+mkPSs49Z
+X0w92g45GgHBgb8hfG1HLYIzmT2S4DxdRx+mjS9WNIF4+s5GLdw3D11H8Y3
cDBQZjuttE0Qyjd0uHOkvuCLPsx+IweZnSeZ38gJQ/nGDhdFt23YoSgK5Zs4
yM3LD1XWhfFNHWxezdNmSJGA8s0cfGNuPLHqF4fyzR0CNn/T1VSVgvItHPa5
Ft44vkUayrd0+CKvq3lJAca3crgwkdH14g05KN/agdF+pmm6tzyUb+Pwmzfv
2JG3ilC+rcPxiJhL7K5KUL6dg3vi2e1fzsH49g6P8wTWim5VhvIdHFhT90/e
fUQVwm9wcNi1+1zbn8lqUHlHB4eTl1eUnVCHyjs6ZAaX9ufIaUDlnRz2S76+
yDVLCyrv5MA04/q2s381ofLODge2z3dKidaFyjs7dPj8FAh5qO0AABhsm6c=

         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGBQB2IQDQEf7POfublryLA6QAUcUjUX346RE4DyORzeLFT6
nLvspT2EL+DwrdLQMqrqHZQv4lC51Ty45vsHKF/Cwcqk7HK5xicoX8ahxN4n
/UzmFyhfweHNOZXfhv1CUPOVHG74tmRw7BKE8lUc9l3IvfxyFT+Ur+YQtnjT
HrYTMPdoOMgqzFh83BymXsvhwsG+qD3dMHkdB4sNaetkn8H4eg5GJROfz18L
U2/gsIzrdTbTRBjf0EH+4AvfBc3CUL6Rg5ebZo3gChjf2OFASdR2x1gxKN/E
IWK2QEupqziUb+qguNbwRcsCCSjfzMGq5cHyBGYpKN/cwSqu8YWnpwyUb+EQ
sdv8Qq+TLJRv6eDuGXnhqAeMb+UgWSYx+d8xeSjf2iG0+7F06goFKN/GYZK7
2jSvb0pQvq2DboHc52XJylC+nUNcyWGGy/yqUL69Q/u7xSnNk1SgfAeHXvbo
N9881SD8BgcH8bz1u/VXQvkMjg7OPFoJH6+pQ+UdHVINXmdN19eCyjs5+L+7
9LDmKpTf4OTAqZ/2YY6eNlTe2eHfoTYmQU9dqLyzg9TkLRffF+o5AABIN5nF

         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGBQB2IQDQEf7EUTr/xvzmR1gAo4GE7ZYbxDSQDK53Awf+2U
VLjupT2EL+Cwh3uKSETDOyhfxOHLQSOzks8foHwJh03Z10pmaH2C8mUcontO
M5n/+QzlKzjsqW//+9NTCGq+koOb0VeWy6cEoXwVh+5Jrxn9gmD2qzlcyF85
5cU6GF/DQUagJp0/HaZey0GsWWdDzm+YvI7Du/33Kz9fhfH1HM7M/SK5+geM
b+CwUDAn5r8czH5Dh0ItjiuBPcJQvpFDy9SQ7Ue4RaB8YwdtntsJny6IQvkm
Dm9PVSwtS5CA8k0dhK4brtuhAeObObzazrU3cp8UlG/uMDPmGt+EmdJQvoWD
W7mAdbCADJRv6VBglt73rVIWyrdy+BP5aPv1HAUo39phh0PTo+MxML6NQ0OW
uB6bkiKUb+vwyc3Re1OgEpRv5xCuFs6z6YwylG/v0J3EbPxhqyqU7+Cgtaig
fXollN/g4OATv2/1lXfqUHlHB45u/XqtYii/wdFh46P1KlektaDyTg5Jii0T
V+zUhso7OZx9/fjPikxdqLyzw/Edjx6t+KMDlXd2sHhbfMyx1sABAPyroAY=

         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[
       Rational[2, 3], 0.6666666666666666], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Time of Computation vs N\"", TraditionalForm], 
     PlotRange -> {{0., 39.}, {0, 16.4892849}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"data1\"", "\"data2\"", "\"data3\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8654451469612217`*^9, 3.865445196024532*^9, {3.865445351728739*^9, 
   3.865445374046602*^9}},
 CellLabel->"Out[99]=",ExpressionUUID->"903ec73a-0648-4868-ae92-a47c15aafc30"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Min", " ", "=", " ", 
    RowBox[{"-", "\[Pi]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Max", " ", "=", " ", "\[Pi]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]dotMin", " ", "=", " ", 
    RowBox[{"-", "2"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{"\[Theta]dotMax", " ", "=", " ", "2"}],
   FontWeight->"Plain"], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"xdotMin", ",", "xdotMax"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Init", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]Min", ",", "\[Theta]Max"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]dotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]dotMin", ",", "\[Theta]dotMax"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "xdotInit", ",", "\[Theta]Init", ",", "\[Theta]dotInit"}], 
     "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Tau]", "=", "5"}], ";", 
   RowBox[{"\[Tau]1", "=", 
    RowBox[{"\[Tau]", "*", "1.25"}]}], ";", 
   RowBox[{"A", "=", "0.2"}], ";", 
   RowBox[{"order", " ", "=", " ", "4"}], ";", 
   RowBox[{"maxIter", " ", "=", " ", "30"}], ";", 
   RowBox[{"maxError", " ", "=", " ", "0.01"}], ";"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n1", " ", "=", " ", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n2", " ", "=", " ", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"TestTiming", "[", 
      RowBox[{
      "n", ",", "ICs", ",", "order", ",", "A", ",", "maxIter", ",", 
       "maxError", ",", "\[Tau]", ",", "\[Tau]1"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "n1", ",", "n2", ",", "5"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", "data", "]"}]}], "Input",
 CellChangeTimes->{{3.864920781117711*^9, 3.864920799837621*^9}},
 CellLabel->
  "In[421]:=",ExpressionUUID->"21dbe1b5-6466-4952-9587-d4bdc27c8f51"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBmIQDQEf7F/GfJsw1YTFASrgMG3Vv6CA1xxQPoeDwszM
MMFMNihfwGHtZoHLJTZcUL6Ig9p73W8rXsL4Eg662Wv4TpnyQPkyDroqCSWV
yjC+gsMZnjK5AglOKF/JYYPeDgOZTG4oX8VhUpTGzDlaML6aw7Ybk36Fr4a5
R8Nh0mmVfp817FC+lkOGT3mvzzOYvI5DW2TGcxNvmH49h1ddyXkc+jD7DRzi
jjE3SG7ihfINHfbkfjgfFi4A5Rs5eHy5fqForSCUb+zQknZ9r+hLYQcA9SxG
5w==
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 2.3894566722222272`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 19}, {2.3894566722222272`, 4.977622}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8649218432941856`*^9},
 CellLabel->
  "Out[433]=",ExpressionUUID->"b8dc6135-5b4b-4819-8d59-1be07f569c48"]
}, Open  ]]
},
WindowSize->{1440., 747.75},
WindowMargins->{{-6, Automatic}, {Automatic, -6}},
FrontEndVersion->"13.1 for Microsoft Windows (64-bit) (June 16, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"dbf89052-0529-4a5a-9aea-3964104c39a4"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 271, 6, 51, "Text",ExpressionUUID->"e1d1232c-86cc-4804-8aba-9808e8088f82"],
Cell[832, 28, 96456, 2381, 3535, "Input",ExpressionUUID->"580f172d-8037-47c3-b83f-1fe6df9c977b"],
Cell[97291, 2411, 3082, 79, 181, "Input",ExpressionUUID->"e4a00a5f-0f4d-44bd-8fd8-356f3e97c1c4"],
Cell[100376, 2492, 225, 3, 51, "Text",ExpressionUUID->"74e82f71-7d3c-4f7a-b18d-cc3109df4131"],
Cell[CellGroupData[{
Cell[100626, 2499, 14690, 367, 638, "Input",ExpressionUUID->"c47d3c4e-60ca-4c63-8b5c-ced31cd89cdf"],
Cell[115319, 2868, 3215, 45, 32, "Output",ExpressionUUID->"86ad8bc4-2421-4200-80b1-87a1e464d3c4"],
Cell[118537, 2915, 3203, 44, 32, "Output",ExpressionUUID->"b565030f-02f6-4948-bdcf-ebcf05d8e783"],
Cell[121743, 2961, 229259, 4045, 209, "Output",ExpressionUUID->"5fae7b78-99a4-4d1c-9803-fa490ec9dd8b"]
}, Open  ]],
Cell[351017, 7009, 569, 10, 52, "Text",ExpressionUUID->"69635ce1-2bd0-4048-a821-d10e9209db8b"],
Cell[CellGroupData[{
Cell[351611, 7023, 4330, 112, 238, "Input",ExpressionUUID->"c527e034-dc28-4127-ba8a-d72f69a3351b"],
Cell[355944, 7137, 85828, 1429, 387, "Output",ExpressionUUID->"42a70722-2679-4446-97fd-44d919b6162b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[441809, 8571, 303, 6, 28, "Input",ExpressionUUID->"2bcea045-de16-4714-a162-cf2dd2432fb7"],
Cell[442115, 8579, 171, 3, 32, "Output",ExpressionUUID->"852e028c-065e-4820-8aa5-86715aa9711a"]
}, Open  ]],
Cell[442301, 8585, 192, 4, 28, "Input",ExpressionUUID->"b3628257-2d5a-4de6-80ee-b0f4238b7453"],
Cell[CellGroupData[{
Cell[442518, 8593, 6622, 183, 295, "Input",ExpressionUUID->"85bc551a-4b91-4c90-8cc6-0e1dfbbf40c4"],
Cell[449143, 8778, 439, 10, 28, "Message",ExpressionUUID->"141a4bbe-b075-4ab3-af0d-5b936eacb216"],
Cell[449585, 8790, 628, 12, 46, "Message",ExpressionUUID->"fdca1bba-02ae-46f4-a3cd-0b215f5e2dfd"],
Cell[450216, 8804, 445, 7, 32, "Output",ExpressionUUID->"e8d3095b-0d6e-4a2e-8139-3e26da2476e3"],
Cell[450664, 8813, 127315, 2269, 207, "Output",ExpressionUUID->"e7dd54f8-9940-408e-bad4-6bed731d5925"]
}, Open  ]],
Cell[577994, 11085, 220, 3, 51, "Text",ExpressionUUID->"babf6ace-7c59-4428-a267-e74cf670ecf8"],
Cell[CellGroupData[{
Cell[578239, 11092, 2884, 65, 124, "Input",ExpressionUUID->"b9cd0173-657c-4653-9d1b-b1d172b2172d"],
Cell[581126, 11159, 223, 4, 32, "Output",ExpressionUUID->"c6bdce7f-dc38-4887-92bd-ff2cb6d9da44"],
Cell[581352, 11165, 223, 4, 32, "Output",ExpressionUUID->"731384d3-0bda-4e58-a666-53d8e039173b"],
Cell[581578, 11171, 223, 4, 32, "Output",ExpressionUUID->"a5b78502-7477-4f93-9b49-69b258772eb9"],
Cell[581804, 11177, 225, 4, 32, "Output",ExpressionUUID->"9c80e7a4-072b-48df-9242-7b3b5a078c7a"],
Cell[582032, 11183, 225, 4, 32, "Output",ExpressionUUID->"51eef66b-dc2c-46b2-a954-452519f744dc"]
}, Open  ]],
Cell[582272, 11190, 227, 3, 51, "Text",ExpressionUUID->"6dcbb24e-a9ef-443e-b5e2-a43dfa73ff1f"],
Cell[CellGroupData[{
Cell[582524, 11197, 9525, 272, 561, "Input",ExpressionUUID->"4586b62f-1931-41f8-b45d-20c47c3c2d76"],
Cell[592052, 11471, 553, 11, 32, "Output",ExpressionUUID->"f609e647-0941-46a3-84e6-74dea5982a11"],
Cell[592608, 11484, 433, 8, 32, "Output",ExpressionUUID->"c9c5cfca-9d8a-422f-8c07-34a018db6d95"],
Cell[593044, 11494, 420, 7, 32, "Output",ExpressionUUID->"c4c3a4d3-c052-432b-a0be-e1f24f246559"],
Cell[593467, 11503, 151384, 2664, 207, "Output",ExpressionUUID->"318f4db0-9f01-4012-b6b1-3af1446145a5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[744888, 14172, 6529, 179, 295, "Input",ExpressionUUID->"fa5c8a58-d8d5-48e1-a656-4765e0d09f5b"],
Cell[751420, 14353, 441, 10, 28, "Message",ExpressionUUID->"5e10b99f-7cd7-4da0-b41b-ea3c4c0b2845"],
Cell[751864, 14365, 443, 10, 28, "Message",ExpressionUUID->"cfa28793-beac-4099-8093-3778958ee089"],
Cell[752310, 14377, 443, 7, 32, "Output",ExpressionUUID->"6532e93b-6b4d-4255-9325-bb5b7224d600"],
Cell[752756, 14386, 130254, 2319, 207, "Output",ExpressionUUID->"6ea968fb-95a4-45be-b91a-7314af2c2faf"]
}, Open  ]],
Cell[883025, 16708, 228, 3, 51, "Text",ExpressionUUID->"39878c2c-e942-4347-a752-27bba723a924"],
Cell[CellGroupData[{
Cell[883278, 16715, 5606, 150, 314, "Input",ExpressionUUID->"00a37dc2-62ae-4dae-b415-9099fdf1317c"],
Cell[888887, 16867, 2207, 53, 249, "Output",ExpressionUUID->"c48e2050-8d10-451f-b104-0d216a786bc6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[891131, 16925, 550, 12, 48, "Input",ExpressionUUID->"b093ee39-dd32-444d-9179-98c9db25b0cb"],
Cell[891684, 16939, 228, 3, 32, "Output",ExpressionUUID->"e6ed3ba0-0036-4061-9283-289e12e8d71d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[891949, 16947, 766, 17, 48, "Input",ExpressionUUID->"5d6d656e-289b-47f2-843f-38ea3bde5006"],
Cell[892718, 16966, 11321, 253, 337, "Output",ExpressionUUID->"903ec73a-0648-4868-ae92-a47c15aafc30"]
}, Open  ]],
Cell[CellGroupData[{
Cell[904076, 17224, 2638, 76, 257, "Input",ExpressionUUID->"21dbe1b5-6466-4952-9587-d4bdc27c8f51"],
Cell[906717, 17302, 1663, 45, 236, "Output",ExpressionUUID->"b8dc6135-5b4b-4819-8d59-1be07f569c48"]
}, Open  ]]
}
]
*)

