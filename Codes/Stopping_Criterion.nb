(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    309764,       6318]
NotebookOptionsPosition[    307925,       6284]
NotebookOutlinePosition[    308331,       6300]
CellTagsIndexPosition[    308288,       6297]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
Packaged the Stochastic approach in one single function and it seems to work \
well\
\>", "Text",
 CellChangeTimes->{{3.8648378409682493`*^9, 3.864837871408472*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"e1d1232c-86cc-4804-8aba-9808e8088f82"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Remove", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
  RowBox[{"(*", 
   RowBox[{"ICs", " ", "-", " ", 
    RowBox[{"Initial", " ", "Conditions"}]}], " ", "*)"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Error", " ", "while", " ", "cosntraining", " ", "u"}], " ", 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ffCartPendulum", "[", 
    RowBox[{
    "ICs_", ",", "n_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "A_", ",", 
     "order_", ",", "maxIter_", ",", "maxError_"}], "]"}], ":=", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "InitGuess", ",", "error", ",", "x", ",", "dist", ",", "xdot", ",", "f",
        ",", "\[Theta]", ",", "\[Theta]dot", ",", "\[Lambda]1", ",", 
       "\[Lambda]2", ",", "\[Lambda]3", ",", "\[Lambda]4", ",", 
       "\[CapitalDelta]t", ",", "bcs", ",", "eqns", ",", "sv", ",", "froot", 
       ",", "xff", ",", "xdotff", ",", "xff0", ",", "xdotff0", ",", 
       "\[Theta]ff0", ",", "\[Theta]dotff0", ",", "uff0", ",", "\[Theta]ff", 
       ",", "\[Theta]dotff", ",", "uff", ",", "\[Lambda]1ff0", ",", 
       "\[Lambda]2ff0", ",", "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "i", 
       ",", 
       RowBox[{"xGuess", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          SubscriptBox["xGuess", "i"], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}]}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"\[CapitalDelta]t", "=", 
       RowBox[{"\[Tau]", "/", "n"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"{", 
         RowBox[{
         "x_", ",", "xdot_", ",", "\[Theta]_", ",", "\[Theta]dot_", ",", 
          "\[Lambda]1_", ",", "\[Lambda]2_", ",", "\[Lambda]3_", ",", 
          "\[Lambda]4_"}], "}"}], "]"}], ":=", 
       RowBox[{"{", "\n", "\t", 
        RowBox[{"xdot", ",", "\n", "\t", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}],
           " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
               ")"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", "\[Lambda]2"}], 
              ")"}]}], "+", 
            RowBox[{"A", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", "\n", 
         "\t", "\[Theta]dot", ",", "\n", "\t", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}],
           " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{"1", "/", 
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"A", " ", 
                   RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
                 ")"}]}], ")"}]}], 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[Lambda]2"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
              ")"}]}], "-", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "-", 
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", "\n", 
         "\t", "0", ",", "\n", "\t", 
         RowBox[{"-", "\[Lambda]1"}], ",", "\n", "\t", 
         RowBox[{
          FractionBox["1", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"A", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "3"]], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["A", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"A", " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "-", 
               "\[Lambda]4"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "5"]}], "+", 
            RowBox[{
             SuperscriptBox["A", "3"], " ", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
              ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "6"]}], "-", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             SuperscriptBox["A", "2"], " ", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
              ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "4"], " ", 
             RowBox[{"(", 
              RowBox[{"4", "-", "A", "+", 
               RowBox[{"A", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}], "-", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "\[Lambda]2"}], "+", 
               RowBox[{
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}], "+", 
               RowBox[{"3", " ", "\[Lambda]2", " ", "\[Lambda]4", " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"A", " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "-", 
               "\[Lambda]4", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "A", " ", 
                   SuperscriptBox["\[Lambda]2", "2"]}], "+", 
                  SuperscriptBox["\[Lambda]4", "2"]}], ")"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox["A", "2"], " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2", " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], 
            "+", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "3"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", "A", " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "+", 
               RowBox[{"2", " ", "\[Lambda]4"}], "+", 
               RowBox[{
                SuperscriptBox["\[Lambda]4", "2"], " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"2", " ", "A", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"A", " ", 
                   SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], 
                  "-", "\[Lambda]4"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], 
            "+", 
            RowBox[{
             RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[Lambda]2"}], " ", "\[Lambda]4"}], "-", 
               RowBox[{"A", " ", 
                RowBox[{"(", 
                 RowBox[{"\[Lambda]2", "-", 
                  RowBox[{
                   SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
                 ")"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"A", " ", "\[Lambda]4", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]}], 
           ")"}]}], ",", "\n", "\t", 
         RowBox[{
          RowBox[{
           RowBox[{"4", " ", "/", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"A", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A", "-", "2"}],
              ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{"A", " ", "\[Theta]dot", " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}]}], ")"}]}], 
          "-", "\[Lambda]3"}]}], "\n", "}"}]}], ";", 
      StyleBox["\[IndentingNewLine]",
       FontWeight->"Plain"], "\n", 
      RowBox[{"InitGuess", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       StyleBox["xGuess",
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       StyleBox["=",
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       RowBox[{
        StyleBox["Table",
         FontWeight->"Plain"], 
        StyleBox["[",
         FontWeight->"Plain"], 
        RowBox[{
         RowBox[{
          StyleBox["If",
           FontWeight->"Plain"], 
          StyleBox["[",
           FontWeight->"Plain"], 
          RowBox[{
           StyleBox[
            RowBox[{"i", " ", "!=", " ", 
             RowBox[{"-", "1"}]}],
            FontWeight->"Plain"], 
           StyleBox[",",
            FontWeight->"Plain"], 
           RowBox[{
            StyleBox[
             SubscriptBox["xGuess", 
              RowBox[{"i", "+", "1"}]],
             FontWeight->"Plain"], 
            StyleBox[" ",
             FontWeight->"Plain"], 
            StyleBox["=",
             FontWeight->"Plain"], 
            StyleBox[" ",
             FontWeight->"Plain"], 
            RowBox[{
             SubscriptBox[
              StyleBox["xGuess",
               FontWeight->"Plain"], "i"], 
             StyleBox[" ",
              FontWeight->"Plain"], 
             StyleBox["+",
              FontWeight->"Plain"], 
             StyleBox[
              RowBox[{"\[CapitalDelta]t", "*", 
               RowBox[{"f", "[", 
                SubscriptBox["xGuess", "i"], "]"}]}],
              FontWeight->"Plain"]}]}], 
           StyleBox[",",
            FontWeight->"Plain"], 
           RowBox[{
            SubscriptBox[
             StyleBox["xGuess",
              FontWeight->"Plain"], "0"], " ", "=", " ", 
            RowBox[{"{", 
             StyleBox[
              RowBox[{
               RowBox[{"ICs", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "3", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "4", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "3", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "4", "]"}], "]"}]}],
              FontWeight->"Plain"], 
             StyleBox["}",
              FontWeight->"Plain"]}]}]}], 
          StyleBox["]",
           FontWeight->"Plain"]}], 
         StyleBox[",",
          FontWeight->"Plain"], 
         StyleBox[
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"-", "1"}], ",", 
            RowBox[{"n", "-", "1"}]}], "}"}],
          FontWeight->"Plain"]}], 
        StyleBox["]",
         FontWeight->"Plain"]}]}], 
      StyleBox[";",
       FontWeight->"Plain"], "\[IndentingNewLine]", "\n", 
      RowBox[{"bcs", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"x", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"xdot", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"x", ",", " ", "n"}], "]"}], "==", 
          RowBox[{"Subscript", "[", 
           RowBox[{"xdot", ",", " ", "n"}], "]"}], "==", "0"}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]dot", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]dot", ",", " ", "n"}], "]"}], "==", "0"}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]", ",", " ", "n"}], "]"}], "==", "\[Pi]"}]}], 
        "}"}]}], ";", "\n", 
      RowBox[{"eqns", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Join", "[", 
         RowBox[{"bcs", ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Thread", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], "==", 
              "\n", 
              RowBox[{
               RowBox[{
                RowBox[{"1", "/", "2"}], " ", "\[CapitalDelta]t", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"f", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}], "]"}], "+", 
                  "\n", 
                  RowBox[{"f", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], 
                   "]"}]}], ")"}]}], "+", "\n", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Subscript", "[", 
                  RowBox[{"x", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"xdot", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]dot", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]1", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]2", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]3", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]4", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}]}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
        "]"}]}], ";", "\n", "\n", 
      RowBox[{"sv", " ", "=", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", "\n", 
             "\t\t\t\t\t", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "7", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "8", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", "1"}], 
        "]"}]}], ";", "\n", "\n", "\[IndentingNewLine]", 
      RowBox[{"froot", "=", 
       RowBox[{"FindRoot", "[", 
        RowBox[{"eqns", ",", "sv", ",", 
         RowBox[{"MaxIterations", "->", "maxIter"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"error", " ", "=", " ", 
       RowBox[{"Norm", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                SubscriptBox["x", "n"], ",", 
                SubscriptBox["xdot", "n"], ",", 
                SubscriptBox["\[Theta]", "n"], ",", 
                SubscriptBox["\[Theta]dot", "n"]}], "}"}], " ", "-", " ", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], ",", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                SubscriptBox["x", "0"], ",", 
                SubscriptBox["xdot", "0"], ",", 
                SubscriptBox["\[Theta]", "0"], ",", 
                SubscriptBox["\[Theta]dot", "0"]}], "}"}], " ", "-", " ", 
              "ICs"}], ",", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Thread", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   SubscriptBox["x", "i"], ",", 
                   SubscriptBox["xdot", "i"], ",", 
                   SubscriptBox["\[Theta]", "i"], ",", 
                   SubscriptBox["\[Theta]dot", "i"], ",", 
                   SubscriptBox["\[Lambda]1", "i"], ",", 
                   SubscriptBox["\[Lambda]2", "i"], ",", 
                   SubscriptBox["\[Lambda]3", "i"], ",", 
                   SubscriptBox["\[Lambda]4", "i"]}], "}"}], "-", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    FractionBox["1", "2"], " ", "\[CapitalDelta]t", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}], "]"}], "+", 
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "]"}]}], 
                    ")"}]}], "+", 
                   RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}]}], ")"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
           "]"}], "/.", "froot"}], ",", "\"\<Frobenius\>\""}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{"error", " ", ">", " ", "maxError"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"InitGuess", " ", "=", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}]}], "}"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          StyleBox["xGuess",
           FontWeight->"Plain"], 
          StyleBox[" ",
           FontWeight->"Plain"], 
          StyleBox["=",
           FontWeight->"Plain"], 
          StyleBox[" ",
           FontWeight->"Plain"], 
          RowBox[{
           StyleBox["Table",
            FontWeight->"Plain"], 
           StyleBox["[",
            FontWeight->"Plain"], 
           RowBox[{
            RowBox[{
             StyleBox["If",
              FontWeight->"Plain"], 
             StyleBox["[",
              FontWeight->"Plain"], 
             RowBox[{
              StyleBox[
               RowBox[{"i", " ", "!=", " ", 
                RowBox[{"-", "1"}]}],
               FontWeight->"Plain"], 
              StyleBox[",",
               FontWeight->"Plain"], 
              RowBox[{
               StyleBox[
                SubscriptBox["xGuess", 
                 RowBox[{"i", "+", "1"}]],
                FontWeight->"Plain"], 
               StyleBox[" ",
                FontWeight->"Plain"], 
               StyleBox["=",
                FontWeight->"Plain"], 
               StyleBox[" ",
                FontWeight->"Plain"], 
               RowBox[{
                SubscriptBox[
                 StyleBox["xGuess",
                  FontWeight->"Plain"], "i"], 
                StyleBox[" ",
                 FontWeight->"Plain"], 
                StyleBox["+",
                 FontWeight->"Plain"], 
                StyleBox[
                 RowBox[{"\[CapitalDelta]t", "*", 
                  RowBox[{"f", "[", 
                   SubscriptBox["xGuess", "i"], "]"}]}],
                 FontWeight->"Plain"]}]}], 
              StyleBox[",",
               FontWeight->"Plain"], 
              RowBox[{
               SubscriptBox[
                StyleBox["xGuess",
                 FontWeight->"Plain"], "0"], " ", "=", " ", 
               RowBox[{"{", 
                StyleBox[
                 RowBox[{
                  RowBox[{"ICs", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", 
                  RowBox[{"ICs", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], ",", 
                  RowBox[{"ICs", "[", 
                   RowBox[{"[", "3", "]"}], "]"}], ",", 
                  RowBox[{"ICs", "[", 
                   RowBox[{"[", "4", "]"}], "]"}], ",", 
                  RowBox[{"InitGuess", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", 
                  RowBox[{"InitGuess", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], ",", 
                  RowBox[{"InitGuess", "[", 
                   RowBox[{"[", "3", "]"}], "]"}], ",", 
                  RowBox[{"InitGuess", "[", 
                   RowBox[{"[", "4", "]"}], "]"}]}],
                 FontWeight->"Plain"], 
                StyleBox["}",
                 FontWeight->"Plain"]}]}]}], 
             StyleBox["]",
              FontWeight->"Plain"]}], 
            StyleBox[",",
             FontWeight->"Plain"], 
            StyleBox[
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"-", "1"}], ",", 
               RowBox[{"n", "-", "1"}]}], "}"}],
             FontWeight->"Plain"]}], 
           StyleBox["]",
            FontWeight->"Plain"]}]}], 
         StyleBox[";",
          FontWeight->"Plain"], "\[IndentingNewLine]", 
         RowBox[{"sv", " ", "=", " ", 
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", "\n", 
                "\t\t\t\t\t", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "7", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "8", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", "1"}], 
           "]"}]}], ";", "\n", "\n", 
         RowBox[{"froot", "=", 
          RowBox[{"FindRoot", "[", 
           RowBox[{"eqns", ",", "sv", ",", 
            RowBox[{"MaxIterations", "->", "maxIter"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"error", " ", "=", " ", 
          RowBox[{"Norm", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Flatten", "[", 
              RowBox[{"Join", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   SubscriptBox["x", "n"], ",", 
                   SubscriptBox["xdot", "n"], ",", 
                   SubscriptBox["\[Theta]", "n"], ",", 
                   SubscriptBox["\[Theta]dot", "n"]}], "}"}], " ", "-", " ", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], 
                ",", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   SubscriptBox["x", "0"], ",", 
                   SubscriptBox["xdot", "0"], ",", 
                   SubscriptBox["\[Theta]", "0"], ",", 
                   SubscriptBox["\[Theta]dot", "0"]}], "}"}], " ", "-", " ", 
                 "ICs"}], ",", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"Thread", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[CapitalDelta]t", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}], "]"}], "+", 
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}]}], ")"}]}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}],
               "]"}], "/.", "froot"}], ",", "\"\<Frobenius\>\""}], "]"}]}], 
         ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\n", "\n", "\n", 
      RowBox[{"xff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"xdotff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Theta]ff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Theta]dotff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]1ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]2ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]3ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]4ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      "\n", 
      RowBox[{"uff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}], "^", 
                  "2"}]}]}], ")"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], 
                RowBox[{"Cos", "[", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}]}], "-", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}]}], ")"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      "\n", 
      RowBox[{
       RowBox[{"xff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xdotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "\[Pi]"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"uff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"uff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", "\n", 
      RowBox[{"{", 
       RowBox[{
       "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
        "uff", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
        "\[Lambda]3ff0", ",", "\[Lambda]4ff0"}], "}"}]}]}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"testSwingUp", "[", 
    RowBox[{
    "ICs_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "uff0_", ",", "A_"}], "]"}],
    ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eq", ",", "init", ",", "x", ",", "xdot", ",", "\[Theta]", ",", 
       "\[Theta]dot", ",", "xs", ",", "xdots", ",", "\[Theta]s", ",", 
       "\[Theta]dots", ",", "t", ",", "J"}], "}"}], ",", "\n", 
     RowBox[{
      RowBox[{"eq", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"x", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"xdot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"xdot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"uff0", "[", "t", "]"}], "+", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
             RowBox[{"A", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]dot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"uff0", "[", "t", "]"}], "+", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
            ")"}]}]}]}], "}"}]}], ";", "\n", 
      RowBox[{"init", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"xdot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]dot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
        "}"}], "=", 
       RowBox[{"NDSolveValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"eq", ",", "init"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
         RowBox[{"Method", "->", 
          RowBox[{"{", 
           RowBox[{"\"\<DiscontinuityProcessing\>\"", "->", "None"}], 
           "}"}]}]}], "]"}]}], ";", "\n", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"{", 
       RowBox[{
       "xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots", ",", "uff0",
         ",", "J"}], "}"}]}]}], "]"}]}], "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{"CalculateSMatrix", "[", 
   RowBox[{
   "x1a_", ",", "xdot1a_", ",", "\[Theta]1a_", ",", "\[Theta]dot1a_", ",", 
    "u1a_", ",", "\[Tau]_", ",", "A_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x", ",", "L", ",", "RHS", ",", "xdot", ",", "\[Theta]", ",", 
      "\[Theta]dot", ",", "u", ",", "K", ",", "S", ",", "soltn", ",", "Af", 
      ",", "Bf", ",", "Q", ",", "fx", ",", "xState", ",", "R", ",", "Mf", ",",
       "x2dot", ",", "\[Theta]2dot", ",", "S0", ",", "sol2", ",", "t"}], 
     "}"}], ",", "\n", "\n", 
    RowBox[{
     RowBox[{"xState", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
       "}"}]}], ";", "\n", 
     RowBox[{"x2dot", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{"u", "+", 
         RowBox[{"A", " ", 
          RowBox[{"\[Theta]dot", "^", "2"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"A", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ";", "\n", 
     RowBox[{"\[Theta]2dot", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{"u", "+", 
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ")"}]}]}], 
     ";", "\n", 
     RowBox[{"fx", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
       "xdot", ",", "x2dot", ",", "\[Theta]dot", ",", "\[Theta]2dot"}], 
       "}"}]}], ";", "\n", 
     RowBox[{"L", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", "2"}], "*", 
       RowBox[{"u", "^", "2"}]}]}], ";", "\n", 
     RowBox[{"Af", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{"fx", ",", "xState"}], "]"}]}], ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{"For", " ", "nD", " ", "stuff", " ", "use", " ", "Grad"}], 
      "*)"}], "\n", 
     RowBox[{"Bf", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"fx", ",", "u"}], "]"}]}], " ", ";", 
     RowBox[{"(*", 
      RowBox[{"For", " ", "1", "D", " ", "stuff", " ", "use", " ", "D"}], 
      "*)"}], "\n", 
     RowBox[{"Q", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{
        RowBox[{"Grad", "[", 
         RowBox[{"L", ",", "xState"}], "]"}], ",", "xState"}], "]"}]}], ";", 
     " ", 
     RowBox[{"(*", " ", 
      RowBox[{"Fix", " ", "this"}], " ", "*)"}], "\n", 
     RowBox[{"Mf", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{"L", ",", "u"}], "]"}], ",", "xState"}], "]"}]}], ";", "\n", 
     RowBox[{"R", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"L", ",", 
        RowBox[{"{", 
         RowBox[{"u", ",", "2"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"S0", " ", "=", " ", 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]]}], ";", "\n", 
     RowBox[{
      RowBox[{"RHS", "[", "t_", "]"}], " ", ":=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"IdentityMatrix", "[", "4", "]"}], " ", "+", " ", 
         RowBox[{
          RowBox[{"Af", "\[Transpose]"}], ".", 
          RowBox[{"S", "[", "t", "]"}]}], " ", "+", " ", 
         RowBox[{
          RowBox[{"S", "[", "t", "]"}], ".", "Af"}], " ", "-", " ", 
         RowBox[{"KroneckerProduct", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"S", "[", "t", "]"}], ".", "Bf"}], ",", 
           RowBox[{
            RowBox[{"Bf", "\[Transpose]"}], ".", 
            RowBox[{"S", "[", "t", "]"}]}]}], "]"}]}], ")"}], " ", "/.", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "->", " ", 
          RowBox[{"x1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"xdot", " ", "->", " ", 
          RowBox[{"xdot1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"\[Theta]", " ", "->", 
          RowBox[{"\[Theta]1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"\[Theta]dot", " ", "->", " ", 
          RowBox[{"\[Theta]dot1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"u", " ", "->", " ", 
          RowBox[{"u1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}]}], "}"}]}]}], ";", 
     "\n", 
     RowBox[{"sol2", " ", "=", " ", 
      RowBox[{"S", " ", "/.", " ", 
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"S", "'"}], "[", "t", "]"}], "==", " ", 
            RowBox[{"RHS", "[", "t", "]"}]}], ",", 
           RowBox[{
            RowBox[{"S", "[", "0", "]"}], "==", "S0"}]}], "}"}], ",", "S", 
         ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], " ", "}"}]}], "]"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"S", " ", "=", " ", 
      RowBox[{"sol2", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}]}], "\n", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CalculateGains", "[", 
   RowBox[{
   "x1a_", ",", "xdot1a_", ",", "\[Theta]1a_", ",", "\[Theta]dot1a_", ",", 
    "u1a_", ",", "time_", ",", "A_", ",", "\[Tau]_", ",", "S_"}], "]"}], ":=",
   " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x", ",", "L", ",", "RHS", ",", "xdot", ",", "\[Theta]", ",", 
      "\[Theta]dot", ",", "u", ",", "K", ",", "Af", ",", "Bf", ",", "Q", ",", 
      "fx", ",", "xState", ",", "R", ",", "Mf", ",", "x2dot", ",", 
      "\[Theta]2dot", ",", "S0", ",", "sol2", ",", "t"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"xState", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
       "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"x2dot", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{"u", "+", 
         RowBox[{"A", " ", 
          RowBox[{"\[Theta]dot", "^", "2"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"A", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Theta]2dot", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{"u", "+", 
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ")"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"fx", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
       "xdot", ",", "x2dot", ",", "\[Theta]dot", ",", "\[Theta]2dot"}], 
       "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Bf", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"fx", ",", "u"}], "]"}]}], " ", ";", 
     RowBox[{"(*", 
      RowBox[{"For", " ", "1", "D", " ", "stuff", " ", "use", " ", "D"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"K", " ", "=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Bf", "\[Transpose]"}], ".", 
         RowBox[{"S", "[", 
          RowBox[{"\[Tau]", " ", "-", " ", "time"}], "]"}]}], ")"}], "/.", 
       " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "->", " ", 
          RowBox[{"x1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"xdot", " ", "->", " ", 
          RowBox[{"xdot1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"\[Theta]", " ", "->", 
          RowBox[{"\[Theta]1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"\[Theta]dot", " ", "->", " ", 
          RowBox[{"\[Theta]dot1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"u", " ", "->", " ", 
          RowBox[{"u1a", "[", "time", "]"}]}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", "K"}]}], "\n", "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"testWithFB", "[", 
    RowBox[{
    "ICs_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "xff0_", ",", "xdotff0_", 
     ",", "\[Theta]ff0_", ",", "\[Theta]dotff0_", ",", "uff0_", ",", "A_"}], 
    "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eq", ",", "init", ",", "\[Theta]", ",", "\[Theta]dot", ",", 
       "\[Theta]ff", ",", "\[Theta]dotff", ",", "x", ",", "xdot", ",", "xff", 
       ",", "xdotff", ",", "uff", ",", "t", ",", "\[Kappa]1", ",", 
       "\[Kappa]2", ",", "\[Kappa]3", ",", "\[Kappa]4", ",", "ufb", ",", "u", 
       ",", "\[Theta]s", ",", "\[Theta]dots", ",", "xs", ",", "xdots", ",", 
       "us", ",", "J", ",", "S", ",", "K"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Kappa]1", "=", 
       RowBox[{"\[Kappa]2", "=", "3"}]}], ";", "  ", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"lqr", " ", "for", " ", "q"}], "=", 
        RowBox[{"r", " ", "for", " ", "balancing", " ", "pendulum"}]}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"\[Kappa]3", " ", "=", " ", 
       RowBox[{"-", "0.1"}]}], ";", 
      RowBox[{"\[Kappa]4", " ", "=", " ", 
       RowBox[{"-", "0.65"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"xff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xdotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "\[Pi]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"uff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"uff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"S", " ", "=", " ", 
       RowBox[{"CalculateSMatrix", "[", 
        RowBox[{
        "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
         "uff", ",", "\[Tau]", ",", "A"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"K", "[", "t_", "]"}], " ", ":=", " ", 
       RowBox[{"CalculateGains", "[", 
        RowBox[{
        "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
         "uff", ",", "t", ",", "A", ",", "\[Tau]", ",", "S"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ufb", "[", "t_", "]"}], " ", ":=", " ", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"K", "[", "t", "]"}], ".", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"xff", "[", "t", "]"}], "-", 
                RowBox[{"x", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"xdotff", "[", "t", "]"}], "-", 
                RowBox[{"xdot", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]dot", "[", "t", "]"}]}]}], "}"}]}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         RowBox[{
          RowBox[{"\[Kappa]1", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]3", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"xff", "[", "t", "]"}], "-", 
             RowBox[{"x", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"xdotff", "[", "t", "]"}], "-", 
             RowBox[{"xdot", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"u", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{"uff", "[", "t", "]"}], "+", 
        RowBox[{"ufb", "[", "t", "]"}]}]}], ";", "\n", "\n", 
      RowBox[{"eq", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"x", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"xdot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"xdot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"u", "[", "t", "]"}], "+", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
             RowBox[{"A", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]dot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"u", "[", "t", "]"}], "+", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
            ")"}]}]}]}], "}"}]}], ";", "\n", "\n", 
      RowBox[{"init", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"xdot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]dot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}], ";", "\n", "\n", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
        "}"}], "=", 
       RowBox[{"NDSolveValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"eq", ",", "init"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
         RowBox[{"Method", "->", 
          RowBox[{"{", 
           RowBox[{"\"\<DiscontinuityProcessing\>\"", "->", "None"}], 
           "}"}]}]}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"us", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{"uff", "[", "t", "]"}], "+", 
        RowBox[{"Piecewise", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"K", "[", "t", "]"}], ".", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"xff", "[", "t", "]"}], "-", 
                 RowBox[{"xs", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"xdotff", "[", "t", "]"}], "-", 
                 RowBox[{"xdots", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                 RowBox[{"\[Theta]s", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                 RowBox[{"\[Theta]dots", "[", "t", "]"}]}]}], "}"}]}], ",", 
             RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
          RowBox[{
           RowBox[{"\[Kappa]1", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]s", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]dots", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]3", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"xff", "[", "t", "]"}], "-", 
              RowBox[{"xs", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]4", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"xdotff", "[", "t", "]"}], "-", 
              RowBox[{"xdots", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"us", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"{", 
       RowBox[{
       "xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots", ",", "us", 
        ",", "J"}], "}"}]}]}], "]"}]}], "\n"}], "\n"}], "Code",
 CellChangeTimes->{{3.862753343189165*^9, 3.862753411389415*^9}, {
   3.8627553611496043`*^9, 3.8627553647834463`*^9}, {3.862755542386807*^9, 
   3.862755582254092*^9}, {3.862756179429644*^9, 3.8627562078485813`*^9}, 
   3.8627563320549693`*^9, {3.8627564690202875`*^9, 3.8627565488258357`*^9}, {
   3.8627568793814173`*^9, 3.8627568873778677`*^9}, 3.8627585165043135`*^9, {
   3.8627585965107956`*^9, 3.862758689290209*^9}, {3.862758834699833*^9, 
   3.8627588555911727`*^9}, {3.8627590963373947`*^9, 
   3.8627590998392787`*^9}, {3.8627594410134716`*^9, 
   3.8627594626865597`*^9}, {3.862759635094576*^9, 3.8627596377257366`*^9}, {
   3.862759669455618*^9, 3.8627597448635693`*^9}, 3.862759795914287*^9, {
   3.8627603319473376`*^9, 3.862760490473783*^9}, {3.8627605307139487`*^9, 
   3.862760536806006*^9}, {3.8627610047197795`*^9, 3.8627610478400292`*^9}, {
   3.8627611285982723`*^9, 3.862761147921111*^9}, {3.8631982964294224`*^9, 
   3.8631982970332265`*^9}, 3.8631983363504767`*^9, {3.863208693665881*^9, 
   3.8632086943846474`*^9}, 3.863210007245922*^9, 3.863271804426487*^9, {
   3.8632718412836447`*^9, 3.8632718583741503`*^9}, {3.8632719591337743`*^9, 
   3.863271959351703*^9}, {3.863272049174841*^9, 3.863272070205083*^9}, {
   3.863272113471178*^9, 3.863272123024109*^9}, 3.8632747752128673`*^9, {
   3.863274857845314*^9, 3.863274901443305*^9}, 3.863274985905165*^9, {
   3.86327502591031*^9, 3.8632751590365314`*^9}, {3.8632751952308993`*^9, 
   3.863275233662552*^9}, {3.8632753992893295`*^9, 3.863275415841012*^9}, 
   3.8632757933676972`*^9, 3.863276112914017*^9, {3.8632763683199444`*^9, 
   3.8632763983313017`*^9}, {3.8632764721665745`*^9, 3.863276525061578*^9}, {
   3.863278235705888*^9, 3.8632782777863655`*^9}, {3.863278324944213*^9, 
   3.8632783286160316`*^9}, {3.863552728717914*^9, 3.8635527298355513`*^9}, {
   3.863613419658352*^9, 3.863613423534114*^9}, {3.8636150904008484`*^9, 
   3.86361513154671*^9}, {3.8636152078133564`*^9, 3.8636152525520706`*^9}, {
   3.8636152893383236`*^9, 3.863615479516596*^9}, 3.8636157247782784`*^9, {
   3.863615879717803*^9, 3.8636159617646036`*^9}, {3.8636160220243616`*^9, 
   3.8636160299278383`*^9}, {3.863616069486206*^9, 3.86361607601912*^9}, {
   3.863699007217822*^9, 3.8636991515617003`*^9}, {3.8636996033223495`*^9, 
   3.8636996129842625`*^9}, {3.8636997844214835`*^9, 3.863699805489752*^9}, {
   3.863699907217247*^9, 3.863699944316393*^9}, {3.863700788168758*^9, 
   3.8637008845809517`*^9}, {3.863702046275758*^9, 3.8637020830100203`*^9}, {
   3.863702595245346*^9, 3.863702645292355*^9}, {3.863884194660141*^9, 
   3.8638842031804175`*^9}, {3.8638909914788537`*^9, 3.863891009810995*^9}, {
   3.863891113237941*^9, 3.8638911537729845`*^9}, {3.863891279619763*^9, 
   3.8638912855948534`*^9}, {3.863891344230113*^9, 3.863891351574766*^9}, {
   3.8638925953132634`*^9, 3.8638925989880886`*^9}, 3.8641412354391413`*^9, {
   3.864141550931038*^9, 3.8641416655529428`*^9}, {3.8642361939817247`*^9, 
   3.864236202546955*^9}, {3.864236595072028*^9, 3.8642366322340117`*^9}, 
   3.864236674617306*^9, {3.8643997929515553`*^9, 3.864399794341104*^9}, 
   3.8647401548354416`*^9, {3.864740367280447*^9, 3.864740382577551*^9}, {
   3.8647404140084915`*^9, 3.8647404181541643`*^9}, {3.864740488606616*^9, 
   3.864740495693348*^9}, {3.8647405289317093`*^9, 3.864740542820265*^9}, {
   3.864741074561078*^9, 3.864741079667444*^9}, {3.864741140307036*^9, 
   3.864741143520008*^9}, 3.8648372672245474`*^9, {3.8648373045645533`*^9, 
   3.864837353847723*^9}, {3.8648373920424533`*^9, 3.8648375909655547`*^9}, 
   3.864837839079855*^9},
 FontWeight->"Plain",
 CellLabel->
  "In[370]:=",ExpressionUUID->"8daba21d-9510-4b30-8c25-b5a0584418ca"],

Cell["Test the working with random initial conditions", "Text",
 CellChangeTimes->{{3.864919546243415*^9, 3.864919566793731*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"74e82f71-7d3c-4f7a-b18d-cc3109df4131"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  StyleBox[
   RowBox[{"n", "=", "20"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Tau]", "=", "5"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Tau]1", "=", 
    RowBox[{"\[Tau]", "*", "1.25"}]}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"A", "=", "0.2"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"order", " ", "=", " ", "4"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"maxIter", " ", "=", " ", "30"}],
   FontWeight->"Plain"], ";", 
  StyleBox[
   RowBox[{"maxError", " ", "=", " ", "0.01"}],
   FontWeight->"Plain"], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotMin", " ", "=", " ", 
    RowBox[{"-", "2"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotMax", " ", "=", " ", "2"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Min", " ", "=", " ", 
    RowBox[{"-", "\[Pi]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Max", " ", "=", " ", "\[Pi]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]dotMin", " ", "=", " ", 
    RowBox[{"-", "2"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{"\[Theta]dotMax", " ", "=", " ", "2"}],
   FontWeight->"Plain"], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"xdotMin", ",", "xdotMax"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Init", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]Min", ",", "\[Theta]Max"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]dotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]dotMin", ",", "\[Theta]dotMax"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"ICs", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "xdotInit", ",", "\[Theta]Init", ",", "\[Theta]dotInit"}], 
    "}"}]}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"InitGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}]}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"t1", ",", 
      StyleBox[
       RowBox[{"{", 
        RowBox[{
        "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
         "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
         "\[Lambda]3ff0", ",", "\[Lambda]4ff0"}], "}"}],
       FontWeight->"Plain"]}], 
     StyleBox["}",
      FontWeight->"Plain"]}], 
    StyleBox["=",
     FontWeight->"Plain"], 
    StyleBox[
     RowBox[{"AbsoluteTiming", "[", 
      RowBox[{"ffCartPendulum", "[", 
       RowBox[{
       "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", "order",
         ",", "maxIter", ",", "maxError"}], "]"}], "]"}],
     FontWeight->"Plain"]}], 
   StyleBox[";",
    FontWeight->"Plain"]}], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1b", ",", "xdot1b", ",", "\[Theta]1b", ",", "\[Theta]dot1b", ",", 
       "u1b", ",", "J1"}], "}"}], "=", 
     RowBox[{"testSwingUp", "[", 
      RowBox[{"ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "u1a", ",", "A"}], 
      "]"}]}], ";"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"t2", ",", 
     StyleBox[
      RowBox[{"{", 
       RowBox[{
       "x1c", ",", "xdot1c", ",", "\[Theta]1c", ",", "\[Theta]dot1c", ",", 
        "u1c", ",", "J"}], "}"}],
      FontWeight->"Plain"]}], 
    StyleBox["}",
     FontWeight->"Plain"]}], 
   StyleBox["=",
    FontWeight->"Plain"], 
   RowBox[{
    StyleBox["AbsoluteTiming",
     FontWeight->"Plain"], "[", 
    StyleBox[
     RowBox[{"testWithFB", "[", 
      RowBox[{
      "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
       "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A"}], "]"}],
     FontWeight->"Plain"], 
    StyleBox["]",
     FontWeight->"Plain"]}]}], 
  StyleBox[";",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 RowBox[{"t1", "+", "t2"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"p1a", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Theta]1a", "[", "t", "]"}], ",", 
       RowBox[{"u1a", "[", "t", "]"}], ",", 
       RowBox[{"x1a", "[", "t", "]"}], ",", 
       RowBox[{"\[Theta]dot1a", "[", "t", "]"}], ",", 
       RowBox[{"xdot1a", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
     RowBox[{"Filling", "->", 
      RowBox[{"{", 
       RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Theta]1a\>\"", ",", "\"\<u1a\>\"", ",", "\"\<x1a\>\"", ",", 
        "\"\<\[Theta]dot1a\>\"", ",", "\"\<xdot1a\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<Feedforward solution\>\""}], ",", 
     RowBox[{"AspectRatio", "->", 
      RowBox[{"1", "/", "3"}]}], ",", 
     RowBox[{"ImageSize", "->", "400"}], ",", 
     RowBox[{"GridLines", "->", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], "]"}]}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{"p1b", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Theta]1b", "[", "t", "]"}], ",", 
       RowBox[{"u1a", "[", "t", "]"}], ",", 
       RowBox[{"x1b", "[", "t", "]"}], ",", 
       RowBox[{"\[Theta]dot1b", "[", "t", "]"}], ",", 
       RowBox[{"xdot1b", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
     RowBox[{"Filling", "->", 
      RowBox[{"{", 
       RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Theta]1b\>\"", ",", "\"\<u1b\>\"", ",", "\"\<x1b\>\"", ",", 
        "\"\<\[Theta]dot1b\>\"", ",", "\"\<xdot1b\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<Test on dynamics\>\""}], ",", 
     RowBox[{"AspectRatio", "->", 
      RowBox[{"1", "/", "3"}]}], ",", 
     RowBox[{"ImageSize", "->", "400"}], ",", 
     RowBox[{"GridLines", "->", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], "]"}]}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{"p1c", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1c", "[", "t", "]"}], ",", 
        RowBox[{"u1c", "[", "t", "]"}], ",", 
        RowBox[{"x1c", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1c", "[", "t", "]"}], ",", 
        RowBox[{"xdot1c", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1c\>\"", ",", "\"\<u1c\>\"", ",", "\"\<x1c\>\"", ",", 
         "\"\<\[Theta]dot1c\>\"", ",", "\"\<xdot1c\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<LQR feedback solution\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], "]"}]}],
   FontWeight->"Plain"], 
  StyleBox["\[IndentingNewLine]",
   FontWeight->"Plain"], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.863699832878002*^9, 3.8636998879424076`*^9}, {
   3.8636999587037973`*^9, 3.863699966845196*^9}, {3.86370068689312*^9, 
   3.863700742439372*^9}, {3.863700775571786*^9, 3.8637007771342835`*^9}, 
   3.863700945211579*^9, {3.863700998427576*^9, 3.8637010107976217`*^9}, {
   3.8637016473912125`*^9, 3.863701669091281*^9}, 3.863702035899074*^9, {
   3.863702126179226*^9, 3.863702160529252*^9}, 3.86370251869481*^9, {
   3.8637025705572357`*^9, 3.8637025888983755`*^9}, {3.8637026681560507`*^9, 
   3.8637026692896886`*^9}, {3.8637027081322765`*^9, 3.863702762285972*^9}, 
   3.8637029838601737`*^9, 3.8637033230088053`*^9, {3.863884225388322*^9, 
   3.8638842448491*^9}, {3.8638842916161537`*^9, 3.863884295082047*^9}, {
   3.863891061309538*^9, 3.863891063069975*^9}, {3.863891163269951*^9, 
   3.863891163428899*^9}, {3.8638912925906177`*^9, 3.8638912940581484`*^9}, {
   3.8638913677266035`*^9, 3.8638913686183195`*^9}, {3.8638926039804945`*^9, 
   3.8638926063767295`*^9}, {3.8648376392630434`*^9, 
   3.8648376724073963`*^9}, {3.864837714278944*^9, 3.864837730198832*^9}, {
   3.8648378000064077`*^9, 3.8648378125593743`*^9}, {3.8649192769420185`*^9, 
   3.8649193477849746`*^9}, {3.864919494855133*^9, 3.8649194949211097`*^9}, {
   3.8649195280303416`*^9, 3.8649195281572976`*^9}},
 CellLabel->
  "In[396]:=",ExpressionUUID->"c47d3c4e-60ca-4c63-8b5c-ced31cd89cdf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "1.62522982287586`", ",", "2.0593254218182047`", ",", 
   "1.8014428645249296`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8648376866338243`*^9, {3.864837721244707*^9, 3.8648377460817285`*^9}, {
   3.864837800602215*^9, 3.8648378151965265`*^9}, {3.864837882180011*^9, 
   3.8648379006680717`*^9}, {3.864917359659708*^9, 3.8649173767071624`*^9}, 
   3.864919300876232*^9, {3.864919337508316*^9, 3.8649193485657187`*^9}, {
   3.8649194958228164`*^9, 3.8649195287531037`*^9}, 3.864920239187001*^9, {
   3.864921249563326*^9, 3.8649212721359825`*^9}},
 CellLabel->
  "Out[406]=",ExpressionUUID->"4ec9965c-39d3-443b-8bc6-4c71d7992d87"],

Cell[BoxData["4.0698851`"], "Output",
 CellChangeTimes->{
  3.8648376866338243`*^9, {3.864837721244707*^9, 3.8648377460817285`*^9}, {
   3.864837800602215*^9, 3.8648378151965265`*^9}, {3.864837882180011*^9, 
   3.8648379006680717`*^9}, {3.864917359659708*^9, 3.8649173767071624`*^9}, 
   3.864919300876232*^9, {3.864919337508316*^9, 3.8649193485657187`*^9}, {
   3.8649194958228164`*^9, 3.8649195287531037`*^9}, 3.864920239187001*^9, {
   3.864921249563326*^9, 3.8649212762296515`*^9}},
 CellLabel->
  "Out[411]=",ExpressionUUID->"91698b6c-6f5e-47c4-9476-2af9b614fcef"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
3McNvXWVKO8ilJ/TMtK+HuVd7DQLWZY73YzyLlbnvQ0wuERDeRc2Dwrv7jeg
AcLHRcdvaD250wQIH7cru33F6GYVIHy8bHXGwSC52H/1cSLvwmYu8+WNxzOA
L8TabpjBAsWPvl0tYN6AxRfmqQ+Ps0IjUnnX2c0U7PWUTnXkNBusSmG1myG3
YPLXN08lsXNABn7PvmalY+6WPJmhZBJUkdl2tKyPjq0rfuexS4QTrtPpthf5
Qcf23S75cUWCC7qoNattT23F+nYtdO2U5oYjpp/0lOJpyLfvnUrXX/K5BuVP
bL/V0N7Q0wjmWrzcM18IwTMGjkcveVDBbG/Fe5ICGe4RX+XWV0oDhH8/P6Wr
XdVJAYR/a9zdLB20sR7lV/xoXB++Zksh+Df/pjlqeChg7PDyA+8L7k9asY/6
XX57KjmgufOHE17f6dj+Jn/vO/UkWBh78eq5Xjp22B7quTVxwnJfzjd3BOhY
0/YMIeMgISgoInf6SykFGCQf4hnjIkPePfXfo7NpwLkky7DpNhkqgvv3r72n
gl0q3tzreYXhjtzHUI6tERDerXK8R6OK78c/8icuPd10SdGYA941MWnws6Bj
m84q9VSak+CqtheFujN0bC699TLPAU5Ia6/t0YuhY2t8DZrXFAnBDYPJEmQe
/HzJ6Vsv202Gx0LltVbH08CIZLLtlTIyZNrW5YU3NYM/+fbLvkuGsxFzgMiP
2Lx/aZgfnAZEfkR2VWr4qogJ5M2nt9Iunuwrw4h+BBpN7QX5rbXY1W12K24f
ZYVhAmcbxEWasBA2U6alIxs0oudLLXtGxbzKP9JunmGHt1oedMuxt2K7zs+w
bvfkgPbXd+gcDqFjnM48rKuDSZB8p8KyHz/ehIsPl58N4ITn+89fY7rSMeMS
jfO29/D7dW3Al/bWFmw1/7fO1WHckBwt/pjpQ8WIfgjbVnF0r7FqQl4ddGxs
840VlSjf4RW2yb2bvx7lO1ipJM2vz29G+Q4Jt5cP9h+loXyH3d/NxIENDRB+
/XznZHrpryZA+PVjgeaRwK3VgPDr1CNNgSGur//Vr4l8h7dXuWPby2fAPku+
3IN0Ftj1sFv7ErkBi9F75Mj2ixX6dRyeEZhrxlq/PKor6WWDLjtqlloM0jDR
+YymkBF2GMCzyySvtxUrvgdP57GSoHH+w/V7OulY2k772SccnLCA3iPLU0fH
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
witz+HxNfPn/5H3/33//B2zu32c=
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{566, 2515, 495, 917, 791, 690, 614, 563, 533, 496, 
            918, 792, 691, 615, 564, 534, 497, 919, 793, 692, 616, 565, 535, 
            941, 815, 714, 638, 587, 967, 841, 740, 664, 498, 920, 794, 693, 
            998, 872, 617, 975, 849, 1026, 748, 1009, 883, 1039}}], 
           PolygonBox[CompressedData["
1:eJwV00dwTVEcB+CbQiSYwVZLosRa70RZ6URJjDIGMwyiJYYZXQgbdaV3W723
xIooEVFTGAzBRA/RfWfx5f/7nXvee7nn3ZcyJXvknNgoimLo6k9JYhSVUiQv
jYuify5uZyhNOWqtPbfklfyxb4fenLP6LLpx0/oyaxE79GE045jegdvyKv7a
t1NvwTl9Nt25rPelTN7ILfuW6zHs1IfTnON6R+7Iq/ln3y69Jef1cHPF8kiq
5R5ckdMplzdRJk+gVr7t9SvkWHbpz82pjJCvm4N4JbfghNyJYvmtOYs18kMz
kzrxUfRV/yrn0kSP9N1yMr+5oL82Z5DoerZ+Vx5FnP5e/ywvpJHeU78q9wvf
DRV6tZlNA9c36+XyRH7I383F4Xzc18rwnuy2/sKcFs5FvmEO5rXckpNyZ+7K
ecSwR0/hojyXXuFcvecqa/Hs0UeRTGy4h/AssTqcA3utZZBCHHutpXJJnkdv
7tm/xlpd9umjSSWefdZacVmeTx9K7c+zlsB+fQytOKV3oUReSx326625Ii+g
RM7gg9yXArk/lfIWKuRJ/JTv+5y1cj0O6GMpkodQJbfmtNyVe/I7czbr5Edm
FjVyjbko3J98wGzDH67qVeZMknyHC8NZyKPD2eof9S9yDo31dL1QHhB+X/pT
/b08l4b6Vr1SnhzORv+l18pLeOBe1oVnjYPWX5rTGRd+s+ZQ3shtOCN3o1TO
57E8nm9yAgflthTIOeH7kMfwSe7HNXkgz+Rt4Xfhs/PDPXJIz6Qt9ThkLY1C
OZf+4ezsX2+tPof1LNJIDP+LaxvCM88RfTztSOKJa2WUU0ElT3nGf4rxpfU=

            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwV0MtTj1EcB+CTTMN0VWlvF91o2cWKik2mDYtC0ViYydRGN39AdKPiP0gX
uexIO0UtstBU2FC5VaJhhjEu4zmLZ87n8z3v+3vP7+xruFTTtCOEkMAkL3aH
sEC2YTGNPCAnMYRBvngwSz/Eee6z13yALXvH9SvMUWh2h0z5IOe4R7bZDT57
/pjeySwFZuPskXt4xWF9iiK5gbtk6dfZ9P4tfY0q/SlVcgfPyNfHyJC7eUm5
/phCeZMT8nPq5Qky5X42/Pbf+E35LTflVSrlGSrl75ySl2iXL1rX4znkPOso
6fG8O0NolX/wU0/Sa+XXXNOT9aZ4Hyzr/6xlTFKgp9lvkbfjufQEvVqe56y+
S78gv4/3rf+Od0hfPI//0WH9xR979dY3DMnN1q+syBXWaSrkb5yUF2mTZzgg
j5AmX2WJUv0R+fIZxsnQe/nku0f1VqbZb3abVLmLRUr0h+TJpxkjXe/ho/eP
6Jd5Qq7ZMCnxLNQxGu/GrJsPnk+O36GWEVLj/cZ7sfeONVZZ4T+yXWRF
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1WW0lVUUBVC6ke6Q7u4O6S4BC1TEwKCxKAsUUFFERUFEURFFEBS7FQO7
u7u7c67hj/nW2gcY997vnv2oP23W+JkFCxQosNeP5AF+/CF3cCKj6EghClOE
ohSjOCU40L/5U97MSYymEyU5yJ/9JXdyMmPozGznFXlMP58jKcXBzv6WuziF
sXRhjvNKPK6v5ihKc4izf+QtnMo4ujLXeWWe0C/gaMowxdm/8lYWMp7TnDXg
VX0j3ZhnrsJe/UKOYYW5Je/p11OWqXlo7BaL8lp6Bz7VJ3C63pDX9CtZr/fm
B7078/WqPKlvkcNYo18iu3EvX+fZyvHM0FfKVtzJ++Yb5Sj2sDWvI/vzAL/k
2ciJeRbsYz403zW3hXmzHMRDLM7nlR25m8/M2+VY9tfPkI14Xd8qR7BJ3yD7
8KPegwV6NZ7SL+JSvTvf6MeySm/NB/oNlOMwcyFu15cwkTPNjXlDv4qeuZfm
6jytr+U4ynO4s8LcoS9lEr2owDTnRfLM8n0zmd5UpBKVqUJVqlGdGtTkCP+u
KHfl+8yO0IdaTHdeLM8qzya7QN/sgbMaPKNfzPHUzj13Vpx78tmyH/TLbjir
ybP57jmBOrnnzkrkHuhnZT+S5ia8qV9N/+yKuRbP5VmzTu/Bt/pMztXb8GHu
C5v0/fhVr5v90Etyn36NHMwyfY3sxOfZNZbpTXkr35scyWb9CtmX+/nJvCv3
Jfua18luytr5bng++yOH8wjrzJfJnnl9vjPvlBPy+4FZ5vNk23wHfGTeJkez
LfdCDuC37LWcxL7ZWVkq70m/Vg5hee6j7MwX+hSW6814O5+djXo/ftYHsFCv
wwt5n8zmfHM7PtZvoh4zzKWzd/rZTE2am/NO3gMDWWSuy4v65cyhfvbCWRke
1M/JnjKIBrnjzstmR/UV2RUG05BGNM4dy37zsL4y+8AQFud58JK+nrk0yR1z
Vi7fgb4qO8JQljirx8v6BubRNPfIWXn25D6xVu/Cl9mRvGe9Be/q1zGMpeb6
vJI7ks+r9+J7fT6r9fZ8kucox7A991oOzLPgd/NuObng//9PNTPPkhXyu4JH
83pyaD4752XnZNfsGV+Zd8hx+btMN29hOAtozgha0JJWtKYNbWlHe0bSgf8A
W0HS4Q==
           "]]}, Annotation[#, "Charting`Private`Tag$373714#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1mW0VVUYBdDLA6QRaQkJaSWVFpCQLkmRUkCQ7jBQpJSQEpBO6ZZORVRK
uru7u8W5hz/m+Nba+9w68cbL0KR9jXbRIpFI5ahIZLvQM3ok8lIeR1VSs9ha
PnbI3/HCceP1tKzS21CYf6x/Yy3CeL0aaViiv8NOuTf/Om6C/gar9bYUYYP+
Psfkoexw3Ld6NCbo1UnLr/q77JL78NJxE/V0rNHbsVuuwQ25KL/JJTkuD+OY
3JDH8k6v7yVHMVE/azbjQ3mrWYmL8hsslfOzW75qtqGvfMisR8wYkch9/b7c
jcR6RJ8kp+c5a/VLZkvi2G+v75FrEl2/qd+Vu5BIf0//XS4Vrg0n9Btme+Lb
H64flxvxRH5kfhHOj9/1XXhPJlk/Z34Wzou8zazMJTkdy+QC7JH7EY3JegbW
yR0oFs6r9+xtLQaT9ZqkJyr8Bnt76RPOA1Os1SID0ZliLSPr5Y4UZ5/j+1p7
hal6bTISg6nW3mSD3IkS7Hd8P2uxmKbX4U2W6wXZK/cnJtP0TPwmd2avXItb
8vtslEtzUh7BCbkxT+UDPqe/HJvpet3wfMhVuCxnYoVciH3yNbMt38uHzY95
ID8wu4ffJ083M/OC3/XLZiviuoZdwrmQa4dzq9/W78ldeU0vqf8hlwnPl35K
vyl3IIH+k35S/iScG/2Z/lj+koN+y/fhXuMX6+fN5nwUnlmzKlfkzKyUC7Nf
/oEjcn0eyrH4Rc7CRrlruB5yHe7Ipdgkf8BpeWR4Lnz2D+E3MkOvRxZiM8Na
Vv6Qu1E6nDvHD7AWj5n6x2QlTvgu9gaGe55Zen2yEZej9o5xnBOc5BSnwz0Z
JxI5Y57lHOe5wKBw7pjt9Q3ITjwu2htsPSFz9IbkID4zrWVjk9ydMuFZdvyP
1l5lrt6It1ilF+GAPIAEzNKz86fcgw/CfeD1Q8Kzzjy9MW+zWi8arp88kITM
1nPwl/xFuE/lutyVy/KnXJYz8i2zI6PkU+an4e+P/MT8Klxznzs03F88Y769
C2aLcN+7hz7Rd8jViKZf1W/LncK50XPqa+T3+JdD+nWzXbh+9geF6yI3CPe/
/kh/KPcgif6qPkd+i7/lK2brcM/KB8P9yT25HH/J5Tgrj+a03CQ8S/JVv2OY
nJgF+qfslKtzTc7FWrkYh+XBJGKu/jab5a8oz996ec7JP4fn2nsPD9+XhXoT
crNOL84R+UdeY56eky3y11QI58PrR1hLyiK9KXlIzHxrudgq96QiNxz/k7Vk
LNabkZck4Xm3N9J6cpbon5GPpOFvh3v8lv1R9lLwq7XmvEOycN3sjbaekqV6
C94lOXfs/Wz9dZbpn5OfFCywlptt8jdUYrNegfPyGO56/Rg9FcvD82N+Tkt5
l/khUa739fBZcufwrOgF9PVyCY7KQ0jJQj0P2+Vvo/7/3+SezxhrLTUr9FYU
5HXu23vAQx7xmCc85RnjvCYNKx3bmkKkYpG1vPwj96IKW/SKXJDHckZuGu5v
+an5dbiWvvtz7/sfwpo4jA==
           "]]}, Annotation[#, "Charting`Private`Tag$373714#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV02WAlFUUBuBBCRVb6Vy6U+nuFFhCOpZQalekW0ppTGwxUezCQJHu7u4G
MbAR4zk/nj3nPXfunW9n7iSlpCWnpkskElf9yZI+kXg8QyJRhO36efSiMVnJ
RnZykJNcPOG1RdkRe0mhCbl50rwYO+N19KYp75rV4aJ+EWPJw1NmxdkVe+lD
M94zq8ul2Ms48vK0WQl2x1768p3cjn/1S2nO+3I9vo+zGE8+njEryZ44i34s
k9vzX5xFCz6Q63M5zmK/PpXsTJA3qD24kfVyfubrS7E33ocd+ge4I6q8XO1A
Ip6LySwzP6oOIy+/MpOW5h+qDbjGD/IFdSKZMno++YA+jXRyDvUXZnCzPNH6
Rn3P+Fy4Kc5gajyz9Q3WT+hHcr2cpP7ObJKsPauWZp/+rDqO+fqd6oPcGVVe
od4fz8By+Zg6nHzcJ3+kNuTH+H84qH+InDwib1J7kZmNcgGe05dhfzwH/Vkp
d+Q6Vsit+FjfiJ/ifZhEQZ43K8uBOIsBtOYTs8b8HHuZTCFeMCvHwdjLQNpQ
mCIUpRjFKUFJSlGaMpTlRfvLcyjOYxDJlOMl8wocjtcxmLZ8ataEK/FsTKE8
L5tV5EjsJZV2fGbWNL7n2MtUKvCK2T0cjb2ksUruFN8tK+X2fK5vFncszmIa
m+WUuDNskiuyQH8vx+Jsdun7c1d8d/JqtTPpWSV3YLG+Ob/F+3BIP4RcPCpv
UXtzS9wFprHZ/KQ6igL8wZz4X8xfVStxlePyOXU8GdzVBfJu/YD4zXJ3fKc8
Fvfc+hDra/Rd+Cf2cJkp3GB9tfXj+hFxn+T88dzMirts7Qu1Rfwe9BfjnrJY
f1h9mNzxXvJWtQ+3skU+pY6mYHx+8mtqZU7E/8Me/UCyxDnyWrUrGVkjd+RL
fcv4LOI5mE4lXjerwsk4l6F04qv4nfFn7GUGlXnDrCqnYi/D6EwVqvKmtWqc
jtcynC58bdaKv+JsZlKNt8yqcyb2MoKuLDFrHd9T7GUW1VloVoOzsZe9+kFk
ZaS8Tu1GJtbK3fhG34a/9ZfUSSzRH1GHkofZ8ja1L7fFbz/uF1vNT6tj4l76
TgvFZ8LcuHNyDetv62vG+ZyTz6sT4vO3vlDepx9MQs6mXmE6meVR1tfru8cd
Yp3cnW/1yVyL52cONXnHrBbn430ZTQ9qUZs61KUe9WlAQxbZU5sLcQZj6MlS
s7Zxn+M9mct2uR+3s00+o46lcHx/zIu76dkbWfsfOOgKWw==
           "]]}, Annotation[#, "Charting`Private`Tag$373714#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1GWglVUQBdCLATbdDdKtdHdId3c3FhZtKzZ2gYWBolgoCgpid3d3d9fa
Pxaz5wDvfnfOfK/mtMXDFhUpFAq7/VG8aKEwu1ihsB/b5RMZSzdWOqvFq/Ll
HE4J5jjbnx3ySYyjOyWZ6/wAHpJPZjw9KEVpylCWcpSnAhWpRGWqUJVqzPNz
DuRh+RQm0JPqzHd+EDvlU5lIL1Y5q81r8hUcQQ0WOCvOLvk0JtGb1c4O5nX5
So6kJgudleAR+XQm04c1zurwhnwVR1GLRc5Ksls+gymcp2/J5/Kt9M189XV5
U76aozNbfWd+lO+lNov1pXhUPpNr5F78IU/lfLkVX8i3sUkezJ70y72o9XhL
vlsdw3p5o3oY/8rb1akszazULvk8ftLfp07gWbbqN6vDeIqiuRNm8GLm5++X
qKUzLx7T36mO4mnW6q9Ve/M4f+q3qZOYJl+gtubLfH91HJszM3UIe+WZs09q
fd6WN3Cj3J//5GNyf3JXfs7zUyc7qy+Tz5XPYjrr9G34Sr6d/tkvfQPeyaw5
lrrZH2dleUI+mxkMyM45a8i7+W4cR73sj7NyPCmfw0wGUj+74rx8ZiifyywG
0YCGNKIxTWhKs+yHf18hc8w+MZvB2WFnjXhPvo7jac5SZxV5JjvCHIZkh501
5n35ek6gRebmrFLuOffAXC7Ut+Vr+Q6GZqf1TfhAvoGb5AEUWJZ3Qe3GL/L9
mas8nGIcknmqlXlOvksdzbo8u9qHv+QH1MnMky9S2/GNvFUdz5bsujo082Xv
/J5hOi9kP/OuqE3zHvKh/h51bObBRv3N6sDcJ0XYkR3keZbnnVS7Z4f5Nd9F
nci2zEIdwT7sZCaH5u7VKvkZmV3mK/flb3k+F8vt+TbvBcNZq2/GR9ljbpEH
sQcr9OvVHvyWudAyd6yvmu+a+bCAS/Qd+C5zZUT2XN+cj3NPrKRV7txZtbyz
eSYWcqm+I9/n9wQjs+f6FnySebGK1ixzVp2X8rnZA7kf/8gPqlNyvyzSX6Z2
4ofcAaPyPmQX+DTfl9W0YbmzGryc52Exo2lLO9rTgY50ojNdWOH/1OSVfB5L
GJN3K/fCZ/Im1rBB35Pf86xskUeyL7uYle9FV3/3P8dc5GE=
           "]]}, Annotation[#, "Charting`Private`Tag$373714#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1GWYVVUUBuA7gMwMHdI5dIM00g1SMnTD0DU0JhYWpWCgKKGCRXen3YLS
3SDdzeC7f7yzvrX2Pve55+5zJi5hWHxiVCQSSfJnZ3Qk0jk2ErkWE4nMpD0F
mWJWmL/lCaTkGX161smjqMMu13cxuy7PogOFeMesCNvliUTzrD4D6+XR1GW3
67ua3ZBn05HCxPCceUY2yGOoxx77u5ndlOfQiSLE8rx5JjbKY6nPXvu7m92S
P6MzRUnFC+aZ2RTujQbss7+H2W35c7pQjNS8aP44m8O90JD99vc0uyN/QVeK
k4YD1npZuyvPpRslSMtBa4c4zBGOcozjnCDBdffsm0d3SpKOk9Z6W7svf0kP
SpGeceZZ2BJ+Oxpxyv4+Zg/kr+hJaTLwknlWtobfjsactr+v2UP5a3pRhoy8
bJ6NbeG3owln7O9nliR/QwJledesKDvkSWTiFX12vgu/JU2ZoX+CA/KHnPV5
/fWP5G/pHc5NX5XjcjmmysX4R54c9sl1OS9n5lU5B9/Ly9WnGBd+L7UmZ+SN
atuwJn+iluegvEZtxXR5kdqQX7is36J2CO8E//meA9RIuB/mW1+qNuE3+oTn
R63GT5zQr1Nb80e4Z/00tTg/8K9+pdqcKfJ8tR4X5M1q+/Dsya+pOcM14fzC
mcq1OCs341O5Aofkjzjnew7UR7FA35fyvKcvwc7wrpKF8fpc/BjOmuacd/0g
s2Qs1PejAll53Sx3uL9wtrTggv2DzZKzSN+fimTjorUh5ilYrB9AJbJzydpl
rnCVa1znBkPtf4wl9g2kMjm4aS3RPCVL9YOoQk7eMMvDz+F5oCW37B9mFs0y
/WCq8r6+JLvCc0su3tTnDWcffnNaMVNfkcPyx9z2ecP1MSzXDwn/A+QnOSlX
4wO5FLvlVWoLpsoL1PpclHPzlpyPX+UVajPGh3dQrR3uIzxz+k1qO/7iaf0s
tVI4M47o14Y5vzNDv1htFD6XK/qtake2c8f3H6HGhneFFdaXqU0ZKs9Vq3NK
Xq/Gh3sL76lamj3yarUl0+SFagMuyXl4W84f3ofwrIT/D3IdzsmtmS1X5mh4
B7nr+4zUp2KlPpHqTNeXYW94bsnLBH1cuM9w1sRzz/WjzFKzSj+MGuE90Jdl
Xzhr8jFRXyC8i+GsacN91482S8Nq/XDmyTU4LW9Q2/AnNcMzoJZjfzhn8jNJ
XzDsCWdKWx743DFmaVmjH0Et4nhoLYlHRPRRJCM5KRjrmnSslUdSmwJMNisU
noPwO9OOOfoqHAv/B1giN+aqvE3txI7wLun/B1auELM=
           "]]}, Annotation[#, "Charting`Private`Tag$373714#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"Feedforward solution\"", TraditionalForm], 
     PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1a\"", "\"u1a\"", "\"x1a\"", "\"\[Theta]dot1a\"", 
       "\"xdot1a\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8648376866338243`*^9, {3.864837721244707*^9, 3.8648377460817285`*^9}, {
   3.864837800602215*^9, 3.8648378151965265`*^9}, {3.864837882180011*^9, 
   3.8648379006680717`*^9}, {3.864917359659708*^9, 3.8649173767071624`*^9}, 
   3.864919300876232*^9, {3.864919337508316*^9, 3.8649193485657187`*^9}, {
   3.8649194958228164`*^9, 3.8649195287531037`*^9}, 3.864920239187001*^9, {
   3.864921249563326*^9, 3.864921276360609*^9}},
 CellLabel->
  "Out[412]=",ExpressionUUID->"be9a5958-43f8-4fa9-b189-d66ed1409675"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
pPP1miflv/12hOD/AXLbdc0=
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{499, 45, 428, 850, 724, 623, 547, 496, 466, 429, 851, 
            725, 624, 548, 497, 467, 430, 852, 726, 625, 549, 498, 468, 874, 
            748, 647, 571, 520, 900, 774, 673, 597, 431, 853, 727, 626, 931, 
            805, 550, 908, 782, 959, 681, 942, 816, 972}}], 
           PolygonBox[CompressedData["
1:eJwV1FdUjnEcB/C33CArs2Nc4ByOPQ+OFVk39g0ZRdzaWxlXFBpWKA6OjJO9
V1JIOAe3pEK4tvfI53/x6ff9ff/P89b79Fb7lEVTF0ZHIpEoBvnS3exJujy4
TiRS5HAaMTzTLdC9l7cwnBu66boKeQVd+KbLYIj+ln06DXiuW6j7IG8lnpu6
RN0LeSVd+a5L1f2V9zI+fD/dUF2xnEhDKnSLdB/lbYygSDdDVymvohuZ9sYU
yj+cp8n/5H1MCN/D3prL4edyPky+Lc/goNyeRvImsy5H5BeuWyx/Cq/PcbkL
I+VdZkvucN5+3uzH0/A83DfTrNJfN1ebBWYn7tPdnmU2oYST9rNmHx7z0/3r
zNrwXs08szDcx0MmhvdltuGKfMkcwDb3DQ+vqZvJIblDeC7yZrMeBXKl65bI
n8PPQQLFulm6ankNPfilyyReX2qfRROqdLfJIpsR4TnoZxNLta6E2fqX9rX0
5Lcuh5H6u/YkmvJSV0qS/pU9lV780W0nQX/PnkwzXumW6r7I2Yziji5Z91pO
o3c4s8dySv7rfL0cId8+iTy5LVflHc5HyWXyHJqTbq/PUfm182XyVzmHE3JX
Rsu7zVZckC+Y/cP7c/0csyb8/ZjrzKNmZ8rD7zq8jtk0PFtO28+ZfXkSPrvu
32BGhc8T+52fNHvwiMn2fLNdeDZcs182B7LTvaPDZ003l8NyR1rIGWYMx+Qa
1y2Xv8nbGUOuPY6L8j3nc+U38nr6huvszTgj1zrfKEdzwD4l/F3oxoT3KKfQ
kje6MlL0b+0b6Bf+IYVnpx+rfyDPoxVvdffJZVz4zOvmE8c7XTl72Ms+8shn
Pwf4D0atpSM=
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwV0TlPVFEYBuALA9JIpwUuIMSCRNEGFP0BOCAgoL9AEES2yq0TRAvtBpeG
HVFAjSYQg5DQGBNkQLbfwI5aqtDwnOLJ937vnTs5OTf3ZltNa2oURSlMcZYC
lhV/yPMw/GCV6lgUvdct8ZtcXQsrVHk2psuQL/OUHRr1i/pfnLI3s8w1/aju
kHyJJ2xzW/9TXya/Yp+Hul1djtzEEpW6Ed0NuZ90+2PS5WI62aJBt+B3pfJL
9nig29GNyJnyc7LlOyxSYX/n+ZScI/dwXe4jTe4gTf7MUbmLi3K++TacQ96k
Xp4P92UWMc6E/puZxWvi9lnzTLgPXtinzf/mfXPb+0nzPB/DufQz5mGecdL+
3TzNII32yXCHZnk4j/eLzS981WWb3dTI58wP9Moxs52Y/IkjcoILcgcb3LIn
/d8VuYt/3NNt6U6Eb8cCV3XDulS5iHbWqdPP6UvkBH+5q9vUHQ/finnKdG90
KXIhj1ijVv9Dv8GxcL8kKdUP6WZZJyuclTni4V50A/TTRy8Hyk1ijw==
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1HV81WUUB+DRMEBizagxRk2xC4NmxBScsE3QoSCOOQczQJTuUDAJBSVN
wAADLFAwUFBAULA7sbt9zoc/nn3POXeX/e77nkvWsNEFo6okJCTM8COygx9v
y6WU0ZNjqEo1qlODmtSiNrne845cxqX04ljqcKTX3pV3UE4ex9HZ/Hv5EJMY
TCJHmb8n7+QyenM8Xcx/kA8zmSHUpaP5+3I5FfThBLqa/yg3MIXzqcfR5h/I
FYyiL2eb/Se3MJ8T6Wb2k9zIVC6g0KwWL6oXUj/ORv+hXMno+Dv6+uxS96N/
HCpbxQIuVqewX30S3dU/y0fi86qbMU19oWzEHvUY2YYSdZGszQRe0lfKLKaz
SF8q05nCAf042Z7ZHBH3Ij+S18hVcV8yk6lUxueM32Mir+qvlK2rHN6PfP2A
2BOejfOTLbhBPUKm8ob6ZHqof5GPMp2L9I3Zqx5KsboOO9SLaRB7of9YruZy
zuIcs6o8p76RU2In9b/Kx2Jv46xoGHti/olcwxVxr5wa+2j+m3ycmfEsNIo9
Mf9U3hWfM+6KTjQmiWRSSCWNdDJiP7zvM3k3V8WZcBpN4k699rm8J+4tnp/T
yTP/XW5iFsPIjLMy/0Ley1gKOIPe5n/IzcxmOE3j85t/Ke/jas6N95hVY5v6
Js6kj/5P+QRz4u/pk3g9dpDz1Im8HGctW7FEPVJmcFDdLM5P/ZW8n3J1U8ap
S2QDJvFanIPMYSYD47lkdcazPb4bsmXsNjfrL5FpTObN+CyyHbPorO8r/5LX
yidlhWzO3DgLmcy+ODPZlhHqwbIur8T9y2xuU5fJJrylbh53rP5aro3vQeyj
viG71YMYqK7B8+pb6EI//d/yKebF8zPErB471bfTIvZAf0iui2enMP5Ns5q8
oL6VruTr/5FPcx2ltIxdMf9Grmc8RXSL74L5v/IZro97Iit2xfxb+QATKKY7
rWIPvPadfJCJcef0IJvW5NCGtrSjPR3Ijf3zn/H/87uluQ==
           "]]}, Annotation[#, "Charting`Private`Tag$373825#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1GW0FWUYBeDDpVMQREKlpUNKRJHu7u7uVkQQLDoF6e7uBilBSrobpUVE
AREBxedb/njWu989Z4Z75syQrkXXGl2iRSKRSlGRyBChcPRIZJtcl/ic03XW
PZCH8SFbdPV0F+TeZOWJbijv67+z1yMB53VddL/LwynKVl193UX5I7Lxl+5T
3T/ypKj//55hug902+X6JOSCrqvuD3kExdima6C7JH9MdkbaX2GJ/NTxfvK/
8mQqh3/Dnor14e9yvIi8Q27ATDkdieRBZhzmyhd9rpv8MFyfhXJWisvjzeTs
ZrV9tZmPo+F+OK+heVm/2exjzjPf5gdy2EeZidnJUvtK8x0O87fz+5svw3c1
p5hLwnkcoEr4XmZqNsjrzIKMcN6H4Zq6hsyS04f7Ig824zJPvuRz3eVH4e+g
BNt1jXRX5E/IyTPdSIrqd9kbkZjLuh2MYjTFwn3QNyYJV3Q7aay/au9LLp7r
xlBc/729Ca9yVbeLJvpr9k/JzQvdWEro99ibkpRruh66x/JoSrJb11T3k9yP
POGYPQnL5H8c/0yOMNVelSnyG2yUv3G8pLxXbkay8H7Y4zFf/snxnvKf8hgW
ydkoJX9rvs4aeY2ZP3w/n29m/hzeH7O/Od/MzL7wW4frmK+Ge8ty+yozL0fC
s+v8AWa08DwxzfGlZk4OUs0+1Xwz3Bs22deb7zLOuaXCs6Zrzmw5A6/JQ834
LJB/9rle8hN5LKWZYE/BWnmP483l6/Jn5A2fsydlhfzS8YFyFNPt1cN7oSsd
vqPcguRc1+2lhf6GfQD5iIR7py+j3y+35HVu6H5gAmXDM69rRQpu6vYxkUlM
ZgpTmcZ0crj0DHMms5jNHMqFe+carUnJLd1+5lLesUO6NqTitu4ALfU37QPJ
T7TwLusr6H+U25KaO7reur/Cs0QZDupa6W7Jn1OAqPAc6CuGd11uxxvc1X2k
eyqPoyyHdK11t+UvKBiubU/GSjl6uK4cnRnyMjMXNeRp5ltsljeYhcJv7nqV
wvOl22S2N+eYGcNzH54l+zAzAdtZaF9u5g73hl+c/3H4/0m/1RxvLjazh9+P
cvaJZsrw/LPOvtYswLFwv5zfxryj/5IFcpbwzIbvHJ5PVskxwveVYzBTrsl0
OQ1b5IWuU1k+KnfgLYbbE7JIvud4H/lZeL4oz2FdW91d+SsKETP8HbqYzJJr
hffa56qEv1fuSBp+1X2iex7eDypwRNcu3BP5a94jVrgf+qr643In0nJfd5T2
+nv2QRQmNkv01fQn5M6k4zfdMZZS3bGTui6k54HuODk948vMGo6f0nclA7/r
TrCcmo6d1nUjI3/oTrKCWo6d0XUnEw91p+ig/9U+mPeJE+6XLhaz5dqs9Lna
9rNyD+bKmXhbHmEmYgeL7SvMPOG355Hz+povwnNCRU7rOuruy0P4gLis0tfR
n5N7kpnHujOsZg1rWcd6NrCRTdR13nmf70UW/tSdpZP+N/tQihAv/Ha62MyR
6zBDTstWeaP5Xvgtw3vk/P8A3Jc4NQ==
           "]]}, Annotation[#, "Charting`Private`Tag$373825#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV02W4VUUYBtCDdId0KSDS3d0g3UiDdHeDKIpiIYqBiYB0d3d3d3dKSEnj
mh/r+d539t7n7nPPTIY2Pev1iBKJRNK9EYkcjBqJdIgeiTyMFon8Ql3eJhqH
XDvMEY5yjOOcoKNnHrnnV+qRgeh8Yj0Ri+XulOSk+ztZeyz/Rn0yEoNPrSdm
idyDUpxyf2dr/8m/04BMxGSk9SQslXtSmtPu72LtifwHDXmHcdYysyO8F7H4
TH+TZXIvyvC3no8j8rec8Xld9afynzRijl6Cc3Lm8L+S32Vn+A6skKtwS47N
53JSlstbzPr0lheZ5bgi7zdbUlaebObnNEf1XWYTbjBGX2vW4BL39MNmG25z
1vt2M59ZP26ONzeadcLf4X19rlky3Mt5fa/ZPHyH8BuaWdglbzcbMVJeab7H
P3IcRsnJWCH3YbFcnqtyOabIBTgmf8c579Vdfy7/RWOyhD1gLSu7w+9BXL7Q
k7NS7kt5znu+h7UX8gSakJV4fGk9BavkflTggvt7WnspT6Qp2YjPRdd6ufZK
nkQzspOAS65d5gpXucZ1bnCTW/xDb8+/DvuF5uQgIV9ZT8lquT8Vue3+PtYi
TNZbkJNEfG0tFWvkAVTijvv7WovCFL0luUjMN9ZSs1YeSGXuur+ftTeYqrci
dzgvejb2hD1IEkbraVgnD2KJXIFrchWmygU5Ln/PPZ/dX4/KNL018+RSXJDz
hHMmZ2evvCPsMUbJq8yq4b6wN/WDZutw5sLZMtNykvX6VrNBeA8G60vNimF/
cl0/YLYK+y/sQ32aWYgznNB3m025yVh9nVmTy/yrHzHbhuz7DDCjMd36JrMu
H8jzzdJclPOG8y7nYF/Yk6yWq3FHTsoYOR0b5CFUZbpeOHwv+Qfu+3sD9ejM
0NuQj/F6TvaH/UuycE709GyUh1KNB54fZC0GM/W25Cc5D10bbD0ms/R2FCAF
j1x7zH8McT0Ws623pyApw+9r7S02ycOozhP3D7UWmzl6BwqFM6vn4kDY46Ri
rP42m+UPqcEMvQin5B956vOG6XGYq3ekMKl55tpzXvCSV3zovrjMc70TRUjD
a9eGW4/HfL0zRUkb/s/WMrBFHk5NInxkLT4L5C4UY4Kem4Ph7JEuvKeeka3h
GWoxUy/KafknovCxnoCFclcWyGW4JBdnopyHQ+Gckj48q2diW3ieZXIlbsi1
mSUXC/tY3mM242d5vVmL+/JRs1043/IIM2HY8yzSN5v1uEo3faFZlnNh7+v7
zBbcooQ+ycwbfh8O6zvNxuGMMVpfY1YPZ4C7+qFwNsI+kX8232G7vM1syAh5
uVk5nD25DrPl4pyVx7FBrs0D+ZjZPpwhour/AyswI3c=
           "]]}, Annotation[#, "Charting`Private`Tag$373825#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV02WAVWUUBdA7wMzQKV0OjTTS3SGKioFKD9JpgAEqCCpKo4Ag3Y3diliA
HWCCgZ105zo/1ux9zot57777ZWSO6jYyJUmS7f4cSE2StulJ8kdakiymP43J
oIf9BfkC47iWg57fzv5PfQm30oRy9LRPeFEfTzcOeX57u7/0pQygKeU57LEO
HvtbX8ZAmlGBIx47yjGOc4KTnOI0ZzjLOc7T0fv843XLGURzKnLBY5089q++
gsG0oBK97FN4Sb+P60jobPefXMkQWlKZ3vZZeFm/n+tJ4Qq7/+UqhtKKKvSx
z8or+gPcQBa62B2QqxlGa0bYFWCHPp2q9DVn41V9Ag/qldir38hYvQSf6fOY
oldnv56VK/WDck28p16H4fFdZQZf620YqRdkp/64bMgM/WF5Gav5ybxQtmBz
7M39ZCpLec08W9ZnLRPNk2RlVrLP/KRsxka6m++SJVnO5+a5sjHrmW9+VNbg
F32RbBXXQ79KHpJrmaHXZUT8JrIc3+htGaUXYpc+k2pkmtN4Pa4nN3G3uRRf
xGckla7mw3JdXB/aMdruEj7QZ1E9zos5nTfi+3IzaVxtd0Suj89Be2rEebHP
zpv6ZG4hnWvsjsoN8X/oQE2yx7nz2DG5kdvoSC1ykJNc5CYPeclH/jh/Xndc
buJ2OlGbAfY52KY/RA8KxP1vd0Ju5o44B9RhoH1O3op7gp4UjPvf7qTcwp1x
DuLz2RXmw7gfqMsgcy6264/E99ar8IPei3v00nypL+AxvSa/6oXi3Oin5Nb4
HfXLGRNnSpbn2zhT8R31InykPyEbMSf+p6zGGn42PyVbsiXeyzxY5mYZb5vn
yAasY0pcI1mVVfwYn1E2ZxO9zffKMqxgd5xF2YSF+lRZi9/0xbJ13ENxfuVp
+XTcS3o9xuoTZAW+i/Mbv4NelI/jbFKPIeY8vBNnhD6MM5dlT3w/CtPdfEY+
E2ctzk38TnbF+CSuEfUZas7Lu3Ht6UuROBt2Z+WzcUaYaK7I9/p82ZQNdDWP
kcX5VJ9LA4aZ8/FeXAf6UTTOiN05+Vz89nFWaEgxilOCkpSiNGUoG2fF687L
5+Oax5mhEcPt8/O+Po1Mxpsv5St9Uez12vyuL5Ft2BrPMV8EpBfZqg==
           "]]}, Annotation[#, "Charting`Private`Tag$373825#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1HccTlUcx/EHyc6elV3IKqFSKHtlJisj0pKRSoWEkL23SMOKyh5R9mgY
2bJnUVGRGXr//vi8vuOe+9znnnvOyde2c8NOSRKJxMSkicT8FInE56kSiRyY
kTKRqIkUOCM3x6/8EJww7nu5PH6QO6EYFuhn6HJiplwLKfGr3AK/8UNx0rgf
5Ar4Ue6M4lion6nLhVlybaTCKf2Puor4Se6CElikn6W7G7PlOkiN0/qfdE9i
q/w6SmKxfrbuHsyRn0aaeD/9Vt1T2CZ3xYNYop+juxdfyHWRNt5Hv01XCdvl
N/AQluq/0OXGXLke0uE3/TLM1efBPF193IWz+uVYgW+wEqvwLb7DasxzT158
aXwDpMc5/Rp8qc+Hr3QNkQG/67frKmOH/CZKYa3+K11+fC03Qkb8od+hq4Kf
5bfwMNbpv9YVwHz5GWTCn/qfdVWxU+6G0livn68riAVyY2SO95efw1l+GM4b
t1Ouhl3y2yiDy/KruMJPwQbjFsj3YaH8LBKpvY+cBFli/mhLnOOHx3y73ke+
Cxfcv4tWx27Xcrk2nH8n1jXfg0+JwvxHtKz+Cu2A0rqrcl46NtZejIn3pwPk
cjQzLUanx1zQjZ63kL8fD8qLjM9Oh8hP0CZyEvpWPIsmjbmiE2Pt0azxXflW
+J2/VzeKHxFrhe/Lp8dfnrOb1sAe196NfeZ6TzkVHpGv0tdwjZ+KTe5ZJBfC
YrkpssVakVvjD34k/jZuj1wTe+XueBSb9YtjrrBEbhbvhn/0e3W1sE/ugcew
Rb9EVwRL5ebIgYtxdmCp/gEs07VATlyKcyH2ir4oluuei++Gf+MMiH0dezX2
X6zxWLexf+I7YIVxLXF3rKVYo7Gv9MXxja4V7olvrN+nq439ck+Uw87Yg7oS
WCm3jm8Q+0Nugz/5UTG3xu2X6+CA/B4exzW5I67z07Ar9rNcEqvkNkjqO3WT
k8U5EXuJPo/z/OjY265/IGeIb+f+A/Rp/BLv5doIvleci/x7fOqYY35qrDH9
ddoJZXQ35Hx0XJyF9OPYj/RD+XGaJeaGfhJ7ke6OsyfWLh6Sv41vRofK5enz
cjL6dqwxekfsTTopzrXY17Rt7Ds+t340PybOJL4fnzHmxjN+oXVx0LX3kdr1
XnKaeI58g3bGf/x07InzMP4TvpPbxr7EBbld7Ad+bNxn3EG5Hg7JvVEBe+Ms
1ZXCarldzAv+kl/A3/w4/GfcIbk+Dst9UBH74hzWPYw18gu4w39+R04e+52f
TCvR/LGH+Pb4hx+Pm+4/LDfAEbkvnsT+OMPjrMFauT0KxJ6SX8RFfgJuGXdE
boij8gdI41nvy2nj7Ij/TrvgJp/ftfH8J3wWfiCfNdY1/2msWb+3NtYI1sXe
0w+LZ/LJ+Xf5R+mdcV7QKbQyLRj7l38p5kK+JOehY+QKcY7JGWl/+TGaKfZx
rDtahd723KN8o/gW8rHYj3Sk3I9Py/fm08XZwE+LOY35o6/jVsyPfgL/KZ+V
H8Rni/3ht9fRsljv2ku40/XucopYp3G+0JfxLz8JCRyTn8Fxvj8qx3zLXXGb
/wwH/fb6WPPYIL+M++NMkl/BZX4ykuC43Bgn+AGogkPu3xBzio3yKygUZwFO
6J7FSf5DVMVh4zfGHGKT/CoKx97DSV0TnOIHohqOGL9JVw6b5Q4oEmsUp3RN
cZofhOo4avzmOAOwRX4ND8S3j/lwbUucJfhe7oiiMZc4rWuGM/xg1MBt+Q0k
8LmczZwP5rOjJP8ZrU6P+93/AbjwZLE=
           "]]}, Annotation[#, "Charting`Private`Tag$373825#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"Test on dynamics\"", TraditionalForm], 
     PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1b\"", "\"u1b\"", "\"x1b\"", "\"\[Theta]dot1b\"", 
       "\"xdot1b\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8648376866338243`*^9, {3.864837721244707*^9, 3.8648377460817285`*^9}, {
   3.864837800602215*^9, 3.8648378151965265`*^9}, {3.864837882180011*^9, 
   3.8648379006680717`*^9}, {3.864917359659708*^9, 3.8649173767071624`*^9}, 
   3.864919300876232*^9, {3.864919337508316*^9, 3.8649193485657187`*^9}, {
   3.8649194958228164`*^9, 3.8649195287531037`*^9}, 3.864920239187001*^9, {
   3.864921249563326*^9, 3.864921276487567*^9}},
 CellLabel->
  "Out[413]=",ExpressionUUID->"15175767-c350-4970-9295-319e48587d22"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
A9ZHuWhn4fcjPJuRPuOJbSkDrF8jYdb/ogE4KoW0FI/Vo3MLl94aG/0FmiH3
rNZw1qF3Llb1fGpTQE8u/Nb6VCbaXqTvHqs6DSrzv1OC8fMSnm0k5OHATA7O
JzsWncyX/PCNDrtyGO4PCa+mssNi4razB8qc+KOayNME/PVt1neeq0NWj+7S
q4Knwfhcl+HyLBMRfi0itLnyFK6fhF/rdRsQCdKcR3cvZpiSGK0gaqzIyZmf
jmSp3XIy4Uwg2+ShwoXrZW/+/ov9e/nh8Y9yXRdyGSA0vuzX+aVmMOFzxipj
Fx1NZT1ec34N/rzDerPlMSYysjxkJjBHgVfbT0nN4/hySb+XyxVsACLD1f36
rxvQZcrrpfTONsDeFKxtnUtHV25q7h0XmwY2OpmgB/cThF9z11h4uOcL3t9U
nH3Iwt4MHtMY2f6xeP+dW3JDpoECjx+57GmC84/waiE/dFelBy8g651yqQYD
f4DY+L6+2BN0VJQnlP60iQm6Z42rRHG+PHUHaz5PtwDGfsu/wRx05Hc94+33
i0ywbZ2+ycc5JnorUmS8KM4POz1/HP5XxACLa2wLz+tPg1Fh6oDzPyYivJrk
21wx0g8GIDxaPJ9M/+6NHojwaKWMuSAvdvY8pX8mTBEGAvvT9r2gmE6jmqNC
oVUu1cBl2m7JNbYbueukJ9bcbAR5nj4abwbr0LEWrzixde3AnwaFYXAdmn/m
9O3PuW6wIa5D+o7FX5Tw6JpJ55F+UHzpcffbtF5EeLey6LGvana4vvzn3YpD
g0K2GU8gwrsF23Lprno4hQjv1sbc138X71cI71aTLjpkgusF4d1oydsDT1vj
9/3Pu603lwwPE5xChHf75nzRCh2bQIRfO+Pclack1AcIvxbBr+23oWIQEH7t
rhfYc37jKCD8WuIv6yZ3DQYg/JqOXUXRhwIGIPya/GH7H7e9cb/4n197KPlO
U5w+Cgi/tqQaPZr4YRDsrNtfI35BEG61ybn4GHWBF9I/4ubrBaHknbbn44L1
gPBtkWwiyVpOrxDh2wRLEt/bD7ciwrd10FzOMK+PIsK32bmqLjbazCHCtw1c
MhPPLfiMCN+GTDRdmLmJiPBtX8TVmEJTsYjwbUGnH4zYHHiNCN8mG2LkpDvx
ChGeLUh6Wm9ToBfyDg0uC1BKBs2ulrdlzywj4ajrDNq9UvBm0RrZD43i/VS4
w/pbdODZvebedFIrOpD6rGG7biugC38YzWPD+wN9jRBe9U7QbSJU99q+CYlM
necfTxgFpRc1Yrp6GIjwckaP7/hm+E4iwst5/FrFxabDRISXU74V3miP+0XC
yyXnn1VbX8lEhJercunObaqZQoR/uzOacuF64DAg/Ntsrdi5Kw5jgPBvN+xE
uSwDGYDwb2rHOtxf4PgS/k2vPOHGMVEGIPzb/UHt+7ZsI2CL6I3Rdpog1H2z
bZeudx8g/NvQe+WDIaunEOHfbK9fXT7hkYIIvybrcTrMNPIhqvd9lvFiTyHQ
sXiUPZg5gRTl6x/ddq4BczEX94qs7kAmy9HwwZVmoD+/MVzfgY6Kw0zW+ct3
AJ6Y7HOJSg2ouGey79+fCfBn2vl81dgUcnxmQcqanAI7p+OM9/bj+vGfjxO2
OrdOcYiJCO92uGzXpCWen4R3E76QAYJvMADh3a4qtrHE4fWK8G6+pfdjWc4z
gMgG7QeqTgJQXk3RSGNhBBDe7U3azektJqno1Ecg9yqnApj1mh02ODmABocN
rpTZ1wPLhJrZ6YhGtMn09s22Q23ArjFuXAK/D327Z3v8yCSgmwf/eu3PRO2a
MptPjzPB5YSt61b6BcK/hWiusvB9y0SEZ8vneXrvfAoDEJ4tPXdt1aePDGCl
zX7tuYoAzJj/Krr8YgwQvm3aMsXgYtY0IrxafqfbYys1T8S2d4oife83CPu1
mHSsqBPZy8gyt5o3gTzHaM3fvHXoqRrzil5cOxAQUrA9ebweNf5Ru38qfQp4
PGKNFmxiIttu52drP02DkO48q3JcbwnPVqf7TK4N19dyfsex4ip+OBSXl+Rt
h+fPf76N1LM/IjVvHuUs3ht0dKwDYycirj271YxUfFilvY7/AQ/844rlNtDR
KQMjqe+Jk8D451c1T1smOhDIjBpMYYJCeqHRC1x/Yx6WumfHz4B843s3fnxl
IsK3wSTfDrlYvD/8z7d1mZaLPspmAN1Gmk/jxRbw2G0+64UEHVH2hPqu3cEE
2TpmN9lxv+O9cwPJWnYGpHptvRz1B/cn/3m1FrT7ST9+H/E/oHGtXQNQ8WIV
VBNvQGJw5Osu+BdAI2mDsUk6Osf2LuqF0hTQ76p7OP4Jz7+xM5+zFKeBFjy1
bgk/L+HVvAwncxq/MQAporr8znO8369IXz8TgfPtP4/20eFt2gdfD3Rnt83J
+0ONwNDtpP5G+zpkKVA9zO03DVgUVJ7M4PpH+LR/A237UooZgPBpp+rDbluL
zqO90YdcW6pbQXnCWVc1vH+/rdF2cbc/Ewz6Ksla4fpoOEJtSVLlhwyeimQP
vL++OHSxV76tGbhSs6q4IR1pdrrrWFKZYDWlR95nlInqA0X6a6ZwfyJOT1HF
+cHWUxUxOV4PxHbZRbH+bkDrzioLPy1oAyIvb0pNfsT9fai6FbvgNHCIkmgX
w/OZ8GkL9T4fRjMZwFKwJ7yuuwkkRvgPUbPoKLA/ZLS3hgK31u+8rYivT3i0
NImQxM9WC0jBOadUufwP6O05+nx5Px0JDZG7In8zQcngwrsu3I8cK6pWetjQ
AuSZFzL0uOio1e9zTfUZ3E/oFxyJx/2VuGZQR64IPzxjOH13ZbyOHLKctDw1
DdjCKsWEcf9EeLQTDsd2UvMYgPBmmf3NM0pqHgi+/DrtlkCBP52D84/gfiNv
i0XSI/9WYNkvpn8Q9ycC/jVfDDyYgOeg+W3uZSZqc3SlNkQ3A5PoKfaP5/H6
NZA5cH6YAsUEz8g8w+93aGR7mSzrNCAVCVxd+f/oQw1VhlU5BXZNwYY3uB8j
vJngYjnLPG0BpbL9ZbY++wPKnhldYlOio/eAVbPwBxPYRWpu18XvX31i0lAh
rAW83UNhBArQEU/wrq79FH64WZJXYBD3k53hhqdfwmmQdnqfohSejyZ9dyad
vlKgIqm6oROf/0KTOaXE/wcojEi/eC5MR239A4sCb5igXfgzLRSPT/0V1a8e
Ei3gzd0zHJfl6agf3Oo9vkSBuu5bj3zEzyt84DBf23rcH0cMf4td+b0pYGb4
SgsF7u4sjH+M35fwZtZJzVL0HwvoTrDYo9sdTCDzrn9oH37/UvVP7M20VlB5
zIs/D++vCU8mcMX4+jEBXEz+82Qs6Ze4Cmqe7SM8WZscxVeuvAQQniy59ZPJ
iEMDIDyZlIeN4tlf7YDwZK7SW+Xfvu4BhCdbNn4ql54wCAhPZpe7VFDBNwYI
T+ZZQPqnnDQOCE/WrMvut9l2EhCezHf55Jc1aAoQngzNX7ObQUxAeLIHbjKy
bYenAeHJPrF9/bBsNQ0IT7bJxtP9huw0IDzZ7TJj6TMvmYDwZPFKVo0PX0wB
wpN9Y8w3Re6fBIQn6z/sda/z1zggPFmX+JltliQGIDxZmbyFX535MCA8mXr7
6uLDGv2A8GSFFoqnn5G6AeHJ3mxzDrxIa/+fJ3NIu3TIu6Lhf57MNuD6j6hz
1f/zZEWSvwwMuQv+58k+WdiNL+bH/8+TZZpQCuIsYxHhyba3Oj8pvvYdEZ7s
gKizztacIkR4slNWRbwJq8oR4cnombdUFagViPBkiepmtl5hPxHhyfbdrVJp
JZUhwpO9z2wQpCkXIsKT1S5EX/a/n4MIT7bmq/EH7db3//NkuiEdrRnPjP/n
yU5Eo+fLbbGA8GQ+46+2uEqmAMKTqVade2cxlwIIT9ZqH+OddzwVEJ7MZCgw
3PZyKiA8WdOu0wIH96QCwpOlBhqfu9yfAghPZvV/TN13PNXf48Bx66IoXFs0
lWgSqcg5IbRQRFaDMkIhpGxKw8iKkiQhyQ5J8Q6FrGSPi6sykj2uEfV7fx+P
zzl+f34ePeLe9zijz/PxOsmv9j3wyAbIkxXSMh3eLGQB5Mmy9H536ZzJAsiT
HTM7KtR2IRMgT1a06hfr9fp0gDxZxuaZ9RGRBQB5r0T9XLv4R5MAeS9W2ctW
sxunAfJeE8GOdZ9PzADkvQjJXSIBvAyAvBdlxdmA2ksMgLzXRAF3gTO5z0Le
Sz/RR9tzcAYg7/WNyDvPKz4DUG/spyWH7cmpKYB6Y1djzUxcQycB8mC7dwym
5BuoYQ92NmV4lM08l0AeTDvFlS4WUEogD/ZODz4HWysJ5MHUZfpz0y5UE8iD
VZlek/y5toZAHmyydfXuqw+qCOTBCrxaHim3lxPIgzl9k+HpNykhkP9Kjtr8
4652LPZf1ZOGCQ03HgLkvwJ1AqxCTqQD5L9YTt1N2JGfDZD/ChcoumCwIwcg
/8XaedgrlnwekP+y8m1tXqebA5D/mti+OFglmAOQ/3JaiLEazssGqDem8EDY
7LhKNkAe7GWQRKdubAZAHsxflz22guMVQF4r/tr2U1skJwHyWkzr1n3Rq5kC
yGttzVAqmVkxA5DXWr+HKmz5ewYgr+Wir8HaZMQAyGstKTVJPSLvP/Javgot
N7ZzMwDyWs0CO1nDjWYA6o35Sma90VOfBqg3JpTCTtT8ngTIc1HVfT2WEqOw
56pdzcn1uieDQJ7LaHD8UWTmRwJ5LsG38+Xr2SoI5LkWmamxqpVVBPJcYqe/
BjhsqyGQ59rNFdL1VbKaQJ6r7nhrrS5TJYE8V99t12mWb6UE8lvy96SkBGcT
sd+qOLXj2FnBWwD5rcRsU6Xf118B5LfeWd+2nAnKBshvPZh7yjJN3j/ktzbZ
PoqXMcwByG/tVgxxfE3+N/JbohT95ratOQD5LdetHsGr68n7+19v7En1nnUb
z2YD5Lmm+Fmfjf7LAMhfwbjZ2+c4pgDyV0wcpkuj16YB8lflfX8Pu96fAchf
Xfm6PdZwFwMgf0Woh3xrIecf5K+aV645ma3OAKg/VnW/ksmbnL9QfyxWY2r8
T9s0QD7r5Xo708wV7wjksxa1n1bKKnwikM8KuK0yu2PrFwL5LJd1PI3DX6sJ
5LOuVrFkrhytJpDP6q7d+Nqy4wuBfBZx8eLPtxGfCdQf+ypz7VcVVzz2WhPP
/9yX2JgFkNcy+ZomoNKRDVB/7M6TVQLtIAeg/tjFyyEsJ87mANQf+5f8KXTy
cA5A/bGNgz1MkCkHIO9VGFA9tVYxAyDv9UgqyP/A4ccAeaz9DyW8WgcmAPJY
65d8jYbjpgDyWCpBlZbWfdMAeSzn20+vu7WQ9+E/j3U7NU7r8UkGQB4r8Hz9
+0QbBkAeK+/xioTFNQyAPNZ79/R1O1zJ9/O//tjz25JXV9hOA9Qf8zyZFrZV
ZAogr1XCvmbnw6V47LWsDJ10p/NfEchryXx7ePeuLUEgr3Xinmbf44vlBPJa
Fv/qrIxtqwjktRSruhbHNtUQyGspWn1z0rGoJpDX8kh9ZV9+hxyP//NaZg+T
/sreKiOQz3p5TERz0SoF+6w6JZUOUegAkM/qch5g3636EiCfpbVShbhgmQ2Q
z4o4UHb/DGcOQD7rWev7nXOncgDyWS5FPgdsjHMA8lnn/HNDL8nmAOSzPr+z
j3KkZQPUH3MmvnLfsc8GyGuxtd9cWiObCZCvyp5dUHpfPwmQr3I5wPNB5vg0
QL7qZPlKcVb7GYB8las19U4Bue5FvkpekMvgAXk/ka9a9/W96CUdBkA9MunR
Y6uSm2YA6pHVOZ6+q/BnGiB/JXBT0PU4kU8gf+Xb9fftM/MyAvmrvKUvj0rS
Kgnkr5w+Pj+yO66aQP7quud4xuzKGgL5q/S7FKO6fVUE8ldsJqpXJQ+UE6hH
JnzpQ71CXwz2WDbQsO1+fwZAHkuVsvpxS2U2QD0y2BqvtUsxB6AemVHg1Ue/
zHIA6pFl7xg6anIsB6Ae2aLvta+nuHIA8lw5c3l3Bm0yAPJXgdOf/hF/ZwDy
Vwsrep4+OM8AqE82naqgTTtH7tP+65OlT34sYfozgz2WYYinUnZMBYE8li3n
R4mzYtUE8lglohX1H6RrCOSxzr6KtNjcXUWgHtmVL7Eb2j1eY581fWTLtwMJ
2QD1yE7dq3tyeGMOQD2y5uOxPOfI5w31yE623udW1ifHm/88FtfOl78slBkA
eSxDJZWGJDsGQD2yLdwPLcz2MQDyWb+Dn856xHwhkM+a/aeo/YtBjo//+SxC
lZIvV1lNIJ81WpuQczM7C6D+WIPWCQFTTfL6/9cfSyLUT9eS9wP1x+IWyit+
keMh8lx/Zz90zbJmAOS5hqcO6jFfugeQt1KeF7+068sEQN4qpXdGO+/OFEDe
6rKaadmNhmmAvBXNYa3x5Wryef7PW/Gc39z6+zgDIG+V9MlPmZOcb5C3yl6d
IX9hEwMgb7XfNqV41H8GoP6Y7cfXtaOe0wD1x/hz+I2Zdk4B5LFGJcZNObpe
YI91tEqkba/gSwJ5LOX53SfuXi4mkMfiavw84clXTiCP5TvB0Oog3wfksTL7
ns2/Fa8hkMe6zCpEdfWuJpDHCvZsYrpQWUkgj3WS2Or5rbOMQP6qZXqVSNOG
VOyvmny+t7cc1AXIX+lui5PnE0oGyF9dKDw/2KORDZC/uvxKfCM3cw5A/sow
Xs/Fk1wfIn9lfv0a2y2THID8FfVQyjFbhRyA/JU1I0HO9Xs2QP2xtdvSfgq5
ZAPksYpBt8vdI5kA+SmJ+6XbaLmTAPmpvXss8osVpwHyU41Bvo+ems0A5Kfy
9p/6+E2EAZCfSsvmbu6yYgDkp0Qu7E3foM8AqEdWFOc88L57BqAembVR0/av
XDMA+SoHcj/FHJFHIF+VXpKrEjNTSiBf1Slj9jnBtpJAvurWw/5kTd9qAvkq
l7UblHiEagjkqyavC9FFL1URyFcdDzTIena/nEA9sveSMTuM9j7C3qrayN9K
eUMGQN7KpGrmWyqRDVCP7Ph8+yEbuRyAemRW/KWvz5PvE+qRfew+caaB3O+h
Hpnwo+vuCbzkev8/r+W/8rygtH8GQL7KLIPz9uGZGYB8FZHS+/SCGQOgPtnc
lMTwmDkDoD4Zpe15QwkrA3ur9+y7Q+/qVhDIW5l/t/73arKKQN6qYGHrkQ/k
+hd5qxTgvsqLpZpAPbJ6qZVHc3xSsb+SOFW5WBpN7j//65HxPvzpdlicnE//
65FJHfPf/PNMDkA9srtVJUkrDHIA8lbusmG8vHsZAHmr40U8R+3J8Q31yJiN
vMXfqzAA8leBgQ6Pbph/IZC/UlU6HFz6s5pA/iokNi/mAK2aQP5KQ9VVrN0+
C6D+2Pmbj34Vq+UA1B8jpPdslybXc6g/ltUkNsxM/jnyWt9bNnZFSWQA5K08
T5rF959mANQj+3p3S1gT+fwif2Wve3NB6kkVgfyV9Y7UvNatNcRPPkep27a8
cKfe5SGhw9UE8li3duxw+eqZDVCPLNpY4Ins6RyAemSO9gYt643I9/c/b1Ul
dVn1+2UGQH2yLoND7uAoA3urtM+8glYF1YQxk/uWlO28sCH55sKzpWoC9cf0
++E39qeZINd+SLv9gwAcd30b+EopB6AeWeeNZyL7yOuBPFb5ntHdZy0YAPXI
9jk8+WhmygBB/YyKJW5eaOLynuq8uYZAvTHp16+UYsnxBfXGLq7yB2rk+urD
nqs5hgfmwJsvbd99yPuL/JWCldN6c3ZyPhX7d+vUcV44K3Jzfia7mkC9sXS2
/Jefh7MATdkghbdHAMorb4jNPpoDUH9sW/XigQPk+4T81r7SS/aqQ+kA+S0O
qbW/lFxuAOSrHFXEX71/NwGQr8ph0laad58CyFe99lR+0VY5DZCvOmfN5VX0
eQYgX+UcIrfSkbzeyFc94J4QDyPnI+Srfu/Kuzy5hQGQr8oRdVNLI8c91Bvb
auj2Re3ONEC9sZBLrvYt+6YA8lc7WRer5XSSsL9ibJR/xFGSRCB/1ejusQsM
FhHIX+30OfpYbOAzgfxV2xL7pei1VQTyV2v0mawPitQQyF99EeuIKwmqJpC/
6hsZW/o+QO5n//NX/6jtOus4PhHIW2V5Kbj//ZuKvRVvs9/YnzyIvdVzR9Wq
HvckgLwVrV3MSUo+GyBvVXHTsfDwUjZA3spLvEJPSicHIG8lMRO9jsk0ByBv
ZeF67K0ZuR5E3spi37SofR85nv7XG0tIN2NrccsGyF8pc3n8enM6EyAvlWrf
0vAleRIgL2Uex+JguWMaIC/VH7M0S5wmx9H/vFR9x9+7BQIMgLwUdFm832vJ
AMhLaagb2Z4xYADUHzNdbS378scMQP2xSNEC+gL/DECeani+LkHkTy6BPJWV
p8kz6eJSAnmq4rVjqfuPVhLIU0nVKHjXO1YTyFOFnXSRKRWrIZCnevXzT5T/
zSoCeSpmQ19fmZxyAvXHapaaq0vao7CvuqNVrirzLh0gX8Vz5cd1RmE2QP2x
map2r1+7yP3pf/2xN9/NV7KT7w/qj/3J1j75VzsHoP4Y5ZnECyX+HIB8Fvea
dyIfH2QA5Kme7j9gZz4+A5Cnyi8oLU82YQDUI7Nedcnz5EUGQD2ynjtr/jBz
MrCvujG2zy1WpoJAvuqUFJFf01VFIF+1c0fWSA85HyFfpRJoyDPIX02g/tjp
538mOpdeYW91PrP6j2V4NkD9scNxggtbRHMA6o+JnChS5yHnI9Qfez08uppO
zkfIV+ln7LH9KMcAyFddZPyu2UGOV6g/tsm0bFfZIQZA3spm3eOS2MNfCOSt
0vsXnqV3VBPIW31Y61hn01dNIG/1pFL024JWFkC9MYP16ZLNh8jP819vTPaL
xiZVcvxFvbGh4qS93uo5APks2XCuWjOZDIB8FVtj9Ey1HgOg/pja5GqFKmsG
QN5q4Pvc3Wj/KgJ5K9sHxtXpW2oIVqBd/8KKF9pJHN7rol9NIH/1tqbx5Npr
2QD1x+6YbGGSIPcjqD+2b0Qkp4qcj5CvMr5x8Ik6OR+hHtnZ3EGLHnK9jnyV
+bxp7/PX1cR6z9SOnK28kM24MCuCrYZAvbGoEhvnVLVM8HXqg0V4gQCsv8fa
4LI/B6D+2Jn1DSIi5PVA/krgsnQDC7m+Qf2xa+7yZ2XOMsApiy0enCt4oWj7
0xu9UjUE6oupKAjpUsj5CPXF5J0GWA7r5YB3R8R+1MrMgVWc3JzPyPuLvNW3
V74X//ytJsajdu430+KFa/zkyoyLqgnUF6PJPqrbWZ8FZku3Fn3pEIAPVgp8
4DmSA1BvrMy0IPE++T4hr+VaJTe8bjYdJGbFSP0LnAOKQdPCF8nrJR7Awj1Q
Sj4viZ/WxK2vIZDPyvxgJxlvmA1QX2x7irHpIrk/fLL5yxfbB7PgGy3LtpS8
v2muK9Qq1/NC7eK7CdW8NQT3lh1VloqC8G/EiEca+fv9mzfoSPDPAoq4UQgb
ud9FvbFNjVp+1y4wQLfp7Z8SzLyQqkc0U8j3K619p9BXQUEYXJt97hV5f9+4
OKgXcs0B+a9q+x6S18d+zaETH314IF+hyodto9UE6osRAgMjWaFZAPXFxogF
eRbyfjWEaY5f+ToHBFkiu8rI8XT4WcDlsO88UKdLachepoZAfutR0Me8KwHZ
4GWtOEdE7SyINyzUsSbnU+Xj2xPltAShS7t5zhHy55XbVPBP8fLCNLGtPc4b
awjavx3jMVvIP2+mD28i549iiU++vUfmwN+lUdtj5OfNqiA00hJ4IEOIP1Vi
VQ2B+mI+K3+/UOTIBqgvRqi820Uj/z7yXLrGOg7nutIB8lw/dQVLQjxtAPJW
FyK9x+azJwDyVu51o0L8rlMAeSsuzc3JS2XTAHmrTPnkp12l5Pzwn7faeKsh
VuYIAyBvNayYo1NNfl/kraKKAgtzyH0/8lbqyvbSLCEzAPXFgt246vsDpwHq
i8nJ98wrqUwB5LFYnonK/ORMxh7rw4uL7eJCSQTyWOb3BomU5CICeayKMtX0
N98+E8hj+d++dViBr4pAHsu7sMeyUrCGQB7rx7a3hxUiqgnksW525pU4zFYS
yGN9FB1SSxL/RCB/FZu2lzfe/jX2V22TpVMNufrYX8UZXTvzaUcSQP5K7cap
Dbwy5H7iP381FfLR2vhPNkD+ashvD8WVnJ+QvwqJ1G7YT94/5K/4s50qTu3L
Achfbbyml9HXnw1QX0xkX7Tpm5vZAHmsnwerfpWbZALkpyykb/17+2wSID8l
4jFRKrt1GiA/ZfW37lr5yRmA/NSdT23XE6gMgPwURcrRx5h83pGfYhdopNsY
MgDqjbmPhfYL9M8A1BvrZc6w5hSZAchXbRQqkcjNyCWQr+K6Av4qJJQSyFc5
iT8v0d5fSSBfVZOhvavJpppAvmp/TM3RPvEaAvmqNie4e8XtKgL5Kg+BX3ml
n8sJ1Btz1vvFJi8Thb2VzaTyqxr/dIC8FeeunLjIgmyAemP8ojVmCTtzAOqN
SX/Q39RIXn/UG9slJ2MRSq7vUG8sWdva/5ZADkBey9J7XnVFFLmf+s9XGWtv
tRkYmQHIV0VG/jb/aEyup//rj50xNN49R64fUH/sz2LSuOhKBvZWGXYVDxyE
KwjkrdL256lJNFYRyFtZ+518VkiOb8hbHQwvVLcTryZQb+zPt/scGu9fYX9l
Wj/Rl/WAXG/+1xt7OP+aJ1Q4B6De2NpdP4bjDHMA6o0d8lHbqEn+N/JW3uVU
aR5Zcnz+z1uNrL4HKOR4hHpjfVqF3gfVGAD5qx1ybI9n934hkL+SUwp5a95c
TSB/JQ55eWp+VRPIX9Uqsz2qVsgCqC+WU/vDqh3mANQXqw86a/i/8RL1xQ5W
V208cJhc3/3ntZaUfcSI3RkAeSu20KRneacYAPXGXhsM0w7YMADyV9e3PQgO
uV5FIH919PNdiwvkfi+8+YPkm0u88ECuZNekSTWBPJb2ZSZeZvtsgHpjOetX
xQeR8y3qjb08+/vCGnI+Q96qf13r8DD5+1B/TCFoW8BmbQb2VmXJpS/+JlYT
/kql8gVbeOGGvpVprRw1BOqL7Wq+vClcMBPQ9m4ZvZIvAJ9PGf7SJ99/1BvL
X2ea+r/5CHms48d59xwn5z/UG5Noqk1jJ+fHvA0qLas4eOFaldO2veR+HfXE
KrLXiueSnxf1xETdJOkl5PcpaLr6h3PTHHDbK2r0v3+PRf4qurionONPNaF3
WiPCXIMXKqTYmLWVVhOoJ6Z51nBMuCQLsLGHaya3CcC15Yqb9mmR89d/fbEj
A3F56eT8jfyWatOD6KCldOAlcHtnmP8cuAxnw96R64fvLHIfJ4p54NjrwodF
a2sI5LXesa119tbJBqgnFm3ZEH+IXP/EZK39nnxnFnhLGQvpkesHHoUNT2vX
8kLBBElvb/4aQuPQiPYJBUGo9TLP7i75+/3OX7c6wzUL/CejqHvJ9RXqi92Q
PM+nQK6//PYe8NT4ywMNP7tfuka+X/3TozF5/ILwGOV5nha5fshhKjedYZ0D
X+1+KN0ir8/Pw3x1fh48MJLrekwQ+TyjntjkgYvHA7yzAOqJ/RTbcFWYvF9p
M7KzTBVzQPn9zUc6VgyQI56/NrabBwZ/LVPLkybXd/95rpAer/cX/LJB8hmn
dXWfZ4EV27zyVnI+dbUa3iqqQa4PTB9n/W89Lb21x35uNS+UH4EZ7JLkeLBm
1NlXUhDqSw3O95LXpyhFNEZcdQ70uHPw2ZCfd+vkg4orcTzQt1BJq3lFDYF6
Yozc1e/VFrIA6onxhfENcpPXC/muuxtzn377kQ7kaEbKeU5zgDjOLqRLfp4r
i6FbOd7ywC+Xkw8Fk/u7wuv2Z8RkBaF3RMleBfLvr979uM+EwQPrwiVu0Mnr
mSHkGGw7PQu2W3y8qUt+HrFPttw5pwQhM7uyjSL5fVSEBO9kt/DAYp4NB5rJ
9S7yXQVCbW8LyP1xwhUJXfX8WXDh0kbzKPJ5GXpqJ9d/SBCuadg48L9/7xpL
XL2RlYtcP26bYy0i9wOFxZ+qwuXmgLeSCj2c/H1Hhy73e1oIwlD2gM0Xyc9n
sKLRkFbOA3neBoYZkeuvhpX2h332C8JLa9/31JB/7h5nf1+ElReeZnv6/Bq5
vssdEtvuzT8HmMOMnOLJnydnaDsvbCIITf7l+vzv/+9s2WSYH9DPA5sO0jOY
/zc+/+e5dPLpYTP3skGKasWoYfMsyP415ZtAXj8WWbt1x48KwqvuvRv+9/9f
P4ZfsUk+OQdqw0umpcifj3zXyCOhgd8t6QD5Lv/b533yGhYB8l3KvGkhbpfn
se+6FNlg7xTPwL5L9n3W253t09h3TZTNJRM3prDvEiv69/3P9AT2XasPzZcE
qY1j31UnMjpgITKMfdfOFBeJt1sHsO/iKGi9/PfYd+y7ZD/suqi6sgP7Lq37
K305o+qx7+qg2j54lEFg37XazpTlXsIt3AvbOGvY/H4dgXth+R3DX2sEa3Ev
TPrEjxebtzfhXhgLyzNuum8b7oUp9LO4rNpNw70wBwWbneNJ3bgX1iQXcHTz
WjruhSWcFej5Z0THvbAiw90e6UJ0Avkur5PvXYOjuwnku96/M6cP7aERyHcp
3/TL6OFpJ5DvCqllbW9tbCKQ73o2YOe+e3s99l2xaR3m+wY+Yd+VVlvzZVog
G/uuEJ4L6g+Ln+JeWIZ6zHF10xLcC/t6dut6q4Za3AtrGunr/uvThHthL/Xp
xvsut+NeGKdjec4KSMO9MEpY2iBXLA0g3zUkfohVNrQdIN9V9LZpZn1gA/Zd
tiesFkxgHvZdvPFbbib13se+i4v7iLTDJzfsu65vb911/p4O9l1Vzna23Fcv
4l6Y/FGeA1s3u+Be2BehpRULkh64F7aVh3ek1sgH98IO27p8MGjxxb0ws7WP
Jgpu++FemOLZXnPrbD/cCxuNvsQzveIPQL0wzkd5nDM/ZgHqhcmp63EOpMwA
1Au787q8SGjzNEC9ML8PuzOfF00C1AuT/pxSwi01AVAvzLUgpeep1Sj2Wy1S
Spll7t8I5LfcnK8pPbrWQsSUOj7nb2KGhpICtsfcOwiBe2Ot8+0sEE6vf3Lx
XhfB4qbw7nIvK1SCqYNrH/YQQnXX14yOs8F9u5INdE7QCeWvoh7D0xQY9iH1
GpMmnWie87/jssAOw157SoT69xDfj+YfvMfMCauesL6c8ekimLS0JoWXOOF2
e+0YvcIOAp1XmTdo9WIjdyv2XqHP2FmTar7h/ldcwaqkUKlW3P/ScVv9l0Wo
E/e/3lTdcw9ooeH+12WO50/fBHUC5L+4dp00//ykBfuvo8NPKupufMH+K/xR
mflETBj2Xw2s56T38Ptj/7X1kpLaWh5b7L8StWXS0gJP4P4Xl+Pbnfq7HHD/
68Okqr7kHzcC+S/WP9uCeNO8iCRnU0/mHGGYkL6lK1rel1hRcaD1mrwIPB1t
o50L/XAvLDF40O19mh/uhf0+eD6Ze+gPQL0w8+zkKVrcHEC9sBEe9uiqtQyA
emE6itrT2z2nAeqFLRXrxoeLTwHUC0vrM/sdHjoBUC9sRJCZvdxzDPuvsxMd
oaZc9QTyX2NSip7zBs3EneJWtzOhzPBIgBzPpjvtxNCro30lMSxwKM9f9shP
GpF/TlFpKJYVSgvH+97f0kMYvdcfTEtngwdC+cW4D9AJy97fXjvzKVArh3vb
Hn060f1t8e+VfHa4yui5azO9h2jUkvxNKeWA7rnuvLv4uwmfY2FDjcWcMOvE
xzkDz04CnXfpc1qisEygDXuxlNZvQm3n6nH/K5m+2WptTzPufzVFrNdY0u7A
/a9yM0u1my9ouP+l8nHa68huGkB+rL2j2uC1Yhv2Y6kjebJLr75iP+b7+3jC
/V8R2I+NBab2GzQFYD8WufOB5ssRJ+zHmJboGYl9rcXIj6k8PuZc/Poy7n+x
PLziLSF1nUB+bOe+hGK/G55EQ5SVqHqoMEzP1HzSXudDpLrD1XMC5H5ux2DK
HV4/3AtLGnhTRH/qh3thPLN8KxTkFwDqhUWODrT92z8LUC+s3nWvCNvBGXBr
bDFHZjUzDA/brzjs20qklXNV1QmzQI7SU2zqZzsJFevIKllRVjhlrGByfF03
oRO6R/H3ZjYYw72lNH2ih2iix2jvkqfAPwtrHKYM6QRfkeaN1D3s8Kjsiunr
cnSiZh0Xr4cKB/wyYRvzXrCHmDyuFcp9iBNulRlIWtdLw35sc9tPvTc7GnHf
a11OLPukQRt4sPOClF0eHxQpqlyK/dAJWu7eu7NaiQpLHmc4mzTTwKnKK6ah
H6jQ0Vi8rC29AyBvJmSdqNxR0IS9GeCXX/K9WYq9mTFTpNNEfwj2Znt9rZxz
5byxN1sbvPfikuAF7M0c1a3/5RmaEsib3ekKk9OpdCJGx5642TQIwWta5atk
E28Sxddlou11hKFj3P51FcXehNupk73FjcLwx8LhMf4gX8KaqhA/picCo9t0
RwOt/HCfjMbuusj2xg/3yea3htvbmi0C1Ce7F/pMO55lHqA+2YzMWx9ucn+A
+mTxkaKV4anTAPXJgim1R7WOTQHUJ2vOHBm3KJsAqE8mWel/cSXLOPZo5qxr
LNRj6gjk0a79W2zXL2sivD7c/3nzCjN8JXzc9AV7O6F/YO73ZncWWLVdgGd1
EI0I1du3+OomK6w0VgvyHOwmFmTLtLmD2GDYHjndHTvohMeQvs/XKAoc6Tm4
guMMnTBXeVdoG8kOfZp7Ax6zkc+HZuch9QQO+DzSa0jcsJuAtXn92c844UT0
hkNyHZ0EOo9TsOqkI0dkG/ZrliURbJrHvuLe2Lvt7m7hcs24N5YW4fJxK70d
98YaB4Pdw6/TcG/smP1i+agdDSDPZndUQHLDcBv2bFwZL1jmlL5hz7YvNAQc
jEvFnm3I8QOX1Le72LOZO2zz9KxywZ5t5xTLnvNFKtiz/WROYJd/ZoV7Y2dz
/dbzbnclkGf71aHSltDoQQxK2Vtd8haGlE2crtpRPsTC6TLpAxQRqH85IbNw
2hf3yRiP90yyRPjhPlnF82Pn0p8uANQne88ysZ8eNAtQn8xm+/qhRscZwH3f
9OLEKBOcLP8xFLTYQrz4VKwwMcMM73vKHRkd7SBezR369nCeBW40z2GHLV3E
1lvyc6msbDD5yvi7pM89hIvhirwQKgXeNzn8I1ePTmwpz7p5TIAdCnJqXEw6
SCd0gyqq3cQ5oFrraECudg8xdOxf/9ENnFBTdrr2nVwX9my/Tow+L/NqwD0x
UN5mGFnaCha7PFzykvjg59XHeO7Zd4I/v+pyKDJUOGrWJJBPo4FsJ9nTKWlU
KFPt9KlfshMg/3ZGVEnA7k0z9m/16wzWlQuUY/92wmXQxNUvFPs3SZU1Eq9O
+GL/du2sSS/n/CXs30Zb5IWUsk8TyL8tcGgrP/F3JIZWlQgFlwrBy9wz8Z1N
NwgJQ3bOXiAMx08LHdHc702E/DDYRS8VhjWanndXmfsSBcNv38uqi0Dqyj9V
4LQf7qHpnuePHcjyI2i2e2/KEKxQ71t7t+D5HqJAvd/3xFc2uDeMPlOiTidO
tvl5BjdTYHBsW9VtbTphfAmqObWxw57uD+2auT1Em3Iun1YAH1SLGNM1z+8A
h9OMVkxzUOG6EbdbR8po4GpFvkZbEBUuKvR6Z/Z1gmO7PTmlufjhh1rLITOn
VoD8HFV44Ar1dQ32c5bgYNKeonDwgWJevfG5MDwmRU8KY/UljMlFZ56kCLSL
cQxtlPYjumh31m5KEYEDpptO2yb7Ea6xcq7btNggLfKR0FNuOiF3efvg19MU
eDaQQeE2phOLb7qvr9Bjh2Z80hw3N9OJjd6H2zd+5oNRVZ+Z+lnI+yulbip8
nAqzPt1ZMUfQwKREmoVbDRU682fOC0t1AJF9ObfSLUTgm1fRBzKu++G+2YRk
aPPWN8t9sxMhP/1bohcB6psdGHJl5d47D1DfrC1v24o2LwZAfbPTY1f35JdM
A9Q3q6xeuHTXfAqgvtm/UT02A9oEQH0zOZGAPKZN49i7/f3V8oqzvZZA3m2U
+5LlTrcm4obSRbEgM2Y4LM458+VTG3GfRWfM0JYFSpVvORxwlkZ41BbQ7tmw
QtduWmN5RTdxzH6BWdmdDdYMs7mNkteH/eoK5vV3KJBO8R1WIfd/ic7RIpf9
2WH0qDjHwCo6oVWx194inAPGBG1T/Xy9m1i/uvLn+lBOcv9UpHuNg0ag8z6p
XYNxFxrasI8LCm5uP/ugDvfKBP6+GLDoaMK9sknFP+2rk9txr6znYH7pATMa
7pXR/1a8kgqgAeTlmL6AbzthO/ZyF8/tmHPv/4a9XP5C8Owt/WUv90buRG9f
yz3s5fyydDd+UruOvdxmC/9ze85rYi93y145MIXLEvfKDA6O20mkuhDIy9Hy
P+238/QgnMevrma4CsPcDue9D9x8iI1ltxRNloRhqk/1FK3PF/fNwMBjzvQg
P9w386Ne07vZuABQ32zPiQ2CP97OAtQ3axHdsZEveAboGnIX6fcwwWMTAQK3
C1qIOLVHtix9zLDTojcyOa+D6P74qKniFwuMnDnOfzyrixD8m9t2f5IVKn4O
C55M7yHKw6F1MTMFeg5Yclfo0onso5f+PGFjhwd2XnIIVqUT4aVJ0te5OOAZ
r0yrZJsewrLamHqZjxO+lv72Q824C3u5/sDbu4S2NOAe2WhQhlavSyt4k3df
vOMpH/zOqvulTrUThMQ4avluoELbT3OvNTtpgF4RfjI3kbxfSgqnMow7AfJ1
ARpAs026Bfu6ibSjuztqK7CvS/De9tx7VRj2ddLWvA8O7vTDvs7DXCw/ytMa
+7rEEuknGuqnCOTr/D4X1jl1OhCDsY19cYVCMLgl9NNJmxtEjYbzR7F9wtCk
53ZG8pQXIZZm1OJQKAyHW9szS4/5EnSjG19OKYvAx9dMDdSO+eGe2jtGSL5A
Jrk/6ss3XpnBCtfoWznQ1XoITh8JBc9iNriQZLY+DdAJmqni367PFEg78zA8
+iSdiH2y9rlDBTtkW+I4LlDdQzwQKC2w8+Ij1/91LC/8O0Cb6WLc1X98UPXF
Ea/hXBqIExdR+3mLCveMMfpKuGlge//+UVNWcrwM4f+ypbUVIJ8nscrrw4fd
ddjnvTYqei58KgJo1l10evNIGDKOOI+l//Ih/FZ7M7WKi8DjHy+c95DwIzIq
XjQbPROBf4S7eq4k+BHmQm8MuBTZYOGf2nfMrHTCP8niyT91Cmw+EGatTr7/
Afsi5ozU2KHzbMGY3HY60Wag56NZxAfXUN940+mdQL2tfyJcjQof3t7yyamG
BjZeW3X+1icqNFcJ+O1i1wFg0rXwOhMRaORVI9R71Q/30d5vly/XJ8fPVEbg
E1osGzwTtaWtdw+dmLgU/88rmQIzTrJanDEgx++iQ1WWo3zQtGbbNPMDGvhb
3qG06EzOL493Denp0nDv7GNEb8qLcwng1NNOtYpgEbjHN6Cu6JEfISnewHxu
EwUem7ObFyF/XuyhxfmFTezwbF55g9Y+OqHBfrUuNJ0PutW+qNkS1Qms92+X
uC9HheuvvJwq6aABP4n6M7G5VMhbvDCq/bsDhHoz0nmPi0DPt0dt0s6S47/G
4n2+JhFIL+6r35vjR1ityKyToLPBB6Nhr08coRPlenWLyn0U6NXER/l7lE7k
/Mm/5sZLhbd7GXO+dTQAnU4frYmkwuMygmls7zsB96St1XCWCIzdnaXU/sqP
+L5zRj7ekgIv9CZcO0rOZ2uvPy9/ok++TydKt3dm0rCHm/ox/80/Z7ln1n7D
b0YxbxGgnlmPqrPnRt15gHpml2L6KIEPGAD1zKjvTM5Y1U4D1DNrLzz1RvLK
FEA9szN+X/RyBicA6pkdvX6Jqr9nHHs37qrMt6nXawnk3SjTz45onGoiGAu6
eQKnmWHd68iV11+0EYmWC+MOFixwV4bxnJUmjXBaOV8zf54VflCacP+X301M
r4zqbHRig/2pk9vWbKQTx7MtDml5U2DiWkWNDPJ5/PwgQPPXTXYoLHd8qwmV
nK/u/GS5dp8D6g5S7D/f6SZCd36zOHOXE9oFDp6ulKAR6HzPtI32KsoTbdjH
/Xkis4pNtg73yVZHCbi3pjfhPtlF5eP3jO+24z7ZVAHf9UVtGu6TXTqTf88/
jAaQlzNwmb6RZd0OkJdT1FGj3NvfgL3cwtaMidgTb7CXS7inoppoch97OQ9t
nYfbWN2wl+OoDKyvunoMe7kN45tlvFUu4T5ZvynsZbV2IZCXuzntLe1+0oMo
1J+4UOwkDKcrCjfq2PgQ+TcuFdvOC8MD2ef5d3X74p6ZiljltMY9P9wz+ygV
xZEwugBQz8zgqS5fVe0sQD0zudLx24MxM2Dy4EWbgFYmOBY0qrotqoUQZ73N
HkhjhgnXtG2ePOog5iXVW+i9LFDxdkkZI7aL4FaaqVz4xQrlFgKr0573EFd2
0w4ZzLPBjRa0K+I6dIIRRCh9WqTAku5TMc3k+jO3K/IMg4UDht17o//BtYeQ
DORMubGCE6qvLOt6a9+FvRxdwCfUZf4b7o9Fv0v6/Vu7FYQ853MYfswH9aen
L6Zu7wStk6r8QIIKj1BXOOu204CbU5lOYTwVsrHTz2117gTI1/Xnqn4xs2jB
vk7605o7LkmV2NcJBe2jD+mFYV9X3Ehn2Rbvh31dR/5U49tPNtjXxQZt5lC9
o0sgXxfXWG/y47YDYfnTtPZlvhCc/VGkHCp3g0hUeR2rKC8MPR7uqRar9yLO
83ZK788Xhuv/6t49An0JZ15jXYt9InDxx1Pd1Rp+uJ92iVlx1Xy6H/Fx4+zR
m0msUHso8o6RQg+RJfFutWA+GzyVyX5xRJlObHgWpsJeTIHnrWqlpk/RiaL8
VfVjxezQ0W3gtFBLD3GZ6Qi3900+OKtP0wqy6QAb8mptdvzhgwZ2z6kP02hg
b4XWoSEfcn18e5McYy0NSBwS6XX9R4Xq88pvxjnaAPJ5dgLqDgOjddjnrTxi
kuD1NAIEyfV/do8UhjfaEteY03wIoc/n7gyIiMBif/NeQWE/QrhIVnYmRgT+
mrDceyDejzijN6XhvpMNNs6w3Fj800NsV/vnHK1MgV/7Voilk/v5mpsj+/yU
2CHNfd2kxS7yeVHtaDR6xweNLRK+UL52guDdBR90ARUapbedO/ONBgolVM7e
/0iFv6++b0wK7gBNJvqiPYYi0Jf5ckKFrR/uoVWeFfFXJuejU5FSLs6RbNAs
JqLr0W46sTdlAbyMo8BL9baBKobkfCHE/1ByiA/KpbnuTPGngShHrgMsjuR8
53LFYfU5Gu6b2Z0an3a+nQzeh9s8M79Hzn8NrKFTD/2Imnf2nQwxCoyXMZWc
06cTvf4GBzaJs8N/abeTKErk/Zqc2fDiFR989dN+l7hfJ8gJWxrQ3EmFfdvf
n5Im96NilUyGCVnketiKtewhZyeQ3Nsqv0FLBEpYi//iMPYjdirf70/7KgJz
vq3xe5btR/C+PJqS18oGiz0u8Itq0gnuqK0HL3VRYOCnhMT64+T8qndXZS83
FZ5Nn9A49oUG2sQDtBpCqXBl68a/tfWdwHlgvvROmgi0rfszuCfFj7hfE7p6
31kKpE7+PqdMzkfWX53CjHSpUHZ/+o+zBTTs4U4eTzvW97/5aHvmx9kQCjQX
PNWSTd6/tvI8mfhePhjzJqqg9DINfCq327vahgoV/XrjGTdoYO1MYsiWlRS4
IYtJTod8XtVV4z3LNlPhCztb+cvk92eSSn76o1wE7rDr/rKa3M9GiXUV5dVS
4LOJQEcJcn0bwratKZuVCv1bI556faABjQbBm8UvRKC8v9ha70Q/ooOjssTq
BAXyDlPPvyPnkwVvQalmTSqkPRN8mVJOPi/ue0s4h0Sg+tW3Ytrk85C2SYMw
yCDXI3XbovRP07Fni3ahZFsaxQIPr71bK7ZRoOOzZ5bC5POxrtf4VM1eKtyb
v37Js40GzE5e2eXaJgJttpzrSievh82LvpRCASrsOeWb8buBBl4sdnGdzBOB
/bF5iSav/YgDYUYmnFcp0EesWmMveX2b19b/6TpDhe91WGmXk2nYr10asixi
y1nukb0qUdeYKlsEqEeWMGwXd9hsHqAeGV/r3Y1z0QyAemSJx11ltRqnAeqR
CV2/eHTy2hRAPbJI5VNX2kcnAOqR5bLuLrmmNI59mvXEmZJqjVoC+bTEYQWO
g6CJyDOuYGnXZYac6QdX5Ya3ETki9Y6e51hgU0eTcqkSjRjdKvo525QVhhoE
NPpkdBOV7RaVz66wQag8ECy5nk5caQi9YOpOgR+DV1Z3kPfHQOJvd4orOyx7
/yDorgCd6LN8X3szgAOay/ldz3pA/v3i05ucb3HCRyNbhnu20gh0/iZI+tkd
ydSOPduTdV7FRcx1uC/m6McV6xzdhPtiJi89RA1vtOO+2L5Q2YDHmjTcF0t3
q1/9PYp8//7zbWbPw8pDPdoB8m1sKYvX/c0bsG/7abjQV66Zi33bm2sTZzzi
7mPflm+R+DfMwg37tg2yGff03U9g3+YkUn6Ep/Ui7osxNTZYZ2i4EMi31U/r
ZxxX8iBo7DmBCQ7C8Ln6mvyoCz4EU3Mzs/OsMPwipaCs1eGLe2SEpOnsrTt+
uEd2rlzs6+HFBYB6ZH/OMXO1ts0C1CMLbtVu+v58BqjJhoJnjUxwx6NDfYO3
WohO8z96Om3McF9RB+vivQ6CvVXUcKSLBcYl8x9ViOgi7hgJluT0scKovebd
V570EKr/Xu3cOMMGtU4dkjugTSdEM4ZN2uYo0OJGT/boYfL9tuUez/vLDkXL
9nrv9OwhWG17nHwpnHAvq3aQ2fUu7NsUS0IV+X98w/2w8cAto0eVWoGHcPPj
mWg+WCC7bdFyQydYjHs9J7GGCic51mRTyPfvU0WndlEcFc4yv/kQ6NMJkIdL
FRJRyPNuwR7uylzGqpW8X7CHu1VekWx8PQx7uGfpex4HtvthD7f2kvyUr81l
7OFy5+uk92jrEMjD7dC06Hlv7EBsubvhUFquELysrps2JnSDCC0sX6khJwyT
npcGbC72IvxKn+hJ5ApDxS7f6usHfIli26oI270ikMUnaPqSmh/unyldL7p9
lpzvlQ4Jq8k9Z4Wez3k4/+zoIW4NB/yhZ7PBLvtmXl9y/lD/WHxWrJACGU9W
m0br0Qlt9dtWmYXssDCDpu7V2UOcceXee9eN3L/9s3mvZ9oBNC7s1eGe54Nc
zy7Pr0sh9zviF+CIFxVG/NzX9V6KnN+u3OnwX6JCjvCl+rF1bQB5uv0nuKKb
jn/Fns7N13L0alkEyPyZPHYuXBh6NRrdSGr2Ic6vr68aExKBt8vrShr5yfnv
7Vx36SMR+P2Yghj1mR/R5MgP9siwQZGMRYFuRg/BRK29YLGPAmthaag+OV+M
PhEzilJkh6dvxkRMkPNxQsHTJfO3fHA3vYLnx2dyfqStT9h1kApVE6+vcW2k
AfZrBmbBxVSolpFa2/20A6x9+8l04LQI/Or/WTDDxg/3zBZ+BKRLkuP7FouZ
CzCUDRp7nrQZ2EknjL5InX8fQ4FF4it9ksnx/HKp+03WQT7YYNuSm+tJA9/L
N+2nXKXCnz/sykUtabhPtm92ssstIgU4BO8+sfuOCBx9dZjfJ9KPiL+rVFkq
RIETTJHfjMn5ni3J31hRhB3S1+dLGZHrs9XW746lveSDb7+lP/5xvRO0HLSs
3bKdCi+HEgP3yfnOUkLUICmDCs/dYv1OE+oEV8I03aQ1RODLzep6KYbk/nDv
ycibtSLQ4Yj2S01yvv/pIvLQt5ENGr1yaZ4g36+db0+b3WinQOX7xwYyTtCJ
9UwTmwRXUuHpY6yvLMj5TtIpTrM5hAplhBOfmnR2gq3fPzqcThWBYucVVum/
9CPOPjn7h9WYAgtWCHhsJeejIPdO133aVMiiuztFi5xfkV/zG+pvXElez58n
aHSuQAocTUsRWSTv35LTWl7vHvL9PCGbLHiRBnjFbyvwWVGhwOepn9I+NDBZ
5uQ+SaFAyzdMVx6cpBM2o5wWCZuoMKMyMGmqkwZyN9gfy/4kAgN6U0YeZvoR
75RWdn/5QoHJRlv3dJPz/ZusiHehzFRYPXLAoI5cfyzU0KSCnovAswkbA9xf
+BEZLQ8z9hyhwPoO+k5/cj5Zt92LO/cwFfbud7mUSq53rrguXWkZEIG3/s1r
nSY/f536tZ7LqRS4YqF0dwc53yN/5hD5p6ZeMx7onmATjJCiQKYIwiPWgHzf
gssUX8tTIfvcfOp7cn9BPa7QpdZC3o8XEsau5PwcoqMd8phKhXN9XOH19TRw
Zjbx3do3InCNkHhlXKofsfq8lFbTZQp80TaSqE5e34Wqfb0fDKjwdqB0AXxN
w97M5nHRjCb586RD926Q96fAV193nLxJfp8cjY4d59dR4Q+WxgDLDhoQF/6T
fPyjCJz+PSkamEGup51l71ZDCjzbd517ibwf1rd0Wh0PUeHjl34sLF9poMU2
sMrxhwgUUay8c5z8/nNDz0Zl1lHgdONGWhD5/YP7IllsdlPh+GY3oTDyftw8
VLav5xu5XikQVRwjn7fWl+uMDFdT4fntZeuZamggf6l0g505BUYoy+dokt9H
PkrPlG1GBMqu9NIsID9/HJdf/I9wCny0XXXLefLzrI9SfPRTilx/JWiJviaf
d/b9C01PTlJgt1fXYj/5/dh9r/IrDYvAWqWVGoD8fMiPvQk6yAgVfwQW5Cft
RvaR+5EnNamcrTSQYvDSN6VDBD7l0LrURf4+9VmPsk4hcr9+qIW3sYl8n0oD
ryhfo0CJZ+NG68jPhzzZu6iIPYXZy72wE7RPb8aZFrAnm/dkmgz+xMCebKVJ
sBfl9zT2ZPe16t2YxJY9WXBl2XCD+7In+2qwXWHUZxJ7MuvkkpP1qyewJ4tU
i1OeyxrBnszjpJ5l6cFB7MleFSkt5jovezJPobgXE36t2JONSkh+bo36jD2Z
urn+w1Ufo/D5k3x2ClSLuWrsyWwka3WFKtqwJ5vbvko78Gkv9mQanaZzM5z9
2JNtsp0TAzd+YU82bC1qJm83jD1ZApuAcp/dKPZkOvGHLmZ9GsOebLMT333T
9ePYkzn+SNdePTeGPdnNNljC0juKPVnq1g+qg1tGsCdLeFww/bpxCHuyw9Oy
T18lDmBP5v+J23uz+E/syc55/rjf4tODPdm2HVfnHNa0YE+2d2JwlLnwC+6F
nZBn7jaOT8K9MNvPF8UPV7/DnkyioCHw8bZa7Mn07zcVeFQ2Y092fO5injrs
wJ7sTIzjl7SmTuzJvu8/6zvutOzJOtIGa1/mLnsy3kD5qy9+L3uy5KW+sD+y
wdiT1d3olVnqdMGeLPWCrrSBkgk+f5Lj9ZDwLhMP7MmuOX1VqXpwB3uyM4Vm
r0+FhGBP9lxOYzaLffn8yTNv67hGzkdiT1Z86MALO8Eo7MkevtS8diYgGnuy
h/xMGxpl5rAnu9rzSrcidQZ7Mj9nFjk5p2nsyTqlD7Co1E1hTyYSk+f4Z9UU
9mQnLXguH+lY9mSmd85fhZzjuEeWf/9uqqngb+zLjNOkLb4N/cC+rP9z3OPK
lgHsyy6+Vt+5ZtVv7MtkLWR9h/xHsC+zXS/Vbig/hn3ZYvGat7dWj2NfVvXM
5ZyD6Dj2ZREJq7N2BYxhXzZ6RaTQTHQU+zLB+eHwYt5h7MsWa5lSDp78hX1Z
qtXUxVSdz9iXUdV/ZgGnBuzLnFj4oeDpNuzLOBYCXT/d6sS+bK5WW4Vv67Iv
01BdGXg+bdmXNUvtuqVEW/ZlfEIKeswPIrAvU8+NylUIWvZlH0SFm01+G2Nf
prXp2H7uzU7Yl+2CpR8KN/ljX+anTI3cDwOxL9sppLjaszAU+zLRnNv/2jQi
sC87bim6OKz1EPuyUynKq0RpUdiXVQzRdb3Y57Evsznv6Dgrw8C+DEzp/BV8
NY19Wd+iX/XC1BT2ZWkcn3Q2ay37Mu04l0FRuUnsy+yLGAlDoeO4b8ZsmnrA
wHYYe7Nk4fvSs1++Y2+mKlXVemCmH3uzsaAwvg9HhrA36+IKfdS7NIy9Wfwt
v9hbraPYm92VnfdxnR3D3ky/m531/bpx7M3GOkUEoz+PYW8mc8wnLdZvFHsz
a4NuWln8MPZmtKwA027hIezN/v2u6OOTKcHe7FibPIU5oh57sxfjCzxPNrRi
b6bkE/la9V8H9mYdkkeCW592Ym+24fB9c2n5ZW8GV8WoBbPVY29mfMGN/8LB
KOzNQnev49dUvou9WX9NjbjJNjvsza44H1MKAjb4vEnVNQr/Ggt9sDcbVH02
Puh8D3uzbiFJtwlKKPZm5qdPuZe9DsfeTIq6JeJ2WyT2ZtYcGdaeHlHYm5UE
ven8eXkWe7Op/hjKrkMz2JtlSj1gcVSbBuh8ypU1sr8/JU8BdD6lZPL17Inq
SdD+6nqTqfIAyN4psHf/jQns0zzS/S290gexT7MT27x4uOw39mlpiyrtan9H
sE87nXWUw9x/DPs0poC0hAKxcezTlHWYVgSsGsc+zaPF4d/U/jHs05g1NG9e
ThrBPbMbY+prmnc1YY8mZq54V/F8O/Zo6RvMt0nWdmKPxtE9cHGHw7JHizxd
dkOvbdmjXf6o8XVT+7JHy72XtcaNNQwgP1Z+d+qH6qUw7MeaRR4U2bRFYD8W
teFAtXPOQ+zHPv5zFn4iH439WO3qLTLPvOexH6vrfRxl58zAfmzfPS0Xz8pp
7Md8pgUffGNf9mPOV7Tv5pgv+7G1qfneT40nsR9zM9qdpvRtHPfUuuxrNDV5
R7Ani5Y+FLlL4Tv2ZKYbFcXsffqxJ1vNI5K67scv7MkEI+LzvPKHsSdb0Wd1
avTFKPZkZds2gcKeMezJ9DJ6zpeQ6xfkyTZFPjd2oo9hT/aZqaRk+5tR7Mne
/hB2EOgbxp5sK4/N5U3Xh7AnK1y8FtMmVIw92VVZKynarq/Yk3UvPQ14eKMF
ezLR+HfX3yV3YE/mdMOcdfRjJ/ZktdL1TTdoy55MyT79i5jNsidbbJji0ul5
jT1ZdONu7R0Z97EnG0+sNub47Yg9GVXr2xNWPwt8fiX3cRuL4gkv7MlYVJhP
vrx9F3uyzcmK9Hc6D7Anc1Kfd/c1DseezGHxQWDi00jsyZwPNb3+dSQKe7Jv
DQVd9ypmsSdzPGlXdebaDPZk9Qp02T9G0wCdd6m1iVO7pXAKoPMu/2279oMy
OgnsIqf9txT3g8D4vdW/UyewP5t90mrtozaI/VmJkRJHm81v7M9edh3NCy4d
wf6sO11n70OzMezPumNW8TgKjmN/VtGgemqnwDj2ZxWUj3dSL4xhf/b7deKq
AvoI7qft5ykJdD7diL1Z46vT87SeNuzNKq0n7zRmdWJvVmnKZRbV1IG9megj
nTDhmmVv5lb2c4jfddmblQ4KfPyrHg6QDyt+GVzNxxeGfZhg5O8bVaER2Ift
ZHpSfMfrIfZhR68sjCquiCaio7WtxoJfgmLj5u2cD+cAOj8zrXpYrWtgBqDz
M+e5V3k4Bk0DdF7m3TsuP2a3TQHky7xeMFe/5BjDvmzl7CRjkjKOfZlBGmF2
VGIc+7L02IX33i/HsC/7y1GYrfixFfsyzs+hkvZHOrEvW/1qcojNdtmXDU9G
fH10Y9mXRUUrPGrhrsW+LG9HN62gNxKg8zMTl1av+s4/A5AfKzjmYvAxaQz7
Mb4r1rtM145jP2Yj8/qpG/n5kR9LrjP/V9Pcjv2YVtM3CNo7sR8TD/3nemWh
HffTdDcbCJw4G429WEqQ27p9xDz2YhI6oDPhCQN7sXsem8MN26exF2Mfjrxg
xLvsxdpopRN2V5e9WGfojC7XlUnsxVa9s5Y4Oz6O+2zXjEvMZC6MYD/mXlJ+
u+BXL/Zjv2GHLfvhfuzHRDo7MqIzfmE/9vNWgEl+2DD2Y8XheaJtd0exH4MD
B3meNYxhPzbUdebyB3K8RH5sXeU6h5ThMezHvH96HrpaNYr92NHpeEVt9hHs
x0a3l70lkoawHxOIfreyfPI99mPu/677Ou6qw36MPfOo3JaNLdiPDXYtGSq4
dGA/1qbhtDGnphP7sVUvDvAOSS/7Md0nbfJzfA3Yj3kV8eY/WFj2Y1sCf8l/
HQnEfkxLTK+ehX4N+7HyJ+tYSiLP4/MudYjJrsYUT+zHhGNk8kK47mI/pvU6
jitrLAT7sUQRfoHh3eHLfux70cFb3pHYj/XviOX7tSsK+zG60cri03Oz2I/V
J5TIXAiZwX5MgbfoauelaYDOx2SJ3Ux/8mkKoPMx31BLjqn+nQT5K96YcHn3
A2OB6qWfpRPYm7040OrlvmoQe7P493MOP5R+Y2+WWfYv7fGLEezNxF40frt4
ZAx7s10rfwXsoo5jb/aIgxMsCo1jb6Z/Svm2nvMY9mbfHJkkzi+N4B6brdwe
5dGfDdiXVVn6a5U8acO+LP5CrtmH2E7sy/YN/thgy7Tsyx67un1OVFn2ZWrd
Cm3DuyqxL+O/+pd1ZDAcIA821Pb5g0B/KPZgnx0OTonbRWAPJpW07u24xUPs
waxC1sbRJ6MILzHO75PxL8Dqs808zTVzAJ23WSJ5RzORkwHQeZsdkb+VHGOm
ATpfM26DecrhA1MAebIfm2wesY2PYk9muxj/nYt5HHuy5BPmQ5nkeIQ82S7p
zrzJ/DHsyaxXtXatcWrFnmxMKHFRZksn9mSfI7RW2QV0Yk8WT/BF7mpf9mQm
8fM3HcKWPVml5QVR25CHAJ23yfuqIW5KegYgLxZvtWPxb+QY9mLvu7O6isXH
sRfbbHqh//WKcezFtm8ZvHo+th17sfMlkZ2guRN7MWqImbK3Ygfusd3c5BX+
6kg09mFJ285xsJDjB/Jhfi1f79mS4wvyYQ8CW96UkvMl8mGb7A6w6Gd3Yh+2
p+OxkubDFwB5MIN/by8dERnHHiybs7+HnW+cQP6rdluayB9yfYX8l7vZeoGA
xA6AfNfN7euDHVaOY9+l6rd48/6acey7djKz+S9Yd2LfpUYbD354rBMgz6Wn
aJAbSu4Pked628JyhJ+cP5Dn0lPJGQ1wisaea9DdX/xrzzz2XMXdZ/b0ZjKw
51IQlNbn/z6NPReHQ5rdVsFlz/XkI4071WXZc1E1Mv4GX5/Enmuq5LFO+r9x
3E9bkvVWl783gn1X1NnvcQVlvdh3bc66fYFfqh/7rgRiyIES+Qv7rgFyv8nt
PYx9V331M5WFm6PYdz2N5ZIprR7DviurZ6wtmryfyHcF1p60c5kcw75rG5vP
YF3zKPZdPxq9DmYKjWDftf2G6kD1hyHsu0RybSQdewqx72pQzAufSK/Fvquj
nZP30Uwz9l3HXZmypU06sO963GXcI/WtE/uuf6Gdb+e1l31X1ZeWaIGLy74r
tuFKug5j2XftMDRZpfcgCPsu649vE9Z2OWPfdddjuuWn/Fl8/qS9PkfDYxZP
7LvoD7Yd/l57B/suy0CxVduJEOy7tnodPfdjTTj2XcH8rx9qOkRi3xXAw2Zf
uDEK+66tbdtzzPjmsO9SPjldZBU7g32XWFSH5qztNEDnVeYvuY45fJkC6LzK
20728zvZp4CJeniF57l+cDX7TemrugnswfxluT4pTg5gD3bOaNPHx5K/sQfL
Grx5oz1iBHuwBJe7v+ZVxrAHK5+VOmLFO449WNGenKBD5PuJPJi802FlE88x
7MGu8pqoOnON4l7aNlrX7s7XDdh/CT67FP/BrQ37r4ptnx4qhXVi/zVUaqdY
JrDsvzo//GYWd132XyHvednKOL5g/5WqtHc+WykCIK8VwELXN60PxV5L4vTc
z2CjCOy1Qtiv3vIweIi9Vm7ml8n7A1HEROfFZ86pz8GOw6O69r/mADr/slj/
yKsnogyAzr+0BLsPZTyfBui8y0ilQ72qh6YA8l7OkjF76D9Gsfc6li13t3dx
DHuvB7upFZAcX5D3on1yIs4Wj2HvdXRwyUbqaCv2XkuNEZky/J3YewVsWecW
H96JvRcljP0Y+H/ea/dP83W92l+x9xrIBZJP+x4CdP7lZPzFg7YKMwB5rheN
92eOBY1hz7XWbLy7khwvkecqd4xbm8g1jj3XEfWHzQle7dhzdTXxx+WS7yPy
XKctVzVc0O/AvTTbFUpfdoFo7LdSXVND5vrGsN+aLt5e+5wcX5DfypzUPLOz
uAP7Le79jXdi33Viv/Xv0/h8x8eXAHmthh+C54bI9QvyWtX/1pcnkesb5LPO
V1fIWpJ/H/ksL7cGV6GiDoD8VfufzHEVznHsrwZ01PNcyPkS+SvHDF7D10ad
2F9J1j5f9dWkEyBvNSr87B4reT+Rt9Lzl3uRSc4XyFsZmZzZcN06GnurxKnt
h6rI74t8ldrUHY6jFZ3YV/lcSXbq4h/HvmrLzPtZ9ZedAHmqh/05DpzkeoPd
aUC9+y4VxqbS3u270QmQn+o59e95DLl/Q34qYQlyfGrtBMhLzSfdillL/n5L
8dSDDDcqfK+b2UNN6cTnOT54MJPL+i4O+ymrF8ObQ0THsZ+afMRzPpT8vL58
zh8ERsj1xYqdWXfFxrGPEn8D37CSPx/5KOuY78etyd+PfJSJS0yyh0c09lFn
LESvaY/PYx91oF3wjXQhA/soj08at2/3T2MfdWQqDkQIL/uoxm/TMx/dln2U
D5PWRVWPSeyj4h6qnlHnmMD9sFNc5pzrno5gL9U6lvn8ZVYv9lKaMk9nV4j0
Yy+12ZanMiXgF/ZSjzPZDyW7DGMvZXhsewLj2ij2UgZ/T/8AlWPYS53SPrfC
k7weyEuxKXhc0JoZw17KXee2zpXOUeyluulHSurX/l9R9x4M1xXHAZwEZUPJ
tiVeawbTygxTj2go4y5S0opHpFTU2LCWdCOEILVtNLZNNqyUeicaktUGtbEN
0SQaValXI2xCVsQl7DK2pbvr/WyipzPOb+9/949z77n3nnt+98585nwV4KWG
GyzTvHtmwEtZdXq1poe1gJcyp/KjJxL7wEuNHXmxbD4uAS8liNXyHggcAS+l
n2kQrjtIgpcazTC12hOj9lIFv1fvy89Te6mMNO6Frnm1lzpt5HqZO5EHXora
GXAsLCodvNS1nSUO9+9GQR7jweUqIUX0JXipm7KO3yYbeOClvGxrjR7e+Ba8
VL3SMD54dyF4qSoPrmHl8WLwUtYD3ckmFqXgpWqZETUU2hp4qZiO1qC86mXw
Uo8bc/4wSl4icH6jndlp9nDvIoHzG8PfsXE2pSwSDdLsl78ETxPTzQNuWU/n
wVcNR/5TcX5KDr7q0UYTVbpnFnxVpF+NRM5XgK+64sjvErmrwFdN+Yk/yjSc
A1+1KpZ2kqh+Yl9V/z1nvDdbBb4q5JxueBJVCeuFFUvlLFr+AHgqiQnP6WX8
MHgqx/G+JhqfBE/1Z8RmLJ+m9lQJvGPcuO/UnipA8nE9O1XtqdpyzwYcZBUR
2D/VaT0pSOksAP+UFz/p6BZSBP7JYfMbh7vBJeCf8ioUORJpaVu95xtZrqJr
hC/HvXJ6dY3AeZAUM9mMp/UKgfMglbTDt6J+XCJw/mNW5TjrzoFFAvspq5bw
oHtjSvBT8ucGlc4bKvBTb9cx7p1D8y32U4OXymM0H6jAT33G8LRdcn0Gfsq4
Oot3RI8EP0Wz9yj+tJwEP5XEl8wNW6r91EUyMDlOqPZT64dmxYm7SwmcB5n7
bmy2r8cygX1Uu94JcoynAh9VldCgewDVT+yjTDfFY2X6c+CjnuaaiLnJz8FH
6b1VrsgTk+CjCsPyY9ixI7Be2L+Pdj3+y70MPNSJzkXNCZkKPNSQ4/6Tt9H8
gj1UBH2czG8cAQ8lyrppENdKgoe6+P7n5J0ndQT2T/FGSRpOaOLF/onjX/Ms
EdUf7J38PFLPeDaT4J3I7i7GWs8IgT2TyKyKsHhtDjxTmP8qKUP1E3smxXGG
5k+HSfBMXMEHn+QySQL7pVZZg3UTqmfYL2nu85otR/UT+yW75mQWi1kGfslN
LLPvQteLvZIk9FSmxUMSvNLeXGmXHuo/9kpBIXv7rQQkgX1SkVipwUDnC+3e
8pVeoNIthwaPLnxFEtgjCRZUOo6ofmKP1D2fPi8YIgnsj5wOJcr90fkbUx54
rmdQ6Yzb7VcHhCTkGxbq+EzzOdfBIynSTr2u+v993/ZIo1vG/awOkvjB+fqo
3d/a9Bc+l1j6aLxgb+RF6mX2ofGNvVF334VWxjAJ3mjK9hbl/Jky8EYrhM26
EPWntqvZxYRJpd/oXXTZhcbTq7NxtIV29P82U2K/ia4X+yIdpq9mBZr/3+T1
WRUJtOn9/fuzc1B77ImUZjFfhKDxgr0Qly2KC0T98bWhCDmh6Hvh1x32X6Pn
g71QYHtDTQ9qPzQo9F75kEqvYV+eEKD+5uwwrfJp1KZvHC2oVqH22Acpo19d
Dcy4Aj5IubaziIOeH/Y/veYpTBd0vJ9TE4y3Iql00/fYLfbo/mMPVKnV3H0y
u6xtdLw8YbJYm66xvUXf95NPhlFhH/IFtzfsJfD+f73mvt8=
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwVzzcvBWAUgOFPWfQ2mCXKYjSz6SWx6VxmYsDAKNG7kPgDYtHLD9BbRC8L
fgBWNs8dnnznvOfe5N6cSE99d2wIIYZ+Fi03SSFcM2IujQ/hMC6EBhK41dYZ
pcztSGskkTttgzHK3Y61JpK41zaJ6O/2PvL40ga1X/M0xYxrFdqJuZkVczbJ
5mFvDAcs21e9udHfwYPv9Xq/o5+jiC2tU/sw95PPtzZBpX5qbyGFR22bSarc
zrRWUnnSdpii2u1cayONZ22XaWrcLrR20nnR9pih1u1S6yCDV22fWeaYZ4E6
n7tyj5DJm3ZAl/5pH6CAH21I+zPPUMKSPYs184a3MPof+QdpNUEo
            "]], 
           PolygonBox[CompressedData["
1:eJwV1EVsFWEAReFBE2iQBHdJcLeiC9whuC2hlOLuvkADBLcWqADBrbgUZ4Xr
AocW2OEu4fsXh3vvmZmX4b2ZVhg8tteY7FEUZUML/1yPiaKbGELWyhlFe3JE
UUt8sE9iHXrwN7ghKITHXBxq83vtVvhon8JQ7pU9DVWxnuvJ3dTjUBhPuAnc
e30BGmEoV4fbp7fGJ3u2/UtfidN2vP1an45q2MD14m6F61EkfJ6dHRv1p45P
1D/oC5Gil0Vs+EyZD2l6vPPq6vv1NuFz9cL4zM+Rv7lV2KFXxBl+mMzk0uUM
uVWWwgVUt5fJPDiNbfYeWQXXwr25vre8zR+W8TJRFkcGiob7lTlwEpvsXbIS
nrl2kvzILUKqXg6Nwz3K/NiuD3NePf2A3hZf7Ln2H301ztoJdpY+EzWwievD
3QnXoxieh/NQnz9ot8NX+xw2YzgaOHaIb49vdgYSMQINHTvMd8B3+zyS0Je/
yyWgOF5wI9GIP2J3xA/7AragH3+PG44SeMmNQiyfbnfCT/tiuCfujT0LNcNv
w/Xn7usjUDJ8d3ZObNZfOT5Z/6QvRpPwHdkFsEMf7Xhj/ajeGb/sefZffQ0u
hf+r/VafjW16adTSl8u8SNb3yqrheXD+APmAOyJHyiRZAufDcxTuQ+bCKSTa
u2VlXA3vgOunhOeTPyaXyDRZHpfQNNyXLIiz2GnvD88lwsvfRB7jumCjXiQ8
4/x8+Y9bi8vh97Df6XNQGyvsGKToyY4P1B/qo1AaS+zcSNIzHZ+qf9GXohnG
ck2543pX/LGvIAWD+Efhu0YZZHHj0Iw/YXfDX/sqUjEezcP7wXfHP/sa0sLf
lvDeh/ck/K7huwr3gmn4D6znqdA=
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwV0ktQjWEcBvC3CzWTDQsLM+SUTWNRWCqSrKMUM661TuWy0E0pWVTGBjMW
NaYJlRgL00wRxUKotExiiW5LWeb3Ln7zf/7Pe75vznnnJKpqS2uSQwhJjDKd
EcIMz5VzpKeEcJr3HEsN4bZumK+k6U4xSbGzDt0qe+zX+Eml/pluls32CiY4
qr+lWyHbfpUfXNQP6Q7I7axRp5vRbZLLeUeRrl1XIN/hHw26ZV2WfIVFLugG
dfvlNlap1U3rHsghvodU+SRvOWJvcz4gb5Pvky93s069fcl5r5wud5GQd5g9
XJa/c14e8Lkcc5g+3WtzC3fZF+/O3MkjbtpfmStmjfnFsx/MbJ7E76EfMTfi
bzFTzHFzOw8ps780x83C+D7P7zVf8FS31bzHQTlh9sfvLv/luvzH53vkNLmT
3fHuWeBcfIfzPLmVZS7pPuuS5VLecFjXqvtNZrxrvnE2/gZdrtzCEtW6T7ok
+US8Gw7pWnS/2BXvgXnO6B/rpuKf1X6cMQr0N3T9fGSDEv0o+c6a7U000kA9
/wHFG2HK
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1nfcjmUYxvHXDtnJjIiUvYmQspVVIURZoUQiySx7q2xCRjJS9ixkj1LZ
UVZFipKtqO/56Y+f43ec1/O873Pfz3XdrzytuzR6NVFCQkLrxAkJkVv9UwUH
+VA0QilYTkiCpEiG5EiBu7DN6x/DIT4MT6M0UmK7eVUc5sPxDMrgjFlLXOEf
4TWkwg6zx3GEj8CzKIufzFrhKp+PbkiNnWZP4CgficYoh5/NXsA1/jFex93Y
ZVYN3/NRaIKbenekwga9PH7hL+I6X4Ducb1uwjtmWbFbT4PdvDqO8dHI6DWj
9QfQVL8leyA1ylj7TH5unodP5yXxiH5WtsYNXtLaJ3whz8bH80ayYNxnuT7u
hewR918O1OvJbPGz5ArZXO6xXkDO1hvL8nHtcmNcm0xrfQ+vgdr6cb2oXKCP
4Zn4GJ4Plfga+Zz53/IN3I2y5kvlF+Z5+Qe8FCro52Qb3OSLkN36BL1QvD/2
hz6IZ8dePR328pr4gY9FM/yj90QabNQr4lfeFrf4YvREenxlVgs/8nFojkeR
AV/HdeIEfxctUCm+s7hW3IPMuBdZkDXuf3xu7PO+OjjJ38PzqIwc+Ma8Lk7x
99ESVXDerB3+5p/gTeTEt2ZP4jQfj1Z4DL+Ztcc/fAl64T58Z/YUzvAJeAG3
9TeRFpv0qvidv4Tb/NP4bO7vRL0w3orzpQ/mOfCV/pA+J/YMcun7Yx/hJz4x
7of1sXr+2C/6HdkL6VDO2jK52fwBPoM/I0vH+ZWfR1q7IDvE9Zrd0UvJJbGP
4izE/ZCT9KdlkXhWyA1xdmXvOONyiF5f5ox9JVfKFvJr6w/LuXoTWSHOotwk
c1s7EO/Dz7yY+UI+Kb5jPo4/GGdO/zfuD9LjSz2f9ZlxXuPZol+UHfEvXxrf
ifXJelH0ieeKPpTfh336/TjIG+AXPhltEA/R3mYZsEWthj94J8TDd5noG88G
HNIb4iyfgraojj/NXkYiLNf7xbnD4XhG4ByfinaoEd9NXA/y40jcZ/zKp6E9
auJBHI3vD+f5dLyEWrhk9goSY4XeHwXwvf4sfuMfoENcguvrY5YRW/Xa+It3
RhKs1HN5zRReDAP0NPqw2H+oyFfJb8wL8nkxQw2+WT5kfkw2jrNo9rteXC7S
Z8S55e/GfZcFZGW5Vj4vO8btl331TNim18FlHn8Ak2KV/nbsKRyPPYULfCY6
IYn39zO7B9v1urjCuyAZVuvvIK3XDY89iG/jWvADb4qLfFY8X7zmvbim+D71
pHp/nhk74vvSZ/GycXb0q7IrkmONntv6VF4cA/V0+gh+Px7lq+V35oX4RzFD
Tf6lLGT+Y5xB1DX7Qy8hF8dnlB/qWeX7sQflw7KKXCdbylesJ5MD9KfkvbK8
XC6byZ2xp+LnxB6R5eIcyS/i9dauydeQAqXNP5Vr49zwabwEBunp9ZE8D/br
hfX5vBIK6yfi9+FPPhudkdxr3jbLgl16PVzn3XAX1umDUQQn9ea4xOfgVdRH
UZwyb4G/+Fx0QYN4jsSei/uF07G3cJnPQ1c0xA2z15ES6/UhyOBzjdLz4kD8
fv3j2KOoxbck+v//YCWt/Qd6bhXg
           "]]}, Annotation[#, "Charting`Private`Tag$373937#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1Hf4TnUYB+DXKEohIyOzIbL3KFupFLJCKTuKn2RURlRmKRo2lb33rJBN
ZYQkqyibRBmR0f1c/XFfz/N8vue813nPOd+Tt2WneknJEonES8kTiVYUTplI
zEyRSFThnHk5w6kr3yprRUb2y1pTRD7LXJXz5i9pI/vN/Ab5GSF7RrZN35pM
HJC9JvtT35/StJEVlc3WV+Mvc2/zVf0wvjK3Nf+uf5MCjJTVk22P88kcv2dO
zij9Qetd9Of0A5igz0WZ+E31Tibp2zqumH6Ovnr8rj4Tf8vfUv+VfcQU/b18
LX9JPSJbpPZQP1PvYTUPmYeot/EVn5tnqg+yMa7N+fXVH+QL1LbqWDUrq7g7
rldNwXJGm6erD/CLc7uq52UDmajPTdm4RjUtk1P8/0yL6+fqa3DB3Md8Tf8x
K8ztzEf1PSnIaFkD2Y44nyz8GsdRQj7P/CgXzSsZQ3tKWpsvf4xL5lWM5WVK
WVsgr8ll8zeMo6F8p6wdWTkke4XS8oXmx/nHvJrxNJLvkrUnG4dlHSgjX2R+
givmNXFNsmPmXhSKZyN7Vvaj/mWyx70zp2SM/jfr3fR/6QdRLu6ROR1T9B2t
l9Uv1j/JVXNf83X9J6yN/2o+ru/N5/ocFNZ/oN7OF/pZav54HxzfWN0tW6i+
oo5Ts/FNvEdxHeotfMlY8ww1HxtiDzi/e7yf8iXqYHWSmoe1lI/rUtOzgqnm
OfFekuTccuoSWS1G6TPHOy5/W70h+5R18TzMJ/RvUYQPzWmYoP/CehP9T/oO
5GCw+VbG6Y9Yf11/Qf8eFegkKy9bqn+Ka+b1TKCpfE/ca3JyVPYqFeTLzE9z
3byBiXTm4dgf8trcMG9kUnxbYt/HPonnGvcqroU32JLG90PtQU96xXeGR+Je
+5063DRvYnLsfyrGPpbXJcFm2RSek/9sTiIXx2KPUSm+EeZnSMa38a7KTur7
UJSpsudle+O+kJvj8V5ROZ6buR7J+U7WUXZK35diTJM1k+3Tv0qeuM/mVIzX
n4j/q7+of5/J+rw8HM9XvYtp+rlqQd52fBV1pWy+Wj++B/Etiiy+ReZ31Jvq
UnV4/Af1PtbxvfOT1NPyxfF78Y6oOVlDcfNQ9Y64N0w0z1YLMN25L6j7ZZ0Z
r88e1xvXrqbmM/1Jx72pv6QfwiMMN2eI34jrs141vqH6BqTkXXOCEfot1jvp
z8SxlIh9JXtRdkD/GvdyKt4P2eXYv1SM35FVi/2pb8gtbI13VPZHrFOSmbLm
soP6LtzHaVk/qstXmxtxK9tks2gR33VzV+7njKw/NeLemZ8lFdtlsxnAo7HX
ZY1JzQ+yOWz1fg9UH4vnIm/CbeyQzWUQNa2tlzXldnbK5jGYx+MbI3uONOyS
zael/FdzNx7gj9g/sn/iu0CleP9kT8g26p9njD5LPHN9PzVZ7GVGxvur3h/X
Ed/l2M/q2TiOUiyQtZId0ncnH2dl7/OkfJO5GXeyW7aQIdSytln2Amn5SbaI
D3jK2reyF0nHHtliPuRpa9/JmpOen2VLGErteL9lLbiLvbKlDOMjPuYT6jhu
i/WWZGCfbBmt5YfNr/Mgf8Z3R3Yl9gSVGWHOyAz9PLVQ/Ec+dex/MHFE/g==

           "]]}, Annotation[#, "Charting`Private`Tag$373937#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1WW4VFUYBtChQUJEUrqkpQVJQSkBSekOQTqkBBFpJSQVpbtRQmnp7u7u
UDoUENf+sZ7vffc5d+bk3PTNOlbvECUSiTSKGonsjB6JfB8zEonJ5BiRSBVS
8K/1XexmD3vZx34OMMz+sZhi36q8wwvr861lZp3egcIctD7cWmym6tVIyUvr
C6y9y3q9Ix9wyPoIa3GYplcnFa+sL7SWhT/1ThThsPWR1t5gul6D1GzUi3FE
HsR/9lukZ2WD3pmi7NMrcFEewxH7/aDHZYZek5NyTe7IadgkF+douFZmdwbL
N8zm/Cu/9jmL5Wxs1J+ZXekiXzQbkDRWJPJIj2F+q2cwi+n75U9IpF8Kxy5/
RRp9rH5Xbk0K/bUexxykZzKP+t5RcjwS6DNtfyR35DP5VJjclaPa3ldOK282
S3As3EuzB0Pkm2YLXsgRlsjZ2SR35ZLckMdycQ7IFbksj+OY4xmtx2eWXot0
bNFLclweShR+1XOwWf6SEhz392PCuTBbr036cOz8Zi0nW+RulOSE/cdae5M5
eh0yEC3cR9vGWU/IXL0uGYkerottpznDWc5xngtc5BKXGe9v32Kev6lHpnD/
uGLbj+GeMV+vT2ZistRaLrbK3fmQq/b/ydrbLNAb8C6xWGbtPbbJPSjFNftP
sJaYhXpDsrBV/5AT8nfEZrmem+1yT0qH91CvxBV5PNd93s96EhbpjTgt1+Iv
OSvb5FKclL8Pzxkr9DzskHtxWW7EE/mj8P7Klbka3gGzNz/Kf5lfEAnvqudu
sHnDMfwS3oNwv6wttt9juRMp9cb6Gbl2OG/973AfzW/0dGY2fbtcOtwT/VT4
XZF7klofpt+SW5JcfxmurzkgHIP8u5mXnfJz88vwnoV7aTbmqfxx+I2RP+Wa
/BN/y22Iwk3nMNFMxhLbmnBWrsM9OTs75I84LQ8nLn/o+dgl96ZMOFafNSkc
K7/qTclBPFZay89uuQ9luW3/yeF3gN/0ZuQkPndsu8sU295hqbXm5CJBuB+2
TQ3XmWV6C97jTVZZK8Ae+WvKhXO2/zRrqViutyQ3O/WPOSOPICGr9YLslfuG
Z11uwjO5PEfkKlyXI+5HH3mCfM9sS1TiWh8SrqHvnR7uJyvs88TszOfyObNu
eIbtez+8x2Y/Pb2ZR98ll+GsPJK3WKO/zz75Gypw33fMsJaG3/VW5GW3XpZz
8g8kYq1eiP1yv/Beyk15Ln/CUblqeLbln8Nny+2IxgPfM9NMyx+2tea8XC9s
k/OxRy7HefmV2YtR4V6Hc+ZVeMed38Dw2yGvMwuT0NoB/R+5W7hP4X9KeM/l
ZuH51P8Jv0dmfz2jWVE/JlcLn6Xf1KOYX4djNH/RH8jtwzOkRzfjmUPNh85l
VngPWWm/p2aX8I7LF8z6YR85P3vl8lyQR4dnU27Ff3Ji1ssfcFDuTyWO69W5
JU/kke+bHe4tq/Q2FCAJf1orwiF5AJXD74j951jLwGq9LQVJGp4h2+aGa8Aa
vR3vkyych23PeM482zOx1np7CpGcDdaKclgeyKec0GtwW57EQ7kDMYjvmn1n
Zg73wOf+D020QpA=
           "]]}, Annotation[#, "Charting`Private`Tag$373937#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1HccTmUYxvHXyqhspYRk75nMEDKKMjIioexV9szeoxANq2ErWxQhRcim
QmWkoULZo6Hv/cfvc92/65zzft5zznOeXG17NOyeJJFItEuaSORLmUhcS5VI
9ENafMIHoRnuS51IvK0riR/4XOTHdd4f6bCRD0Zz3O/8WbpSOMHnoQBu8AFI
j018CJ5FNufP1pXGSf4OCuImH4gM+JS/ghYohFu6QciIzXwoWqIw/tYNRiZs
4cPwHIrgH90QZMZWPhytUBTFUBwlUBKlUBpl8DD+dc0ryILP+Ag8j7L4TzcU
92AbH4nWeMC9zdGVwSn+Lh7BbT4M9+JzPgptkN35c3UP4zR/D+WQ0A/XZcUX
fDTaIod+nq4sfuTvozyS6Efo7sN2PibuQfcRr4eb/AXk1L3DH8EZPh+P6T7n
z+IOVNAl1Y00348dvC7/ytwWY+MZ8PXm+rjFm/Kj5h54kT/I3zWXi2vMZ+RP
+qfNB+Ndyo6ym7wgFzhW3fxFrDHZQnaUv8mRMqVsKX+I5y57y57yshwvK7o+
mRzF+8hs8nl5Sg6XXzr+hNzDX0AX8zk5Lt6PeYP5KbQz/yL/jm/BfMz8UvQ8
F3/PXB4/8wb8kLkTFvIafHv8T6RCJV1y3WjzA9jJx8f71X3Mn8Y/vD0e0r0f
zx6/8EWojBT6Mbrs2MUnoANy6+frKuJXvhiP4g79WF0O7OYT0RFVkNKxcfqc
+IpPQidURbVYB/EO4j5QE48jlWvGO/9B7OGT0Rl59AviHnGWL0EtpNZP0OXC
Xj4FXZBXv1BXGb/xpaiNNPqJuoewj78a61n3CW+Af3lX5NMt4o/id96QHzZ3
xrL4v3yH+TmkRh3dnbpJ5txobT4t9+ufNO+NdYrXeAW+0dwQ7c2/yv9ibzMf
jz1AvhzrQF6MNSO7OZ5fLuZ9ZZVYV/InOUL+4XgjeST2JtlFdpd/yjHyg3i+
sS75ANkq1pH8XaaJ+zCfiLWMXuYrsq5r7jJPNudBG/OP8oC+nnlfrFNM5RX5
JnMj3I59l38X30z8D16ALzFXxTnemH9t7ooP413ynfEN4U48obtbN8WcFwf5
NFTSfcobIxHfv66gbqm5Gs7z5fHMkVb/qi4fDvHpscZ1m/kzSBLPWFdIt8z8
GC7wFXF/SKd/TZcfh3l9vj/eWfxv83k5Wr4e34LcwpsgKV7WFY7nbq6OP/nK
+A2k10/VFcARPgM9UUT/oa4G/uKr8BQy6KfpCuJrPhO9UFS/XFcTF/nq2O+Q
UT9dVwjf8DfQG8X0K3SP4xJfE3sKMsU96ArjW/4m+qC4fqWuFi7ztfEdILN+
hq4IjvK30Bcl9Kt0tXGFr4s1iSz6mbqiOMbfRj+U1K+ObwdX+UexLnCP/g1d
MRzns2I/0W3lTZEM/XWldGtineIaX49ncK/+TV1xfMdnx56j+4w3Q/L4BnSl
dWtjreF6XMu/MXfDhtgv+K74lnFXvFtdVt1b5hL4Pt4PP2DugDmxr/Ft5ubR
mc/KFGhh/j6+rVgb5ktyoPPLmNeZ+8knY4+QP8sbjjUxf2seIrvHWpd/ybGx
nzteR+6O35FtZOfYB+QoebdsJU/KYbKv7C2vygmyqev/B7y9Nrs=
           "]]}, Annotation[#, "Charting`Private`Tag$373937#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1GXYVFUUBtChSxoFAekQkFZRupFGuqSkkTJA6e6UBunublAaQUppQWmQ
EClp0HV+rGe/+z33fgMzcyd9s47VO0SJRCIlokYiw+NEIp/Ei0ROxI1EOpOG
S7qBusSssDdgu+4L+1N5AiWJwQh9ef1J+UvSclk3SJeElfaG/Khrb38mT6QU
MRmnS8s2uQ0jXVfBfkr+inRc0Q3WJWWV/TN+0nWwP5cnUZpYjNJX1J+WvyY9
V3U76Kh/YZ9MGWIzWl9Jf0b+hgxc0w3RJWO1vRE7dZ3sL+UplCUOY/SV9Wfl
LmTkum4XnfWv7FMpR1zG6qvof5e7kokbut18T1Vn53Tfkpm/dHsYx3gmMJFJ
TGYKU6nmvvOu/44s3NTtZRqfOvtD142s3NLt40v9a/s0PiEeP+ir6/+Uu/Mu
t3X7+Ur/X7iG8rzBdH0N/QW5B9m4o/uZr/URpusqEJ8Z+pq6i3JPsvO3bqju
TdbYG3NA9409CjPsFUnAeHs6tsttmem6WvZLci9yhP+PPSt75LvOh8lvsdbe
hHlyHg7LB513kaMy077c/JhK8izzPQ7IG8ySJAzffzM9P8qrzSK0kxeZ77OL
X+2bzTLhfmZ5ndrmZf02s7e51CwQ/p3hdcL7ar7LDvba15rF2Mc/7h9uJg+v
yzrnK81CNJXnm3k5Im8yS/OLe7qa0cLr6yszW87JQTlReBblDPwkfxHO3VPH
fkXuQ07u6UboUrDe3oxDum/t0Zltr0Ji5ujr6q7KfcnFfd1hvtPHYI6uKkmY
q6+nuyb3IzcPdEeYR31n13X9ycND3VHms4CFLGIxS1hKA/fccO0A8vJId4xl
NHT2l24g+fhX9yvd9DGZq6tG0vBd0H+muykPIj+PdSN1b7PB/jm/6brbYzHP
/inJmGTPGD5PuT0rXNfIfksezPvh+bFnC5+x/MT5KDklG+3NWSDn46h83HkP
OTbzw98zC1I9vO9mLnaGz92+0SzFz+G5sk82M4XPOVxjX2MWDd8zOtgXmx+w
m9/sW8yy4XvCSq/b2Lyt324OMZeZH4V7wjNtZme/vM4szlP3jDZTsUm/yixM
C3mhmZ9j8gnX9ZTjsMBeI3wn5Nwckt9iipw5PFdyx/C33NPEfkceyoc8043R
pWazvSUndb3scVlor0ny8Mzqm+r+lodRgOe6sbp32GJvxSldb3s8FtlrkSK8
d/pmurvycD4Kv0P2HOH9ltebJcL7wYvwu26mYauz1pzW9bG/wWJ7bd4Oz7v+
8/CsyyP4mJe6M6yjubN7upEU5JXuLOtp4ey+bhSFeK37nQ20dPZAN5rC/Kc7
x0ZaOXuoG0MRIpzXb6K1s0f2sRQlCn/o++rjs8Reh5Tht07fRvev/D3FiMqf
+n76BCy11yVV+H7p2+oey+MoTjQu6PvrE7LMXo/UbNW30z2Rx1OC6FzUD9An
Yrm9Pu8w1Z4lfJ/lTiyRP+R4+FtmufCcsM39/wMzPkNS
           "]]}, Annotation[#, "Charting`Private`Tag$373937#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"LQR feedback solution\"", TraditionalForm], 
     PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1c\"", "\"u1c\"", "\"x1c\"", "\"\[Theta]dot1c\"", 
       "\"xdot1c\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8648376866338243`*^9, {3.864837721244707*^9, 3.8648377460817285`*^9}, {
   3.864837800602215*^9, 3.8648378151965265`*^9}, {3.864837882180011*^9, 
   3.8648379006680717`*^9}, {3.864917359659708*^9, 3.8649173767071624`*^9}, 
   3.864919300876232*^9, {3.864919337508316*^9, 3.8649193485657187`*^9}, {
   3.8649194958228164`*^9, 3.8649195287531037`*^9}, 3.864920239187001*^9, {
   3.864921249563326*^9, 3.8649212767894692`*^9}},
 CellLabel->
  "Out[414]=",ExpressionUUID->"0d0be3b3-7aea-43f3-87a4-c85a8ce6f8a6"]
}, Open  ]],

Cell["Plot the timing wrt n for a fixed initial condition", "Text",
 CellChangeTimes->{{3.86491957909173*^9, 3.864919591628652*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"39878c2c-e942-4347-a752-27bba723a924"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"TestTiming", "[", 
   RowBox[{
   "n_", ",", "ICs_", ",", "order_", ",", "A_", ",", "maxIter_", ",", 
    "maxError_", ",", "\[Tau]_", ",", "\[Tau]1_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "t1", ",", "t2", ",", "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", 
      "\[Theta]dot1a", ",", "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0",
       ",", "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "x1c", ",", "xdot1c", 
      ",", "\[Theta]1c", ",", "\[Theta]dot1c", ",", "u1c", ",", "J", ",", 
      "InitGuess"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"t1", ",", 
        StyleBox[
         RowBox[{"{", 
          RowBox[{
          "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
           "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
           "\[Lambda]3ff0", ",", "\[Lambda]4ff0"}], "}"}],
         FontWeight->"Plain"]}], 
       StyleBox["}",
        FontWeight->"Plain"]}], 
      StyleBox["=",
       FontWeight->"Plain"], 
      StyleBox[
       RowBox[{"AbsoluteTiming", "[", 
        RowBox[{"ffCartPendulum", "[", 
         RowBox[{
         "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", 
          "order", ",", "maxIter", ",", "maxError"}], "]"}], "]"}],
       FontWeight->"Plain"]}], 
     StyleBox[";",
      FontWeight->"Plain"], 
     StyleBox[" ",
      FontWeight->"Plain"], 
     StyleBox["\[IndentingNewLine]",
      FontWeight->"Plain"], 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"t2", ",", 
        StyleBox[
         RowBox[{"{", 
          RowBox[{
          "x1c", ",", "xdot1c", ",", "\[Theta]1c", ",", "\[Theta]dot1c", ",", 
           "u1c", ",", "J"}], "}"}],
         FontWeight->"Plain"]}], 
       StyleBox["}",
        FontWeight->"Plain"]}], 
      StyleBox["=",
       FontWeight->"Plain"], 
      RowBox[{
       StyleBox["AbsoluteTiming",
        FontWeight->"Plain"], "[", 
       StyleBox[
        RowBox[{"testWithFB", "[", 
         RowBox[{
         "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",",
           "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A"}], "]"}],
        FontWeight->"Plain"], 
       StyleBox["]",
        FontWeight->"Plain"]}]}], 
     StyleBox[";",
      FontWeight->"Plain"], 
     StyleBox["\[IndentingNewLine]",
      FontWeight->"Plain"], 
     RowBox[{"t1", "+", "t2"}]}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ICs", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";", 
  StyleBox[
   RowBox[{"\[Tau]", "=", "5"}],
   FontWeight->"Bold"], 
  StyleBox[";",
   FontWeight->"Bold"], 
  StyleBox[
   RowBox[{"\[Tau]1", "=", 
    RowBox[{"\[Tau]", "*", "1.25"}]}],
   FontWeight->"Bold"], 
  StyleBox[";",
   FontWeight->"Bold"], 
  StyleBox[
   RowBox[{"A", "=", "0.2"}],
   FontWeight->"Bold"], 
  StyleBox[";",
   FontWeight->"Bold"], 
  StyleBox[
   RowBox[{"order", " ", "=", " ", "4"}],
   FontWeight->"Bold"], 
  StyleBox[";",
   FontWeight->"Bold"], 
  StyleBox[
   RowBox[{"maxIter", " ", "=", " ", "30"}],
   FontWeight->"Bold"], 
  StyleBox[";",
   FontWeight->"Bold"], 
  StyleBox[
   RowBox[{"maxError", " ", "=", " ", "0.01"}],
   FontWeight->"Bold"], 
  StyleBox[";",
   FontWeight->"Bold"]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n1", " ", "=", " ", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n2", " ", "=", " ", "200"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"TestTiming", "[", 
      RowBox[{
      "n", ",", "ICs", ",", "order", ",", "A", ",", "maxIter", ",", 
       "maxError", ",", "\[Tau]", ",", "\[Tau]1"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "n1", ",", "n2", ",", "5"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", "data", "]"}]}], "Input",
 CellChangeTimes->{{3.86491975170458*^9, 3.8649200747844825`*^9}, {
   3.8649201193449864`*^9, 3.8649201277452536`*^9}, {3.864920161157383*^9, 
   3.8649201804041224`*^9}, {3.8649202316614504`*^9, 
   3.8649202570341964`*^9}, {3.8649202887668743`*^9, 3.8649203111236*^9}, {
   3.8649203998797293`*^9, 3.864920406429599*^9}, 3.864920690003351*^9, {
   3.8649207565047197`*^9, 3.8649207687887225`*^9}},
 CellLabel->
  "In[415]:=",ExpressionUUID->"00a37dc2-62ae-4dae-b415-9099fdf1317c"],

Cell[BoxData[
 TemplateBox[{
  "FindRoot", "lstol", 
   "\"The line search decreased the step size to within tolerance specified \
by AccuracyGoal and PrecisionGoal but was unable to find a sufficient \
decrease in the merit function. You may need more than \
\\!\\(\\*RowBox[{\\\"MachinePrecision\\\"}]\\) digits of working precision to \
meet these tolerances.\"", 2, 419, 36, 17534376668544537073, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.864921300968604*^9},
 CellLabel->
  "During evaluation of \
In[415]:=",ExpressionUUID->"823c8845-e644-48f4-aa88-876cd1daeb4e"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGBQB2IQDQEf7F/81GN40c3uABVwSGKw+fs7/Zk9hMvhcMck
xyuj8RWUL+AgU7LubHbgeyhfxKHlQ8bjjtCPUL6Ew4T/sb8+yX6G8mUcfrPu
Trz96CuUr+CwrGbth8uyP6B8JQc33WaFbxEwvopDg8W/X9c9fkH5ag6r4l/W
VJj9gfI1HJ7ae6r5HBWCulfLoSbYvdbjHYyv45BesPTFpMcwvp6Des6sS6G9
glC+gcOju7ftvq6EyRs6zJK4o7BEQhjKN3LI0jLg3KMgBuUbO5Qys947WS4K
5Zs4HKit+HgzF8Y3dTjgIq5fuB2m3syhTMW3qOynOJRv7pDQYPz8/F0pKN/C
4bSo5fyp26WhfEsHt/3HVwXZyEH5Vg41IZuCvj+XhfKtHaR0nhmKXFWA8m0c
In2vC8fqK0H5tg4W0m2vHGNgfDsHC5fGx9f3wPj2DhwPLx4T5FaB8h0cZkW0
Frl3QPkNDg4bwxbzlu1Ug8o7OqguqGjpTFSHyjs6aJX/miOWrAmVd3Ko9Nob
+1RcCyrv5CBXsOPVVE8on8HZYWt70nTfRm2ovLPDFa1fzsbyeg4AVPuhhA==

      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 39}, {0, 15.060938}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8649204607089396`*^9, 3.8649207652348776`*^9, 
  3.864921541499359*^9},
 CellLabel->
  "Out[420]=",ExpressionUUID->"c8081f24-ed3c-49b5-97fd-6320a8ac08fb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Min", " ", "=", " ", 
    RowBox[{"-", "\[Pi]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Max", " ", "=", " ", "\[Pi]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]dotMin", " ", "=", " ", 
    RowBox[{"-", "2"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{"\[Theta]dotMax", " ", "=", " ", "2"}],
   FontWeight->"Plain"], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"xdotMin", ",", "xdotMax"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Init", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]Min", ",", "\[Theta]Max"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]dotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]dotMin", ",", "\[Theta]dotMax"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "xdotInit", ",", "\[Theta]Init", ",", "\[Theta]dotInit"}], 
     "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Tau]", "=", "5"}], ";", 
   RowBox[{"\[Tau]1", "=", 
    RowBox[{"\[Tau]", "*", "1.25"}]}], ";", 
   RowBox[{"A", "=", "0.2"}], ";", 
   RowBox[{"order", " ", "=", " ", "4"}], ";", 
   RowBox[{"maxIter", " ", "=", " ", "30"}], ";", 
   RowBox[{"maxError", " ", "=", " ", "0.01"}], ";"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n1", " ", "=", " ", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n2", " ", "=", " ", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"TestTiming", "[", 
      RowBox[{
      "n", ",", "ICs", ",", "order", ",", "A", ",", "maxIter", ",", 
       "maxError", ",", "\[Tau]", ",", "\[Tau]1"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "n1", ",", "n2", ",", "5"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", "data", "]"}]}], "Input",
 CellChangeTimes->{{3.864920781117711*^9, 3.864920799837621*^9}},
 CellLabel->
  "In[421]:=",ExpressionUUID->"21dbe1b5-6466-4952-9587-d4bdc27c8f51"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBmIQDQEf7F/GfJsw1YTFASrgMG3Vv6CA1xxQPoeDwszM
MMFMNihfwGHtZoHLJTZcUL6Ig9p73W8rXsL4Eg662Wv4TpnyQPkyDroqCSWV
yjC+gsMZnjK5AglOKF/JYYPeDgOZTG4oX8VhUpTGzDlaML6aw7Ybk36Fr4a5
R8Nh0mmVfp817FC+lkOGT3mvzzOYvI5DW2TGcxNvmH49h1ddyXkc+jD7DRzi
jjE3SG7ihfINHfbkfjgfFi4A5Rs5eHy5fqForSCUb+zQknZ9r+hLYQcA9SxG
5w==
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 2.3894566722222272`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 19}, {2.3894566722222272`, 4.977622}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8649218432941856`*^9},
 CellLabel->
  "Out[433]=",ExpressionUUID->"b8dc6135-5b4b-4819-8d59-1be07f569c48"]
}, Open  ]]
},
WindowSize->{1440., 747.75},
WindowMargins->{{-6, Automatic}, {Automatic, -6}},
FrontEndVersion->"13.0 for Microsoft Windows (64-bit) (February 4, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"dbf89052-0529-4a5a-9aea-3964104c39a4"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 271, 6, 51, "Text",ExpressionUUID->"e1d1232c-86cc-4804-8aba-9808e8088f82"],
Cell[832, 28, 78374, 1920, 2284, "Code",ExpressionUUID->"8daba21d-9510-4b30-8c25-b5a0584418ca"],
Cell[79209, 1950, 225, 3, 51, "Text",ExpressionUUID->"74e82f71-7d3c-4f7a-b18d-cc3109df4131"],
Cell[CellGroupData[{
Cell[79459, 1957, 10808, 311, 485, "Input",ExpressionUUID->"c47d3c4e-60ca-4c63-8b5c-ced31cd89cdf"],
Cell[90270, 2270, 684, 13, 32, "Output",ExpressionUUID->"4ec9965c-39d3-443b-8bc6-4c71d7992d87"],
Cell[90957, 2285, 569, 9, 32, "Output",ExpressionUUID->"91698b6c-6f5e-47c4-9476-2af9b614fcef"],
Cell[91529, 2296, 62235, 1117, 206, "Output",ExpressionUUID->"be9a5958-43f8-4fa9-b189-d66ed1409675"],
Cell[153767, 3415, 67927, 1209, 208, "Output",ExpressionUUID->"15175767-c350-4970-9295-319e48587d22"],
Cell[221697, 4626, 74490, 1319, 206, "Output",ExpressionUUID->"0d0be3b3-7aea-43f3-87a4-c85a8ce6f8a6"]
}, Open  ]],
Cell[296202, 5948, 228, 3, 51, "Text",ExpressionUUID->"39878c2c-e942-4347-a752-27bba723a924"],
Cell[CellGroupData[{
Cell[296455, 5955, 4530, 131, 200, "Input",ExpressionUUID->"00a37dc2-62ae-4dae-b415-9099fdf1317c"],
Cell[300988, 6088, 599, 12, 46, "Message",ExpressionUUID->"823c8845-e644-48f4-aa88-876cd1daeb4e"],
Cell[301590, 6102, 1978, 51, 245, "Output",ExpressionUUID->"c8081f24-ed3c-49b5-97fd-6320a8ac08fb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[303605, 6158, 2638, 76, 257, "Input",ExpressionUUID->"21dbe1b5-6466-4952-9587-d4bdc27c8f51"],
Cell[306246, 6236, 1663, 45, 236, "Output",ExpressionUUID->"b8dc6135-5b4b-4819-8d59-1be07f569c48"]
}, Open  ]]
}
]
*)

