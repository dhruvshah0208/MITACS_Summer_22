(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    375449,       7562]
NotebookOptionsPosition[    371474,       7503]
NotebookOutlinePosition[    371880,       7519]
CellTagsIndexPosition[    371837,       7516]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
Packaged the Stochastic approach in one single function and it seems to work \
well\
\>", "Text",
 CellChangeTimes->{{3.8648378409682493`*^9, 3.864837871408472*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"e1d1232c-86cc-4804-8aba-9808e8088f82"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Remove", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
  RowBox[{"(*", 
   RowBox[{"ICs", " ", "-", " ", 
    RowBox[{"Initial", " ", "Conditions"}]}], " ", "*)"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Error", " ", "while", " ", "cosntraining", " ", "u"}], " ", 
   "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"CalculateSMatrix", "[", 
   RowBox[{
   "x1a_", ",", "xdot1a_", ",", "\[Theta]1a_", ",", "\[Theta]dot1a_", ",", 
    "u1a_", ",", "\[Tau]_", ",", "A_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x", ",", "L", ",", "RHS", ",", "xdot", ",", "\[Theta]", ",", 
      "\[Theta]dot", ",", "u", ",", "K", ",", "S", ",", "soltn", ",", "Af", 
      ",", "Bf", ",", "Q", ",", "fx", ",", "xState", ",", "R", ",", "Mf", ",",
       "x2dot", ",", "\[Theta]2dot", ",", "S0", ",", "sol2", ",", "t"}], 
     "}"}], ",", "\n", "\n", 
    RowBox[{
     RowBox[{"xState", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
       "}"}]}], ";", "\n", 
     RowBox[{"x2dot", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{"u", "+", 
         RowBox[{"A", " ", 
          RowBox[{"\[Theta]dot", "^", "2"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"A", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ";", "\n", 
     RowBox[{"\[Theta]2dot", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{"u", "+", 
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ")"}]}]}], 
     ";", "\n", 
     RowBox[{"fx", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
       "xdot", ",", "x2dot", ",", "\[Theta]dot", ",", "\[Theta]2dot"}], 
       "}"}]}], ";", "\n", 
     RowBox[{"L", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", "2"}], "*", 
       RowBox[{"u", "^", "2"}]}]}], ";", "\n", 
     RowBox[{"Af", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{"fx", ",", "xState"}], "]"}]}], ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{"For", " ", "nD", " ", "stuff", " ", "use", " ", "Grad"}], 
      "*)"}], "\n", 
     RowBox[{"Bf", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"fx", ",", "u"}], "]"}]}], " ", ";", 
     RowBox[{"(*", 
      RowBox[{"For", " ", "1", "D", " ", "stuff", " ", "use", " ", "D"}], 
      "*)"}], "\n", 
     RowBox[{"Q", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{
        RowBox[{"Grad", "[", 
         RowBox[{"L", ",", "xState"}], "]"}], ",", "xState"}], "]"}]}], ";", 
     " ", 
     RowBox[{"(*", " ", 
      RowBox[{"Fix", " ", "this"}], " ", "*)"}], "\n", 
     RowBox[{"Mf", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{"L", ",", "u"}], "]"}], ",", "xState"}], "]"}]}], ";", "\n", 
     RowBox[{"R", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"L", ",", 
        RowBox[{"{", 
         RowBox[{"u", ",", "2"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"S0", " ", "=", " ", 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]]}], ";", "\n", 
     RowBox[{
      RowBox[{"RHS", "[", "t_", "]"}], " ", ":=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"IdentityMatrix", "[", "4", "]"}], " ", "+", " ", 
         RowBox[{
          RowBox[{"Af", "\[Transpose]"}], ".", 
          RowBox[{"S", "[", "t", "]"}]}], " ", "+", " ", 
         RowBox[{
          RowBox[{"S", "[", "t", "]"}], ".", "Af"}], " ", "-", " ", 
         RowBox[{"KroneckerProduct", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"S", "[", "t", "]"}], ".", "Bf"}], ",", 
           RowBox[{
            RowBox[{"Bf", "\[Transpose]"}], ".", 
            RowBox[{"S", "[", "t", "]"}]}]}], "]"}]}], ")"}], " ", "/.", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "->", " ", 
          RowBox[{"x1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"xdot", " ", "->", " ", 
          RowBox[{"xdot1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"\[Theta]", " ", "->", 
          RowBox[{"\[Theta]1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"\[Theta]dot", " ", "->", " ", 
          RowBox[{"\[Theta]dot1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"u", " ", "->", " ", 
          RowBox[{"u1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}]}], "}"}]}]}], ";", 
     "\n", 
     RowBox[{"sol2", " ", "=", " ", 
      RowBox[{"S", " ", "/.", " ", 
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"S", "'"}], "[", "t", "]"}], "==", " ", 
            RowBox[{"RHS", "[", "t", "]"}]}], ",", 
           RowBox[{
            RowBox[{"S", "[", "0", "]"}], "==", "S0"}]}], "}"}], ",", "S", 
         ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], " ", "}"}]}], "]"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"S", " ", "=", " ", 
      RowBox[{"sol2", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}]}], "\n", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"CalculateGains", "[", 
   RowBox[{
   "x1a_", ",", "xdot1a_", ",", "\[Theta]1a_", ",", "\[Theta]dot1a_", ",", 
    "u1a_", ",", "time_", ",", "A_", ",", "\[Tau]_", ",", "S_"}], "]"}], ":=",
   " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x", ",", "L", ",", "RHS", ",", "xdot", ",", "\[Theta]", ",", 
      "\[Theta]dot", ",", "u", ",", "K", ",", "Af", ",", "Bf", ",", "Q", ",", 
      "fx", ",", "xState", ",", "R", ",", "Mf", ",", "x2dot", ",", 
      "\[Theta]2dot", ",", "S0", ",", "sol2", ",", "t"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"xState", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
       "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"x2dot", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{"u", "+", 
         RowBox[{"A", " ", 
          RowBox[{"\[Theta]dot", "^", "2"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"A", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Theta]2dot", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{"u", "+", 
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ")"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"fx", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
       "xdot", ",", "x2dot", ",", "\[Theta]dot", ",", "\[Theta]2dot"}], 
       "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Bf", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"fx", ",", "u"}], "]"}]}], " ", ";", 
     RowBox[{"(*", 
      RowBox[{"For", " ", "1", "D", " ", "stuff", " ", "use", " ", "D"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"K", " ", "=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Bf", "\[Transpose]"}], ".", 
         RowBox[{"S", "[", 
          RowBox[{"\[Tau]", " ", "-", " ", "time"}], "]"}]}], ")"}], "/.", 
       " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "->", " ", 
          RowBox[{"x1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"xdot", " ", "->", " ", 
          RowBox[{"xdot1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"\[Theta]", " ", "->", 
          RowBox[{"\[Theta]1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"\[Theta]dot", " ", "->", " ", 
          RowBox[{"\[Theta]dot1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"u", " ", "->", " ", 
          RowBox[{"u1a", "[", "time", "]"}]}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", "K"}]}], "\n", "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ffCartPendulum", "[", 
    RowBox[{
    "ICs_", ",", "n_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "A_", ",", 
     "order_", ",", "maxIter_", ",", "maxError_", ",", "uMax_", ",", 
     "maxCount_", ",", "maxJ_", ",", "initGuess_"}], "]"}], ":=", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "InitGuess", ",", "J", ",", "S", ",", "K", ",", "count", ",", "error", 
       ",", "x", ",", "dist", ",", "xdot", ",", "f", ",", "\[Theta]", ",", 
       "\[Theta]dot", ",", "\[Lambda]1", ",", "\[Lambda]2", ",", "\[Lambda]3",
        ",", "\[Lambda]4", ",", "\[CapitalDelta]t", ",", "bcs", ",", "eqns", 
       ",", "sv", ",", "froot", ",", "xff", ",", "xdotff", ",", "xff0", ",", 
       "xdotff0", ",", "\[Theta]ff0", ",", "\[Theta]dotff0", ",", "uff0", ",",
        "\[Theta]ff", ",", "\[Theta]dotff", ",", "uff", ",", "\[Lambda]1ff0", 
       ",", "\[Lambda]2ff0", ",", "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", 
       "i", ",", 
       RowBox[{"xGuess", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          SubscriptBox["xGuess", "i"], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}]}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"\[CapitalDelta]t", "=", 
       RowBox[{"\[Tau]", "/", "n"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"{", 
         RowBox[{
         "x_", ",", "xdot_", ",", "\[Theta]_", ",", "\[Theta]dot_", ",", 
          "\[Lambda]1_", ",", "\[Lambda]2_", ",", "\[Lambda]3_", ",", 
          "\[Lambda]4_"}], "}"}], "]"}], ":=", 
       RowBox[{"{", "\n", "\t", 
        RowBox[{"xdot", ",", "\n", "\t", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}],
           " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
               ")"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", "\[Lambda]2"}], 
              ")"}]}], "+", 
            RowBox[{"A", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", "\n", 
         "\t", "\[Theta]dot", ",", "\n", "\t", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}],
           " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{"1", "/", 
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"A", " ", 
                   RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
                 ")"}]}], ")"}]}], 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[Lambda]2"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
              ")"}]}], "-", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "-", 
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", "\n", 
         "\t", "0", ",", "\n", "\t", 
         RowBox[{"-", "\[Lambda]1"}], ",", "\n", "\t", 
         RowBox[{
          FractionBox["1", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"A", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "3"]], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["A", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"A", " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "-", 
               "\[Lambda]4"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "5"]}], "+", 
            RowBox[{
             SuperscriptBox["A", "3"], " ", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
              ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "6"]}], "-", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             SuperscriptBox["A", "2"], " ", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
              ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "4"], " ", 
             RowBox[{"(", 
              RowBox[{"4", "-", "A", "+", 
               RowBox[{"A", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}], "-", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "\[Lambda]2"}], "+", 
               RowBox[{
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}], "+", 
               RowBox[{"3", " ", "\[Lambda]2", " ", "\[Lambda]4", " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"A", " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "-", 
               "\[Lambda]4", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "A", " ", 
                   SuperscriptBox["\[Lambda]2", "2"]}], "+", 
                  SuperscriptBox["\[Lambda]4", "2"]}], ")"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox["A", "2"], " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2", " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], 
            "+", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "3"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", "A", " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "+", 
               RowBox[{"2", " ", "\[Lambda]4"}], "+", 
               RowBox[{
                SuperscriptBox["\[Lambda]4", "2"], " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"2", " ", "A", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"A", " ", 
                   SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], 
                  "-", "\[Lambda]4"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], 
            "+", 
            RowBox[{
             RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[Lambda]2"}], " ", "\[Lambda]4"}], "-", 
               RowBox[{"A", " ", 
                RowBox[{"(", 
                 RowBox[{"\[Lambda]2", "-", 
                  RowBox[{
                   SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
                 ")"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"A", " ", "\[Lambda]4", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]}], 
           ")"}]}], ",", "\n", "\t", 
         RowBox[{
          RowBox[{
           RowBox[{"4", " ", "/", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"A", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A", "-", "2"}],
              ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{"A", " ", "\[Theta]dot", " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}]}], ")"}]}], 
          "-", "\[Lambda]3"}]}], "\n", "}"}]}], ";", 
      StyleBox["\[IndentingNewLine]",
       FontWeight->"Plain"], "\n", 
      RowBox[{"InitGuess", " ", "=", " ", "initGuess"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       StyleBox["xGuess",
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       StyleBox["=",
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       RowBox[{
        StyleBox["Table",
         FontWeight->"Plain"], 
        StyleBox["[",
         FontWeight->"Plain"], 
        RowBox[{
         RowBox[{
          StyleBox["If",
           FontWeight->"Plain"], 
          StyleBox["[",
           FontWeight->"Plain"], 
          RowBox[{
           StyleBox[
            RowBox[{"i", " ", "!=", " ", 
             RowBox[{"-", "1"}]}],
            FontWeight->"Plain"], 
           StyleBox[",",
            FontWeight->"Plain"], 
           RowBox[{
            StyleBox[
             SubscriptBox["xGuess", 
              RowBox[{"i", "+", "1"}]],
             FontWeight->"Plain"], 
            StyleBox[" ",
             FontWeight->"Plain"], 
            StyleBox["=",
             FontWeight->"Plain"], 
            StyleBox[" ",
             FontWeight->"Plain"], 
            RowBox[{
             SubscriptBox[
              StyleBox["xGuess",
               FontWeight->"Plain"], "i"], 
             StyleBox[" ",
              FontWeight->"Plain"], 
             StyleBox["+",
              FontWeight->"Plain"], 
             StyleBox[
              RowBox[{"\[CapitalDelta]t", "*", 
               RowBox[{"f", "[", 
                SubscriptBox["xGuess", "i"], "]"}]}],
              FontWeight->"Plain"]}]}], 
           StyleBox[",",
            FontWeight->"Plain"], 
           RowBox[{
            SubscriptBox[
             StyleBox["xGuess",
              FontWeight->"Plain"], "0"], " ", "=", " ", 
            RowBox[{"{", 
             StyleBox[
              RowBox[{
               RowBox[{"ICs", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "3", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "4", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "3", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "4", "]"}], "]"}]}],
              FontWeight->"Plain"], 
             StyleBox["}",
              FontWeight->"Plain"]}]}]}], 
          StyleBox["]",
           FontWeight->"Plain"]}], 
         StyleBox[",",
          FontWeight->"Plain"], 
         StyleBox[
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"-", "1"}], ",", 
            RowBox[{"n", "-", "1"}]}], "}"}],
          FontWeight->"Plain"]}], 
        StyleBox["]",
         FontWeight->"Plain"]}]}], 
      StyleBox[";",
       FontWeight->"Plain"], "\[IndentingNewLine]", "\n", 
      RowBox[{"bcs", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"x", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"xdot", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"x", ",", " ", "n"}], "]"}], "==", 
          RowBox[{"Subscript", "[", 
           RowBox[{"xdot", ",", " ", "n"}], "]"}], "==", "0"}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]dot", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]dot", ",", " ", "n"}], "]"}], "==", "0"}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]", ",", " ", "n"}], "]"}], "==", "\[Pi]"}]}], 
        "}"}]}], ";", "\n", 
      RowBox[{"eqns", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Join", "[", 
         RowBox[{"bcs", ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Thread", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], "==", 
              "\n", 
              RowBox[{
               RowBox[{
                RowBox[{"1", "/", "2"}], " ", "\[CapitalDelta]t", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"f", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}], "]"}], "+", 
                  "\n", 
                  RowBox[{"f", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], 
                   "]"}]}], ")"}]}], "+", "\n", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Subscript", "[", 
                  RowBox[{"x", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"xdot", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]dot", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]1", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]2", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]3", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]4", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}]}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
        "]"}]}], ";", "\n", "\n", 
      RowBox[{"sv", " ", "=", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", "\n", 
             "\t\t\t\t\t", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "7", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "8", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", "1"}], 
        "]"}]}], ";", "\n", "\[IndentingNewLine]", 
      RowBox[{"froot", "=", 
       RowBox[{"FindRoot", "[", 
        RowBox[{"eqns", ",", "sv", ",", 
         RowBox[{"MaxIterations", "->", "maxIter"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"error", " ", "=", " ", 
       RowBox[{"Norm", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                SubscriptBox["x", "n"], ",", 
                SubscriptBox["xdot", "n"], ",", 
                SubscriptBox["\[Theta]", "n"], ",", 
                SubscriptBox["\[Theta]dot", "n"]}], "}"}], " ", "-", " ", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], ",", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                SubscriptBox["x", "0"], ",", 
                SubscriptBox["xdot", "0"], ",", 
                SubscriptBox["\[Theta]", "0"], ",", 
                SubscriptBox["\[Theta]dot", "0"]}], "}"}], " ", "-", " ", 
              "ICs"}], ",", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Thread", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   SubscriptBox["x", "i"], ",", 
                   SubscriptBox["xdot", "i"], ",", 
                   SubscriptBox["\[Theta]", "i"], ",", 
                   SubscriptBox["\[Theta]dot", "i"], ",", 
                   SubscriptBox["\[Lambda]1", "i"], ",", 
                   SubscriptBox["\[Lambda]2", "i"], ",", 
                   SubscriptBox["\[Lambda]3", "i"], ",", 
                   SubscriptBox["\[Lambda]4", "i"]}], "}"}], "-", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    FractionBox["1", "2"], " ", "\[CapitalDelta]t", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}], "]"}], "+", 
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "]"}]}], 
                    ")"}]}], "+", 
                   RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}]}], ")"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
           "]"}], "/.", "froot"}], ",", "\"\<Frobenius\>\""}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"uff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}], "^", 
                  "2"}]}]}], ")"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], 
                RowBox[{"Cos", "[", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}]}], "-", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}]}], ")"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"count", " ", "=", " ", "0"}], ";", "\n", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"error", " ", ">", " ", "maxError"}], ")"}], " ", "||", 
           " ", 
           RowBox[{"(", 
            RowBox[{"J", " ", ">", " ", "maxJ"}], ")"}]}], ")"}], " ", "&&", 
         " ", 
         RowBox[{"count", " ", "<=", " ", "maxCount"}]}], " ", ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"InitGuess", " ", "=", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}]}], "}"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          StyleBox["xGuess",
           FontWeight->"Plain"], 
          StyleBox[" ",
           FontWeight->"Plain"], 
          StyleBox["=",
           FontWeight->"Plain"], 
          StyleBox[" ",
           FontWeight->"Plain"], 
          RowBox[{
           StyleBox["Table",
            FontWeight->"Plain"], 
           StyleBox["[",
            FontWeight->"Plain"], 
           RowBox[{
            RowBox[{
             StyleBox["If",
              FontWeight->"Plain"], 
             StyleBox["[",
              FontWeight->"Plain"], 
             RowBox[{
              StyleBox[
               RowBox[{"i", " ", "!=", " ", 
                RowBox[{"-", "1"}]}],
               FontWeight->"Plain"], 
              StyleBox[",",
               FontWeight->"Plain"], 
              RowBox[{
               StyleBox[
                SubscriptBox["xGuess", 
                 RowBox[{"i", "+", "1"}]],
                FontWeight->"Plain"], 
               StyleBox[" ",
                FontWeight->"Plain"], 
               StyleBox["=",
                FontWeight->"Plain"], 
               StyleBox[" ",
                FontWeight->"Plain"], 
               RowBox[{
                SubscriptBox[
                 StyleBox["xGuess",
                  FontWeight->"Plain"], "i"], 
                StyleBox[" ",
                 FontWeight->"Plain"], 
                StyleBox["+",
                 FontWeight->"Plain"], 
                StyleBox[
                 RowBox[{"\[CapitalDelta]t", "*", 
                  RowBox[{"f", "[", 
                   SubscriptBox["xGuess", "i"], "]"}]}],
                 FontWeight->"Plain"]}]}], 
              StyleBox[",",
               FontWeight->"Plain"], 
              RowBox[{
               SubscriptBox[
                StyleBox["xGuess",
                 FontWeight->"Plain"], "0"], " ", "=", " ", 
               RowBox[{"{", 
                StyleBox[
                 RowBox[{
                  RowBox[{"ICs", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", 
                  RowBox[{"ICs", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], ",", 
                  RowBox[{"ICs", "[", 
                   RowBox[{"[", "3", "]"}], "]"}], ",", 
                  RowBox[{"ICs", "[", 
                   RowBox[{"[", "4", "]"}], "]"}], ",", 
                  RowBox[{"InitGuess", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", 
                  RowBox[{"InitGuess", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], ",", 
                  RowBox[{"InitGuess", "[", 
                   RowBox[{"[", "3", "]"}], "]"}], ",", 
                  RowBox[{"InitGuess", "[", 
                   RowBox[{"[", "4", "]"}], "]"}]}],
                 FontWeight->"Plain"], 
                StyleBox["}",
                 FontWeight->"Plain"]}]}]}], 
             StyleBox["]",
              FontWeight->"Plain"]}], 
            StyleBox[",",
             FontWeight->"Plain"], 
            StyleBox[
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"-", "1"}], ",", 
               RowBox[{"n", "-", "1"}]}], "}"}],
             FontWeight->"Plain"]}], 
           StyleBox["]",
            FontWeight->"Plain"]}]}], 
         StyleBox[";",
          FontWeight->"Plain"], "\[IndentingNewLine]", 
         RowBox[{"sv", " ", "=", " ", 
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", "\n", 
                "\t\t\t\t\t", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "7", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "8", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", "1"}], 
           "]"}]}], ";", "\n", "\n", 
         RowBox[{"froot", "=", 
          RowBox[{"FindRoot", "[", 
           RowBox[{"eqns", ",", "sv", ",", 
            RowBox[{"MaxIterations", "->", "maxIter"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"error", " ", "=", " ", 
          RowBox[{"Norm", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Flatten", "[", 
              RowBox[{"Join", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   SubscriptBox["x", "n"], ",", 
                   SubscriptBox["xdot", "n"], ",", 
                   SubscriptBox["\[Theta]", "n"], ",", 
                   SubscriptBox["\[Theta]dot", "n"]}], "}"}], " ", "-", " ", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], 
                ",", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   SubscriptBox["x", "0"], ",", 
                   SubscriptBox["xdot", "0"], ",", 
                   SubscriptBox["\[Theta]", "0"], ",", 
                   SubscriptBox["\[Theta]dot", "0"]}], "}"}], " ", "-", " ", 
                 "ICs"}], ",", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"Thread", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[CapitalDelta]t", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}], "]"}], "+", 
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}]}], ")"}]}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}],
               "]"}], "/.", "froot"}], ",", "\"\<Frobenius\>\""}], "]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"uff0", "=", 
          RowBox[{"ListInterpolation", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"1", "/", 
                 RowBox[{"(", 
                  RowBox[{"1", "-", 
                   RowBox[{"A", " ", 
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}], "^", 
                    "2"}]}]}], ")"}]}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], 
                   RowBox[{"Cos", "[", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}]}], "-", 
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}]}], ")"}]}], 
               ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
             "froot"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
            RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", 
         "\n", 
         RowBox[{"J", " ", "=", " ", 
          RowBox[{"NIntegrate", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", 
         "\n", 
         RowBox[{"count", " ", "=", " ", 
          RowBox[{"count", "+", "1"}]}], ";"}]}], "\n", "]"}], ";", "\n", 
      "\n", "\n", 
      RowBox[{"xff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"xdotff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Theta]ff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Theta]dotff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]1ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]2ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]3ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]4ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      "\n", 
      RowBox[{"uff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}], "^", 
                  "2"}]}]}], ")"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], 
                RowBox[{"Cos", "[", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}]}], "-", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}]}], ")"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      "\n", 
      RowBox[{
       RowBox[{"xff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xdotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "\[Pi]"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"uff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"uff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"S", " ", "=", " ", 
       RowBox[{"CalculateSMatrix", "[", 
        RowBox[{
        "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
         "uff", ",", "\[Tau]", ",", "A"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"K", "[", "t_", "]"}], " ", ":=", " ", 
       RowBox[{"CalculateGains", "[", 
        RowBox[{
        "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
         "uff", ",", "t", ",", "A", ",", "\[Tau]", ",", "S"}], "]"}]}], ";", 
      "\n", 
      RowBox[{"{", 
       RowBox[{
       "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
        "uff", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
        "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "J", ",", "K"}], 
       "}"}]}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"testSwingUp", "[", 
    RowBox[{
    "ICs_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "uff0_", ",", "A_"}], "]"}],
    ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eq", ",", "init", ",", "x", ",", "xdot", ",", "\[Theta]", ",", 
       "\[Theta]dot", ",", "xs", ",", "xdots", ",", "\[Theta]s", ",", 
       "\[Theta]dots", ",", "t", ",", "J"}], "}"}], ",", "\n", 
     RowBox[{
      RowBox[{"eq", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"x", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"xdot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"xdot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"uff0", "[", "t", "]"}], "+", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
             RowBox[{"A", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]dot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"uff0", "[", "t", "]"}], "+", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
            ")"}]}]}]}], "}"}]}], ";", "\n", 
      RowBox[{"init", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"xdot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]dot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
        "}"}], "=", 
       RowBox[{"NDSolveValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"eq", ",", "init"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
         RowBox[{"Method", "->", 
          RowBox[{"{", 
           RowBox[{"\"\<DiscontinuityProcessing\>\"", "->", "None"}], 
           "}"}]}]}], "]"}]}], ";", "\n", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"{", 
       RowBox[{
       "xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots", ",", "uff0",
         ",", "J"}], "}"}]}]}], "]"}]}], "\[IndentingNewLine]", "\n", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"testWithFB", "[", 
    RowBox[{
    "ICs_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "xff0_", ",", "xdotff0_", 
     ",", "\[Theta]ff0_", ",", "\[Theta]dotff0_", ",", "uff0_", ",", "A_", 
     ",", "K_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eq", ",", "init", ",", "\[Theta]", ",", "\[Theta]dot", ",", 
       "\[Theta]ff", ",", "\[Theta]dotff", ",", "x", ",", "xdot", ",", "xff", 
       ",", "xdotff", ",", "uff", ",", "t", ",", "\[Kappa]1", ",", 
       "\[Kappa]2", ",", "\[Kappa]3", ",", "\[Kappa]4", ",", "ufb", ",", "u", 
       ",", "\[Theta]s", ",", "\[Theta]dots", ",", "xs", ",", "xdots", ",", 
       "us", ",", "J"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Kappa]1", "=", 
       RowBox[{"\[Kappa]2", "=", "3"}]}], ";", "  ", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"lqr", " ", "for", " ", "q"}], "=", 
        RowBox[{"r", " ", "for", " ", "balancing", " ", "pendulum"}]}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"\[Kappa]3", " ", "=", " ", 
       RowBox[{"-", "0.1"}]}], ";", 
      RowBox[{"\[Kappa]4", " ", "=", " ", 
       RowBox[{"-", "0.65"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"xff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xdotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "\[Pi]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"uff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"uff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ufb", "[", "t_", "]"}], " ", ":=", " ", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"K", "[", "t", "]"}], ".", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"xff", "[", "t", "]"}], "-", 
                RowBox[{"x", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"xdotff", "[", "t", "]"}], "-", 
                RowBox[{"xdot", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]dot", "[", "t", "]"}]}]}], "}"}]}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         RowBox[{
          RowBox[{"\[Kappa]1", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]3", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"xff", "[", "t", "]"}], "-", 
             RowBox[{"x", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"xdotff", "[", "t", "]"}], "-", 
             RowBox[{"xdot", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}], ";", 
      "\n", 
      RowBox[{
       RowBox[{"u", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{"uff", "[", "t", "]"}], "+", 
        RowBox[{"ufb", "[", "t", "]"}]}]}], ";", "\n", "\n", 
      RowBox[{"eq", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"x", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"xdot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"xdot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"u", "[", "t", "]"}], "+", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
             RowBox[{"A", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]dot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"u", "[", "t", "]"}], "+", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
            ")"}]}]}]}], "}"}]}], ";", "\n", "\n", 
      RowBox[{"init", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"xdot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]dot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}], ";", "\n", "\n", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
        "}"}], "=", 
       RowBox[{"NDSolveValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"eq", ",", "init"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
         RowBox[{"Method", "->", 
          RowBox[{"{", 
           RowBox[{"\"\<DiscontinuityProcessing\>\"", "->", "None"}], 
           "}"}]}]}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"us", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{"uff", "[", "t", "]"}], "+", 
        RowBox[{"Piecewise", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"K", "[", "t", "]"}], ".", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"xff", "[", "t", "]"}], "-", 
                 RowBox[{"xs", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"xdotff", "[", "t", "]"}], "-", 
                 RowBox[{"xdots", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                 RowBox[{"\[Theta]s", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                 RowBox[{"\[Theta]dots", "[", "t", "]"}]}]}], "}"}]}], ",", 
             RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
          RowBox[{
           RowBox[{"\[Kappa]1", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]s", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]dots", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]3", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"xff", "[", "t", "]"}], "-", 
              RowBox[{"xs", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]4", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"xdotff", "[", "t", "]"}], "-", 
              RowBox[{"xdots", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"us", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"{", 
       RowBox[{
       "xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots", ",", "us", 
        ",", "J"}], "}"}]}]}], "]"}]}], "\n"}], "\n"}], "Code",
 CellChangeTimes->{{3.862753343189165*^9, 3.862753411389415*^9}, {
   3.8627553611496043`*^9, 3.8627553647834463`*^9}, {3.862755542386807*^9, 
   3.862755582254092*^9}, {3.862756179429644*^9, 3.8627562078485813`*^9}, 
   3.8627563320549693`*^9, {3.8627564690202875`*^9, 3.8627565488258357`*^9}, {
   3.8627568793814173`*^9, 3.8627568873778677`*^9}, 3.8627585165043135`*^9, {
   3.8627585965107956`*^9, 3.862758689290209*^9}, {3.862758834699833*^9, 
   3.8627588555911727`*^9}, {3.8627590963373947`*^9, 
   3.8627590998392787`*^9}, {3.8627594410134716`*^9, 
   3.8627594626865597`*^9}, {3.862759635094576*^9, 3.8627596377257366`*^9}, {
   3.862759669455618*^9, 3.8627597448635693`*^9}, 3.862759795914287*^9, {
   3.8627603319473376`*^9, 3.862760490473783*^9}, {3.8627605307139487`*^9, 
   3.862760536806006*^9}, {3.8627610047197795`*^9, 3.8627610478400292`*^9}, {
   3.8627611285982723`*^9, 3.862761147921111*^9}, {3.8631982964294224`*^9, 
   3.8631982970332265`*^9}, 3.8631983363504767`*^9, {3.863208693665881*^9, 
   3.8632086943846474`*^9}, 3.863210007245922*^9, 3.863271804426487*^9, {
   3.8632718412836447`*^9, 3.8632718583741503`*^9}, {3.8632719591337743`*^9, 
   3.863271959351703*^9}, {3.863272049174841*^9, 3.863272070205083*^9}, {
   3.863272113471178*^9, 3.863272123024109*^9}, 3.8632747752128673`*^9, {
   3.863274857845314*^9, 3.863274901443305*^9}, 3.863274985905165*^9, {
   3.86327502591031*^9, 3.8632751590365314`*^9}, {3.8632751952308993`*^9, 
   3.863275233662552*^9}, {3.8632753992893295`*^9, 3.863275415841012*^9}, 
   3.8632757933676972`*^9, 3.863276112914017*^9, {3.8632763683199444`*^9, 
   3.8632763983313017`*^9}, {3.8632764721665745`*^9, 3.863276525061578*^9}, {
   3.863278235705888*^9, 3.8632782777863655`*^9}, {3.863278324944213*^9, 
   3.8632783286160316`*^9}, {3.863552728717914*^9, 3.8635527298355513`*^9}, {
   3.863613419658352*^9, 3.863613423534114*^9}, {3.8636150904008484`*^9, 
   3.86361513154671*^9}, {3.8636152078133564`*^9, 3.8636152525520706`*^9}, {
   3.8636152893383236`*^9, 3.863615479516596*^9}, 3.8636157247782784`*^9, {
   3.863615879717803*^9, 3.8636159617646036`*^9}, {3.8636160220243616`*^9, 
   3.8636160299278383`*^9}, {3.863616069486206*^9, 3.86361607601912*^9}, {
   3.863699007217822*^9, 3.8636991515617003`*^9}, {3.8636996033223495`*^9, 
   3.8636996129842625`*^9}, {3.8636997844214835`*^9, 3.863699805489752*^9}, {
   3.863699907217247*^9, 3.863699944316393*^9}, {3.863700788168758*^9, 
   3.8637008845809517`*^9}, {3.863702046275758*^9, 3.8637020830100203`*^9}, {
   3.863702595245346*^9, 3.863702645292355*^9}, {3.863884194660141*^9, 
   3.8638842031804175`*^9}, {3.8638909914788537`*^9, 3.863891009810995*^9}, {
   3.863891113237941*^9, 3.8638911537729845`*^9}, {3.863891279619763*^9, 
   3.8638912855948534`*^9}, {3.863891344230113*^9, 3.863891351574766*^9}, {
   3.8638925953132634`*^9, 3.8638925989880886`*^9}, 3.8641412354391413`*^9, {
   3.864141550931038*^9, 3.8641416655529428`*^9}, {3.8642361939817247`*^9, 
   3.864236202546955*^9}, {3.864236595072028*^9, 3.8642366322340117`*^9}, 
   3.864236674617306*^9, {3.8643997929515553`*^9, 3.864399794341104*^9}, 
   3.8647401548354416`*^9, {3.864740367280447*^9, 3.864740382577551*^9}, {
   3.8647404140084915`*^9, 3.8647404181541643`*^9}, {3.864740488606616*^9, 
   3.864740495693348*^9}, {3.8647405289317093`*^9, 3.864740542820265*^9}, {
   3.864741074561078*^9, 3.864741079667444*^9}, {3.864741140307036*^9, 
   3.864741143520008*^9}, 3.8648372672245474`*^9, {3.8648373045645533`*^9, 
   3.864837353847723*^9}, {3.8648373920424533`*^9, 3.8648375909655547`*^9}, 
   3.864837839079855*^9, {3.865356690975731*^9, 3.865356718635888*^9}, {
   3.8653568425522747`*^9, 3.86535688554853*^9}, 3.865356998743344*^9, {
   3.865357063056785*^9, 3.865357082860453*^9}, {3.865357192303467*^9, 
   3.865357202547192*^9}, {3.865357324369248*^9, 3.865357327732173*^9}, 
   3.8653573727697754`*^9, {3.8653584117496357`*^9, 3.865358421880398*^9}, {
   3.865359119417409*^9, 3.865359146498752*^9}, {3.865359181803466*^9, 
   3.865359209189711*^9}, {3.8654491379879255`*^9, 3.8654492290188136`*^9}, {
   3.8659657476182566`*^9, 3.86596576077604*^9}, {3.8659665703366394`*^9, 
   3.865966589562479*^9}},
 FontWeight->"Plain",
 CellLabel->
  "In[3971]:=",ExpressionUUID->"8daba21d-9510-4b30-8c25-b5a0584418ca"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Energy", "[", 
    RowBox[{"{", 
     RowBox[{
     "x1_", ",", "x2_", ",", "\[Theta]1_", ",", "\[Theta]2_", ",", "A_"}], 
     "}"}], "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"1", "/", "2"}], "*", 
     RowBox[{"x2", "^", "2"}]}], " ", "+", " ", 
    RowBox[{
     RowBox[{"1", "/", "2"}], "*", "A", "*", 
     RowBox[{"\[Theta]2", "^", "2"}]}], " ", "+", " ", 
    RowBox[{"A", "*", 
     RowBox[{"Cos", "[", "\[Theta]1", "]"}], "*", "x2", "*", "\[Theta]2"}], 
    " ", "-", " ", 
    RowBox[{"A", "*", 
     RowBox[{"Cos", "[", "\[Theta]1", "]"}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.865347557533499*^9, 3.865347708031389*^9}, {
  3.8653478110874424`*^9, 3.8653478146772966`*^9}},
 CellLabel->
  "In[3978]:=",ExpressionUUID->"2e460f69-71dd-40ea-9e96-aaa585df6372"],

Cell["Test the working with random initial conditions", "Text",
 CellChangeTimes->{{3.864919546243415*^9, 3.864919566793731*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"74e82f71-7d3c-4f7a-b18d-cc3109df4131"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  StyleBox[
   RowBox[{"n", "=", "20"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Tau]", "=", "5"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Tau]1", "=", 
    RowBox[{"\[Tau]", "*", "1.25"}]}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"A", "=", "0.2"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"order", " ", "=", " ", "4"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"maxIter", " ", "=", " ", "100"}],
   FontWeight->"Plain"], ";", 
  StyleBox[
   RowBox[{"maxError", " ", "=", " ", "0.01"}],
   FontWeight->"Plain"], ";", 
  RowBox[{"uMax", " ", "=", " ", "2"}], ";", 
  RowBox[{"maxCount", " ", "=", " ", "10"}], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotMin", " ", "=", " ", 
    RowBox[{"-", "2"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotMax", " ", "=", " ", "2"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Min", " ", "=", " ", 
    RowBox[{"-", "\[Pi]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Max", " ", "=", " ", "\[Pi]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]dotMin", " ", "=", " ", 
    RowBox[{"-", "2"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"\[Theta]dotMax", " ", "=", " ", "2"}],
    FontWeight->"Plain"], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"xdotMin", ",", "xdotMax"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Init", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]Min", ",", "\[Theta]Max"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]dotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]dotMin", ",", "\[Theta]dotMax"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "xdotInit", ",", "\[Theta]Init", ",", "\[Theta]dotInit"}], 
     "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxJ", " ", "=", " ", 
   RowBox[{
    RowBox[{"uMax", "^", "2"}], "*", 
    RowBox[{"\[Tau]", "/", "5"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"InitGuess", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"EInitial", " ", "=", " ", 
   RowBox[{"Energy", "[", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"ICs", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", "A", "}"}]}], "]"}], "]"}]}],
  FontWeight->"Plain"], "\n", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
       "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
       "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "Jff", ",", "K"}], "}"}], 
     "=", 
     RowBox[{"ffCartPendulum", "[", 
      RowBox[{
      "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", "order", 
       ",", "maxIter", ",", "maxError", ",", "uMax", ",", "maxCount", ",", 
       "maxJ", ",", "InitGuess"}], "]"}]}], ";"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1b", ",", "xdot1b", ",", "\[Theta]1b", ",", "\[Theta]dot1b", ",", 
       "u1b", ",", "J1"}], "}"}], "=", 
     RowBox[{"testSwingUp", "[", 
      RowBox[{"ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "u1a", ",", "A"}], 
      "]"}]}], ";"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x1c", ",", "xdot1c", ",", "\[Theta]1c", ",", "\[Theta]dot1c", ",", 
      "u1c", ",", "J"}], "}"}], "=", 
    RowBox[{"testWithFB", "[", 
     RowBox[{
     "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
      "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A", ",", "K"}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"p1a", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Theta]1a", "[", "t", "]"}], ",", 
       RowBox[{"u1a", "[", "t", "]"}], ",", 
       RowBox[{"x1a", "[", "t", "]"}], ",", 
       RowBox[{"\[Theta]dot1a", "[", "t", "]"}], ",", 
       RowBox[{"xdot1a", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
     RowBox[{"Filling", "->", 
      RowBox[{"{", 
       RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Theta]1a\>\"", ",", "\"\<u1a\>\"", ",", "\"\<x1a\>\"", ",", 
        "\"\<\[Theta]dot1a\>\"", ",", "\"\<xdot1a\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<Feedforward solution\>\""}], ",", 
     RowBox[{"AspectRatio", "->", 
      RowBox[{"1", "/", "3"}]}], ",", 
     RowBox[{"ImageSize", "->", "400"}], ",", 
     RowBox[{"GridLines", "->", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], "]"}]}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{"p1b", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Theta]1b", "[", "t", "]"}], ",", 
       RowBox[{"u1a", "[", "t", "]"}], ",", 
       RowBox[{"x1b", "[", "t", "]"}], ",", 
       RowBox[{"\[Theta]dot1b", "[", "t", "]"}], ",", 
       RowBox[{"xdot1b", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
     RowBox[{"Filling", "->", 
      RowBox[{"{", 
       RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Theta]1b\>\"", ",", "\"\<u1b\>\"", ",", "\"\<x1b\>\"", ",", 
        "\"\<\[Theta]dot1b\>\"", ",", "\"\<xdot1b\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<Test on dynamics\>\""}], ",", 
     RowBox[{"AspectRatio", "->", 
      RowBox[{"1", "/", "3"}]}], ",", 
     RowBox[{"ImageSize", "->", "400"}], ",", 
     RowBox[{"GridLines", "->", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], "]"}]}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{"p1c", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1c", "[", "t", "]"}], ",", 
        RowBox[{"u1c", "[", "t", "]"}], ",", 
        RowBox[{"x1c", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1c", "[", "t", "]"}], ",", 
        RowBox[{"xdot1c", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1c\>\"", ",", "\"\<u1c\>\"", ",", "\"\<x1c\>\"", ",", 
         "\"\<\[Theta]dot1c\>\"", ",", "\"\<xdot1c\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<LQR feedback solution\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], "]"}]}],
   FontWeight->"Plain"], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.863699832878002*^9, 3.8636998879424076`*^9}, {
   3.8636999587037973`*^9, 3.863699966845196*^9}, {3.86370068689312*^9, 
   3.863700742439372*^9}, {3.863700775571786*^9, 3.8637007771342835`*^9}, 
   3.863700945211579*^9, {3.863700998427576*^9, 3.8637010107976217`*^9}, {
   3.8637016473912125`*^9, 3.863701669091281*^9}, 3.863702035899074*^9, {
   3.863702126179226*^9, 3.863702160529252*^9}, 3.86370251869481*^9, {
   3.8637025705572357`*^9, 3.8637025888983755`*^9}, {3.8637026681560507`*^9, 
   3.8637026692896886`*^9}, {3.8637027081322765`*^9, 3.863702762285972*^9}, 
   3.8637029838601737`*^9, 3.8637033230088053`*^9, {3.863884225388322*^9, 
   3.8638842448491*^9}, {3.8638842916161537`*^9, 3.863884295082047*^9}, {
   3.863891061309538*^9, 3.863891063069975*^9}, {3.863891163269951*^9, 
   3.863891163428899*^9}, {3.8638912925906177`*^9, 3.8638912940581484`*^9}, {
   3.8638913677266035`*^9, 3.8638913686183195`*^9}, {3.8638926039804945`*^9, 
   3.8638926063767295`*^9}, {3.8648376392630434`*^9, 
   3.8648376724073963`*^9}, {3.864837714278944*^9, 3.864837730198832*^9}, {
   3.8648378000064077`*^9, 3.8648378125593743`*^9}, {3.8649192769420185`*^9, 
   3.8649193477849746`*^9}, {3.864919494855133*^9, 3.8649194949211097`*^9}, {
   3.8649195280303416`*^9, 3.8649195281572976`*^9}, {3.8653430179727*^9, 
   3.865343036098905*^9}, 3.865343126059147*^9, {3.8653475497269955`*^9, 
   3.8653475530049467`*^9}, {3.8653477236523952`*^9, 3.865347782090714*^9}, {
   3.8653478250659747`*^9, 3.8653479145413723`*^9}, {3.865347947982681*^9, 
   3.8653479716121283`*^9}, {3.8653525506493053`*^9, 3.865352599733616*^9}, {
   3.865352652578721*^9, 3.865352654559091*^9}, {3.865353691929463*^9, 
   3.8653537130737047`*^9}, {3.8653538376038947`*^9, 
   3.8653538378768077`*^9}, {3.86535394844846*^9, 3.8653539491322412`*^9}, {
   3.865356726928239*^9, 3.86535675400958*^9}, {3.8653568966909695`*^9, 
   3.8653569073245697`*^9}, {3.8653569602766423`*^9, 3.865356975731701*^9}, {
   3.865357167158506*^9, 3.865357170606405*^9}, {3.865357223946353*^9, 
   3.8653572240363226`*^9}, {3.8653573936860905`*^9, 3.8653574653461814`*^9}, 
   3.8653581484318137`*^9, {3.8653592129605074`*^9, 3.86535921807887*^9}, {
   3.865449250153057*^9, 3.8654493036779404`*^9}, {3.8659655743007927`*^9, 
   3.8659655800469513`*^9}, {3.865965617846839*^9, 3.865965644481305*^9}, {
   3.865965768794471*^9, 3.8659657912472773`*^9}, {3.865965935003215*^9, 
   3.865965935326112*^9}, {3.8659659868356075`*^9, 3.865966006077441*^9}, 
   3.865966083507631*^9, 3.8659664582355595`*^9, {3.86596655432277*^9, 
   3.865966563962682*^9}, 3.8659666064800587`*^9, {3.8659666379409776`*^9, 
   3.865966662002268*^9}, {3.865966724901114*^9, 3.865966734984883*^9}, {
   3.8659667752089934`*^9, 3.8659667994792185`*^9}, {3.8659670983784432`*^9, 
   3.865967114308339*^9}, {3.865967415398863*^9, 3.865967415558814*^9}, 
   3.86596806058513*^9, {3.8659697572814713`*^9, 3.865969792480193*^9}, {
   3.865969847631523*^9, 3.8659698777298765`*^9}, {3.8659699125237284`*^9, 
   3.8659699227194633`*^9}},
 CellLabel->
  "In[4104]:=",ExpressionUUID->"c47d3c4e-60ca-4c63-8b5c-ced31cd89cdf"],

Cell[BoxData["1.2051702282030932`"], "Output",
 CellChangeTimes->{
  3.8648376866338243`*^9, {3.864837721244707*^9, 3.8648377460817285`*^9}, {
   3.864837800602215*^9, 3.8648378151965265`*^9}, {3.864837882180011*^9, 
   3.8648379006680717`*^9}, {3.864917359659708*^9, 3.8649173767071624`*^9}, 
   3.864919300876232*^9, {3.864919337508316*^9, 3.8649193485657187`*^9}, {
   3.8649194958228164`*^9, 3.8649195287531037`*^9}, 3.864920239187001*^9, {
   3.864921249563326*^9, 3.8649212721359825`*^9}, {3.865342438564925*^9, 
   3.865342509036396*^9}, {3.8653477634896584`*^9, 3.865347782729508*^9}, {
   3.8653478492912292`*^9, 3.865348013067874*^9}, {3.86535368874548*^9, 
   3.8653536939258237`*^9}, {3.8653538219528966`*^9, 
   3.8653538384286294`*^9}, {3.865356737715789*^9, 3.8653567547593403`*^9}, 
   3.8653569273791575`*^9, {3.8653569657139025`*^9, 3.86535700435555*^9}, 
   3.86535703851363*^9, {3.8653570911278105`*^9, 3.865357172559778*^9}, {
   3.865357210731576*^9, 3.865357232535606*^9}, {3.8653573843380775`*^9, 
   3.865357407024825*^9}, {3.8653574402422056`*^9, 3.865357560552746*^9}, {
   3.8653576116883984`*^9, 3.8653576483786693`*^9}, {3.865358188766919*^9, 
   3.8653581946510377`*^9}, {3.865358314589696*^9, 3.8653583435974226`*^9}, {
   3.8653592266591263`*^9, 3.865359247679407*^9}, {3.865443792998208*^9, 
   3.865443801104616*^9}, 3.8654440595339727`*^9, {3.8654487336752205`*^9, 
   3.8654487504428587`*^9}, 3.8654492637776985`*^9, 3.8654493114634485`*^9, {
   3.865965582539151*^9, 3.8659656451141005`*^9}, {3.8659657927138066`*^9, 
   3.8659658125544496`*^9}, {3.865965935915921*^9, 3.8659659557085795`*^9}, {
   3.8659659882041674`*^9, 3.8659660068222017`*^9}, 3.8659660863577166`*^9, 
   3.865966459016309*^9, {3.865966598898487*^9, 3.865966735717648*^9}, {
   3.865966781206072*^9, 3.865966802194347*^9}, {3.8659670998539696`*^9, 
   3.8659671350117044`*^9}, {3.86596737708314*^9, 3.865967416340561*^9}, {
   3.8659680911663313`*^9, 3.8659680979531565`*^9}, {3.8659697724146223`*^9, 
   3.865969803929524*^9}, 3.865969850623562*^9, {3.865969890971634*^9, 
   3.8659699231933093`*^9}},
 CellLabel->
  "Out[4117]=",ExpressionUUID->"58ecfd7c-101d-4023-8fad-090147ccea27"],

Cell[BoxData[
 TemplateBox[{
  "FindRoot", "cvmit", 
   "\"Failed to converge to the requested accuracy or precision within \\!\\(\
\\*RowBox[{\\\"100\\\"}]\\) iterations.\"", 2, 4118, 382, 
   17541223889680508696, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.865968098124102*^9, {3.8659697728114953`*^9, 3.8659698046852818`*^9}, 
   3.8659698510774174`*^9, {3.865969891285533*^9, 3.8659699240770264`*^9}},
 CellLabel->
  "During evaluation of \
In[4104]:=",ExpressionUUID->"0970ef69-8e36-414c-8e16-4ad654b4fcbc"],

Cell[BoxData[
 TemplateBox[{
  "FindRoot", "cvmit", 
   "\"Failed to converge to the requested accuracy or precision within \\!\\(\
\\*RowBox[{\\\"100\\\"}]\\) iterations.\"", 2, 4118, 383, 
   17541223889680508696, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.865968098124102*^9, {3.8659697728114953`*^9, 3.8659698046852818`*^9}, 
   3.8659698510774174`*^9, {3.865969891285533*^9, 3.865969925253649*^9}},
 CellLabel->
  "During evaluation of \
In[4104]:=",ExpressionUUID->"844150da-a75a-4a78-a0b1-c46eb57315d0"],

Cell[BoxData[
 TemplateBox[{
  "FindRoot", "cvmit", 
   "\"Failed to converge to the requested accuracy or precision within \\!\\(\
\\*RowBox[{\\\"100\\\"}]\\) iterations.\"", 2, 4118, 384, 
   17541223889680508696, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.865968098124102*^9, {3.8659697728114953`*^9, 3.8659698046852818`*^9}, 
   3.8659698510774174`*^9, {3.865969891285533*^9, 3.8659699257644863`*^9}},
 CellLabel->
  "During evaluation of \
In[4104]:=",ExpressionUUID->"7c3073bc-35f2-4926-8d21-5e16194c52e7"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"FindRoot\\\", \
\\\"::\\\", \\\"cvmit\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 4118, 385, 17541223889680508696, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.865968098124102*^9, {3.8659697728114953`*^9, 3.8659698046852818`*^9}, 
   3.8659698510774174`*^9, {3.865969891285533*^9, 3.8659699257824802`*^9}},
 CellLabel->
  "During evaluation of \
In[4104]:=",ExpressionUUID->"5edb9d34-0969-4827-a90b-856811a42a86"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
kXA//ZiJvtq1BukHT4ONn3i9fyszUdxe94Vu71nws/JkkuqDRdRVGXkyN1kU
amceXWh+wg3fCOqahMpj89FKwX6tJwk2CcM4+JoMDVxjc9V4eOBoiv9sYdgQ
mCClGhh0L6K0b4MFBTVj4EigXifPVSb67RGasHuaBrbIr2QEY/n4ZHzg0c3Z
KTAtX9Hbk8xEYfyet+/wTQN5b4OoL4ZMVH00YMjJnwyV6nRNDSZIcKqQSvgz
MAGeZ937GBvHRFZd+XZFE5Pg2WXLuB/Y/X1Nqnsgy80Aei7HfIv8mGjtLmNK
0QEy1Bw+qVjxhgS7m+Z1xCvJsLjpbIiLNA+81V3qEJtHA3/yLv1sTGciDb81
v0JzsH679qCSLhYfctgc6etGhpdPLD4+/pcE4x81Sq2fI0OFPIJmMpY/a2C3
Peb8BCjLE4xfesRETJ0xDZmsSVCxbjLdCKsX2j/efdMoo4NsBy7VraHY/KQn
TCjlkaHFxp2Jk6JYPyBmWtumPgnyhb6rqmUxkabCpWPn99KBQ0wkUSuJiY4r
98Iz0WRIMj749cgSCWrLqDuQd9FA5s7HwlzPsXze9ou3Up4C1sFrRXZg/9/2
05mklRYylDpxX+mJHA8sufUhWdH+Ksh03WDY5DSJQtaeq1m/jwKsDaI08vUZ
qDVofNOThDowdOhBhNXLGVTMuT5qKbQVdHrb//U9NYc0HohrEbZ3gWKXOUXK
m3mUOn7/frJtHziklap9pWEBJe08enzRbBDULYjZ3n+L9ReTQb2Pn4+C2ZyP
ribHsf7hxeHhY/Y0wKltqJOH5Ve40OVVmtUUaPhUFAYzmGiSU7Sy2YsBhudi
VDwvY9efVbej8OYMMHQ6tCNvYBHxw0MHdR3ngJIe15CY/CLSJigXJt9bAPIH
9V96EhdQgUrpNfM7TLCS3VPdmzeHGKtr1KTPi8KHEiFzy1zc8KUU3y2dLlGY
KzXcekGABGUNp5MtLMkwz37D5uQqEmQK3dlq14fVY/sj6q1YPdxqD8zUMzLB
0f2tti/oU4gEyIeUURWI4pEw3hUyjRSJ35XpR3vAw4tlQlk6C8j8UGTlnXNU
8PAbaJ7SWUQXTq8blbo7DLga0qxWuJgotffB5oLP4+Bvp6flI39sPHG7fKy/
MAnKg35y3MXG6xpOQsKJK3Rgbmbgexkbz5Zffgy4eEyDQT31B6LqTBRzUm6L
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
ChrHCF8aGyG899jdEdRTelWs6adxuxYjekqMTgHxx9g+YYQ3fe92yrV76zuM
8KavA1bfLDklif0vb0r0ljaXGs+e25YLCH963dn8HmmkAhD+tAIIbjG6VQvu
X5ovtrj2A4iGlIqvisOfn788qtHd9Kc3HauRN72rI8H/XgFD3lT8Jt+D5Bs5
yJt6h+WoVyqnI2/q+u1xn2tWCvKmAnKCG+xWpYKSktkLrDfnwN7c4xaGsunA
YoqT1cxjAfhdrdH/7pAFLFhZx3YGLIHQUJ+AUXIumG+z73ryfgVs2BynHfOV
DKgHrC96tzDAo/lFp3J24ucb5oesT34wwnM9rxyNnLOQZ8394qOhM/YOEJ5V
946izueFlxjhU5mcuEJ8Lo1ghE/lTXQv5Pk4jhE+NX4oOvNo8yRG+FTdj/0p
nPj+gfCpK6L5X712UTDCpzLay7xRapxAPakz0h3tILAMI3pSuwNu9agZZ2GE
T3XsyXlaFvcE+18+darDOur6+xhgIshAjdNPAhU7VVYnupWA4boo6nHOMrDH
Pn2temg9+Oo30pLLUwui87ilkz3agXSSVvfVslrkV5/kKHtuOpaB/Oo5oxqr
SJlU4MZ4M3X19AxQPWcosfI0BfgK96V8ZVkCxmeEY4MpOUBrfnlvtMQKSEnR
H1a8RQZM17ZU8YcywPnI+6lLcWSwZmWksyaEETJ2sWqOb8sBNRpRvQmxTPBg
gI6bJCUZEN41MKy4fPOFSYzwrus2rHQMG1Ewwrs+3BOY916HghHe1ZW0fOzJ
iUnUxxrXsvlpLPoa+7t/Paw/7p7B8B1oLrk87ZX/DijS+yhBgc3A6wS3Ekdu
LbAWGzBbbdMFetdG7N1jW4t8rM35anKFURoIEpD+fWCODtRNRo4ynUsBH2K+
vX03NgsGms4NbzudCqSntkmFrV8GdgMfd5VdzgNNpxw+7xdkgK/Ef69/j78v
f7G/ZZ1bxwgXQ8UvJtzNA4SnZXEQOBYvSMEITzvxDXMrwNczwtOK3LjhH8ND
wQhPa5h3/pr4T2fs756W/XZtxHhYHTije/mIV2ANSP0Z0mXyqA08zWqeMMXf
94Svbb/1oZ35fCpwMpe49itrBnT6+E+udkgBV9eUW7/vWQY5ESyz3IfJwJfr
gVv7LQaoKTgpv7qCDAhv26XT7uCoRcEIb/uYVc2H2YSC+mAqo265W6JjMMLb
OtHenpt4pQTeaXr0UH5WgDfPZprtRKrA530nboEXTeAuqSInHz+PXD9ylTPd
sRNUqOdbX/GpRR6XIRNri8TSwO+LC1da8uhgm8PApm+eKSBmztnu3sdZ8Pt6
08gXuVRQXx6d5jm+Alyybj5x7SAD+zercrEZ/LxpRZvZ25UHjMJflOjv5YRF
Yc/XHmSmIL/L2e3rn45fb6JHplshV5Tv7IlZW7x48vJVAzhUo/N6l04tCAzy
cmG+3QE4H7O/9syrBZ+5I8+s2U8H447xt+8tpoDHiZXj8gqzwLuqafW3khQg
PqLI8dJ2BSh3Kk/F4vf/7dYvQnq5DNBjgyT2xYkMCO/r6PuAWm5BQX0zn6LQ
FeXfQZio8EbboWct+L6lYnUb/nzu/HrCI055Bjwj60cW4PuHTyasydkqDJCU
ZLrvyhgZEL5X3DR3VAZ//xD9s4I8nWBRb0vs7743m9qpnLimDexN1qO619UC
h4e3G6tf4vsTa+CacDoFVLcrNB+wZ4A8aQ3ZTi1kQHjfR7Fvf7aaUVA/TSTp
yu8QaVnwXn3wwLp1TcBzlX9vg18tkObvk5EIowNjbaXgfaEpYKCOpYy1agU0
2W6dX6wjA8L7fvE+uyPjHAULeVdeY7bUDnR7Cl7Xf6oF0znewmbCdDC427oz
lT8VPGgSM9jEPwsuX8CEnRJSgCI1VExYcwVoNa07v+MZGRS9vXYtNYEBBnQ/
bJf3J+Pr1uDizSlOKDekHiyHf172LUkyRaQW8KOmei4E//3nLqupTgnOgPyL
MksvzVJAZavy3jkpfL88HPSlEL+ehAc2Nnx1sRT/fETfbYkztXrthotYQpWx
F8OqdvCiy3NQ93stcJWrJs00zgCv1NvZnndSgCZskHB9zAA/yvj9OJhHBoQP
vqV+UYVxyzbQrlCeeZG/GWh3dwlsSq4FX4v5Mn3b6EBQ7tUhrisp4Gd3hJ47
GwP8cHy01KCXDAgvfOmxy+Sa8xSM+1fNNO/jFVDDvurlnWwyoPRkHGXi54Kb
Fl/NFllSsD38/rF8vK1gRLnzUyf++RaFr5aYnZgBX82mZs7j909ubYPodR0G
uHH2lPybIfx5/8sTR7heOjyC/3uiP6fnF7F8YuNR7O++mOjReRyyvxO3fBEQ
Pbo++0RTGZ0SQPjj89tPCL1rqgaEP5akahgq4O8jwh+fFFb4eUu4FhD+mHKL
VXFaswp54/q0hRsB6z4jb8zpVSX2iy0feeM8g7DAqx8zkTeeXz1W+eBDKvLG
xap+0azHU5A3lokZ5PKpSQVEf64g0499f34GIPpzAffqu1+y5YDwU7Itx18u
A/4NbE6+S3nA6jU3C9mUARYIPlUOwr8Pwis7FSYI97/MBYRXnvsqlWCOnzcJ
r6zHurqJ/vY5ILzyjxcjp7dopyGv7JEQtPo7LEUe+dvN3qRzo70Y4ZGXbIKb
Y7SGMMIju/s/dyTvHMMIj3yGa8sH/aYJjPDIvU/kG+6pUDDCI98QjTdpw/ef
hEc+FD5xCNZMYoRH7mwevxAZMY4RHlmEIV1QwncE9feMON7G7I6oxYj+3jpb
9qXKg58wwidHPS+9VYu9wwiffH5sny7P493Y//LJRJ/PRHBOwdw3BxBeWfrC
7SflxRWA8MrqNepmbNdrweH0Jy07TX4Ak7YJN474WkD45el0SU3/u9XIJz9b
YB+9YIYhn1x3WUdpzbMc5JMPHElmrtFKRz55k9+IkFZhCvLJU7VzR91XUkCk
1C/HkCtzQPmzs6iNaDqom8u6duvmAljcvdvH83QW+DB4SCvx4RJQuFC50PUx
F6wIr5KQi10BnCLbBjbg5+1Du56BqAYGOJT5nvJdmQw6rBaMDVoZoV0f98SF
Z1nIP0dfaiomG8UDwj8zCJUmrIkKxgjPrNWaRJmyHMEIzxwA9v9wfzOOEZ55
wdbNpB//PgnPbBW+keKDnx8JzzwirvfabDcFIzyzpNTXJ9ydE6g/eFQ9n8Wu
vgwj+oMeTw2MaClZGOGZM8TmNTRJ/tj/8sxJqvzuSinRYPqXJptEfyJoDniS
9UylBEhvkHy+ua0UyMs2P3S9VQ+evOsyDWarBVbLUdDzXDtYVDPKrC+vRd5Z
AitiUjyfgbxzx27/5iX8Prnr973s8NgMcPr0fYeHbwroXBTjBEuLIMjMvtm4
NwfoqYa4qW1cATGBNTfWXiMDYxuDWNlgBuhUL3vY6j0ZlJ0+J/PiBSPUt92o
CmAO+DF73Torkgn+CLwzfk37AyB89NcjgRcNLScxwkdveBtYWmRIwQgf/bW1
XoR+lIIRPloxzIVb6uwk6ilSwMax+fXh2N+99LEPQOZ1QRXw/3LLLIz3OxgZ
szxX7twM+j+vOGln1YKtNq6XuzS7wMx5BZ8Eh1rkqZt9c/xyz6SBbjWJbYZT
dNBIeu65zjoFJMtuLOrpmwWto8mF+Wb4/rz+ghc/9zI4d6yg0MA6D7Qu7b3A
uRbfvwWs4zqHv993L9b+IPHh52VLN+/ix3mA8NeCwU11IviLm/DXNbXX83/i
+yHCX0vd4ljFxEfBCH89w7XL6XjMdezv/ppJdZp7y5068Dm2es3WezXAWUKa
vt2uDUwPJHyqxt/3hMcOULDnirdPBVf7bj3Z9HEGmAduaQ6wTQEuulbvj7Yt
gyvVLA4lqvjzwpBiTHNhgKcnd7/P+E4GhM9WubYnfVyTghE+u6s8y4T1OAX1
JDcI08JeScdihM/GBK/16JkrgfS39f6tryuAL9Pv8ML5SlCweGfk+vUm0HBl
gwgWWgv2+DFueaTXCV4W2x7dje9fCL+98US3j0B1Gjj8gh45kkYHa+u9N+96
lAKivco8yO9mwT7W+BOKUqmghWPfrHj/CrDgWdA400YG+S/lA1qpDPBRh26w
xnAeyDTjerd6Nyf8cDT02VkGCvLeT+dop+/j15voV25ktdzeGXYfO70xd7HS
tQHIJiqmeR2qBSat6/xaLTqAz7uD3wrzawG3SkjApt10oGd7NfEscyrwURRj
dZSeBTL33nqa4O+zrbLVx/aeWQHZ7Hcefokig8rKScqFTAY40TghPXuTDAgf
/mCh6AnVnIJ6mCtbih4a17zAhDpB6yanFuDdc00XlNaCu5NGKTnyM0Bp8aqz
t3EKKKHX6z9SYoC6bOzPm/D9EuHBG2Wyz8Xi+0+il+kC3pzxFz2H/d2D39x7
xcB9tBUkwZ/5d/D9pz1v7djqpzPAT3bYTelUChCpPp1sasMAGVZMOI+0kwHh
w6+zq37KOUFBvU2rKF0LsxVxELeKI0WH3ggYBxreKuDnB9cDXRZ7A+nAmXIk
qDkqBYzyR3ElfFkBtsc/qEnXkAHhwy0edOwzx/d3FqMWA7Jd7eCpiJPPmy+1
QO2Xh449Px3cMbl6+uqGVHD/rKvtCY5ZwKK86u1MTApQUdxtW3BgBehZcAQn
+ZIBT2iUdnkcA+xbba19O4gMvJO4Go6Mc8KtkgFmsqYUjKm/Opw21Qwu8hX7
XsJqwceQ/Q6rSDNA6tRM3ANzfL99i6W9XIIBmnpNz2vh15Pw45rTv3TW4vcH
0QN1HciSOsfhiNmT+sOa+tqAxvrTufura8GN3C3Su77PgMOdj18wuaaAV7tX
5p8+ZICy01dLvhSSAeHJ82n5znWuO0Hj9JhkFK0JfFrTrFucUAv4Rjl7I+ro
QIbRNUbnWgr45WlP0WdmgMla044qPWRA+PINu4LursL3n/wSF/ele6wApiKq
rkY6GSTrtYvVcXNB/UeCNiR8/yjflMqvRcHvH+8kybqqWqCtaU+zPzYDmOqv
1XHj+0+yU/SXw5oM0OjBUedR/HxM+HPfu8cP+p6moF4pg6KM7HohQ+zvHn2x
+PldqQ+tYFJ/fcd6/P6x3Xpnk8e9GbCVU/aLwAn8fJSZfcLnNAOkv92RbvKT
DIje6QXrZ+nGQmwY/VVdyEj6CigbXOBcLCMDrVLaxt/buKCPKPviQ/z+7bru
xt8S1Q4ik/OHqN9qwYzd+nun05tBldsE9R25FmiO7yyXZpwB0bFOJBX8vFSf
HynisJEBNjOYZxeNkJFfLxdpbwrAv7+JMLaye+/aQL2t4GJxTS1wrq62iC+c
Ad7Xrl/+dhk/f//l1/m3X9ddLlQESYBRreQTHRyRyWp5dzcFfH/E5thNXwEO
Q8m6ZzvJ4MrFYgdPbS540/ywbiv++7ea/6anp7aAkF3zJIOKWvAr7LThczgD
CsIODezDr3dRhsrqgQMMsKrnIEfdKBkQvn37MSH+JHy/QPRZWYv4Q23Xm2PT
H3TFG7e3AYPBW6vO49fXcV6iIChyBpzepNhmeS4FEP3WnV8te3+83AVOClqU
FChzQSnewRQm/POsPXyEq0t0BvCULVnT8P132V7HF1JyDLBW8I7dIn5/J56i
nau5wwXpDe/EruLP38Cjz5dktrSDcvG5GYjfL4R3F+pwzlwjtQH8AHXvP3Aw
wEAXkRu7+8ngPnkrv6YFF5yyW0tnxe9HVcOLuzp3tgLdae2KUvx5SJ1yCT58
dgYknFpzgAF/X2XvZHN/o88AW3l+XRAbJAOiFztR85nnS8Rh7L/5eJOQr1wy
d+bRPLLXXw+2812goXlkil7rVH/Zj6N5ZHbRVfeOjg+ifuxRlVhx1sle1I+V
3LRKTuX5T9SPnc1VSzAYaEHzyFYy5bOM9lWjeWT62a3ciaq5aB6ZQj9Djv23
t8jHV5/sFbH0L0M+Pkl5OKWQuwn5+L6hix8LT//px37fWdnnv7oX+fj7i6QZ
jG0Q+fhYjTmM6/oo8vFbxg9pveOmIB9vRd0uuuxNRT7+R8SFrcVFdOTjH1O2
LDbrzyEfX6ZRd5v0cwkQPv6h5Y/SfjFGSPh4Xsmh1OlwJkj4eFqrhXH2fmZI
+Pg1lm8zI6KYIOHjq9bUrV3ZywgJH29k5fVx5MMy6sde3Q6yzxz80499kRZa
q6n5Zx6ZFXsc2Gg8g+aRCZDTkvjN6Kgfe81zcMWEl476sW0pJjx3TtJRP3bA
QCFXF38uCR+vbyRyLKOdjvqx8SWR6ePCdED4+OSxb7JXe6mA8PHU9d+GNSwn
AOHjw2/Y8Oak9QLCx0e+PGPW9KUY/P/i4wGvDV3AewbNI4vnTJK2KqageWQD
RSqSSzYjaB5ZXMeiT3VzP0Z4c0OvV+ZrVaeQN6fXlGw2558GhCcn214pcxFg
gIQnT76zon2cxgiJPmtEjLF2GR8zJPqsjd7d9w8I4eeov7z5lTs3co0WGCHh
zTnadCiG+HuA8ObRxcczq4cWUZ/VAJzTLYyaQ33WT53SWx/smAWENz+3c7RD
uwD/vv/y5h7Lnt8jNtJRn1XWWryIfzsd9VmFuoZ/yuH7EKLPGm9nf4atmw7s
/UO+LAeToKmb/E37CDoQPbq2a1GQDzJ8eMVGUZwGhE/PfNx8SRhMAcKnj6vq
e5reGEZ9Vx2WwEMsg63g/+rTQ78LLZw9/xvNPwvjExTKWpxC88/CueOsQOMo
mn+W4TakOdI2gBHeW2HkLmUxhoK8N8c9i3FxLRry3KwUu+XTnCuA8Nyz563z
V54yQqKfulTITd/SwwSJfqqMudqajN3MkPDeccs+LsJGTJDw3iZPhr13fGWA
hPcWGt9ZzF2+hPqpIS6914Ns51E/de1OJ/a+9Nk//dSAQHUDfN0mvPf5Do+P
T/F9NOG9uSWrer4K0FE/9UR5pe7CDTrqp+a5GtfJNdCB5ljNmec3SPDN9b5t
ZV/w75MrSnF0hgTNh7uYVmXh7+W/fLhtobXFlc1UQPjwG7IOh4+wjKH+qpm/
5Hv73d3g/+rDT2hrv/rUOY3msR18y19cYzKJET48tynogsTGYdQ3vcy5cNYw
hgESfdOKvelfA/WZYJUIB+/dg2xwV6ZlyaZdzJCqq/WMU40d/hZlkHTtZYKE
r5a+HbxNm2cR9U2fXCn4/mz0N+qbfmS6YKqeNwMIX90pPLM34wEdEL46QcPf
EZLoqG/6IUir4guko75pZSO4eSeJDnwEDi9dVyJBHbf3WoJ9dPB0x7ltjlkk
uCf7dMnvC3TQ7PP4Efd+Ptit5Fm+K4wGCK+dGL5BPucwBRBe24YcuX4sZQD1
UhkusC3+6qsF/9ZrzwqXWoTZzqF5cNQPOe3MSVQ0D27Pevkvk6FjaB6cSUWy
tMa5QYzwz90xhnoPzSjIP5/iGRAyGqAi36xZctmz8sYyIHwzE3vBPWULfJ39
q0fqXssgqP8J/37+6pGqpTx8+kOFGRL+eZvLzoDNt5kg4Z8FD+UfUVhhgIR/
nqe1eHPtX0Y90sKCSIp53Tzqka4m1brkzs+iHqn9Xfe2EKkZQPjnFj1ZxrRD
dNQjjSZXRojg5yLCP2tsbb0sc5GOeqRZdtlCmyrx9+Pr0Q/tNiSYdaWigxc/
Vzy93HfmVz8JjpdIRXuNTgPCS59fXJGR86ICwkuXGZpDIeVx1DONfmzoXTbf
AwgvXbo89lt9JvVfe2kfYdbsuCQ6mk/3dfuvq1PyFIzw0vRvFR4fCodRP1Q2
QfLrFUsGSPRDZ0fKh7eJM8FjfqWVNzeywepjit8uSDDDkaMrAzpi7PDZU/aw
UAZmSHhjs/tH16+7s4j6oTYx1yj1h+ZQPzRhxV51eWoGEN74G9v6OtdIOiC8
cVS4RKv/Ojrqh36rfN92RZGO+qHXHv8ulo6igwK3X24REiR4RODYi5BeOljs
vOuS9ZYEnxurbBrHn7eF4ep0Fmk+WHW8LGlxhAYIv/xlUJzF9CsFEH5ZxiCp
Zb3QEOqRupv67pCeaQT/yy8TXvlxnW2orfkUZnEBHnJuZYWy4hVFxxeZYLv2
pRelPWxQLzexVG07MyR8cCN8E1t7eRb1Q+071jLv7aQDwge/3xN9I2grHQh2
H5fnZ+GFZxcuufVvxu83HZF7E0wkONzj7JPRRgetqpkkLW8SzOt5cS42nQ40
ks1XT7PxwZt2GnuVb07/oz+6mNHlutqYFYZoTcMAVyaolaFvcu8sG9xSvF2+
X5kZzus9V6k+yw6fz/Tv4v3ChHqiLwSDa8Yc6MD9W/TR/Y95oOhcKekZD/4+
23Ul7lcxL9Sjxm4Yz6YDk7S3d3U1SfCkOzdFpec/c9Q02sS/kmCdqtsbS/z5
+W/+17pqcJPj5Bya1+cy7iX1iJWG5vXJr8uJmWIYR/P6Vn32bUh4N4gRnrZG
2l+/T4GCPO0P+SwJ82wq8rLuUdutpWWWAeFldz/YI3z6ICMk+p9X1e68SknB
r8df/c/VqsKfjPH9N+FpJ6Q3NezyZ4KEp317dmX+szAjJDyth7ct14Xry6j/
KcTR5nmT7U//83eB5Ti76G/U/wwRWehwPjADkKcNyHX/rUtH/U/DGnLAXXx9
IDztiYdfRHWt6Kj/+aaq6LvdN3y9vTZnsnKaBK1ytpwxbsavt8gjumUnvh6f
PFB2cxUdEP7WXkFbLzyTCgh/u7NG7+75qnHUD12K3DCv1/oLEP42fvf94Czd
vH/tb0UqpTLUBGbQ/EDqgWqF+64UjPC3vDJ94QakEdTrXC6TW5u+jwESvc4w
pnS/rDVMMPDz2+2uHGzw5SVyrcJGZmhTacFnT2KH231+cfzkYoaEX60sOTif
k7aIep3bFWSBidMc6nXGuD/3LeWZBYRfNbk7eng5GV8v//KrB9nF1PIF6ajX
mZnw62rUDjrqdb4IoLwrCsF/PnVX0a6NJLhoS9OW+0UHGVm+G9sjSPDtSZXw
vc/pICDMSctTjA/2/XIIquadBoSHXe+59IaPeQoQHlbfOMWGVj6E+p+eT5TE
E6jN4H95WMK/qn98NJiXOIWFv94cc7WUFQZv19hpPMkETcvLsIE6NqjhE5rD
tJMZEt7UxHt727lns6jXuctB/lnnBB0Q3lSia1PFR1k60Mq4uMtwngeq5cq/
wYToQNXtMnZ/nhfy3mOcuYXfT0/Xfs51dCfBCzEx6pn5+Pvm1GLklRUS3Jxe
EWf/avofvU9v5aDf5odYoTfL6R6P80zQd1g23c2ADV5L28IercQMb3wfsx4/
xg7bzc3fJjQwoX5nIc9ldSdX/H692qOvcZMH7rLI4hDAz583n2yfEcnjhdVT
rhbGaXRwuW+6oPsACY45+j/dgL/vW02NPY4UkmCj5sKs+nH8/v+bJxVl7zh1
6S0rNOQOiK6sw9evsnvrJdPZoE6yhqXhXmbU6xy4Wv9LZT/+/4X2179r54F1
yTYRKvj6c7WXEyYN80Lxhty752roYOlLJ2v2ZRJskPX61FdBR33PIddPhUPs
MYDbdPjSbTk2aIz5ap6RYUZ9ziGuk8WZz/D3eYnVcXNTHvg0pEmIhO8fYnWC
DqyWI0GhfDUXgO/vNFmvVD/7QIL38nJavFzwn99p1X9tmBU2rnBelGJnhqcr
SBcTptig6Vr2LidxZhjocMHKk48HbufhqVURw8/bAzOlS5y8cF+q0P2GLXTA
LlB70IKDBOfz1n6Rx9cXsQvv7LcEkGCIMpnyJIEOWN2uzng4scGjV4NSx/Yx
w+iNZ7V2hfFAoXSDa+/+8353N1XN1SdBhSfOSle76P/odRL+cr0pybVKcR7N
dxQ96Gtvr0RD8x0Vwo1kfZXG0XzHs6EJK7XlgxjhGbl2yIvliVKQZ7xsJLrw
KpKKvKKda9g3GZZlQHjFuKQ7p5XkGSHRy7xgdtva5R0TJHqZFkpeb+Px9zfh
GS/FRgm4vWSChGe8/15ozdh2Rkh4xli/pizx58uol1nSpnSvQfxPL3PNGufD
a3b/Rr3Mg8G6L+S0ZgDhGetVshxGDemol+mUbsPTht+/hGcMdIu37zlNR73M
kY5+lUH8vKR5xiOBdJIEDwz7Kke10oGD64li4Tb8+zqRmWuF/3vCP7oauDmq
VFEB4R/JLHfM1dZNoN5mYf+pdd4avYDwj5v5V1pjLhWCf+sfLaolTQ7rz6B5
k99sZcfevaZghH/k7JAx6N0/gvqWZ7WPHdmynQESfUsrt4e9k8uMMLPzxYkZ
JjaY3J5tGSfADCWesCfcWs0O3afkI2TWMkPCD0r27zFX+r6I+pb0UA66g88c
6lsK9LTysInMAsIPxonyGj7JpAPCD4Z1tIcH4+8rom85vD37Ra0MHfUtjwXt
uXY7mA6sdMy7FgRIMP7AhzW78P1IQAzp6lgoCWqKa7y+9ooOWqjq/GATHyRZ
TjCt2zINCI/YeP6JuZ7YFCA84sM+1zUvRIdRLzOhKUSsY7wF/C+PSPhDpVyZ
qe76Kawwm6t2sogVWmffpZwdYoJrH984PlPOBp/5HOJ0w8+bhPf78AXr8IqZ
RX1Lc/dYyuIsHRDe74qHtR6rPB00JpeF2lB5oFjetbNKG+igfP3Ln7ozvFCC
v86hrxHfHzBoc967TYI3kq18OzH8+c/6flFugQR/p6zmt383/Y8+ZtXtceX7
+1nhJ3WVKElzJpi0amPPoiYbPOMT7ea9mxkq+ofNL2qxw5lLacGJHUyod8ki
pOJw240Ojn71PFZxhQeeZF4WeYXfv69yWaMOZvFC0ufe0ssf8f2428bO9yok
+Ehp+/VM/P2dqd7eYJ6H72dFhpy/WNLB3z2f2paKJ2PhrNCnZI1aWjkT5PaR
S1Z8zwaV5pnt8/D9KtG3BAIB4ScBHawKOry/oJ4HOr55vXrzWvx9fVfxrEs/
L6xZUa3U+46vFynWFmX2+HnBO/OqYDUd9TBnRkKZfD0TwU6n1vA5CTYouvyj
ZrUUM+pZBmuem3PD7xf2DcxmXXo8MGT/dLIK/vt39pEtG6Tw/df4ejkW/P0t
RqWLvUkkQaVBm7Wdd+lARcdwLa2bFb5y+wUvMDHDjb7Ycs4wG7xwTTt4QZIZ
ehazWLOu4YGrF+0/VOPva6PzW++yr+aFby1rqgzx93lw6uxpCTYSrGD8Zerd
gZ9vjskVKfmSYKec1pbcD3SwLeSMJMNFNvj5cdZ7Xvz9/dSJQSf7OQ/c0q8x
/Ah/f5cKuJ+6r0OClQGLg9Sf9H/0LX3ZHrcYh7FB3h8tGWT832/0ZuIc/MwD
9zwImDjIhz9Pj5wZx61IkOVpZnd1Ax04xWfPz/Kzwd2Oo5bXRJnhwOdDFkOq
PLBlXeMObgE60BZYE2krip9H5kO75/H9UshqYemWNjboFRGy77AsMzxjr2nL
O8cNXxnEJflsp4OuUw/7NjHywo/h7I5PN9LBxeoDD5bN2GCp1xkde3x9viSs
plfswQPHSfnPMfzv6dH5Hr5enQTlE0uuauK/P5C93mMdmQ3GnTF8FIfvL8ai
vO2f/+KB5x41fnZaT0feLFH3gJQpy3Mwvm/+4IISG2TQggsXdjDD7Vc+Gzee
5oGbz3L68+N/77o0h01gF76fqHJR0cS/z+g11g0hc2zwypPH3XGb8fvBLWHz
Mx4SVO0TeZSGr4f95zxLGW+zwTb7tAO38PUmtRTTTI7lgbPqaeyj+Of92Ldj
44QRCb5QeJeT+oMO/psf47hhXtlhNo/mmcqNkSol9Whonmk6TGXZfGwczTPt
ffei8kHHIEZ4rOT9/anJAhTksXh4W7d+C6Qib8VzrXtKjLoECG9F2S9nzYev
f0Qfsmv7cG1hDBMk+pDiftNvcvC/h/BYrwLWlPG9ZoKEx3qRP2P5G19/CY/1
+0LxnYdRy6gPWeZefD9I/k8f0pDj7NYY1d+oD/nDhtk+Um8GEB7L8RFjx00T
OupDhn0s4w3C3x+Ex3q0PBInh78fiD6ke8191ojP+HrbdKheyJz0Hz+9IxU/
Dz/b8untfDMJnt9UyaqIf/+E3yJz6z3vaaECwm/ZqMWUnFaZQH1JHhdFV+xO
LyD8VnB1A+X+HQz8W781UBHYxm8/g+arHvq9EDD1gYIRfmusLB2eMRxBPcf4
sx/0j4kyQKLnOIDJBUjNMcLDDpyUrGVWSLVUZIbrmCGzw09nTxZ2WHffYno/
vp4S/om+zPlquX0R9RxnE544cb2YQz1Hiy8Sjwu3zgLCP4ndOXPeOhff3//l
nybrJqeChOmo56hfu7fjijQd9RzVq0qlmoLoQErg0kT3Ony/z/K+OqabDu4K
NIXSX5HggNjdGNcw/H0UmfR7kzAf7Ok8OcgjOw0IT+Ubdo+qJj8FCE9VtcWA
/fnRYdSHZOk4eiLNvhX8L09F+Km371ftzhqcwvQPP7RNIbPCxJ4dXyr7mOC0
nZ7o8lc2eMe7MSRagRkSXin2jtKE7PtZ1HNsebSSG7VIB4RXUrtfRC7Zhe/f
t//Wc5rggT5r2w7exs+Dz3oTJ3dN80InzFSeC18/T9zg3ONzEz9vvGOLaf+E
79fO7THgnCPBnZZaH798mP5HD3LitZD5y72ssP5WmnCvMRNUDQy6WaDOBseo
7Cyn8M/Hf8np6yoNdsjxraLl5U8m1HekmS62PvOgg8+ThnV+Djww+Pz14AH8
/t9q4ELTy+CFnC9/j8zg59fPOvLjT/eSoMH3TLlxfP2MzY1YssohwdQAeZfB
c/j9/jePVJ+qtiU5hBV6Fuwu9PnKBMdtV7mqvmOD1ZzWr41VmFHP8aD06/p7
anRQwXN98ls1D7yid1byNX4+KdHWumrRyws7tr9kUqmig2+SUl51dvj/5zDB
EI6fhwhf9MCnYFdh7gdQvGygmCfKBsV81cPUtjKjfuP3Nxnfp/H7xeNQQ0u0
Ng/s8VLS7MLXz5nU6ku5W0nw1ZbbAk3438Ntl3c0OZ4EvR+q8F/Gr0dFS1lS
+g9WSO8ALLYrTHDh4styrJ8Nuu5uEY/fxgx/jzT1lbHwwE+qbpwyknSQJXaw
mYuNF44e6R4RFMXPk24cV1az4OulwN3BmHY6GPlGGTzoQ4K6F5mvK6XSQa5k
SwFmzQbTwwI6vPDrwRpeW3HTnwdOaLZt/M/6GdD33NFWiwRdUuVrIvD7/+9+
5+LgmdiTL/Hzd/CzLh78ffmLSaF4qghff4Nej7aR8OdlSUlm5iwJCv/8qC7Y
RAdMSjsCc3jYoGrZ5tZT+Hpyepy/470yD3zOEy7wE18/efs2fdTdTIL+kVzL
ofj65jo8Nd3VxAYVW9YtJMkxw+YX64fqp7nh1bWTwevw/e79PfvcNJd5oDZc
DA/An+f5k1lCRcZs0MHiA//TPcywT4NUff8uD1RgvqAxgP89CQI9yQuABH0i
fm/IwX+/01DC0U3ZbNBD4OLjB/jPp2/M3hzexQMtdc9uq8fPv4SXwTTcy+YC
QoF7mVMzeRcbvJTXdWcMX8+jQwMbX1rg69328kU/fP384XZPTmInCYrxzVlo
4+vnvZF9kdF0/Oedlr4E4fsFdZ2CHS5cJPihyObyDH4evTH5+/QnFzbo168x
oIpfPynq09LLkTwwtE2ErQT/vNfT1GUbjpHgqg0jYiH4z//dv2yL51J2CGCD
N+dPm3vj//7y4jMpthweuH+aYWQrfv3D3TSq1wuR4FHmhNFMfP/PLR/af3KG
B7rmC+2exffLQq5x2geOssGLhc7SEfgrtzEsrYbtOg/Ufxj72xB//hTT2L9/
3Y8/b1n+M5fw+3NngmmP7Ec2SHYuWebC95/PJhSahY14YEYEw3wU/rzYCcTr
TUiTYLvjg49S+N//cs2QP7zEBu19X4f74PsrwSPy5bRgHng757RVIP73MRy1
143Qxd+nImLrVfD9WdK2dE7dSDa4IHr0kAn+8/d1Zvzvi5Og6NTZCgP8/78T
eclXkJkX6mTcjsrZhO9n4bfRg6fY4IOGn4m78M8zQ7lateTFAx2kwn/E4r9f
yD3Pb9dhEmzj47xSiv/9hCeRvVJQVzfsAdIPU+tJ53nge/Ok3Dj8eun3mXFZ
7CbBJZvEESX883+S9md/vsQG19O2qL7dyAxNGlfLq7uzQVsz6ZwY/HorR0x+
HX7HA2P4P1kJ49frv/oRmFhv+2gOEH6kaFxa46TvCOor3u8UnS+MqEd9RZ9F
upqzfCDyI7tdhnp37i1HfkQtqumn3OMG5EeORva/qXRrQn7Ey1H16K/lBuRH
7sQuHG8rr0F+JLDjYHjY8a8Y4UdGxp8VTh5Mxwg/0t3lnMrm6o38SJi+7ebw
vnTkR+7R9tRtbyhAfuT0sRuLOUGFyI8cjbi/lNCZgfwIQ7indc2MNZo//Hu4
V+HYoSI0f/i6afik25t6NH9Ya2hQPyLgJ5o/nHz4pd429iHUV7R7/TE8bxUF
9RXfb7CY4Oiior5i9aPjyfG606ivGF752feJLw31FTUcKsxjBKZQXzFSd+PV
A4dGUF9xn7jN+PHzPaivCAwbooIGq1BfsVagIvFBbDbyI/vFnqjNTrQgP6Jd
6TIlp9qP/MhIml5J8vAY8iMP9PsrVl+eQn6ElVzQfNORhvyI0Quemo5KGvIj
3dX+W+V1/viRqqezG051jSM/8nZs94Cx9x8/ou3qpGb08f8fP7JfiyPespKK
+or32b2Hbw90o77i+8eA6zNXEeorvrKrulLxpgjNH/b4+GhFrKwWzR9Of7Qo
mbHQiOYPM5y0PzC0tQkjeovH2GRjMxXrMaK3+NvcKdGzpAIj+oohoE1pw44I
jOgr8r0pv8GxJR71Fe1yTxQFUnJRX/Hh/frG0GNFqK9YpMtcriBORn3FwM99
S2klb1FfsVt14OsVgWSM8C611zmErj0oR/OKx2SNmEUqWlFPMSGINpuvOIZ6
ioWbj3YwPZ9C84k1XYzGt7XS0HxihqVtaoeUp1Fv8Ud89ne2u1TUWxSce1de
9XAC9RZbqaXuryn9qJeo7+VNclIeRn6l/PBLcX5eCvIrZmbffNVeU5FfsTlf
ffh3NQ35ldF0lfRFPRryK+nxz3fZtFOQX7HlrzQM3P7Hr9TFx5s8Lvq/+xW+
gbOhn1boqK8Y9+3+roar/aivuGXNifKu6+Wor2iuaNqR4Zr+Zz4xvPTpQcl3
NJ+Yfr8N+2rViOYTi5vtXdN0uQkjeov747Uvmck2YERv8dhZk7IRs+8Y0Ve0
t+v0fnMmESP6imtf2i8nWkegvmIVmyk/n2w26isy9FTuv9xciPqKicNiJz/t
LkB9xWcVFx65uaSgvmJxq2nDUYZwjPA28gLxGQ82l6B5xjlPXA6/iWlC84s/
z0bGb9g6gnqKvXPdLFcaKGh+sd26y81j9jQ0v5iysN/0qtE06i227Tc53MpN
Q73Fn686BJf3UFBvsaCy2rlRfAj1Ep/fPEnrg4PIz5xtaZvnCJpAfuZOxLOl
FW4q8jNG3zlDaYk05GfSZ1at1YmgIT+T88rVMyxmCvkZ5ifk6Z6YUeRn1uil
aE2v/b/7GYXdw9bFZZOor/ipWrWWu6gN9RV9fkp7bNKOR31FhXuPywoiStA8
49aoCShrXI/mGS95ea03OtGE5hlHvB8ryHzfiBH9xfOK0b+ObqzDiL6i6Kng
bRvGPTCir3hwvKIqu+sj6ivGXTx5N1Q6H/UVD9wYPA8PFKG+YseXreUVJ3NQ
X9HnyUu5637BqK8Y9qH/wceqLOR/1Fevf60jN4HmGy/neZ4UVKdihP+R+ZRw
+MeWaYzwP31FW8/vnKSh+cd7NLdlYw1TGOF3hH7sPCO9aRT5nR4hnlrdUgry
O4YeXXXhvDTkd8Ruu3g9a6chv/N17/Ql2U4q8jtLfA0qMUOTyO+wvjOjhbn8
8TvdYpvOF1T9e7+T8jltR1XuLOotDtwBcf0jg6i3qJG69wOvzJ/eYt+TyeBz
t+LRvOPlU8cqv7+sRPOORTO5WUzx/RUx73joaYUVGd9/Ef3FMh8ztYdhDRjR
X8Qsk94/DK7GiN6iuEELi1//R4zoLUq7rujV3XiBeovfki9sVQ7JRL3FGBfh
43EXClFvUWNVz7ecuQLUW9TRmzH6+isN9RYZhlJ67Mb9McIbud2Yqh0L/ITm
I9fTdYQlNjWiecg9E7GNoYLDqK94suzdxvWXKWgeMnyoJKQvRUPzkHf2G1nc
Np5G/UVPeS/eVAMa6i/qOJzQ7EykoP7iXaU9djeVhlE/0UTxzuZEOID8UFjr
ebWiT+PID9WPn7XZ/WkK+SGGxjP5igE05IfiV4V8Dc+lIT9EkusQypybQn6o
p+bIWFjpGPJDgkn3zh5o/uOH2K6tGNv2/Hs/lBmUZ+avP4V6i/ptDO8Ov+tE
vcVvux4l+gVkot6i77UT4vU8nzGit/hpw5hIXEgdmpd8e7dN/ZFdTWhecq0A
ZyLnZCNG9BjbnY9uN0muw4jeoonNHkmjzEAM9RZz4qYfCyah3uJR3nfGJ0TI
qLe4p5vnVveJItRbZOi0OVTRlIt6i/27QypFzkej3uLtbRxat5rSkH8ai3X0
k1McR/OTsQZ67I3RKYzwT9PvbDh1maYxwj+dKMlYpSUwjeYry5oKPropTcUI
v3Swv/xcotwI8ktSyVHSHy5RkF+qvMgSwtZGRX4pauWeG0MrDfmlSkH+3bUb
/vil9JTAxn0Of/xS173p9Wwtg8gv+c2Vtms1/3u/BD0sxx4L9aLeYlRfpVHV
2hLUW/z5YkJ/4HMutlFP/dBgbA+4cVafpflTDRZ0ceJX3qd+MGaZYMiR04h9
ddicJNIwDHzkaw+lGzZhxLzmzgvp5N7MeuxokkgSecsccP6w0182Kgcwacbr
p+xaAGeHDxtSJIpQn/FKaObl82r5gPBU7unntkS/pWGEp1KKN5nx1J7Gissd
J+id7DB5uE9VpYyKET5KOjJi4I4ZFfko9U+9oS8wGvJRZdeOM5TdooErpdma
rX58cOuJ+p5Wtal/eCneilnFdqwXpEbsbHT+XY9pYvMSQeRB4PKM5ccJpybM
13f6yIGZUWBtfn23i0Ujxizf8P3WrnkwoiEzcptUAIT2eoeek1sEojq23EoL
hai3eFD4lllHRhYgPJZbCv0VVxAVIzzWzCU2zVTVaYzwWBfc5JsUimkY4atK
TAXL6tRoyFc5GtBn/Jrx+2Pb4VMCunywryZ659Ir6n/3VoM/I09G/Ea9xcif
vAztSsOot3jab3lDF38d6i0qfx56MWETjeZB86tv1DG5VIHmQcvfV5jp+dqA
5kEL3Mihv7uHnzf+6i/Wa5cGznxvwIj+ooKH6uZB+RqM6C2OuJ75WNWSihG9
RcF6fXGRr09Rb5Fyeud+o88ZqLe41Z77WpBoIeotXjq6zmynbiHqLZ4WWnWj
pT8d9RahaYvtqYueGOHDtod/PrdoWozmR6skhFyjnm5A86JP+b+8kvpsCPUV
P47yd/aqUNC8aC8RjjcbV9HQvGi7xrJfHIbTqL/4NHcsqfsSDfUXqRO9pTY9
FNRfFHLTTFwqGEb9RJPHW1wmi/qR92LT3bf+sek48l7s4wN2R0KmkPdqlZ3U
X+tOQ96LT22AovqFhrxXrEPQxn7xP97rwmZG93aTP96LJcQz6WrqH+81iPXs
pcn+e+91/PNQe/AaKuotLtg/OhiV9hP1FqsjW6w59ueh3iLFaM6OOacYI3qL
RUPUCbnddWiedOHaXTpmgk1onvTU7xT9IM4mjOgxTo6M0j2n6jCityi/KPmA
a+QVRvQWRY4rZr7Ykoh6i2rKwZwn/PJQb5HnkvzgLvMi1Fu0Cx1+leSZh3qL
ey1rDp0TeYN6i9f1Mlibm1KQV/M9RIpWyBpD86UNd/iPbCqawgivVlbn/lZ7
goYRXm2VJW04WWoazZ8OvE+JHDKmYoQ3s7zW8LEoYxh5sw337olYAgryZhKX
GmMHyVTkzQIOBL3RbqQhbzZRdJZlWpGGvFn64qZVZW8oyJtt7de6u/3+H29m
oPGy5VX1v/dm72OcwvTV+lBv8Qp/2YQh+RvqLT5O9Q4Yf5+FuUdw9Gud6QFM
bRs0xcqrsR9dyeTI+/3AOlNisS+gERuLfzCbHzAMUvnnJxitmjBinrXy5aC3
hVP1WOa+8m9MTHPg8hAX9m04G/y0PcqiwrcAGi9dvsbIVIT6jJcX6bJbi/MB
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
isXebDxoD+EJHAAAdcEC0g==
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{473, 476, 393, 394, 395, 396, 850, 717, 612, 533, 472,
             438, 877, 744, 639, 560, 500, 899, 766, 661, 582, 397, 851, 718, 
            613, 930, 797, 534, 908, 775, 965, 670, 946, 813, 979}}], 
           
           PolygonBox[{{359, 503, 358, 3018, 504, 443, 409, 854, 721, 616, 
            537, 477, 360, 822, 689, 584, 505, 444, 410, 855, 722, 617, 538, 
            478, 361, 823, 690, 585, 506, 445, 411, 362, 824, 691, 586, 507, 
            446, 412, 856, 723, 618, 539, 479, 363, 825, 692, 587, 508, 447, 
            413, 857, 724, 619, 540, 480}}], 
           PolygonBox[CompressedData["
1:eJwV0TksngEcBvDXXQwsLAYVisQg6YLxQ9mV0s2xV1JH3TZsSDRxLEidJTFI
JOI2UCpiMDlWx4KRye8dfnme//O+X3zIamyu+hEdBEEUI2wq47TSRju/iMQE
wZYXvxLLkW2ODko927ZVE8exbZ56+5X7J9nc2Tops++4a4jnX/jzbE/6AEUs
2Bps13oLf/RMzshxD8skZvR77/bpr/oIK3oeEX1SprGid3mvXN/VvzGtZ5Cg
D8poDplwr8kCLjgJ/xby2b4rB+VS+D04p9g9JlM4Zt69IT9zyaLPN8ob+7Zs
lXPyI5/C7yyTmdXXZSEPPtMv32yjrOr5lOpTMp1Vvdt7X/Q9vZYPDLljmNRP
w/+h/hLulPDbncpC+Ht43qTf6m3k8mjrocK+764jkf+2ZXqp9OzA9p0kzmx/
eQeCQkr1
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwV0btPk3EYBeCvZcHFBScSKpXEwcGEgAyKtH8AeOkIoomLS+9ddUHLJg6G
WBaRi4mxAwOxAhpiRetinPDGhqAL6IqLwvMbnpzznq9NC03eLGTy8SiKYkxz
S6lRYZEWbV6Q4RXptigq235xyl1iixv2Bdt74u6rrJGyl2w/SbqLfOe6fd42
oFf5Q8X2Lny+HtMnielXWGXIXfS8rp/QZ0jrp2WdB3pT/pV35K7XnpXLPLG1
5DGm6HZ/lInwvSm4X8tvclzOee+m7KXBU/sHeZyHnHN/kj084557Xf6WZbnh
/WfkEo/CP1hWifROOctlfYWL4fO9/rneoddI6VMccNu94/ms3q7f56Qefriv
XAt/n+f9+l32w+9ie2s75JL7JYO2vPsHCXeOL4yF72Pr0yfYC7+TrWn7z4i7
wQVbzr1NlzvLZ0btj21v+Mew7QXn7Vn3EVlETuE=
            "]], 
           PolygonBox[CompressedData["
1:eJwV0EtQjWEYB/BP0UZJZUYLm8w0iqQZVtKKZnKnpVtU7oZdCKlcz2EjhgUt
jMZtENKMy8YghCEVNmaSSxbupVXM9HsXv3n+z//7znvOebPKt5VuTYiiaATt
3BXec5hW3jHOCxW8YGliFB3SDTDNXsNXtuhv6d6SYS/nOUv0B3X95Nv30Mdm
fYvuDen2NTxjsf6A7g9T7bv5wib9TV2RfJRBqnXdukY5ST5CmryadhbZ93ve
LGfKjRTLJ/hPvf23501yitxAnjzRvMAu+TMb5Rvem27e5lI430znFLPsHWY2
l8PvsN83/5o7zS6f7Qxnh3M4o39kjiLO2HBX5gTOUma/Zz41F5r7wr2aM7jD
tXBX5vhwFnPsuaHnuPzA/GfWmb98tsBs5Zwu2TzGFDnLPE+1/IkN8nXvX5TT
5JMUynEG2GHv9Py0PFKOkSqv4gkL7PWez5YbGKJW91M3OdwFH1mva9bNlGP0
s133WjdGXslj5uvqdD/IDd9PL+vCf9V1kGJfQRvz9LW67+SEM/nAWv1V3SuS
7cvD/TNXv1f3jUn2Knqo1F/RvWS0fRkPKdHX6IYB3YpuAQ==
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1Hl8z3UcwPGxGTPm2NhISbk2ZxGiROWouVpyGzYqcpWik1ydiCjlKlSk
UpQOHc5CdFIkd5ciRxfdPd+P/nju9fm8f9t+v+/3+3n8qhWMyBteJCEhYZAf
0XQ/PtRHGEx7GlHT/KAu5U56U5QM84/0UYZwBY2pZX5In+Uu+pBIBfOPdTY3
cCUXkERFr32ijzGUXJpQjEyvfaqPM4wONKW2+Ve6jLH0JZks8+06h+F0pBnZ
5l/rc4wjn+JUMt+hcxlBp7hus2O6ivu5kByzb/R57qYfJahs/pnOYySd4z6Y
HddXeYDm1DH7Vl9gPJfa/60b6R/vYf+Lvsn0uJ/2SWy1TuEM6891PjfS0v53
XUuXuJf2J/S12Fun8qB123i+9GWz/TValhbWdfU77anL49o1hQFMsL9M/4ln
qO9qVy3DwPiduC79VXvpW3qVlqKAGfGMtRj5bLPvpuUoaV1Fd+qCeKbWxbnJ
+hL9Q9fF/4tzYH9SX2cK7eyLssX6IupZH9YXmcjl9v/qexTQwv43fZuHSeVM
s136BKPIizNl9pO+wVQupr7Z9/oSkyikFGeZf6FPcjNXx/OggfkPuoLJDKQ0
Vc1360JuifsY10kaZ3vtS13E6Hg+tKIM1by2RxczJu4frSlLOcqTTgYVqEgm
WVSKsxnnJu51XHN87vgs8Z7xvzmHc6lOjdh7v736FLfSPc4pDc2P6EruYRA1
42/N9+nT3EaPODOcZ35UX+Zero1nZXZK32EmteJ9zfbrM9we123/p66PM0kz
+591NdNob5/I+/GcOd/6R32FznGuuM+6TXyhsUmui2dpfVrXxLO2Ls0s61xN
ph8fxPVq+SL/fyfWjnuiB+K6dIl21BL05454FvqX9tYNcQ40jUJ62T8Un4Xr
yaYtOdShLvXijMW5iXsc9412cV38BxP1lh8=
           "]]}, Annotation[#, "Charting`Private`Tag$832069#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1Xe8jQUYB/DjiqyUVSiEopRIUSkjJJsksrJCC6FQZogQKnuWnb33FqFQ
RiibkqKykhH6Pp/++H6e3/M777n33Pe+73tyN21Ts3WyRCLRNimR+CZtInHZ
spJR1E6eSOzUv0Y2Duleo5h+vr0CV+yrGE0d/S7d62TnsO51ntAvsFfkqn01
Y3iDJ722UF+Ja/Y1jOVl/W7dG9zNEd2bPKVfZK/Mv/a1jKOufo/uTe7hqK4l
b1Hca4t1VbhuX8d46ul/0L1FDo7pWvG0fom9Kjfs63lbd9rek8f4XFdft1du
RU6O6+JkPqNfaq/GTfsG2urO2HvxOF/oGuj2ya3JxUB7Kj6XT3i9i/yPPIhS
jLRnYobcxusl5GVy9fg8cnYS8ocxGSHPNQvwlePbmX/o1pi9zS/NvOygqH2I
mZ7NTLEvMR+N88oE729o7tevMtuYk8ycbOPe+Jxmar7mC/tC8xF+9t6u5mXd
enOwOdPMR2l5lJmZmfLbji0pL5drkIw+9mSMlDd6vb38Z/ydFGOi7hXdj/F+
cvNLnHNK6VfYXyCJTbpJNNL/lPT/dZ+Hk3F+KK1faa9Jcr7WTY7fyUje4V06
0JFnHb/KcS9yC5t1U+hEGa+t1tUiBVt0U2msP2BvR15+1b1HWf0a+0ukZGv8
Pt1fcQ54gmm6JrqDcnsmy7nYzn32wWaa+H/JpxzbTb4if8IsOT/PyqPNLMyS
33dcOXmtXDuuTflubpX7mklx/TDKPs98KJ4LfBPnwjyrX2v2NafH5+A7nrQP
NW9nC1PtS80icd/xpfc3NQ/pV5vvmFPiWuL++MxmWibKi8xC/OY93c2ruk+Z
LT9AGXmMeSez5c6Oe05eJ9chFR/ZkzNa/jb+h/K56HmKYfY7mBZ/h9ebyYfl
d8nH73FPUl6/3v4yqdmmmxHXOM97bYOuLmnYrpvJivhfUCHOpb4eadmhm8Wr
+iP2DuTndPydVNRvtNcnHd/pZtNcf9TekQc4o+tBJf0mewNu43vdHFroj9k7
8SB/6D6gctyv9oakZ2dc17rzcj+KxzMknqW64/J7FODP+H26a/JnlKWnrko8
P+RXuD1+hv0Wxsi74r6QL8j9eZrh9gxxLcS1Fd8v8om4Jpkq547rLf7XZjom
yYvNwnFfxN9g/qvbYA4x55gPUk4ea94V1ylz7MvNx9lLL++tGtelfqXZyJxg
3sO3cR3EZzRTxPlnrH2++TC72B33rHlRv84cYM6I65bvecY+wszIVqbbl5mP
MT++F+O5GNdp3NNynvjZcS7N25gsn3VcT/l63Ec8xzh7VubKvb1eLX6+3JgM
DLCnZJy8x+vvy3/LH1OCBfG9q/tF7kJBzuk+pHqcK3sTMvKDbmF87+pP2rvy
COd1fagR58relEzs1S2K71z9r/ZuFOKCri8v6LfZm5GZfbrFfMRB+tGfAXxM
zXiuOe5VsrBftyS+o/Wn7N0pzEVdL92NuIcpz0Ddi7odcnMmyjni+RDnIp5t
cZ8wPs6JWTD+p/zofZ3NS/EzKBnPrPhej2eP3INH+Vs3iFrxrLO34C5+0i1j
MJ/wKZ8xhKEMYzgvxXXi+JZk5YBuOW30v9s/oAiXdL11N+Ne4XnG27MxT15h
FmUfIxz7H2xuTGM=
           "]]}, Annotation[#, "Charting`Private`Tag$832069#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
Yq+EBA==
           "]]}, Annotation[#, "Charting`Private`Tag$832069#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1GW4FlUUBtCPbqS7W1paSpDukBaku7tRsFBEwUYxULq7u7u7GwRBusN1
fqxnv3ufmfnmzpy5mdv0rN8jSiQSyRY1EtkZMxJpFTsS+TdWJDKO6qTihfkw
89jM1negCLvMW5vdksdTg9R8a5aBjfIwXjpuuD4Oc/QdKcpu8zZmt8M51CQN
r8xHmMdlrr4Txdhj3tbsP/k7apGW1+Z72cd+DnCQQxzmCEc5xnFOcJJ2rnXH
+d9Tm3REOGWtvbW78g/UIT1ROG3tDGfp4Jh7Zj9SlwxE5UPzeMyTO1Occ47v
aHZf/ol6ZCQaH5nHZ77chRL8pn+TPfLnnHd+J/0D+WfqM1VfiKNypvBM5Ixs
koezUC7LRTk6I+UELJDXqTXoKs9R3+ZMeKdq49DLv6u5Oc5e/Ra1HpcZrV+u
VuQs1/X71ebc5IL77aw+ND+sTlBXq1XDGu/pp6mFOcUx/Xa1AZnDO1EzsVne
qNZmhLxIfYdL8l61GTeIoR+lJmSh3I2S/KHPwz75Cy66ry76R/IvNCALMblk
rau1x/KvNCQrsbhsrZu1J/JEGpGN2Hxs/gaL5O6U4orju5s9De+SxmQnDp+Y
J2Kx3IPSXHV8D7Nn4bnThBxh/4XnwZawr4jLp/rELJF7UoZrzu9p9jz8zTQl
Z9ibZlnYGvYZ8fhMn4Slci/myiXDe5TL8qecl/3yl1x37V76F2GNZkzXFwl7
Q84V9rSclW3yJrUOI+XFarmwZ+T4YS/LSVkmr1dr0luep5biNOf0u9UmYV+F
962fpObjBAf0W9X6XGGMfoVaKZzLP/oDaovwvyz07r+3+tL8iDpJXaNW4315
hlo0XFveoTYM3174ztRsYW+yXb9ZrRv2HqP0S9Ty4R7kBIyWk7Fc7kM5bvjt
Pmav5L9oTm4Shv1onpwVcl/Kh2P0+Tkof8VN5/fVv5b/pgUz9cU4Kedhgpyd
HWEvslR+l6vyvvA3hv0Z3qWagqOs1G9Qa3GRfvr5amnOcF6/R20anl+4Xvh9
tUD4XQ7pt4XvOPwOY/Ur1crh3PBN6g+qH4R34G/op0aYbL5WrR7W5FlqcU7J
ecM3KedgZ/hOWCZX4JqciDFySlbJ/Vkgl+GCXIHJckEOy19zy2/310dhir4l
+cL3rc/JrvA9kTg8b30qVssDqMht5w8wi8pUfSvyk4SxZqlZIw+kEv85fqBZ
NKbpW1OApOF+zNKwVh5EZe44fpBZdKbr21CQZHxjlpZ18mCqcNfxg81iMEPf
ltlyifDtyDvVRuF58ZZ+opqL3eG7Jznj9OlYLw+hKvdcd4hZTGbq21GIFNy3
9oCHPOIxT3jKM4Y6JxazHNuewqRkvFl6NshDqcaUcF8cCX8fq+Qq3JQPqS25
xXPX/R91Ni97
           "]]}, Annotation[#, "Charting`Private`Tag$832069#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1Xf8zWUYxvFjZO+dlL2VlFEilT0qZM+iomwV2WSTlb2VlOyijEpEIVEq
e4SibWaH3vcfn9d1f67nHL9znvN8H/nbdWvYNUkikTiSNJE4kyqRSJU2keiY
JpH4LXUiMQLVkA+l9G/q02IJ74izXp9a/5Ludz4S1VFHt0RXHNt5ftyrG8fT
YSl/Cee8P43+Zd0ffBRqoK5uqa4EdvACuE83nqfHMv4yznt/Wn0n3Z98NGqi
nm6ZriS+4QVRWjeBZ8By3gkXvD+dvrPuLz4GtfCkbrmuFHbyQrhfN5FnxAre
k/9gboDOvBX/zPwIDvGL/u30ui78bz42vjPfwWuhNn+KrzDfi295f37E3BKF
eRk+yZwJ481n5Er9K+YfzQ0x13xTdtG3Nn8e309WklPlJblRHrY+VP7CP5Ht
5EKZDNvwr8+bQXbVL5b/xH7KP/j6+O1jz+U3fJWsLWfKa3KTrGP9abmS34dJ
5vNyl36A+ai5FYrwB/hb5szxb/FX+U/mZ9CVt+EbzZVxhF/y2TLquvEzfFyc
EdTXrdKVxm5eFA/qJvMs+JB3w2Xvz6TvrjvLx8cZQTFcsXYVma33sH5ONyHO
AIqjrH6KPis+4t1xzeuz6HvqzvOJ8VuiBMrpp+qzYTXvgeten1X/iu4CnxR7
hQa6D3X34zteEuV103h2rOGv8b3mRujJ2/IvzI/iKB/GfzW3xw1/Jxt/1Xwx
zrP5T/Nbcd7NO811MMt8XdbXNzR/ZC4TrzNfkN/rB5qPxWeQreUCmcBXKGW9
gpwed4HMISfIs/JT+bH1XnJf7JlsLOfJW3JL7IP1Z+WmeJZkFTlNXpbHrA03
nzI/j3fNyfGf75Zdvqb7N54n81/myebO5m/NdeN55M/w1eYHsCfuHjykm8Fz
xvmPM4fndJv5Y/iZ3/Q3cuh68Ut8SuxP3D14WD9Tnwtr43fBLa/Pqe+tu8yn
xt+OuwYV9bP0d2Jd7Adue30u/eu6K3waGsXdggTutNbH2lXzdDSOOwBJkBS5
rfe1fs08A03iWcIj+tn63PGs8t5Ihrv0/XTXzTPRNJ4PVNLP0d+FDfx1tNN9
yR/HcZ4ceXT941yZZ6EL38XroVl8dr7G/CB+4IP4z+Y2KMsr87nmPHEu4nPx
/eYm6MPb8y3mJzDdfEWe0I8wn459li/IRfIObI+0frccoP8gzgV/U/4d3yX2
gXeVu+P5l0/K2fKG3Cybx77GGeXLZNk4Q/Ki/DzuVeuD5XH+sWwr35ZJ8DXK
WX9UztPfjc9i//gBc1P05c/zreaqOMlT4B7dQH7TPAct4vfTfaIrh5/i2UcV
3Xx+T3we3g8pkVc/SHfLPBct4xlEKuSzNtjabfM8tIrzjtRIg7RIh/TI77VD
vDaB+bx1nG08pl+gy4uNvD8yoID+DV2SuAN4mzjbeFz/ti4fvuADkBEF9UN1
SWPf4r6Kc6dby8tjb5xXPKF7h+fHJt6HH4xzhYH8hbhrzNXwC8+EQrphPBne
4d34d+an8CxvxteZK2BK/J8m9+mHmE/Ea+J95qSopK8qF+qWygJyojwXv2nc
C9b7ykNxj8e5if2St+XW+C2svxhngq+U1eUMeTX2I+5k6yPlb/H8yxflezIF
MlsrLIfrkmOc+R+5UN/d/L35aTzHm/P15oewn7/BT8YaKvNq/F1zQXwZ54Uf
NrfAYN6BbzPXwCmeBUV0I/gdcb/Gsx/nUbeBP4wDccZRXbeIF8KW2EdkRVH9
SF2KeDbjOY5zixr693SFY4/isyIbiulH6VLGHsTzEecNNfXv64rgKz4U2VFc
P1qXCu/zHnyPuT7mxDMf3zXuhngO5Ke8Ig7GuUQt3WJeFF/zYciBEvoxutRY
HL9fnEPkRK64f+OOjXsz7r64Z+K5RUnvG+s9aeLOiT2Ns4Pa+g90xbCND0fH
uKd4TZzmo/jv5g7xXcwpsQN5rf0P5k9+gQ==
           "]]}, Annotation[#, "Charting`Private`Tag$832069#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"Feedforward solution\"", TraditionalForm], 
     PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1a\"", "\"u1a\"", "\"x1a\"", "\"\[Theta]dot1a\"", 
       "\"xdot1a\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8648376866338243`*^9, {3.864837721244707*^9, 3.8648377460817285`*^9}, {
   3.864837800602215*^9, 3.8648378151965265`*^9}, {3.864837882180011*^9, 
   3.8648379006680717`*^9}, {3.864917359659708*^9, 3.8649173767071624`*^9}, 
   3.864919300876232*^9, {3.864919337508316*^9, 3.8649193485657187`*^9}, {
   3.8649194958228164`*^9, 3.8649195287531037`*^9}, 3.864920239187001*^9, {
   3.864921249563326*^9, 3.8649212721359825`*^9}, {3.865342438564925*^9, 
   3.865342509036396*^9}, {3.8653477634896584`*^9, 3.865347782729508*^9}, {
   3.8653478492912292`*^9, 3.865348013067874*^9}, {3.86535368874548*^9, 
   3.8653536939258237`*^9}, {3.8653538219528966`*^9, 
   3.8653538384286294`*^9}, {3.865356737715789*^9, 3.8653567547593403`*^9}, 
   3.8653569273791575`*^9, {3.8653569657139025`*^9, 3.86535700435555*^9}, 
   3.86535703851363*^9, {3.8653570911278105`*^9, 3.865357172559778*^9}, {
   3.865357210731576*^9, 3.865357232535606*^9}, {3.8653573843380775`*^9, 
   3.865357407024825*^9}, {3.8653574402422056`*^9, 3.865357560552746*^9}, {
   3.8653576116883984`*^9, 3.8653576483786693`*^9}, {3.865358188766919*^9, 
   3.8653581946510377`*^9}, {3.865358314589696*^9, 3.8653583435974226`*^9}, {
   3.8653592266591263`*^9, 3.865359247679407*^9}, {3.865443792998208*^9, 
   3.865443801104616*^9}, 3.8654440595339727`*^9, {3.8654487336752205`*^9, 
   3.8654487504428587`*^9}, 3.8654492637776985`*^9, 3.8654493114634485`*^9, {
   3.865965582539151*^9, 3.8659656451141005`*^9}, {3.8659657927138066`*^9, 
   3.8659658125544496`*^9}, {3.865965935915921*^9, 3.8659659557085795`*^9}, {
   3.8659659882041674`*^9, 3.8659660068222017`*^9}, 3.8659660863577166`*^9, 
   3.865966459016309*^9, {3.865966598898487*^9, 3.865966735717648*^9}, {
   3.865966781206072*^9, 3.865966802194347*^9}, {3.8659670998539696`*^9, 
   3.8659671350117044`*^9}, {3.86596737708314*^9, 3.865967416340561*^9}, {
   3.8659680911663313`*^9, 3.8659680979531565`*^9}, {3.8659697724146223`*^9, 
   3.865969803929524*^9}, 3.865969850623562*^9, {3.865969890971634*^9, 
   3.8659699268721304`*^9}},
 CellLabel->
  "Out[4121]=",ExpressionUUID->"4a890a2a-ef44-433a-9290-f67721899863"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1:eJxUvHlcjN/7+D/VtO8zbUjIEqlEIYnrVBSpLMlSWmxtijZKQhsSLSokSRTK
nhaE7tFe2rSnonXa92mf5Xu/f4/PPa/Hzz8eh8mc+5xzX9d1PJ+Pa8WpC4fO
8pJIpARREul/vytHspITlQJ32prFJV89OI6Z/BA0pztiELT5nWjQSgZWIb5F
mGxTDa2WFky10GnMIHI37dX+JnCSetbkdHIWO7thXnyjeDssWqdUeW94DjNb
d3Zczrgb5p62L5s5voB9qrt6sVSnD0psXj9f6snEtlNUP5CvD8ElleGXaSdY
mONC9JMXx8aAOcMQFJ1hYReKerU+mE0Aa/W5r4d3srEwK4HVLFcGTOoqDGzd
xsZOF19x2Og0DbS6kiyhXhb2U3DRwXPHZ+HPxBefXQdY2EbpgAf93vPAy+B/
vecUE7Of3KFm7soE/5tv+k4ZLGDPEgsVZ8LZYPFLssuhcA7LiNBtqTlEQskb
rqd4C89i3jk7Djwx5UFai2RPqa6bxrCyFxO3rXmR2ML0w87KSczZeNsP52N8
iCohp9luMI4lpG7MOudCRplFLnfcqUPYvckfge4+/Gjh9sCTj0+7Mfrri5ec
PAWQSNSpvYGrm7ECo+i4oCBBNGnVb7rvQzbGs/9PZ2SAEPqYlLc4MaoMSPrZ
PEmXhZHWM4/lomv/Qaj8jFnNLRH0N+QqC/b0gbvV6byZYFEk2t6sa2M0Ch2B
2mfgvhiSbXC3V2iYAJmYR39uPxNHTUs5mwwuTcFLKdXLxY8l0AbqFZeZ0Bn4
6blst8obSZT2Od42x3sOEpcnKe44LIWu0U/3vCQtwA//eZJTtRTyM/9bK2jB
hBX7BJkrj0qj0x0M2ttwFmRWrbvTXCeN+Jh6TpJX2XC3iK253IaCVuqvXXd7
KwdivPpd7FspiCrU1BwVwQF/WSVJ5eNUNBssnfP9GgfS1vGXebdT0YNfz4Xd
+tggwOBZ9NNWBsm0TkTa9LHglWb6tcReGcTXgm1TD2fCulOvzVlusshYRP1B
xOQ8tOz9+slyUBatD3FwVtg6BzXJfurgJYf2vWOnV0jOwGzGQT3lCTn0qHJ4
q30ZAzhfPLNunpdH76+vKBE8MAH7NI12+0/JoyXh5vlP34xAsc0G53NeCqhb
62Thx6g+eP/RfYbDUUBeK80snq3ugLJ7LR59jh8g6H6htkbtBLac9TmBtaUE
TPKP/rnmMIWFVv7otjxSB5+Mxfljrs1gx99+4KxU7YRjSQ0BPG/nMdJ1D60x
oMOMoi3DYXgBuzRpQem1HgDVOvX7OWNMLIS8dkolbgRmqoTlUjJY2KD9DydV
i3HI6M2Z/biSjflL+agdsZmEz33DzHtGbGxa6ufuhy5TcDTya8SJRWws2rHM
utJ+Bo6tl+9ansLCLt8t91J1nIOnEW+WpHUysT28dh2P3RfgQ81VY8qfBYxU
GpiijB+lCUMHu+K789jakX0xj8XEkKZHF33F/nHwE3F8emaJONph0RLP0GbA
aFcAu5AqjaZ8mZ/2zzDBJTwun31fGmWPjguHiLFh+T6Zv0wFCgpWGTw83c0G
qaUMM1oCBSVoKf5rOs+B0AK+HT8XU5GD1oYay1gORD+95/orgYrKL/2ynt/N
gaaI4PH4ZTLo3/0HzFl3NhyJbv61IVkGvZU8qHvXkAVOpe/oFaqy6MveyZPj
JQugK3jgY9ZXBfQn89jexJFuKNUN/jrk+BR+BRgb+S2awDqH2076TuVDR9zq
uKxSBqY6Mjf99ngN2PdJBvAKzGD/hutuvl7SAWnBX/VazeexNYfPRQcb9oAs
z8/c6y8WMJnuPsNjJv2wwY3/ZmYGHj9E1x16cGcYCk6FPg0PY2HrNNby9dWP
wZfJVY/iJNnYpXMbPgbVTwCPdlLJ6t1sjJZ1enPZIAPuCLioJq5nY37yKzuu
d09DjPOrrznFLGxpmWenSfssmJkd1mtewsK+3x79ljcxDyOZPFMrljMxzb92
Tl8YTDgbIb+jsn8eM01pfL23RBSRBJZvnr46BhpFFTyHmsTQsmZWtfPtSTjy
8QdHbkIK5fb/6fj7kglGQ1V29y5JI32nr6VllSxwEX+qPTgtjegK8TpBGWyo
9LgMY/4UhA64pS1YckAiYbo2aoGCpArdX37D9+fWn8Yf035UVHvp0fl6Bw6g
EwVtgiQZ9Koi5MPXD2zQyHfznA2QQcEPnQZXxbFA6OqHTVuEZZGeyq8lm9SZ
EPAJuxv1QAHVp2VZfSigQ3OaT90JvV5oXNCNTdrIxJp4sfaLboOw5sU3K9l1
LCyNtSbua8ooOK4k6dU3srB3MYcqXavH4Y+bt9YeLTYWnJWbuq5nEv4OWno+
NGBjaq5KR870T4Hmp2JLf1429vqzR4Ni2wyob2dk7fVnYfXma/hFRuag/Shj
pDiFiUVqnFRxzZJGHQ5GLW+M2NAQevuWxHYKaiQ1fJOT5sChkvMnor5TULss
r0F1IAd4h6Vejm+jordzrzLlwzmQeGbfkqRcPH7xbI3tX8IBhnV77Z9WBfR4
8K9/uUQXlNyt2TPlGAke0N/g/Hkc20V3L8iq+wnld6qYbT4MjMmSDzhm/RtE
HrJjiounsecRjmVuse2gsTHh1neleSxnZ5++WWE3LHpcNKcRsICdPpHRGvWz
D3Z/s4+9HMPEKiPSAsz4hyHo+aESLW8WVhJrU230cAz+ZDUk/eNjYxNxohNx
9ybgVLbtY2d8fVYLbX53+i0Dcm7Tgkn4+p2/UJV87OU07Py2gjKEr+9oX+Gi
loRZcH2lmZO6hYVdqti6riFjHibSKrUz9JlYSZ+5SfBHJsRyvJVeyS1gttef
ZC9/KYpeeBhp/pIeA6FVPBkl2WLI72qkMk1zEsLkTgRAhxRCSU2+dleZkPl4
8N0fB2l08sHPuhfvWRB5vtuus0camZSo3+yKY4O6op6OkBsFecoqSrkbc6Ba
0P3p7CAFFSkyP3tF4+s/6+cg5kJFJkcjtnZ54eud122xc4yK/EJuHl9ewYb4
ls+FrRdkkBK1UqyCxoKmIx+PuczKIK9mkWVfbJiwKnRmnhWigGI33iBPv+kF
11hG8JpcOmQcenp8XpKJqVy5ffl99wAUjYhQrouzMLnAV0XuSqMgJ3kIsypi
Yabztx7/ujcO1Raup8TV2BipK34Ank1CnGpWqD7+ft/LHa1gpU3B5v4jidcl
2FiipNKjqcQZ0M01EfwexcJeuV3Wi389B3fmQz3MCpgYs83/YtYLaZQy9nO9
uCobFvorP/GrUpC3j3hU9gIb0j03Wqa+pSDK0D0rucscKDwW5nFclYrGFi/X
fXCPAwpBI/lZ76gIbkjtVtzEgYcbFQz2/FJAqWamkb2cLpi4lbryn/QIZKZ8
lMp8ysLCiic235YZh/vbtulpL2ZjczsszrsumoRn510zQvH8YX06+ofm+ikI
LQ/7LY3nl91vjwszBClo28Hvhh3lbLhQnG3UdJeCugI7x1ec5uD58qrQOlEq
Ysh5HLG7zwGxH9qyHXeoKCs+Ji3sKB4/1JfySEhOwI+Riyb2eH0mENrpQF3H
gAvGcmKxeP1Wssjsb9naaZCJ7Vc/PMXCJpa+Pe1bTkGSawYvMkM5AIEP/9ze
S0XCSrS/v29yYJVxqmdYFRVRzPy7rPk4cPBm6lm3EQXUZCoabbWkE4o0PRwF
nK6DpUWoDiNkHPM+lXPxcAENyvjaHPnMGVg3/6tdGq3VsFarT08ldRoj/9N0
rTrQDjXp6z/sEZjHyJkvF2262Q2ROkVtG9wWsLA4hXXqV/ugojjj9mgQno+r
++XX5Q2B9o1LEbFOLExhz+yWaZ8x0E+sexPHYmEfP8xRUi5MgNWY/tYwxMaO
pS91/niXAZU5isn6W9iY0+PV/LtvTUO/pJjsk38s7Jjvhc0rr8zCgaNvtj0x
ZGGHR1v+2cXOw5pAk6Clh5iYzHmjb04RTLi16finVLUFrNc1QE/svijqayn2
eJg1CoyaeFHySzHkuEW87C3fJKTsfUOrbZJC5j2bE82d8HzsNXeYYyuNBpRq
Ag0TWaC87NaUTZs0Sn38NGTZHTac8HiiLXOWgl6EI6dXwIFPP9RuqHVTUPpJ
HumsKA5gN8t1H56kIj5H1uB9/PyZTzMijvdR0Y4tWt+EW9hQ3Xti1NxRBvlu
GNn+pY4FtPyP58hjMujyTvrP2ItMmPakftL2V0BucR77Xij1QbZwhrXodTrs
rRhTr2QvYOafRwpNkgZg6fpnpw04TKwir9fGtGUErHKt8tf8YGEJ75R5r3iO
Q7yZmhnfWjaWOxcquu/6JDy9sXlBBj+vBY5Nt03CpsA5feUMRYaNxW33nu+4
PgMdtzn6UfEsTIqlfKwzdA4C/8a8SqplYhlZYYp/nkgjXdP1IWeXsCEi3mNP
4AoK8gv9QgscY0N7cfTBzBQKWptw0k3FmwMvJYyPhitTEcZ6dEQ9hgP1UigO
vaAiniTLq5Z6HHBS1J67lqeA/LbeM4jy6Ya00r6cnMphqM6xvWh8n4X98QtP
0Jkag6b8vRtEZNnYl8P6kT4zE5ASXnieF59/hNiVy1dFp6Cb76D6VRU21nSC
mXiBI40eY9FHrWhsSFRUMOwOoaC9t50Uvp/ggBp928gJPir6GkJ6aIC/b2X7
bvafC6ai+e+ntX3tOGDb/tnxx+g4hG159tIXP28FidW3lAQZsP4Wo52Gn8f5
vM3x8sLTICfLKhBjsjBlL3H7kAIK+nTcOTPuBgeWbz1M+6FPRd8t67Q0wjjQ
UT9nJFtMRb7TG4NGJDmg7FGgmNKjgO6dc/W0ud8J2kFLf4dnTMBweurvCUM8
39iajsuVM+AZXeWV9wY2Nnow42vBJAVN3l2a/Atfv13O66IDPano53iZc7Ib
B5hGw9qK6eOwXapcqgr/vEH521Lt/EnQWbT9nfwuNha0tPpYQiYFWTTRTqVc
5UD384o7qzfh8WX1W/vISA7oqpw1O7l9EmruR0d8wdfTxY+mPEXB65Mlv0uk
8PXJvRwUb6sxAWqhiMzZzsb2eDB2C+1jAP2GlqC0HhvLKzFxdK2joBrjNQbz
d/D1+/WHYXmQir5tmc/iCeZAwOO777fMKCDFovc1hUkd8NP3fcpapwsQL3Is
4/i5cezucrvKlXo0oJRqMBp1GFjT7ZE1jxKqwU97pd/muGlM+5bsDtKGdggm
paZMzc1hqSM3bqQ4dEP0J5v0+NMLWOKWffsXrPqgsCbpTqQfXk+O3+56kDQE
L4wWh6WeYmG0Z7sHzJzGwCtT4q3VPH6ev7knp9lOwAWxX9v8gI2N81OKG/wZ
YKG6eWXRVjbmkF69+ZvPNATsXYi17mJhYmiXobHLLOTvmboxv5eFGZA0vqWE
zEOVNpWta8XEcjTzvKzxvNyT+CcnYusC9rbLgxN4VxSJk8V7VlwbBZfXvZ+f
PRFDV52kqieGJkCzq6b9SZ0Uujl1ZCodz6dGdgGp0tbS6HKSy0v2fRac8zlG
W9IsjdR37uhdHsIGxpLKTYtPUlDruY19z7dz4LmCqK9ROwUNt32O/YDvn5L5
VMoJGyraVnrxm64/fh4kr6o5dlPR2kBdpfIONgy6bSALnZZBo6/uJsX8ZYH2
vObF34MyKLzZLMg5kAm2Ts/Eq30UkIyqeiR2tA+sd0UXX7Wjw4jwytEV0wvY
KcsVQwrXBmDqQkqz4CwTS+26tS7n6wgMae7aceELC9sl6J5Vc2oc3pQfWdu1
mo0t5SclHDj/v7p5j4ktfp5svpf3uvtNQe+XryyaHBu7f3DZ+mPuM7B69rbw
STyfFhTMnBXwnQO/2sc7NVqYWMQzafehR9JINZrGWKCyoXHCgApLKchQYLC4
aIANvp75+3OSKMioSFngrgeer51Xm7xSoiIdhbwjVfj7od3kxCvwjIoO9LJd
dPU58Fs67/DiXAW0ldKfqZrRDSEDoTfXvhuG57u/r2dEsrCguj/7o3rGIFtZ
/5AVhY3J239ZdpU+AdXLe+iJeD2icvJCY/ICA0Z0OucerGNjK7IqnNUXpNHk
jfbjs1/ZsKV4j/5AAAWNud9c5nicA0v1FToucSgo1nuphRj+/qylfrDYeJ2K
ToT4lung+V5Al3+JbPs49Hfp3+jXZmOrXhsrrJqeBEG32olsfTYWI686u2Nu
ClRFdqebcVhYztKdtmE0PJ98k2TR8PdJOnpTRuMOKjq/tmpnOv6+oSfK6X/y
qKhVhDPKluXAHYdDvtChgNZVC95TqemEmPDYkzHPJ8BR6AhLB48vdzPQ/h3f
GfAu7Oig4UY21v723tu/oxRESst7qIavX7LmIabReSqKJ+vz17tzICVJt8/r
2TgEm//dM6POxp41rrTS/TQJ4heuOX7G48viEtLR5x8p6LhFaKTzFQ7Usd5c
Aw0qejr/uyEJz3/xm1rbHFQn4ZDpmfP4/QCzqk+UlZSkIgl93ju78fVxqK0y
y1aagCVtu4u+6LKxV/7nGsR1GVD2YJO5zQ78815XznpWU9CH2q8aoXg8NV/z
tfeCGRVRPcsOz4ZwoC9qsUjNhAKqGS0zVf7bAQdTgoISAyYgN33iXQi+nj9P
mUdT+vD4tAPWPcPrPbsR6Su7oybhru87yWx8f7MznM54raGihc867y/g9fGx
vWVsD6FJSF4qY3sAn6/eHesFA0EqCi59bG6Lz/dszPEZBQU8/g1378jC40dY
SevJayX4/dzhHhy9xQHN1osVybupSMG21CsCr7/qL71EoQUTIPdjjdxDfL3Y
03VFr2coSNbrYeYB/D7YSdu8bUPdJJxhKlqfwvdn0ng0TnQLXp8OmWadjOBA
y5KR79amk4BUI6gf8flcXta5oUWOinZdsRui4T8v/5J96PGCArpoec9p9+kO
+Cy0bpmbkx2sj3Yf97IdxzZyTk3JjWEQeLHSapMGA6vZR4mr9K8GQ8tXctpR
05hpy60XCkrtoJsYXls4OYfN37n4re1INzT+Ec8qs13AUm+cOdW5tw+YrrTa
Y5fw+xKPVWlF5BCoqsV6vbFjYbHmQ/mX7cfg8BRVImsWj7fo7Tm1IxPw1zVz
3QBen+7UFJvu92aAdhHLJlCHjZ3RW2M+fWEa7qV9OKjdw8LoyRomzSdnYfpB
2cAKM/y8CzWuLfafh/yR85WGtkxMnEKqrvNmwrI/+8UX9BYwiacD7XqhoqjE
xtB376lRWCMnEeH+SAwVTIq8vt0xAdMf6GNBNVLozernMbbHmKBdb1iz+Lg0
ipLqtmi8x4KolT9fzDdII7P4tMD4ADYgD/rGpXYUFP9L6X3cNg4sNvLzsPhL
Qf2O+SdW4vG1Il3YCqzx+6quBSUAz581ivoLbp1UJBAkmbe8hw2zH+Miuu1l
ELWjosiviwXnZcfnPvfLoBO9QtfNbjGBctrp25OLCsjkRYLZDu8+eN8RyMre
TwdXlZI9ReMLmGuKLofjOgAPm/+Fn2YwMTnGUcnx1BF4cVBhqVg2Xh9nykWy
rcYhdDz8YPkqNlYetv1M7dlJcL+q3OiHn4fX9CK5EM8pSB1HstIKbCy21dsw
xmkG1sXdlsl/xsIS13a6xl2Yg4CcefLIXybmL1//aOqhNLLw3FiqL8UGZuKb
2aVLKOjSy07djl42FBS3mP9IpCDGYymnzfj7L/Uw1jBTkYrmlJt45fDz1rX9
6ue+RCrqN3PkeWrIgZtit3n7vikgS18R2/7qbpiYP+ZqlzAMore0zAzDWdiR
wMB139vGYDSl/OOCFBsr6pns5bRNgMh2V5Gz+PvnfcdZ4PMkA8Su9PUkqLIx
o5Nb9ovNSaPvrUt/YdlsCFI8iYavUZCKeuLGTPw+9OD8rT/BLApiu6Ua9+Lz
abqULyRzlYo69qXEiZ7lwB/6GwZqGgfRDeuUl+DxtW5DcPvLYfz9ia/pWYff
39v1V6kcHJ8CqW2dpr0k/D7ldcQmPJeC1O75/PgVxIEw7Nnb7u1URB61F3G6
y4FR0laHHzQq8tiWOTergMfbk4vWiP9TQDPnlqdfG+sEA2r1Orl4/P2eGmTV
4v9+U5vutQOZDHA9tyN81Sb8/vKH9HJwmIJigmTta/H4cijWIX2dKxW9eOR8
296TA75mHT+fPhoHt0D1R2Q8vh6wsVP+kTYJB66ar+fg8cJh6aIjL95TkDPf
D7aBHwdM1y/xNVXD48OTh0LL8Hhm8kX+Zf+KSRhn6RYk4OehhldCUlGcitSo
VhWWeLzSDbik0ik3AQmnuqok8Ph6hPdVYtRGBnDYPrYLeHx9WRJz5mIlBS3P
CwopvM2BIou1Hf77qCj/88mcPryeTbjT8fnpGH5+0eH5PGYHkFRzTVb4ToBR
/9OVInh81Y36cWcZnYIkFs/t08DnI+FtZlhyaxIcUiZ0+vD91ehotAlYhb8v
p1PnfuPPL1TFX8zgTMA2+WeL1PD5Zn4pY+znpyITvsgiC3y+MovuY48lGfCi
3fXnDrzeblg6ZR9YREGNLqLKV/D7a6pwT9FHQyqi0S4MncTnG8LsEBL9PgFv
TPhfGuPrdWnVLtrnKQqSn3Jzk/7f/4caefB8+jUJl41kPmN4fHW9aButoE1F
LrYvqUw8voY9W3fjr+Ek5Oy5Sv6Mz2fC9OC6Phkqyt6hgIbwny9PKiQ5zykg
44hD8iJBHXD+ekFtxaVJMLOxOKKHf15JL/tA/HJ8P82ulgbi+dPpj//R+ZEJ
eEgvsKnFnz+FmtbrzENFh6j2Bar483ULHn8k9WYC4saPPIrD5+N0XTnj9zgF
WfcctrqO//zEwb57n3MmYavuuR0u+PMMvE2S7d40CS83t6Rn4t/X+WqDIq80
FS1pmQvTwP+9j04Nn/Li8OfTu3v9Gv59qfkRW0alJuFaHr/ehf/d72yGeLYI
U1Gv9GfVU/jnb5aerXgyR0H7gO51G38+tQefGE2HJ2GP3JdvyfjnSROeWyoV
qIgjsbU0Av/7U2+2vqhgKSBTV4Eqn10dQPAs0v/3S4p2qiBOpkW1D0j/94vg
WWo5Hne/beGnETzrhJLahrFVC1yepev7aXmsxxiXZ7Xdmj8979rC5VmkcMaV
xqOXgOBZSdEWzQX2jUDwrOen3Mpvi3QBwbNeXs2y3H6JDgTP+hvvWZ0ZQQeC
ZzFLrtatTu4CgmepvSo3NNnaBgTPupPjMzsWWwEEzwqw2LLnwn0/Ls8y7TV0
OHTvN5dnMTUzvwuLdXB5VtWSuZJlR/u4PItiOf/s3+9RLs9KUUqY2vFrgsuz
dq1XnxcrZXB5Vkz94px4dQaXZ5Upk0z8qKNcntVwpsgQrW3h8qxQk3XLxGj/
8azX2ev7pR4OcHnWxPR5Sx08zhE8a2igxWJv7AKXZ7WO9BWHbuRweZb+sN3x
lM0kRPCsbUPGJ5xyOVyeJdQa9oFcy+TyLM9NWeNVIzNcnhU64HvJgj3G5Vnb
loVcWbbQwuVZ375i5rclKzGCZ+kKFllb4IUJwbNCeWzmVrUvYATPsnHcdcG4
ho9G8KzSiO6Df7xFaATPIs4bwbOIMcGziDHBs4gxwbOIMcGziDHBs4gxwbOI
McGziDHBs4jx8s35ghG2TO77QPCsc1GbJT2LRWgEz0rYs97nigAPTWBGcYS8
uRU+fd/hKec2xeVbbe/2LJZ6T+fyLd6u62klNqVcvqVhr//CuKAUCL7lsXfY
xe7TPyD41rLTbQYSqj1A8K2VBro8wTN0IPhWe5+h8D7nHiD41jr6XMKREx1A
8C2O+Ii6/5EGiM/zeEat40FNtqNpD9YOYTK3RxvnmnmRHjvw/ROfcYzXd/NX
lw4+pNIjv2a8fRKTq/RZMjJGRr3o3CLOLAPTq1rkP8TgRzcPXhN+fmkCq58N
vnVxXgDd7tx2JY/Ui3WaZO+4zSOEAppzN542xTDSnj0T8iwhpGBgvXrTYDvs
etug8pUkggJMmrfnikwAU0ddqIdfFF2uPzCRIzgHBF9bEN6f9e0ri8vXKkiB
QueESajtd0daqpIEcg3axBhfRUKZP1fZ+ayURI9pLa4XH7CBM/TQrk9GCuks
1qO7JM/De/OKiEPRUsh7puefwLf/+JzSoa6+poQ+Ll9TGLRfqy8vSCP4GrHf
BF8jxgRPI8aRKz+En9MU4o4JnvaxwW8hUEaCRvC0nGDFood8fLRVhhuPHjH4
A77yNJ0OtVkuX9vjnrjfIXGQy9eOC4oeC66t5fK1WVHbJUeufAOCr8VUqNw7
WNICBF8raNQtENzcDQRf4yu8oGdQRweCr4VKjH01kqYDwdem3xx7/DSyEwi+
trxfyeDGv2a4ldvoeyyKB62s+m73YtcANpBm0vMznhfdHtSm+GSPYdl2W7cP
JPChqQNHgn1OT2LHvx3ue/uOjGJEj7rysBmYQ8fgNY1sfqS9MyCwwX0S+/ub
yT6fLYA4L6sXsrcPYrV7Vg3y5wmiCGU3/i1pv7GAffcGanOF0F+Jq0sPZjTC
80tFsWo/hFGPUGfPT/9RMFhLedNSJIJOGZetfxU+A1y+l67NWfqdyeV7UebH
FGIy8Prr0w6DRe3i6KMGfe6IFgmpO6u4Pv0ngTo7T3TF7+CA/UsVXv8BSeTk
eUtvW9kCvPycXW/sJYX+/EoO3uswzeWDIbxS3fsDhrl8r/pQ07C5Jz+N4HvE
fhN8jxgTPI8Yr13mnTaYKs0d24hFNwb5lsOrQFnm7QZBWs/7wBr2oQaIaz8D
ke5srNYlzPeJThcMVtqNz4l1YgQPdCks7ubr+8zlgS8cb5s2nKoBggdaT+X1
VkZ2AMEDw0wymVoDPUDwwLXskZTkDjoQPFBxcMO9ZY+6geCBd+YdnWNE22Gn
U2zZxkV8aE3z434h1Qlsf5TW1sHVZBR9Vq/1iC0Dq2uPN9+gzY8ojfppVZkM
TPqH8eXXWgLInNdZZ5HSOBawizNnvV0Yvd1x/8S9ph6gd9Bzdu/C89coJ+K0
NAOy9+45O7JLFLV86G0xtZsHsg7tyvABMVQuPzwVFsqGYnPSDh9bcaRy9sj0
lAoJGYzfkNaxkUAC4e/4+vD3X3ex8qH9jpJoSUqjqGMJCyoFFHOjtaWQ0/Dw
8Z3Wc5Dd02Vsky6F9l56suny8ASXR04nb7m5P0+IduGnAb8G/LdfBJ8kxv//
eohEIvikwZMtgrs7JGkEn9xZOvxjTJZM03L+JsrZ0wwG/TyfjJ7NcXml7Bb3
ro7NI1xeWX1XU9vkXiOXV2q+6fiZduodELySdL/byDClGQheufZul9v1l11A
8MqP7nb3PrylA8ErfQ7naV60pAPBK/uxYJ/rS7uA4JWvDT2Emfda4Nr3sG6/
8zwouqZGuc+8HzusOzu4+govCuJVXrLk4BgWZaHDTPPjQ7K+0Tx+iyex+Y35
5mJ3yeiTft78mQEG5j9wOKDqAT9q/32qrq1hEju182vOuVgB9OBJ7N0i7WGs
3LhFf9dzQbR2w974cO8GDFVk0dOfCqGaq+MVshE18Nt65z6Hx8LomsC39a2U
Yeh5GsI88koErfG9N/U5fxoIXtrXHvzJSJ3J5aVy/sXM8Uv4/eX5uYjfNHGU
vOqeu9kWEhr4nuqZ8UMCZdcpyuXh97uou8nJv8skkWjd2Zvjh5ig7Lr+ct5p
KbQmlZLXpzHD5a0lierVfcWjXF4ae/iFAvaMTCN46QfT/XeTDERpBC8l9p/g
o8Q4l7xal3a0DMjn5DM1dgnTsnOfWr8+XA+drlL2Y4tItAeiS7/bp3fC+5z8
uwMW3RjBU5vkf6qGhedxeSpao/ci7WwVEDx1iPewy+7v7UDwVAtvpPApqgcI
nqo7rPo4fpIOBE/1vrx4l6xADxA8Vay+OPH653ZIm9X/fX+OF93lf53yu2Yc
WxuiPfuaj4zG7zv8iJJnYBePCmdFUPjRgQ/tuZR/DGxN0Ue/fTICiNE4T2HV
jWOoaOX0NkVh/H53wXexYxfIFtt6XFcWQahv30IXZRKO/8zJdl4tiliNR6vq
P8+BHPXmrQINMZS/y89+ZDUbkt5qjQzriSO7vQ47qxaTUFRHhs3YDglkatV1
4MQiEppxSz52erckajr6b/iQNhvoc80RP1ZJoUeVMZVNfPOwKf7YYOMzKZRw
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
EMwdPXbXN50KZhLVgowzhCCX15CH5o88ICTl+P4QFIZieyfVVpYVYp/J8N8B
nrKIVuwn0Zi//QIaPsR+kgij1mh7LSoRcu1vd2pOL7hVxE3b5lFK5F/fFCNe
MwjkxQ9ZjZ0vI/RjxGPSpGfBn697uss6KgFFN/JYnOo8eDbgrUfhqwbhNTd9
RrUWQYRJStZSbRXYanc1rPH0MhgpVwg37S4HaD53wOOOUrTjBIHmc8N+vLQD
W5kEms8JDC1Mhp5iEFJ64u5/KXyQXWT199BVDNC4J4nvsA8fTLOkOsxuYYKD
P0xXTnLyw2+pt7K7cxnAvjBFtzGQH45Yy9ybTB/HvhLDrYfkkn1zADVaWlzw
uSD0lVTWXUXWF1qfY7kpokLQXb12pOMSFfCWTKs3E3TwS+fKttsKRYQuMbc5
JK0fKNef4lEn119//8lD2lPDIDDskF6QVAnBplJT7qI6B14OZCxmHa8Copo+
ERZKC+BkzGPVHfuqgdb3pKWcI0tgV+rtq41/yPPKf/NF/cITYOQTg0DzRROO
24bla5iEccLXB0d1yfre+tjkyRIGkHI/2CSVzwcfa1VdlJNjggTZA+fWHeWH
D5Q1hoTGJkCamdTT6WOC8E2r/Z1M5xzAf2S+yrNeEB5JGahNas/BfpMPa8fL
jsW1Yb+JErz72uDzDPabrNxndrrl8xD2myybbB0yTK7HfpPxb/MqPO6J2G8S
qvjZ45ZyGs6LMzi2hfdBUjHOi+tqzTPP6ywjkN/kHrtDlspAEYH8JvzXDp/Z
dZ4gkM+ka3oF08okEftM0j8LbCmP/J/P5MO6oMod4eXAeKylwzx0jtxZCjKl
Yqqw34Tz2+gFFaVq7DcZf9+hd1CShv0m0WcqNV7XF2C/SfwxMeWE9Yl43mpW
8Ig58TAF58tt3zcS2lVbhfPkWqYEbJXNB3GeXLsTW/KM/TjOk1tolLDyGGLg
PDlX+xeNx5sZ2G8iJPNciM11HPtIWKYf3z2U0ofz326oZ56NejeK89/SNxqW
hF2ZwPNUmwhVzowZBp6nuhJfI3l4mXieepZ27Wqq1wSep147lKx9eWoEz1OH
6nmOnP5Hx/4SW41/T8+vLgNonrrOqzAljFxvsnPjr7OPk/vXvqj45JVU8OXE
cG31HSGo3uZate5BLrhnfkWvlikEf6vZzF+pz8f+E99P1bZHXxVj/4m1ANew
qXUF9p9Y84TSadurse/kefHMcwp/M/adVIBmaHiegX0n2qsMLsfwdmPfyf10
K9+P+sXYd2KmYiJWuuEVgXwnJiMh3pK5eTi/jgggWn9rlOH8urNp2q2U1FIC
+U9O56qpp5XmEchvUrYUMKerl4X9Jl37tO2XnYsB76KUSbfvLNj9S/bXjBcN
XO9MU+APngd7u7WaO9Sqsf9ke11zyC73//lPKlvVzw+qlWH/CYdcuE7gi2zs
PzE7KMcTMWSD59GdYwWVLgajBJpHJ0S8y948NUGgeXSdkJQcjzoT593tZ/vI
umNkgkB5dMYZO6dVTYdwHl24oYJdhcY4qI9XzVIV44PfY+9WXiCvL5pfd+t4
P+Mj96snrxwOP5TkhxbcA6KHHjIA8p8Y0/ck9qmMY//Jlo61txqbB/C8ew1r
603TnP/5T7pOWLZ4ueUACR/1T5kxZL39KCbDLioHeJz7WaOmJgTbqd7nOj9T
gWseg8M9SQhKx3CvuuKTB5y4CziLNYWhJMtx1f4nhdifcnl/gyunUSv2oTjG
sK3fPBOKfSiqtZ9ztx/JIVrbf6S98+wFmXIuhSLqpcRI5KPp9CeDYMt1jrlu
nzIiaVdxAYUyCwLDifLwW5Wg46r+ip385H5VNPhvljyP95hYT1cLL4JHO12a
hEaqwF6nsh/ndyyDR/+6tHusKgCax19NjlX4vn+CQPP45tpojkPSTALN449u
UNQJvM0g9rjaEZ5zvPDX2717VEYmwFNB6h9bNz640UQz/54EEzSeW3hnv8wH
y8S3n3hZzwDvxER0erz44VfHEMqO/nHsR9nw5Zvs1qAcMJNSdNjHTxAmP2FT
2R5IXl/eOPE3fELwhsxOSbnjVOAomlO/+wEdCBzszcsILiSC1VMX7t7vB/cK
I+Dz3DIiocA0tClhGDxqofoaeZQQtsSDwZy1c0D3XQbs2FoFpk0UTgzzLIC/
Ci8j1uhUA69tP+wjZZfAjxVtvOv7aADxBDFPNr829mYQiCfYabrh9LUNTMKu
ZzKjU5sPvnrk8sXjN7k/nzbyOJRJ1kPdzeUUJSY40Ng38VyHH1afWLm5ZS0D
CD7ZXsJ/iHw+FEcvpZP71eFTH+YnywWhIp/UnEh1DvapFBmuq6XbtIGbxfI2
1uy9QHfV51UWXiXEHoljwZMrBsFxztWuvdQyIiImxPFozRw416T5+0JzFXhw
+UzT2+oF0OSWXs/HXw0Q33Ci28GqYjWTQHzDdpHS1vEYBrGY28aRYkfutz5P
/pxZywQLmftKrP7yQR4e3uSiKQbO98vIDCw0XJ8PLCv539g4C8JDOZ1TrZ45
QD3dSHR5sht4HAloKN9bQEiJa/zYt9gHDuYqi90IKCNYwGYlfvlhcKgnQclB
vpTY214pYVg2C1b7c51b00YDCW8cM5cq5oGm5T3uWVANxHa+PulIXwSLNm4z
O7WqAOItXKb67j/bzyAQb+FXeOLCqCKT+KQXor1SiQ8e2GVoYxHEALoc9hXB
P8nz9OJeVivy/S6ZNIRHNAWh1wX2mXv3ckDSjaFjTRmCMF757lG/9BygN6m8
uo6lD1Sa0X88zysl3imnXni07v99zT0XO5XKCJnNbOEyJ+fBqxf20o2bqsHR
Yy5CXGcXgUjVB2359CqAeA8RnRztLBUmIXnlm430E/L+6wY4CygyQeJ8yi1n
Xn640/PwXvs4BthODVFMWScIj04e6Mr3ygGB79z+fXwlCNs/F4XFheeAhSN7
DGJn+wGUvrOGnawftIW6uxuOLgBJWcmH67SrAeJJzE48/DKQySAQT+Kf0+QT
tcwgdrmd3vPnGB983RGa/r6FAa5Ham5fKuODN98WebdIMsFFWX7j1tOC0Mrb
7pipSw72txgfVpeZY7Rhf0uFhYWqj+As9rdcuzd78AwYxv4WqZOPHyxea8D+
lqHxuOPXdZKwv2XDiGSfMFcqzi8sydx90vx+Mc4vTIT+Ppb0MgL5W3x4E/ps
xIsJ5G9ZLMwU/s6aTSBfS4Nq3AAtJAH7WmTFZiQPn/qfr2XRT8NIwqQc7GfZ
lv7Faw4I/hKWWnpbhf0tzimfaIfI/Rf5W/yI103ju2nY3xJr6v7yu0oh9rdM
8wiqAJVfmJ95MCtrvEE2GecdSlsbv75gUYXzDeMi9Pd+3jSI8w1rm9lWpRiN
43zDY86igdGdDJxvOBxv8vN2DwP7W7bCcCuuiHHsW9H29d19waUP5xG++5a8
SspuFOcRntiuzHvGaALzMRal8zZ7GAzMx0TIzW/TF2JiPuacEXUpJmwC8zFD
CRPJtaqjmI+ZuB9SdPl4D/azzOl/HffMLgeIj6k6vxjw4D75vs+p3KkaFoR2
Saq3eClUYNVUwjfgIARlEuw2PL6RC6KNny6FjgnBk6/YO6Iz87HfRX/73ehV
LsXY76KX6K2crV2B/S412TMct4Wrsc9lLJjB9X20CftcXDtu9B4i11fE3/QG
5jxdE9CNfS7dXdeLttwowT6XkowPq9/5hhLI5/LmUqqg3/k8nKc4U7KpbVas
DOcpdp5QjCloLCWQ3+Uh6xblTcL5BPK36G2I9R8PzsT+lgWmd4KAajHIy5u+
wuE8C6JdNWx8btCA2QQ3xxmPefCXxcTqlnI19rucP89hDJ7+z+8SulO3jd+9
DPtd/t08NPSQkoP9LrZrK3/OnT8LEF/0B9w7Eck7SiC+SHY9RSK8a4JAfJF8
/XzcdrI+QnyRw/OWTs7lCQLlIyo8NQH+kkM4H/Ebx/FNLFLj4JKeafv8Oj54
d7+IltMJBkA80pS855X1qkzQwNgvADbyQ6qXS4ALub4iv0t4wNOXq4+MY79L
0PnrM8JSg5hf0nmx9Xp0cCv2u3AFhMZ3uueA3dycv50iBeGOnnEL5S85YPK5
UhuLshCMClig2oZTATSo1gmNF4KzAxvT2m/lgW+s4+l+asJQ2ORlV9PNQuyH
4bQueHVPuRX7XkZoEWrSOq+x7yV06YqlXnk28XB94Ba+y73gG9e3TsnVpQSL
bspGf9tB0LyjjCMyvIywpryr3TIxA67pXbHs2F0JKpzfdrpS5oGYSXuD9EwV
8N/QE5e/YhFkNN2NfTVVBQ7PLWl+2LwM2JT5rmyMrACIrzJtCh4alp8gEF/F
25Lsd2YTk0B81X757r9ajxhEsXBYx9EpXmiqEHPZrZU837Ac4Xa/xwdXn6ef
TBFjAsnk8mtK83yQ4nzhsl4HA2gUHt435MEPq2yr/eDCOPa/xH2hTrx8mgME
tF+fB96CsDgmWvS5Xw4I1VWWv8YjBFdrvlgbdZAKPlG/Rtqa0UEze12SCCwk
1O3DrYfO9gMftQtQ4U8ZkWcZmBb5dBgkVdiXjv0oISQen5zuXZoFX7+3KXCv
rwJ91x5sVVmaB0fuXrkqRdZHChOycq+El0CJ2wfun/M0gPiwxBI//ZA7DALx
YfGlboM5Ekxi3lWsLXonH3S7u5D5+CcDJO1vrjFN5YNbjZ0DercxQZDKn4wT
gB8eDlnBDBFnAGpk2lUJHUF4p0bsAJOsjy63OPLGFpPneanS7xJlOdgXc0eI
I+v64TYgxL6yvrmnB6g+u+dyx6iEOJHlkUKlD4AJ48ne3eVlhG9Gr8Gz3DkQ
v9D9/nxlFZDaUvMsOGcBHH/d6ti2vhogXu2biGWmJTuTQLzailCBUMs/DKIx
ztKsyIYPxiaqWqqtYgJdYYEXm4fI9TWbN4VYZOC8yQKLSc59zQXA/VRvvPRt
QfjRKH2O8jAHXLmsNaxc0w1UDLd/bKLnE4WmQiJJbX3A/pY3y5RzGSHYdtqo
k2MYuK+/e7zgeCnB+Pplm1P6LJj5M23fW0gDH37mhesQ8yCvR8WghNz/qfPC
q65UL4KBoV9v2PWrAOLnPKX+fDdRYRCInxuziKmJU2YSyj1p52vk+KD88dXD
I+T5RpLxT/Lzdz6YoDv1rImsj+6uaWk7rSYI9w7e33mIXN8rmRmXn/8RhMfM
QNzNlBzwd9vau4e6esGRtiS1U59LicTyYa+T/wZBStBNzmJd8vPvOHXLZt88
sNz2/I+aSDVg8P4rnzuyCHpe2I9eL6oCiN9z+DK+13Abk1g4oZS1w58Pqu1c
p/BLnqw3jXz3anDzQ/6fPIzOVAboaNlQkisgCJWW9Hx/+OSAyM0nV50NE4Q7
fRsFdF7kgI9eG1IlmvtB2Dm+j7dbygjFLepZYtoL4EU34LAn60fEB7653ZuS
FU+eR/7jAwcXGp4EcDKJwnVu5zz1+GDQiVOu8jVkvRiS5c1bzAf31nqdUZFh
Ap59ryYGDQWhm2gSZYZ8/hBPyGsp7aFd1Qac5nop5u8HgH5wUbtyaxlhF1NC
cXq/AITb1162la0GiDc8O+eRmsFkEE8fO7KOXuKDgbUC+3uXyPNBQbLChy4+
aGelwXGJfJ6SLfybX1wXhP2aiqDTNQfwVdaMhb/rA95ddV3vjpURDyqtj5e/
nwePMu6bZ2pWA8Qvem6q4IRqTKKxmK248CMfZJdTk4oj72fVvmERx61kfVs3
efco+fMaV56sGo0fBCH1SQPHbpUR46dn5Scl5wErR5D2gZVkPfQf/9gQXH4k
TJZJJMntvmLmSb6vKxaf9kkzwc61iis6VgvCjRnHnDr8c0CbypRaeZAgfHdA
spCdXH+GZ5uCV7zuB7tUErkB+b5xHW68/W3jAgi9l6Rns78aIJ5yKHlVu60Q
k1i0KVPckcMHH3S+rchVYIKrt6MVV+gLQsP2fNPv5PWW89xgs0VuEPhf+1n/
I6WMQPxl5NCLoFf8TALxl0u1V5odTuWCI0fg44QHgnCiMKy7n6yn3XpOw0qx
fuBa6bBvw5syghog0Z3aPg9apg4FvNxXDRCvuWjCFeQlzyRsRAfuuSXwwcrO
0H9h5H4n1lLyafduQVhm7nC2hqyPNQQSMjovzoMzrS1bxjZXA8R39niN2/tu
ZxK6LuLr+J7zwevHY8VEyfXszNrzXbvXD5DrsN9oV3cZcYw9mDPk3ALYvrZP
d9uuahCcHt8+TOODo64/suQ3McEvHv+UCjNBOGYS+a2L/H2IF02YHw32FGzH
fpwf53+65BjMYj9ON//v/OmgYezHmQ3sndyf34D9OJfCd53nkkvGfhxrI9eV
oo5/cP6nwI38Ca4LxTj/0+HRtqfTZD2O/DiRHjxrHu8qJpAf5+30IYFRhWwC
+XCEwq61nlJNwD6cjZpJO8u3/s+H80mJKzxJsxykcTXIFT6YA4cLrw1ovazC
fpy+wJbx5+rV2I+zZynp6YojNOzHiUp1eALPF2I/jtuqYIVbab8w7+ql7L35
270knBdqV+850y5bhfNBBZZcrhsuDeB80PNpayfsDo7jfNBn73PP+7QwcD5o
dtDGd8cGGdiPE3rB7kTnt3Hss5Hj0PlWZtaH8zz7ezLc/5waxXmeS6VGT9fr
TWCeVf82n2Hr/+ei/cezslfEpGWvY2Ke9bbcU3mP9xOYZ23QtTmle3wU86zC
+ll3RR70YP9NN1v/5FxEBUA8ayuHvigruV7bCU3M/h4UhM17WZyMlnJA0dtd
8Qx7IXhBZzD4lFUu2H/8i8mdUSFIETPeaZuQj/05Nb/t4x5bF2N/Tmm+Cvsz
uQrsz2GXFio6xVWNfTlbIs7ZPmhpwr6ca6d5+bN6GNiXc0pT2XasqPt/vpyt
9lvsl0uwL4frrfdofMozAvlyqnJHqX/k83Ae6cUGTtlra8twHmmGwsd+joFS
AvlzNIyv8A/tyieQH4dPyPDVuFom9uNcv0j/18BdDN7JdduG288CQ8MpwZcW
NFA1m3zLxXke3NuZGsupVI39OeO8omeXw/7nz6HkNQtv/lKG/Tlrs0q3+Wvl
YH9OWMT0KfuRmwDxwOIsrLs3MEYIxAM/PKe3UqxhgkA8sGjMrmccZD2OeGC+
X8HN+7gYBMoXTew+4B26Ygjni5rkR5V4rhsHcutu/O0U4oOfmVIuHUcYAPHD
Lm//WN1XIffLdzEzGzfww1snPn20DmEA5M+RtfzaMmM8jv05q8TSs+wPDmLe
eCiFbhY/3Yr9OYnS9eWvPXLA4eM39xl9FYTjAbN/pD/lgG2xoxb9ikJwD9eJ
gZLnVPCRb3/3u1ghqKvdqZhkkwf2LrAL26gKwz0ZUysmLQqxf6eoN/Zs9MZW
7NOxU+7vfuXwDvt0Oj6Ib9v3JJuoTbl/Ts+oF0i+728c/FdCrHpRqeJwdhBk
vYl51/ShjNhv5dvyZ2AG8Dapf3otXgkOPtQ99mFuDujcl3T2YlaBtgVJbrC4
AHYrOQe8nq8CBnvCXfeJLQOB0FrK74IKgHhoFh2eg+YbJwjEQ49M/Rr6vIFJ
IB6ae7yv2cyfPI/Tv4+pTvLCXv3Vc961E8DEiVvD15kPauaGjSaKkvWehcZx
7lk+KGoQq3qPzgCeYhZw1I0fqrr0bfrIMYH9OjdD2qKag3OAhAf7wIZH5H7p
Lt9l7JsDKizGfh5fLQQXOp7TliAVpAmL8HofoYOH74+bVQsXEj7cvu+kj/YD
tpDK+f/r6VzcqUr3OM7IrUKrs6Q0OiiXsc1xeTai+L1qeNREKlN0uii3LpRE
FymkHrsInTGHSEyXk/slRCkLhTYrYy9dpmNTJHuj0F5F2RvnnefMmn9grXd9
f+/l933W97NWRwXefytvPU05MwKpmqG8wqY2amp41czxia/Ar3hicEBHBDsj
TK5snpDDoE+q3gQ+X08zQef+pj0DpWsC5vLVRMDluTMvbVp+LExGcXnujyNX
462Xs1TTeusPqQ4EGtw4PywkXwbXa3Om99YQSMvl7u4qKxbuiA2vWzkvROOx
T9+7mckgs+qMvZkriQIUtZ4G+HwKXybOuthKoq72nXWOwsa/vsfT5Xr4898d
emDfr1/mkc8HQLk066izUxu1XStLWMBIYcn7st/LRTQ1+zilrrJuCqaCDKIK
hCKIUidGNe8pICpR2/ysAQNcvvym20ejKCWW4vLlry5YikPqZVSLifk50T4C
vRcvPB2nzsKBplPRKlIC+TYV1BLK7F//a/10a8ou514rJGd6rVKKINH6HD0H
czzfz9QUbvFo6ofI+8ExAdXNlP7kHK8PTwdBN3FiWuswTS2zDA9u/TwMaxVL
TLbubadozVQ7jcqvcOF2WvaSh52gdzdMLbgG92Pz6bGY1Qzo9vgE9wqnQf/X
UWczHxFwefffjj1gvzGTUVzefX3lVwFjzVIT5R1htaYEOlGjG60TIwPtffd+
LL5NoB5BucEf78+9luYW77Qh0eIMbaU6vL+L7U1HD90lUYnZ3NkvlVhveqY4
TvQOBP4OfrOX26kH36pmrhwYAuOHBsL0zTSV5DzzJtlRDtaPSrKLSQbcZLYW
ka7TMNWY7tneIQIub//8wWTZa0uWGm4Zl7gICLR4wOj4HnMWDJU+LteduxAt
8g7sGquXwV3p68w2gkQHe17lFCc2QlXI/XSHdBJ9Km9enfcz9u9G88b82iSw
UOdBwcXfaerGP3p4YKeAYStP10CE+78/8/zhYdlHhgtkFJfnjw/MzUfzWCpl
4HJoiAeBTLrauoUdMuBrni1b0kog79n9shpTFgY8dzWMe5MoeMXCoee4P+Ty
/511WW4bGnogbt2srnuKFPhJP+2t7aWpxmSN3WP/VsDjO8xkgAUDHB9g9c++
TpsxGRUzbceb8CdQoVVbVLdcBtMRyxbEviZQ2tyKHDctFppusoER+0lkWDUj
sMP9c2DoIxMmZRCCTiWpDa6hqU8viYdjGXKgX0tj39gxwPEG/g2+gjrcj7dA
q6wzl0BPUXP5QVzPfK8yyYnvSGT3/rb9AL5ev++BgWe5Q/DAj87ffJqm9u2+
nrFIXw6JKXSWtSoDHK+gLLt676wJS12/NpMSEEcgIb/y0SpjFhZ8O971TpNE
0yedzJSTG2H46O76giQSbbOcXfHLpUZwyRC2uCRJ4H507ovcJzQV5x3f/0RX
AVc0B8534P2C4x/o5rwLsYtx/d+kbnWhCNTiA69GeSy4xB+Sz1tHIqWRpGsl
WG9bEf+0lt4Q8LwZc9WHNMXxEsw7K3sPHZbieAnzZzEFDQ6PYWtyAZESTSLP
V/Ee4oRG6Ix3P6ahJQGHdZd0p3+mKad04UbxCzlkfHT0+y+eHxxfcb//6j1P
Hkv5phXdTCwj0Mogj1FNrB8rSTmyxpFER+s3pRlHN0Lp0u0WKn5yMFX29f1s
xADHY/zGhGXU2LAUf6wf6acRyHTsg4rx9ywUFm/Qi9KUgmpz/p6CPppqme8Y
Ve2jgE2V9obVqxg4YxOp8bmDQObJ1Wu1DVm4qO91/rkvifT956dn4v2O4zu+
9xmb06zSC+kSm9VkqBTuRF9z34L7+5CN5/T6zytgZXPsDZEVA70WLSd5QSQ6
MjlRpxKD6y0NyOQL5NDTIT1RZ4PX4598iGmkXx8f9wd5PC/3t9kEOv/1cHse
9h8cL5KX2/PDW0OW6hfl21YclEDYuqQe3XrsN/d0PdRSw/XsD0+2WMtAC72o
0LuOQC+TtO/M4ucdyZrIXOJGoqkE7xwG18/9cMiN7k9ScJc3uXri+WB+aynP
qFUON7qzy1gXBjge5VSYU2gA9uf8GNsvV4oIJFCNtivC+ucp6+l425HoF6Nx
gRjrz/EquiXvjly1Yint7v3plskEitqRfnYU+zkvCS9BMiSBo5vit8l6aKrK
IMl76gcFjFcXRv6E72fPf2H81odEgr7R9uVY39Aieux4uRRmbTSDea9oSrWV
6iu8LYeTI7sOHXNkgONh3kYcKs7Cfmt4C8qtv0EgNxumtxuPj+NjduV6F8Zj
P5e5Y3g7XSgB9WrJxnB83lwGK/VzJgr4l9hS3If9X1rI4M6ZDSSqXcG/Vor1
4XiaQ48XfAiKaIIfE45HZgzKQV9CZFrj9RJzc8WmqEoCZcWb6mjh+rh3qD3j
O5No0l+x9xIeP8ffHLDIEFrj9e+rsuODejqBLuyuvy/HfnBORFjRN99JQaNi
R3QJ9lcv5YNXwgOxP84pHT27kgGxUoukdQeJ+NuWpfGxvhy/0/UfYYKtSS/Y
Ox1d9L6iEf7/N98FDf8DJDY5EQ==
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{545, 548, 465, 466, 467, 468, 922, 789, 684, 605, 544,
             510, 949, 816, 711, 632, 572, 971, 838, 733, 654, 469, 923, 790, 
            685, 1002, 869, 606, 980, 847, 1037, 742, 1018, 885, 1051}}], 
           
           PolygonBox[{{431, 575, 430, 2972, 576, 515, 481, 926, 793, 688, 
            609, 549, 432, 894, 761, 656, 577, 516, 482, 927, 794, 689, 610, 
            550, 433, 895, 762, 657, 578, 517, 483, 434, 896, 763, 658, 579, 
            518, 484, 928, 795, 690, 611, 551, 435, 897, 764, 659, 580, 519, 
            485, 929, 796, 691, 612, 552}}], 
           PolygonBox[CompressedData["
1:eJwV0rlPkwEcBuBPbnXgDnFwIBwr4oKMMnJTBlhggAESKpg4kLiAI4fAzr15
/AfQgtwbsIEJJFAWIHKobcJAos83PPm97wv9mjYt7RmKDKYFQfCEGdKUMyVG
nDXWGUsPggxm/b2RXG7sPxi3ZzJnayKPW/sXWxkr+gBVbNgnbFnM683kE9Nr
2JdHuPN/X/VyVvVfbh/FGUEQ1Y/kCFfyK3bltxzLSXeIMTnhdpGUNz1zUs5m
Qb90e2mRD9x6nnv+uf4gf+CFXqDH5Tfha/UD/bccpUQf1U/kDvL0W/2f/JGX
+r33/SZXhN+THgu/O7mfd/Kx2861/OgOUy3vuXX8lFPue8blC7eblLzl2Z/l
HBb1Vg7lBhJyIWtyLYfyJ07lTu7Cz+H13+VK4nr4Y3jNtn3K9pQlvY0i/th3
mLY/Y9kWoZi/9v+1Mk+Z
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwV0DtPU2EABuBT2hDxUhfjpELdVGARXWVRW1zQwQWnJlSFpCYMJAZw4CL+
AOttBC+jS1tbu8KCls06OFgXiwIJsYMDsfJ8w5Pvfd/Tk3N6UtkHt/JdURTF
KPBeaFJjh6SLN3hFPB5FT/hoH9QnqHLW9o5t+zF9hJd02Zap2gf0+1RI2d7y
2/5Ir3NZr3FUbpKRN8nIL4jJj6m4p63fkX+E95HzzjZf5Z5EFA3L6/Tr0859
tuSkazflBvf0E3ouvDcf9ITeJ7/hl+ec0h/KHXZdP67flr8xp5/UJ+U9Puvd
+qXwfTiiTzn/8l1OO+uk5ayzxfPw4Z1L4fme90cfk5vhu8kNrshrXJBbjMpf
uCuX6ZVfh//n/ln9E0Phm3NYvs4z/rNoK/vdeTlHiTO21fA+9hl9g4vhO9Mj
X6NAhwVbye/OyeMUOW1b4af9kH6Vp/xj3l60HwB7UVDx
            "]], 
           PolygonBox[CompressedData["
1:eJwV0UlQj2EABvCv5dCIbE2SbZoxQ4QDheKEmxxkq8wwxqVmUoiayQmd0gwl
y9WWfctZpbRZi4sYDnQwGdvQgmb83sNv3ud56v/9+97S95Rt3hcbRVEMPcQq
83lpGGeevJMbJMdF0Xle2HP1SjpZZnvAP/tcvYjrTLed47k9Rz/MY5bamvlr
n6MXco1ptrM8s6/WD9HBEtt9/thr9Nes1R8xWx5kk/yKAvkqU+UzPPWZEX23
PEid/I4Nci+r5C9slQeokEuc32iXM533GPOcamcUH0U/wvOdhfoHjuupeqn8
M/wdeoK+Rm5jlp6mV4Tn8EmfqOfJ/ewId6XvlT/TpMfpU+RGnoR71Y/IMc7h
cFfOXeFZnND3O4d5K0/ws/VyDyv1Kuc4Q/IW5xsOysXOr+Ee5cXOu4z6ru96
gfyeY3I/uXIrafJHNsp9bJevMFk+He7U52v1Adbp3WTLB2hjkX6HEb93VO8j
R29hpryNyyTpDeEd/F5WeD9aybDdDu9qTw3/Ny4xyVYfvs++Qi+nhYW2W/y2
zwjvz8Vw/7ZTdNmX62U8ZIHtJr/sKXo+F0i0naTT/h/iNGvE
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1Xd8jWcYBuDYe4UQxIgtsWfsvbWU0qVVQVqlCBVq66b2LrUpRat76dC9
6UBblO7SPbVGx/X8/HHlvp/3nOR83/e+55fUzHEDxuZKSEh4wI/Inn78Jncz
iYtoSm56ee33eC85XEwz8tDba3/IB5lMP5qTl3z08fqfcg9T6E8L8tPXa6fl
Q9zMJbQk03pRXtMXcR0F4pqs/SUfZioDyGC49WK8ri/megrGdVr7Wz7CNAYy
3loFDurraMUIc3He0JcwikJxL9bOyEeZzqVkW6vIIX09rRlpLsGb+lJu1evz
rX5D3LdejWP6NubqTflRLxzPRD8rH2OhnsEMfZasy2a+NK+SnRikT5ApbORw
fK5syw42mO+UjdnG9+a1shu7aGPOkiVZz1vx3GRrtrPMfJtswFZOmu+RXRgd
eyWr86m+XLbnPn2ebMZPepHYT/2cfJyZzDan8ZU+mIl6JT7SN9I29tpcirfj
bzMm9tpcg+P6dorG3pvPyyfiOXEZ7WLvrSfyjr6CGykWe2/tH/lkXAeX0z72
2npp3tVXMpbisdfW/pVPMYcr6EAJBnntP/k0t3AlHSlJKRIpTRmSKEs5kilP
BSqSEs8hvnw8E+eGq+hEpbin+G6yN/aDIXSmMlWoSirV4n68LzfP6rdzNV2o
HtduPQ/P6XdwDV3jbForw/44W4yjRtyPtbw8H+eIodxkrszH+ia6MdqcxAF9
NeOpGfdgLR8v6HdxLZPMVfhE30z32FtzWd6L8xXXrTfklJ7NNL0mJ2IvZYc4
3/rdsjk/67Xiuej52acvkq2YG/sm09nC13GNsjM7GWbOkVXZxBHzMtmO++N3
4tplkzjb/GC+V3ZnNz3ibMly8X3jffOS+G6xJp6zbMR3+hrZlQn6dFmLz+K8
yY7xefp82YJf9Nqxf3oBXtTnxTnT6/GNnslkPZWj+lZ6xtk1J/OBvpaJzDDX
5nN9J3Vi/80FeSmeJcPpRd3Ya+uFeDmuiRH0Ji320XphXtEXMJI+pFOP+jSg
IY1ozDDvL8Kr+kKy6BtnzVp5PoznGueLmeY6fKHvis/QW/Krvi6eea4L/6+a
mP8HOzK9Ww==
           "]]}, Annotation[#, "Charting`Private`Tag$832180#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1XfYjQUYB+DjQ0j2KmRnhJJURkpIRSQjSkoKpbIKTauyQ2SUUZG9N5kp
o2Rk7723RInofq7+uK/n93vO+s573vf98jdtXadVskQi0TYpkRiRNpGoZCbn
oOWo5InEHczQX+EuZth3srsqD+AxUnDI/hv7nMzUm1KYmfad7f6Rv6AyKTls
P4suHrumD6QKt3DE/lv7XMzSX6UIs+272l2XB1GVVBy1/84+N7P11yjKdPs5
dLP/V/+Sx0nNMfvR9ncyR29GMebaf2J3Qx5MNdKwwO5+fpU/5LjnjdHzMFdv
zt3Ms//U7qY8hCe4lYV2ZVgrf8QJz/tez8s8vQVb5docl4vzs/wo2+QeHJAb
8Yc83+s/kxMMjb/HbMqT8rqY7Jf/MtuRVv7BfIBbUiQSv+kX5DfJrn+s75af
I4N+Vr8hvx/HVT/p88bK+Uihz/f4abk5WfXX9W3ys6TXT+jX5A6UkFealUjj
se36JbkVPeNcM1/kUhxnn9NdTsYw/SnWy09xQL6NRfKDrJM7ccprxun5WaC/
Qck45vY97JL4Sq9Ouvi77cfbFWCh3pJ74vjY97RLztd6DdJzxn4RB1jMEpay
jF5xPBjueU+TgbP2y+ltn5IRdjXJyDn7CXYF+UF/k3v50b5P/DaM1GuRicX6
Q6yXO3Pe8ybqhVgUf5vZgmyO61v6drkOJ+VSrJIfY4f8p9maXnG9mo35U17h
PfvKqRgV56b5Ks/IG8zqcf54/4P63/I7cV/QM+tL5LLxWn2DflF+ixx6F32P
3ICM+jn9pvxBXHf6BZ87Sb4rjpO+OI6d/DpvyzvMupySr5sduU9ebVZmp3zZ
bEPvuKeYL3FZ/sl7fy6n5hu9NhvlGhySs7BULsdGuSt75Yacj+/h9ZPlwizR
W1E6rkn7fnEe863+LFn5w34l/e1v5Tu7OmSLc90+KX4Lc0AcS0brdckev4v9
FLsiLNVbc398T/sv7G5jjF6PHPGd7afaFWWZ3oYyrLEfaJeO7/X63M4V+2l2
xVie9P+9/gF+sR8U1ytj9ee4g2V6eX6Xu8U9xPOm63fzo96OB+Pz9Crskvvw
q+d9GfcPxukN+F1+msNyTpbLFdgkf8I++XkuxLnl9TPk4qyIa8V8I843eadZ
j9Pyv+Z7cV3EdzCrxjF3/uyO7yq3pa98xHyZzB67oiczP9LzmGt91uA4L+N6
18d7/KT8Gln0hvomuWYcf/2IflV+l5x6rrhm5YfjHNM3xzkQ5y2365/q++UX
yKRf1BPmh/pVnz3TLMFPcU2bLeO95V1mfc7IZeOYyo+zR/6co3IT/pJ/8z5D
4v2ZoD/PZrkWR+XccW3LFdkif8Y/8X9XL8nPenvKsc5+aBwrJuovcCfX7Gfb
3cNKvQPlWW8/LI4Vk/RG5InrNP7n2t3LKr0jFeI+Yv+VXVYm6y+SN35L+40U
inPF3MRmtvC152Zjiscak48b9nPtSrFaf4+HWatXY6/cj62eN1zPzlT9lNks
7g/yFvOZuE78HsfimMjtyaXnj3uH/Ahb5e5xz/Je8+Lewxr9fSqyzX6EXQ6m
6S9TIH5ntntsBzvZxW72sJd9jIzzhOme24SCcX4y3640v8gf8Ej8zvoT7JP7
c0x+hb/lpPjfLec193vf/wA2YU1k
           "]]}, Annotation[#, "Charting`Private`Tag$832180#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1Xfc1XMYxvHTjmxlj4qGNtrRLu0pKzMjtIgWpSgZ2WRmRCGkrIamMkKR
PQqVEpU9WpT39cfndV/XdZ/zPL9x399Toc+gHgOLFAqFLUULhfLFC4UOJQuF
Z0oUCsdgEX8N7pRt4S9FcfSQDZZ9SHfERv5JVEBH+bOyY7GYvxZ3yX7mL0MJ
9JRdJVtJd8KP/FOYLNvFX4ODUFHWSTaNroQ3+Bf5MriJH8nfTf9CX46SOFV2
tewjujN+4mfzZXEXPyXXSu+mr8UquiEOpt9UK+DR3L/PdaafoyvjA7o6lshn
qHvhb9yst0Y9GcVKFQqj9O+hf5X/rvZTv1Dr5n+iVJ6LeiS246Hcv9omPd/v
5ftD6I/lP6td1E/UOtikN0cth7vl69UWmJrnpxYwUn4I3qIr4rG8C/0u9PN0
FSzlr8O9st/4/iiN02RDZZ/QXbGZfxqV0FX+gqxqnhM/GqejMrrpTZcfl//L
j8EZGCb/VNYNW/hnUAXd5S/KquFt/nqcieHyz2Tdc+/8s6iKHvIZsup4h78B
98l+5wdgD5wlGyH7PPOJX/i5/EG4h5/GT6GLYBS/Wm2EQ3MN6jF4PPfgcz3p
mXQNfEjXwDL5THVv/INb9NaqTVHcexurP5H+Q/6HOlD9Uq2X96K/Z+aXPgo7
8HBmU22L0vq9s2v0F7l2taf6qXp8Zknv9cwo7pVvUFtmNuVT1aK4Tv6N2hiH
5Tmpx+KJPGefO5V+ia6Jd/mX+H1wKz+Ov5/+kx6EMjg7uyv7MjuF3/jnUR29
5C/LauE9/kacg5Hyr2S9Mvv8C6iB0+SvyGrjfX48zkVN1Moc6b+qVwfL+Ztw
HkbJv85c5pny01E7syV/TXY8VvA34/zMtHyV7HT8mbMCdTJb8lmyE7LH/C14
QPYXfwX2wgWZadlq+gz8xc/jD8F9/IzsQnYco/nDsYyuhMm5Fv2z6Nn0iVhJ
18wZKX9Z3RcT5OvUZnnu8gdzhuRa1SvVr9T6mVHzsDe/hD4aO/EIv0k9BXvo
98me0d/If1XPVD9TT8B/+bv68zPf2IqJ+j+orVDC92dmHzO7GKP3rdoER2Q+
1Mp4Ms/M53rTc+i6uS/+FX4/3MZP4B/KTtCDsQ8uzE7Lvs1e4p/MW/Y5/xvX
y47Mc5Kdzc+l6+Ej/jY8nGvmr8K+uCg7L/uO7o2teaaom7mTvy6rj4/523Ex
xsrXZI6xLdeMepk7+TxZg5yr/B24BPUzc3rz5Q2ze/ndQ180QMPMmP4CvUZ5
1vldw6VohAv0Fsob4/P8LuEyjJOvlZ2D7fyraIw+8kWyJvl9yG8GLs8uydfJ
zsUO/jU0wYXyxbKTcq7k7MYjsm381dgP/bJbsu/p87CTX5DzAPfzs/hpdEnc
wB+V/aWr4Kn8bf2L6Dfok/M+6FrZ6Vy3uj9ul3+vNs9eyCep27Mv6hD1a7VB
ziQztj+/lC6PfzGJ36y2w576/bPr9PqcL+r5eXbqidiV7+gvVA/PfeIB/Y1q
69yD78/Wf44uhbF636knZWdyzqhVMSX3kpmgl9BNc415rvwBuIOfyD9K76CH
4gAMyLki25CzAf/xc3IGykpjnKx8/l7mh19KN8OqnKV4LHvLD8OBGJhzR/YD
3Qe78vuEZpkx+Zuy5lidswmD0DzzpfeWvEXO95wZuAIt0BKt0Dqz5nNv+0zL
7HJ2ElfiVvnG7CR253cEbTJr8ndkrfLcsnMYjAnyH7NzKGCerC36yZfxrbEm
s4fH84744Sibfc3+yn6iL0YRLMqZggfp+flNyPmFG/kKWE4fh6n0Kfr96Xfp
Ntlnunb2Rz5LPRB3yifxT+Sco0egXHYguy/bRF+Colgga4f26ICO6IQBPvee
ftucx3n3GILOGKj3fq4lc573iKHokneit1zeDutz/xiGrnkneivk7bEh14fh
6Jb3oPeBvEPOYH4yRuTskW+W9UUxLJRNz25gPF8RK+hqeJreorZHGbPf3Wf/
B9iBjlc=
           "]]}, Annotation[#, "Charting`Private`Tag$832180#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV0neAz2UcB/DfRRF3zrhVSCqSlm5kRLmQiIaOuJkLKbmzZ6VdStGgKO3S
QIv2NpOVFlJZZStSaL8+f7zu/Xk+z+957vk+32/j8soeFUmJRKLAn+RqicQx
1ROJ7+TzjOMK2ur9Kz9jJueSrXdAfsSDDCGFY/U3yFmMpzft9P6Ty3ic88jR
+11+zEMMpRb19b+XL3A9fWhPKg3M/SBf5AYKyac2dahLPdJIJ4NMsuK54myx
f+xDw2C/H+VL3EgR53NcMLdRvswEiulAo2Buk5zNTZTQkeNpHGl+s5zDzZTS
iVz9P+QnTGUYJ8Qa/S1yLrdQFnesl+Bz9RNcQJ7xQfkp07jQuAZfq4fH2dVV
WaV+hovUKaxVnxj/S71VvsLF6trcGmeT1Vij7iHTuDLek0yiN8uNL5V1KeZJ
464ymUK+Ne4pMymls/HZ8lB8Q3KBvETWoYiHjbvImvThG+MCmcGIuGt5JKvV
l8l6PKvuJmuxTn1SPJf6J/kqt8U9GVfnS3Xf+HbUR7BC/VTcGS2ND8uFPMJI
msR++j/L17id8jgjTTk5fmN+m3ydO7gq7oBm8Rtz2+Ub3Em/uH9OibXmdsh5
3EX/eA6ax1pzO+V8JjKA7pwaa83tkm9yN1fHe+M0TueM2MNvdsu3uIeBcc+0
0v9TLmI6ozgz9tXfI99mEtfEe6VF7Gtur3yHe7k27p6z4v+Z+0W+y30Mim+F
7DiHuV/le0zmOi6ntf5fcjEzGE1OnEN/n3yfKXQ2PpqvYp1Mp4TBxvmyCivV
T8c3Qhvjv+USHmUMufEM+vvlB9xPRXyT5MW3GO897iXOFXtwDm3j+az7TX7I
A1TSK+b1/5FLeYyxdNQ7ii/Uz8W7UqeyPtbILMpoZ/w/R/Kcww==
           "]]}, Annotation[#, "Charting`Private`Tag$832180#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
XnL8/0YwvKA=
           "]]}, Annotation[#, "Charting`Private`Tag$832180#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"Test on dynamics\"", TraditionalForm], 
     PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1b\"", "\"u1b\"", "\"x1b\"", "\"\[Theta]dot1b\"", 
       "\"xdot1b\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8648376866338243`*^9, {3.864837721244707*^9, 3.8648377460817285`*^9}, {
   3.864837800602215*^9, 3.8648378151965265`*^9}, {3.864837882180011*^9, 
   3.8648379006680717`*^9}, {3.864917359659708*^9, 3.8649173767071624`*^9}, 
   3.864919300876232*^9, {3.864919337508316*^9, 3.8649193485657187`*^9}, {
   3.8649194958228164`*^9, 3.8649195287531037`*^9}, 3.864920239187001*^9, {
   3.864921249563326*^9, 3.8649212721359825`*^9}, {3.865342438564925*^9, 
   3.865342509036396*^9}, {3.8653477634896584`*^9, 3.865347782729508*^9}, {
   3.8653478492912292`*^9, 3.865348013067874*^9}, {3.86535368874548*^9, 
   3.8653536939258237`*^9}, {3.8653538219528966`*^9, 
   3.8653538384286294`*^9}, {3.865356737715789*^9, 3.8653567547593403`*^9}, 
   3.8653569273791575`*^9, {3.8653569657139025`*^9, 3.86535700435555*^9}, 
   3.86535703851363*^9, {3.8653570911278105`*^9, 3.865357172559778*^9}, {
   3.865357210731576*^9, 3.865357232535606*^9}, {3.8653573843380775`*^9, 
   3.865357407024825*^9}, {3.8653574402422056`*^9, 3.865357560552746*^9}, {
   3.8653576116883984`*^9, 3.8653576483786693`*^9}, {3.865358188766919*^9, 
   3.8653581946510377`*^9}, {3.865358314589696*^9, 3.8653583435974226`*^9}, {
   3.8653592266591263`*^9, 3.865359247679407*^9}, {3.865443792998208*^9, 
   3.865443801104616*^9}, 3.8654440595339727`*^9, {3.8654487336752205`*^9, 
   3.8654487504428587`*^9}, 3.8654492637776985`*^9, 3.8654493114634485`*^9, {
   3.865965582539151*^9, 3.8659656451141005`*^9}, {3.8659657927138066`*^9, 
   3.8659658125544496`*^9}, {3.865965935915921*^9, 3.8659659557085795`*^9}, {
   3.8659659882041674`*^9, 3.8659660068222017`*^9}, 3.8659660863577166`*^9, 
   3.865966459016309*^9, {3.865966598898487*^9, 3.865966735717648*^9}, {
   3.865966781206072*^9, 3.865966802194347*^9}, {3.8659670998539696`*^9, 
   3.8659671350117044`*^9}, {3.86596737708314*^9, 3.865967416340561*^9}, {
   3.8659680911663313`*^9, 3.8659680979531565`*^9}, {3.8659697724146223`*^9, 
   3.865969803929524*^9}, 3.865969850623562*^9, {3.865969890971634*^9, 
   3.86596992699809*^9}},
 CellLabel->
  "Out[4122]=",ExpressionUUID->"95ed6231-7f10-4093-8776-fa69491b02b1"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
ByVYlYAFK7RJXSddo14JvpqMv/hTyEfu/wwEC8jjz3/FN99PsQVclXAkYr7S
QQ7fevkwSSawFXiYDRhxQEeruuXBNlb40FnE/yt5/hIvTl75cp8POq7O0+r8
//ev/+YbatNE1huT9zuab3hh8zD93BZvoqlXxl+dhxWumSmIDThWCVT1zRU7
5VvBF4eT+fzk9bL/p9qI2zUm2D95O0F4NA6Up5pvydEi38cHhypNyfvhyxKR
bvCKD4I5dfEE8udF8w/OJ94ryV5tBWj+geqRLLz9/jz+/ui16CtxGav+9/3R
6Fil5ZLuMfz9URGKS+qf8r+4L9yX8OXCdNMA7gsLyOweXvjbi/vC8qmE657j
Xfj7o/bUw33Vl5rw90dXLYgXBzyvxN8fPeWbdfgR7Q3+/ujJC7kjK1YV4/mH
9WuFnVmsv+H5B1WThJO829rx/MOHzL0aQp49eP5hZvp1dJJNP55/6NZRNJhK
GMTzD7u8RtVuco3i+QevFbnybLrjeP6BP3Xbbi3IxPMPsrw9vNlvZvD8A5uS
fmXm9gU8/1BjJbk7m1xH0PzDx7slms0LbBDNP2wX/JAyq8EB0fyD5Ud5q5et
7BDNP9hUZf3NhGwQzT+cfRvH1BRigWj+QYT/kHKr6gLuC9/1EG1VLpvF3x8V
/pqRsNFgGn9/1LTNfv3pGSb+/qjvQPnfl6eYuC98yPa2cyn512j+4fCjZNNL
L5i4L6zPul8rKpWJ+8L0lLxftYuTAM0/SPB12Dk1jgM0/5D0xtPW6cAwQPMP
zUceai/Z9QA0/8AVWFP+qTgJoPmHojux5udWhOP5B2ZPAuNx9Ts8/xARTk1y
iczG8w9TcqrmSlmFeP7BR/LF1cDa/80/3D9+zJgh8L++sPsrLwGeUBqef8h4
vylk/SMann+IUVTRil9Nw/MPNxLrtkofKMHzD8O+s+5hX6bx90eznfQNFz+P
4++PGoQMVlM3jBBo/iFsk6iqZv4fAs0PPG3x4FLImsDzA/6SrNs72qfw/ED/
/pu/H1bN4XmBQ7k/he8PsULU811+Iiz3o4Ud9h7POejPygV/LHw8uEeNA6J5
gryWNs4GKXaI5gni+JT3u+1ghWie4OldNUv2jUu4/zuyZjal/co87v8eSOC0
XmM9A9A8gWfNwQdPAqYAmieo8hs8ZfeYCdA8wX2DQIf9R5i4/8vfceZOgh0T
93+JpfvvbD8ygUVAeOlSKAXqfZ7K1XVkAskTq7sWxISg4W+zw5KSkwDNHxw+
wntKQZEB0PzBuQ9DA6Fav3E/OOfDyrG43Y0AzR9c6eEWzzBOw/MHq4RGihuP
+uL5A07Rrc9v+aTj+YOz7wTSRh/m4X6wB0xJ93AicD9YxKpEq9evBPeD6b7h
Wmdu0P7XD76bcbz/NQ33gx3kvqw8akTD8wzlF6OOnswowfMMzGn9n8c8ZvH3
U7c9EzlV/G0Cfz/V4lGlaMPtUQLNM2hfSV9dlDdIoHmAnaFrNzUvjON5AO65
348PcU3heQA/msDm7R9msf/3F3mW33qKXOf+6/X+SPNTuevIDr9rSQ2toHFC
20aCdkWPA6L5gH+s5Rp2PuwQzQf8PrXd/nAeK0TzAT2Uu0TbhmXc9/0nIcom
r/UP931ZmfGimyizAM0HeDRp+0kOTwE0HxDYwWQ8zWcCNB8wFy+x//BRJu77
WoHCixpXmLjvqysxHyWbwASaw18uP3OkQPbtRTFiEeT1wxeze2iaAmUoh05+
ezkJ8PdbN1+c8hMcB2ieYPlasal01yDuA58VYfwt+dYB0DyBb/8Nn6q12Xie
YNTwp15YpgOB5gkemSrv3r4rGc8TVBuFcZ+I/4T7wNn2h2i07UW4DxyV7a3i
rFiC+8BKXlvX2UEa7gOr3Xs3FB9Dw31go7fP56QdaHg+YTQYVAb3l+D5hGnW
MibvuSkC94ET4p3bqhn/6+06DVXV32ODdRtWCT44xAkTD9iczlzHASe0tYJ4
1bhgdshifbYYeX6PLM9dOMANSz617lb6xAaR3/c6ktIx92gO93i7vnD2beqY
BsjvEwkhzatVpwDy+/vMD7zbYM4EyO9vf1rS7qLFxD3enlfE1FFvJvCjHlm0
30OBWxZVeLfnMMHTnVe23sqmwG/lyXUK6kzQ7Ofvy39ACMbe2VvY5Ueu6//5
/7yw08uelqMA+f/OOm+l8/f6cN93J1vnqbQ1VQD5/6jmR0+19eOw/3e3v7Xb
WvMlQN+bHfeXkZiQ/whGn2ZHLNeKwPzcjJX6CgXgjE4N/Yi+KPycUteioFMM
RsdeOps3iELftcaXiYYSUOQk+8LqJBVWDzdd0PWgAedT+j1F36lw7KrSHdcI
GjAT2vN67LQYtMnwrZ9WoeF5g0nVm5wGziV43qDny83oRfs5/D1b4dtcdQ/M
J/H3bPV8cvM8No8RaN7g/Lx8IPehvwTy+tV9l50s3o1jr9/jr6g+/4aJvb7k
lu7lsC2z2OerGrg8O8TBClHP997YbU0bVXZYd7RD7cgbTrg2gH3MRpcDIr8v
LLLrVVoGO0R+X+nX6az0RVaI/L5+V+BEVOwy7v/GuFv9riv+h/u/3f8em6aa
zQLk90O3aDZZS04D5Pel/B7dVmghf97//L717prGxhNM3P+N11hn9NSQifu/
ab6hO7Vek/uJl0Op7TcoULHqegBrHHn9WPdd7u2nwN2MbsX+L5MAeX/FgGKu
HodxgLz/N7knsnThIdwP1m+z0em91Q2Q95d6eVfry7oA7P0/vPmm7M8bgL3/
zyvBO5mCCdj7W5hxiUfG5+B+8NyGlYJxDp9xP3iHzm+GKUsJ7gcHgQV60DYa
7gc/ChNcevqShvvBafeXbt1wp+H5AblDR77VLpbg+YFJsw8KF3inCTQ/MBQo
9OQMHMc93rRtf0ef7maDek8qa50lOOGhxI+Priyxw78nlgeOb+SCAt/5/SUV
yPNbsXlaRYIbhrcsZOiMsUHk6+VcpFWtmXO41/vM1GwxatMMQL7+9uu5JaWr
UwD5envFTtciZyZAvv7MzQPQR4OJe73d5myHhu8zQaFLr8srKQqM7LG9wEve
7wudDxyy4yiwCyRu/mvMBP8G6ZkrZIVgxHzbc97WCYB8vuTRh3Xc1mMA+Xwr
tlCR4D/9uP+7LNlpuVfpK0A+f1Iv2ssEJGGfvzft/Grj2GCAvv/L0PwkffpX
BpjN3BVwplAEfn5jYhppnA9ENtnFHIWisKWZnXt8ZTH4y1ciGkAThXFikgft
00rAuvMruXoAFZ69p27lST6PA3+dk/9Jo0K+o+sMDkTTQO7wpwLFI2IwckG/
rPw4Dc8DvO/VOWUaWoLnAV7F7NISjJ0h0DxAD8eZYH/1CcLoOlS3a10JU8Nf
mlgnscP2Y1YhlT2csLZ29cPBExy4F5w3rPxwR8EUQL7+n/45fcNYJhD7eVZB
eIUgZGPViKOR+ytZ9sNK9R6CUOGDgXIW+TzedHyD2ygbBS4sq0ykf2CCVtUs
ipYPBXKLcDW98mcCjRRDbianEGz1SC3XvULuz//z+Wrep1OtDTKJF7UlUGe9
KCz5Rb863FwEfh5bdbrxjShMZXg9HzEuAR0iRYOVklSoe9/JJ/kMDRSuMK3d
FEuFKe5hh27E0oBR7OeJbCkxKLORe9bSjAa0PuqecTPhhAdWXgQRezjgvM4z
FboJFyROuSqZ/mPH/eEbPzofSIlNAdQf/jEkP21/kVxPhI1Hbh4RhFsO28ZM
azPBmYy4B9qaFOjzXeadE7l/3OSm0bapnAJN143u7N/EBBlbj1ykagtBH/97
bjeUJsDkN8d2jV7y/CoV3u+eKAHG4bpb5o2psM60IbP6CQ2YlpwIftVHhQMX
PuiVPqcB5PNfi7pNHjIqwT6fS/PWWo+pOfx95KV9KfP78iZx/7iWnxrl6T5G
IJ8fdCyMcHv4l0C+/a1pHjHjPI59+5M30vZ6tkzs21sDhuwV+mawZw+YUln/
7AcLRL1h54wbBdrr2KFW5V6rq8854U6fd5yc5PWCvLuwtg7Xp3J2iLz7+mUz
zesb2CDy7pLn0lOZvcu4T7xZQD/15tI/3CdW4/pgNRk6C5B3N7aXkuk4MA2Q
d7+1dYfg1wEmQN49RPp79ZguE/eJ4zaYb+U+x8R9Yo48rZTRl+T+7M7cmWVj
CgzZ026RlUierw2+U5c6KbD5xZPZiN+TAPl4r88dOWzx4wD5+A8jszlXEodw
33iCqVfeHPYTIB+v58ChIZIbDJCPnxeP2PFbORj7+JZ2p6A523js49+d/JS2
YVMO7htfLJqyvij6GfeN68O3+NkNFOO+8eGH9NE16/7XN2YvkbgaFU7DfWOT
ow5u9t407O33ftdrvs5Nw96+1uDDxqO3pgnk7WOyuDSUXcdxPziOtknHQJAN
PqfFbXNaxQmlh/J3sQ6zwxu1RkIWFC44IBW/8oEKeX459zITeLnhDyJFyJyH
HSKPnpNS+z5edh73hdlenU9rPzoDkEeXpd7xnXGaAsij5yt8+vnxIRMgj85R
dOtkAvn8QH1hh3SLZnUncj+WrlikKEGBXpwcG7izmeBj9iOJ9lfk/bbvkMRm
SyYIjLTVerhRCL6ZmLCYXpgAyLNva21cPzc4BpBntzZI+GYUOYB7xcMxhysq
9zUA5Nk3PK2uqqxKwZ5d1pRHtuzCU4C+J714vPrh+N4M4FI2sdItSwTq6d0r
TxjPA468FZzV+0Rhe9iPyslSAvyJ+t4fnS8Kab9m20KjSkCdpn2xuDIVipyb
T1axpgHxFMNmm3wqDMu4xNJI7rd/Gt6tPqUqBp1kGlZknKJhP6/Kt+qWy9sS
7Odty60mIwVmCeTnrxafvevhP0FEvVwfa1O5Emr+8Os7+IwdnquuIga+ccIN
R8uPMcj9FPLot4V6lVS/TwHk0fVKXi/6pTLJ56G5ov68AJx/xuCgkeun2aUF
T577glCzIOmH2XUmUHWxJjzmBSGQhKXRyeR+ZzUt95YrBRa+25L47Rn5PL+4
EH17mQKjPh+uu+I2CZBn7yw7blGe85GYzRZJpIuQx8NshjPdowh0ta7bNBAp
Ck0FEkbfaZWARyvk3rCuId8/NgcZ9ZLr11H6NbuP4VS4hXeP8Ffy/dWD342l
RUIMcpYlwRny+D0alMt0OckJy78bPgyV5YCO9cPXRvS44NzjY4MlPBy4l5yQ
vtD8adsUQL3kj84xv61MmeAw3+ezLqqCMMdmrOnJcSaw7mMW/jxIgWa2TxcU
yOur9dxp96OfKdBA3Z0jdhcTHGkdGH+uLgRXOpaUBhpPAIaJf+L5dlFIiHlT
dv0qAfx+hV27zlOh5na79EZfGhjx192/8wcVLtyyuHw5jLw///Ps0vPXHG6Z
lwC9KjdR6UxOWFJIrVQm329RP1mfuXzVtooJnCP6G+LbBaBWyiHBo8fI++EX
L0weFIRrIkWjLr9jgsXSzpU51hRou6dd4n4MEyCfnn9N8jh/UgLxt49T2IGb
CmkUv4Hze2jg0mWL4kZfKuSxtez8/Yp83/vDKrGGj3w+iE3qTt+jAf5zg1b3
dpD7NdkMJyY/B7Sue1uwXZELhuwwNpCX5oBiZaZnDc8JwCeHbt8KtGECI5b7
WxLkBOFWzkr5L5pM8OZ48EHuHRQ4bMMVZkPurzRX3qYHpVKgEfP53Et98vje
DD/5/igVKsif2bj7AQ2wrz3jd7KWCt9TQmbWRdGAcQ3FPGGcE56qOvDq9FEO
+GRgunKRVxBG3fwQr0Y+D7ioXw8ZraJAPrfZBL0MJth4Pd5icyAFGj/2H7R3
ZwKFg5elnieS70OKhw1ukev9ShebaXdbTri/bmdz/iEO+FrCREsxUgAmy6l4
Kpwn9yfiy16ntAVh7ZcjdtknmWC/6znVXF0KlBQQ02WmM8GHhJ9WxTeo0GXV
62n5ZzTQPKs1zDtChRWXbTpSAsn34f+8uUlsvPq34yXYm3MsC5qk7pvH3wN/
FXGqQ7x3EvefPy8lWbeljRHIm/NLPp4PefuXQF7bpfBwgNXVcey1H3u/P5Vr
wMReu2NZ0PFs6Qz22Z4T3dsTqlgg6i0fzn37eT8fO1zp28d25xEnLE0X8srS
4oDIbxtvPOGr+4UdIr89KfKycI0CG0R+2828vvsHKwtEfptXZXWU97r/9Zmj
Ej8fnk6ZBchvr7lstPrXsWmA/HanjcECc5QJkN+eVHN1/KjHxH3mPwGhvZfO
MHGf+ZL98qWUCPJ6ueyeQLlAgU+49yqUkM8XSyeD4rVtFNhxX6iwd2ISYO/t
GOpg93kcIO8NGXvkfkwM4b6zFc1rk92KHoC8t/ZKjrq9594A5L2N36ls7XoZ
ir334fPbnk9Gx2HvfZNH8VZWVzbuO/+hvDB511+I+85n29nkNrQV477zxx1C
yS9F/9d3Pu91Sf03eb+jvrO/2IxsM/k8QH6cHvD0GkWAhv34vx3meW6vpgnk
x+MbN6h0vhrH/eTKc6y7Fsn33azOEINpNnJ/lRqbtaWXHUo95kq4y80Fpdz/
pgQcJM/vVnDnJwc3lJ8RTc6iskPkqwM540w2as7jvnKbIcefNqMZgHw1vYHt
x3uPKYB89TfqdMFdHyZAvtpDaFDgKnn/ob5yiflRUaY9E5geN+z6R6XAsx3B
B09mketvLMVmOIIC35/PFGsnnw8tE4eFwToh6FzkN0zjnwTIZ5+2L6jSFWYA
5LM3XrBrHhwfwL1mm2sZedr7vgPks+eMnH/JCH3APptFQ7Lc6fxjgL6fft8t
2393dzqAOg3qIekikJNr4KF0fh6IZ2UU+O8ShU9hvDpvNAFu9F2sf58jCtdl
fhptfl4C3h1Kjtq3mwq7Eg+EG1nQgIlgxzaVHCpsvOJcZEWuN/aCRnpXlcVg
z+CrWp9zNOzBndPtXt9OKsEe3L9R8IaF1iyBPPiQbBr3+dQJ4nMO39exopVw
VLlkB58XO1zt73h2upoT5hd+XPXjJAfuO3c53QwL7p4CyFc7cR0zHCffHxpT
qiJuTAhAvf5DX23J56vvoza5bU6C0Pryszz9q0xQLRrWrT0tCBO5T+1hkPtX
C5ZjvG73KHCTiv3+56Hk8zG73nzHPwq06RXyqQ+YBMhnf8k9mXbbLIuQSQaX
nlJE4a+4f+pB54vAJcn33GNhorAwZ/DM9oMlwHTR1HW9CLmfPOurTWjQwBOl
gfL7IVTophrJp0seH9Hyy76/xcTgs4pT2uJ2NJDMIdGzoMkJmSIToZelOODu
gMj5BS0uOJqWovaXwoF70Xu3xnPUK00B1Iu2kntolkbuL7geDXP7KQtClbJ1
cXfJ9e6fi0RnkgoF/lG8qVZOrsdZh9u/G+ZRoKe37GTAASYIUMgt1ANCsGbY
2Xr8zgS4nSD0zKRZFHKKcRkKdZSAAbfJfL3TVGguFd+2mdwPK41+CZhuocJk
fmbG0gsaQD47+PXD8L82/79+70jZncQJOz8WTPqR5wf1o3nHbVZkf2ECjuAj
BwobBKDtqu6nD8j9wuKD3SYO/YLQW8yw/uIbcr+Qds2oyoICxZumThqSf428
tYS96ruMnhiC9uPQ2LMVVGjGd0H6kTwNvCkdEn7lSYXPv/vv/UKufzdiet9s
4xaDgZqSHvkuNCBv2xo1J8UJd0xfUu5fyQHlnujrH9jGBXdwdjS3kfsdrjXs
57t0BOCVT+zcgeT9KOmS1J4pIwjzBk2S1pHXi3xf/qXvMhTIf0FzxWlyPd44
MbXxbSIFSmVuUbph8P/P2y/by9SpcMeJXGLUmXwfdmvqoFZS4bmuSJGD5P5A
4hGx9GmQEw6X/OH9eowDnrq65QEXtyCsy+iJtiOfB6HpM8ZSnOTz+tTveQFy
vVzQ21G05xEFzkgLest4M4Fj7E8nozgq5Hrwb/19cj3eGn5ZmsWc/O/lnrC/
sZ8DPrVlOZ7zTABWTTXZFxoyASNsp8olLUG4YZ5edoJ8f6ukul70OE6Bfeqj
v05mMoHPa+rxTlNyPR7X8+R/Sv58l2pA0x9yv+UcrlIZRAPIT2utU1oRdIrc
T3L6t5yO5IQL86tuMLQ5oIQPG+9vmgCUcdlkpqdDPs987VhHTClwl8rdfvv3
TLDzyWj+jvtUmBWY3rwtkgYSVqU+MFrDBX++otWy7uGAKY7c6lWSgvDk8eVQ
bnJ/fIzKE31TkgIdQreOvyKvz8ajrR4JRVQ4uCLglhi5nw/nXivb0kbuZ/r/
7IjR4YBdF7371rEKQsbH16eVyH8/7ZdmTO6SIJTfZjyxm9x/s1n8Wj8URYWO
q8sMd5DHy5x+0HPpPCdMG/dxP63AAa3WqukUuwvA/k6/CKPL5Pt5UECsHRSE
B+ZuFuacYIKe4/VRoocpUG6dVP8t8nm8N8ibjXqBCm8opCldeUT+PtL1A9d/
UmFZ2Wb66xAaeM7V4C6SzwljT8r8cCf3n8MxPhbPegVgTt++ul1aTIA8dFOB
dUdgXjoh9u/PLd4nVCgfyaHXHk0DIZ4n7F4pCMKnUTZSkUeZQCTDch1QJPd/
7WHZV8nrrSinYbfvFyrs2/JCr4s8nq95rn0Pn+OEspJj6xyOcMAK80rhSUFB
uJ372QZ58np64JKwPkiAArsGdyfbkuf7b2vn1+pUKpSrzzu6nzwe/VceVrLe
44S74n7sDzvMAT/07ZQYPUWBAs3HnlxNYwLko2vLxH+zqZdgHw0ytM6qGc4T
yEe7mu9z/TI9ifvZ5jx62woqxwjko+/GOf7JyfpLIF/8oEB+VZbBOPbFB+tW
H7uvzcS++GoXc3wxcwZ7YnETuZa0IhaIetUVp6VShVaww/4bBfX3fMj9GPvX
0qvk/hZ5Y+OwQoul7+wQeeNPFx2azJXZIPLGm1vM2Ck8LBB5Y6/8YhOZHQu4
b91z2eHF09xZgLxxxpps33960wB54zdiG3okJpkAeePJK30Cb8n9OPLGkiHB
PoGnmbhvbXhP3tQnnNy/Nak3iBtSoKJc7s+sFCYI2lwSN99MgRG6LxWvzk4C
5JPzXqUfYaseB8gn/9L/mqZBHcZ97NZiQsxItQcgn+xlnyNxKyAeIJ+s0iG7
p/pLGPbJwtLBWk92x2GfbJ1mF5JZmI372O/MvArZ6gtxH/uB2nYX44Zi3MeW
zotOPiH8vz72aXn/zMVQGu5jP+zherLoR8PeeVOpcHoXhYa9M7XPnPV2zjSB
vPNf97VZnanjuD+9QpTZW8xkhUcseRnZSyth+2T/BYFOdshu2W33cAUXnH1b
/9UakOf3U6nSAgs3HEvnPnBsPTtEHljxRYvK9Ol53KcunKXE2l6bAcgDr/eu
jxH2mwLIAzefd0sY82MC5IG5zvNLnSDvF9SnVuK5+bH+DhPIUK1Gf4pQ4O9U
74Y+cv/wgNoUMfWCAuMU3r2LIv/+QnTy7Lq1QvDm2YTbbtRJgDxxucb9aJ1N
DIA8ccTjVpWL637j3nXN8f0Fh3K+A+SJf4ZZZnDmfsCe+LvL/rdC+v5g54eR
K7/lROA9p3jBicx0EEs53Bv9gdw/b7ONlYzOA4cWOEQtFEXh5Y68bx2PCLDF
b6NaSpYo3Ht4pdGvgBIQlF/Bo6lEhfWZVpcumpHv+7SXp9dlUaGFcPzXVHK/
UWRZE2y5VwyecVSMNjegYb/s6vCouie1BPtlE55v6fuuzxLIL2ueG+l0JiYI
3SPeN9PyV8K5sGsPTrqwQ6aZjuRSOSfk6/+ZsZ18/iEPXMijcOF7/xRAHlj8
mlaLyify/XrbrI7tqAB0nSn+00Sur6IbtR4qOwhCwoPcyJqS98evxDFFpiA0
i4B7BMn9mIEj714/ZwqUNSJiL74g19sre0/yzlHguuq7hj9CJgHyxNJp3oID
JVlEcdyZT7cFRCG1jvs0oVYEJMosXSZDROHPNLVlg30lQPeu67CcMBVq535b
WqdOA2l98WOXn1PhzZRl6WVyvTGR/FozJioGF87cFHp7hwZUnwc7Fx7mhAyZ
9kbqRg4obGVbzqHBBSGHZNEFEQ7c2x41uBFqsW8KoN72B1OP+Cs3yfcvLY5r
AXsFoSC7VtUsuR7QjiuMPN1HgR81/H4ukuvdm9xXi6afyPXvQGqwGWCCzB+S
b+QPCsE7Gi+yHV0nwE7tFo7rjaLQuvrE9rHmEtDwj3/bZX0qfNNTnvXZkwbO
vg761N5EhSq+/f60cBpAnniT0rL5W/sSMHKTw0k1nhPe8Wlc4Cb3Y6i//YPX
psDyOxPUCNiPVdAFoKyygL4Uuf6VHdOyMfolCJe7j789E8sEFdIyXt/MKHDz
godE1lvyfvnPB9dznMg03P2C+GBgdOk1OxWWH4+deC5HA+UOKQcfPiTX/7Vn
7XaT+7H0+VMDipzk/rADegm70UDx0sndeZKcULlkX1cGGwdcdUtGQl2aC/rt
1Svz38EB3dW/t7w+JgD5J79IvnZkAs8DtN25WwShQNC993RyvZ9Op1vlbqHA
3Fjm593k+shvlnci5T0FnqJs6Eu/wARKHX8jGtTI83u6uO2gEw1YKoatWCij
wkBPh/PF5H7sn3lYNdHPCW2rTu4aPM4BszceaubjFIT79dRywsjnwUWXVbe5
V1BgzdCY3DVyPfxbwfh9yI8CX/htGrDwZYKI07Gxh95SIS3v4TYHcj3NlW4p
JK5xwnNXEsf4lTngyqivNc4BAnBj0ApxYfLnOX1WM9hUUxCeP3s3NJrcLwX2
Pbt1U4sCb+433PaXXJ/tJHblDpmQ++mhrseMABoAAo/N8waoUDB0p3D1MxpA
3ve69pF75udKgPnvy28uhHFCkyMRzVzkfqyXTal4vEgAbn53/cVacr/3YHHP
9mkTCtyteJbyMoEJ9A+l9VHuUuE+NTVeswga8B3yPGoqwgV565/8OrGPAwrs
2fiqfr0g3NNRdr+J/P0F+9Z90F5PgQk7fIEBeX3OzIWnPCmkQvrtDMt75P3h
NDjO7GrihPHcQUZndDmgx979LppLAvD8djEFR/L8OKYbpb1aEIS807P/bpHr
nZTEO60vkVToLeqvxU4er/kL2eJFpznh5UBTL0/yfPdpUOgeDwSgYkyBR5cJ
E3Trxv1zOiQIm1umFteT12MCtSflH6DAYrZsliZyP7aJN9ZG2pAK1x/457jB
nwZqWgIEj3eR61OTw5wnuT7Z/kk4sS6HE/K6PSg2J59HmRI566O6BKDZtKl8
Hnn/Ib/b8+y7TCRvKrE/NTGM4U+FdzbearlO7sdm1K7WvdkpCP2k+HwVyf3Y
Dxe3HVLyFKhUet3/Nnm9/TQLNrasp8Kk+6sUPF7SgNvf/dGvpzjhjfDuIIYG
B9wm0201yy8IhduFoneTx/Pw8cKdDnwUmKxasac/gwn4HkfPpyZToRDD9ON5
8ng4js0alzhwwkMsre8/QQ5on3FY7rseBQrniSQoke8DyPPydaquGNYsAVvf
8ylbBnJC1wzOsb/k+0RThp5+q7ggnD8/JOVB/nlRLhp0UXEK3JqdkZ9OHq+D
xuIsZ3OpUOR4wwZp8vm/JzHm0Wg9J2x4d6bXjnwe8CtE9F+YJverH0y6Rcjn
sYW7dNSLMCocF1j/IZj853dncNWXH6DA+p9l7A/J60E+4VyP3AdOGGTU3TlC
/vuHREV8M5rJ+7WKxb2TfN90p2z/m+tNhU/eGpwzIe+3z0XP3VNlBWFZpf7u
O+R/34z6XmdUlgJd759eeZM8ngeT/uxKH+GEU9wq0tFaHHDsHf8m9lWC8PVq
/hPnyN/n9NgGXcf3VPgnJVXWmTxeYTx/AqAVJxy6QimLUeWALCcstF9pU+Ca
axKJCeTxTd6ayasd/f/vR5uKP5PvC8dyx//QNgnC7LBpvyPk9elxfDrAYxMF
fkn5xtVO/j55245c/tLJCQW/s3d+Je+n+9FWj8TYyffRcYrbNPnnd3/aNLUy
hnx/H3p6Spf888Vd854oHqHALS9l3GbJ/UGmzL9sviJOmPljj5wreb0hv1vS
qSBcP5pJTGnJqMsEUuH74q5TGuT9o9t3ns9oFwUeUAkc0yZ/f9PktLwRIUG4
zeeamCL551VtWfe+P40KXT8wJFeTfx7yuk0SWgwRUIK9LlPTt/Wm7xxAXndb
2cqsYtMh3Cs3tDBiBc6NuFdeVbQibt0Hd+x1u8/xzs/n1mCvu7tbzn2PdyP2
umIGc83LEs3Y6177U2W57Pcde92/mQl/7/bUYq8LbBLtNxcWYq/b27xrdzjN
HXvdDzOW45+XCrDXLb3tOgeKK7HXFeBke3ueVo+97kRI+4ZjV+jY6z62qm54
qVyNva5u8OH50q2F2Os2RBo+XVP6hEBed+vQCyFvzWoCed1Nc/SfD962E8jr
1hwPK17nPEAgrysvbr11jxoD98rpYIjN2YyJe+UBUdc3LtOnca98lc9Qb9bl
adwrbzv4kT5TNYl75X/F7Tu69ozhXjn7xhpYPd+Pe+XJCxbs8bbNuFcecPyH
s3fXU9wrt/Jg1U2MbMBeN2gPv0bTqV/Y68bsWvx75t0Q9rpn3lva3tg8jr0u
x07XvYn3J7HXvZvSQNhJMLHXfbI9qGR9/QT2ui+Wkv+ZS41hrztjVJWyZbEP
e939+VY/fb5WYK+7PVg84MFEEUBed/WafXp6LjXY68Zf4mrWNP6Gve7+My4H
fY82Yq+7Mr/jaFBEM/a6n5Rl+p6vb8VedypHnEmVaMNeVzh8ukQtrw173fFf
dcQAow173RSaDfBtb8Ne16QrfU8BxyTulRvVz2emDvXgXvnbjSNm/8j9LvK6
dpffhRetJQjUK9dgmTs1nP+NQL3yXcNc/B86mgjUK9dY8GK+0m0iUK9cLPO8
dT7nNwL1ykN+Ft+ZMiwnUJ/8+U+p80kwDffJH7ucz5DRL8V9csO0i8+XzWqB
Ftvlnpc2/0Cy0NOdlZl03Ct/cP3t6h/P63CvnJJx+oeVWRnulcu675f7dCgZ
98qvzPs/KbieRyBv/CTJJytT4zuBvPG8iFZW7cceAnljYWuVp273Jwjkja8Y
H82iTU0RyBsvB9VaPRyaxv3y1doxdrFaU7hfvjM8XEf8+zjujV+ueDn2/O1v
7IMfer8v2Kkwhn1w4MbyJ43uE9gHH2NpXSvI+j8fDD9cSTqf/z8frM8Yv/ra
ehz74H+3b58K8P+LfXCZyvxT5S8d2AfPyoTkWSdmAuSDdYSv7Rk1KMc+WKvK
IGShn4598Abn8OrF4Qbsg6NGbD1p/k3YB3fw/sleZ92CfbDf6dyG9ORW7INd
X+x7+tS5DftgW6Wdm/51tWEf7K19MrxkrA374NS4E+vNxadx71xChN7xx2wA
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
5CAL8eKyb4t4M/+wwPWyLIOWQDHs4/yqFMF6BuLH9/z0kN6W9QXx4HzSpxeV
L9EQD75OR9r1fjMN/G5/LCv/kYyVuyoN8OLvm2jltGYr7AHF+477sKcaoAGc
UwjLpgNVWn5gnUITDAiYPKjLHgatWc08EiKNkE+9oebe9jkg3mH/JvVIDZDa
5Rd5YQsXHHt2iG6HP5/dn74uFB5aAMDoy9dgzUrEn//bVCRXnMiGBH/ev1fP
pvcZGxI8uQP9J5ljwEI8uenzD3Usub88+Ts1kYJvkizEi9+kO731/4zPQ7vT
fZNtyFjzofkItTEa4sddjqzOiOyiIX7c78qCtFLMDOq7/2FP99DXDKG+++gn
c0enrnrUdz+d+KZh2CkCEn33UZ44khxPNST67g/cukdOFTRCou8+pP0iV1+s
CRJ990bx9Zn+eg2Q6LsbKqTlnVlbBYmeu0zHSf2BlGDUc9+lTy96cCUP9dxH
9h4aqDYoBxbjbX/Ohc+BI/86jrxn1KC+e6DPDekxHQrqu9/ds6u2LKMc9d09
BOafZt/PRn33099DfetDIiDBvzc+cdtxrbUSEvy7pkH/BWZqGyT49w8Kx73l
n05Agn8fLiaNtEZPQoJ/fz0VszO3jY1674UnHHlz9Nmo9y5MiaQHBbNQn73a
calzZWcP4tUHCrtq3KRHEK++LC3laC9+Lyd49XkLu/utz1iIV7ft+yc5cs0k
4tXp1fSzqh+ZiFeXPkzfbhQ1hnh1dQltw0WVXsSrN7k5H3RKK0K8uqLT5nIV
rAAQvLrpGVLwkFgV4tXPdv7crxBWh3j1a6PjfvkujYhX/9gdRdqT1YR49eUR
W3I7t7cgXv16v7PyARUa4tXtL1fsloM0xKtzo7Nmxhg0xKvPmYRlORsxUR++
n5Eq7N7RifrwV4uvxxzTykd9+NOR8T69coWQ6MP/2D678YRKPcxalmG1wqsf
9D7N/m3MpEKiF7/pkugl741USPTid52t1lFMqoVED77KWXGN97401IPvWvJ6
UHmkGIjOb7Ts9p8FAsuiDy6WVgGHzmxVsVAO6OD96W2fTUG9ePF4Xb/jutWo
F+9yyUKIlFGMevElT2RKM3USAMHfX1eaET2Wz4QEf//huqKSsTQbEvz9OodT
t0704OvrP/7+Dd1P+LvMFCR4+WSGSs2fyHHEy29eYTPZE8dEvPz6+fvPbyz/
y8vnGmkfsItlIV6+Vm5l2Yw2A/HyHka/lmv0DSJePurAwfYyfP8geHnT8u/5
pge/AoKXP3LQ64SJYCni5a3bF0I97H8hXp6ueeG1iHQD4uW3yzp62XyhIl7+
5J7VVeJ+zYiXn1r2PWJ/Tgvi5W88S0qQ9qEhXl4/jT9Dv5uGePmOVcWzm/D9
jujH/xY901GyMhN6vl3RZ3iuCzjqpW25dagWtnckZUf59IH5B8c7n3lQ4UjC
w+mc4EHwe6XlGoccKvy6p6KUl3cWZGc83pa6rRL8uWy0VFuMA57MMGRKPSig
19J+un71PDjF/OFo5VSD+vK/uKemuDalgODxOVGaUoa3piDB48e0DIUZTrLh
++VeI5coQlhJ+wF3azgFCb7+ReeSnutCTMTXS9abzgi2sRBfn/g88LzSOAtE
rSPr9/qKYfMxo4LlPEzE2xdteSjPsPiM+PkXLpFhRqdoiJ/3Guy202uggS9l
MdRT78hYlknP5Y/4eeciVdi0170HPNp0tTQ7rgGGav7g3rlPBxUvmLItG5tg
WumpcFraMEhOnp1RM26EjtB9sFBkDlyYtHgTsawGTFuqmg6v5IJvNpVC2vEU
4Ls16XrCpgUgyAfrVT5VIl7/RmFxrXg4GxK8/uBm9k/rBDYk+PuYdKxVTJWF
+PteM/p5Sbm//H3YizdSyTtZiK9v8ysNEIulASzu5nOKFRmzCS4PvIDPOwRv
b/l+2P9rLw04V6hctefvAz5RO5iHlalQZ71J6OTSQfCrImvjzXEqjPwc5nKk
YQ7E+/J1Be6nAHebk7S39VywpuxsVn9XDeL15WNH9fVH2ZDg74OLmSERP1iA
m7e/0m6MhFm5Lqq8FfzL47cJf1WY9fuKePtohuxkSwUNHHvbpl8WRMbst6k8
m8afv2aOudTiZDfYotQX+opVDzfK7UzaP98PvjdV3aXi5ycPUNgipjIMVFNf
bRWCjXBfx6/1x6pnwYH3/OMiN6tB2huXvAUKB4g9eXLXE99/CJ5/NGmzf+wZ
/Pn+x/P3HjuxPLmSDQk+32uq3HAzeRLYa6vJBGiIYcMNeRzGDRYI9WInix4h
Y9On9qsN4/fjUgNuAKmRjL3aNnBECL8/H57ctoLK0w/Wp1/TzC6gwqhtP84+
xOeGTn4H4Q5XKlRU4ItQNOMAq3CrGBl8PRwxuScpZDUPDMh3fmp0VyPe3+ek
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
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{500, 636, 599, 537, 978, 845, 740, 659, 598, 1001, 
            868, 763, 682, 1025, 892, 787, 1053, 920, 1080}}], 
           
           PolygonBox[{{575, 539, 486, 487, 488, 489, 945, 812, 707, 625, 564,
             527, 976, 843, 738, 657, 596, 1000, 867, 762, 681, 490, 946, 813,
             708, 1029, 896, 626, 1009, 876, 1065, 771, 1045, 912, 1076}}], 
           
           PolygonBox[{{452, 600, 451, 3410, 502, 956, 823, 718, 637, 576, 
            453, 921, 788, 683, 601, 540, 503, 957, 824, 719, 638, 577, 454, 
            922, 789, 684, 602, 541, 504, 455, 923, 790, 685, 603, 542, 505, 
            958, 825, 720, 639, 578, 456, 924, 791, 686, 604, 543, 506, 959, 
            826, 721, 640, 579}}], 
           PolygonBox[CompressedData["
1:eJwV0Lkvg2EABvCPohIJEomEhSKpIyIxmB2TYyorg6AmDAYWCRLUIJEYsKrj
L3DtjtXdGplcG4PB8fuGX57neb83/drGhicTE7lBEOQwT6XxZVxxzQ233JGO
BEEVh+6MECeXM2ftPOhLdHPv/q6zao7sUep5sBO86JtEOLc7yOjRvCBY0Jvl
sv2pT1JAj/0kB/nUi91J6Tv6j5yhJPwe3r0nYxyH73BvTh/T32WSuLNfu0yu
2a2ywc7o/dTZr3aRXLJb5Jb9rU/TZBfJCrkh22Se5xd6Z/huO2sXykV7Jfxf
5RRRyp2vy17nz3KIL73E+aqe1n/lLKXhf+M37csaTjxL8qGP86c3ktUHeNO3
yefS7uJRT9EX3vNZB85qObXHaaKAR8/+AZLqQm8=
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{575, 599, 574, 635, 717, 822, 955, 499, 536, 573, 634,
             716, 821, 954, 498, 535, 572, 633, 715, 820, 953, 497, 534, 571, 
            632, 714, 819, 952, 496, 533, 570, 631, 713, 818, 951, 495, 532, 
            569, 630, 712, 817, 950, 494, 531, 568, 629, 711, 816, 949, 493, 
            530, 567, 628, 710, 815, 948, 492, 529, 566, 627, 709, 814, 947, 
            491, 597, 658, 739, 844, 977, 528, 671, 752, 857, 990, 565}}], 
           PolygonBox[CompressedData["
1:eJwV0L1Pk1EYhvG3tTA0qQNTETStBQcHEgcmERcVJr9GUNES3CyDiU4OqE1c
mKh1Eqr8Afi5K3QRFIyFrsoAEpxsY2Jiq/7OcOW+r+c8Pc17svnpy4V4FEUx
lFBVfuEzYg6OYRJvceRAFC1iIyzzfuTxBofNn2Pd2Sgvoo7TZlX8M3/C93CJ
19Gn38Br9PJn+GTvoLyLVrjTWRNX9G2M6B2ygCYe8hnZmYiiLT0jh/kK/rpr
kM/paZmUx+Vt+Rtl+wO8qCfld56TF/kWcvwEn9W7ZDu8h7zJf+A6vyfjZq/C
+8geXsFH/12WPWYpeQd/wjfaeyRT5g19XP+Gc3pC3kIDD/gmTunLaLvvMd/F
Bb6Jo3oLU/o+JvSXOKQvYM1vKvwnxvhXnNXvo4Yh/j68s70S38F5XkNWv4YX
6ObzWLV3Jrw3vuCk2bvwXeYZfhVLSJs9xQfz/zIxT5Y=
            "]], 
           PolygonBox[CompressedData["
1:eJwV0klLVWEABuCjCWoOZAiBCWFoWY7loj+QTVCZorWr3Gk5gptatAmC0oxA
WjTsyhxKcVs57SzNffc6a22cVmpu6vkWD+/7fudwved48+pbqpsToyhKYIQc
4yhrDjJlBa1MUnQgioZZda3GfsESV5zNkqGfpYUJTjsbYsX91XY3i1x29pN0
/QzhC4xzytlnlt3/0f5Lvf2HG/pzFrhkz5Cmv2OLW/Yc5XqivMc2TfYYhfon
lnz2YfmQKCmKel3r1LP0Pf2u/psq/aU84jxVtrNLl/PHMtX5vH5cXrSnOWif
s3v0HJkui2WH3Oet6+X2k/DsctMukDftOGXhfdvderZMkIWyUW5x3/VHMsnZ
qH5MnrQHWfRcr2Susyz5gH98cN8zecj5rn5HX+O6niLb2KHTnuOC/iM8n/6G
DersGKXhhyIb2Azv2P7GCX2ABd/hvb3D7fA74Vr4+8SptL+Tor9mnVr7FyV6
I1/DO7H7mfd5V+2nxDjvbIpkvZgGvpDvrC/8/90fJ8Z/PW5bUA==
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1WWYVVUYBWA6pLtjSKW7pEEaVGzBoGwlVUwEFQExEAQMFAUVAZG0kBC7
u7u7u33X44931vr2nZl7zz77zBSMnzz6tMKFChXa40tyf1++l7cxhWF05Djr
pdipX8I4inCAtR/kGqYynE4U5UCv/ShvZxoj6EwxijPa6z/JtUxnJF0owUFe
+1muYwaj6Mrx1kuzS5/HeEpysLVf5HpOz3XQjROs78VufT4TKMUh1n6Vd3BG
riM/Z60GT+tL6c6J5jI8oC9gIuebG/KKfiOlOdT8m9zAmcw178072Ye8h16T
Z/Rl9OAkc1n26JeG3poP9UnM0gt4Vb9JDmClvlh25svsrRyea9QPk7/nmuSd
8hq5L/cyM/dN7sMW3jWvloPYweh8blmLTTyba5P92M5y85WyA3fxWc6IHJr3
0E+W5XhQv172ZqG+ULbho5whLtAb8VquiSV6F77Sy3C4/ofcyFk5B8y0Vpvn
ck305BRzeR7SL8u5oCxHWPtTbuLsnAt6car1CjysX55zQTmOtPaX3Mw5ORf0
pjxjvPa33MK5ucf0oQJjvfaP3Mp52Xv6UpFKVKYKValGdWpQk1rUpg51qUd9
GtCQAhrRmCY05Sjv96/clvOXfaIfeXgr8oh+Rc4rzTg6D3PuVc5R9iX7aa7D
8/q19GeyuRKP5v7mTDLb3JjX9ZtpzjH5+8DduYfM01vwXvYwe63X5QX9Ohbp
HflcH8AUvTKP6StkHxbl3sm2fJwzxBy9CW/kveVAVulXy67cw9fmtXJEnss8
Z+ZjZRE25HtyfbIn9zHbPF+2ZCvvm2+Rg9nJmNx7WY8Xc34ZyFRzFR7Xr8q5
0dvxSc4fF+pNeVNfJfdjtb5UduMbfZ0cmedOHyeL5tnMM5l9kr2Yoy+QrdjG
B+Zb5RB2MTbnT9ZnMy+ZV8r+3M+KfD7ZKfeHL8xr5DB253OZp8mqbOQJ8w2y
L4tzbmR7Ps1zwkV6M97KPrFM7863egvG68Wyt9mDnM08A+YGvJzfzSCmm6vx
pL4kZ5WWTLBWnO15r5xVBtOKidZL5Lr0i3PuGEJr2tCWdrRnku8ryQ59bs4A
Q5lhrTpP5dzkjOd3mZvzdvaW5XoPvtPXy1GF//8f2MH8H2mfzJ0=
           "]]}, Annotation[#, "Charting`Private`Tag$832292#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1ne8z1Ucx/Hf5dou2bIikZEKWSGFipK4GZVVKCujkJDVREtRRkULmUXL
HlGysldZJXtmJ6Pn59Efr8d7nHO/v+/3fL/nPG6xtt1TuyUlEoleaRKJ1JRE
4rywIG0iUQW/6gbgbvykH6vLjWnyYyiEC/qFuqpYJw/EPfhZP06XB9Plx1EY
F/Ur8KE+L2boWqAI/tEv0lXDenkQauMX/Ue6fJgpt8QNuKRfrLsTG+TBqIPl
+pX4WJ8fX+laoSj+1S/RVcdGeQjqYpV+vO56fC23RjFskhtiPz8Kl81bKtfA
Jvkl3Is98uP4m/8Eq82bIBfALLkNjvBP4TJ/IzbzD+MA/z6u+Jsf5ZrYLL+M
03xXJOM+eS9tgdN8SnIiMZT/NJ6LPo8UFNR/QNe43ieRUUQ327w0dID8BH+U
Po2SuityTvqWXJ4Wl7fwjVBcPihnpq/Kt8b1413yPVFGzhxrTUfSSvSq317G
34Wi8hbz09Mh8iv8GdoN6XC//AdtiTP8Z7HOfB9kw1rX+pQWwjfGnsRN2Co3
xiF+NK6Zt1yuha3yq6iHX/Wf6QrjW7ktSiCBdcY+j/XBd3I7lEQS1hs7hw3Y
iE3YjC34wvwb8L157XFzrG3sE93d2Ma/hvpxn+ZPjHXAD/JTKIVtcioO82OQ
NvaNfA+28xms10t8Ofq6fJbvjvR4QP6TtsJZPps5w/jP4zuiLyB73IffnkSL
YU78hnkD473zx2gH3BzvS85F35Yr0NLydv4R3CQfkbPQ1+Tb6NjYr3wvlJWz
xN6ho2hlmmx8BV87flveIWekL8tD+XO0BzLEOaB/lz6o30db4xyfXT+c/4K/
SvviulgbzzSZ3oi5xjrgON8R1/gy2ME3wVF+HNLFOSLXwW/8MDSIea71ZXzj
mCd3RNn4VvGbsQL0d7oTuzAl1gPz9Z1wS7wnrNTVxe/8cDyE3eZP1ZXAArkz
ysV15aY4xn8Y6xLnj3wvdvJvoCH+ktvgPD8xzhjXmxb7FQvlLjjBd0Ii9mXc
K22G4/xHyBRnUZwd2MW/ifP8s8gY54+8P84DXOCvs+Zv8JNiP9F+yBF7Tz+a
7nUP0+Obie9ft8i8ZDpIfoY/STujlC6J5qbv0Ir0NuM7+eaxJvIJOWt82/Lt
9GP5Et8bt8hZaQH6Pq0SZ4zxNXFexLuXd8fz0Vfkt/gL9DlkQj79e7SR/gB9
Ehf5HPo3+cmx//n+fE784blmxH1jsbGuOMV3QZq4P3kXfRQn+fGxH7BWroc9
/NtojINyW/zDfxn71LVnyqWxRO6G8vHscTbp6se68u8gNfaA+V/pymCp3B0V
kBLnVez9uF9+BB6J78T8r2Mf4ke5ByrGmRDv1ljBWAN6EIdwGLNijbHM2LO4
I/ZbnHmxD/En/y6a4JDcDpf4KTji72fL5bA89pZ1HBxrz/8d30E8qy4tzUNH
0DtoLeOVYl/Ij+EUPyG+OWyQG2Af/x6a4qjf+Sa+a/wk90TleIdxdhn7Ns4i
/Jzm//9fqiBnnAXGvot3hhVyb1SN8y32i7Hv9eXxi/w8qiF3fLvGftBXwEq5
D+5EnvgWjM2J7xir5BdQHXnjmY3NjWfEarkvaiAfThubp6+ENXI/1ER+nDE2
X18Za+X+uAvNcT026h/CX/xINMNhuT3+5aciybq+KOdCYX4MrUrPuvZ/DipB
9g==
           "]]}, Annotation[#, "Charting`Private`Tag$832292#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
           "]]}, Annotation[#, "Charting`Private`Tag$832292#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1nfclmMYxvGnokVWymiQUMgsJBHKKKsyUlZKNFRmUhTKaCkKLbNpVbT3
QhkNUYhoUEaEkpX4Hn/8PudxHNfz3M/9XuO83iqtOjftVKRQKMwuWig0LFEo
XFyqUHirZKFwBtbxz6Ov7Fe+Kyqiu6yTbDV9HQpYKGuES+ST+Tr4in8B/WS/
8fehEu6XdZatoa9HESzKb+NS+RT+THzNv4gH8lxcZmyqvC7W8y+hR76TMVyO
xmiCprgCV+IqXI1muAbN0SKf97xpnnUWNvAvoyeuzXOMTZefjY38KDyI6/J8
YzPk9bCJH42HcD1uyG8bn2nsHHzDj8HDuF3+qewGFMVi2Y15T/ks/lx8y49F
f9l2vhsqo5fsDtln9I0ohkn8QXieftv4CLoo+vAr1dNxPD1XPRI78Fr+VvUi
tMz8qLPznup5eY56HHZis/Fx6j7YiqeNr1HPwr8YZ3xAniv/Tu2ufqjWxF84
jJ+Rmv2DsdlTagP09t071c9lLbGUPhF70G+qB+MF+h2fG0kXQ1/+BNyUNeXn
0PWxhR+PR3CXfG0+gz3xrqxV1l8+l2+Qd+VfwaNonX1hbJ78fHzPv4rHcHP2
i7H58gvwA/8aHsfd8i9krVAcS2RtsrfkC/gL8SP/OvrgHvmXstYokb9Xdkv2
oXwhfxG28m/gCdnvOSc4HH1lXWTr6JtREu/Jnst8oR9/Im7N3uUX0Q3xU+aF
3xfP8BP4gVlb+gFUQT/ZvbKv6DYohbf4Q/Ai/X56AL0n+vMfqbVxEj1PPQqv
021zNujFdKOsG10DP2eu1f3wE5419ql6NiYaG6T+kXlXe6jL1Fr4G0fwM9XD
0z+y39JT1PNRpLT38f2u9Nc5N+otmZe8W56J0vxk9VBsw0v8WvVcfJDepBbH
APkq9QycTM9Xj8YbdLuca/pt+mJs4yfhSdmffE9UxQDZfbL1WQfslbMga5+e
IH+HvwS/ZH/x+2No9jr/VM4L/SCW06fmvNKz1CoYn16oXoAnfL6bukG2WW2b
Ncp7532wNz9FrYBf8DL/Rc42CuZsWXoqXQI/5nnGP1brYBdO4Reo1bIHMSH9
T22IDulX6ruyS3O26ONztnMu1AMwLPuHH5w1pB/CUZid9cQr9EDj3emNmV+U
wVS+IkZlDtLb6ZIYyNfEbbKW/BL6MvzGT8YQ2T/8wzgag2T3yzbR7bEPVqS3
y0phEF8LHWU38Uvpy7Gdn5J1zX0j/0bWAfuml+a+Sx+Rv8c3xg5+atYud5D8
27wj9ssZyf2W3iJ/n2+C3/lpmZfcMfLNeQfsn72XuyH9JvuSb4qd6R18WQzn
P1PrYTemG3s66yXvhWoYkvtJtoXuhAOyrrkz0pfkH/JX4A9+Rr6fO0v+nawz
yuKT9OT0Jfky/kr8yc/EM7nD5N/LbseBWJ1+i1vly/mr8Bc/C8+il/wH2R0o
hzXpm2grX8Ffjb/52Xm+7F++N6pjqKx39ih9J8qnb6SPop18Jd8M//Bz8nuZ
G/4RHINhuQ9kW+m7cFDmMPd4+gKe5E9Fl5xR/iP6GuxKD+YPxAh+Lj+U/o9+
FMdieO6O9DP6bhyMaXwljKY/z/8E9F54KvOqnonT6IVq9fQ++l6f60Cvoptj
CX1C5kE+QS2HnzEyz1TPyXtgnvFhOc+ZXzyWPZ7n5yzgOH6OWhXb8Sq/Xr0Q
RfWAEbnf8mz5FvUe9YOcfRxCT1crYwz9pVofa/N/TPoLBmft1bo4nV6kHoNJ
dFefu43+mG6B3fxEvjye4+fzw+kieJyvgZG5U/ltWQ8cmp6VfoqO8k/4a/Ef
vyD3Xu7U9LfMISrkPWVjZWUwhK+NxfSxeJPepDZCMX9/N5/9H+tNjOs=
           "]]}, Annotation[#, "Charting`Private`Tag$832292#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
           "]]}, Annotation[#, "Charting`Private`Tag$832292#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"LQR feedback solution\"", TraditionalForm], 
     PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1c\"", "\"u1c\"", "\"x1c\"", "\"\[Theta]dot1c\"", 
       "\"xdot1c\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8648376866338243`*^9, {3.864837721244707*^9, 3.8648377460817285`*^9}, {
   3.864837800602215*^9, 3.8648378151965265`*^9}, {3.864837882180011*^9, 
   3.8648379006680717`*^9}, {3.864917359659708*^9, 3.8649173767071624`*^9}, 
   3.864919300876232*^9, {3.864919337508316*^9, 3.8649193485657187`*^9}, {
   3.8649194958228164`*^9, 3.8649195287531037`*^9}, 3.864920239187001*^9, {
   3.864921249563326*^9, 3.8649212721359825`*^9}, {3.865342438564925*^9, 
   3.865342509036396*^9}, {3.8653477634896584`*^9, 3.865347782729508*^9}, {
   3.8653478492912292`*^9, 3.865348013067874*^9}, {3.86535368874548*^9, 
   3.8653536939258237`*^9}, {3.8653538219528966`*^9, 
   3.8653538384286294`*^9}, {3.865356737715789*^9, 3.8653567547593403`*^9}, 
   3.8653569273791575`*^9, {3.8653569657139025`*^9, 3.86535700435555*^9}, 
   3.86535703851363*^9, {3.8653570911278105`*^9, 3.865357172559778*^9}, {
   3.865357210731576*^9, 3.865357232535606*^9}, {3.8653573843380775`*^9, 
   3.865357407024825*^9}, {3.8653574402422056`*^9, 3.865357560552746*^9}, {
   3.8653576116883984`*^9, 3.8653576483786693`*^9}, {3.865358188766919*^9, 
   3.8653581946510377`*^9}, {3.865358314589696*^9, 3.8653583435974226`*^9}, {
   3.8653592266591263`*^9, 3.865359247679407*^9}, {3.865443792998208*^9, 
   3.865443801104616*^9}, 3.8654440595339727`*^9, {3.8654487336752205`*^9, 
   3.8654487504428587`*^9}, 3.8654492637776985`*^9, 3.8654493114634485`*^9, {
   3.865965582539151*^9, 3.8659656451141005`*^9}, {3.8659657927138066`*^9, 
   3.8659658125544496`*^9}, {3.865965935915921*^9, 3.8659659557085795`*^9}, {
   3.8659659882041674`*^9, 3.8659660068222017`*^9}, 3.8659660863577166`*^9, 
   3.865966459016309*^9, {3.865966598898487*^9, 3.865966735717648*^9}, {
   3.865966781206072*^9, 3.865966802194347*^9}, {3.8659670998539696`*^9, 
   3.8659671350117044`*^9}, {3.86596737708314*^9, 3.865967416340561*^9}, {
   3.8659680911663313`*^9, 3.8659680979531565`*^9}, {3.8659697724146223`*^9, 
   3.865969803929524*^9}, 3.865969850623562*^9, {3.865969890971634*^9, 
   3.8659699272989936`*^9}},
 CellLabel->
  "Out[4123]=",ExpressionUUID->"4d8b7e6b-94d5-46dc-a3ca-1f33c52fd754"]
}, Open  ]],

Cell["Initial Conditions which were not solved", "Text",
 CellChangeTimes->{{3.865357567824423*^9, 3.8653575802374525`*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"babf6ace-7c59-4428-a267-e74cf670ecf8"],

Cell[BoxData[{
 RowBox[{"{", 
  RowBox[{"0", ",", 
   RowBox[{"-", "1.7176561578501914`"}], ",", "1.9865343349458087`", ",", 
   RowBox[{"-", "1.0173496185733697`"}]}], "}"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{"0", ",", 
   RowBox[{"-", "1.3903695773492997`"}], ",", "1.2310181542446177`", ",", 
   RowBox[{"-", "0.6104047394312593`"}]}], "}"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
  "0", ",", "0.08036047668264246`", ",", "1.3496547583989287`", ",", 
   "0.6830225774268248`"}], "}"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{"0", ",", 
   RowBox[{"-", "0.6909899189385493`"}], ",", "0.6897150795907763`", ",", 
   RowBox[{"-", "0.7182564346929077`"}]}], "}"}]}], "Input",
 CellChangeTimes->{{3.8653575500541015`*^9, 3.8653575502740326`*^9}, {
  3.86535820377712*^9, 3.8653582040260406`*^9}, {3.8659655274867916`*^9, 
  3.865965528011625*^9}},ExpressionUUID->"b9cd0173-657c-4653-9d1b-\
b1d172b2172d"],

Cell["Plot the timing wrt n for a fixed initial condition", "Text",
 CellChangeTimes->{{3.86491957909173*^9, 3.864919591628652*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"39878c2c-e942-4347-a752-27bba723a924"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"TestTiming", "[", 
    RowBox[{
    "n_", ",", "ICs_", ",", "order_", ",", "A_", ",", "maxIter_", ",", 
     "maxError_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "uMax_", ",", 
     "maxCount_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "t1", ",", "t2", ",", "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", 
       "\[Theta]dot1a", ",", "u1a", ",", "\[Lambda]1ff0", ",", 
       "\[Lambda]2ff0", ",", "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", 
       "x1c", ",", "xdot1c", ",", "\[Theta]1c", ",", "\[Theta]dot1c", ",", 
       "u1c", ",", "J", ",", "K", ",", "InitGuess"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"t1", ",", 
         StyleBox[
          RowBox[{"{", 
           RowBox[{
           "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",",
             "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
            "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "J", ",", "K"}], "}"}],
          FontWeight->"Plain"]}], 
        StyleBox["}",
         FontWeight->"Plain"]}], 
       StyleBox["=",
        FontWeight->"Plain"], 
       StyleBox[
        RowBox[{"AbsoluteTiming", "[", 
         RowBox[{"ffCartPendulum", "[", 
          RowBox[{
          "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", 
           "order", ",", "maxIter", ",", "maxError", ",", "uMax", ",", 
           "maxCount"}], "]"}], "]"}],
        FontWeight->"Plain"]}], 
      StyleBox[";",
       FontWeight->"Plain"], 
      StyleBox[" ",
       FontWeight->"Plain"], "\[IndentingNewLine]", "t1"}]}], 
    "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ICs", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ICs", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", "0.5299673880107454`"}], ",", 
     RowBox[{"-", "1.8812572134750898`"}], ",", 
     RowBox[{"-", "0.6808113420271384`"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ICs", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "1.684020641268611`", ",", "1.9548442211134827`", ",", 
     "1.8410749066439154`"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{"\[Tau]", "=", "5"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Tau]1", "=", 
    RowBox[{"\[Tau]", "*", "1.25"}]}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"A", "=", "0.2"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"order", " ", "=", " ", "4"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"maxIter", " ", "=", " ", "30"}],
   FontWeight->"Plain"], ";", 
  StyleBox[
   RowBox[{"maxError", " ", "=", " ", "0.01"}],
   FontWeight->"Plain"], ";", 
  RowBox[{"uMax", " ", "=", " ", "2"}], ";", 
  RowBox[{"maxCount", " ", "=", " ", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n1", " ", "=", " ", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n2", " ", "=", " ", "50"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data1", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"TestTiming", "[", 
      RowBox[{
      "n", ",", "ICs", ",", "order", ",", "A", ",", "maxIter", ",", 
       "maxError", ",", "uMax", ",", "maxCount", ",", "\[Tau]", ",", 
       "\[Tau]1"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "n1", ",", "n2", ",", "5"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data2", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"TestTiming", "[", 
      RowBox[{
      "n", ",", "ICs", ",", "order", ",", "A", ",", "maxIter", ",", 
       "maxError", ",", "uMax", ",", "maxCount", ",", "\[Tau]", ",", 
       "\[Tau]1"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "n1", ",", "n2", ",", "5"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data3", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"TestTiming", "[", 
      RowBox[{
      "n", ",", "ICs", ",", "order", ",", "A", ",", "maxIter", ",", 
       "maxError", ",", "uMax", ",", "maxCount", ",", "\[Tau]", ",", 
       "\[Tau]1"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "n1", ",", "n2", ",", "5"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"{", 
   RowBox[{"data1", ",", "data2", ",", "data3"}], "}"}], "]"}]}], "Input",
 CellChangeTimes->{{3.86491975170458*^9, 3.8649200747844825`*^9}, {
   3.8649201193449864`*^9, 3.8649201277452536`*^9}, {3.864920161157383*^9, 
   3.8649201804041224`*^9}, {3.8649202316614504`*^9, 
   3.8649202570341964`*^9}, {3.8649202887668743`*^9, 3.8649203111236*^9}, {
   3.8649203998797293`*^9, 3.864920406429599*^9}, 3.864920690003351*^9, {
   3.8649207565047197`*^9, 3.8649207687887225`*^9}, {3.865443836032448*^9, 
   3.8654439001889315`*^9}, {3.865443943847969*^9, 3.8654439516324787`*^9}, {
   3.865444005309313*^9, 3.8654440126169777`*^9}, {3.865444117090568*^9, 
   3.865444129382637*^9}, 3.865444205232381*^9, {3.8654487745611453`*^9, 
   3.865448794117893*^9}, {3.8654493307732735`*^9, 3.8654494059632287`*^9}},
 CellLabel->
  "In[529]:=",ExpressionUUID->"00a37dc2-62ae-4dae-b415-9099fdf1317c"],

Cell[BoxData[
 TemplateBox[{
  "FindRoot", "cvmit", 
   "\"Failed to converge to the requested accuracy or precision within \\!\\(\
\\*RowBox[{\\\"30\\\"}]\\) iterations.\"", 2, 536, 78, 17537846464978137374, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8654494324137697`*^9},
 CellLabel->
  "During evaluation of \
In[529]:=",ExpressionUUID->"5f8a5464-0d41-4643-86d9-5a474f66675f"],

Cell[BoxData[
 TemplateBox[{
  "FindRoot", "cvmit", 
   "\"Failed to converge to the requested accuracy or precision within \\!\\(\
\\*RowBox[{\\\"30\\\"}]\\) iterations.\"", 2, 536, 79, 17537846464978137374, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.86544943250574*^9},
 CellLabel->
  "During evaluation of \
In[529]:=",ExpressionUUID->"61249423-53f3-4341-b42b-28905fdcb51d"],

Cell[BoxData[
 TemplateBox[{
  "FindRoot", "cvmit", 
   "\"Failed to converge to the requested accuracy or precision within \\!\\(\
\\*RowBox[{\\\"30\\\"}]\\) iterations.\"", 2, 536, 80, 17537846464978137374, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.865449432596711*^9},
 CellLabel->
  "During evaluation of \
In[529]:=",ExpressionUUID->"71210bf8-97a2-4891-9bae-2b3e69e25e54"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"FindRoot\\\", \
\\\"::\\\", \\\"cvmit\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 536, 81, 17537846464978137374, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8654494326077075`*^9},
 CellLabel->
  "During evaluation of \
In[529]:=",ExpressionUUID->"9182efb8-2063-4f21-859c-5ac68d53cb28"],

Cell[BoxData[
 TemplateBox[{
  "FindRoot", "cvmit", 
   "\"Failed to converge to the requested accuracy or precision within \\!\\(\
\\*RowBox[{\\\"30\\\"}]\\) iterations.\"", 2, 537, 82, 17537846464978137374, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8654494656951265`*^9},
 CellLabel->
  "During evaluation of \
In[529]:=",ExpressionUUID->"25e5b81f-4b99-4b81-a8a3-1ff595149ebb"],

Cell[BoxData[
 TemplateBox[{
  "FindRoot", "cvmit", 
   "\"Failed to converge to the requested accuracy or precision within \\!\\(\
\\*RowBox[{\\\"30\\\"}]\\) iterations.\"", 2, 537, 83, 17537846464978137374, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.865449465787097*^9},
 CellLabel->
  "During evaluation of \
In[529]:=",ExpressionUUID->"5b3d6c64-53c2-4b05-b322-0489d19cea1c"],

Cell[BoxData[
 TemplateBox[{
  "FindRoot", "cvmit", 
   "\"Failed to converge to the requested accuracy or precision within \\!\\(\
\\*RowBox[{\\\"30\\\"}]\\) iterations.\"", 2, 537, 84, 17537846464978137374, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8654494658770685`*^9},
 CellLabel->
  "During evaluation of \
In[529]:=",ExpressionUUID->"b1b81a18-8bf4-4768-bbbc-e9163bdc3dfc"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"FindRoot\\\", \
\\\"::\\\", \\\"cvmit\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 537, 85, 17537846464978137374, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8654494658890643`*^9},
 CellLabel->
  "During evaluation of \
In[529]:=",ExpressionUUID->"7d1f2029-9202-4b15-980c-dc01c3ca0cf7"],

Cell[BoxData[
 TemplateBox[{
  "FindRoot", "cvmit", 
   "\"Failed to converge to the requested accuracy or precision within \\!\\(\
\\*RowBox[{\\\"30\\\"}]\\) iterations.\"", 2, 538, 86, 17537846464978137374, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.865449499825212*^9},
 CellLabel->
  "During evaluation of \
In[529]:=",ExpressionUUID->"a13e0c36-bc27-4d53-98d0-5b9930ce5d37"],

Cell[BoxData[
 TemplateBox[{
  "FindRoot", "cvmit", 
   "\"Failed to converge to the requested accuracy or precision within \\!\\(\
\\*RowBox[{\\\"30\\\"}]\\) iterations.\"", 2, 538, 87, 17537846464978137374, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.865449499915183*^9},
 CellLabel->
  "During evaluation of \
In[529]:=",ExpressionUUID->"6d69dc45-e658-4fac-bbc2-f17d7a4f7b22"],

Cell[BoxData[
 TemplateBox[{
  "FindRoot", "cvmit", 
   "\"Failed to converge to the requested accuracy or precision within \\!\\(\
\\*RowBox[{\\\"30\\\"}]\\) iterations.\"", 2, 538, 88, 17537846464978137374, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8654495000051546`*^9},
 CellLabel->
  "During evaluation of \
In[529]:=",ExpressionUUID->"a2b52471-6ed9-4a46-a21d-972094df2e5a"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"FindRoot\\\", \
\\\"::\\\", \\\"cvmit\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 538, 89, 17537846464978137374, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8654495000161505`*^9},
 CellLabel->
  "During evaluation of \
In[529]:=",ExpressionUUID->"6bdb736a-7181-462a-a95e-09c7bd8faed6"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
     LineBox[{{1., 0.5801234}, {2., 1.3931291}, {3., 2.0573704}, {4., 
      2.879207}, {5., 3.7488331}, {6., 4.619808}, {7., 5.5689755}, {8., 
      6.5179724}, {9., 5.9206332}}]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
      NCache[
       Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
     LineBox[{{1., 0.6558979}, {2., 1.4056329}, {3., 2.007635}, {4., 
      2.7655901}, {5., 3.4780036}, {6., 4.4364822}, {7., 5.361985}, {8., 
      6.3502002}, {9., 7.6669694}}]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
      NCache[
       Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
     LineBox[{{1., 0.9342993}, {2., 1.422374}, {3., 2.0171202}, {4., 
      2.7667796}, {5., 3.6646655}, {6., 4.4807373}, {7., 5.515782}, {8., 
      6.3943324}, {9., 7.7256335}}]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 9.}, {0, 7.7256335}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8654440903271246`*^9, 3.8654441524952445`*^9, 
  3.865444998743621*^9, 3.8654490003749323`*^9, 3.865449534716054*^9},
 CellLabel->
  "Out[539]=",ExpressionUUID->"c48e2050-8d10-451f-b104-0d216a786bc6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"tempfile", " ", "=", " ", 
  RowBox[{"FileNameJoin", "[", 
   RowBox[{"{", 
    RowBox[{"$TemporaryDirectory", ",", "\"\<saved.wl\>\""}], "}"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Save", "[", 
  RowBox[{"tempfile", ",", 
   RowBox[{"{", 
    RowBox[{"data1", ",", "data2", ",", "data3"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8654450594542084`*^9, 3.8654450658101754`*^9}, {
  3.865445097341092*^9, 3.865445128001289*^9}},
 CellLabel->"In[84]:=",ExpressionUUID->"b093ee39-dd32-444d-9179-98c9db25b0cb"],

Cell[BoxData["\<\"C:\\\\Users\\\\Administrator\\\\AppData\\\\Local\\\\Temp\\\\\
saved.wl\"\>"], "Output",
 CellChangeTimes->{3.8654451302915535`*^9},
 CellLabel->"Out[84]=",ExpressionUUID->"e6ed3ba0-0036-4061-9283-289e12e8d71d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Get", "[", "tempfile", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"data1", ",", "data2", ",", "data3"}], "}"}], ",", 
   RowBox[{"PlotLegends", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<data1\>\"", ",", "\"\<data2\>\"", ",", "\"\<data3\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotLabel", "->", "\"\<Time of Computation vs N\>\""}], ",", 
   RowBox[{"AspectRatio", "->", 
    RowBox[{"2", "/", "3"}]}], ",", 
   RowBox[{"ImageSize", "->", "400"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.865445145808591*^9, 3.8654451951498137`*^9}, {
  3.865445286170705*^9, 3.865445373405808*^9}},
 CellLabel->"In[98]:=",ExpressionUUID->"5d6d656e-289b-47f2-843f-38ea3bde5006"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGBQB2IQDQEf7LW3avw9t4DVASrgYPLBI7GZSwDK53CQigrm
b5/90h7CF3CIOntfs3PiOyhfxEF+YZqH6NEPUL6Ewy6BgDb//Z+gfBkHk9Pr
DfqqP0P5Cg46yz9PPzNfCGq+kkOEdLL6HhcYX8XB49382JIb/FC+mkPSs49Z
+X0w92g45GgHBgb8hfG1HLYIzmT2S4DxdRx+mjS9WNIF4+s5GLdw3D11H8Y3
cDBQZjuttE0Qyjd0uHOkvuCLPsx+IweZnSeZ38gJQ/nGDhdFt23YoSgK5Zs4
yM3LD1XWhfFNHWxezdNmSJGA8s0cfGNuPLHqF4fyzR0CNn/T1VSVgvItHPa5
Ft44vkUayrd0+CKvq3lJAca3crgwkdH14g05KN/agdF+pmm6tzyUb+Pwmzfv
2JG3ilC+rcPxiJhL7K5KUL6dg3vi2e1fzsH49g6P8wTWim5VhvIdHFhT90/e
fUQVwm9wcNi1+1zbn8lqUHlHB4eTl1eUnVCHyjs6ZAaX9ufIaUDlnRz2S76+
yDVLCyrv5MA04/q2s381ofLODge2z3dKidaFyjs7dPj8FAh5qO0AABhsm6c=

         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGBQB2IQDQEf7POfublryLA6QAUcUjUX346RE4DyORzeLFT6
nLvspT2EL+DwrdLQMqrqHZQv4lC51Ty45vsHKF/Cwcqk7HK5xicoX8ahxN4n
/UzmFyhfweHNOZXfhv1CUPOVHG74tmRw7BKE8lUc9l3IvfxyFT+Ur+YQtnjT
HrYTMPdoOMgqzFh83BymXsvhwsG+qD3dMHkdB4sNaetkn8H4eg5GJROfz18L
U2/gsIzrdTbTRBjf0EH+4AvfBc3CUL6Rg5ebZo3gChjf2OFASdR2x1gxKN/E
IWK2QEupqziUb+qguNbwRcsCCSjfzMGq5cHyBGYpKN/cwSqu8YWnpwyUb+EQ
sdv8Qq+TLJRv6eDuGXnhqAeMb+UgWSYx+d8xeSjf2iG0+7F06goFKN/GYZK7
2jSvb0pQvq2DboHc52XJylC+nUNcyWGGy/yqUL69Q/u7xSnNk1SgfAeHXvbo
N9881SD8BgcH8bz1u/VXQvkMjg7OPFoJH6+pQ+UdHVINXmdN19eCyjs5+L+7
9LDmKpTf4OTAqZ/2YY6eNlTe2eHfoTYmQU9dqLyzg9TkLRffF+o5AABIN5nF

         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGBQB2IQDQEf7EUTr/xvzmR1gAo4GE7ZYbxDSQDK53Awf+2U
VLjupT2EL+Cwh3uKSETDOyhfxOHLQSOzks8foHwJh03Z10pmaH2C8mUcontO
M5n/+QzlKzjsqW//+9NTCGq+koOb0VeWy6cEoXwVh+5Jrxn9gmD2qzlcyF85
5cU6GF/DQUagJp0/HaZey0GsWWdDzm+YvI7Du/33Kz9fhfH1HM7M/SK5+geM
b+CwUDAn5r8czH5Dh0ItjiuBPcJQvpFDy9SQ7Ue4RaB8YwdtntsJny6IQvkm
Dm9PVSwtS5CA8k0dhK4brtuhAeObObzazrU3cp8UlG/uMDPmGt+EmdJQvoWD
W7mAdbCADJRv6VBglt73rVIWyrdy+BP5aPv1HAUo39phh0PTo+MxML6NQ0OW
uB6bkiKUb+vwyc3Re1OgEpRv5xCuFs6z6YwylG/v0J3EbPxhqyqU7+Cgtaig
fXollN/g4OATv2/1lXfqUHlHB45u/XqtYii/wdFh46P1KlektaDyTg5Jii0T
V+zUhso7OZx9/fjPikxdqLyzw/Edjx6t+KMDlXd2sHhbfMyx1sABAPyroAY=

         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[
       Rational[2, 3], 0.6666666666666666], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Time of Computation vs N\"", TraditionalForm], 
     PlotRange -> {{0., 39.}, {0, 16.4892849}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"data1\"", "\"data2\"", "\"data3\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8654451469612217`*^9, 3.865445196024532*^9, {3.865445351728739*^9, 
   3.865445374046602*^9}},
 CellLabel->"Out[99]=",ExpressionUUID->"903ec73a-0648-4868-ae92-a47c15aafc30"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Min", " ", "=", " ", 
    RowBox[{"-", "\[Pi]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Max", " ", "=", " ", "\[Pi]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]dotMin", " ", "=", " ", 
    RowBox[{"-", "2"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{"\[Theta]dotMax", " ", "=", " ", "2"}],
   FontWeight->"Plain"], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"xdotMin", ",", "xdotMax"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Init", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]Min", ",", "\[Theta]Max"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]dotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]dotMin", ",", "\[Theta]dotMax"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "xdotInit", ",", "\[Theta]Init", ",", "\[Theta]dotInit"}], 
     "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Tau]", "=", "5"}], ";", 
   RowBox[{"\[Tau]1", "=", 
    RowBox[{"\[Tau]", "*", "1.25"}]}], ";", 
   RowBox[{"A", "=", "0.2"}], ";", 
   RowBox[{"order", " ", "=", " ", "4"}], ";", 
   RowBox[{"maxIter", " ", "=", " ", "30"}], ";", 
   RowBox[{"maxError", " ", "=", " ", "0.01"}], ";"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n1", " ", "=", " ", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n2", " ", "=", " ", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"TestTiming", "[", 
      RowBox[{
      "n", ",", "ICs", ",", "order", ",", "A", ",", "maxIter", ",", 
       "maxError", ",", "\[Tau]", ",", "\[Tau]1"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "n1", ",", "n2", ",", "5"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", "data", "]"}]}], "Input",
 CellChangeTimes->{{3.864920781117711*^9, 3.864920799837621*^9}},
 CellLabel->
  "In[421]:=",ExpressionUUID->"21dbe1b5-6466-4952-9587-d4bdc27c8f51"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBmIQDQEf7F/GfJsw1YTFASrgMG3Vv6CA1xxQPoeDwszM
MMFMNihfwGHtZoHLJTZcUL6Ig9p73W8rXsL4Eg662Wv4TpnyQPkyDroqCSWV
yjC+gsMZnjK5AglOKF/JYYPeDgOZTG4oX8VhUpTGzDlaML6aw7Ybk36Fr4a5
R8Nh0mmVfp817FC+lkOGT3mvzzOYvI5DW2TGcxNvmH49h1ddyXkc+jD7DRzi
jjE3SG7ihfINHfbkfjgfFi4A5Rs5eHy5fqForSCUb+zQknZ9r+hLYQcA9SxG
5w==
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 2.3894566722222272`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 19}, {2.3894566722222272`, 4.977622}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8649218432941856`*^9},
 CellLabel->
  "Out[433]=",ExpressionUUID->"b8dc6135-5b4b-4819-8d59-1be07f569c48"]
}, Open  ]]
},
WindowSize->{1440., 747.75},
WindowMargins->{{-6, Automatic}, {Automatic, -6}},
FrontEndVersion->"13.0 for Microsoft Windows (64-bit) (February 4, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"dbf89052-0529-4a5a-9aea-3964104c39a4"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 271, 6, 51, "Text",ExpressionUUID->"e1d1232c-86cc-4804-8aba-9808e8088f82"],
Cell[832, 28, 82982, 2028, 2407, "Code",ExpressionUUID->"8daba21d-9510-4b30-8c25-b5a0584418ca"],
Cell[83817, 2058, 844, 23, 28, "Input",ExpressionUUID->"2e460f69-71dd-40ea-9e96-aaa585df6372"],
Cell[84664, 2083, 225, 3, 51, "Text",ExpressionUUID->"74e82f71-7d3c-4f7a-b18d-cc3109df4131"],
Cell[CellGroupData[{
Cell[84914, 2090, 12184, 315, 523, "Input",ExpressionUUID->"c47d3c4e-60ca-4c63-8b5c-ced31cd89cdf"],
Cell[97101, 2407, 2195, 31, 32, "Output",ExpressionUUID->"58ecfd7c-101d-4023-8fad-090147ccea27"],
Cell[99299, 2440, 544, 12, 28, "Message",ExpressionUUID->"0970ef69-8e36-414c-8e16-4ad654b4fcbc"],
Cell[99846, 2454, 542, 12, 28, "Message",ExpressionUUID->"844150da-a75a-4a78-a0b1-c46eb57315d0"],
Cell[100391, 2468, 544, 12, 28, "Message",ExpressionUUID->"7c3073bc-35f2-4926-8d21-5e16194c52e7"],
Cell[100938, 2482, 588, 12, 28, "Message",ExpressionUUID->"5edb9d34-0969-4827-a90b-856811a42a86"],
Cell[101529, 2496, 75406, 1331, 206, "Output",ExpressionUUID->"4a890a2a-ef44-433a-9290-f67721899863"],
Cell[176938, 3829, 76708, 1352, 208, "Output",ExpressionUUID->"95ed6231-7f10-4093-8776-fa69491b02b1"],
Cell[253649, 5183, 86158, 1504, 206, "Output",ExpressionUUID->"4d8b7e6b-94d5-46dc-a3ca-1f33c52fd754"]
}, Open  ]],
Cell[339822, 6690, 220, 3, 51, "Text",ExpressionUUID->"babf6ace-7c59-4428-a267-e74cf670ecf8"],
Cell[340045, 6695, 939, 20, 86, "Input",ExpressionUUID->"b9cd0173-657c-4653-9d1b-b1d172b2172d"],
Cell[340987, 6717, 228, 3, 51, "Text",ExpressionUUID->"39878c2c-e942-4347-a752-27bba723a924"],
Cell[CellGroupData[{
Cell[341240, 6724, 5606, 150, 314, "Input",ExpressionUUID->"00a37dc2-62ae-4dae-b415-9099fdf1317c"],
Cell[346849, 6876, 413, 10, 28, "Message",ExpressionUUID->"5f8a5464-0d41-4643-86d9-5a474f66675f"],
Cell[347265, 6888, 410, 10, 28, "Message",ExpressionUUID->"61249423-53f3-4341-b42b-28905fdcb51d"],
Cell[347678, 6900, 411, 10, 28, "Message",ExpressionUUID->"71210bf8-97a2-4891-9bae-2b3e69e25e54"],
Cell[348092, 6912, 458, 10, 28, "Message",ExpressionUUID->"9182efb8-2063-4f21-859c-5ac68d53cb28"],
Cell[348553, 6924, 413, 10, 28, "Message",ExpressionUUID->"25e5b81f-4b99-4b81-a8a3-1ff595149ebb"],
Cell[348969, 6936, 411, 10, 28, "Message",ExpressionUUID->"5b3d6c64-53c2-4b05-b322-0489d19cea1c"],
Cell[349383, 6948, 413, 10, 28, "Message",ExpressionUUID->"b1b81a18-8bf4-4768-bbbc-e9163bdc3dfc"],
Cell[349799, 6960, 458, 10, 28, "Message",ExpressionUUID->"7d1f2029-9202-4b15-980c-dc01c3ca0cf7"],
Cell[350260, 6972, 411, 10, 28, "Message",ExpressionUUID->"a13e0c36-bc27-4d53-98d0-5b9930ce5d37"],
Cell[350674, 6984, 411, 10, 28, "Message",ExpressionUUID->"6d69dc45-e658-4fac-bbc2-f17d7a4f7b22"],
Cell[351088, 6996, 413, 10, 28, "Message",ExpressionUUID->"a2b52471-6ed9-4a46-a21d-972094df2e5a"],
Cell[351504, 7008, 458, 10, 28, "Message",ExpressionUUID->"6bdb736a-7181-462a-a95e-09c7bd8faed6"],
Cell[351965, 7020, 2207, 53, 249, "Output",ExpressionUUID->"c48e2050-8d10-451f-b104-0d216a786bc6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[354209, 7078, 550, 12, 48, "Input",ExpressionUUID->"b093ee39-dd32-444d-9179-98c9db25b0cb"],
Cell[354762, 7092, 228, 3, 32, "Output",ExpressionUUID->"e6ed3ba0-0036-4061-9283-289e12e8d71d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[355027, 7100, 766, 17, 48, "Input",ExpressionUUID->"5d6d656e-289b-47f2-843f-38ea3bde5006"],
Cell[355796, 7119, 11321, 253, 337, "Output",ExpressionUUID->"903ec73a-0648-4868-ae92-a47c15aafc30"]
}, Open  ]],
Cell[CellGroupData[{
Cell[367154, 7377, 2638, 76, 257, "Input",ExpressionUUID->"21dbe1b5-6466-4952-9587-d4bdc27c8f51"],
Cell[369795, 7455, 1663, 45, 236, "Output",ExpressionUUID->"b8dc6135-5b4b-4819-8d59-1be07f569c48"]
}, Open  ]]
}
]
*)

