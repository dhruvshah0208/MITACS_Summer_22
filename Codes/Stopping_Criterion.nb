(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    278672,       5654]
NotebookOptionsPosition[    277683,       5632]
NotebookOutlinePosition[    278089,       5648]
CellTagsIndexPosition[    278046,       5645]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
Packaged the Stochastic approach in one single function and it seems to work \
well\
\>", "Text",
 CellChangeTimes->{{3.8648378409682493`*^9, 3.864837871408472*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"e1d1232c-86cc-4804-8aba-9808e8088f82"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Remove", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
  RowBox[{"(*", 
   RowBox[{"ICs", " ", "-", " ", 
    RowBox[{"Initial", " ", "Conditions"}]}], " ", "*)"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Error", " ", "while", " ", "cosntraining", " ", "u"}], " ", 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ffCartPendulum", "[", 
    RowBox[{
    "ICs_", ",", "n_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "A_", ",", 
     "order_", ",", "maxIter_", ",", "maxError_"}], "]"}], ":=", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "InitGuess", ",", "error", ",", "x", ",", "dist", ",", "xdot", ",", "f",
        ",", "\[Theta]", ",", "\[Theta]dot", ",", "\[Lambda]1", ",", 
       "\[Lambda]2", ",", "\[Lambda]3", ",", "\[Lambda]4", ",", 
       "\[CapitalDelta]t", ",", "bcs", ",", "eqns", ",", "sv", ",", "froot", 
       ",", "xff", ",", "xdotff", ",", "xff0", ",", "xdotff0", ",", 
       "\[Theta]ff0", ",", "\[Theta]dotff0", ",", "uff0", ",", "\[Theta]ff", 
       ",", "\[Theta]dotff", ",", "uff", ",", "\[Lambda]1ff0", ",", 
       "\[Lambda]2ff0", ",", "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "i", 
       ",", 
       RowBox[{"xGuess", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          SubscriptBox["xGuess", "i"], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}]}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"\[CapitalDelta]t", "=", 
       RowBox[{"\[Tau]", "/", "n"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"{", 
         RowBox[{
         "x_", ",", "xdot_", ",", "\[Theta]_", ",", "\[Theta]dot_", ",", 
          "\[Lambda]1_", ",", "\[Lambda]2_", ",", "\[Lambda]3_", ",", 
          "\[Lambda]4_"}], "}"}], "]"}], ":=", 
       RowBox[{"{", "\n", "\t", 
        RowBox[{"xdot", ",", "\n", "\t", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}],
           " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
               ")"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", "\[Lambda]2"}], 
              ")"}]}], "+", 
            RowBox[{"A", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", "\n", 
         "\t", "\[Theta]dot", ",", "\n", "\t", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}],
           " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{"1", "/", 
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"A", " ", 
                   RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
                 ")"}]}], ")"}]}], 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[Lambda]2"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
              ")"}]}], "-", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "-", 
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", "\n", 
         "\t", "0", ",", "\n", "\t", 
         RowBox[{"-", "\[Lambda]1"}], ",", "\n", "\t", 
         RowBox[{
          FractionBox["1", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"A", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "3"]], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["A", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"A", " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "-", 
               "\[Lambda]4"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "5"]}], "+", 
            RowBox[{
             SuperscriptBox["A", "3"], " ", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
              ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "6"]}], "-", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             SuperscriptBox["A", "2"], " ", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
              ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "4"], " ", 
             RowBox[{"(", 
              RowBox[{"4", "-", "A", "+", 
               RowBox[{"A", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}], "-", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "\[Lambda]2"}], "+", 
               RowBox[{
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}], "+", 
               RowBox[{"3", " ", "\[Lambda]2", " ", "\[Lambda]4", " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"A", " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "-", 
               "\[Lambda]4", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "A", " ", 
                   SuperscriptBox["\[Lambda]2", "2"]}], "+", 
                  SuperscriptBox["\[Lambda]4", "2"]}], ")"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox["A", "2"], " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2", " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], 
            "+", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "3"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", "A", " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "+", 
               RowBox[{"2", " ", "\[Lambda]4"}], "+", 
               RowBox[{
                SuperscriptBox["\[Lambda]4", "2"], " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"2", " ", "A", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"A", " ", 
                   SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], 
                  "-", "\[Lambda]4"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], 
            "+", 
            RowBox[{
             RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[Lambda]2"}], " ", "\[Lambda]4"}], "-", 
               RowBox[{"A", " ", 
                RowBox[{"(", 
                 RowBox[{"\[Lambda]2", "-", 
                  RowBox[{
                   SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
                 ")"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"A", " ", "\[Lambda]4", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]}], 
           ")"}]}], ",", "\n", "\t", 
         RowBox[{
          RowBox[{
           RowBox[{"4", " ", "/", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"A", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A", "-", "2"}],
              ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{"A", " ", "\[Theta]dot", " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}]}], ")"}]}], 
          "-", "\[Lambda]3"}]}], "\n", "}"}]}], ";", 
      StyleBox["\[IndentingNewLine]",
       FontWeight->"Plain"], "\n", 
      RowBox[{"InitGuess", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       StyleBox["xGuess",
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       StyleBox["=",
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       RowBox[{
        StyleBox["Table",
         FontWeight->"Plain"], 
        StyleBox["[",
         FontWeight->"Plain"], 
        RowBox[{
         RowBox[{
          StyleBox["If",
           FontWeight->"Plain"], 
          StyleBox["[",
           FontWeight->"Plain"], 
          RowBox[{
           StyleBox[
            RowBox[{"i", " ", "!=", " ", 
             RowBox[{"-", "1"}]}],
            FontWeight->"Plain"], 
           StyleBox[",",
            FontWeight->"Plain"], 
           RowBox[{
            StyleBox[
             SubscriptBox["xGuess", 
              RowBox[{"i", "+", "1"}]],
             FontWeight->"Plain"], 
            StyleBox[" ",
             FontWeight->"Plain"], 
            StyleBox["=",
             FontWeight->"Plain"], 
            StyleBox[" ",
             FontWeight->"Plain"], 
            RowBox[{
             SubscriptBox[
              StyleBox["xGuess",
               FontWeight->"Plain"], "i"], 
             StyleBox[" ",
              FontWeight->"Plain"], 
             StyleBox["+",
              FontWeight->"Plain"], 
             StyleBox[
              RowBox[{"\[CapitalDelta]t", "*", 
               RowBox[{"f", "[", 
                SubscriptBox["xGuess", "i"], "]"}]}],
              FontWeight->"Plain"]}]}], 
           StyleBox[",",
            FontWeight->"Plain"], 
           RowBox[{
            SubscriptBox[
             StyleBox["xGuess",
              FontWeight->"Plain"], "0"], " ", "=", " ", 
            RowBox[{"{", 
             StyleBox[
              RowBox[{
               RowBox[{"ICs", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "3", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "4", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "3", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "4", "]"}], "]"}]}],
              FontWeight->"Plain"], 
             StyleBox["}",
              FontWeight->"Plain"]}]}]}], 
          StyleBox["]",
           FontWeight->"Plain"]}], 
         StyleBox[",",
          FontWeight->"Plain"], 
         StyleBox[
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"-", "1"}], ",", 
            RowBox[{"n", "-", "1"}]}], "}"}],
          FontWeight->"Plain"]}], 
        StyleBox["]",
         FontWeight->"Plain"]}]}], 
      StyleBox[";",
       FontWeight->"Plain"], "\[IndentingNewLine]", "\n", 
      RowBox[{"bcs", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"x", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"xdot", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"x", ",", " ", "n"}], "]"}], "==", 
          RowBox[{"Subscript", "[", 
           RowBox[{"xdot", ",", " ", "n"}], "]"}], "==", "0"}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]dot", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]dot", ",", " ", "n"}], "]"}], "==", "0"}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]", ",", " ", "n"}], "]"}], "==", "\[Pi]"}]}], 
        "}"}]}], ";", "\n", 
      RowBox[{"eqns", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Join", "[", 
         RowBox[{"bcs", ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Thread", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], "==", 
              "\n", 
              RowBox[{
               RowBox[{
                RowBox[{"1", "/", "2"}], " ", "\[CapitalDelta]t", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"f", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}], "]"}], "+", 
                  "\n", 
                  RowBox[{"f", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], 
                   "]"}]}], ")"}]}], "+", "\n", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Subscript", "[", 
                  RowBox[{"x", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"xdot", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]dot", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]1", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]2", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]3", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]4", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}]}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
        "]"}]}], ";", "\n", "\n", 
      RowBox[{"sv", " ", "=", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", "\n", 
             "\t\t\t\t\t", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "7", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "8", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", "1"}], 
        "]"}]}], ";", "\n", "\n", "\[IndentingNewLine]", 
      RowBox[{"froot", "=", 
       RowBox[{"FindRoot", "[", 
        RowBox[{"eqns", ",", "sv", ",", 
         RowBox[{"MaxIterations", "->", "maxIter"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"error", " ", "=", " ", 
       RowBox[{"Norm", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                SubscriptBox["x", "n"], ",", 
                SubscriptBox["xdot", "n"], ",", 
                SubscriptBox["\[Theta]", "n"], ",", 
                SubscriptBox["\[Theta]dot", "n"]}], "}"}], " ", "-", " ", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], ",", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                SubscriptBox["x", "0"], ",", 
                SubscriptBox["xdot", "0"], ",", 
                SubscriptBox["\[Theta]", "0"], ",", 
                SubscriptBox["\[Theta]dot", "0"]}], "}"}], " ", "-", " ", 
              "ICs"}], ",", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Thread", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   SubscriptBox["x", "i"], ",", 
                   SubscriptBox["xdot", "i"], ",", 
                   SubscriptBox["\[Theta]", "i"], ",", 
                   SubscriptBox["\[Theta]dot", "i"], ",", 
                   SubscriptBox["\[Lambda]1", "i"], ",", 
                   SubscriptBox["\[Lambda]2", "i"], ",", 
                   SubscriptBox["\[Lambda]3", "i"], ",", 
                   SubscriptBox["\[Lambda]4", "i"]}], "}"}], "-", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    FractionBox["1", "2"], " ", "\[CapitalDelta]t", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}], "]"}], "+", 
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "]"}]}], 
                    ")"}]}], "+", 
                   RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}]}], ")"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
           "]"}], "/.", "froot"}], ",", "\"\<Frobenius\>\""}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{"error", " ", ">", " ", "maxError"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"InitGuess", " ", "=", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}]}], "}"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          StyleBox["xGuess",
           FontWeight->"Plain"], 
          StyleBox[" ",
           FontWeight->"Plain"], 
          StyleBox["=",
           FontWeight->"Plain"], 
          StyleBox[" ",
           FontWeight->"Plain"], 
          RowBox[{
           StyleBox["Table",
            FontWeight->"Plain"], 
           StyleBox["[",
            FontWeight->"Plain"], 
           RowBox[{
            RowBox[{
             StyleBox["If",
              FontWeight->"Plain"], 
             StyleBox["[",
              FontWeight->"Plain"], 
             RowBox[{
              StyleBox[
               RowBox[{"i", " ", "!=", " ", 
                RowBox[{"-", "1"}]}],
               FontWeight->"Plain"], 
              StyleBox[",",
               FontWeight->"Plain"], 
              RowBox[{
               StyleBox[
                SubscriptBox["xGuess", 
                 RowBox[{"i", "+", "1"}]],
                FontWeight->"Plain"], 
               StyleBox[" ",
                FontWeight->"Plain"], 
               StyleBox["=",
                FontWeight->"Plain"], 
               StyleBox[" ",
                FontWeight->"Plain"], 
               RowBox[{
                SubscriptBox[
                 StyleBox["xGuess",
                  FontWeight->"Plain"], "i"], 
                StyleBox[" ",
                 FontWeight->"Plain"], 
                StyleBox["+",
                 FontWeight->"Plain"], 
                StyleBox[
                 RowBox[{"\[CapitalDelta]t", "*", 
                  RowBox[{"f", "[", 
                   SubscriptBox["xGuess", "i"], "]"}]}],
                 FontWeight->"Plain"]}]}], 
              StyleBox[",",
               FontWeight->"Plain"], 
              RowBox[{
               SubscriptBox[
                StyleBox["xGuess",
                 FontWeight->"Plain"], "0"], " ", "=", " ", 
               RowBox[{"{", 
                StyleBox[
                 RowBox[{
                  RowBox[{"ICs", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", 
                  RowBox[{"ICs", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], ",", 
                  RowBox[{"ICs", "[", 
                   RowBox[{"[", "3", "]"}], "]"}], ",", 
                  RowBox[{"ICs", "[", 
                   RowBox[{"[", "4", "]"}], "]"}], ",", 
                  RowBox[{"InitGuess", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", 
                  RowBox[{"InitGuess", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], ",", 
                  RowBox[{"InitGuess", "[", 
                   RowBox[{"[", "3", "]"}], "]"}], ",", 
                  RowBox[{"InitGuess", "[", 
                   RowBox[{"[", "4", "]"}], "]"}]}],
                 FontWeight->"Plain"], 
                StyleBox["}",
                 FontWeight->"Plain"]}]}]}], 
             StyleBox["]",
              FontWeight->"Plain"]}], 
            StyleBox[",",
             FontWeight->"Plain"], 
            StyleBox[
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"-", "1"}], ",", 
               RowBox[{"n", "-", "1"}]}], "}"}],
             FontWeight->"Plain"]}], 
           StyleBox["]",
            FontWeight->"Plain"]}]}], 
         StyleBox[";",
          FontWeight->"Plain"], "\[IndentingNewLine]", 
         RowBox[{"sv", " ", "=", " ", 
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", "\n", 
                "\t\t\t\t\t", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "7", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "8", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", "1"}], 
           "]"}]}], ";", "\n", "\n", 
         RowBox[{"froot", "=", 
          RowBox[{"FindRoot", "[", 
           RowBox[{"eqns", ",", "sv", ",", 
            RowBox[{"MaxIterations", "->", "maxIter"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"error", " ", "=", " ", 
          RowBox[{"Norm", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Flatten", "[", 
              RowBox[{"Join", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   SubscriptBox["x", "n"], ",", 
                   SubscriptBox["xdot", "n"], ",", 
                   SubscriptBox["\[Theta]", "n"], ",", 
                   SubscriptBox["\[Theta]dot", "n"]}], "}"}], " ", "-", " ", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], 
                ",", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   SubscriptBox["x", "0"], ",", 
                   SubscriptBox["xdot", "0"], ",", 
                   SubscriptBox["\[Theta]", "0"], ",", 
                   SubscriptBox["\[Theta]dot", "0"]}], "}"}], " ", "-", " ", 
                 "ICs"}], ",", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"Thread", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[CapitalDelta]t", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}], "]"}], "+", 
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}]}], ")"}]}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}],
               "]"}], "/.", "froot"}], ",", "\"\<Frobenius\>\""}], "]"}]}], 
         ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\n", "\n", "\n", 
      RowBox[{"xff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"xdotff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Theta]ff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Theta]dotff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]1ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]2ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]3ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]4ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      "\n", 
      RowBox[{"uff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}], "^", 
                  "2"}]}]}], ")"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], 
                RowBox[{"Cos", "[", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}]}], "-", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}]}], ")"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      "\n", 
      RowBox[{
       RowBox[{"xff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xdotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "\[Pi]"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"uff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"uff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", "\n", 
      RowBox[{"{", 
       RowBox[{
       "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
        "uff", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
        "\[Lambda]3ff0", ",", "\[Lambda]4ff0"}], "}"}]}]}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"testSwingUp", "[", 
    RowBox[{
    "ICs_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "uff0_", ",", "A_"}], "]"}],
    ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eq", ",", "init", ",", "x", ",", "xdot", ",", "\[Theta]", ",", 
       "\[Theta]dot", ",", "xs", ",", "xdots", ",", "\[Theta]s", ",", 
       "\[Theta]dots", ",", "t", ",", "J"}], "}"}], ",", "\n", 
     RowBox[{
      RowBox[{"eq", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"x", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"xdot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"xdot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"uff0", "[", "t", "]"}], "+", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
             RowBox[{"A", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]dot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"uff0", "[", "t", "]"}], "+", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
            ")"}]}]}]}], "}"}]}], ";", "\n", 
      RowBox[{"init", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"xdot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]dot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
        "}"}], "=", 
       RowBox[{"NDSolveValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"eq", ",", "init"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
         RowBox[{"Method", "->", 
          RowBox[{"{", 
           RowBox[{"\"\<DiscontinuityProcessing\>\"", "->", "None"}], 
           "}"}]}]}], "]"}]}], ";", "\n", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"{", 
       RowBox[{
       "xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots", ",", "uff0",
         ",", "J"}], "}"}]}]}], "]"}]}], "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{"CalculateSMatrix", "[", 
   RowBox[{
   "x1a_", ",", "xdot1a_", ",", "\[Theta]1a_", ",", "\[Theta]dot1a_", ",", 
    "u1a_", ",", "\[Tau]_", ",", "A_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x", ",", "L", ",", "RHS", ",", "xdot", ",", "\[Theta]", ",", 
      "\[Theta]dot", ",", "u", ",", "K", ",", "S", ",", "soltn", ",", "Af", 
      ",", "Bf", ",", "Q", ",", "fx", ",", "xState", ",", "R", ",", "Mf", ",",
       "x2dot", ",", "\[Theta]2dot", ",", "S0", ",", "sol2", ",", "t"}], 
     "}"}], ",", "\n", "\n", 
    RowBox[{
     RowBox[{"xState", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
       "}"}]}], ";", "\n", 
     RowBox[{"x2dot", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{"u", "+", 
         RowBox[{"A", " ", 
          RowBox[{"\[Theta]dot", "^", "2"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"A", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ";", "\n", 
     RowBox[{"\[Theta]2dot", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{"u", "+", 
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ")"}]}]}], 
     ";", "\n", 
     RowBox[{"fx", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
       "xdot", ",", "x2dot", ",", "\[Theta]dot", ",", "\[Theta]2dot"}], 
       "}"}]}], ";", "\n", 
     RowBox[{"L", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", "2"}], "*", 
       RowBox[{"u", "^", "2"}]}]}], ";", "\n", 
     RowBox[{"Af", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{"fx", ",", "xState"}], "]"}]}], ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{"For", " ", "nD", " ", "stuff", " ", "use", " ", "Grad"}], 
      "*)"}], "\n", 
     RowBox[{"Bf", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"fx", ",", "u"}], "]"}]}], " ", ";", 
     RowBox[{"(*", 
      RowBox[{"For", " ", "1", "D", " ", "stuff", " ", "use", " ", "D"}], 
      "*)"}], "\n", 
     RowBox[{"Q", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{
        RowBox[{"Grad", "[", 
         RowBox[{"L", ",", "xState"}], "]"}], ",", "xState"}], "]"}]}], ";", 
     " ", 
     RowBox[{"(*", " ", 
      RowBox[{"Fix", " ", "this"}], " ", "*)"}], "\n", 
     RowBox[{"Mf", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{"L", ",", "u"}], "]"}], ",", "xState"}], "]"}]}], ";", "\n", 
     RowBox[{"R", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"L", ",", 
        RowBox[{"{", 
         RowBox[{"u", ",", "2"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"S0", " ", "=", " ", 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]]}], ";", "\n", 
     RowBox[{
      RowBox[{"RHS", "[", "t_", "]"}], " ", ":=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"IdentityMatrix", "[", "4", "]"}], " ", "+", " ", 
         RowBox[{
          RowBox[{"Af", "\[Transpose]"}], ".", 
          RowBox[{"S", "[", "t", "]"}]}], " ", "+", " ", 
         RowBox[{
          RowBox[{"S", "[", "t", "]"}], ".", "Af"}], " ", "-", " ", 
         RowBox[{"KroneckerProduct", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"S", "[", "t", "]"}], ".", "Bf"}], ",", 
           RowBox[{
            RowBox[{"Bf", "\[Transpose]"}], ".", 
            RowBox[{"S", "[", "t", "]"}]}]}], "]"}]}], ")"}], " ", "/.", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "->", " ", 
          RowBox[{"x1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"xdot", " ", "->", " ", 
          RowBox[{"xdot1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"\[Theta]", " ", "->", 
          RowBox[{"\[Theta]1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"\[Theta]dot", " ", "->", " ", 
          RowBox[{"\[Theta]dot1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"u", " ", "->", " ", 
          RowBox[{"u1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}]}], "}"}]}]}], ";", 
     "\n", 
     RowBox[{"sol2", " ", "=", " ", 
      RowBox[{"S", " ", "/.", " ", 
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"S", "'"}], "[", "t", "]"}], "==", " ", 
            RowBox[{"RHS", "[", "t", "]"}]}], ",", 
           RowBox[{
            RowBox[{"S", "[", "0", "]"}], "==", "S0"}]}], "}"}], ",", "S", 
         ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], " ", "}"}]}], "]"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"S", " ", "=", " ", 
      RowBox[{"sol2", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}]}], "\n", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CalculateGains", "[", 
   RowBox[{
   "x1a_", ",", "xdot1a_", ",", "\[Theta]1a_", ",", "\[Theta]dot1a_", ",", 
    "u1a_", ",", "time_", ",", "A_", ",", "\[Tau]_", ",", "S_"}], "]"}], ":=",
   " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x", ",", "L", ",", "RHS", ",", "xdot", ",", "\[Theta]", ",", 
      "\[Theta]dot", ",", "u", ",", "K", ",", "Af", ",", "Bf", ",", "Q", ",", 
      "fx", ",", "xState", ",", "R", ",", "Mf", ",", "x2dot", ",", 
      "\[Theta]2dot", ",", "S0", ",", "sol2", ",", "t"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"xState", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
       "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"x2dot", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{"u", "+", 
         RowBox[{"A", " ", 
          RowBox[{"\[Theta]dot", "^", "2"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"A", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Theta]2dot", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{"u", "+", 
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ")"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"fx", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
       "xdot", ",", "x2dot", ",", "\[Theta]dot", ",", "\[Theta]2dot"}], 
       "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Bf", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"fx", ",", "u"}], "]"}]}], " ", ";", 
     RowBox[{"(*", 
      RowBox[{"For", " ", "1", "D", " ", "stuff", " ", "use", " ", "D"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"K", " ", "=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Bf", "\[Transpose]"}], ".", 
         RowBox[{"S", "[", 
          RowBox[{"\[Tau]", " ", "-", " ", "time"}], "]"}]}], ")"}], "/.", 
       " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "->", " ", 
          RowBox[{"x1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"xdot", " ", "->", " ", 
          RowBox[{"xdot1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"\[Theta]", " ", "->", 
          RowBox[{"\[Theta]1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"\[Theta]dot", " ", "->", " ", 
          RowBox[{"\[Theta]dot1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"u", " ", "->", " ", 
          RowBox[{"u1a", "[", "time", "]"}]}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", "K"}]}], "\n", "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"testWithFB", "[", 
    RowBox[{
    "ICs_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "xff0_", ",", "xdotff0_", 
     ",", "\[Theta]ff0_", ",", "\[Theta]dotff0_", ",", "uff0_", ",", "A_"}], 
    "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eq", ",", "init", ",", "\[Theta]", ",", "\[Theta]dot", ",", 
       "\[Theta]ff", ",", "\[Theta]dotff", ",", "x", ",", "xdot", ",", "xff", 
       ",", "xdotff", ",", "uff", ",", "t", ",", "\[Kappa]1", ",", 
       "\[Kappa]2", ",", "\[Kappa]3", ",", "\[Kappa]4", ",", "ufb", ",", "u", 
       ",", "\[Theta]s", ",", "\[Theta]dots", ",", "xs", ",", "xdots", ",", 
       "us", ",", "J", ",", "S", ",", "K"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Kappa]1", "=", 
       RowBox[{"\[Kappa]2", "=", "3"}]}], ";", "  ", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"lqr", " ", "for", " ", "q"}], "=", 
        RowBox[{"r", " ", "for", " ", "balancing", " ", "pendulum"}]}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"\[Kappa]3", " ", "=", " ", 
       RowBox[{"-", "0.1"}]}], ";", 
      RowBox[{"\[Kappa]4", " ", "=", " ", 
       RowBox[{"-", "0.65"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"xff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xdotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "\[Pi]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"uff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"uff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"S", " ", "=", " ", 
       RowBox[{"CalculateSMatrix", "[", 
        RowBox[{
        "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
         "uff", ",", "\[Tau]", ",", "A"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"K", "[", "t_", "]"}], " ", ":=", " ", 
       RowBox[{"CalculateGains", "[", 
        RowBox[{
        "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
         "uff", ",", "t", ",", "A", ",", "\[Tau]", ",", "S"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ufb", "[", "t_", "]"}], " ", ":=", " ", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"K", "[", "t", "]"}], ".", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"xff", "[", "t", "]"}], "-", 
                RowBox[{"x", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"xdotff", "[", "t", "]"}], "-", 
                RowBox[{"xdot", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]dot", "[", "t", "]"}]}]}], "}"}]}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         RowBox[{
          RowBox[{"\[Kappa]1", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]3", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"xff", "[", "t", "]"}], "-", 
             RowBox[{"x", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"xdotff", "[", "t", "]"}], "-", 
             RowBox[{"xdot", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"u", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{"uff", "[", "t", "]"}], "+", 
        RowBox[{"ufb", "[", "t", "]"}]}]}], ";", "\n", "\n", 
      RowBox[{"eq", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"x", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"xdot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"xdot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"u", "[", "t", "]"}], "+", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
             RowBox[{"A", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]dot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"u", "[", "t", "]"}], "+", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
            ")"}]}]}]}], "}"}]}], ";", "\n", "\n", 
      RowBox[{"init", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"xdot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]dot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}], ";", "\n", "\n", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
        "}"}], "=", 
       RowBox[{"NDSolveValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"eq", ",", "init"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
         RowBox[{"Method", "->", 
          RowBox[{"{", 
           RowBox[{"\"\<DiscontinuityProcessing\>\"", "->", "None"}], 
           "}"}]}]}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"us", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{"uff", "[", "t", "]"}], "+", 
        RowBox[{"Piecewise", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"K", "[", "t", "]"}], ".", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"xff", "[", "t", "]"}], "-", 
                 RowBox[{"xs", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"xdotff", "[", "t", "]"}], "-", 
                 RowBox[{"xdots", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                 RowBox[{"\[Theta]s", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                 RowBox[{"\[Theta]dots", "[", "t", "]"}]}]}], "}"}]}], ",", 
             RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
          RowBox[{
           RowBox[{"\[Kappa]1", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]s", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]dots", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]3", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"xff", "[", "t", "]"}], "-", 
              RowBox[{"xs", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]4", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"xdotff", "[", "t", "]"}], "-", 
              RowBox[{"xdots", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"us", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"{", 
       RowBox[{
       "xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots", ",", "us", 
        ",", "J"}], "}"}]}]}], "]"}]}], "\n"}], "\n"}], "Code",
 CellChangeTimes->{{3.862753343189165*^9, 3.862753411389415*^9}, {
   3.8627553611496043`*^9, 3.8627553647834463`*^9}, {3.862755542386807*^9, 
   3.862755582254092*^9}, {3.862756179429644*^9, 3.8627562078485813`*^9}, 
   3.8627563320549693`*^9, {3.8627564690202875`*^9, 3.8627565488258357`*^9}, {
   3.8627568793814173`*^9, 3.8627568873778677`*^9}, 3.8627585165043135`*^9, {
   3.8627585965107956`*^9, 3.862758689290209*^9}, {3.862758834699833*^9, 
   3.8627588555911727`*^9}, {3.8627590963373947`*^9, 
   3.8627590998392787`*^9}, {3.8627594410134716`*^9, 
   3.8627594626865597`*^9}, {3.862759635094576*^9, 3.8627596377257366`*^9}, {
   3.862759669455618*^9, 3.8627597448635693`*^9}, 3.862759795914287*^9, {
   3.8627603319473376`*^9, 3.862760490473783*^9}, {3.8627605307139487`*^9, 
   3.862760536806006*^9}, {3.8627610047197795`*^9, 3.8627610478400292`*^9}, {
   3.8627611285982723`*^9, 3.862761147921111*^9}, {3.8631982964294224`*^9, 
   3.8631982970332265`*^9}, 3.8631983363504767`*^9, {3.863208693665881*^9, 
   3.8632086943846474`*^9}, 3.863210007245922*^9, 3.863271804426487*^9, {
   3.8632718412836447`*^9, 3.8632718583741503`*^9}, {3.8632719591337743`*^9, 
   3.863271959351703*^9}, {3.863272049174841*^9, 3.863272070205083*^9}, {
   3.863272113471178*^9, 3.863272123024109*^9}, 3.8632747752128673`*^9, {
   3.863274857845314*^9, 3.863274901443305*^9}, 3.863274985905165*^9, {
   3.86327502591031*^9, 3.8632751590365314`*^9}, {3.8632751952308993`*^9, 
   3.863275233662552*^9}, {3.8632753992893295`*^9, 3.863275415841012*^9}, 
   3.8632757933676972`*^9, 3.863276112914017*^9, {3.8632763683199444`*^9, 
   3.8632763983313017`*^9}, {3.8632764721665745`*^9, 3.863276525061578*^9}, {
   3.863278235705888*^9, 3.8632782777863655`*^9}, {3.863278324944213*^9, 
   3.8632783286160316`*^9}, {3.863552728717914*^9, 3.8635527298355513`*^9}, {
   3.863613419658352*^9, 3.863613423534114*^9}, {3.8636150904008484`*^9, 
   3.86361513154671*^9}, {3.8636152078133564`*^9, 3.8636152525520706`*^9}, {
   3.8636152893383236`*^9, 3.863615479516596*^9}, 3.8636157247782784`*^9, {
   3.863615879717803*^9, 3.8636159617646036`*^9}, {3.8636160220243616`*^9, 
   3.8636160299278383`*^9}, {3.863616069486206*^9, 3.86361607601912*^9}, {
   3.863699007217822*^9, 3.8636991515617003`*^9}, {3.8636996033223495`*^9, 
   3.8636996129842625`*^9}, {3.8636997844214835`*^9, 3.863699805489752*^9}, {
   3.863699907217247*^9, 3.863699944316393*^9}, {3.863700788168758*^9, 
   3.8637008845809517`*^9}, {3.863702046275758*^9, 3.8637020830100203`*^9}, {
   3.863702595245346*^9, 3.863702645292355*^9}, {3.863884194660141*^9, 
   3.8638842031804175`*^9}, {3.8638909914788537`*^9, 3.863891009810995*^9}, {
   3.863891113237941*^9, 3.8638911537729845`*^9}, {3.863891279619763*^9, 
   3.8638912855948534`*^9}, {3.863891344230113*^9, 3.863891351574766*^9}, {
   3.8638925953132634`*^9, 3.8638925989880886`*^9}, 3.8641412354391413`*^9, {
   3.864141550931038*^9, 3.8641416655529428`*^9}, {3.8642361939817247`*^9, 
   3.864236202546955*^9}, {3.864236595072028*^9, 3.8642366322340117`*^9}, 
   3.864236674617306*^9, {3.8643997929515553`*^9, 3.864399794341104*^9}, 
   3.8647401548354416`*^9, {3.864740367280447*^9, 3.864740382577551*^9}, {
   3.8647404140084915`*^9, 3.8647404181541643`*^9}, {3.864740488606616*^9, 
   3.864740495693348*^9}, {3.8647405289317093`*^9, 3.864740542820265*^9}, {
   3.864741074561078*^9, 3.864741079667444*^9}, {3.864741140307036*^9, 
   3.864741143520008*^9}, 3.8648372672245474`*^9, {3.8648373045645533`*^9, 
   3.864837353847723*^9}, {3.8648373920424533`*^9, 3.8648375909655547`*^9}, 
   3.864837839079855*^9},
 FontWeight->"Plain",
 CellLabel->
  "In[1376]:=",ExpressionUUID->"8daba21d-9510-4b30-8c25-b5a0584418ca"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  StyleBox[
   RowBox[{"n", "=", "20"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Tau]", "=", "5"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Tau]1", "=", 
    RowBox[{"\[Tau]", "*", "1.25"}]}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"A", "=", "0.2"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"order", " ", "=", " ", "4"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"maxIter", " ", "=", " ", "30"}],
   FontWeight->"Plain"], ";", 
  StyleBox[
   RowBox[{"maxError", " ", "=", " ", "0.01"}],
   FontWeight->"Plain"], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotMin", " ", "=", " ", 
    RowBox[{"-", "2"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotMax", " ", "=", " ", "2"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Min", " ", "=", " ", 
    RowBox[{"-", "\[Pi]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Max", " ", "=", " ", "\[Pi]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]dotMin", " ", "=", " ", 
    RowBox[{"-", "2"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{"\[Theta]dotMax", " ", "=", " ", "2"}],
   FontWeight->"Plain"], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"xdotMin", ",", "xdotMax"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Init", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]Min", ",", "\[Theta]Max"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]dotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]dotMin", ",", "\[Theta]dotMax"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"ICs", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "xdotInit", ",", "\[Theta]Init", ",", "\[Theta]dotInit"}], 
    "}"}]}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"InitGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}]}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\n", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
       "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
       "\[Lambda]3ff0", ",", "\[Lambda]4ff0"}], "}"}], "=", 
     RowBox[{"ffCartPendulum", "[", 
      RowBox[{
      "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", "order", 
       ",", "maxIter", ",", "maxError"}], "]"}]}], ";"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1b", ",", "xdot1b", ",", "\[Theta]1b", ",", "\[Theta]dot1b", ",", 
       "u1b", ",", "J1"}], "}"}], "=", 
     RowBox[{"testSwingUp", "[", 
      RowBox[{"ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "u1a", ",", "A"}], 
      "]"}]}], ";"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x1c", ",", "xdot1c", ",", "\[Theta]1c", ",", "\[Theta]dot1c", ",", 
      "u1c", ",", "J"}], "}"}], "=", 
    RowBox[{"testWithFB", "[", 
     RowBox[{
     "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
      "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A"}], "]"}]}], 
   ";", 
   RowBox[{"p1a", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1a", "[", "t", "]"}], ",", 
        RowBox[{"u1a", "[", "t", "]"}], ",", 
        RowBox[{"x1a", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1a", "[", "t", "]"}], ",", 
        RowBox[{"xdot1a", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1a\>\"", ",", "\"\<u1a\>\"", ",", "\"\<x1a\>\"", ",", 
         "\"\<\[Theta]dot1a\>\"", ",", "\"\<xdot1a\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Feedforward solution\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}]}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{"p1b", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Theta]1b", "[", "t", "]"}], ",", 
       RowBox[{"u1a", "[", "t", "]"}], ",", 
       RowBox[{"x1b", "[", "t", "]"}], ",", 
       RowBox[{"\[Theta]dot1b", "[", "t", "]"}], ",", 
       RowBox[{"xdot1b", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
     RowBox[{"Filling", "->", 
      RowBox[{"{", 
       RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Theta]1b\>\"", ",", "\"\<u1b\>\"", ",", "\"\<x1b\>\"", ",", 
        "\"\<\[Theta]dot1b\>\"", ",", "\"\<xdot1b\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<Test on dynamics\>\""}], ",", 
     RowBox[{"AspectRatio", "->", 
      RowBox[{"1", "/", "3"}]}], ",", 
     RowBox[{"ImageSize", "->", "400"}], ",", 
     RowBox[{"GridLines", "->", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], "]"}]}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{"p1c", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1c", "[", "t", "]"}], ",", 
        RowBox[{"u1c", "[", "t", "]"}], ",", 
        RowBox[{"x1c", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1c", "[", "t", "]"}], ",", 
        RowBox[{"xdot1c", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1c\>\"", ",", "\"\<u1c\>\"", ",", "\"\<x1c\>\"", ",", 
         "\"\<\[Theta]dot1c\>\"", ",", "\"\<xdot1c\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<LQR feedback solution\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], "]"}]}],
   FontWeight->"Plain"], 
  StyleBox["\[IndentingNewLine]",
   FontWeight->"Plain"]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.863699832878002*^9, 3.8636998879424076`*^9}, {
   3.8636999587037973`*^9, 3.863699966845196*^9}, {3.86370068689312*^9, 
   3.863700742439372*^9}, {3.863700775571786*^9, 3.8637007771342835`*^9}, 
   3.863700945211579*^9, {3.863700998427576*^9, 3.8637010107976217`*^9}, {
   3.8637016473912125`*^9, 3.863701669091281*^9}, 3.863702035899074*^9, {
   3.863702126179226*^9, 3.863702160529252*^9}, 3.86370251869481*^9, {
   3.8637025705572357`*^9, 3.8637025888983755`*^9}, {3.8637026681560507`*^9, 
   3.8637026692896886`*^9}, {3.8637027081322765`*^9, 3.863702762285972*^9}, 
   3.8637029838601737`*^9, 3.8637033230088053`*^9, {3.863884225388322*^9, 
   3.8638842448491*^9}, {3.8638842916161537`*^9, 3.863884295082047*^9}, {
   3.863891061309538*^9, 3.863891063069975*^9}, {3.863891163269951*^9, 
   3.863891163428899*^9}, {3.8638912925906177`*^9, 3.8638912940581484`*^9}, {
   3.8638913677266035`*^9, 3.8638913686183195`*^9}, {3.8638926039804945`*^9, 
   3.8638926063767295`*^9}, {3.8648376392630434`*^9, 
   3.8648376724073963`*^9}, {3.864837714278944*^9, 3.864837730198832*^9}, {
   3.8648378000064077`*^9, 3.8648378125593743`*^9}},
 CellLabel->
  "In[1434]:=",ExpressionUUID->"c47d3c4e-60ca-4c63-8b5c-ced31cd89cdf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   RowBox[{"-", "0.23897449016893724`"}], ",", 
   RowBox[{"-", "1.5755730431572958`"}], ",", "0.06310863127827115`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.8648376866338243`*^9, {3.864837721244707*^9, 3.8648377460817285`*^9}, {
   3.864837800602215*^9, 3.8648378151965265`*^9}, {3.864837882180011*^9, 
   3.8648379006680717`*^9}},
 CellLabel->
  "Out[1444]=",ExpressionUUID->"4bed02fd-3524-433c-b94d-a0b4f9cfff71"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
xHxM3y37KpwH/jrlVy23nwH6L3M57kzkhcHncn9vI/Q6RVN1TWg8BeaPfnX+
QJxPsF9o/dlp713LQVTB92gL5e000HZ1eR1s0YWWZV/jMc+ZBfVh2bz71LpR
0cJhtVxpXugtu/OkZTEDCFgpSuyRp8DT6+723yL2iweaC+3+6rNg7tI2Vy9i
vZ21DP2COnihpd0vCX5iPVas6P7cpT4DthRTQp8MdqH49a1rwZY5MHykybDq
J7HeytcXoIu88NLNjytsiP1spXWe9eeLFCj9+PAfcQ4miHpAz4kZ+vv+LZ2b
bDWjZsBLrUZK+PpuZNl1Nu5kKC/kTrbnSCbO29jffJfCk/WGbRCN1Qu/Hwyb
BaKlVzsrYTfy7nXff34pBXI37VyRSDyfxdm4MDHxWXCLZ96rntBfjj3DY20/
eeGeE7feXyP2i6CTQYwNy2fAZa2SYPYfXcjV4D6jbOkcECv5KSxF7H9h/Usj
OoyI7+GzFhog9guZ+N9cys0zYGSzS+vrfd3IpjtZVzKbF347d0uel9gvsL/6
7JWAu/SPQbQj5MvhlrpZYPLerO+qXDd61FcxJLuFAi+7qjrEEvtF6kpTZU6T
WRD0+O1YL3Eeuvd7R3TsOC8UlVv0Y5B4/orYEjbL6b/9w+i+EK7mMwuK4BW9
H9rdSPulaqvNIgoMnth3a4b4/fEbY7Yn+WeB1+Xdb7UJvbOFFuM3UMkLdzX9
PmBK3M/63I/3i3jmQLXvnteS3N1IKHNnu/VXYn9O35vWsrsbYb+36mGqm1r0
INJ75ey1eR0Fuh2Xyo4j+itK5RW3zoFZMPmMmhBH9KdmSvfm9H5eeDaTmhhM
3P/L2ro3hpIUeF+soVqeaN/SNyioVpoFhR7bpsKI+ZOrtPfs91ZeyL/iTo8h
Mb82B4UrdfyeAVE9u3akE+sb9o9dktT1V3MNIcRPOVxoMQsqhL8vPk98/x+U
H1IC53lhE9feYSlifTr/ctuLyvm//YP9ZjY2V3mZM2aF2G8ue3OMyuX4lORz
t9srpF71fEHyuecudt78dJZG8rnfv151YETQSD7XanH0isGsRJLP5dikdKmM
P47kcyv2P3XxMggn+dzfb1e4H23zJ/lc55U6nTIx7qTfPKbUPrVP05/0m/ec
1RfWZjwj/eaqN4WNywpfk36zdvhSayG+fNJvvvz6iK/tTDHpNzuXK12bfPyN
9JunPqem7jSsJf3miUKTJ3bzDaTf3PJblLk7sRVhv7lspW1U2tt2hP3mvWO7
pNhOMBD2m7+0SLZzuTMR9pvfbLz80W8rC2G/efvCMFv6QxbCfvOelGtdCXdZ
CPvNBTnhe16IsxD2m+sTQnZWHmMi7Dd7NzocjjVkIOw3P7bWkxQdbkfYb76n
wuv6LbUNYb/5RapDf4NxM8J+83XnyJIUu3qE/ebQF1TDPNoPhP3mWIl4itTP
76TfvGXB6XFcVynpN9s6bGAkTheRfvM1+44KgfhM0m8WoH/3V1z0gvSbLxR+
Opui4k/6ze7ei0R/a23+/8Zv9pg2NC4ueEDyued/zmx8/PE5yecyIluU9IaT
SD63JVU215pJI/ncZHcRa/b7ySSfe/JPtcrXBwnIg0txfE34AJCnVpRXzgah
XrP3FspHh4GMWbq4XIAXuiPkqHL89ChYfkjbQGaDJ8J+dGGR/B0/3RDSjxb9
GaH/7eoL0o8Wis9W+GGdSfrRCp7vmXN8H0h/mecuI29v5C+E/eWpmqGjX4Lp
CPvLt8Rl31TPMBD2lyP1J/n5e5gI+8sDpf78JddZCPvLHgp6kt6BxPz9x19u
Oa8YX3uchbC/XGarfXXrJybC/jIIX8n3o4WBsL+sszqmNTqFTvLKofSpP8t5
8hHmlcOrfG9KuaUizCv7coTppDhGIOxHl9xQqolUtvtf+9HJccoVdvQ7JK+s
szK0I6sqmuSVb9reWLGyJZHklS9IqI/fL6CRvPJoi9TQSQUaySu75pXB+tcv
kJmAkmHog37g06/voRr4BCmtV+Ts/jkEMg0fpEWe8EU3r25Id/s5AhQKShaK
8twR9qs9qkqbhCsfk34119U0WvbYc9Kv9q1gnOj2eEP61fU+MVeu2heS/rOQ
Zopk9Is2hP3nq5fvikqvoSPsPzMenl5u/IqBsP9s4pZ2YlEuE2H/+Z1j0J8I
Yvyw/7xmndxr5yAWwv7z3gO3LI2usRD2nz1mTwagYSbC/vNMuJKO90omwv6z
us3X591sDJLflmq0Sxe9Vogwv22ptkUnvO0Nwvx2iv1BFbvRWIT96h8GkTx7
Cu//r/3qVc62m3+NBJN899z6LUVJX+NJvvvGpNK9ZaXJCPvV9yvz1mvV09CP
K35Oz7YzAdsDY5ODaUmINq8QnpswCG6mWs7YRD9Gr4MNv1lVDYOo25cz9z3z
QO5ZhclKHaNgVdXy5LTlPkjFSur4xZ5x8DX29YaBhHCE/e94QZV1S41ppP99
TPX30juROQj72YkLgUeEp+kI+9lL2m3qz2sxEfazfSghqypEWAj72abf1ZrE
3VgI+9ntNQoPfvkR4/WPny2T8rhlpwYLYT/75l7rpaqPmAjz6/vM1mcXE/s3
5tdtFkXwvG0IRtjvTpsL4nj39Mx/7HebJcpErrC/RvLs/l6Hj73ZHkXy7AN8
uRdE1BNJnn3JqVWhPE9oJM+uqScWs2BOI3n2TRtZheZbEtG3AJqrHnc/GFt7
seNOXygqCzldtS9sCAiWvrslzP0AjYQLjIQHjgDV9G+ib9zdEfbD0wdNv23O
DSD9cLPdM1diLsaSfnh6/LYrFkrppB/OejrsIPSugPS3tUZ43kiuaUPY31ZW
X7xBc6AdYX+budRKztuNgbC/vfjMkoTyaCbC/raJ17PsG/uJ8frH3+b/fE/7
22MWwv72y5088/E3WQj723f5Lo1287AQ9rdtzO7/UVdnIuxvS5q/KjRRZpB8
P7VC99EusSKE+X6tPcXrZHe+RZjvT7RiWF4Zi0PYD19X02rRkOpF+uErm0xO
hxkVFP6nfvj+q9lcH2Yek/y/kwhPolx1HMn/u0nd75u9kIywH3799fT2AGI/
DBWQLDB7Q+jIRW4OlyWTkdj9pM83pAZBQmamhEZJIDo04x35NXAYfPSd+Trl
5InYmBG/wfNRoHdEpvehnRcKLBysnKeNA7H9Gaf3nApF2F/f9n53nPrRJNJf
H5fnnOyZy0LYL69dsPJ0KqUj7JcHFaVVO65iIuyXn1z12DF9gYmwX76v5sDB
L7dYCPvlP6ovr+gKIMbrH788tsVSK+UAC2G//Fi3bwWdxkQ4v0EsUYcjkvMV
wvkNdgI8GucXhSHsp68eupgu98Tyf/TTsX9+3LEXvI2JRSZtzdfYjX8AS+Vb
tE/WSWipZFLca41mQJfzUvCpoyEJPa09XXF0UCHHvsu9MRn5lY5s8RUdBil1
sr+cG73RtOZRa6sVo6B321U3io4HOnkh6P3GtePA33foQ7BNEPJCN6WSZCZB
d6Pvpozn8aT/znVreEllNRNh/92U8jBL4CILYf99+ur7wBxif8D+e/+QJlvu
eRaZn5EzkfiIQywa4fyMUA2lhcWFzujf/fk56h977affwBz8SjfKSECiMRcO
HD1SD46bOL78LU5DjR53q/hX/wKlDqxVPYU0tHidJPviJSNArXeyb/+CO+Lx
YZhTlcaAxMXCuotsfqhshV5bueIEOMY9t+GZQiTp739roSFLeRbC/v7u0Zvq
BT4shP398+PP1Ow8WWR+SDX7wial5scI+/tyJht+L2zR/2/9/XY7xjnP96fJ
fJGLhes+iLZGkPkiGrrbvI7TX5D5Ik2cFXyyd2hkvoiOx+Lyx240Ml+kZMWP
fSE3E5FHVc8ypY99YCBQMszzGTGfdKa2TjgOAeIotc+27wFKT5sWSbg+AsIu
lm8+7u2OsP//7m7U6Srrh6T/n7Z11csX+jGk/891+txFRa400v8XV0zwbW/L
J/18gyXS/DOdrQj7+YbpWrvXVrcj7OerSGrpzFgxEPbzT62plV0eyETYz6/8
eM1wCyD6G/v5Lunu1x6xEPbz0+x47L85sxD286cczrCNC7EQ9vO/LqWXJ+1n
Iuznv6KXvonbxSDzZ6IiAi/e8y5COH9mzWikp83AW4TzZy6KXbBtmY9H2P9f
1TWhfvKUL+n/d8fb30NHJf9j/z/OuIljOyOAzK/xFneQMTsUR+bXHMq0cYlU
SUbY/5fa8iVTuIOGpk52nv54jQGahfp3BRgko8qPXacPNQ+AKx276UlnglDU
axmO27bDIJ/6JCN4zhMVTvsI6N4bBYq5abM3SzxR8eUG34N+42DqmsrMzKEn
CPMEd3wS0upPJpI8QaRWz6Ovm7MQ5gPKlFX02l7TEeYDViX/ETu1iFiv/uED
nCROj4mMMRHmAx70HU+at2chzAfkp63dfpHYrzAfYOrzktPCgIUwHzCisrUj
J5uJcP6QWHuC5Gb4GuH8oaRLomW9+eEI8wPrL505qp10/X/kBzAvUCJ71Ocp
TyzS6ryyqb6hBthqqFo4rklCEhv75thREzgvF2K1/isN3X0m0KFzlg7WBtx9
fo2dhpqcH0ZtHx8C0hF8dIsgH/TOaPcjx8kRkDiz/96FCXcUIHj7lovAODiu
m7YxLzwQufZW3AvmnASTuVe+BZfGkbxBucaRx89KmAjzBtbmllf8TrMQ5g0s
G2/0fCbWP8wbrDhWzr7RgkXmP51efEhRYyoG4fwn2ZnBh9en7qJ/5xFUHuso
sHwqgciKixscdiegucSRRUo1daDGdu2xjpFk1B72SflsQhsY/payO7CChs60
51x+PzgMquXS+Ba0PVBxdJW3FO8YGDIMN0/k90UzH7dELOObAHBD1LonbU9J
nqGJ/0LEQQkWwjzDu82T5s+J9Q7zDJ8S1lccI9ZDnI81umbN/SHDIIR5hkPJ
onNTW47/F55B5fjNNykljcA731HBKYWG4K5oRcGGdjC0Kfv1Th0acqJ/tAzL
HgJrVkoLJCj6ITU3yeqHb0dA09Sl6lch7mjkzKFhsYoxMJc35Gi1+DHJQ8Qt
Dt2geZiFMA+h5PP5UQ2hNzEPMb3BvVnelkXmgxVWpgQmyHkgzEesenT6tm4x
B/iWLRRW++MnCFWOc3MMS0ZD7/V+8b5sBds/vfk22EZDc/v61STeDIO4PeX3
Czg9kVbFqy9qn0bByjU132vUvUl+wtWQDhXvshDmJz7XfVsm9JCFcL4ZGA4Z
Hpe+iBbzn9cxedcMGsQb+54S198havy9cfMwOJvYkgrWeaMday7pndMYBb7O
NR4y6R4kb/Hw7tGxQ8R8WhtW6+FSVQ+stkadUgU0VGOjfjP72S9AXxkmfDyV
hgpvuUWcWT8C/DeLPPL57E7yF6f5o19cfcBCmL/g2i6/ajuhD3D+251dBRNa
EVrov+MxiizXHDrO0CPz4TwVmz1Oro0g8+H2dB6z7nr7gsyH2zE6cfaCNY3M
h0v/lvtO5hGNzIdjBAyKuIQmIrNhX2ZobB943MBxs3wiDBU91/6tZzEEVK5r
iohf9EdC+TfiaWdGwN44MYgeuyPMa9y5MUWZrPEneQ01zS+v00KjSV7DR/VH
paBZKslr1JXWjj+wyyf5C49IM7P0z60I8xe+duNPnD+2I8xfEDOpkf88A2H+
wrh0R4S4HxNh/uK6+q/R/h0shPkLPuPpMxHEeZDkL8KyNhffYSHMX3SmX4lv
WMpCmL9o1A8O/aTPRJi/kKGdmUjRYZD5gc3B8W9vFhUhnB/Y22LEcNDJRDg/
0JxPMrvMIwFhXsPnUf0l1SI/ktegX7qff8hK6T/mNeZcd/V9OvKQzB9U19/A
LU6JI/MHy7t7o22XJCPMaxT+Ci14waIhRa6v60d1GSAjyMBulWUySmZ6K+Xl
DgCHFRO7S18Fob28N7Jqzg+Du05XauP3eCFJbrYoA+tRcOCcr9JJR090uqCi
64bzODAoLVjtVx6CMP/xfcPzjd2MFyT/8emE8MbyqkyEeY576gE19Fg6wjzH
6HRAjhwXE2Ge49mmk11RA0yEeY4TVmNz1sR6QPIctUcn2Yj1AvMc79qfuSQf
ZSHMc7jv3yfL8Z6JcH6k+Qcj+r321wjnR4o60pzXhD9FmPfQ2KK+zM7B5n/k
PTDfERXHbbXrRgzaeiVDVOtpDbjqu7dYlyMJxeYuVn7l2gSszxtu3lNMQ6na
Q1m3NOngCuXtRW1RGnKrbTr8uGMIXDMziHQd9UHLzN6tcukcAQ13b61p/OmO
1py7Xh8/Owbk3hXlaKkGIhd2p3S+sQmgeORygObpOJIPqXsV9uAcYiLMh+RJ
H3ORNmUhzId8747TekWsN5gP6TWJCai4wiLzOy9JHs7hcIxFOL9zu+KL4ynh
rujf+ZG9+v1337JVgt1b5FJVeBPQkPKOoeCgOmDWWbzUqTUZXVzdeYLPvA3c
fGx97kANDfHs4F65tH0YJNg8P5V93QPJpexfLjcxCq6mKr5zDPRBwcuUpzSn
ifnive72JHhK8ie7L987GLaMhTB/EsQQfNbrzkKYP9m/8mzFC18WmW+65KOJ
y1LRYIT5E1VdlRkuYPpf+JP0X+FtRt6NYJ/jnlmVWBqy6XSb3pndDmiyYoEc
xjQkrSEkOZg4BLYrTGx2eOKHgh+GnAuOGwESTrJGwb7uyP8tPKxZMAaKqhJ/
1F9+RPIrJi/MKy7qshDmV3KfDI+dJOYj5lc2Zc6cvE6ct3C+q830sNWhS54I
8yxLan82+zrO7vq4w/gWCPkJNAKH0Ja7ych+/w3BDKtWoD67Nek5nYYSYnd0
2z0fBt3Fg3o+Oz3R83pZ0x0Zo2B7Xf5Y/A8vkndRWK9+nIdYrzDvcuXqve88
xHqG82nlJAQmVErNUVCwhwOnczNIYSSbTDfREOPaCzdVuWHAc79kedF9bxSx
qaXVXHkU8Od3V4BbHiQfc8r+W+JDYj5Jr5S43P24Huw5zqbuuY6Gjs+ejDc7
+ws8zezfMJdNQ+Y/vutlS42AZ8sub7jQ7k7yMoXtPCdW+7EQ5mVONPa8bSfG
F+f3vn+r/UtfVAf9Oz+TPdK6ncbfCGYOa77h9KWhIwlubtGuI8BlqTJ10s2d
5GnyhxWclIjzLOZpCjcsNHpR+JCzaZY5z1ALMBI9uziTWO/Gjv7Ul3UbBmlT
fBNsuZ7o7IDwbe3Ho+CDb/wl9xVeJG/zZVHY73RCz4Qnfvl+Yr4JlNkUjO+t
piHjA+ULNpRRsEzO7661hAfJ37xsV39ZTvTPqcXP5zMZbWDZ3pmjKz/TULbX
lcxLf4bBpe1rzipLeyDLb5ruCyd4oee1g1o7vVkI5y/rTGjoSN0zRMkVRz3Y
uJqA7SJvs563NPTzZiL0KR4BW3gSbQRfuJN8jrnBqVWbiPthPqf8utCaKYO5
XVZqazNO97SC5Cfsis7NNOTnClamTTSDZt4yeJWYT80rBwpOHhoFBQ/Kswr7
PEg+py9in8c4MX/FpLd08ewaAXcNBsyK091Rx7n7pezOxP44P70h0p+FcD51
39ddX1iBGui/43nYMh9eHBrTJPOrdf5sfuFe/ZTMr9bQy1L9GvWCzK/WzuH2
3nCZRuZXL9PasSDxhEbmV1NzdYW0ExPRN3bTL5WP+oBHfTlHhGw4CtHv+3TL
bAjsP+x8tyPWHxXBV1dVjo+Ail6pbMMwd4R5nwYTlzRTb3+S9zH8Jreab2c0
yfucX1HhULk4leR9pGi6fzbtyif5HYvPxjku2a0I8zs7SqbNlue3I8zvVD2m
s3xOMRDmd5S/q30K8mIizO/Eqi/8RNtZCPM7DzrTlikS3yfmd7hLizbkuLAQ
5ndYB5m1u5ezEOZ3wr010w4aMhHJ76jmsyfrMch88zS9iHze1iKE881bMt4W
pDpkIpxv/llG9Ex5WQLCvM9SZqe/qcMDkvdhJeqeME/d8B/zPgvnHsT9JPoT
8z6Oz6xjXDqek/noX1+3+dxjS0aY91nzZThDlvj+oLFmmIAGA6gwWu8oOCQj
sbETS4aTB0BHijp1fW0QWp4p9mjBdBgc8q8uvWnhhSr8NC7+uDQKuvy+bHc3
9EQpnZ/FPGzHgReIuhnlF4IwPxTO2PxEOukFyQ+VaYcefR2TiTAPZGRiKGIS
QUeYB7Jymkq++4eBMA/Uo17gUtfLRJgHavxqfE3ShoUwD9RPX922j/g+MA/0
9H3qyt3HWAjzQA/PSPKuKmIinG+v0XR3tbxqKsL59k8+i5m58kYgzAv1HTzp
E61n+z/yQpgPMhUszK+QjkEbVeo8HW/VALOcj6uMBhPR+YUYeP9cE5hOX3zF
pYiGPj89LxWkQgfWwHDMQpJYn+/fVypoHQJx2T/D18v7os8do11/WkdATXR1
VkypO7J/YMmTMzoG+LcH1nxYeIzu+FeW7e2bAOGfabBIMY7ki3YvDnXcUcBE
mC96eEBU9ZwxC2G+iCvm6PFQYj3CfFGZAieVasUi6wUoHfLN4cuKRbheQKtM
06ih8n307/yRwWuwNrKgAgg1nakN7IlHv/tOn/tiWwcm5V7omNckIwVzR+u2
fW3A8GpAeWstDTV1vhyDDcNg5XyXIZeXB6rd4N6e2E/MF1Zs20EjH9S+W27N
keFxkK9a5c02Ek7yS8+5i9PViPM85pfSZs5H8hD7EeaXlM/G22sT+xWuXyBT
uS5k3CEYYX4pzuet5qbzp/4Lv2QrpzyuZNEIejad2ZsVQay/O8bPHXvRDsZs
U8eeniX2n67sCfGYIRBxtrzud4Uf0qJWKYlFjABHWYmdc57uqKF1x12DzDEQ
PnpvIm/JI5J/OvHIZLv1AWK9/4d/0j53jm05MR8x/yT3Y/UBfwcWWT+hXel8
/wTFC2EeiuV00zP01sCugrnbv+3tf4KAkrLf22yS0VZ/dllvvVagsOtUejqD
0PN69A8xT4eBdGjs50Omnsjg9FmZ97RR0OwzQquL8yJ5KefzlC29ziyEeSkH
4ZaPt4j1DNdnoH2YZt+iZIGMGpb6N5g2gy0Uzt9NDcR+KH7o1GmJYTCoLcO/
7bU3OvhuWWLP6lFge+pz5OBZD5KvctOrc3hBzCfxVtAgaVMPzKIe/TgmR0PL
YX/uFvgLhC2O6eTLJ/S36801DLERcLs7UujngDvJWy1tKpOxJc6LmLe6vNYl
55UHC+F6Eaca+ir2COmif+evnLZdP3y3twGMfu5QSnOjITblwoOrnYj9V3LK
xsPDneSxcoXPX/hGnA8wj3Wx5gQb00gU7YzZ59Jc1QJ2Pby3MEusd2VsdxQP
Ow8DF7XTtSZNnmixvd6eMu9RoEip3ls44EnyWnfXuZ1fRJxfTHtNO1XamsCn
dx9Ujb7REOU7d+nYnxHw+IcH5zuKB8lvvXAyTfxK9I/U0U2ifp/agHCYUt+1
L8R82ywcEDg5DPYJ9vwM3eSBZk5miRce5YXJ+ytVbb1YCNfDyNrhWr3TwAhd
Ee6I+MlqBEH20326aTTkMUenCBSMgI4VHYObotxJvqs74/x2buJ+mO9CL79w
171kB+tvFZRtKm8FmzIcT+u1Evt3SZWqR30zWFf6yEKinXie50qebXtGQbGZ
W8C7Sg+S75rrOEOVI673u6K5aNPWEZB3cUOHTL47ujk4deaDAy98+DjxIw9x
3sD1OSZ4W8tsJCD6dx7MbMuWZoXLxHnwzNiNKw+I82bSou1XA3jhGuuBeh5i
fHA9D/5FOW+nkSwqUrRM8QxqAQcqznKOE+OD+TG/WvUrWUT/t9m7UOtjmsBb
YHT7RykNWTTdOTEzMAK4i43kr3e4kzxZ8httuwLi+eNajHarebYBA3qCrOd3
GmLxmjwVejkC6oZFdjoFuKMNycfpKqm8MHWvqVwE8b1ivozzhm3ISzt2kMHx
a7zlQStIlT126BzRX1X6o2fWP20GAYr7njNbaCRfdluPKX+DuF+QgpK9n8II
UGV9/zla445wPRIfa7dJLS1tFCe1P2+l7whY/sdkPo04H+P6JOaGv9aIP5gs
fLdUzkB1SSt4V2cnsoN4f8yjeUXun/5EXF9h+IoTd+UI8A0W2KCR5o4yFGez
FhXywjo5hrYJ8e+YT9M6rsnRcmNoV8rg00gfShvQ+9V4+mYjMd81UrmalraA
NvclcV7EeoJ5tZ39h3Q+EO+vZRewqFl7BBgfaPa1TnJH/x2/NtDus7djTTpZ
LyX1sCDrY0YpWS/FPMt5OlS9lqyXYhD+XUmU0UzWS6nsWbZDK4pO1ks5sycx
i92jg6yXEj+VK4tkesh6KYuORDVbiPeT9VIKlfXjoyOGyHopV0b1vwwljQDM
rx316NkoojQOML+27ML2+pysSYD5tWDX2dwLe2cA5tfWWq3Pca6dA5hfc9i1
2OGu3QJZX7LB+M4aIPaHrC+5spdLfshmgawvuevlSpOtjDmyvuRTHm41FD9D
1kvJFc9mHj4+RdZL2XJS1u1I3/jf+pLX58Kqy0bJeinzFY3qkG+ErJfy/dSm
jalXh8h6KasWbCnKhwfIeimclht+9Gr0kfVSPium3Sw/85usl5Khcyzkbn83
WS9lscWS326RXWS9lE+yI8KCtzrJeinHW9tlt9/uIOulNCn+8XS8yCLrpTgK
7jg6v59J1ktJ5zNyT+RlAMyvrT2avPmVeTvA/Fp6HNeWPcRmgfk15c1dK5hr
GwDm187tv77sMHFuwvzaxu62uOMapQDzaxLGCouD7seD/1/4tRbV/g+C5Qhg
PsztdtFd4+ezAPNhhzjqP2cXzQNcr2Rk3RT/fN8CwPVK8vOUaj4PLoAQuYKl
776zweG1WgdjC+cBrl+yPayGx6Bqlqw3IlFduzjYY5CsN2Ik+KE5Tr2frDfS
Wx0a6L67l6w3oqLQISER3QNS9SsDDIOEoO45HrQslQEGma4LJVRhqBBy8Aja
TQdXHoZ/WngiDM+K2bvn8P8CmBdTe7bXwa2kCWBebOiX5MApp58A82Ju9Fs/
u65/I+uX8Of4ZuaueA/+t7yYFt/CsvKpHIB5rIoNdyqFJ2cA5rHuHanTNjwy
D3D9EB77dkehvAWA64f0UldbZgn+AQkmt520A9ngo473FVSpBYDridTevnuX
enqOrP+hcGI8aM3SIbL+x3dXpTMGH/rJ+h8pPwr3x+b3kvU/gu786tSf6wGJ
Odk/99sJwfb1dZY35xjgePr7P2IjQnDx1JPXMIkO9vV9Pxt4UxgKjb7kvDL8
C2A+62aAjOrUZDPAfFY2V625cHMdwHzWqNyV7K3MKrKeyLn1iWmGHJ/A/yuf
hfkng4yCrxK75wCu/7H2Y3FC7OoFgOt/OO7jNvsq8Ac0RXNRWpewQV/uqQrL
9wvAY3AuQ3kxO5SSvezQYzRP1ufgGE5nNKa9Bf8pr9R+8aGTolAmwDzQq4qM
xvjoGYB5oDbZmhI30XmA62N8nXiyY9PTBYDrY1RQCz72EuOqMtakJGjLBo2O
J0b6HVgAuF5GVkNNcHrsHFnfYpt2wvf/U92Zh0P9/X9/KEW2sZRWhJCkbC3C
62ihsrShhdJGWVMSyl4ksrUIZWlHm30rpmRJn1SG7GYwyL4rWWbu9++6v+/T
dX26vlf3ff93959rTPN23uec13k/n6/Hc8ZgCOdbCEX3a5+fO4DzLdpv5Z2f
muzF+Rb8YYrmHOUekHFY5VF0gopO/8pSi5BhQfACS19opSJVXW7nOXWtkHm3
90WDjQhK+XU7Yv/aFiD7g5q69zaKhjQB2R8U4B8k/TSgFsj+oLkyb27Xplbi
vIwHvMNIXb4EyP6gfSvM32fl34S/9QeR/Tc0t9xLKSNTQOZbWEW5t/GNzgCZ
b6FxTHV1P5sNTcZV2sVNHNg+8LVeqYENAsGWJ4cHKGi39qPrE8EzOH9ib/Az
MX7XXPhbvwyZJ9EuE29RTLyfzJPYB3qnZtewYZXTqag6cw7U6t6beETh/JEP
QeZBPC9T5PY3YsOG5Ez2O+I+rr7jPhNJ3N/SqITh/aoURDvwrOsxcf//W/+H
QGKgy48l6UD2VyQm2pzMOzsJZH9FecC10yxiXyDzFeJpr6KGA9lA5iv4r3LX
TZ/PAed3wf5njlNQ41C3ocwRNpB5C1nCAcfz3k3jfITwFwtqM8yGcD7CrOVj
bktXDeB8hFRdsEFL+nA+glpfA++7bT1wtLTjI8eCilQ49sUWmix4tOPZ26o6
KpJ7ZXB6cpDYb11+mXKOiCDlc9m/UgxbgOy3kPa2MZevagKy32Jfe4WjSX0t
kP0Witx+rtnz6ThvweZ1bnaUWingvIXQbWinUxz8rd+C7GdoruI8PPhxCsh8
hEnTBknzhhkg8xGG/ej1UT/YMGS2Yd+O1xy4t67RKbyDDbv3CxSYMimIddO8
c8njGZxf8K6iS8/mn3z4W/8BmUfg+zxF1cNpBsg8giP36plJH9ige+HT88Oa
HFC0LiwymMv5I1+AzBM43K7tcnU9sV+pPD/zVIFN7HNT3/ZQOfB1Md0zVpqC
UkYFEvies+Hffrrnif31cfRp4FIxdtRJYYNNYFT9qRE2WEkXXOoj3k/629eZ
Fk9kvl6GpRvv7jnHmoHSTXfG2Twc+LDNSR7YHEiJ4Ll3t4INRiYe83ktZqAv
L15geRsbFtpw++5z50CRz0j65wk29MkWhDbZs+Gm5GRuCDH//ps/HL8sVal7
eRqQ/msG6/zhJRaTQPqvc0SW9Za1TwPJy2tt5JY74sUGkpe3SI4alCLOr6JJ
bSr3D1GQ+iKHTzKn2UDy88cOCebzEX836bfK9XDdTj46hHl34bChqwt0BjDv
rr3GWevaqj7Mu0OjZ4723h7wGS1ykTxARSvi/slL02XBWha9Ja6aii4YJh6o
nyLqn5VvkoiFCHpkI/ZB82ALkH7skXLbQ1U/moD0Y2ejkMZ87jog/divp+cZ
PzOgY37eTF78hF1OKZB+rHDtlpitkvfhb34s6Xd67VePH8iaApJ3NzzNTnlY
MQMk7974y8dkZJgNk/V2jJAUDizMkuj/2sOGEZ2TtoG1FPTB4uWOkbQZzKNv
lr5tEz76Gv7mT5J8uXSo4iDl6AyQfDkn/+KKK+/YsH2SvT5RjgNWm/P2rpjH
+YMXJ/nwwSNltBfKbFAaVlCMXcAGhdOxR9cLceCbpX3RpoUUJK7BG9OQyYZ/
+20y8lWREcQ+Nj9/+CXjPhuc55WfTGllQ0zB1MqbohzMc0dfXPnhdkooFE0t
mGdNn4ETpkfS4rk5QC9PTPPr58Cqr3rWvNXEeFDHKyZ3zMCqut4MrSZiPfVo
8EedIvbRfn/Flmk23OjcoP/lEBviuTSScsQ5f/DXV0RVLq15ywY09FHhB/G6
kJ/QpZ2pxHpSNQ3omWRDZyXPhzmfOLB59q6H3C1s0BiJWb5EnwM630e6ls7m
AMN+bU7mBjY4GH3KXkxcvyX3SZMVs4h5fjG7/icxHqT/wp00vvXXPy5w4YJU
jM/YDEhqHG0V5OMAsyXO2HsuBfWuuWeWXcIG/WN637o9ifrjGKYpRKyX/+af
yF3fNtHxKBVIf8KIS/B50a5JIP2JRKtur6dN00DyyLdvJ1e4ubOB5JGvLPtg
sZH4/4/fFeLJN6cg+aq2LmFHNpB8soRLw3W5hmnME/+TZD1HyWYI88Snw88s
XKY/gHnihnXthjnqfZgnnsfftdfvQA8IBat+WG1ORfLmWV8ObGHBj1edQ/50
KlI6d1u2iKsNNL5toS8+KIK6t6RcHbVqAdKvuDYh2nGDtxlIv+KkraTHfok6
IP2KQ1bvDa8epWM+uSFa76DXr1Ig/Yr0hRfBevcD+JtfQfoBdk1trUnPpoDk
ibPL/X00ymaA5ImZ6rLv/IjnIc6S2XKrH3Cg/dbR/Wb9bNiiGgEJVRR0b3Ha
UZPcGcz72h+et7498A38Tb8n+d3Jc7FHUg/MAMnvhgVEKlYT511j7WgvvaUc
qL81IexGnIf/rYeT/G01y7dThagzXnTrK2JCRL0pnYzgF+RA3cx6awFxCirR
FL6olEfM83/p0a5zRQb48qbh/mkh+RtxbHA1Op5iWM+GWT9nbdpBnH9IfXiT
3nbvX9sjYX6zqQ2jfAZqPkfP/0qcp2r5tX7KdHBgvmnsoEwtG7aNqCmd15sB
Qc7loJXE/yOv/Hn3eivieXLrhOIn4vzXUXbhwfa9xPn5iOGcNcR6+7e+es20
7O3XHDYIPXFlHybq0bHjRrXvn87A0JHWio9EveoVSxBMes8BpR0MRzpRzzZq
qJ96o0PUY9fRqddE/VM1dhJTWcuGZKa1BxIh3r915mYpsY75jcY6p4Q5mD8d
3haYLpTvBeX7D49P9M5AxaPeOxFEPW/zsxsymUVBDhXv97wvJ/alzT6qJ86z
wcd9+8pa4nr+rS/erPtlKPaUDU7jvB0jxOu1wj3/SEuxga/zcIUJ8Xn2H9ZI
8RH7tl5nwM1y4noqrs51aBknxuPnq22NxHME8Ex1m51gw1HVCNYq4v0+X29p
hhHnjF8lHgUXifEJCR45tEmPDeVusaEtxP5C6muSxot1Oc9OwJjPLA/nADac
SV7CXPs/6/m/6GW58zY+y476jL+P5dEuytbklSWY99w5MF9iaE4O5j0btaRf
n3G9i3nP02H6h126YrBeVuSzR+PJjjSslzn4pCmWzs7BetlY2o9b1nE5WC9L
0HjGU7M/Detlufz5JhZ+N7FeNrBrtw39ZyrmPWdvPla0XLIU855h31UeJtTR
Me/JstNfrRXdiHlPk8ItfHPlWzHvKXOeT+7+ud/5wnOoa4rujrEw7+nVG/T2
/GAb5j2zwgqNE7JaMO85N7DcsbGlEfOeLl3ZPOfXf8O8Z5m0s0319CfMezqF
dGvwRr/FvKdxPdeVTRvjMO/pJOWA+NRfYb1s8qbZrSHjIqyXiZpw5SuVfMJ6
mZCredqpEjrWy2718F5y6K7BelmcieFZH/0GrJcVuFwoMM1qwnrZ1Ghu2wVP
BtbLuMM729SBifWykki6nYYIE+tlUjLvbfrym7FeRl1QcF1wbyPWy8rnjjqI
7anFelmkLffAEunfepnFI+/X9Dm/9bKNCy46aZz5/0cvW4zu1U1+K8c8JxI4
r6vatBXnBwcuzjzxviEJ5wcf4AFbs/xMnB+85enObDmFXCD5ziWJYkEu5llA
8p03eo1CfwknAcl3+o3bdo703cR854NSi/cCXQWY57z7LUVPZX8t5jkL2O4m
G9cwcb7wjXOVGQzfNpwv/HGg6eaaERaN1Ou4PdrUoqJYOG+4SpaZdGC0FfOg
1wZ0nnYVMTCPGVRyc5lQfzVcnHcq4eQSQXTup4pp7Ks6aK5sTU6SFEK3siea
Om81QuY7OSs3WWEUZhvgsjSnGTh9d6y6xKmoKjooVnyKgfW8FR0aBrX6TKzn
PdB8GPUrlIH1vOoqI7W+Z01Yz8sNCP243b8e63l3BleOCXVVYz1PSCpQypXv
t56n7vfFZsXQm/9nPS9s66iwp8YnzHeqJMteLJINxnxnthFdSWLlQ5w3nBL1
sit8RQbOG778edpqRXkOkLwnI9GxlDsjG0jec2H48cGcqhdA8p5v8yfe3G8z
xPnE6dw3uDi6OZjvXG61xmjv0m+Y79yn5hidfrYZ5xEfEmkzamG24jxidd7t
3Fvesmiknri34OmGY19YOJ94y5ut1xs92jAfqqvg8bRcuAXzmZ8OrFXwYFSB
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
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{315, 2220, 245, 246, 247, 248, 249, 250, 606, 507, 
            426, 361, 314, 286, 626, 527, 446, 381, 334, 645, 546, 465, 400, 
            251, 607, 508, 427, 665, 566, 362, 651, 552, 687, 471, 675, 576, 
            695}}], 
           PolygonBox[CompressedData["
1:eJwV0LtLlXEYB/DXKy7eUpt0EFrOMT0OgkgimDlqelrK29DgZVG8gDYpKgil
IDWE1xBCqINBmuKuTba1GKhHUxc17U/w8w4fvt/n97w/znnf0tcD8f7UIAhS
mCGRFQRfOdZPaLK8slzgJRGySdo1213ri7wiSg7dztPY1Ad5yqnnnzu70Zdo
o4xRZ4Xs6ZPk0mNOZ0sfYlaPcKg3MK4Xc6Cvyie81d/LGCf6md9r0f/py3zU
q2jXZ+QjvvHbvCbr2OGxeUwWkWA/vC9r+MGUeV6W850j87psYJc8c6/M4Et4
J/w+spphfU5G+aN/lvU80ydkCRv8Mn+StbzTP8hKkvpf79Wq3+ordFDOG2cP
+alPk0+fOZNtfYRGzt2PO7sLvx2dVPCAC7tLXtj/D/8DXcQo4B7eXkPT
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwVz7lVQkEABdCBQHCJtAIQkSpcEkUxARdyllAwkVhbUFlq8BxQS5AaRNZM
UalCr8E9/817M8FPlOqFWjSEECHPG914CI/M5ClrxgxFOiw48WhiW5W3uaDN
Dznb2LYipzmnxTfHtpFtX77ihaiuyrK8xRlNvjjSD93fk+s8E9FViMspTnlg
Tlb/7v6uXOPp/8d0ZWLyLX02nBtsygXu+eRQN/BkR76kxy8l/ZLvDa+sO1+T
lPPc8cGB7g8LSibi
            "]], 
           PolygonBox[CompressedData["
1:eJwV0UlQjnEcwPFHl5LlJCVLOuDANLYWzZhmGkO2i7FVDCrL0HoglENoYaIx
w0wzpplkiepgNJbIpYPlIA44MGZ0QbK1Kief5/CZ3/f3f553ed43Ma9kS3FE
EAST6KE9Kgg6GNHDDDHIH+a6aRWHuMM/dnvxb9fm6DQOcpsJdrn2y7XNupKn
THdWxmydygFaGSfX+U/3N+g3JNrPsklX0M00eynxuo6XxNtPkaLfs0ifZ7++
xV9y7D+8d59erq9wUa82m3mt55tn2KgzzZt81HfNJTRw0t5ppnGVJ/Y2cyol
zLJ3mWto5ZP9npnEJWrt9810mnhh7whfRyXJ9gyzhXd6oXmOAp1sNobfS4+R
rQc802e9TF/mgu4lQZ9mg/7A4vB5OaEfM0WHf3ycruE5cfYKVuq3LNB15Osb
jLLT/t1n1utXzLNXsV4fD5+daHsRsbqaZ8SGvx0rdB7XGWGHs37vl6XLecRk
Z4XMDP8r9tHCMNudf3P/On2Mh0Q5O0JM+Duwl2sMsc35V/ev1Ud5QKSzw8zQ
S9lDM4Nsdf7F/f8Bhdhjug==
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{1, 173, 139, 109, 83, 198, 164, 134, 64, 191, 157, 127, 
           101, 51, 184, 150, 120, 94, 75, 195, 161, 131, 106, 2, 174, 140, 
           110, 84, 65, 192, 158, 128, 102, 52, 185, 151, 121, 95, 76, 3, 175,
            141, 111, 85, 66, 53, 186, 152, 122, 96, 77, 4, 176, 142, 112, 86,
            67, 54, 5, 177, 143, 113, 87, 68, 55, 6, 178, 144, 114, 88, 69, 
           56, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 
           23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 179, 145, 
           115, 89, 70, 57, 187, 153, 123, 97, 78, 37, 180, 146, 116, 90, 71, 
           58, 188, 154, 124, 98, 79, 38, 181, 147, 117, 91, 72, 193, 159, 
           129, 103, 59, 189, 155, 125, 99, 80, 196, 162, 132, 107, 39, 182, 
           148, 118, 92, 199, 165, 135, 73, 194, 160, 130, 104, 60, 190, 156, 
           126, 100, 201, 167, 137, 81, 197, 163, 133, 204, 170, 108, 202, 
           168, 209, 138, 206, 172, 40, 183, 149, 207, 119, 203, 169, 210, 93,
            200, 166, 208, 136, 205, 171, 211, 74, 105, 61, 82, 41, 62, 42, 
           43, 44, 45, 46, 47, 48, 49, 63, 50}]}, 
         Annotation[#, "Charting`Private`Tag$573839#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1GWYVVUUBuDLUENLIz10SCPdSPfQjaSiMJSFgYiKgiIqoNitDGV3dyfd
3d0N73r88c761trn3Dh370kZnpY6PkMikdjnzwq1bVIisV1+gh6U4RazfHwj
30sWhusvq8sYRzNWur+d+Q75SVIpy61m+flWnk5WRugTLJfjAzRnlVF7s53y
PHpSjmRGmmfgbTmNFqx2fQezXfJ8elGebIwyT+IdeQItWeP6jma75QX0pgLZ
WWutk7U98lP0oSI5WGets7W98tP0pRI5WW9tA+nJicRGdRNdkv5/ngvpR2Vy
sdlaV2v75WfoTxVyM9o8I+/KE2nFFtd3MzsgP8sAqnKbWQG+k+8jD2P0mXhP
nsQjcmXWyK2ZJhfnN/kFtTGz4ndWa7BJ3ur9ussH5efiOch1GSjPVMuxjP/0
L6vN+JBr9LerBVnM93G/2pD3maGfq1aL34MN+jfU1nzMVfob1Mwsinvi+aj1
mSw/qlZhrfya2pLrYi+qJVjK7/oX1SbMjv2n1mSzvM336iEfkp9nENW4w6wQ
P8j3k5cb9Vn4QJ5CG7a7P9XscDw7BlOdfOywtpOe1o/EZ2AINcjPYvtil/Ve
1o/qX2IoNSnAWPOs8RzjnNGW3a7vbXYsnjPDqEVBbjJP5qM4V7Rjj+v7mB2X
X+F6alOIm82zxXOOfUN79rq+r9kJ+VWGU4epZoX5UX6AwozTZ+eT+I3pwHR9
Sf6IfcY+r9dPfzJ+H0bwkL48K+S63CkX4Sf5QYowXp+DT+O3YI5clXVyx9jb
cin+jD3APLkWW+T93rO/fEp+Pc6lfC0j5YfVCqyM56E2jzX5LvVqlvBz7AW1
UfzWzNQ/rlaPM8hG/Zuxz+K7x336NDUn6XwWZ1JtEGeOqfrH4izE/yjWx+dS
W9FJnqGW5q/YA2pT5sjz1dpslQ/4TgPk03E+GMUsfUVWyfW4Wy7KL/GMKcoE
fS4+j+dM59jP+hT+js/FQa89UH8mvhejqU8xJprn5ot4RnThkOsHmZ2V32IM
DSjOYWuDrZ2TF8XZpSElOGLtKMc4zgmWOAMn1VOc5gxnOccQr3Pefelx9mhE
SSaZ5+HL+M50jT2pL8M/8lzOu3+o/kKcMxbK9Rgrz1YrsZzVsc/VFnFuaKy/
Ry3Gr7FfKMXk+F/EV7FONy54j2FmF+Ulcf5oQmkuWrvEZRL6DCSRkUxxDt13
SV0a55CmpDDFPC9fy9PoHmdCX5Z/Yx+yQK7Dtnj+aps4J2TWXwEGc/K/
           "]]}, Annotation[#, "Charting`Private`Tag$573839#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1HccTmUYBuDPJonsFdFCNiUjpUiSpOwdZWdEJUoIZZUZyi4Nq0iZFUJ2
2Vv23kVWdD1/XL/3vp9zvvOt95x8LTq91DFJIpHokDSRWMwHyROJm8kSiWE8
SVrOmk8xz8lsvSkFWWLez+w/eTiVuJMFZiVYKb/JOedN1XPxnd6MQvyuP8lW
uR8/O6+/fksewVOkY6FZSVbJb3HeeV/oufleb84+uS6n5IdZLVdim9yfE/Ir
XJZ/8foB8m15ZFxPbsPT8hbr8xyQb1nf5i55kbUU6VP43Pq/cuc4Lh+xNiGb
Yxf1ZNZ39fusF7zXl/I9pNPnOP633CFm+iv6frkeWfXTelJrTz2/tbC+Rn6K
jPp2/brclQHySWsLrsi/eq8P5QSj9MpslWtwUE7PYrk0q+XuXPSaaXoe5uot
KMJS84/MkjBar0IGLpkvYzkDHUvKp+bPcHd8N/OvzPLyg96SovxmPsgsGWP0
qmyTX+CQnDH2k/wIa+R3OCo35ZL8j9d/Ld/LvOjW13lV/stanzNyMdbGf8kO
+Ya1Gx/Kp6wtyeF3/FdPaX1ff8C6wvUHy8m5Qx/r+AW5bexb/Vl9u1yTTPph
/bbcPb6rnin2r/woGfS1+lW5Cz3kY9Zm/C0nd/y92Ive8xtrPn40v2ztyGvy
AWsDzsrFWSdXZqf8ESu9doiegnF6NXbIL3JEzhz7XC7DOrknV7zm29hX/KS3
ogTr9SrskgeyynlD9ZR8pj9Hlthf+mOsl9+Ne8B502OfM19vTcm4r80/NkvF
53p1ssbvYT7D7H4W6G0oFfeq+SdmqRmvP082rpmvYS3rWM8GhjkvDROcU4Ps
cU+Yb2R4/H9MNHuBHLEHzGfG/8xCvS2l+cN8hFlaJuk1yclN81lmD7JIb8cj
/Gk+0uxOJusvkivuFb0sG+T3+M95s/WHWKy351E26M+wWx7EJueNiucCU/Ra
7JRrcVTOzTK5HBvlXvFM8prv9AIs0TtwUG7IObkMG+Wq7InvYn2TwfLpuF+4
KqeyB3vLm11vtPWu+B3MpsYzQW7HS/KuWMns2DE9YX0n7kPrPfpyuTx363/E
fya/Ec+TuLf043Jzsuv/6CmsvWIPWG977+/lgvH++s+xR+VOcW/Lh6yNOC8/
Fv+X/Cx75SGciXuFa/IW1/pUTs8X+svsll/muJwnnkFyBf6Ue8d3YY5eiF/k
jpRlq2uNifuYL/Xa5CUJc80e5le5E+XiOeb8sfEbME2vw70kjWeGY+PMM/KV
Xpd8JIv71bGd7GI3e9jLPvbzWTxr+Nq59cgfz4543jn2efwnfKPX5774bfnB
rDBL5c6Uj2eJ88ebZeFbvQH3s0J/nE1yH1IyTy/CMrkLFWLf69XYJw+N/eZ6
E/SsTNcbskeuzQn5AVbKFWN/yX1jv/GjXpTl8hsclhtzQX487gf5OfbHPWR9
i4/ls9ZW5LRHruuprX30Qz7HRGu2uCfNZjh2SW5Pbr2RvleuE99dPxn/obWH
ns/6oL5KfoIt8gdxbX7Si/Gb3JWK8Vm916TYx8zUG/MQaTji2FGOcZwTnOQU
p5nsNTmY5dwmFOAO5psVZ4XcjSfYrFfnL/kTzsmtuRHv5TP3jeeS9Yzr/g+r
pkf0
           "]]}, Annotation[#, "Charting`Private`Tag$573839#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV03eA12McwPHvqWsKRRSRU7mF3F2drSUaqG52IjpUyB0SMiqjpZJVJA3K
HtG2KppWyyilQVFRWZVNr88fr3t/nuf53fh9n9+llVcWVKQkSZLnS3pqkhxT
LUk26xuMooIyMsgki2xO4VROozmnk0MueTTwc7bom4ymksvi++z/pkuZyv20
oKH9rTqTMdwU+/b+1k95kR7xO+3t02U8wwOcae9/XcOrtORYe9/oLB7iXOsq
fGG+OV5j/kdX8hJtrGuwwXx5vC/zfl3OheY6PGtupdVYb75Yj2So+SxN6MZa
6456BCW8Zt1Oa1HE19aXan26k299nH6rXXW2ttdDKWas9XlalQK+tO6kdbnF
nK//6io6mA/nZXNbrclG8xVxT+YDuoKLzIcxzdxaq1PIV9aX6FEMM5+tKXxm
fp0zaGS9TefwMP3pGZ8B+7/rh0xneNwNx9vfrnN5hFu5Mp5Z/HzOifuJ98j5
nOD13+k8HmUAV8Wzp7Gz73U+j3EbveI9cKKzHfoWj3M75XG3pDnbqW8zjju4
Op5R3A0XxDOPu45nw0lev0vfYTwDuSaeL02c/aDv8gR3cm3cOU2d/ajv8SR3
0Tvui2bOdusCJnA3fejMyc726EKe4h76xmeMdGd7dRETGcR1cU9kOPtJ3+dp
BnM9Ofb/0I94jhHxmSPT/s/6AZPieVunsi7+Dq1HKUPirvU/Xc0r3ECuvT/1
Y55nJF3Isv+LLmYy99KPrnSjgEKKKKaEUrJ936+6hCncx43k2f9LP+EFHozP
ib1D+Nw8I+7MXJtN8Tfo0ZTF/5T1QeABlIE=
           "]]}, Annotation[#, "Charting`Private`Tag$573839#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1Xf8jXUYxvFjZEUpkpEtq+wRZWRHKisKkR/Zo0Ike+9IZDfskV1ZkVEp
pcjeRYOSIjSM3vcfn9d1X59nnXOe5/ucvEk9GnVPlkgkGiRPJJqnSiSypEkk
ZqROJMrgjL4M49ECLfEc7rXPTNvL4qy+HBNQjl/PNUJyfMm1QlZ+ll4OP+rv
YyLK8xu4xkiB3VxrZONn6+Xxk74CT3J79S7Igde5h7iN5iZIie76n3IcvorP
rJ8090VhPM9l5+aYH0J/8y35M9/efM48DCv1p/R95q4Yar4N95l7yWtyjpws
x8s7sQiTHFdBbuLflE/LQTI53olz6D3kJTlLjpdjZQYswNfxG8tT/HT5qhwh
06CIuY/8N84d3998N9o4Joecy1XAL3oH/bx5OFbpDfTvzN2QE5O5itxmc1Ok
wp64t9xpcz8URRJ3H/e2uSLO6avRkNsfvzdy4Q3uYe5jczOkxjdcW+SM764/
jPP6GkzBI/wW7hmkwbdcO+Ti39Ufwa/6WryJF+IeIbft79lWCb/p6zA1vjPy
2DaPr4wL+geYhkr8Vu5ZpMVeriPy8vP1Kvhd/xCNuANxn5Abb3GVuU/MzZEO
L+qX5QTsi2dc/978Gh5AJy5f3FNzVVyM6+m/xv3ER3pj/WCcK545cyrkMfeW
f8dvGuc3Z8R0+1eR27ipsoUcLFPgdvNL8i85W06M51/egYVx32NNyR/4GbK/
HCnTxu+IB2N9yP/k23KqnCQzobNj88d5uEcxwJzAH3wn+VucC+v1Jvqh+CzI
G9fiqnLbzS2RHvu557kzcS4Ui/XMFYj1Y66GP/UNmIlH+R3cc8iAA1xX3M8v
1qvjkr4Rs9AN3dEDL+IlvIye6IXeKOjYJY6rgcv6JszGKyhk21K+Jv7SN2MO
qvE7uVa4Awe5PijML9Nr4Yr+MeaiOv8p1xp34hDXF0X45XptXNW34GnusP4y
8sU94Gpwn8X7ChlxmGvDnTUPRHG8yhXl3jfXwTW9s37BPApb9ab6EXNP5Mc7
XE3uc3Mb3BXX1a/E+wRHbE/SfzQPivOY06FEXE9el9Pi/WHOjH72f0Cu4KbI
x+LzyWTxDNvWRf7OzZSj5eh4XmONxnqyvZk8GmtM9pLDZepY/yigvyL/kXPl
FDlR3hX3PvZxfC25Kz6TTJJDZMp4L8Z3llfjWcbReBfpP8W6QUn002/EtWPd
2v6gvtJcF//Ec6ZfNI/BNv0Z/VisT9yP97ja3BfmtsiEY/EO436Oz4JS6M8V
41aZ6+FffTue5Y7Hd0RBzOPqcF+a2yEzjnMDUJxfrT+O//QdmI/H+N3cC7gH
J7iBKMGv0evjur4TC1CX/4prjyw4yQ1CSX6t/gRu6J9iIerFfxLXAffiFDcY
pfh1+pO4qX+GRXic38N1RFac5oagNP+B/hRuxTqNd4h5bPy+5vTxHo7n0rbm
8gTfB4WwmKvPfWPuhGz4nhuKMvyHegMksItbgmEYjhEYiVEYjTEYi7KO+8j+
DZEMX3BL8QT/rd4Z2fFD/O9wv5iHonQ8K/pNOR1vmO+J9wnG2fd/wkI5wQ==

           "]]}, Annotation[#, "Charting`Private`Tag$573839#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"Feedforward solution\"", TraditionalForm], 
     PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1a\"", "\"u1a\"", "\"x1a\"", "\"\[Theta]dot1a\"", 
       "\"xdot1a\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8648376866338243`*^9, {3.864837721244707*^9, 3.8648377460817285`*^9}, {
   3.864837800602215*^9, 3.8648378151965265`*^9}, {3.864837882180011*^9, 
   3.864837904994682*^9}},
 CellLabel->
  "Out[1448]=",ExpressionUUID->"298d6fac-cc4c-4288-9a52-5996256d62d4"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
I8t8FghdWiWrLs9Ep9be7bKl5osnatNN7ioTMHl+q5MLNd5OWPp9wy0MZHmj
UVaQGo9XFbV/bVMZh835TL/nPW34pVL9atg8CX2Ha46U/qHGW/nKbHyOgc7f
+iR9nZrPFlzJvPL1HBMt8Tw0I8PDBsIbye+va91opRYyDom7q5kBSu3Yss34
hZEfA/HFWfPEUettwiM/JPC/S+HqwYOVojk9/hMgUXCxtRi1Y9d/9/edlWQi
vpod0jHU81kYv/CfJzMBtvxTLpVU/rrd0TfY8IeB1E/Y5lym5gtvI2/WOqlx
MN/9xYf7Vxt20r3HKpSchHlf/oguouY//y7JoBY96nv4uht3U/PFspd/eRVr
x6F/k0P9a412fL09TmthOgOVnLGVZ1DzBeGjoa+E7i/51YNVfb8dqquYAIMc
k86Ly9vxs86iXrnNTGTutOFmBDVfJC0wVJxlMAHenm8H/1HrIce/qmERQwwk
sVzkVw/1/ISvkvZhtZsGKD+agI/ogvavve14b+KG+usiTOQzrGE7Tv3749cG
rYwEJ8DFfNfbvVTe2Rwf7tZdzEA7a/7uN6Tud+XMrxwR/kkoe6z+eiFfO56b
tqPpyg9qfk7e86ZuVzu+FhLQpjAsjko9kpyVw3qw9is7l01rmcj5+KL0F1R7
hax5xae5fwJGQsWjXlDtqZbQvim5i4GM08RjfKj7f1tdkXJkIRPdm1dVJk9d
2+roZpcpTEDug62j/lT/yVDYY/yznoEEpe07jlD9a5N3gELL33EI6dipmkyN
b/MsH72aPS2OHGJVdJby9mIsyDyUazEBRaI/Z5+lvv88RQ+m1xQD1fDu6VtE
jU+EN5P2IbyZKyQ4/Ngpk1zCm2+Zlgcg3UDafxVuXfAkQiWa9l+97EvPy3yM
o/3X+o/zETyOo/3XS0a79nVzR9P+61ZHy7qeDeG0/8rdvO1QnIcX7b86Jus+
cf99k/ZfmXtDHHd5HgPCm5W0ZosEP1hO82aeZYODz/2e0LyZZ0TS5OdAFM2b
lR3GkpM/p9O8+Wnqx8NGWz/TvFnXPcKPy6SY5s0lvcuDtvH9pnnzUx7u4pP1
VTRvXmsX+74/rB4T3lxjasObndqECW9WODupmHSUhQlvTjl0+sqPO2xMeLNC
7PCDSkUOJrw5uWdk9RIHDia8efnfSi09Sw4mvLkNXQi+x8XBhDcXF8csntnM
xoQ3NyvZ+fGtZWHCm9/ovsOW+U2Y8Oa17yofFextwIQ3nzVxL1FtrMGEN++/
c2LJ95YKTHjztTMxVe78vzDhzUd4rdanmZTQvPnUr/qpa9u/0rxZ7gAuPqyQ
S/Nmrrez5M4dTqZ583tbhT57Lz+aN8fUf9j9gccJCG+W/6M2b2t/ABDe3Bo7
nhN1NxgIb94ftOq7Yl4oEN585vGkfpZYBBDebJIytkB1XyQQ3tz39VVoSOoL
ILxZsbGmSUo+CghvDjRw8hxIiQbCm0vZK34XPIkFwpu7LN9Z3bKOB8KbxRe5
t/L/SgTCm0s7Tye7xj6h/dctf++t3OkfSfuvt18WLr3pGEv7r+f/3nrSMTue
9l837p9/yUMuFhPejOXrtJc5vMAPeFcNrQzohlPtA8yoHS74n0mOheLRPnBz
TSk3LtfD9nNvrzl+agDm/bader3EhObRFbu0BzbOvknzaHeZmInQ+kCaRx+S
uLs1myuZ5tFnYg7M05fLpXk0z0bmoY1yhTRvtg9akZsZ0IgJby7w06/39WrG
hDdvWZuZUj3EwoQ3ZyxS23qxkY0Jb+4Ct+Vvz3Aw4c17kVCI912qP//Hm02/
lBbKAQcT3uxV8i/2cAwbE97cUSISsS6ThQlv9tfP6Qy910z7who+xe2a4+mY
+MKbhlarnTsajYkvHCC+IkSw6BYmfFrI8GwXs8IbCJ/eslApUv1eEBA+neOW
7xEZFAKET0NAppNccAIQPt14Mtkb/7Gn/WGX8K1xa3zDaH/4QtGf6B13Y2h/
+NIevupLs+JpfzjBUN50aW8sJny6bYnI3rTil9hESOGI35MuSFHc+NDysTtW
UFo1q/1PL4h4fH0+P8cS37q4Ltn5Tz94jf4bz5hlQvPr7zfMPJrtz9L82nNB
5tJAAx+aX/cWqj+D1Qk0vw7heZ7Lp5dJ8+vNacdaRiK+0HwajYc7akY2YMKn
LWwnQtPkmzHh0502VTu14liY8GntmLA7MclsTPj0prmtCjn7OZjw6bnV4+wM
Jw4mfDrDb3HZn+McTPj09d+lvTsr2Jjw6Uc+3y8fGWdhwqeDj3DxvKhupn1r
1VZ+zQjnTEx8a18eXzWjPwmY+NZGi9KypF2eYMKzv+qzL3AGngDh2U1eaXfu
8wUB4dl95ta6p4VCgPDs8SPN2zP5EoDw7H8nNl1QrvOh/etH7lv3rPJ6SfvX
J46p7z0GcZjw7NSNO9btaInDvy642YRuY4Nhx7GczpUxOH5qRUBGVA9UtmZo
px1xwq99jpRcKu0D2Ss8N//aKcH9d7lxCi0D8M2yYUmRzDFYc2nR8XMdQ9Cr
3vuIZ4UzJnzc+U3SNq7kCJqPf42wVFLY/pbm3+mvbLlv7G7ChH9DLM8S9eFm
TPi3SaZ5if4ONib8O004/dkyJgcT/u2t/k2i2IqDCf+W8TvaknuLen//8e9Z
j7oXH1vGwYR/19Q/vVF7jU3754eb1BO9l0Vg4p+X2azVSVtlQPPx6xGtXSse
+AHh4w7/xE0HpoOA8PHYvF/7apQTgfBxva66jvOXL9M+unFWTJk/I4T20eea
u6XZcqJpH33NeEB1a3sc7aPrLInuPKsehwkf/6C3EEVejMIlT+OdtPm64M3v
CzZuP57hQt9TpRr+vXC09oaZ3qbruD9AqD/Aqx9MEq1VznOfpPn5+FXfGi6V
IzQ/b/LwLj5u7UnzcwG/5nV5d2Jpfr5yhf7OgvsfaH6ez45e+csin+bjBdXB
C28sbcCEj79f8OemdFcTJnxcQzHveMNdFiZ8vGv/bdVJPzYmfPzXyLubCtup
9/cfH89YLGQW48jBhI+/lU5tyzbhYMLH496+ipvfycaEj3+bnW6VIcXGhI93
dadH/J3Fov39a/aHfYyPZGPi77cfKEmfSn2Nib9v8yPksLK4NyY8vWrHqiQ9
5AKEp88R5JPPjgwEwtPXezxtS8kPBsLTHRatEffLjgfC008Wi8OLv560z78e
tco5hr2gff4LYm5LrrTFYsLTV6aI7XvCFY/9hBZmm6SwoHw46fSxxBg8717s
12uLesBefFXwJZX7+OC4a/APrz5YUX/n3PuinZiLHfQXIgdg74KmpDNrToJX
bk/xVPwQ9BfkDvRst8eEzzs2Vh16cjeU5vMB3Xw9Er4pNH+/8KrOdDGzCRP+
fuhG16Nf+c2Y8PfO1xdFJ6TZmPD3iv1+/1wH2Zjw91LRfXoyFzmY8Pf85i0T
J+9Q7+8//v7nRbfn6Q0cTPj7i4hvD/a6s+n9DJn6eeZ3kl9gsp+hVMvg5fOz
xpjw+ct3FMxGfvkC4fNC0jut6nAQED5/b3t8klVbAs3jF11ZfWjNnQhs0FB7
mVv/F2is4ujIM2Kx5MLYF6+318IPmReDk3Pisaz2bvW2F83AH2i8mdszFrsV
9G9+LNEHworq++5lnMFjakevXJIegCzl3kcLsQkYmXrnrF89BLZxuZlzbS5j
F3xrUeyyESjrVv+pa+9H83zJFRsW/yhkY8LzHddM/vOl5gvC878e/rngFDWf
EJ6f9PHRn0gtDr3/IohzQyXU3ZPm+3uTWtJWqAfBpPiM9d7AEriQlDp542oU
lgg33X/0cCWo7ba6c9M1Dlc/uFsquLQRSlkeSSdy4vDstQu5Z8/pB62QDB3X
TVrA/4hlJq4wCEbDqxuESvdCobR2w/dVw7DD8Pxq5xcutB/gqSPht0OGg4kf
EPVnuXSJDQcTP0Cwbp941jUOvf/jx5L3Jcc4/kB8gKcSrceN7ycC8QGkgnaN
GGacovd/uBZo/9yfEkTv/3jmsvrGJq9oev+H6E3N2zoVcfT+j4E/QZN8FtT1
fz7AZetqtfz3UfhBacd8hU+dcMV/GdfYB08spTm6Zfh2L0SaODl8t7uBk9+M
iUVd7Yf3i3vWDYob0L7AypZ/LzYy9tC+wElhhzk565/SvsDXq6ElNRtjaF9g
u+0XhZTI97QvIP/W3kfl5/98ALWWfadcm+ox8QFSatXwstImTHyA1hW+4Xct
WZj4AKL6O9N8H7Mx8QE2/+ZYbNtEtfd/PsA1UecCL2p9SXwAuU1/szae52Di
A9h0D2bZDbMx8QFum91LdlrJxsQHOJ0/KR8mxaL3y+j47ns8uiMHk/0yUost
5OJXvcFkv8xJ0+S9iQd9MfEHBhRV4eHG+0D8AdtgMd/DRwOB+ANz/TxD/SOD
gfgD8ge6xs8HxAPxBwL+2onhgqf0/hkjr6J9Nxe+oPfPCBqXGNi8i8XEH4h1
Xrf8tEA8HjVqPfXpMguMLVk/mtpjcPGntlMHa7tB9snSq+/eP8Ahr5fx3LHq
g0vTfetKlh7EuWOPhLQcB6B9Dl6v6Hsa8s2rHh9wGwK/zTw56x/bYOIjVIzt
KxGNCaZ9BMPjMoPdBcm0b6B+Rj+98ncjJr5BYOODgcuJzZj4BsEFp2uXManx
6j/fIMpNvF3hLxsT3yC8y9461IyDiW8QvuMjnzyVf4lvsGNKgW25jYOJb5DO
mh90O5BN7x+6IDB2xGjmJSb7h6oWf1quc/0KJj7C55lHnT4NPkB8hOakBEun
iCAgPsLiNUOGq/ISaP+grP1gz+Pv4Xh364WNlVXlYIc6lAvzY7Ds+s5JblwD
ryt2BV0Risd3Q4VaNI2b4dW+JU+i8mJxjZ1HyLahXnBXEjuREX0ef9Db9ez2
SD/kV1eUOz8xgafCd2wdhIZguZF/+9av5tjpX5Gjz6wRcFrKrt7E9qX9hT2S
Hdc6stmY+Avl31RNTXQ5mPgL9y0Xm/z/epr4C7siSnafP8yh9zvZfrC3Dwx4
SvsMCZdf82osD4I1nporOI+Koep5wbIKnig8GdMvolBeAXZPlz0wOB+Hm/w/
KxpHNcCgWe3pivI4fLrpvXlOTx+kB1lqRdTsgvywUtdFjEGI61Py/GyuC+Of
NgfNFxiG26rnTzkde0D7ENsO8j0zFuVg4kNYvnB8MYtaPxIfYsVbxUcdNzj0
fqsP4W5Pz+70B+I/sDcO/Rw1SgTx4UdZzjVl8FLm7Hm7TTF4zfFbKQlfquGa
VXlY10gcRjvDVglXNQGfUq2T2YI4rOy8sMzjbT+k2XfHiuqdhv7TB/vmFQ1C
9Kt9bEdlI9qf8GQvHkjYzcHEnziu++TYaao9iT9x2WbdigEjDr2/68jcPa+2
1gdCSfpc/9+//sBbl7wDxpJxuDdHu5GRWA8GOtKb7Qfj8KRGl7JsSh/UMKoc
Sr4twLuLXn1T/jwA5jKp6tf4DID4FQm8gfMVr3Iw8SvCyo1/qdpyMNk/NnPb
Ve7fu+cwW/CspsGHWuie07t9mWg8Vl15XvvM9gFIz+d2Vg8xAeJfaEsFWkZT
673V/r8fOJRWwlenveGp0XG4/LrKrfTQRngh+7j+R1QczrV1Djqt1A85f9cs
3Fl2GDSvD+5lag3C5j7YpWC0EYifkbb97K811PqD+BmHu1OaNl2mvs//9rNN
KVrYpt8MoH2NZvaEw+zERCC+xoPP4t3nGrXp/WymOcdUF/IE0fvZ7pqf5Bs8
H03vZ4u57P0w7kccvZ8tZ+Pvhrm2cZj4GrX3PK5J10dhk77HbL+ITvCym8lc
LueFP0bu/att0Qsfry0rvRJtjedmXXsZf7ofjO53aQWfO0H7HO3Kj2Fe4Tba
5/Ct3nxjqNGd9jkMIt6ekPGOpn0O0Rkxv7Ub39M+hy6PuLDY/c+0r2E2+oxR
jusx8TXKrOQMHPKaMPE1Bu++uhN1msqv//kaNVv5tbKd2Zj4GvwdC4Yl13Ew
8TWMYnaEcajxjvgaRpNFojrmHEx8DU2PI5mPJ9iY+Bomz80FvimxMfE1pmf7
XaxdxqL3/xl32bV3peZgsv9vzT7756tb3mCy/2+lzr3QxMvPMfE7fHW+S1WE
3QPidxTcrD8zTz4QiN8hd/6nhrRnMBC/oy2yY62ZSzwQv+NIl/GpcRUPej/g
hiVcf2ZqIun9gDOWEb2jQbGY+B0a10PtPITj8SreH0oDWiyo5Bta6Msfi+PY
rgqZGd2gV5jjY2z7EO9hXHtXfrYPXrmt/nzm/GG8kI8rRPcK1f+7TvQU3TOG
U9lFbdfsqPV6h5dxQf4tTHyRW8rqQ1U46H++yGR0X7ppMu2DZKroNjemN2Li
gwT2/S5/FtaMiQ9SuufkeeEZFiY+iOwkI7aCw8bEB5E49mpm8zlq/fafD/Kd
u3R52/+/v/98kAerrQXKqDxGfJCspV4JPeFsej/knFqOeHZcFCb7Ib1OShSO
Tlhh4ou0v1KtSTrpA8QXOSpcu7TBMwiIL+IjmKu5MCmB9kMKfn9tfr0+HG+5
kCqxO7AcdthOYOaLGByRMVvxlVMNLDgUWVDHiMdJe3vf2ao1w5svffWa1dT7
+F1zyLOlF9LDawwXvTLH800+LHZo7YcR06V5M4dNYOWZq5UvJwZhTm4fX6DE
eezAbZMsMDgM4q+dLGxkfWm/5JDK2aW/09mY+CWf/96PlNXmYOKXZIfvWfyF
Gl+JX2J0x+7fSj0OvX9TNcdDJuOAB+2b7I0MmGmSCII9Ol1333IVQ7T+7oTI
7y9xr6Jqr493BfiJt/L+ORKHzy1tPSFg1gCrFzlOX6qLw/yqfAskm/rAPvqg
0o4UFViesE9q+fAALFp2Vjyh5gj4zFccVRsbAi2hp4vmq96nfRWdirOixcIc
THyVG0HynJvWHEx8lZn1G4yNb3Lo/aN+32s1vrH9gPgpQpzFfiaaicC0Kw3t
CioDDY8obWfhGJzcGNCg51oNTl7vS2p74/D1VuexHelNEBRTWFOyLg77ePie
8XnRD3ePXTx5cucpcH+LDqllD0Kx3cKdn0KP037LD88fS0d3cjDxW0xKi7pF
qPYkfkvVJobj2dMcer/qkfNGubV5gfBJVd8WfP/A3tT61NbpWGy975pw6qV6
MOV94fl3PA5HRai234jsg9nfbhXLJ27EkZVyhqqpAzAii4fmpxgC8V8WMhb9
XkeN/8R/0Xp0X/6EHQeT/bAjT4uw6b7n4O3z4OYsu1pQcTksNDk3HgdtrKs3
UxwA6/XY5eUHEyB+zGxRzURh6vmXLJA1b/eshJXgpjvHPw4fnzB6aWLcCKlp
s6OtUuKw2a+f2umL+sEgXkzvzaNDEGt/sUJEdRAuZ5/Z9dgcgPgzbn5y7YLU
8xB/Zrv75BMean6l9+dGjZmGrgugfZrX/CeK1vonQnp//bZ4wWp4Ea7sINIU
hw9HOTuHOfXDK7GsnuxQQyB+TexW15SV1PxK/BqlcKMfTfaBYGf4zoy/tw4C
VA72nuSLx8bdonf2eg4Ad/D2/Obbp4D4NgolfvsP2nNwQMy3nyemamCobZWP
3Ox4rL//+/R15gDs0mg0Gn9jAsS/mSNYn+xHtQ9TLnF1rmgl8K2608e+FYdP
zo6cSmM1wOWzC67aFsbh8z4GI1JSgxDSnMDve18LLEvU7k+fYCDrpcJGt25z
sPPssrpDP8TRoecLcjt8/CGu6OgDLt4aKIlf7b5wOg7/uRWDHuX3Q6q79sXB
XcZAfJ2jMXxR/tT9ia/TmLe4u2AgEC4pr0491VEP0gn+Ibu64jDr42aVdb8H
wM5vMqZ+1Qlwc4IFb4ZrYbQ8pPsa9f5rF3RnGx0cAOdqiE2zNAHi77RvlTjz
/+3ZcuZeAbcdA53uV2ndRLUPs2+tsmqdOBp3bnrsnx5A+z3fjWYcuXEiEL+n
cNqLdadfjd4freYlNfMgPpDeH70tZriy81A0vT96kbj/s+kvcfT+6NJH5h/V
78Vh4vfYrTwu4NsThUu4Db8VP+sE+Tee40b6XthXp/OzrUkvWGy6Ouvajpv4
I3p1cc3xfmiIv/yUz/E47f+cj3xRu/PyBtr/qThnetxA1Z32f9Z1xu+K2R1N
+z9d6YqqJePptP/TYKR8a9Wpz7TfszjmZ5D5m3pM/J6Qwzarl2Q2YeL3JNzI
rVpjwMLE7+myOvRPw5GNid/zxrxGbXwN1b7/+T2c5RU6D6n5ifg9aZ/Gyo9a
cDDxexpk3J8xp9mY+D3R67+fMtvIxsTv2TeU3tK/kkXvJzdav1JOrDsHk/3k
5Z/iLP4tTcZkP3lN6Liz6sxzTHygUV/b0V9lTkB8ILGVznmqwoFAfKAhXatv
p1yDgfhAr7O3HbrkEA/EB+qZ2V5//Lo7vb9c1W+Dr2ZGJL2/XKzeIuaERywm
PtCWpJ08FSLxGOmr+QttZ0HgaTXFVZKxeN7giTl9cd1gfuborZ81D7FU2rxn
04Z9ULGBLV8pdRQXuW0/9+v8AKwIqPih3WYMCa1f5z2wGoLTGuEa+W03MfGL
7AcODm3XCaL9okW9k2zRjcm0P7RzOGG4PLYRE3/oVuJ0n2RAMyb+UMl8LZ9b
4yxM/CGDDZaDciw2Jv6QV9PjmZGzHEz8obqi2elwl3p///lD0ynZw/ZqHEz8
oUq3lEtyL9n0/vpbWwcs2qaiMNlfn3+pc9NFljUmflHRgdQrA9I+QPwihcm1
HXMeBwHxixxdPuwIi0qgfaJVYTu5P7HC8Po1FQ9v25bD66zZ+ns8Y/DZ6XB0
70wNDNYMx36kxr+vgWcXea9phh3sO9klnFh8/N49hez6XoisUfyi9dYCf20Z
aJup7wchQZHYa2tNwPqJJf/7gUG48m5i8v4XU2zvXly4p3MY/jIlXTwyfWgf
KbLuicHHt2xMfCTNGZFT17Q4mPhIuzO9z3yixiviIxnYnr197xiHPg8gKX/T
rksR7rSfZDJLUGeDSBDovobVwdlF0Djp+lIk6SX+23nqzDerCuB5KRChvD8O
rzC7faVBowGSXd/ZdFHzQ01r4iCq6oMDc9eqbH6oDL/X3W+K6RoAxf2Ce/m5
9aBp1/KVh/uGwHo4b7bcG2fabxpedqnMTpCan/7zmzTOaDRGUfmX+E2p80W6
RKl8THym266yrwLS/ID4TPv0f2wM3pkIPDsGZ8vdKYNLJlcXR4xGY6vlikMK
FtVwtb6zaKozDrupDp05Ft0E5qkfPd6qxOHd4qUK84L6wcH81ziOOglV9ap3
ddMGIdxr7LTCeT3ah7p7M2GfBNWfiA/1TEdzTj01PhMf6mf1vCPexhz6/APJ
spY209RAyJ6889fa+g+0cv+9c2AgFm9x55Zz1a6HMO2Z9N9TcdhGuzkvPLAP
/tpMLOlO2oZ1Txkvy4kfgG1yt1dgayMgvtSCPRftV13iYOJLhVwPbKqj5nNy
vsIfrwOR+2c/B70qSfcqw1q40KD21p+aXw58mB/TsXQAtgcMZgbkmgDxqay+
HMvdSvUHmXqoWni9EnZMp+w/8ywOS6GujM2oETSL1ewc3sdhVadbK1nz+iF7
qfRXm/PacJwnNsxzwyA4b5X4LPZzNxDfillZVn+VyufEt7rMU+3bTK0vyHkP
pT5Lf4YJBtD+lXKWodYej0Sw2Xr10N1/VbAy2ufzgdo4zKWYe2CpTT8oGrn7
+NQbAPGxsrJLXzZS3zfxsRjVsPaNRSDsCNdwqC2tgxz/C29uU+v32dba6oWu
AxDs2PGTLXQaiJ+13iXCLouaPw3/GbauaagBncuFoRwqXzF/8hUMzvSDjX70
83MRJkB8rb95dS0JVPvwtJSEDPRVwIENcn/VrsThRUc3Srh9boDHMBPwsTgO
S0g/x8FzBmF8T4v75S06MG70Tib3KAN9Hv12+iPVXzdatXht/CaOFA7ljxVa
+sMF0ZagP5xqeLDsbc7SiTj8YLKZKZTdD1Wer8/zl54G4netmru50YG6P/G7
VhmVf5LuCAQl2+zCjd/r4VDckMEotV721rjOnfpjADSa2R+0F+rDwS+lGx5U
1oL/B+crHOr9u0UqPGxQHwBPuVj7rw9NgPheTE13NUuq/97qGT2dd5OBwF/+
/ds7HPxeb3eHbI042n5hc1CJXwDtg7ksffOW710irIwV2XbxKQN16Zku2Em9
j4+rLBMeetfB8Dz/pXOF4vEVx/xfxbcG4Oq49IqCucbQYO0gXhleA3dYB03y
BOKxRY39ifHufsiRql97+roJEF+s+Kvhov8fn7qDGIWOMdUwcmIX495gHOYw
DALnJvbD57MrNFeVnIJ1cceb1yQxEL9LKZ8K9e+JP7b0bl3CstJAKNUZOK0U
WAtBQ00KiqLx+O+rCEnOxgEoTWotU35tAsQfi7vSy66lfn/iylThg2EMJGBa
3/f/7fFBcrnuhjn1EKxVJT57VjyuOLMtw1m2FuBR4ovVc+Jx3OenW3rmDoCb
3gKh7ZkmQPyymTsXPtlTz9Pq+unyarkaaN//YGMzVzxe0XfBhq+4H2JPfXjx
Ld4YUldNvBPJZaCkAeXoROrfE/8sNfDY2l1TgVC4PYm3RrIOru/e3VFA3W+N
X+pglR4135rxN/BqmtD+WXT79Rbub4lA/DOd1gbNlpXJ9HknX+Z/FRLKL6DP
O1kXH3nh2J7f9HknK1p5bB901dLnncTPVk7Rjmymzzt5BjUHTj1soc87OaAc
c/fQwg76vJONkvfeKszuos87yR4+6bbao5c+72Ts+RvDbf79tH/mEtR5Y0Bo
CIh/ZnJ436uA4BEg/lnR8ysNDM1xIP5ZzpXBABuBKSD+mY2d0NTn9mn6/EU/
AfkXKk9n6PMXt9lHfuN6O02fv1jI4Hv2tnuSPn8xdMvcwJv3xunzTrxDxHpV
5Efp804Kv+eb92YM0eedqEge9PIPGqDPO+leo36N3dxHn3cyEMgMf6HVS593
EvwD0PaF3fR5J6+/5z7fPr+TPu9k6fDV5A2af+nzThzmLm2sZLfT5520+Vta
doS30eed/HMY8X/9pJU+76RrKDc9JriFPu+kXOVq3EtfDn3eidWeg/OkHrHp
8064uaUlFuqzgPhnn/au3e36owmIf+bys+3PQ5EGIP7ZaV8XpZyj1UD8sxsG
7m83Nv8C4p/d6FrClZL0nfbPUpJcdoUcTqX9s78h4Wzd0pe0f2Y24Me42RZD
+2e5V1fv2Xc1gfbPLq6uCx3akUT7Z067biXudUqh/TOrus5/v0TTaP8szqz/
g/ZQOu2fZe0b1TnglUn7Z61S0a7KVrm0f6aLq9J6P+TR/pnsGeW5Ws0YiN/V
ecGla1H6BBC/y+2V56EuqWkgftd23t9X5a7O/F9ZZx4O1f+//1FREcaailZU
WrUI0fNQSQtKG6IiUfYllF2pbIVCSNZkrexMaJC9JEt2M5ix71tlnd95X9fn
vL5//N7/dV3vOc05c17bfd+POyD6Rn45285JnGdBkHiBUF4tCdNvGar63bcE
RP/I/r3Ln7cWL6D+kHTnuVt53JOoP8S6zeIO+4Vx1B+yUJLyVg0fP0SeawPb
nzMk8WHUH1KlnGw7/2IQ9YeYRz7iFTk+AJ/Ua15qviJjlU0fP6n+6YFxhvty
mQAflurnW9DzthtMXoR+Ww7mw0gtDtuqB+hA5L8S9LSOvahrByL/9fyZ7r75
wiYg8l/gyM9+qfwX6ieJjNTS+mBcgvJfE8+9ek19YlH+K3BbSkXGhXiU/5ru
k1yaNiv6v/xXfmDSTY48IPJVtLLFprVsC0Dkq2pTz/v9fbMERL4qS2CfX6gs
C4h+kBux7isOPWTBe22nh6cDSdjAAWWq8eVlIPpC5qLUBzbdWER9H8G1n6hu
dpOo74Pn0enChdFx1PeR3S9WlfJqFPV91IuumvYKH0Z9Hy5bOE9MDgyivo+q
FzM2YS8G4ENuzu8ztmTselgxVyjGgGtphSzhKTLmunYy7spiN6iM1N4KtOfD
7sVaUCINuoDIX106+tfx0t8OIPJX09erplT5WoDIX92NH+DI06tHfSIibNLf
NRPLUf5K5ejB1JUTMSh/RQ4PUG7xeY/yV47Zj20Vo6lA5JuwXXpiwYaLQPR/
GA3mPPvrvQxE/4dNjIVgii8L2iJXrenkJWHMVdslfq1hgef4YoYUDxvmFz/n
e85yCeWPTKZOye2pz0f5o8SHXY/tpOJQ/ujqeQVmHW8xyh+dum+m5LE+C4h8
T1Tva1/a+3kg8j02sd+tlTSXgMj3XO47f7gU/52JfgznfPaN+5+xYO9M2+51
NiSsxjE4ZdpzGYi+jPneXfWN8Yuo76Lpbn29aMok6rtYL6Jv27p1AvVd9NWV
VuxuHkV9F72SaptEWoZR38WWn6fZV4kMob4LpweqZsfzBmC72Z5HJXfI2OpP
b10/GjLAR1jXHbrJmHdT4YFKqR7Iejv8sc2IDzPgWquR96YLiPyP/4pTHRqe
nUDkf2jFK1UDslqAyP9MKjQ97NnWgPo02EaNn4RkVKL8j+69SIP7Riko/9Pj
5Pfo0973KP/TU3nZ+/tqKhD5GuWQrL4bPItA9F/Q+mYZr/HxQfRf6NgIeaW4
s6BDrUGhtIMFhqSN80/3smCdj67h5BgJE6ZcGNRIXUL9FGIXAzSuHyxC+ZdU
twpfSmssyr8kStGuRxYWAdE3ISHLTj/XtgRE38R9Uweb9ddZsMfCOKTlGguk
d6jw2xqyUL7knaRn4DOFWCD6Ip74NjrW5C+DbFLWcvHZZQiMcnTcHcCC8pCo
yevSJCzs49H3Ml3LKO8xcGAxOfhOMcp7cBWYNlduyQAiTxGzvW/6if08EHkK
nb7PF+X3LwGRp/h0fp87B2sZiP6F+1sGTWZ8WGBV7PPY0oCEWRQWbLSIWAai
j6FJ4kLOk+pF1KegLxj8Xad8EvUpuJjeE98qM4H6FEIWlN+z5kZRn8Lr00Lp
9n+HUZ/Cez7Nv38ODKE+hXxOyfjBmgG4Xd5bzbpBxgqPioU42DPg/dmUooYW
Mnbvg0lBsFIPmNjOXWHd5MN6rg88qUzvAiJvccFUe79BVScQeYuV/7SuJa5q
BSJvkXrUbmrH4wbU1xCgW3fNIKMK5S0UKzZmKnOkobxF9rXwdJXlOJS3EDTv
sY8v+ApEnuFQ4Oclh54FIPoVNgHlc6nMMhD9Cm4TwgF5+Hw9cVX28tl8FhzV
2mbtrMCCi9fXFV6hk7CL9pSUvqol1H+wN7vJe1atGOUNwtV2a/Smx6K8wdsb
rQ9EgouA6DOYtaI4vaIsAdFn8EX0bNt7VRacsP+RqneUBSbtC99W4+s14efL
sBT2bxCOBaKPgHHwoqtj3DJ47k+1TNi5DPGCJ10o+P7x18Z65/CtJGxISZ+y
aXYZ+etp10o1POSKwfnO9dZ39YsQZHC45I8kC4yehbQaTy0Dl7ng02E3FuoP
eNo4oZSa9gFE5d5esmEsgbO41MFFfD6rPG0hCcv4cyj/EH9uEwsuqD8SWnMD
fw4jY/tH77BAxGiF+2X8uQlH+qQ4arFgZEfhiw7TZUjwjM5c8mch//j34YUm
3pfFyD9WXt4s1bEjHQh/9syZMq+zt+aB8Gc/NohJTGzCn9P//NkEBR4zoZll
IHj781GL9hV+LOBP7Nkfo0PC6jdFDjUmLAPB369ONBdI7VhE/Lyx451SocZJ
xM+fcD3T04pNIH6+fJdxagDXGOLne44MnL6wegTx8+PSO89xKQwhfv5EPzWl
pWUA3KZLbDdrkbEZrx1/L7gx4CCjvutdIxkTNaWt77nQAyq33BP5bvBhjf2F
y+lfu4Dwb4MKnkYHDncC4d+qXTH7q7m3FQj/9k5wqVldegPi89lXW7n+O1iN
/FuLz6FnmHvTkX+bPOUTodgfh/zb7gvHHlx78xUIf/SEqvst7R8LQPD0R/hc
bOfw94jg6dXeeB3d/oAF860mNN9kFmzz3q+9cJIFU4qG9581k7C3b9em2rYs
Id69aygu+Vx7MfIvH1sPnheLjEX+ZdX5hA3z7kVA8Ot8nZl5XYlLQPDrCR5c
SXUYC1Tnl49Fi7NAy/xSSLUtC/mDpRERzitXxgLBn68gpZBpIcsgNblzV7jw
Mhwu4pE1esGC37qmJcdFSNjuwOvhovj8SPh1wjWbON+JF8N2yYbAgOJFUBF0
UPAXw+dLzirD5O5lyD8ty6nwhIV4ce4SH+fH3ElQsiDMebd+CfSdBDev8WRB
fVV0usco/j2PVVqQ8e85RZ6tmT+7BI7vi9bn6LFg+9ARrhBjFiSxF9Bjb7Lg
VZ+sSq3OMtziYmtVwdcDwo/Ku1b3r+xhMXjy73c6ULQMIsWmIsVeLODx4HE6
l7YEtVvmdfuc8fkgZORE184lENh2MITvIguOTIVt26TCgtyfV68M3WcBzfRg
bpbsMhw53ysZj48v3RWG6hIrWaAemgmK+OcJP+d3SpAvXeM92NtvCXObWQKV
6961z71ZoKKv9HvQeRnUyDlO6vjnCf+lPiNC3zauGPkvNPHZv93xaUD4G/wd
dO+ky/NA+Bsbwir/UPiXgPA3zrg6pD8cWwaCbw45dy3DD/99DN7ysH+5RsJC
9FVVbT4uA8E7r3p1j5XZu4h4ZVfWw5PzbZOIV27mXnVbQWUC8cqxkVu+GQiO
IV75y47lTIx3BPHK3qHfZEWVhxCvLPeaV/EabQB4fKQr910jY9O7sn5kPmHA
n899E4/ryZiQDTvVQ7MHjvw+Wb9Rmw+fL5fFt5R1AeF/zK1e2vR6sRMI/2Ni
TcMGMtYKhP9xrmz8pW9VA+KhvRIKtCcsq5H/YfJvGVyo6cj/qDDIyfnWHof8
j+xr12hUz69A+AvdpRHegJ+/CH7Z8/S0qdPWZSD45VU/Bjs/W7OAtWmV+L5Y
FgwWcSq9PcOCk9IBENVAwqREaJLJ9CXEFx/9fifwzbYSpP/btYaVKwXFIv3/
C/9l9hn7IiB4YfUvfIs20UtA8MI5jadri/H1T00h1EVJlAVh0vlla+1ZSF/v
O5/W6j4XAwTvazBmwbQNwO+5/q6nAM8yMEvlPgTj83PL0rG76wRJ2IXOHWKk
VSykd//ZMHvlyMZisFvNN7aWsgiSL3nEckRYYHfBIPl86zLsb48bKsLHH6FH
F7Z53bOVTwahzitGNHwdtrsUzzR6zIJmLvm/23tZkLLO9fzVXSw4PXVI6oHS
EvCFmqfb6rBAcu/Pi8dusYC+cseaEH0W9FbYx6pqLoOw50W20/j4JPTcEzci
Y6QsisH7SkXRr1z8PQ6tLerDx4u+wYXmbwlLYK+j79PhyIJAB6m32luWQOn4
B557F1ggd+SwcYEiPo88O33Z0wzfN6pZCOw/uAzdLVpKCvj40j+19Lp8Hl+X
3g9zb3VlId5V7bHG7jL3eKi6rjf7b3gJ+G+KcWvg80GYspv0nQf453P76jPw
zxP65e1f84ZfQ4vhdcvceQF8nQvff2/lEH4eauYd+r51yzKMV6rWi+L7AcuN
rR+H8X2tppq3jP9TFgD7wuDVO8vA3pTLewC/X1+fKZ3jSssgXXhZZga/PqHf
VdKaPebF4mBHcLcCx9ISXNyq6fgB31/OuK18ZPV0GXz2yxf8wq+P9DvZu7/2
fypG+p3N7YXEnJCf6N9PCbnx9k0ZdxniR3Oaja3fB+UgfvQybe2rz0mhiB+V
ce9vMat9h/S7zUu5e877ZSD9bsb2bN2N13lIv9uq1ZxfZkpB+h1ba5vmnFsm
0u+E0yzCl5MikH6nqSee8z0gFfGjN60DVlTMliJ+1KVeT2Y6ph7xo64aumox
f9oRP7otTTveILsb8aPBPy2czQWYiB8Vvvzy1S19JuJHvxxQEorZxkD86K1t
GzXgUxfiR9PpPWnyqe2IH933Tdi47m8j4keX5hQDGp78QPyoF4f1N419RYgf
XQjwaNOVCUf8aGQ5o+eOehrS7yQOy5hfTSxB+p2+5sqgdeI1SL8zyf92S32u
Hul3lTV27H92NCP9zl0v6I2jdxvS7xQDCht02DqRfvfvltaIegMN6XdCMrMi
sjF0pN/V3T2dstmVjvS7NbHK73yO0pB+56PALpDW2o70ux1tAfrTA81Iv8tM
43r4pKYe6XfMDaaCdyMqkX7HrRTnLzqdjPS77OXbp3zVA5B+xwqoqtb2CUT6
3fUbNpd6pl4h/S5rOqZh3D4I6Xcabpar7+mGIP2OFjSVwGscivQ7L7EXP2LS
w5F+9yC2YPyx3zuk38kA64arWjTS705+eG68/WQs0u9mzlaM766oQnxopdqu
/opJS9RHzLvtjWaUQArqI660iA1+vSMH9RFjAnvmI35QgOBFjQ6s0/pzIxcI
XlSFtnvKwTAVCF5UTpetM4X+hErwotp5v/ifKuQjXvRmqzy9ruMH4kOt58LA
8g8d8aGpDRsVgyUZqK844Gp/yYIDk0roh9+K2w/yDjJQf3ESLXv9ppU9iCft
KzWRNn5LQzznWgfV/HXiv8GR0zjKcBM3pib5emHHWAt01nUnJW7mwTpynZou
drRDVrH4LYcdvJjgakVBszU0YI28uTUgSMZuR80XGF6nI/3wMkmO/eonOtIP
VWvdA9XZ6Eg/3OMQtZ9nXyfSD582Ot2142tD+mHXu9Qd6d6/kX6oIr3Z+L1b
LdIPzYSPzP07VIT0w04F8taaUH+kH77bczbwXl8A0g8rPxquPAExSD9cm2t9
lbL3B+JDmzRONx1f4Yn40DjlOw1mJ+JRf7Fm/tGaQ05ZqL+YbxXFmVOfAgQv
qu0lf+/J2zwgeNEP2yxceHnTgeBF7xW2G0l1eiJe9N/i9Lq/z7MQL6r3Vep1
+e9KxIdKexwV0FhFQ3yo98530t9celC/sZSQQRX1KpNK6JfAtXtG6iAT9R0b
OP3+dDG8B/Gk3yNu5N5n60I852YzXTmaQCPsL69h02xZh3mV1L6n8LTAwwxF
5Q1d3NiPk7v0HGTbYd/9nWZRdB5s8tq7pMN+nXD7w84VzkO8GG21YpStKB3p
lyTTFWEqn+lIvxzc9PChzlk60i91XP+cdPjSifRLLnrExkts7Ui/rBkPGIst
bUL6pdXqn71VmnVIv9TTsRvj9ipF+uU5T2F7OzF/pF9uv5nwd1VYANIvH82V
JOwpjUb9xksvbmwYPBMIBA+q/UHDx/dAGrQmOTTqKvTD9Rc61vyPc6FlBbXL
znwYMB63O4l1FCB40R3BUnvkkrKB4EXzrqeHJNXEI1709a6kUl75aNSPvKOx
kJfW04X6kYsvO6ULfmJQCX107z7SAXsnJpXQR6VPfX2z9yWDWqFOUnS4yY3F
UNdPthS3gvLkUz5ZPR6s5piNTe6DDpDfuF1Tw5gXKw2Aw2F2NPjJIfr11REy
Bl6L3KVP6JDTyzijl07GzludKuaJpOPry6mlB0f5sArGkw+e8TTw36+/0ywb
/7PTLbtRvw5o8vJ+znOcH+NebOz1XtsKBD/qRCta9/xYIxD8KMPWKLZo5w+k
3wZI5HE+OpqL9NvJQW+Di+sCkH67i8Tp1fo1Bum3Qbb3zhzXr0F8qI1UXNoq
pUDEhyZwBmp93R6L+pNf5quL6Phlov5kwyFS7gEOChC8qGJ4+2Z1PgoQvOiw
xZWQxisZQPCiE8b6ny7+eo140ZP2f7eoaKcjXnT1RU8Pj65yxIdO9qnXW5M6
ER9a5ysoeEusB/Urv45Lq0iSZVIJ/diS07cs7jwT9S2b98mxi3b1IJ50Y8tJ
o1KtLsRzSh1+urXzeQOsEWfLrMxZhx3kt9IoDG+G8ljTl3VF3FhUcqWVVk8b
DBUk2mQW8mD5OxVSglQ7IcAvLq6uGl/P7Y6sjp2jIf1YxVRfeGMyHenHhy4s
3dhsREf68dgz0Y+n5zuRfszozb9obNWO9ONcNfp0sHYz0o/lNeDuDoF6pB8P
lsma7gsvR/rx5wKv4wOOMUg//tUqEGhmG4D045/fBcPPeUWjfmXvm7TKTXZP
geBBpV9skxf+/hHMgmaeSH7tg4cdVe2nOnJgp5P3o0/MIWg4Ur1PvoMCBC+K
PaQ5yQfmAMGLBvpLabIfTQKCF31g7WEDo0Gon3lP4VyVpXUX6me2ZO4WfGXB
oBL6dMNao+uPXJhUQp8Oub0qeqaQQY1OPTw2qsCN0fhmZx21WyGgO1NvQpEH
43ctffx3dwf8NY/TunOaF6vO2Fc9hNGgb671ZaE4vr55FVuYWdLhULjWcHMM
Gfu0arFiWyIdClx6XN6J82FCvFF+A79psNjpbJcdz4dda+D6q0PvgIXBnxns
UvzYRombYr4BrUDwozBJS/JjNALBjz41KJpa01aD9HOra4mCdbR8pJ8bJSWI
SLT4I/28/c0jvYeuMfD6/lgPpbgXXIVPVdzXyoYy080pWxoGoaewakovjgJT
zxN30PnGIHDoSk7v2jwgeNEajXblSN3PSG9nO7txDpp6qITebv5Qa7bGhEkV
pW6qcE0jYW0TEhtkeZlUK6EPd33ZeDH/+bevpH50gkjX1YMC7GTM8dcxo7zj
dJBaqXyo5jEZO3pbSSQzjQ7bz21xG1uB7y8dgmtLd9KhRSGLT/UZHxb2tMhD
wL4T6flewmu3Ben4gwp1Xvz1l364xnFNM1AQ/74+M2cU/wyD/toTgzqpFNis
2HDEQ2gCIlyfKD6Jy0J6/0jxB2HOXgaV0PuDp++cWmnDpC5eecdmuI8Nq9uz
8GZem0F1LY8+f9ybF3Nz+FN+/wMNcgRujhqfImPYiCanfhAd5KUt3/cUkbHW
ovDzfAF0uJIe73xBhQ8722JNFbSiIf/gjsvFtUakWOQffN3lX9O+UIN40Np7
8ko6E0GIB61eDF4v7B2N+qE/vhlPs+HJRP3Q+/gjw/Jr84DgQzVCtiuMKFGA
4EPTgmuPZY9mAMGH5oiuKdikHor40Jtbm+t3hX9GfKics5t8xWAZ4kHZi39U
yzp3IB6Ug+52W32oG/VHC2/hbubbif++//MvhCuYxorXmahPurM97qwZGwPx
o0JHRMyLnnQhflPV5XlVH9YAM/XhXKs+rMP6Q7mvZtxqhtHwx1n70rmx5It3
S7GcNqg0GrQrTOXBeJjvTptIdEKim/6DxS+8WEmw3Gx/Hw35F8eVEjdv+UBH
/oWWo65Ajg0d+RePc26+eShCQ/7F06Cq06Xx7ci/eKdWpPgnphn5Fy9ei1/m
s65H/kXkidEfSu8qkH8xUbMs/+/EB+RfKH15pNh7OwD5FycnDkiWmESj/mjD
yvBXH7xcgOA/Te4dXEexTYWctZk3uNz6wMXfaEnpcQ6o546VnYseghW3sqIS
mylA8KHKIX+D5OZzgOBDH8hsU8loSAaCD3UVXFzI+PIS9U8fPKZ/vE+mC/VP
36uMko45z6AS/ojlKpb6R3x/Qfgju3deatnUyKC+uFGjsnsvN7b0zblzn3gr
5LRWP7mwnwd7rPPpjvtKfD+wnnnD/AgvZrnzWrS4BA1spmX/1ouSsdG0p6Od
d+hgNcOvKBROxqL9fmXnpNChKU36q7QoH+arpGoiP0KDzGwf0bZ3fBjVLULw
O0cnvAy3VvXYxo/lWOeOFde1AsGL7nn/tFH72G8geFGr6QMX7n/6ifybZs9I
qUjJr8i/MfXimbqS54/8mwe63yJzbsZABy31S+TjXkiU1pdbO5IFIwlP/ua/
HISnbSPjak/x/VvVwJcvP0chXXSiT+ZaHhB8aJcpt7KgQRrye+6X7x1ekdJD
JfweXmpy6Gn9/3jE71t6oknYjZesF7pbmVR1at+94AkeTDRDefZ9aieoZt6X
vjTPi0kklF7y2kuHe3qLTzidyFhpR6eHHT7fKbhYUB/PkzHTs5+pUnJ08Bcs
yTNz5cPo+UW1LaGdyE/Sc4uu7j7uDwFHKIsOTv1AHUu7W1KTC+nl2kGt6cNQ
Th2n65fg83d+H4nWPw5+OUq1G6Sykd+kvvbch5hqBpXwm5zNvjkl4OdBbLua
ToUYGxZTlR8f8YBB1bXqVj/9kBe7+zSa7PqSBsrchVddFMgYdzYl2MePDg99
d//ZQiFjb3dUsV68oYMFc6agS5EPq4s8KmzpS0P+1Zd6GyFHegwobFUPmGEf
hKIloaPxMhRYr3Z/0Fp1FFbXZUq1t+YhP2trt9jSMVUmdUByT12iBwmbX7u/
KfwEk8rks9751JSMOV9y/rzzI/5+MdZhKYNkzCBwkHpVi478L57F210v1MLw
8S2TqrTUBwYnVv98KZ0LJBDfx797GGh7hBagjYL8MRsxSWlDfwaV8McMDR3j
jfD1X4fkJJm4l4z9yK7u5XGkwwxEhoUnkbEXTZX9QXF0iDxAuflk/RAUx/p2
7MqnwHGVe34rr47BrFfCgltOLvLTLq5wYbuJrycjic+7/H3I2JfJnZzL+Pln
8ayC2qe5fvASy15vg79vBur+C9HyI9D+WmbBw5+C/LeFR//K1JYY1AJ+cyMh
ZRKmUrSp5hW+vkptZHlqXiBjWS0aK1Te4tdrytKMryRjS1+/XnjznI78ullN
k5l322KRX5fJ0XlI+exPxHMuSa/mqPwegnhOH6vHb3JsolD/dnIM96a+mgzU
v932a+n5mYw8IPjOu0s93mnXKUDwnVcnnDclH8sEgu8cj5PYpeoejvhOk22M
z28EPiG+c/uzJCMLyzLEc3opHpsOketAPKfc5wRJgV/dqJ/bjfRd30OMSSX8
Qu4QzzEXXSbq607miS5J5mMg/vOOt20rb1gX4i9XaJYW7xdrAJPk/tyYd+uw
xnBPpSGlZiCtf1lxI4kbc211NpmOaoPcfG8H5fc8mOmlAAE3gU448qiogy+T
FxuaOyx3rJOG/EKZIz5rqvD3gfALh2tDdwY8pCO/UEP7RJQEfq4k/EKP9+v3
D1Db/88vtCoWiClrRn7hl5y32Y+i6pFfqCWhynFJrBL5hRPeVz3Y3yYiv/BW
hG5ExvUA5BfmDTtnrdeNRv3csU4Ds67l9kDwmxZPw9KLS1PgxqlXFS63+uDi
0hNDt8s5YHB124iI6xAkaxvPTtRTgOA7Ramtaqw9uUDwnRdXapT+epcCBN+5
603Eg5BT3qjfezzG4dOhDV2o31v5pY36TTkGlfAjadNrP/M5MqmEH7ktpsqr
gMagrjq8cbp8BzdG3n3PAsPPl9VXm0IcJXmwhpmKENZ4O5SZeepN7eHF5o0f
+/YJ00DW6l5KpwgZU942/OqrHj5fbpvoPRxCxnq2CESI4/ODwTlt2sJ6Puxy
frzIyB8avIzhsxoJ48PEYu7t5t/YCc1TygIgxo91iOqNf59sBYL3tO1q5Mu6
/RsI3tNUf3yb6fpa5Je6TjhOXD1DRX6ptn/faq9Ef+SXZntlH51UjwGPDX6S
fHd64dOlcwN7srKApJIj5mM2CA8SinwmbSngOeT1bNfHURCzdvha8CgPCL5z
1VV/CxNKGvJXX+3a2xEb1EMl/FXs6a7EkhtM6grbHT8EwkiYzbNcTstdTOoJ
wecmGwfw83+de7J3RCc0plaGGU3xYoM17+3Cxenw3Kd1724HMmb8JnL7Ij7/
VAmH0C/8IWNWspEq95Xw/RHp7Do3Rz4sSs7ix4+kTuTfup44MRi71x+OWIbe
G7rRD8adMzlPE3Oh1NDvS4L/MCRuCF/fUY2ftzue/ThfPg6FbwdlQ02ykb97
6Obvj1EFDCrh747WswSrHzGpPWviOeaE2LBHa33uPfdgUM+XeVystuTFFjzD
U6Qe02CNz8haL1kyVjsmp3jaiw5v8jiiTmSTsd7tOlWj4XRYcBHtTJbjw/Qe
pOnEhtKQXxxxctFka20MXPzqnlPCGIBnjDmDPVvw9dB8bTZdchR0hr3B6k8e
8o/FqlXH0jEm1Yf7iUvbIxJmvEch88JpJnUlqP+KMyZjGnz1cV/x/cuS85Hb
dr1kbM6XpfIf90j4zT9rNxzLk4iECm0hkazOPlB/EVbpsToXBDuvXe7iGAaT
9+IJvPh5lfCjfQY/7QY3BpXwoxtEPexS/uvPcEluy9hFxsSeBUH7AzoImDsp
U+LJ2BNTc9P5eDpk1Ax7XpodhC9nliW40/Dzr/EaLevDY+B7MtNAuDsX+dcK
j+BDowWTytVk6P3pGRnb+Jw5b4/vL2I8N1G2tvUD/4/v8ltl8sB+pHibpcgI
RKgcrKyKpCC/W/aCjJPVJINafIUjNUeOhK2n8cw9wa83EbJfTk+VjN0Juftj
El/vN616tfCtlIxpWrJxzfjSkT8ebT5o/48cC/bzvStuRQ0A18/WO1nDeZD0
+eyFfMYIrPYdLLeXoiD/PNXnl/SWg0yqUtia7d23yNjY2bPS8vj5WH5DQZRz
yRD4cCuWFuPrdV8deyXHDxZcN216XevMpF6qOBr05x0ZU5+Z2smVjJ8P116q
G00bBE9bjUdiwRTkt7dZMPacNWJSzx7c0j7sSsb6/rn6ZeDPI3LXTguuxmEY
/O7seyyPAt9bZI/N7SJhJoEpbrx2TKpzwIsYG4yMsbmLDL7Gz3PaNy+osRWS
sbBkL7nx13QoY752NbIkYy43lXj/068Jv75c5Br9jHkQjERPcpw6Pwwn6mNm
KpsoQO96p+a6moQV2uekJePf/zd/8YTTRzLmP+3PPxlNB5/AZ7LZckOQfpvc
9amUAjw9tTNkbxbkL3FVm+Dfp8Yp+Zj1SzIm7V60SRUfv+ppur/rdUfgwOXj
Oh6uFMj71bD1wTkSPp7mxw/i90vkAXLXj7y+digW5QGMffsz5y1/It7SXP3z
rNmXN4i3XJdyvMw3JhL1qZ/cnH5Z/mMG6lP/OLhlAykuDwj+8lfP294JfQoQ
/OXl1NJrHLqZQPCXL3YntEqHvEX8Zefp5Za8Sx8Rf/nXK0DL81AZ4i31Fbfo
SYp0IN6y+9BR+6qSbtS3Pkd/1PNchEkl8gh7myU/zt9kov512oNz7J83MBCf
+dj9cGRKXBfiI+NtDMNOcjWApDDPS6uwddjZW2Xxs4eagfO3QJ1NPDcm3Jdj
XhDUBvv7tP+tiubBLnRz8j/g7IT52fEA0c+8WOvDjSvOtdBQHkHokPrg81g6
yiPcOsbfctuJjvIIrhJeovr7aSiPcNsqLKL5RzvKI7CrOJ652tyM8gjN/Ol3
fXLqUR4hRJlLf163EuUR9sklevpXJKE8Ao8vv5fY5QCUR4jsleqrvBKN+tZ5
tqpd2qxvCwRfyfH+V7SdWQp86vZYytHAz5uHub0/Hc8Bs/fyLJbZEATb5d2c
r8Xnl//xl1XNN3yOnML3s//jL99blYq+ZksFgr8011tBn/d/hvraj/p1zSty
dqG+9sxXNA/OgwwqkXc4w32bRxif/4m8w+PWvk/jDAaVGolVBW/hxvpnffnz
FlqgUUA3OnA7D0Zx9pva19cOCm+u0LJ28mIOrO8tabw0iNjvzs4QJmMJ4+oz
oTp02Jx3U/5kEBm7VBzjUoqv/7vWm491CfFhOnYnZXcu0sB5/e+w2Td8mEVD
t0/Yjk5YjEz5J7aJH/tos5CTytYGBI/Js+vR8RN2v4HgMeO7E6qjz9eiPIZL
9izW30RFeYxBz84ridH+KI/xg7P5mtCZGGjMcdI9d7kX9O0lKfVvsoAzuPag
9Y1BeH424uhnE3w9mtcyuxUxChufHmxt9skDgr/Mn55dactMQ/mNiAK/AWXv
HiqR3yhxfQd1WkzqZSON2L3BJIxDObvn+l4mNefE9eEOBg/GK+28dDeoE8J3
/1OzHuPF6Hf6JF9upYPwNlUPWTsyNvDLoSsRnz8CGEnj0jNkTLsl5pnpaTpo
2a+T8XrIhy27lRzdk9GJ8iHf+thXckr8d39ekTsu9EO/nOYPm+Bc+JkZX/PS
dRg0uWebHX5SQGH0Wsbj7HHInmU7Je6TjfIjK66cUjfNZlCJ/IjEybcrP+P7
v8OLvzr4+Nmwl9xXv/U8Z1BLxi/V+Zni+2u+h58GnfD9suoqwxcyZOw57YDY
umd0kNSwm1bLJGPtsr9En0XQoeTcwVH/Y3xYu/aOCLEoGsqjCO7MipkvjwEd
7vCqpPoBeLFm6X0nPwVuu7aGCwuPwtTFFX+EVlFQPmULy3fHVwUmtZ30+fK0
HQkTfBT94Ql+/nz1u0A88y4+30amVU/j60vpWVUrHQYZE3U/2lFpQEd5lutZ
w6Q7Z6Jh499V6qM1feBnpnVk7VQObN5rZVQxOwQRMnWm2vj6T+RdrkbOhc/Z
M6hE3mXzkp5GDL7+PzleciRPkoxZk0fl9tjQIXblUEhlHBmzeDXeLpRAhwJR
9lBZ5iCU1r1q6U/C10+HFsXE7WMgoOz5K2c2F+VjzJvSVnWbManhZg2dhZ74
55k6MRH4ejezjWtcu7ofqldJXHGXyAP34+1Hrq0eAQn5GK6qeArK0/TzMM3V
hxnU0tl69edHSVjT1tLRS1b4+3ZV5bWBCn4etuSbPxhCh+Rw0sWGEjLmZng5
lPMlHeVvHj9VoqeuiQX3sywhlZcDcED3tU9/Zx4IF204NFU/Ap/HDlQY4+d/
Ip+jMGvYk7iHSf11wMF+Qg/fT1Ss4TqC3++pe78z7qQPwc6sVZL3WykwLBDF
nfiNBZlRP/3V8PWzS+/9AHsEGVPkcPkwgP8+PVomzMaoQQgPlbE1fkFBeR7r
d12nmu8wqS3lLw4sOJOxHFmjoLf480h0wDymSobBwO9Wx+NCfP/6iL2tSpyE
Jbs7iJjYM6l09fgFhxNkbKdVZ0kIfn8DM19iyPlkrCR7zLU8mA5XnFY02JmT
sWOmLs1l+HxD5IH2mW4at6CFwJ9xzo175IfB+JHhM0oLBXo8TCbUV5KwXbbn
S9bjv7dh0oHTvilkbLqBo/ocvn4EdUWdj9g1BNheobzNRRQQEL8vn+HOgo1x
Q8PTtkyqLv8GP3c/MhZx9WJ2Mj5+tVh2A5TzI8AZWtsv+5wCX6yjv51SIWGc
xZRuy3tMKpE3KvWpov3dHQtaHGtapf2HYPfMlIP7bwrMvqkLHcpgwcz2guwx
fDySfD0CxUPJGPWS4g27VDr8mzZp2fAI33/+2aeD4c/ri5BtQlH0MKT8UOto
LKdAfX7kFlNR/Pxd4vqs4iGT+iCR7hR0n4z9GfKIcMQ/z/lSEZtbPwwHQsXC
dNspUPN8tVnXLAs0Yv/S3+D3n+hab23CMQSLkxBUk00BscS3ZTOWLBD9emcq
EX/fnOHPkSgvMlYmE7JFGf/7D1bH+gU3DMHmpzmHM/DrdfubPb7byIK3fM8c
DuPX+xKW9qzDnYx1c3UZfsH/fxl1Canr1mQs7pLnpd/4/ozIR3Ud3uO8fj4Q
ei61TOvqDsPqJ1oki0YKdEBd8kcuEqbZIPdgC/5+uSubS/w8NwRn+dO5Wysp
sDZa5rNlIAscLLGsEvz9ONF7nKEfQMYOJuySbcKvT+SpRNcLCX+RjwUzdQ7N
c7cmgOjndz1Wfb+NYwXq64+W+JJdnUT+//v7//ff/wPyCn9Q
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{305, 2220, 235, 236, 237, 238, 239, 240, 596, 497, 
            416, 351, 304, 276, 616, 517, 436, 371, 324, 635, 536, 455, 390, 
            241, 597, 498, 417, 655, 556, 352, 641, 542, 677, 461, 665, 566, 
            685}}], 
           PolygonBox[CompressedData["
1:eJwV0DdLnWEYBuDPGqNOurlYj4MgogiWjDGWJdbRAi4WUCdFBcECGgcxNgJB
CEHB5Biyq5NuLgr2stj/g2Xw+oaL+37e57ycc97szoGm/tggCGKYYTMpCKIc
6yd8tryxnOcrmcRxaldld6t/p54s4ml1/iz/0EU5Zz7/xfmdvkAD2fQ5S2ZL
HyaBNvOL/Es3k+ZMDvQKBvU0dvVlWcy4/k1GONHPfV+1fq8vMqcX0KiPyQzW
2Tf/kKX8I8ccPkgKv9kO78siooyYp2UuGxyZV2UF/0k0t8tX+Su8E76PLKRH
n5JZHOo/ZRmV+pBMZ40984osYUKflfmc6hf+V43+oC/RRC4DzlLZ0Uf5QIf5
TW7Syycu3a91/hi+Hc3kkcSV3TV19k/hb6CFCB95B/FzQp0=
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwlzDlOQlEAhtELFewAUEzYg0DjhI2iUkDl0Dk1GulwCziuQjEhsZY1iHOn
Aq5CtBD1EIqT/Pe7777MZrVyEA0hRChzy3UshCYv9jNRlxOUOOeDeY+ehu/s
NCuc0aPg7jGMfjrOMqd0mXP34Cpv73LFNxv6nz5mL3FCh1n9Xs/ZOzT4Yl3/
1VN2kWPemdHv9Ky9zSV91vSBfmi3iDvvk7QXOeKNaa3tu0l7iws+WdV/9Jp9
Q8x5j4S9QJ1XprR/6YAqxQ==
            "]], 
           PolygonBox[CompressedData["
1:eJwV0slLF3EYwOHRPEim2X4wD0qYZVkQQkS23lrNyEorzLZD5tZBW7QoJTAI
RDA1regQhbbZNQ0qO5QHRbCLLZrmkpb/QMszh4f3835n5qfz06SC4uyiyCAI
InhDW3QQtDOpJxhnjB8scNMajnGPGfZ7eNS1+Tqdo9zlN9mujbi2XZfxkihn
Z5inV3OEVn6xz/l399fo9yyxX2SbLqWDWfbTxOsqXhNvP88q3UOivkqebmGa
LPuwz/6kU/VNqvU6s4Fuvdi8wFa93rxDn35oJlNDif2xmU4dL+z3zUhOMdf+
zNxAK/32R+YyblBpbzPXUk+X/UH4HGWk2TPMRj7qpeYVcnWaeSv8vfQUe/WQ
dxrQy3Ut1/U7FukKtuheksL3pVg/J0KfJE5fppM4eykr9QcSdBWHdTM/2WP/
5mde029ZaC9nsy4K3z38R7KfIFZf4hWx4XfHCn2IJibZ7eyrRzbpczzlHwXO
54R/Kw7SyAS7nH9xf6Yu5Al/Oe48JvweyOE24+x0/tn9G/VZ2vlDvvPZZgoH
aGCMHc4H3f8fMUlfNw==
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{1, 168, 135, 105, 80, 193, 160, 130, 62, 186, 153, 123, 98,
            51, 179, 146, 116, 91, 73, 190, 157, 127, 102, 2, 169, 136, 106, 
           81, 63, 187, 154, 124, 99, 52, 180, 147, 117, 92, 74, 3, 170, 137, 
           107, 82, 64, 53, 181, 148, 118, 93, 75, 4, 171, 138, 108, 83, 65, 
           54, 5, 172, 139, 109, 84, 66, 55, 6, 7, 8, 9, 10, 11, 12, 13, 14, 
           15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
            32, 33, 34, 35, 36, 173, 140, 110, 85, 67, 56, 37, 174, 141, 111, 
           86, 68, 57, 182, 149, 119, 94, 76, 38, 175, 142, 112, 87, 69, 58, 
           183, 150, 120, 95, 77, 39, 176, 143, 113, 88, 70, 188, 155, 125, 
           100, 59, 184, 151, 121, 96, 195, 162, 132, 78, 191, 158, 128, 103, 
           196, 163, 133, 40, 177, 144, 114, 198, 165, 89, 194, 161, 131, 199,
            166, 71, 189, 156, 126, 101, 60, 41, 42, 43, 44, 45, 46, 47, 48, 
           49, 178, 145, 115, 90, 72, 61, 185, 152, 122, 97, 79, 192, 159, 
           129, 104, 197, 164, 134, 200, 167, 201, 50}]}, 
         Annotation[#, "Charting`Private`Tag$573950#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1WW4VVUQBuDDBaSR7pRGupHu7i5FGlTAQERFQREVUOwOusHubqW7u5Hu
kHrn8cfLfDNr7xP7rHUp3G9Ex+HJEonEv/5ZqtZOSiS2yM/RjFzcY5aar+SH
ueq67vrz8iz6U4Vl5nXMt8rP05zc3GuWhq/l0VxzXQ/9BXk2A6jKcvO65tvk
SbQgD9fNe5pflOcwkGqsMK9nvl2eTEvycsO8l/kleS6DqM5K8/rmO+QptCJf
fHlWKQ2s7ZRfoDX5ScZqaw2t7ZJfpA0FSGKNtbUsSJ1IrFPX08i1u61NpS0F
Sc4Ga42t7ZFfoh2FSEFv88vqPAZTg42ub2K+V36Z9hTmPrO0fCM/Qkr66K+o
8xnCU/qCrJRrMkrOwi/ya2pFxsXvrBZjvbzJ+zWV98mvxHOQS9NBHqvmYRb/
6N9Uq7CI2/TD1XRM59u4Xy3PAsboJ6pFmMta/XtqTZZwi/5O9T/1w7gnno9a
lqHy02ohVsnvqNW5I/aimpWZ/Kp/Xa3E+Nh/anE2yJt9r2byfvlVOlKEEWbp
+U5+lFTcpb+qLmQYtdji/ubmB+LZ0YmipGartW20sH4wPgOdKUaaeB37Yrv1
ltYP6d+gC8VJS1/za+qiOGfUZofrW5kfjudMV0qQjrvNr6uL41xRh52ub21+
RH6LbpQkPf3Mb6hLYt9Ql12ub5P0/5l/m+6UYqRZBr6XHyMD/fUJPorfmHqM
1mfjt9hn7HZJW/3R+H3owRP6vCyVS3O/nJEf5MfJyAB9Mj6O34IJcmFWy/Vj
b8vZ+T32AJPkEmyU93jPdvIx+d04l/Lt9JSfVPOxLJ6HWjXW5AfUW5nBj7EX
1AosZKz+WbUo81infz/2WXz3uE8/UE1iGp/EmVTLMZ+R+mfiLDCHNfG51Bo0
kMeoOfgj9oBamQnyZLUkm+S9vlN7+XicD3oxTp+f5XIZHpQz8VM8YzIxSJ+c
T+M50zD2sz4nf8bnYp/X7qA/Ed+L3pQlM4PNU/BZPCMasd/1Hc1Oyh/Qh3Jk
4YC1TtZOxXmNs0t5snLQ2iEOcyT+X2GRM3BUPcZxTnCSU3T2OqfdNy3OHhXI
xhDzlHwe35nGsSf1ufhLnshp93fRn5GnM1UuQ195vFqA2ayIfa5WYzEV9Q+p
mfk59gvZGRp/i/gi1mnCGe/R1eysPCPOH5XIwVlr5zjPBS5yictcoZv7zrlu
ZpxDKpOTYeap+FIeRdM4E/rc/B37kClyKTbH81drxTmJv5Fe9yZWK/Ol
           "]]}, Annotation[#, "Charting`Private`Tag$573950#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1HccVXMYB+DbUkpTk2iKtoYQKRoaaC+FirZKGkZDC9FU0aQh2rs0aYv2
3nupZJM2z/vH8/l9v+8959xzzz3n5GnRqU7HJIlEok3SRGIB7yZPJP5Olkh8
xOMk5Yz5WPO7ma43Ig8LzXuY/SN/TFmSscCsMGvkNzhru3F6ZmbojcnLav1x
tsu9WWS7nvoVeRBPsFmvxCE5eXynXIS1cmfO2We8noWZ+ovskZ/ntJyPNXJZ
dsi/WdvynnzM2pDL8mLH6SX/Kw+O48qv8KS8xVqZO1IkEof1v+WOZNJTxHnL
RUmmr9Mvy61Ir7+pH5brkVq/qF+Xu5JVP+97J0QmiT7L5xflV0mnN9H3yi9w
Rr5qfZP88lrrE+yUf7e2o4983NqIX+Qljt9bvioPoRxb9Socke+I3y4XY73c
hZ/s87mejdl6Ux7gG/P3zK7JQ3mKlFwwX8oy+vj8utkwypMqfo/5F+bZmaO/
RAGWm/c1uyEPpwJ3xjmbFWeD3JVLtpuo52Cu/jL75JqclR9kXfxX7JL7ckJu
zK/yCvv3k2/Kn3BebsbT8jbrs6R0rY/q/8id4l7XU8dvlh8mub5R/0VuTQa9
m35Erk8a/ZJ+Q+4W107/2fdOku8hqT4vfov8Wtxb8n5rLc7J16xdeEheby3H
bvkPa3v6ySetL/KbvNKx+8u35BE8w3a9KsfkNCyVS/C93D3uS/tM1u9lvt6M
gmzQn2KP3J9Vthug35ZHUpG7WGZWkk3yW3EtbDdFz8kCvTmF+Nb8fbP/5FFU
Ii2/mn9pfh8L9RYU5jvzD8wSfKpXJl08q+ar+TCeDT4zq0L6uN/N17CWdaxn
YFxnRvv8WTLE9TOfanY/i/RXKRK/2fyjeGYZo1clI3+af2WWi8X6axRlo/nH
cR8wVq9GJv4y/9osN0v0lhTje/NBZikYp1fn7rjn9VL8IL8d7xLbTdPz8I3e
iuLxfXp59soD2GS7wfEOYrxegx1yNY7LmeM+l0vzo/xO3Mv2ma7nZanemgNy
bc7LD8d5yhXYF7/d+jrvy6esTfhdvmV9K87Z8YbEsxL/lft5Qrwr5Oak1Z/T
d8rVSaWf0K/Ib5BZzxL3rfxIXBd9c9wTchsy6u/qR+UG3BXPj35T7s4V3z3D
mo9l5j9bW8a+8kFrHX6SS8S1imeb/fIHnJab8of8o+MMjfPjc/15dsk1OCln
jftfLsMWuQf/2memnp/leltKstl8mNmdfKG/QDaums8ye4AVejtKscV8uFlq
Juo1yR7PvvlWPon3CJPMapGD6+bb2M4OdrKL3exhLyPiejHZ9rW5J95D5vsY
Gf8NU8zqcG9cU/PZZgVYqbendLyPzEeZpeNLvS454/83n2P2IKv013kk7iXz
T83SM1Wvx33x/OuPslXuyW3bzY13G9/qHTgk1+WCXIYf5Gc4EM+UtQMfymes
L/FnHMf6Ngcd7zNrBr4yv2BtQX15t/W5+E/cP6fiv5M7k0W/P9418mNsk3vx
n2PN0wvynd6RR+P8zEfHfcnXegNykeCwz45wlGMc5wQnOcUY+2Rimm0bkpsk
zDcrxGq5E4/F/ahXjN8kD+Ss/DJ/xblZ3yG7cz/tuP8DSVJNHA==
           "]]}, Annotation[#, "Charting`Private`Tag$573950#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV0necz3UcwPHv0R2lJA1OgxvckSKFyinjhrsTd2dUNE+kdZeGCA0js2Fl
VRq0KBpkNbWUlXaiYbQ1lYbq+f7jea/35/P53f3u8f1+MiqrK6pSkiTJ8yM9
NUnqpyXJR/oot1JJKY04mmM4luNoTBMyyCSLbJpyuL/zsT7GaAbQneb2f9QX
mc1wmnGE/U/0ccZwCSfZ+0Pf4H7OooW9n/Ql5nAjbe39rW+zgByOtLdVFzGW
06z/000MpI31Pn2TfPNBPGA+Qw/gPXMPjjf/rC/T1Xwgc815WoMebLEu1kOp
YIR1O/0n/mddr4V6MGUstO6kafTkA+sSrUcvcq2P0k/jmeli7aK1GWc+XRM2
m4v0EAaZT9Y/dR0F5jo8aD5TU3nf3JOW5l/0FebR0bom75pH0t68XzfwcLwz
Gtjbpk9wG5dSxgn2f9W13MOoeEc0tL9dn2Q8gymP5xnfH7/HibQi3Wc/0yVM
4DIqaB33ztnnupSJXE6vuBtxH519oU8xiSvoHe827qmzL/VpJnMlfeIZxf11
tkOfYQpX0ZdT4l4726nPcjtVnB13LN5pPBtOjftEY5/dpcu4g2rOifdDE2e7
dTl3cjXn0oEMZ1/pc9zFEPrFnSLT2de6gqlcQ/94R2Q5+0ZXMo1rOS/uLNnO
vtVVTOc6zo93T1Nn3+lqZnA9F8Tzt/+bvsq93BT3kmb2v9c1zIz/2TqFd8zd
tC7lDI1npn/pWzzEhfFO7e3V17iPm+lMjv0f9Hnu5gYuogtdyaeAQoriuygm
1+/t0ReYxTAujvth/3d9nfncEu/G3r+6kUfie61r8aG5VA+jNyXW/wPjIpS4

           "]]}, Annotation[#, "Charting`Private`Tag$573950#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1Xe8jgUchvGXZEWKIitkNpBsWoiQLZSRkEg2DWRvCdl7ldkwsyIKIRTK
yN5lNERZUd/fH9fnvu/rOY/znme8cjXvUKd9kkQiUS8pkicSGVImEmNSJBKP
4Yg9F4NRHw3wEu7zM2MdL4ij9jwMwRP8Uu4F/Gtvxsu4nx/HFcIxez6Goii/
jKuGW/a3aIiM/HiuMI7bC1CV+85ugfswjCvGLder47b9hn1O74ct8Xnt/XpH
5EIX+7IcjkaOZ7In6I+ju35DnuCb6yf1Hlhov2Bv119DXz0J7tc7yD/kVDlE
fiDTYi7ed15x+QU/RtaQveRtOUP+53gbed6eLPvH3yRT42NsjWstD/ATZCc5
QCbDQ3pXeSV+J0bp96Cxcx6QE7ki8fn1m/Ik30I/pb+HT+xq9g69JTLGNbL/
lEPj+jhewl6h10QC2+Jecj/rnZEbTbjM3CT9CZyyP0V1bqf9OjLFZ+RKciv1
WkiC77hXkIWfbBfFafszjEApfhVXG0mxnWuKrPwUuxjO2J9jJF5FNsem8sVx
1l6EUWgW9xTZHZ/mWAn8Yi/GhyjNr+bq4A7siOuFB/npdkn8ai9BDe57uxUe
wGiuDLdGr4tkeNO+EPcLO+OZtg/G84c8eMv+W46IZ8rxHPYMvVTcH/1feY5/
TT+t98RSu6b9g946nnE9KTLrneQlOU0Oi39X3o158S47r6z8kh8rX5S94/mT
M+Wdsq28KKfIgfJ9eRfmxN/q/EbyED9RdpUD4zzk1d+W/8iR+FC/Fy2dk1PO
5ErjvN3SPhPvAJbZtexd+hvIEp+Ne5Jbq9dDcvzANeYOxzVDvnimuFzcLL0M
LtjLMQ6t8JBjs/myuGh/gfFoHd8P8c7hTbRFO7RHB3REbud+5Lwn8Zu9AhPQ
CXniveSfwu/2SkzEU/w6rj5SYBfXGXnj+tlP4w97FSbhaf4rrgFSYjfXBfni
e8N+Bn/aq1Gb2223Qdb4nuCe4dbrLyEV9nBNuCNxL5A/vhu4/HH/9WdxyV6D
OtyeeD6RLe439yy3QX8ZqdHO/k0Owo/xjtpH9XfC6clRILa8Gt89cW/8XAF7
vl4unlf9lvyLf10/q0+SveUQmTLuUTyTjteVP/LjZVvZX94R9xfZ47tG/iWn
x3dqPGcyXfyueNedX05+zY+TDWUfmYjnV28vf5eDMVxPg5/ie0Qe496NY3oK
PBxbXovnOK6ln3vYXqCXx+V4vuxf4ndgrf1i/HtxzfBgvH9cee4bvRHSYG98
N3HH9W54JK4d9wi3UK+AK/Y61OP2xudGjvibuQrcRr0x0mIf9y4e5T+xn8Pf
9leYgef4TVwT3I39XDc8xn9qV8Q/9nrMREV+M/cK0uEA1x0F+c/sSrhqb8As
VOK/5ZriHvzM9UAh/nP7eVyzv8ZsPM9v4V7FvTjIvYfC/CK7Mq7H+2n/qvfF
UD1VvItxLR2rL/fxHZATH3GVua16M6THIa4nHucX21Vww96Ij9ELvdEHfdEP
/TEAA1HEeUucUxU37U2Ygyr8Nq45MuBw/H/CndC749G4r/Z1OTrQ08dzg0F+
9n/qLTuX
           "]]}, Annotation[#, "Charting`Private`Tag$573950#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"Test on dynamics\"", TraditionalForm], 
     PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1b\"", "\"u1b\"", "\"x1b\"", "\"\[Theta]dot1b\"", 
       "\"xdot1b\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8648376866338243`*^9, {3.864837721244707*^9, 3.8648377460817285`*^9}, {
   3.864837800602215*^9, 3.8648378151965265`*^9}, {3.864837882180011*^9, 
   3.8648379051126437`*^9}},
 CellLabel->
  "Out[1449]=",ExpressionUUID->"707300bd-3b58-47e5-a123-c5c1369be1eb"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
FosX08/Zhl0yQkBOQcL8I7kVdDncNEfSmhvevt/yehbL93cXCnsfn+WG+0IY
3kBsPAOjtJVoHIiwXyKqRhK7XpzS9E+vVSJUO3+OeRZrW+z+w/HzEzfUiT5f
+99+ry0Y/9FQngg1xrSDUrD+9BwT/2dbSITjIwE7l7DnNbwubLz5khtueZmc
P4vFi3yz0vDj4UQY9zlj6b/47UgOK09t5YZIsMQrEHtflAtGldOXiNAvuVy2
Ers+PWOo+vtOIjy2yrN+GWvHvOgvip/mh1pWAU9osfXkMipXeXmMG8bcOXFO
B+t/dfLcPQcLInznfl5LA/u+eOZBsmEqNyR93yE4jeVnXKrf+PozifDzzsbc
cez+Yw9uVaS/IMK/10beTGHtQw6DIYcauaFtB5fIPPa+FbmO2/O3EOFJifdq
R7Hr1XpyagqtcsN5Rl97AnY/vcD0HUGuRPgpiXuAE/v8Y7CfokYxlh/2GOWe
wd7H+wPPatcriLAm5pgSU/d/+SGPVV0MEd49q/r8v3hRpHt6VOgPN7zElTS+
gj1/U0IdjcUKPyw9a1GVgD3fProSQ+Mhbjh38uW6JnY/mcZYqeh0LB7HNn0f
xn7PuCr/844vESrQDw8uYO1XChzrS7XckP5IzVYk1n+7mKhhyUUs/rWecZPE
fu/A5Sau7kyEZ0Rn44Ww/lRnX+kqKCXCYtb34ZvY76P7hz2eRGHzaW75zX/6
A6+Q1ZWBX1h+7tKY0ID17+uPtL1n/3Fj636948J/8eLzMq1ELhEWOh74Po19
v2UyMH06GDsvbud6N/bf7y38PnJsYu/zUJlZL/b7e79O67G9w86Pai25/z2/
/sudHtf+ckPeEXkdYex6dz4cT/m+wQ8p9lXpU9jz43pmqp21zI0yMsD1zIWV
7NNnTpEBrmf+ClCwfqI3AHA9c/fsx9bNBSxO/k/PlM5vfjm74y/A9Uy/LvRv
l1cnwPXMwnl524OTrQDXM6MMA0y251cDXM/UbhMOyb3uSdUzm0RnzRzC6qh6
pjNJd1a08zdVz7TXdDN53Uai6plFpIa3W6MUqp6pvNXkJiI2TNUzNZRHuodf
DCJcz/w6NTBRcrMf4Xrmr+nhIVvxToTrmQ6sXNvf7WpEuJ4Jw/2K547fRrie
qdweUvHoQgNVzwRcb6Nj3nVQ9cyT3jv2J633UfXMeBE6HT2fAaqeSbfiMXlw
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
fpH//4fggYnX/weC6r79
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{383, 2692, 2690, 382, 770, 662, 573, 502, 449, 416, 
            790, 682, 593, 522, 469, 808, 700, 611, 540, 826, 718, 629, 845, 
            737, 863}}], 
           
           PolygonBox[{{2689, 2688, 367, 368, 369, 370, 371, 372, 760, 652, 
            563, 492, 439, 406, 788, 680, 591, 520, 467, 807, 699, 610, 539, 
            373, 761, 653, 564, 829, 721, 493, 813, 705, 851, 616, 838, 730, 
            860}}], 
           PolygonBox[CompressedData["
1:eJwV0k1LVGEYxvGjLXwpc2Whrawsp0UFBS6CpLQXCCSkbBxnNCQXKiS0b0bd
WNkXCNNalm+trFUtKprRWQSJSJia7jT1C5Ta71n8+V/X/dwPnHNmqjv7mh8W
RlFUgBfIlEZRGi0G9xDHhoXHOIll/Q2GUHQgikbMruKv/g2t2NTTqMGK/hZP
UGz/pVkD/ulZJPBHz+AUVvWYvY/yA4zrlfqUfAdluKBnOTz4U+cl+qjciMvy
D941Pyt/lrtxQ17inHm1PCPf5mR4Hl7kBFdwHee5hR/xLV7ldm5zf0vuR5N+
mi/xd47zb+dn+JPezF18jX/yhLMqeVq+iyvyAh/GRTnHfXhmr1QfC3exp5/T
v8g9mNWP6+/lFI4gabbNA6jFmj6JYRy0+8rsOvb1OaSwow8ihnV9Csfsvgvv
jnI8Nztk9jp8Q9TL8+EPg/Py1/C7cC/f5F+cd+eE/CF8MxwNNuvAffwHCfFM
Yw==
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{2689, 2690, 415, 448, 501, 572, 661, 769, 381, 414, 
            447, 500, 571, 660, 768, 380, 413, 446, 499, 570, 659, 767, 379, 
            412, 445, 498, 569, 658, 766, 378, 411, 444, 497, 568, 657, 765, 
            377, 410, 443, 496, 567, 656, 764, 376, 409, 442, 495, 566, 655, 
            763, 375, 408, 441, 494, 565, 654, 762, 374, 468, 521, 592, 681, 
            789, 407, 532, 603, 692, 800, 440}}], 
           PolygonBox[CompressedData["
1:eJwVzks2gnEcx+E/xUDmNXF5tQ+0AbqwAQtgFsrpVGILZCbUIKtw2QLdRu47
KEaeBs85/8/3/M5532jvIL8/G0KYIcuWx+lCCBV2vc/pMCLt8IQfdvQZbYas
2cp8U9AN7hgQ2Up8kdfP/JHRV8zHfFPf0mfVdswnOf3EL5u6yZz7ur6hx4rt
iA+y+pEJG/qSuPuaXpz+G/ekbC3bK8v6kHe29QNj1vUFMbdVnZj+P12Stmvb
C0u6yBv/ch8rOg==
            "]], 
           PolygonBox[CompressedData["
1:eJwV0slLVQEcBeDrlBBUDhuNLIJyoVYqFAUuRFqUWZEgahHlq7RJTWxvoJYD
aZr9AZXlzuE5UG1qU1CoWUS4KQJNTReWTVu/u/g4v3PevfB4ujNSX1oXGwRB
DFGaNgbBLeoMtVznGld5wAQr5Hupk/9c0fsYZ5k8Wwf/uKx/JNF9ggFS44Lg
vm2MH+Ta2vlLjb5VVvGCTM9+sG1wH+cpKbZeW4P7HQf0VHmaUXbooz6vcb8i
R1/SZ9wF7n2yjT9U27/JEvtNWS6n5CGZLs/IWXlYnpen5HO5W85496z8oh+V
tbJMvpH5MkFWyk+yUJbIk/KJTJY93v/qLnbfkG/Z706RnylyV8oo291Rz1e7
X5KtL+p73Xf4zSW9UU5y0Odp8hzP2KW/D/+e7tfk6fHyGP0k6fd8nuyuYIQM
24htgT36bda4qE8TF353HrPFs922pPA3ZJhttmHbd3L0Vn5xQZ8iNvzdeMRm
z3bZhpgn29bCTyL6JDHuIzxkk+fv2gaZI8vWzGr4v6OvAx0BV+Y=
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1Hecz3UcwPEj6yhxd4kUnVJnc3T2vkuy6soMcWapky2EQtFWSlFGZRRl
a6JFGmbDaBFlNhApSc/3wx/Pe30+n/s9fvf9fj6fx6XmDMzOzZOQkNDGj+gZ
3mICXSln8Ud9jWZcYr5dX2Q4NSls7RN9igHczOXWdukr3Ede/uVtJtKN5pTw
uS91FiOoRRFrG/Vp7iKbCzjLO0yiO5lcx4U+/6lO425uIR//8S4PcjtZZJCf
c7zHQ/TgempTgIIUIjHeLZ4n/gYXUZSLKUZxkkgmJfYm3odLKUkpLqN07AdX
UIayXElq7C9XcTVxAGtkMj1pQZ34u9Y/02fI5VbKx8etr9Up5HADdeMZrX+u
zzKQ9lwTZ2B9nT5ML1rGs1r7Smczknrxfta+0OncQ4d4dmu7dR5juTbOxNr7
+gi94z3M9+gibow9MP9a53AvFc0P6HLqxx6ab9LnSDf+XQfFdxvv1yXxPsan
tGPsnfG32lTnx9nrcR1HZeNDcY66Uhvo39pa0+I+6AfaSB/V6vpr7LH2if3X
vdpMF8dd0D/jPbRVnKV+o3MZFd8f529tsz7PYNLMf9aldIpzNv9OFzCeKuaH
dRUVyG/+oT5GDePftG+crfFP2lxfjzugJ+Nd4j4Z79Am+pLW0mNxljpaK+lB
zdIVsc96WltpQ03SLdpYZ2hN/SPujg6J59JfNFOXxX3Qv7Rz3Fnj73UhGcYn
9H6qGh/R1XHGFDD/SB+nX9w98336Bm0obb5TX2ZMnAnJ1rbqTIbSJd6FgtY/
1ifoT9t49jhvCvnden2SO2gX+xL7HM9EtTjn2FsSfXaDTuVObop7RIr1bfoC
w7iNVGs/6Ks8EN9jflTfpKHxPwnn/1+m6//mTI2L
           "]]}, Annotation[#, "Charting`Private`Tag$574062#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1WXUVVUUBdBHd3eHdKqgqBjYhdLdpXRLt1IiGHR3d3d3SzdIdzcSzjP8
Mcfaa9/7vvF499xBltrNSjeNEolEUkWNRL43nJNtyMBhfTypokUiM/XSxKOb
XTS7oeYPeaxvoATn9bZk5Ig+gdTunaWXIT7d7aLbDTN/xBN9IyW5oLcjE0f1
ifQghvuH2xXjqb6JUlzU25OZY/okfiam+0fYfcwzfTOluaR3IAvH9cn8Qhku
23UkKyf0KfSkLFfsOvEaJ/Wp9KIcXeJGIuVlBSpy1T2dycYpfRq9ieU7jbT7
hH/1LVTimt6F7JzWp9OH2O4fZfcpz/WtVOa63pUcnNFzu2+1uS4z9DT6bHNZ
ElBI3yqb0tf1OPpo82fh+Zn3yxf2BcwbzA340nxCbrPPYl5sLimrhu8jj8jK
MoUsInfK8rKl/FaekdVlFZ+/Ec5MOF96TllU7pUV5T+u55FrwvmS9eTn8pic
6Vpa8xxzufAszYdkQgqbt8lm/Oq+uPqY8Fle6gX1jeaGbNez6kvM1UhJVbub
4SySi7P6LPoRz71j7b7glb6DatzSe5Cbc/ps0rl3bvi3k4jf7OLbjQu/YTjf
5gMywuvmTeG5yEbyK3lS7vSZ18xLw28W9f93sbpdDWrS1fmqJW/b/0wezutz
6E8Cnx0f/h5R2GVXmzvmX8jLBX0uA0jo/gl2XxOV3XZ1uGvuST4u6vNI7955
egUS87tdIruJ5m+Ixh67utwz9yI/l/T5ZHDv/PCsScIfdontJoVzQnTe0DfL
xux1PZu+zFyD1Lyj75KtqOf6fdmbAlzW87q+1vwDC/SM+gJzpfCumQ/LpLxl
3i6bh+9uPi3/dH8S82RzCVlcFpMHw+dlDPmm3BLOoGwSfjd5Kpwl+bfPZ5fL
9VKyZniv5FFZRaaR78rd4TeUrWXxcO7D9/XZB7IPBXk//D15xT6feZ35Rxbq
mfSF4Z0jGW/rO2QL/nI9qT7F/B0x2WeXw26FuRZpw9+yeyj7hrPIVX0RA0nm
3qnhHSUW++3q8yi8X+EZcU1fzCAa8NiuX/h9uK4vYTANaURjmhD+g+nmDDeT
zWlBS1rRmifhvaEQN/SlDCG57zQtPBdic8Aup91Kc23S8ZPdU9mfwnzg+j55
0z6/eb25jKwf3md5XFaV3X2fZe7JbF4UnhXJGWqXwm66uSRxOGjXhmfmAeEc
cUtfzjDa8m94N8Jz4ba+guG043k49xThjr6SEbTnRTiD4YxzV1/FSDrwMjzb
cH64p69mFB15ZTeQ97ivr2E0nYj4/oPsi/JAX8sYOhPFtcHhrPFQX8dYevg9
usiorg8JvyOP9PWMI6X9jHDGicshu1x2q8x1SB++i74nPJNwDs1nwzssu7r3
P80CDXU=
           "]]}, Annotation[#, "Charting`Private`Tag$574062#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1Xf4lWMcx/HTklGiJBRKSmkvLbREqGihpfq1tSiVVEpbS1HaC+2909DQ
Ig20B5IWDe2i8Pr+8b4+476f65zz3ONkS2pXvW2yRCKRlDyRaJgikciRKpGY
kjKRKIFT8kJ8guf063SvIzV26Rohp/5zuSROy4tQT7dfbodH8amuom49/wZu
xw+6t3Qn+O7IhyTdE7ov+FL4Q16M+roD8tvIihG653Ub+Nq4A93k6/Rj/Gi8
lXyS/wCj+fuQn+9Hk2MM39i8XPyXfGkM5e/En/qO9IJuPh1AJ9KHsMTYm/Sg
bg59h46k92IVssm96X90Kf2MfkmzYi1Gev4F+o1+Fq1DP6F346v4/Hgf9AZd
TIfRz+kj+MmzrekpXQ+M4TOiAN+fpsBYvol5ufmp/NM4I3eSL/IfxfeSG8iH
+PZ4DJ/pKuk28nVxF3brmuJJ/TT5GZyVl2EUmqE58hifbuxZnJOXYzRe1G/S
1UMa7NG1QF79DLkMzssr0FB3WO6A7PHbdC/pNvP1kTbWUv6bDsde423k03xP
jOXvR0F+AE2Jcfx0mh0tzc9HZ+pm0rKxV+hdWIG/jHeml/QL6EA6iWbG17E2
sd/pEf1c+m68M5oeq/G43IcmsAyj5KmxH2JNPPsy3aJ7M84Dny7WPNaR/hN7
APvMayv/wX+IQrFeciqM598ynp+fxZfDBfk9+TI/CCvlJPlnviNyYJyusm4r
3wDpsF/XLvY53wuF0UpXQDebL4+L8io01v0id0JOjNdV0X3LN8Q9OBD7EgX1
c+QKuCSvxgRU1X+na4R7cTDWDoX0c+XncFleg4nxDuL74W28g/YobO488yri
ivw1JqEDihibr38eV+W1mIxX9NviXkF6HNK9i6L6BfILuCavwxS8qv8+7gVk
wOG4B1BMv1CuhOvyejTR/Sp3xhNxRnXVdNvj/OE+HIlzh6f0i+QXcUPeEOdK
d1R+D7nwha66bgffFBljX8s3Y7/g53gf8pm4X2Jd+Uwowg+kt2FCfB/zivOL
+ZcwjE8T50bfhV7RLaSD6WSaJe6iOMv0N9082oWOohmwBrnlvjQZlmO0PI0+
hnVxf3q+Bt2pn02b0RH0HqyMcxn7md6iS+iI+L300dhbscb0bJyf2F/8Ayga
e5qmxsR4T+aV4JfwL+Mf+X35Kj8EG+Muko/x7+PJOH+6mrpdfHNkwq+xn3Tn
4jehGLroSuqW8pVxU96Eaail/0HXAg/gaHwuSsU5l6vglrwZ09EVpeM96avi
X3kLZqAbuuMD9EBPfIhe6I2n4y7yzCv4T96KmeiDZ+IO0r+KBL7VzcJr+h/l
lngQv+n64tl493I1JMN3utl4Pf5H4i7BQzim64cy+lVydSTHtrirdb/zXZEH
c3Rv6HbHfYHMcX/I/9KR+D3Oo3ye74cJ/IN4ih9Mb8ckvr95ZePe5GtgOJ8W
KeKz6DW6iA6lU+jDcS4905Ie13VDXszV1dbt4VsjC47rBqBc7F25JlJiu24e
6uj3ym3wME7oPkL5uOflWkiFHbr5GIhBGIwhGIqPMQwVPLPW3NdwG3bqFqCu
fp/cFo/gZNw78R8Tvx3FY8/Kd2AyPyP+P7Aew839Hw76QiI=
           "]]}, Annotation[#, "Charting`Private`Tag$574062#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV02WAFVUYBuAhdpeU7ly6uzvtxEIUUFSkQRRFEEGQbru7uzvpZqW7OwUB
aXy+H8++7/nO3Lmzc2fSewzsNCBTkiQZ/sxKSZIKaUkyPzVJhtOKfJwwn80c
5jKP+SxgIYtYzBKWsoyKzrPAZx+nNfk5ad7WfJf+IndSi+XmlcwX6iNoQwFu
MjshP6QvpxzXzmy3/hJ3UZsuZhfkVzxMhuMqmy3Sn6At91hn5Ue9IJ30k/Kj
+IxehH56b5mLP+PaZRn+c772co/Zk/JlOVgWYiJdrXvK7IzjN+thshTTqBP/
q7won5Jfy0dkMSYzxLqfzMMEZsd1y3Rm8LfvryIXm49kkF6AdnoPmcJPeiFu
1k/Jj+lPH+vc/KWfdp4O+l79FbpRN+6j2SX5TVwXKxxX1WyJPor2FOaMeUfz
ffqrdKceK82rmS+N+0MHinDWfBWrWcNa1lHdscvsj6YjRTlnvp4a9pZbj+Fy
inHefAM17WXEPeQKinPBfCO14j5Zj+VKSnDRfBO17a2wHsdVlOSS+Wa2sJVt
bGcHdRy/0jHjuZpSJOy0V9feKn0C11CaTOyyV8/ean0i11KGzOy2V9/eGn0S
11GWLOyx18DeWn0y15NOVvbaa2hvnT6FGyhHCvvsNbK3Xp/KjZQnNe6b+X75
GndTn/2Ob2y+QZ8W7xb3Wqfysz5UlmAKFaxviedefsIA0uKemx2Qr8f7RAMO
OG8T84369HivqEi2+B3MD8o34jmlIQcd39R8kz4jnlcqkT1+G/ND8s24Nhpx
yPHNzDfrM+O6qEyO+G3MD8u3uI/GHHZ8c/Mt+tPcSpVIs9PyUwaSM34/syPy
be6nCUd8voX5Vv0ZbqNqpNkZ+RmDyBW/sdlR+Q49aUpXs4Rv9Uc56nwtrbfp
z3J7XKt1Gr/o1WKmn5Wf8yC54xkx+0e+ywPBOge/683opmfiu/geWZyhen+Z
lzn6SFkuzuMaWsntZs/Fd+gF6Rz/t8zGWH61fkyWZCrVrTvLc3KM/EIOkUWZ
xGDrvvIyxjPLeoQsy/SYx/Msj8nR8j35kCxML72XzMkf+nBZmuZ6d5mZ7+N6
4vnT8zFXP+Z/aa3v0J/nDmpEmp2XX8Z3kCfeF7Pj8n1604LjPt/GfKf+Al2o
Sd54h8z/lR/Qh5bx/phl4Qd9WDw7en7m6aNkeWbG55z3f7ZN7PE=
           "]]}, Annotation[#, "Charting`Private`Tag$574062#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1mXYFkUYhuGXkpIWg1IQUcIGQVIMEFRAREWkpKQbaQywk1a6O5XuUAkD
UJDu7u7yfH5cxx0zs++3uzMLueu1qtoySSKROJE0keiTMpFYmDqRuBf9UyUS
T+KY7lf0RT/0xyLj92GA8adwXPcb9upKY6HubWTEAP1iXTYMlJ/GCd3v2Kcr
g0W66siEgfoluuz4US6Mk7qkaRKJOrodcies0u2Xn8Ni+R3kN+czORkyy1nk
1vxJ/ksUkfvIGeLa1i+lOfCTsdLGBvNF+Pv5bvxVvjI/hT9lfjK+Ll+P7jRW
jo6WO8ez4r/jm9O0tDqdHWN0tbUH+LKoLS8x/3k6XG5Na8gF6OdyE5qcVqMz
aUeaxfhdtI3ciJ6SK9Lx8lf8M3xfPiNq8vPjnvzmMpoTg2IOHjDWXb7Gnzae
XH5P3iV3wRrdQfl5LJXfjd9FVvPa6k7zX2OQecvlXBgsF8UZXQrz6ul2y12x
VndIfgHL5JpxLQzWr9DdjyFyMZzV/YHDuhexXFcLd2OIfqXuAQyVn8U53Z8Y
imGxR43lxjBjxXFe9xeO6F7CCl1t3IPhsV91eTBcLoELur9xVFcOK3V1cC9G
xH7VPYgRcklc1N3hfuvr9sjdsE53TC6PX+W6KGjOF3KKODNxP3I7/gz/TTw7
uZ+cCSOtX0XzhjdWxtgQvhSfm+/BX+er8FP5S+an5Bvw9eleY+XpGLl7nE3+
e74FvZO+Q+fQLnS9tcf5l1FH/s38F+gIuU3sC7kQ/VJuSu+gb9KfaSeaLZ4l
bS+/T8/Kr9AJ8rfxTvn+cQ4xym+tpg+Fj7OGPMY/lG/wl42nkhvK++Qe2KA7
IVfA73I9ZMdo/RpdPoyOZ4Qrun8wBmv1D2OM/jlc1f2LsRiH8ZiAiZiEyZiC
qbH/rHsEY60ri2u6jZgWe02fH+Pi7OK6bhNO6ipila4+cmB67D1dAYyP54ob
uv9wSvcKVusaICdmxN7TFcQE+UXc1KX2TBrp9ssfYrPutPwq1sgNkQsz9et0
hTBRfgm3dGmsf193QP4IW3Rn5NewVm6ER835Sk4Z5zH2u9yBP8e/yk/kv4sz
xw/gs+Bn11lPH8WkeM7Ghsa54R/kP+Ib05vy63Sa3IHeti4tbSw3oAeNv0zH
yu3ox/HvA/1BbknT0Rp0Lu1Kt1p/lq+EuvIf8azoyNiD/GP813wqvMX/Et8M
/X38B/x5/jV+Ev99fCf4gfxd+MW1N9DHMDnOEfLG3yTf4hO4U24iH+I/wTZr
zsmV8afcOM4pspnXUXeB/wGzYn/Kj2NK3DOSIJ15TXWH+Z7Ybt55uQr+kpvE
OcHs2MO6JzBVroCk2KG/oHsdf8tN4/ljTuxb3ZOYJldEMuzUX9RVxTq5Wdwj
5sZe1j2F6XGOkRy79Jd0b2C93BwPYV7sZd3TmBH7BCmwW39ZVw0b5BbIh/n6
zbrCmBnvIK7j3j+Rb/NV+en8B/GdkdPTZvIRvhf2WH8lvj/4R26Jh7FAv0VX
JPakXAkpsVd/NfYA/pVb4REs1G/VPRPvW66MVNinv6Z7Gxvl1siPRfptuqKY
Fd9dpMZ+/XVddWyS26AAFuu364phdux9pMEB/Y34/uI/uS0KYol+h+5ZzInn
gLQ4qL8Zex+b5XYohKX6nbrimCu/EXsSGTyv5rqj/Kc4ZN4t+V1skdvHOUd2
8zrpLvK9scy8XXIJzJOrxfsyp6ecQDo5o9yCP8Z/hsPW3JZrYqvcAY+b842c
Os6PnEPuzF/i+6CE/KOcFcut301LYr6xssaGxbuNd8r34pPEnuNn0PT6THxL
viE9HvufjpPbx/+Z5MK0t9yKpo/7pvNoN3rE7yVoLfk9ui2+j3SU3Da+C/IT
9Fu5GU0T+4DOivNqLCffhb8c+4ufzPflS/I/8Xdjhd/YQ0thgbG3Yr8Z/1RO
igxyZrkVf4L/AketSaKrrdsud4y/A7l0XXVX+H4oJQ+S70EtfgHtTlda/z9u
R4+J
           "]]}, Annotation[#, "Charting`Private`Tag$574062#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"LQR feedback solution\"", TraditionalForm], 
     PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1c\"", "\"u1c\"", "\"x1c\"", "\"\[Theta]dot1c\"", 
       "\"xdot1c\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8648376866338243`*^9, {3.864837721244707*^9, 3.8648377460817285`*^9}, {
   3.864837800602215*^9, 3.8648378151965265`*^9}, {3.864837882180011*^9, 
   3.864837905369561*^9}},
 CellLabel->
  "Out[1450]=",ExpressionUUID->"c517e0af-6b48-46e2-ad95-758e77e6d495"]
}, Open  ]]
},
WindowSize->{1440., 747.75},
WindowMargins->{{-6, Automatic}, {Automatic, -6}},
FrontEndVersion->"13.0 for Microsoft Windows (64-bit) (February 4, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"dbf89052-0529-4a5a-9aea-3964104c39a4"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 271, 6, 51, "Text",ExpressionUUID->"e1d1232c-86cc-4804-8aba-9808e8088f82"],
Cell[832, 28, 78375, 1920, 2284, "Code",ExpressionUUID->"8daba21d-9510-4b30-8c25-b5a0584418ca"],
Cell[CellGroupData[{
Cell[79232, 1952, 9931, 281, 447, "Input",ExpressionUUID->"c47d3c4e-60ca-4c63-8b5c-ced31cd89cdf"],
Cell[89166, 2235, 473, 11, 32, "Output",ExpressionUUID->"4bed02fd-3524-433c-b94d-a0b4f9cfff71"],
Cell[89642, 2248, 58201, 1051, 206, "Output",ExpressionUUID->"298d6fac-cc4c-4288-9a52-5996256d62d4"],
Cell[147846, 3301, 59865, 1078, 208, "Output",ExpressionUUID->"707300bd-3b58-47e5-a123-c5c1369be1eb"],
Cell[207714, 4381, 69953, 1248, 229, "Output",ExpressionUUID->"c517e0af-6b48-46e2-ad95-758e77e6d495"]
}, Open  ]]
}
]
*)

