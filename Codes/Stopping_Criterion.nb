(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1051534,      20530]
NotebookOptionsPosition[   1045081,      20427]
NotebookOutlinePosition[   1045525,      20444]
CellTagsIndexPosition[   1045482,      20441]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
Replace NDSolve with a numerical integrator with a fairly large step size\
\>", "Text",
 CellChangeTimes->{{3.8667365668180294`*^9, 3.866736584557274*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"3b2a17b4-431c-4b4f-ac9a-98cb6e212d71"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Remove", "[", "\"\<Global`*\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], " ", ":=", " ", 
   RowBox[{"Sin", "[", "x", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", " ", "=", " ", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T", " ", "=", " ", "1"}], ";", 
  RowBox[{"dT", " ", "=", " ", 
   RowBox[{"T", "/", "n"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["x", 
    RowBox[{"0", " "}]], "=", " ", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", "0", "0"},
       {"0", "0", "0", "0"},
       {"0", "0", "0", "0"},
       {"0", "0", "0", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xTable", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      SubscriptBox["x", 
       RowBox[{"i", "+", "1"}]], " ", "=", " ", 
      RowBox[{
       SubscriptBox["x", "i"], " ", "+", " ", 
       RowBox[{"dT", "*", 
        RowBox[{"f", "[", 
         SubscriptBox["x", "i"], "]"}]}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x", " ", "=", " ", 
   RowBox[{"x", " ", "/.", " ", 
    RowBox[{"NDSolve", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"x", "'"}], "[", "t", "]"}], "==", " ", 
         RowBox[{"f", "[", 
          RowBox[{"x", "[", "t", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"x", "[", "0", "]"}], "==", "0.1"}]}], "}"}], ",", "x", ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "T"}], " ", "}"}]}], "]"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.8667366065061517`*^9, 3.866736804993748*^9}, {
  3.8667368472930236`*^9, 3.866736853623969*^9}, {3.8667382591609135`*^9, 
  3.8667382654258814`*^9}},
 CellLabel->
  "In[586]:=",ExpressionUUID->"3a837bbe-2f32-4725-94f8-caa99023f58a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", "xTable", "]"}]], "Input",
 CellChangeTimes->{{3.866738326648018*^9, 3.8667383394408674`*^9}},
 CellLabel->
  "In[596]:=",ExpressionUUID->"225162e1-1b89-4d67-aa78-0ebe5393fff1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"101", ",", "4", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{{3.86673833397064*^9, 3.866738339812745*^9}},
 CellLabel->
  "Out[596]=",ExpressionUUID->"3b996981-4e5a-4676-9931-2010bbe37bb0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"xTable", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8667383450970325`*^9, 3.8667383474332743`*^9}},
 CellLabel->
  "In[597]:=",ExpressionUUID->"99ba7cdf-63b8-4cd7-bd1a-aea8622d4369"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.866738347855135*^9},
 CellLabel->
  "Out[597]=",ExpressionUUID->"65145334-39c1-4a17-8565-f4107373bf17"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", "xTable", "]"}]], "Input",
 CellChangeTimes->{{3.866736866333845*^9, 3.8667368705104904`*^9}},
 CellLabel->
  "In[312]:=",ExpressionUUID->"639ea55d-1ed8-487a-b4b2-4715ac15be0e"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJw1yw0s3Hccx/FzCyWmNqVTmbIblwX1TKnT+9RTPZw7d447WjQrWjRT02br
g+0fkVEznfUpuG6pbfUw3bRrUZSjWg/zUCtGuiAaDykZtmprvbAu/f7+yS//
vH7v3+e9DzMVKXwej5fy6vz/f/0tixuM3CcMHt0W0wU2NGe7raybyIbIfdyl
G01ifguL2SsC/++ZzXGyymlOOsdsiZ7U2jUTp2byu/D7u3Xz6SxmWzR3j06U
NTALcOHMOeGRdWY7OMz2Xl0JbiEL4aApsdtRzPwB3j4RlGb7B7MDLqWWBPTb
3iE7oelzLtcrg9kZZs45G/H1zK4wlSWdF/NbyW7oPHDMdkbK7I7xWwX5kRpm
DwTWLV8/+YTZE2H8b4o+8m0jeyF7ddHQ8QyzN2br7a1vjDPvhGrYYDrXQkv2
Qce+i+vndjP7wi8+JdXkMPMubKh11sslzH546hbp5N/CLMJtbUPZ6iyzPwrO
bz5uZdZO3o2yivKeWn9mMW69sKu+lsYMFGeuCLdfJHPAj/v71RsdrO+BONBU
pVhmfQ+s8jQiy+0d1AOQbfyXUCEhcwHQ6cy99U6xHgh5QluRsIb1QJxqFEXd
HWc9CKb3cqvGjO5SD0LGG+7aQ7vIvGBo1GWdWRmsByP5h7aZ5xrWQ/CnPDH2
5QDrIXCcXorI0eukvhd3jv6y/pknmduLNNdvq/UOsx6Kxan8QgMN66F4R7Rp
uvgB62HYGl/4T7n+PephsHxTpe/iR+aF46bT2QNhWayHQznjKV+sZD0C83PO
wm2TrEfATiNxG9p6n7oEOeLwLgsZmZPA9vmweD6f9Uhseli8GtbOeiRi2s1C
RC9Zl8Ii60WJ1quLuhQn3h8TjR0l82SoSJdey6tlXQa9kQ1J1zzrUQjN0xRc
se9+bURh5efHg+YHyVwUAo0rLwiukLVR0AoGZH2TZJ4cU0Vxn2yx6aG9HEum
qQVriWROjkdXXfjcd2StHK3p5oeqpsg8BSYSL4mOCXppr8Cw9UHjmWQyp0Bh
qiRJV0nWKlCXr+xqXiDzouFd9dOInetvtI9GysING9/jZC4aRpnr/v82kbXR
8BCo+tL0+mivxNLHLWlnQslQInEopTH+azKnxGmDzoTJMbJWidn9ufxtgn7a
x2CkNF9hdISMGHzZ+Ux3vZ7MxSCiyeWmOX+A9jHQFQ3u8JCSebHIq6kTmJaT
EYuHvU+kNfNkLhalFb9nGewcpP2r9+q1SPsvyDwVJpocqw1HyVChptRHGLfl
Ae1VkPnp881EZK0KU88aBl1SyDw13BcqP/21mAw11o3vz11uZHs1vpopN1qe
Zns1vHzC+2pMhmgfh33p+TaDPmTEoWLw8tOE5CHxfzB34QY=
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 101.}, {0, 0.27175091636967796`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8667368709263554`*^9},
 CellLabel->
  "Out[312]=",ExpressionUUID->"5c83dd94-cba8-4a24-9fa9-40b6c8906d0c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"x", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "[", "t", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "T"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8667368114736457`*^9, 3.8667368316890864`*^9}},
 CellLabel->
  "In[302]:=",ExpressionUUID->"138d0aaa-982e-413f-a726-bb90b1073a40"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwVxX040wkAB3AroksLUbccIjshUS0i3VfpRajO28m15JROKtWS0rtCjlhP
uaJR3o6YvOTlaTYM8zYv24+VdExpueXtl+chR8/Z3f3xeT6mwWe8Qxaoqant
+8//u4coCeEnvx/ONAZkp6XxoO666uwgjYESk8WnORweNj1NTS+n7QSXEXco
I4MHj87eFxk0XwzkhZRlZfHgf2ym5j7tGNYX8VyKCngYsL3jmkSLQJRT1Xgr
j4dMgwNxCbQYGLNcYle/5SFaq9ziN1oKTimXXdtrWI2DAVklnydzwYooimkq
rMYSVTRzj3EJSsUfr8ds4oPuNaFsTKxAc11Vn5OAj4tdjkid4oHCEMqSfARY
WaErp1DqIFlUP1r0QYCqIdcOiXMDxnS+VhrcrkFDWIZhwJgIKZufq42Y1WL6
+23Lnp9uwUWZQaIWvxYLZrk6hnQx9LgPnJlH62CvCqryKe5ALu2CvpwiREcM
o6vZSgJvPq1ew1sIk3ujswUTUrTm256tLxRidGZQ/squG9v7KqO2qYTIHeGL
qck9mHqmlfyCWQ+qUT6pUMiQfz1RHFxdj7snKo9nmr9GZ7i16Z3lDfjiwlWE
3uhFLfkw1SayAREbRRUrGt+A2T2UtkbWgMFiUSJh+hbSnvsbtJ0b8TVMxrG8
/CeiItk0p9xGWG/XnD/O78c2t2RFsKYIe7JNfy1bKUdfHdVhxQURLhodMXvP
HITly1bN9AER1o35Lend9w5sehVjxe4mLF/2WUs09w7v1R/7veQ1Qb2OU7Im
/T1OWodMERbNOMng9y32GMLpVrOC37Oawd0bnFn7ZQhXKoK9cw1bMD26Smf4
4QdsHJ4Pb2G3oNJnz8KUnQpsuM6a26XTihtusU8rhhVYPf+L8llCK0wH3N/k
xH6E/v2b5jPqbXByiEmhbRyG3P2Q4qe7bWAaS2YpPcOIPyd6YbdUjGlx0tDZ
6L+QEHA1tJwjRqp6YIS3uRK+31rPXV7TjuXyyuwFIiXKjjpssuW2Q+NatK/j
uU+gtlUG+m3vgFpBYMmQ3ghG4vXq3aUdYD0uSdJrGAHL01w/ILwTNdbxWrrh
o1BTj5DXa3dB15217hZ1DDacoMJLOV3ot5H2RAnGkCx4oG3lLkHpE5grAsfB
sPLxH1VKcLjEXtdofhyN7VuCmlyluBmbFd1fOIFgjZZVcRwpniuNOFRPEpGh
GpmLSSniM2KD5PtJHLgmot/6LMUx73F6sReJ8JTz7XOTUnwnEJTu8yeRWcWN
HJuSIoF9qPluMAnZ7jZPYk6KUPu0yW+iSJRHfpzNXETALEbfTTOPRJoB5cRB
YwLzW64u7X1GwsiLPSkzIdA3/qE7j0tC92/mYy9TAvf8yw/vLiNx6oLQ08Oc
gMrK+3ysgMRUwTjDxYpAP8F+srCHxKW32gZ29gRexs0c7XlFwusRP7vYgUDK
1iOWOW9I2EYQP9o4EvD4Y33FDjkJ4yvOVGtnAtWXOtuiP5GQOPpR1+4g8NBm
M9trjEQ369bTfFcC54bSfU1JEvQ8Ky+LXQTWep4aFE6RGFBOG1i4EVCnyHLv
zZB4PWFkmb+XwLvKrWFBcyR29ouZFh4EBGE5tnb/kDizTlWa70ngkcmSaZWK
RNbPNfS1+wn8C6rjaaY=
       "]]},
     Annotation[#, "Charting`Private`Tag$38315#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.10000000203741698`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {0.10000000203741675`, 0.27039531407846523`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8667368180495124`*^9, 3.8667368327377467`*^9}},
 CellLabel->
  "Out[302]=",ExpressionUUID->"2a9e3e78-eaec-4350-b80e-8dfff663140e"]
}, Open  ]],

Cell["\<\
Packaged the Stochastic approach in one single function and it seems to work \
well\
\>", "Text",
 CellChangeTimes->{{3.8648378409682493`*^9, 3.864837871408472*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"e1d1232c-86cc-4804-8aba-9808e8088f82"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Remove", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
  RowBox[{"(*", 
   RowBox[{"ICs", " ", "-", " ", 
    RowBox[{"Initial", " ", "Conditions"}]}], " ", "*)"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Error", " ", "while", " ", "cosntraining", " ", "u"}], " ", 
   "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"CalculateSMatrix2", "[", 
   RowBox[{
   "x1a_", ",", "xdot1a_", ",", "\[Theta]1a_", ",", "\[Theta]dot1a_", ",", 
    "u1a_", ",", "\[Tau]_", ",", "A_", ",", "nGrid_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x", ",", "L", ",", "RHS", ",", "RHS2", ",", "xdot", ",", "\[Theta]", 
      ",", "\[Theta]dot", ",", "u", ",", "K", ",", "S", ",", "soltn", ",", 
      "Af", ",", "Bf", ",", "Q", ",", "fx", ",", "xState", ",", "R", ",", 
      "Mf", ",", "x2dot", ",", "\[Theta]2dot", ",", "S0", ",", "sol2", ",", 
      "t", ",", "sTable", ",", "s", ",", "time1", ",", "dT", ",", "time2"}], 
     "}"}], ",", "\n", 
    RowBox[{
     RowBox[{"xState", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
       "}"}]}], ";", "\n", 
     RowBox[{"x2dot", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{"u", "+", 
         RowBox[{"A", " ", 
          RowBox[{"\[Theta]dot", "^", "2"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"A", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ";", "\n", 
     RowBox[{"\[Theta]2dot", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{"u", "+", 
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ")"}]}]}], 
     ";", "\n", 
     RowBox[{"fx", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
       "xdot", ",", "x2dot", ",", "\[Theta]dot", ",", "\[Theta]2dot"}], 
       "}"}]}], ";", "\n", 
     RowBox[{"L", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", "2"}], "*", 
       RowBox[{"u", "^", "2"}]}]}], ";", "\n", 
     RowBox[{"Af", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{"fx", ",", "xState"}], "]"}]}], ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{"For", " ", "nD", " ", "stuff", " ", "use", " ", "Grad"}], 
      "*)"}], "\n", 
     RowBox[{"Bf", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"fx", ",", "u"}], "]"}]}], " ", ";", 
     RowBox[{"(*", 
      RowBox[{"For", " ", "1", "D", " ", "stuff", " ", "use", " ", "D"}], 
      "*)"}], "\n", 
     RowBox[{"Q", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{
        RowBox[{"Grad", "[", 
         RowBox[{"L", ",", "xState"}], "]"}], ",", "xState"}], "]"}]}], ";", 
     " ", 
     RowBox[{"(*", " ", 
      RowBox[{"Fix", " ", "this"}], " ", "*)"}], "\n", 
     RowBox[{"Mf", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{"L", ",", "u"}], "]"}], ",", "xState"}], "]"}]}], ";", "\n", 
     RowBox[{"R", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"L", ",", 
        RowBox[{"{", 
         RowBox[{"u", ",", "2"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"S0", " ", "=", " ", 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]]}], ";", "\n", 
     RowBox[{
      RowBox[{"RHS", "[", "t_", "]"}], " ", ":=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"IdentityMatrix", "[", "4", "]"}], " ", "+", " ", 
         RowBox[{
          RowBox[{"Af", "\[Transpose]"}], ".", 
          RowBox[{"S", "[", "t", "]"}]}], " ", "+", " ", 
         RowBox[{
          RowBox[{"S", "[", "t", "]"}], ".", "Af"}], " ", "-", " ", 
         RowBox[{"KroneckerProduct", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"S", "[", "t", "]"}], ".", "Bf"}], ",", 
           RowBox[{
            RowBox[{"Bf", "\[Transpose]"}], ".", 
            RowBox[{"S", "[", "t", "]"}]}]}], "]"}]}], ")"}], " ", "/.", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "->", " ", 
          RowBox[{"x1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"xdot", " ", "->", " ", 
          RowBox[{"xdot1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"\[Theta]", " ", "->", 
          RowBox[{"\[Theta]1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"\[Theta]dot", " ", "->", " ", 
          RowBox[{"\[Theta]dot1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"u", " ", "->", " ", 
          RowBox[{"u1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", "\n", 
     RowBox[{
      RowBox[{"RHS2", "[", "i_", "]"}], " ", ":=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"IdentityMatrix", "[", "4", "]"}], " ", "+", " ", 
         RowBox[{
          RowBox[{"Af", "\[Transpose]"}], ".", 
          SubscriptBox["s", "i"]}], " ", "+", " ", 
         RowBox[{
          SubscriptBox["s", "i"], ".", "Af"}], " ", "-", " ", 
         RowBox[{"KroneckerProduct", "[", 
          RowBox[{
           RowBox[{
            SubscriptBox["s", "i"], ".", "Bf"}], ",", 
           RowBox[{
            RowBox[{"Bf", "\[Transpose]"}], ".", 
            SubscriptBox["s", "i"]}]}], "]"}]}], ")"}], " ", "/.", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "->", " ", 
          RowBox[{"x1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", 
            RowBox[{"i", "*", 
             RowBox[{"\[Tau]", "/", "nGrid"}]}]}], "]"}]}], ",", " ", 
         RowBox[{"xdot", " ", "->", " ", 
          RowBox[{"xdot1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", 
            RowBox[{"i", "*", 
             RowBox[{"\[Tau]", "/", "nGrid"}]}]}], "]"}]}], ",", " ", 
         RowBox[{"\[Theta]", " ", "->", 
          RowBox[{"\[Theta]1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", 
            RowBox[{"i", "*", 
             RowBox[{"\[Tau]", "/", "nGrid"}]}]}], "]"}]}], ",", " ", 
         RowBox[{"\[Theta]dot", " ", "->", " ", 
          RowBox[{"\[Theta]dot1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", 
            RowBox[{"i", "*", 
             RowBox[{"\[Tau]", "/", "nGrid"}]}]}], "]"}]}], ",", " ", 
         RowBox[{"u", " ", "->", " ", 
          RowBox[{"u1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", 
            RowBox[{"i", "*", 
             RowBox[{"\[Tau]", "/", "nGrid"}]}]}], "]"}]}]}], "}"}]}]}], ";", 
     " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"time1", ",", "sol2"}], "}"}], " ", "=", " ", 
      RowBox[{"Timing", "[", 
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"S", "'"}], "[", "t", "]"}], "==", " ", 
            RowBox[{"RHS", "[", "t", "]"}]}], ",", 
           RowBox[{
            RowBox[{"S", "[", "0", "]"}], "==", "S0"}]}], "}"}], ",", "S", 
         ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], " ", "}"}]}], "]"}], 
       "]"}]}], ";", "\n", 
     RowBox[{"sol2", " ", "=", " ", 
      RowBox[{"S", "/.", "sol2"}]}], ";", "\n", 
     RowBox[{
      SubscriptBox["s", 
       RowBox[{"0", " "}]], "=", " ", "S0"}], ";", "\n", 
     RowBox[{"dT", " ", "=", " ", 
      RowBox[{"\[Tau]", "/", "nGrid"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"time2", ",", "sTable"}], "}"}], " ", "=", " ", 
      RowBox[{"Timing", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          SubscriptBox["s", 
           RowBox[{"i", "+", "1"}]], " ", "=", " ", 
          RowBox[{
           SubscriptBox["s", "i"], " ", "+", " ", 
           RowBox[{"dT", "*", 
            RowBox[{"RHS2", "[", "i", "]"}]}]}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "0", ",", "nGrid"}], "}"}]}], "]"}], "]"}]}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"S", " ", "=", " ", 
      RowBox[{"sol2", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", 
     RowBox[{"{", 
      RowBox[{"S", ",", "sTable", ",", "time1", ",", "time2"}], "}"}]}]}], 
   "\n", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"CalculateSMatrix", "[", 
   RowBox[{
   "x1a_", ",", "xdot1a_", ",", "\[Theta]1a_", ",", "\[Theta]dot1a_", ",", 
    "u1a_", ",", "\[Tau]_", ",", "A_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x", ",", "L", ",", "RHS", ",", "xdot", ",", "\[Theta]", ",", 
      "\[Theta]dot", ",", "u", ",", "K", ",", "S", ",", "soltn", ",", "Af", 
      ",", "Bf", ",", "Q", ",", "fx", ",", "xState", ",", "R", ",", "Mf", ",",
       "x2dot", ",", "\[Theta]2dot", ",", "S0", ",", "sol2", ",", "t"}], 
     "}"}], ",", 
    RowBox[{
     RowBox[{"xState", "=", 
      RowBox[{"{", 
       RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
       "}"}]}], ";", 
     RowBox[{"x2dot", "=", 
      FractionBox[
       RowBox[{"u", "+", 
        RowBox[{"A", " ", 
         SuperscriptBox["\[Theta]dot", "2"], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
        RowBox[{"A", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
       RowBox[{"1", "-", 
        RowBox[{"A", " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]]}], ";", 
     RowBox[{"\[Theta]2dot", "=", 
      FractionBox[
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{"u", "+", 
           RowBox[{"A", " ", 
            SuperscriptBox["\[Theta]dot", "2"], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], 
       RowBox[{"1", "-", 
        RowBox[{"A", " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]]}], ";", 
     RowBox[{"fx", "=", 
      RowBox[{"{", 
       RowBox[{
       "xdot", ",", "x2dot", ",", "\[Theta]dot", ",", "\[Theta]2dot"}], 
       "}"}]}], ";", 
     RowBox[{"L", "=", 
      FractionBox[
       SuperscriptBox["u", "2"], "2"]}], ";", 
     RowBox[{"Af", "=", 
      TemplateBox[{"fx", "xState"},
       "Grad"]}], ";", 
     RowBox[{"Bf", "=", 
      RowBox[{
       SubscriptBox["\[PartialD]", "u"], "fx"}]}], ";", 
     RowBox[{"Q", "=", 
      TemplateBox[{
        TemplateBox[{"L", "xState"}, "Grad", SyntaxForm -> Del], "xState"},
       "Grad"]}], ";", 
     RowBox[{"Mf", "=", 
      TemplateBox[{
        RowBox[{
          SubscriptBox["\[PartialD]", 
           RowBox[{"u"}]], "L"}], "xState"},
       "Grad"]}], ";", 
     RowBox[{"R", "=", 
      RowBox[{
       SubscriptBox["\[PartialD]", 
        RowBox[{"{", 
         RowBox[{"u", ",", "2"}], "}"}]], "L"}]}], ";", 
     RowBox[{"S0", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}]}], ";", 
     RowBox[{
      RowBox[{"RHS", "[", "t_", "]"}], ":=", 
      RowBox[{
       RowBox[{
        RowBox[{"IdentityMatrix", "[", "4", "]"}], "+", 
        RowBox[{
         RowBox[{"Transpose", "[", "Af", "]"}], ".", 
         RowBox[{"S", "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"S", "[", "t", "]"}], ".", "Af"}], "-", 
        RowBox[{"KroneckerProduct", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"S", "[", "t", "]"}], ".", "Bf"}], ",", 
          RowBox[{
           RowBox[{"Transpose", "[", "Bf", "]"}], ".", 
           RowBox[{"S", "[", "t", "]"}]}]}], "]"}]}], "/.", 
       "\[VeryThinSpace]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "\[Rule]", 
          RowBox[{"x1a", "[", 
           RowBox[{"\[Tau]", "-", "t"}], "]"}]}], ",", 
         RowBox[{"xdot", "\[Rule]", 
          RowBox[{"xdot1a", "[", 
           RowBox[{"\[Tau]", "-", "t"}], "]"}]}], ",", 
         RowBox[{"\[Theta]", "\[Rule]", 
          RowBox[{"\[Theta]1a", "[", 
           RowBox[{"\[Tau]", "-", "t"}], "]"}]}], ",", 
         RowBox[{"\[Theta]dot", "\[Rule]", 
          RowBox[{"\[Theta]dot1a", "[", 
           RowBox[{"\[Tau]", "-", "t"}], "]"}]}], ",", 
         RowBox[{"u", "\[Rule]", 
          RowBox[{"u1a", "[", 
           RowBox[{"\[Tau]", "-", "t"}], "]"}]}]}], "}"}]}]}], ";", 
     RowBox[{"sol2", "=", 
      RowBox[{"S", "/.", "\[VeryThinSpace]", 
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             SuperscriptBox["S", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
            RowBox[{"RHS", "[", "t", "]"}]}], ",", 
           RowBox[{
            RowBox[{"S", "[", "0", "]"}], "\[Equal]", "S0"}]}], "}"}], ",", 
         "S", ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}]}], ";", 
     RowBox[{"S", "=", 
      RowBox[{
      "sol2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}]}], 
   "]"}]}], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"CalculateGains2", "[", 
    RowBox[{
    "x1a_", ",", "xdot1a_", ",", "\[Theta]1a_", ",", "\[Theta]dot1a_", ",", 
     "u1a_", ",", "time_", ",", "A_", ",", "\[Tau]_", ",", "sTable_", ",", 
     "nGrid_"}], "]"}], ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "index", ",", "x", ",", "L", ",", "RHS", ",", "xdot", ",", "\[Theta]", 
       ",", "\[Theta]dot", ",", "u", ",", "K", ",", "Af", ",", "Bf", ",", "Q",
        ",", "fx", ",", "xState", ",", "R", ",", "Mf", ",", "x2dot", ",", 
       "\[Theta]2dot", ",", "S0", ",", "sol2", ",", "t"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"xState", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
        "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"x2dot", " ", "=", " ", 
       RowBox[{
        RowBox[{"1", "/", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"A", " ", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
        " ", 
        RowBox[{"(", 
         RowBox[{"u", "+", 
          RowBox[{"A", " ", 
           RowBox[{"\[Theta]dot", "^", "2"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
          RowBox[{"A", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Theta]2dot", "=", " ", 
       RowBox[{
        RowBox[{"1", "/", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"A", " ", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{"u", "+", 
             RowBox[{"A", " ", 
              RowBox[{"\[Theta]dot", "^", "2"}], " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ")"}]}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"fx", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{
        "xdot", ",", "x2dot", ",", "\[Theta]dot", ",", "\[Theta]2dot"}], 
        "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Bf", " ", "=", " ", 
       RowBox[{"D", "[", 
        RowBox[{"fx", ",", "u"}], "]"}]}], " ", ";", 
      RowBox[{"(*", 
       RowBox[{"For", " ", "1", "D", " ", "stuff", " ", "use", " ", "D"}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"index", " ", "=", " ", 
       RowBox[{
        RowBox[{"Round", "[", 
         RowBox[{
          RowBox[{"\[Tau]", " ", "-", " ", "time"}], ",", 
          RowBox[{"\[Tau]", "/", "nGrid"}]}], "]"}], "/", 
        RowBox[{"(", 
         RowBox[{"\[Tau]", "/", "nGrid"}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"K", " ", "=", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Bf", "\[Transpose]"}], ".", 
          RowBox[{"sTable", "[", 
           RowBox[{"[", "index", "]"}], "]"}]}], ")"}], "/.", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "->", " ", 
           RowBox[{"x1a", "[", "time", "]"}]}], ",", " ", 
          RowBox[{"xdot", " ", "->", " ", 
           RowBox[{"xdot1a", "[", "time", "]"}]}], ",", " ", 
          RowBox[{"\[Theta]", " ", "->", 
           RowBox[{"\[Theta]1a", "[", "time", "]"}]}], ",", " ", 
          RowBox[{"\[Theta]dot", " ", "->", " ", 
           RowBox[{"\[Theta]dot1a", "[", "time", "]"}]}], ",", " ", 
          RowBox[{"u", " ", "->", " ", 
           RowBox[{"u1a", "[", "time", "]"}]}]}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", "K"}]}], "\n", "]"}]}],
  FontWeight->"Plain"], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"CalculateGains", "[", 
    RowBox[{
    "x1a_", ",", "xdot1a_", ",", "\[Theta]1a_", ",", "\[Theta]dot1a_", ",", 
     "u1a_", ",", "time_", ",", "A_", ",", "\[Tau]_", ",", "S_"}], "]"}], ":=",
    " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x", ",", "L", ",", "RHS", ",", "xdot", ",", "\[Theta]", ",", 
       "\[Theta]dot", ",", "u", ",", "K", ",", "Af", ",", "Bf", ",", "Q", ",",
        "fx", ",", "xState", ",", "R", ",", "Mf", ",", "x2dot", ",", 
       "\[Theta]2dot", ",", "S0", ",", "sol2", ",", "t"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"xState", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
        "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"x2dot", " ", "=", " ", 
       RowBox[{
        RowBox[{"1", "/", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"A", " ", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
        " ", 
        RowBox[{"(", 
         RowBox[{"u", "+", 
          RowBox[{"A", " ", 
           RowBox[{"\[Theta]dot", "^", "2"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
          RowBox[{"A", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Theta]2dot", "=", " ", 
       RowBox[{
        RowBox[{"1", "/", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"A", " ", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{"u", "+", 
             RowBox[{"A", " ", 
              RowBox[{"\[Theta]dot", "^", "2"}], " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ")"}]}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"fx", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{
        "xdot", ",", "x2dot", ",", "\[Theta]dot", ",", "\[Theta]2dot"}], 
        "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Bf", " ", "=", " ", 
       RowBox[{"D", "[", 
        RowBox[{"fx", ",", "u"}], "]"}]}], " ", ";", 
      RowBox[{"(*", 
       RowBox[{"For", " ", "1", "D", " ", "stuff", " ", "use", " ", "D"}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"K", " ", "=", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Bf", "\[Transpose]"}], ".", 
          RowBox[{"S", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "time"}], "]"}]}], ")"}], "/.", 
        " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "->", " ", 
           RowBox[{"x1a", "[", "time", "]"}]}], ",", " ", 
          RowBox[{"xdot", " ", "->", " ", 
           RowBox[{"xdot1a", "[", "time", "]"}]}], ",", " ", 
          RowBox[{"\[Theta]", " ", "->", 
           RowBox[{"\[Theta]1a", "[", "time", "]"}]}], ",", " ", 
          RowBox[{"\[Theta]dot", " ", "->", " ", 
           RowBox[{"\[Theta]dot1a", "[", "time", "]"}]}], ",", " ", 
          RowBox[{"u", " ", "->", " ", 
           RowBox[{"u1a", "[", "time", "]"}]}]}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", "K"}]}], "\n", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ffCartPendulum", "[", 
    RowBox[{
    "ICs_", ",", "n_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "A_", ",", 
     "order_", ",", "maxIter_", ",", "maxError_", ",", "uMax_", ",", 
     "maxCount_", ",", "initGuess_", ",", "maxJ_"}], "]"}], ":=", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "frootNew", ",", "errorNew", ",", "InitGuess", ",", "J", ",", "S", ",", 
       "K", ",", "count", ",", "error", ",", "x", ",", "dist", ",", "xdot", 
       ",", "f", ",", "\[Theta]", ",", "\[Theta]dot", ",", "\[Lambda]1", ",", 
       "\[Lambda]2", ",", "\[Lambda]3", ",", "\[Lambda]4", ",", 
       "\[CapitalDelta]t", ",", "bcs", ",", "eqns", ",", "sv", ",", "froot", 
       ",", "xff", ",", "xdotff", ",", "xff0", ",", "xdotff0", ",", 
       "\[Theta]ff0", ",", "\[Theta]dotff0", ",", "uff0", ",", "\[Theta]ff", 
       ",", "\[Theta]dotff", ",", "uff", ",", "\[Lambda]1ff0", ",", 
       "\[Lambda]2ff0", ",", "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "i", 
       ",", 
       RowBox[{"xGuess", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          SubscriptBox["xGuess", "i"], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}]}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"\[CapitalDelta]t", "=", 
       RowBox[{"\[Tau]", "/", "n"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"{", 
         RowBox[{
         "x_", ",", "xdot_", ",", "\[Theta]_", ",", "\[Theta]dot_", ",", 
          "\[Lambda]1_", ",", "\[Lambda]2_", ",", "\[Lambda]3_", ",", 
          "\[Lambda]4_"}], "}"}], "]"}], ":=", 
       RowBox[{"{", "\n", "\t", 
        RowBox[{"xdot", ",", "\n", "\t", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}],
           " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
               ")"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", "\[Lambda]2"}], 
              ")"}]}], "+", 
            RowBox[{"A", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", "\n", 
         "\t", "\[Theta]dot", ",", "\n", "\t", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}],
           " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{"1", "/", 
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"A", " ", 
                   RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
                 ")"}]}], ")"}]}], 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[Lambda]2"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
              ")"}]}], "-", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "-", 
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", "\n", 
         "\t", "0", ",", "\n", "\t", 
         RowBox[{"-", "\[Lambda]1"}], ",", "\n", "\t", 
         RowBox[{
          FractionBox["1", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"A", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "3"]], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["A", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"A", " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "-", 
               "\[Lambda]4"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "5"]}], "+", 
            RowBox[{
             SuperscriptBox["A", "3"], " ", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
              ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "6"]}], "-", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             SuperscriptBox["A", "2"], " ", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
              ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "4"], " ", 
             RowBox[{"(", 
              RowBox[{"4", "-", "A", "+", 
               RowBox[{"A", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}], "-", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "\[Lambda]2"}], "+", 
               RowBox[{
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}], "+", 
               RowBox[{"3", " ", "\[Lambda]2", " ", "\[Lambda]4", " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"A", " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "-", 
               "\[Lambda]4", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "A", " ", 
                   SuperscriptBox["\[Lambda]2", "2"]}], "+", 
                  SuperscriptBox["\[Lambda]4", "2"]}], ")"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox["A", "2"], " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2", " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], 
            "+", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "3"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", "A", " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "+", 
               RowBox[{"2", " ", "\[Lambda]4"}], "+", 
               RowBox[{
                SuperscriptBox["\[Lambda]4", "2"], " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"2", " ", "A", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"A", " ", 
                   SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], 
                  "-", "\[Lambda]4"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], 
            "+", 
            RowBox[{
             RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[Lambda]2"}], " ", "\[Lambda]4"}], "-", 
               RowBox[{"A", " ", 
                RowBox[{"(", 
                 RowBox[{"\[Lambda]2", "-", 
                  RowBox[{
                   SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
                 ")"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"A", " ", "\[Lambda]4", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]}], 
           ")"}]}], ",", "\n", "\t", 
         RowBox[{
          RowBox[{
           RowBox[{"4", " ", "/", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"A", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A", "-", "2"}],
              ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{"A", " ", "\[Theta]dot", " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}]}], ")"}]}], 
          "-", "\[Lambda]3"}]}], "\n", "}"}]}], ";", 
      StyleBox["\[IndentingNewLine]",
       FontWeight->"Plain"], "\n", 
      RowBox[{"InitGuess", " ", "=", " ", "initGuess"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       StyleBox["xGuess",
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       StyleBox["=",
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       RowBox[{
        StyleBox["Table",
         FontWeight->"Plain"], 
        StyleBox["[",
         FontWeight->"Plain"], 
        RowBox[{
         RowBox[{
          StyleBox["If",
           FontWeight->"Plain"], 
          StyleBox["[",
           FontWeight->"Plain"], 
          RowBox[{
           StyleBox[
            RowBox[{"i", " ", "!=", " ", 
             RowBox[{"-", "1"}]}],
            FontWeight->"Plain"], 
           StyleBox[",",
            FontWeight->"Plain"], 
           RowBox[{
            StyleBox[
             SubscriptBox["xGuess", 
              RowBox[{"i", "+", "1"}]],
             FontWeight->"Plain"], 
            StyleBox[" ",
             FontWeight->"Plain"], 
            StyleBox["=",
             FontWeight->"Plain"], 
            StyleBox[" ",
             FontWeight->"Plain"], 
            RowBox[{
             SubscriptBox[
              StyleBox["xGuess",
               FontWeight->"Plain"], "i"], 
             StyleBox[" ",
              FontWeight->"Plain"], 
             StyleBox["+",
              FontWeight->"Plain"], 
             StyleBox[
              RowBox[{"\[CapitalDelta]t", "*", 
               RowBox[{"f", "[", 
                SubscriptBox["xGuess", "i"], "]"}]}],
              FontWeight->"Plain"]}]}], 
           StyleBox[",",
            FontWeight->"Plain"], 
           RowBox[{
            SubscriptBox[
             StyleBox["xGuess",
              FontWeight->"Plain"], "0"], " ", "=", " ", 
            RowBox[{"{", 
             StyleBox[
              RowBox[{
               RowBox[{"ICs", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "3", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "4", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "3", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "4", "]"}], "]"}]}],
              FontWeight->"Plain"], 
             StyleBox["}",
              FontWeight->"Plain"]}]}]}], 
          StyleBox["]",
           FontWeight->"Plain"]}], 
         StyleBox[",",
          FontWeight->"Plain"], 
         StyleBox[
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"-", "1"}], ",", 
            RowBox[{"n", "-", "1"}]}], "}"}],
          FontWeight->"Plain"]}], 
        StyleBox["]",
         FontWeight->"Plain"]}]}], 
      StyleBox[";",
       FontWeight->"Plain"], "\[IndentingNewLine]", "\n", 
      RowBox[{"bcs", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"x", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"xdot", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"x", ",", " ", "n"}], "]"}], "==", 
          RowBox[{"Subscript", "[", 
           RowBox[{"xdot", ",", " ", "n"}], "]"}], "==", "0"}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]dot", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]dot", ",", " ", "n"}], "]"}], "==", "0"}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]", ",", " ", "n"}], "]"}], "==", "\[Pi]"}]}], 
        "}"}]}], ";", "\n", 
      RowBox[{"eqns", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Join", "[", 
         RowBox[{"bcs", ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Thread", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], "==", 
              "\n", 
              RowBox[{
               RowBox[{
                RowBox[{"1", "/", "2"}], " ", "\[CapitalDelta]t", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"f", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}], "]"}], "+", 
                  "\n", 
                  RowBox[{"f", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], 
                   "]"}]}], ")"}]}], "+", "\n", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Subscript", "[", 
                  RowBox[{"x", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"xdot", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]dot", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]1", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]2", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]3", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]4", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}]}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
        "]"}]}], ";", "\n", "\n", 
      RowBox[{"sv", " ", "=", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", "\n", 
             "\t\t\t\t\t", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "7", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "8", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", "1"}], 
        "]"}]}], ";", "\n", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"time1", ",", "froot"}], "}"}], "=", 
       RowBox[{"Timing", "[", 
        RowBox[{"FindRoot", "[", 
         RowBox[{"eqns", ",", "sv", ",", 
          RowBox[{"MaxIterations", "->", "maxIter"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"error", " ", "=", " ", 
       RowBox[{"Norm", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                SubscriptBox["x", "n"], ",", 
                SubscriptBox["xdot", "n"], ",", 
                SubscriptBox["\[Theta]", "n"], ",", 
                SubscriptBox["\[Theta]dot", "n"]}], "}"}], " ", "-", " ", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], ",", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                SubscriptBox["x", "0"], ",", 
                SubscriptBox["xdot", "0"], ",", 
                SubscriptBox["\[Theta]", "0"], ",", 
                SubscriptBox["\[Theta]dot", "0"]}], "}"}], " ", "-", " ", 
              "ICs"}], ",", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Thread", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   SubscriptBox["x", "i"], ",", 
                   SubscriptBox["xdot", "i"], ",", 
                   SubscriptBox["\[Theta]", "i"], ",", 
                   SubscriptBox["\[Theta]dot", "i"], ",", 
                   SubscriptBox["\[Lambda]1", "i"], ",", 
                   SubscriptBox["\[Lambda]2", "i"], ",", 
                   SubscriptBox["\[Lambda]3", "i"], ",", 
                   SubscriptBox["\[Lambda]4", "i"]}], "}"}], "-", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    FractionBox["1", "2"], " ", "\[CapitalDelta]t", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}], "]"}], "+", 
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "]"}]}], 
                    ")"}]}], "+", 
                   RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}]}], ")"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
           "]"}], "/.", "froot"}], ",", "\"\<Frobenius\>\""}], "]"}]}], ";", 
      "\n", "\[IndentingNewLine]", 
      RowBox[{"count", " ", "=", " ", "0"}], ";", "\n", "\n", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{"\"\<Error First Guess = \>\"", ",", "error"}], "]"}], ";"}],
        "*)"}], "\n", "\n", 
      RowBox[{"uff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}], "^", 
                  "2"}]}]}], ")"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], 
                RowBox[{"Cos", "[", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}]}], "-", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}]}], ")"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"error", " ", ">", " ", "maxError"}], ")"}], " ", "||", 
           " ", 
           RowBox[{"(", 
            RowBox[{"J", " ", ">", " ", "maxJ"}], ")"}]}], ")"}], " ", "&&", 
         " ", 
         RowBox[{"count", " ", "<=", " ", "maxCount"}]}], " ", ",", "\n", 
        RowBox[{
         RowBox[{"InitGuess", " ", "=", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}]}], "}"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          StyleBox["xGuess",
           FontWeight->"Plain"], 
          StyleBox[" ",
           FontWeight->"Plain"], 
          StyleBox["=",
           FontWeight->"Plain"], 
          StyleBox[" ",
           FontWeight->"Plain"], 
          RowBox[{
           StyleBox["Table",
            FontWeight->"Plain"], 
           StyleBox["[",
            FontWeight->"Plain"], 
           RowBox[{
            RowBox[{
             StyleBox["If",
              FontWeight->"Plain"], 
             StyleBox["[",
              FontWeight->"Plain"], 
             RowBox[{
              StyleBox[
               RowBox[{"i", " ", "!=", " ", 
                RowBox[{"-", "1"}]}],
               FontWeight->"Plain"], 
              StyleBox[",",
               FontWeight->"Plain"], 
              RowBox[{
               StyleBox[
                SubscriptBox["xGuess", 
                 RowBox[{"i", "+", "1"}]],
                FontWeight->"Plain"], 
               StyleBox[" ",
                FontWeight->"Plain"], 
               StyleBox["=",
                FontWeight->"Plain"], 
               StyleBox[" ",
                FontWeight->"Plain"], 
               RowBox[{
                SubscriptBox[
                 StyleBox["xGuess",
                  FontWeight->"Plain"], "i"], 
                StyleBox[" ",
                 FontWeight->"Plain"], 
                StyleBox["+",
                 FontWeight->"Plain"], 
                StyleBox[
                 RowBox[{"\[CapitalDelta]t", "*", 
                  RowBox[{"f", "[", 
                   SubscriptBox["xGuess", "i"], "]"}]}],
                 FontWeight->"Plain"]}]}], 
              StyleBox[",",
               FontWeight->"Plain"], 
              RowBox[{
               SubscriptBox[
                StyleBox["xGuess",
                 FontWeight->"Plain"], "0"], " ", "=", " ", 
               RowBox[{"{", 
                StyleBox[
                 RowBox[{
                  RowBox[{"ICs", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", 
                  RowBox[{"ICs", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], ",", 
                  RowBox[{"ICs", "[", 
                   RowBox[{"[", "3", "]"}], "]"}], ",", 
                  RowBox[{"ICs", "[", 
                   RowBox[{"[", "4", "]"}], "]"}], ",", 
                  RowBox[{"InitGuess", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", 
                  RowBox[{"InitGuess", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], ",", 
                  RowBox[{"InitGuess", "[", 
                   RowBox[{"[", "3", "]"}], "]"}], ",", 
                  RowBox[{"InitGuess", "[", 
                   RowBox[{"[", "4", "]"}], "]"}]}],
                 FontWeight->"Plain"], 
                StyleBox["}",
                 FontWeight->"Plain"]}]}]}], 
             StyleBox["]",
              FontWeight->"Plain"]}], 
            StyleBox[",",
             FontWeight->"Plain"], 
            StyleBox[
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"-", "1"}], ",", 
               RowBox[{"n", "-", "1"}]}], "}"}],
             FontWeight->"Plain"]}], 
           StyleBox["]",
            FontWeight->"Plain"]}]}], 
         StyleBox[";",
          FontWeight->"Plain"], "\[IndentingNewLine]", 
         RowBox[{"sv", " ", "=", " ", 
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", "\n", 
                "\t\t\t\t\t", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "7", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "8", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", "1"}], 
           "]"}]}], ";", "\n", "\n", 
         RowBox[{"frootNew", "=", 
          RowBox[{"FindRoot", "[", 
           RowBox[{"eqns", ",", "sv", ",", 
            RowBox[{"MaxIterations", "->", "maxIter"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"errorNew", " ", "=", " ", 
          RowBox[{"Norm", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Flatten", "[", 
              RowBox[{"Join", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   SubscriptBox["x", "n"], ",", 
                   SubscriptBox["xdot", "n"], ",", 
                   SubscriptBox["\[Theta]", "n"], ",", 
                   SubscriptBox["\[Theta]dot", "n"]}], "}"}], " ", "-", " ", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], 
                ",", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   SubscriptBox["x", "0"], ",", 
                   SubscriptBox["xdot", "0"], ",", 
                   SubscriptBox["\[Theta]", "0"], ",", 
                   SubscriptBox["\[Theta]dot", "0"]}], "}"}], " ", "-", " ", 
                 "ICs"}], ",", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"Thread", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[CapitalDelta]t", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}], "]"}], "+", 
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}]}], ")"}]}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}],
               "]"}], "/.", "frootNew"}], ",", "\"\<Frobenius\>\""}], "]"}]}],
          ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"errorNew", " ", "<=", " ", "error"}], ",", 
           RowBox[{
            RowBox[{"froot", " ", "=", " ", "frootNew"}], ";", 
            RowBox[{"error", " ", "=", " ", "errorNew"}], ";", "\n", 
            RowBox[{"uff0", "=", 
             RowBox[{"ListInterpolation", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"1", "/", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"A", " ", 
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}], "^", 
                    "2"}]}]}], ")"}]}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], 
                    RowBox[{"Cos", "[", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}]}], "-", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}]}], ")"}]}], 
                  ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", 
                " ", "froot"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
               RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", 
            "\n", 
            RowBox[{"J", " ", "=", " ", 
             RowBox[{"NIntegrate", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
               RowBox[{"{", 
                RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], 
            ";"}], "\n", ",", "_"}], "]"}], ";", "\n", 
         RowBox[{"count", " ", "=", " ", 
          RowBox[{"count", "+", "1"}]}], ";", "\n", "\n", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<Count Shooting= \>\"", ",", "count", ",", 
           "\"\<    Error New = \>\"", ",", "errorNew", ",", 
           "\"\<    Error Min = \>\"", ",", "error"}], "]"}], ";"}]}], "\n", 
       "\n", "]"}], ";", "\n", "\n", "\n", 
      RowBox[{"xff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"xdotff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Theta]ff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Theta]dotff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]1ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]2ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]3ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]4ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      "\n", 
      RowBox[{"uff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}], "^", 
                  "2"}]}]}], ")"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], 
                RowBox[{"Cos", "[", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}]}], "-", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}]}], ")"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      "\n", 
      RowBox[{
       RowBox[{"xff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xdotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "\[Pi]"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"uff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"uff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"time2", ",", "S"}], "}"}], " ", "=", " ", 
       RowBox[{"Timing", "[", 
        RowBox[{"CalculateSMatrix", "[", 
         RowBox[{
         "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
          "uff", ",", "\[Tau]", ",", "A"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"K", "[", "time_", "]"}], " ", ":=", " ", 
       RowBox[{"CalculateGains", "[", 
        RowBox[{
        "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
         "uff", ",", "time", ",", "A", ",", "\[Tau]", ",", "S"}], "]"}]}], 
      ";", "\n", 
      RowBox[{"{", 
       RowBox[{
       "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
        "uff", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
        "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "J", ",", "K", ",", 
        "time1", ",", "time2"}], "}"}]}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ffCartPendulum2", "[", 
    RowBox[{
    "ICs_", ",", "n_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "A_", ",", 
     "order_", ",", "maxIter_", ",", "maxError_", ",", "uMax_", ",", 
     "maxCount_", ",", "initGuess_", ",", "maxJ_"}], "]"}], ":=", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "nGrid", ",", "sTable", ",", "frootNew", ",", "errorNew", ",", 
       "InitGuess", ",", "J", ",", "S", ",", "K", ",", "count", ",", "error", 
       ",", "x", ",", "dist", ",", "xdot", ",", "f", ",", "\[Theta]", ",", 
       "\[Theta]dot", ",", "\[Lambda]1", ",", "\[Lambda]2", ",", "\[Lambda]3",
        ",", "\[Lambda]4", ",", "\[CapitalDelta]t", ",", "bcs", ",", "eqns", 
       ",", "sv", ",", "froot", ",", "xff", ",", "xdotff", ",", "xff0", ",", 
       "xdotff0", ",", "\[Theta]ff0", ",", "\[Theta]dotff0", ",", "uff0", ",",
        "\[Theta]ff", ",", "\[Theta]dotff", ",", "uff", ",", "\[Lambda]1ff0", 
       ",", "\[Lambda]2ff0", ",", "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", 
       "i", ",", 
       RowBox[{"xGuess", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          SubscriptBox["xGuess", "i"], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}]}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"\[CapitalDelta]t", "=", 
       RowBox[{"\[Tau]", "/", "n"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"{", 
         RowBox[{
         "x_", ",", "xdot_", ",", "\[Theta]_", ",", "\[Theta]dot_", ",", 
          "\[Lambda]1_", ",", "\[Lambda]2_", ",", "\[Lambda]3_", ",", 
          "\[Lambda]4_"}], "}"}], "]"}], ":=", 
       RowBox[{"{", "\n", "\t", 
        RowBox[{"xdot", ",", "\n", "\t", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}],
           " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
               ")"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", "\[Lambda]2"}], 
              ")"}]}], "+", 
            RowBox[{"A", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", "\n", 
         "\t", "\[Theta]dot", ",", "\n", "\t", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}],
           " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{"1", "/", 
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"A", " ", 
                   RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
                 ")"}]}], ")"}]}], 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[Lambda]2"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
              ")"}]}], "-", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "-", 
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", "\n", 
         "\t", "0", ",", "\n", "\t", 
         RowBox[{"-", "\[Lambda]1"}], ",", "\n", "\t", 
         RowBox[{
          FractionBox["1", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"A", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "3"]], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["A", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"A", " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "-", 
               "\[Lambda]4"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "5"]}], "+", 
            RowBox[{
             SuperscriptBox["A", "3"], " ", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
              ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "6"]}], "-", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             SuperscriptBox["A", "2"], " ", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
              ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "4"], " ", 
             RowBox[{"(", 
              RowBox[{"4", "-", "A", "+", 
               RowBox[{"A", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}], "-", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "\[Lambda]2"}], "+", 
               RowBox[{
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}], "+", 
               RowBox[{"3", " ", "\[Lambda]2", " ", "\[Lambda]4", " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"A", " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "-", 
               "\[Lambda]4", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "A", " ", 
                   SuperscriptBox["\[Lambda]2", "2"]}], "+", 
                  SuperscriptBox["\[Lambda]4", "2"]}], ")"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox["A", "2"], " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2", " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], 
            "+", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "3"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", "A", " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "+", 
               RowBox[{"2", " ", "\[Lambda]4"}], "+", 
               RowBox[{
                SuperscriptBox["\[Lambda]4", "2"], " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"2", " ", "A", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"A", " ", 
                   SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], 
                  "-", "\[Lambda]4"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], 
            "+", 
            RowBox[{
             RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[Lambda]2"}], " ", "\[Lambda]4"}], "-", 
               RowBox[{"A", " ", 
                RowBox[{"(", 
                 RowBox[{"\[Lambda]2", "-", 
                  RowBox[{
                   SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
                 ")"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"A", " ", "\[Lambda]4", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]}], 
           ")"}]}], ",", "\n", "\t", 
         RowBox[{
          RowBox[{
           RowBox[{"4", " ", "/", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"A", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A", "-", "2"}],
              ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{"A", " ", "\[Theta]dot", " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}]}], ")"}]}], 
          "-", "\[Lambda]3"}]}], "\n", "}"}]}], ";", 
      StyleBox["\[IndentingNewLine]",
       FontWeight->"Plain"], "\n", 
      RowBox[{"InitGuess", " ", "=", " ", "initGuess"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       StyleBox["xGuess",
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       StyleBox["=",
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       RowBox[{
        StyleBox["Table",
         FontWeight->"Plain"], 
        StyleBox["[",
         FontWeight->"Plain"], 
        RowBox[{
         RowBox[{
          StyleBox["If",
           FontWeight->"Plain"], 
          StyleBox["[",
           FontWeight->"Plain"], 
          RowBox[{
           StyleBox[
            RowBox[{"i", " ", "!=", " ", 
             RowBox[{"-", "1"}]}],
            FontWeight->"Plain"], 
           StyleBox[",",
            FontWeight->"Plain"], 
           RowBox[{
            StyleBox[
             SubscriptBox["xGuess", 
              RowBox[{"i", "+", "1"}]],
             FontWeight->"Plain"], 
            StyleBox[" ",
             FontWeight->"Plain"], 
            StyleBox["=",
             FontWeight->"Plain"], 
            StyleBox[" ",
             FontWeight->"Plain"], 
            RowBox[{
             SubscriptBox[
              StyleBox["xGuess",
               FontWeight->"Plain"], "i"], 
             StyleBox[" ",
              FontWeight->"Plain"], 
             StyleBox["+",
              FontWeight->"Plain"], 
             StyleBox[
              RowBox[{"\[CapitalDelta]t", "*", 
               RowBox[{"f", "[", 
                SubscriptBox["xGuess", "i"], "]"}]}],
              FontWeight->"Plain"]}]}], 
           StyleBox[",",
            FontWeight->"Plain"], 
           RowBox[{
            SubscriptBox[
             StyleBox["xGuess",
              FontWeight->"Plain"], "0"], " ", "=", " ", 
            RowBox[{"{", 
             StyleBox[
              RowBox[{
               RowBox[{"ICs", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "3", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "4", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "3", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "4", "]"}], "]"}]}],
              FontWeight->"Plain"], 
             StyleBox["}",
              FontWeight->"Plain"]}]}]}], 
          StyleBox["]",
           FontWeight->"Plain"]}], 
         StyleBox[",",
          FontWeight->"Plain"], 
         StyleBox[
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"-", "1"}], ",", 
            RowBox[{"n", "-", "1"}]}], "}"}],
          FontWeight->"Plain"]}], 
        StyleBox["]",
         FontWeight->"Plain"]}]}], 
      StyleBox[";",
       FontWeight->"Plain"], "\[IndentingNewLine]", "\n", 
      RowBox[{"bcs", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"x", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"xdot", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"x", ",", " ", "n"}], "]"}], "==", 
          RowBox[{"Subscript", "[", 
           RowBox[{"xdot", ",", " ", "n"}], "]"}], "==", "0"}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]dot", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]dot", ",", " ", "n"}], "]"}], "==", "0"}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]", ",", " ", "n"}], "]"}], "==", "\[Pi]"}]}], 
        "}"}]}], ";", "\n", 
      RowBox[{"eqns", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Join", "[", 
         RowBox[{"bcs", ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Thread", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], "==", 
              "\n", 
              RowBox[{
               RowBox[{
                RowBox[{"1", "/", "2"}], " ", "\[CapitalDelta]t", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"f", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}], "]"}], "+", 
                  "\n", 
                  RowBox[{"f", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], 
                   "]"}]}], ")"}]}], "+", "\n", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Subscript", "[", 
                  RowBox[{"x", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"xdot", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]dot", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]1", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]2", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]3", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]4", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}]}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
        "]"}]}], ";", "\n", "\n", 
      RowBox[{"sv", " ", "=", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", "\n", 
             "\t\t\t\t\t", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "7", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "8", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", "1"}], 
        "]"}]}], ";", "\n", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"time1", ",", "froot"}], "}"}], "=", 
       RowBox[{"Timing", "[", 
        RowBox[{"FindRoot", "[", 
         RowBox[{"eqns", ",", "sv", ",", 
          RowBox[{"MaxIterations", "->", "maxIter"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"error", " ", "=", " ", 
       RowBox[{"Norm", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                SubscriptBox["x", "n"], ",", 
                SubscriptBox["xdot", "n"], ",", 
                SubscriptBox["\[Theta]", "n"], ",", 
                SubscriptBox["\[Theta]dot", "n"]}], "}"}], " ", "-", " ", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], ",", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                SubscriptBox["x", "0"], ",", 
                SubscriptBox["xdot", "0"], ",", 
                SubscriptBox["\[Theta]", "0"], ",", 
                SubscriptBox["\[Theta]dot", "0"]}], "}"}], " ", "-", " ", 
              "ICs"}], ",", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Thread", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   SubscriptBox["x", "i"], ",", 
                   SubscriptBox["xdot", "i"], ",", 
                   SubscriptBox["\[Theta]", "i"], ",", 
                   SubscriptBox["\[Theta]dot", "i"], ",", 
                   SubscriptBox["\[Lambda]1", "i"], ",", 
                   SubscriptBox["\[Lambda]2", "i"], ",", 
                   SubscriptBox["\[Lambda]3", "i"], ",", 
                   SubscriptBox["\[Lambda]4", "i"]}], "}"}], "-", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    FractionBox["1", "2"], " ", "\[CapitalDelta]t", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}], "]"}], "+", 
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "]"}]}], 
                    ")"}]}], "+", 
                   RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}]}], ")"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
           "]"}], "/.", "froot"}], ",", "\"\<Frobenius\>\""}], "]"}]}], ";", 
      "\n", "\[IndentingNewLine]", 
      RowBox[{"count", " ", "=", " ", "0"}], ";", "\n", "\n", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{"\"\<Error First Guess = \>\"", ",", "error"}], "]"}], ";"}],
        "*)"}], "\n", "\n", 
      RowBox[{"uff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}], "^", 
                  "2"}]}]}], ")"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], 
                RowBox[{"Cos", "[", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}]}], "-", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}]}], ")"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"error", " ", ">", " ", "maxError"}], ")"}], " ", "||", 
           " ", 
           RowBox[{"(", 
            RowBox[{"J", " ", ">", " ", "maxJ"}], ")"}]}], ")"}], " ", "&&", 
         " ", 
         RowBox[{"count", " ", "<=", " ", "maxCount"}]}], " ", ",", "\n", 
        RowBox[{
         RowBox[{"InitGuess", " ", "=", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}]}], "}"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          StyleBox["xGuess",
           FontWeight->"Plain"], 
          StyleBox[" ",
           FontWeight->"Plain"], 
          StyleBox["=",
           FontWeight->"Plain"], 
          StyleBox[" ",
           FontWeight->"Plain"], 
          RowBox[{
           StyleBox["Table",
            FontWeight->"Plain"], 
           StyleBox["[",
            FontWeight->"Plain"], 
           RowBox[{
            RowBox[{
             StyleBox["If",
              FontWeight->"Plain"], 
             StyleBox["[",
              FontWeight->"Plain"], 
             RowBox[{
              StyleBox[
               RowBox[{"i", " ", "!=", " ", 
                RowBox[{"-", "1"}]}],
               FontWeight->"Plain"], 
              StyleBox[",",
               FontWeight->"Plain"], 
              RowBox[{
               StyleBox[
                SubscriptBox["xGuess", 
                 RowBox[{"i", "+", "1"}]],
                FontWeight->"Plain"], 
               StyleBox[" ",
                FontWeight->"Plain"], 
               StyleBox["=",
                FontWeight->"Plain"], 
               StyleBox[" ",
                FontWeight->"Plain"], 
               RowBox[{
                SubscriptBox[
                 StyleBox["xGuess",
                  FontWeight->"Plain"], "i"], 
                StyleBox[" ",
                 FontWeight->"Plain"], 
                StyleBox["+",
                 FontWeight->"Plain"], 
                StyleBox[
                 RowBox[{"\[CapitalDelta]t", "*", 
                  RowBox[{"f", "[", 
                   SubscriptBox["xGuess", "i"], "]"}]}],
                 FontWeight->"Plain"]}]}], 
              StyleBox[",",
               FontWeight->"Plain"], 
              RowBox[{
               SubscriptBox[
                StyleBox["xGuess",
                 FontWeight->"Plain"], "0"], " ", "=", " ", 
               RowBox[{"{", 
                StyleBox[
                 RowBox[{
                  RowBox[{"ICs", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", 
                  RowBox[{"ICs", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], ",", 
                  RowBox[{"ICs", "[", 
                   RowBox[{"[", "3", "]"}], "]"}], ",", 
                  RowBox[{"ICs", "[", 
                   RowBox[{"[", "4", "]"}], "]"}], ",", 
                  RowBox[{"InitGuess", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", 
                  RowBox[{"InitGuess", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], ",", 
                  RowBox[{"InitGuess", "[", 
                   RowBox[{"[", "3", "]"}], "]"}], ",", 
                  RowBox[{"InitGuess", "[", 
                   RowBox[{"[", "4", "]"}], "]"}]}],
                 FontWeight->"Plain"], 
                StyleBox["}",
                 FontWeight->"Plain"]}]}]}], 
             StyleBox["]",
              FontWeight->"Plain"]}], 
            StyleBox[",",
             FontWeight->"Plain"], 
            StyleBox[
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"-", "1"}], ",", 
               RowBox[{"n", "-", "1"}]}], "}"}],
             FontWeight->"Plain"]}], 
           StyleBox["]",
            FontWeight->"Plain"]}]}], 
         StyleBox[";",
          FontWeight->"Plain"], "\[IndentingNewLine]", 
         RowBox[{"sv", " ", "=", " ", 
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", "\n", 
                "\t\t\t\t\t", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "7", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "8", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", "1"}], 
           "]"}]}], ";", "\n", "\n", 
         RowBox[{"frootNew", "=", 
          RowBox[{"FindRoot", "[", 
           RowBox[{"eqns", ",", "sv", ",", 
            RowBox[{"MaxIterations", "->", "maxIter"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"errorNew", " ", "=", " ", 
          RowBox[{"Norm", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Flatten", "[", 
              RowBox[{"Join", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   SubscriptBox["x", "n"], ",", 
                   SubscriptBox["xdot", "n"], ",", 
                   SubscriptBox["\[Theta]", "n"], ",", 
                   SubscriptBox["\[Theta]dot", "n"]}], "}"}], " ", "-", " ", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], 
                ",", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   SubscriptBox["x", "0"], ",", 
                   SubscriptBox["xdot", "0"], ",", 
                   SubscriptBox["\[Theta]", "0"], ",", 
                   SubscriptBox["\[Theta]dot", "0"]}], "}"}], " ", "-", " ", 
                 "ICs"}], ",", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"Thread", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[CapitalDelta]t", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}], "]"}], "+", 
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}]}], ")"}]}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}],
               "]"}], "/.", "frootNew"}], ",", "\"\<Frobenius\>\""}], "]"}]}],
          ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"errorNew", " ", "<=", " ", "error"}], ",", 
           RowBox[{
            RowBox[{"froot", " ", "=", " ", "frootNew"}], ";", 
            RowBox[{"error", " ", "=", " ", "errorNew"}], ";", "\n", 
            RowBox[{"uff0", "=", 
             RowBox[{"ListInterpolation", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"1", "/", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"A", " ", 
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}], "^", 
                    "2"}]}]}], ")"}]}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], 
                    RowBox[{"Cos", "[", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}]}], "-", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}]}], ")"}]}], 
                  ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", 
                " ", "froot"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
               RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", 
            "\n", 
            RowBox[{"J", " ", "=", " ", 
             RowBox[{"NIntegrate", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
               RowBox[{"{", 
                RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], 
            ";"}], "\n", ",", "_"}], "]"}], ";", "\n", 
         RowBox[{"count", " ", "=", " ", 
          RowBox[{"count", "+", "1"}]}], ";", "\n", "\n", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<Count Shooting= \>\"", ",", "count", ",", 
           "\"\<    Error New = \>\"", ",", "errorNew", ",", 
           "\"\<    Error Min = \>\"", ",", "error"}], "]"}], ";"}]}], "\n", 
       "\n", "]"}], ";", "\n", "\n", "\n", 
      RowBox[{"xff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"xdotff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Theta]ff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Theta]dotff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]1ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]2ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]3ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]4ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      "\n", 
      RowBox[{"uff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}], "^", 
                  "2"}]}]}], ")"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], 
                RowBox[{"Cos", "[", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}]}], "-", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}]}], ")"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      "\n", 
      RowBox[{
       RowBox[{"xff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xdotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "\[Pi]"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"uff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"uff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n",
       "\n", 
      StyleBox[
       RowBox[{"nGrid", " ", "=", " ", "20"}],
       FontWeight->"Plain"], 
      StyleBox[";",
       FontWeight->"Plain"], 
      StyleBox["\[IndentingNewLine]",
       FontWeight->"Plain"], 
      StyleBox[
       RowBox[{
        RowBox[{"{", 
         RowBox[{"S", ",", "sTable", ",", "time1", ",", "time2"}], "}"}], " ",
         "=", " ", 
        RowBox[{"CalculateSMatrix2", "[", 
         RowBox[{
         "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
          "uff", ",", "\[Tau]", ",", "A", ",", "nGrid"}], "]"}]}],
       FontWeight->"Plain"], 
      StyleBox[";",
       FontWeight->"Plain"], 
      StyleBox["\[IndentingNewLine]",
       FontWeight->"Plain"], 
      StyleBox[
       RowBox[{"Print", "[", 
        RowBox[{"\"\<NDSolve Computation Time = \>\"", ",", "time1"}], "]"}],
       FontWeight->"Plain"], 
      StyleBox[";",
       FontWeight->"Plain"], 
      StyleBox["\[IndentingNewLine]",
       FontWeight->"Plain"], 
      StyleBox[
       RowBox[{"Print", "[", 
        RowBox[{
        "\"\<Numerical Integrator Computation Time = \>\"", ",", "time2"}], 
        "]"}],
       FontWeight->"Plain"], 
      StyleBox[";",
       FontWeight->"Plain"], 
      StyleBox["\[IndentingNewLine]",
       FontWeight->"Plain"], 
      StyleBox[
       RowBox[{
        RowBox[{"K", "[", "time_", "]"}], " ", ":=", " ", 
        RowBox[{"CalculateGains2", "[", 
         RowBox[{
         "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
          "uff", ",", "time", ",", "A", ",", "\[Tau]", ",", "sTable", ",", 
          "nGrid"}], "]"}]}],
       FontWeight->"Plain"], 
      StyleBox[";",
       FontWeight->"Plain"], 
      StyleBox["\n",
       FontWeight->"Plain"], "\n", 
      RowBox[{"{", 
       RowBox[{
       "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
        "uff", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
        "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "J", ",", "K"}], 
       "}"}]}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"testSwingUp", "[", 
    RowBox[{
    "ICs_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "uff0_", ",", "A_"}], "]"}],
    ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eq", ",", "init", ",", "x", ",", "xdot", ",", "\[Theta]", ",", 
       "\[Theta]dot", ",", "xs", ",", "xdots", ",", "\[Theta]s", ",", 
       "\[Theta]dots", ",", "t", ",", "J"}], "}"}], ",", "\n", 
     RowBox[{
      RowBox[{"eq", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"x", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"xdot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"xdot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"uff0", "[", "t", "]"}], "+", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
             RowBox[{"A", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]dot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"uff0", "[", "t", "]"}], "+", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
            ")"}]}]}]}], "}"}]}], ";", "\n", 
      RowBox[{"init", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"xdot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]dot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
        "}"}], "=", 
       RowBox[{"NDSolveValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"eq", ",", "init"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
         RowBox[{"Method", "->", 
          RowBox[{"{", 
           RowBox[{"\"\<DiscontinuityProcessing\>\"", "->", "None"}], 
           "}"}]}]}], "]"}]}], ";", "\n", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"{", 
       RowBox[{
       "xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots", ",", "uff0",
         ",", "J"}], "}"}]}]}], "]"}]}], "\n", "\n", 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"testWithFB", "[", 
    RowBox[{
    "ICs_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "xff0_", ",", "xdotff0_", 
     ",", "\[Theta]ff0_", ",", "\[Theta]dotff0_", ",", "uff0_", ",", "A_", 
     ",", "K_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eq", ",", "init", ",", "\[Theta]", ",", "\[Theta]dot", ",", 
       "\[Theta]ff", ",", "\[Theta]dotff", ",", "x", ",", "xdot", ",", "xff", 
       ",", "xdotff", ",", "uff", ",", "t", ",", "\[Kappa]1", ",", 
       "\[Kappa]2", ",", "\[Kappa]3", ",", "\[Kappa]4", ",", "ufb", ",", "u", 
       ",", "\[Theta]s", ",", "\[Theta]dots", ",", "xs", ",", "xdots", ",", 
       "us", ",", "J"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Kappa]1", "=", 
       RowBox[{"\[Kappa]2", "=", "3"}]}], ";", "  ", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"lqr", " ", "for", " ", "q"}], "=", 
        RowBox[{"r", " ", "for", " ", "balancing", " ", "pendulum"}]}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"\[Kappa]3", " ", "=", " ", 
       RowBox[{"-", "0.1"}]}], ";", 
      RowBox[{"\[Kappa]4", " ", "=", " ", 
       RowBox[{"-", "0.65"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"xff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xdotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "\[Pi]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"uff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"uff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ufb", "[", "t_", "]"}], " ", ":=", " ", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"K", "[", "t", "]"}], ".", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"xff", "[", "t", "]"}], "-", 
                RowBox[{"x", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"xdotff", "[", "t", "]"}], "-", 
                RowBox[{"xdot", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]dot", "[", "t", "]"}]}]}], "}"}]}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         RowBox[{
          RowBox[{"\[Kappa]1", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]3", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"xff", "[", "t", "]"}], "-", 
             RowBox[{"x", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"xdotff", "[", "t", "]"}], "-", 
             RowBox[{"xdot", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}], ";", 
      "\n", 
      RowBox[{
       RowBox[{"u", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{"uff", "[", "t", "]"}], "+", 
        RowBox[{"ufb", "[", "t", "]"}]}]}], ";", "\n", "\n", 
      RowBox[{"eq", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"x", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"xdot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"xdot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"u", "[", "t", "]"}], "+", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
             RowBox[{"A", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]dot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"u", "[", "t", "]"}], "+", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
            ")"}]}]}]}], "}"}]}], ";", "\n", "\n", 
      RowBox[{"init", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"xdot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]dot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}], ";", "\n", "\n", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
        "}"}], "=", 
       RowBox[{"NDSolveValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"eq", ",", "init"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
         RowBox[{"Method", "->", 
          RowBox[{"{", 
           RowBox[{"\"\<DiscontinuityProcessing\>\"", "->", "None"}], 
           "}"}]}]}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"us", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{"uff", "[", "t", "]"}], "+", 
        RowBox[{"Piecewise", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"K", "[", "t", "]"}], ".", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"xff", "[", "t", "]"}], "-", 
                 RowBox[{"xs", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"xdotff", "[", "t", "]"}], "-", 
                 RowBox[{"xdots", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                 RowBox[{"\[Theta]s", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                 RowBox[{"\[Theta]dots", "[", "t", "]"}]}]}], "}"}]}], ",", 
             RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
          RowBox[{
           RowBox[{"\[Kappa]1", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]s", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]dots", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]3", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"xff", "[", "t", "]"}], "-", 
              RowBox[{"xs", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]4", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"xdotff", "[", "t", "]"}], "-", 
              RowBox[{"xdots", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"us", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"{", 
       RowBox[{
       "xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots", ",", "us", 
        ",", "J"}], "}"}]}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"testWithFBClipped", "[", 
   RowBox[{
   "ICs_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "xff0_", ",", "xdotff0_", 
    ",", "\[Theta]ff0_", ",", "\[Theta]dotff0_", ",", "uff0_", ",", "A_", ",",
     "uBound_", ",", "K_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "eq", ",", "init", ",", "\[Theta]", ",", "\[Theta]dot", ",", 
      "\[Theta]ff", ",", "\[Theta]dotff", ",", "x", ",", "xdot", ",", "xff", 
      ",", "xdotff", ",", "uff", ",", "t", ",", "\[Kappa]1", ",", "\[Kappa]2",
       ",", "\[Kappa]3", ",", "\[Kappa]4", ",", "ufb", ",", "u", ",", 
      "\[Theta]s", ",", "\[Theta]dots", ",", "xs", ",", "xdots", ",", "us", 
      ",", "J"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Kappa]1", "=", 
      RowBox[{"\[Kappa]2", "=", "3"}]}], ";", "  ", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"lqr", " ", "for", " ", "q"}], "=", 
       RowBox[{"r", " ", "for", " ", "balancing", " ", "pendulum"}]}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\[Kappa]3", " ", "=", " ", 
      RowBox[{"-", "0.1"}]}], ";", 
     RowBox[{"\[Kappa]4", " ", "=", " ", 
      RowBox[{"-", "0.65"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"xff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xdotff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "\[Pi]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"uff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"uff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ufb", "[", "t_", "]"}], " ", ":=", " ", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"K", "[", "t", "]"}], ".", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"xff", "[", "t", "]"}], "-", 
               RowBox[{"x", "[", "t", "]"}]}], ",", 
              RowBox[{
               RowBox[{"xdotff", "[", "t", "]"}], "-", 
               RowBox[{"xdot", "[", "t", "]"}]}], ",", 
              RowBox[{
               RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]", "[", "t", "]"}]}], ",", 
              RowBox[{
               RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]dot", "[", "t", "]"}]}]}], "}"}]}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        RowBox[{
         RowBox[{"\[Kappa]1", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
            RowBox[{"\[Theta]", "[", "t", "]"}]}], ")"}]}], "+", 
         RowBox[{"\[Kappa]2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
            RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ")"}]}], "+", 
         RowBox[{"\[Kappa]3", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"xff", "[", "t", "]"}], "-", 
            RowBox[{"x", "[", "t", "]"}]}], ")"}]}], "+", 
         RowBox[{"\[Kappa]4", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"xdotff", "[", "t", "]"}], "-", 
            RowBox[{"xdot", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}], ";", 
     "\n", 
     RowBox[{
      RowBox[{"u", "[", "t_", "]"}], ":=", " ", 
      RowBox[{"Clip", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"uff", "[", "t", "]"}], "+", 
         RowBox[{"ufb", "[", "t", "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "uBound"}], ",", "uBound"}], "}"}]}], "]"}]}], ";", 
     "\n", "\n", 
     RowBox[{"eq", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"x", "'"}], "[", "t", "]"}], "==", 
         RowBox[{"xdot", "[", "t", "]"}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"xdot", "'"}], "[", "t", "]"}], "==", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
            ")"}]}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"u", "[", "t", "]"}], "+", 
            RowBox[{"A", " ", 
             RowBox[{
              RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
            RowBox[{"A", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "==", 
         RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Theta]dot", "'"}], "[", "t", "]"}], "==", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
            ")"}]}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"u", "[", "t", "]"}], "+", 
               RowBox[{"A", " ", 
                RowBox[{
                 RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
           ")"}]}]}]}], "}"}]}], ";", "\n", "\n", 
     RowBox[{"init", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "[", "0", "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"xdot", "[", "0", "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"\[Theta]", "[", "0", "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"\[Theta]dot", "[", "0", "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}], ";", "\n", "\n", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
       "}"}], "=", 
      RowBox[{"NDSolveValue", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"eq", ",", "init"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
        RowBox[{"Method", "->", 
         RowBox[{"{", 
          RowBox[{"\"\<DiscontinuityProcessing\>\"", "->", "None"}], 
          "}"}]}]}], "]"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"us", "[", "t_", "]"}], ":=", 
      RowBox[{"Clip", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"uff", "[", "t", "]"}], "+", 
         RowBox[{"Piecewise", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"K", "[", "t", "]"}], ".", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"xff", "[", "t", "]"}], "-", 
                  RowBox[{"xs", "[", "t", "]"}]}], ",", 
                 RowBox[{
                  RowBox[{"xdotff", "[", "t", "]"}], "-", 
                  RowBox[{"xdots", "[", "t", "]"}]}], ",", 
                 RowBox[{
                  RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]s", "[", "t", "]"}]}], ",", 
                 RowBox[{
                  RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]dots", "[", "t", "]"}]}]}], "}"}]}], ",", 
              RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
           RowBox[{
            RowBox[{"\[Kappa]1", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]s", "[", "t", "]"}]}], ")"}]}], "+", 
            RowBox[{"\[Kappa]2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]dots", "[", "t", "]"}]}], ")"}]}], "+", 
            RowBox[{"\[Kappa]3", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"xff", "[", "t", "]"}], "-", 
               RowBox[{"xs", "[", "t", "]"}]}], ")"}]}], "+", 
            RowBox[{"\[Kappa]4", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"xdotff", "[", "t", "]"}], "-", 
               RowBox[{"xdots", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "uBound"}], ",", "uBound"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\n", "\n", 
     RowBox[{"J", " ", "=", " ", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"us", "[", "t", "]"}], "^", "2"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
     RowBox[{"{", 
      RowBox[{
      "xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots", ",", "us", 
       ",", "J"}], "}"}]}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Energy", "[", 
    RowBox[{"{", 
     RowBox[{
     "x1_", ",", "x2_", ",", "\[Theta]1_", ",", "\[Theta]2_", ",", "A_"}], 
     "}"}], "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"1", "/", "2"}], "*", 
     RowBox[{"x2", "^", "2"}]}], " ", "+", " ", 
    RowBox[{
     RowBox[{"1", "/", "2"}], "*", "A", "*", 
     RowBox[{"\[Theta]2", "^", "2"}]}], " ", "+", " ", 
    RowBox[{"A", "*", 
     RowBox[{"Cos", "[", "\[Theta]1", "]"}], "*", "x2", "*", "\[Theta]2"}], 
    " ", "-", " ", 
    RowBox[{"A", "*", 
     RowBox[{"Cos", "[", "\[Theta]1", "]"}]}]}]}], ";"}], "\n"}], "Code",
 CellChangeTimes->{{3.862753343189165*^9, 3.862753411389415*^9}, {
   3.8627553611496043`*^9, 3.8627553647834463`*^9}, {3.862755542386807*^9, 
   3.862755582254092*^9}, {3.862756179429644*^9, 3.8627562078485813`*^9}, 
   3.8627563320549693`*^9, {3.8627564690202875`*^9, 3.8627565488258357`*^9}, {
   3.8627568793814173`*^9, 3.8627568873778677`*^9}, 3.8627585165043135`*^9, {
   3.8627585965107956`*^9, 3.862758689290209*^9}, {3.862758834699833*^9, 
   3.8627588555911727`*^9}, {3.8627590963373947`*^9, 
   3.8627590998392787`*^9}, {3.8627594410134716`*^9, 
   3.8627594626865597`*^9}, {3.862759635094576*^9, 3.8627596377257366`*^9}, {
   3.862759669455618*^9, 3.8627597448635693`*^9}, 3.862759795914287*^9, {
   3.8627603319473376`*^9, 3.862760490473783*^9}, {3.8627605307139487`*^9, 
   3.862760536806006*^9}, {3.8627610047197795`*^9, 3.8627610478400292`*^9}, {
   3.8627611285982723`*^9, 3.862761147921111*^9}, {3.8631982964294224`*^9, 
   3.8631982970332265`*^9}, 3.8631983363504767`*^9, {3.863208693665881*^9, 
   3.8632086943846474`*^9}, 3.863210007245922*^9, 3.863271804426487*^9, {
   3.8632718412836447`*^9, 3.8632718583741503`*^9}, {3.8632719591337743`*^9, 
   3.863271959351703*^9}, {3.863272049174841*^9, 3.863272070205083*^9}, {
   3.863272113471178*^9, 3.863272123024109*^9}, 3.8632747752128673`*^9, {
   3.863274857845314*^9, 3.863274901443305*^9}, 3.863274985905165*^9, {
   3.86327502591031*^9, 3.8632751590365314`*^9}, {3.8632751952308993`*^9, 
   3.863275233662552*^9}, {3.8632753992893295`*^9, 3.863275415841012*^9}, 
   3.8632757933676972`*^9, 3.863276112914017*^9, {3.8632763683199444`*^9, 
   3.8632763983313017`*^9}, {3.8632764721665745`*^9, 3.863276525061578*^9}, {
   3.863278235705888*^9, 3.8632782777863655`*^9}, {3.863278324944213*^9, 
   3.8632783286160316`*^9}, {3.863552728717914*^9, 3.8635527298355513`*^9}, {
   3.863613419658352*^9, 3.863613423534114*^9}, {3.8636150904008484`*^9, 
   3.86361513154671*^9}, {3.8636152078133564`*^9, 3.8636152525520706`*^9}, {
   3.8636152893383236`*^9, 3.863615479516596*^9}, 3.8636157247782784`*^9, {
   3.863615879717803*^9, 3.8636159617646036`*^9}, {3.8636160220243616`*^9, 
   3.8636160299278383`*^9}, {3.863616069486206*^9, 3.86361607601912*^9}, {
   3.863699007217822*^9, 3.8636991515617003`*^9}, {3.8636996033223495`*^9, 
   3.8636996129842625`*^9}, {3.8636997844214835`*^9, 3.863699805489752*^9}, {
   3.863699907217247*^9, 3.863699944316393*^9}, {3.863700788168758*^9, 
   3.8637008845809517`*^9}, {3.863702046275758*^9, 3.8637020830100203`*^9}, {
   3.863702595245346*^9, 3.863702645292355*^9}, {3.863884194660141*^9, 
   3.8638842031804175`*^9}, {3.8638909914788537`*^9, 3.863891009810995*^9}, {
   3.863891113237941*^9, 3.8638911537729845`*^9}, {3.863891279619763*^9, 
   3.8638912855948534`*^9}, {3.863891344230113*^9, 3.863891351574766*^9}, {
   3.8638925953132634`*^9, 3.8638925989880886`*^9}, 3.8641412354391413`*^9, {
   3.864141550931038*^9, 3.8641416655529428`*^9}, {3.8642361939817247`*^9, 
   3.864236202546955*^9}, {3.864236595072028*^9, 3.8642366322340117`*^9}, 
   3.864236674617306*^9, {3.8643997929515553`*^9, 3.864399794341104*^9}, 
   3.8647401548354416`*^9, {3.864740367280447*^9, 3.864740382577551*^9}, {
   3.8647404140084915`*^9, 3.8647404181541643`*^9}, {3.864740488606616*^9, 
   3.864740495693348*^9}, {3.8647405289317093`*^9, 3.864740542820265*^9}, {
   3.864741074561078*^9, 3.864741079667444*^9}, {3.864741140307036*^9, 
   3.864741143520008*^9}, 3.8648372672245474`*^9, {3.8648373045645533`*^9, 
   3.864837353847723*^9}, {3.8648373920424533`*^9, 3.8648375909655547`*^9}, 
   3.864837839079855*^9, {3.865356690975731*^9, 3.865356718635888*^9}, {
   3.8653568425522747`*^9, 3.86535688554853*^9}, 3.865356998743344*^9, {
   3.865357063056785*^9, 3.865357082860453*^9}, {3.865357192303467*^9, 
   3.865357202547192*^9}, {3.865357324369248*^9, 3.865357327732173*^9}, 
   3.8653573727697754`*^9, {3.8653584117496357`*^9, 3.865358421880398*^9}, {
   3.865359119417409*^9, 3.865359146498752*^9}, {3.865359181803466*^9, 
   3.865359209189711*^9}, {3.8654491379879255`*^9, 3.8654492290188136`*^9}, {
   3.8659657476182566`*^9, 3.86596576077604*^9}, {3.8659665703366394`*^9, 
   3.865966589562479*^9}, {3.865967298267394*^9, 3.8659673001198*^9}, {
   3.866571893798601*^9, 3.866571940716648*^9}, {3.8665719967138014`*^9, 
   3.86657200493918*^9}, 3.8665721461421776`*^9, {3.8665731331726017`*^9, 
   3.8665731928485823`*^9}, {3.866573291140256*^9, 3.8665733048578844`*^9}, {
   3.866573636752106*^9, 3.866573657335546*^9}, {3.86657481838451*^9, 
   3.8665748273656473`*^9}, {3.866574870351947*^9, 3.8665748910333557`*^9}, {
   3.8665788373566265`*^9, 3.8665788400997524`*^9}, {3.866579031902623*^9, 
   3.8665790413156233`*^9}, {3.8665801062232275`*^9, 3.866580141002143*^9}, {
   3.866664127693946*^9, 3.8666641298202667`*^9}, {3.8667356182927976`*^9, 
   3.86673568611979*^9}, {3.866735735976613*^9, 3.866735746106326*^9}, {
   3.8667357917795067`*^9, 3.8667357922973385`*^9}, {3.8667369179510965`*^9, 
   3.8667371366351404`*^9}, {3.866737410171386*^9, 3.8667375163569317`*^9}, {
   3.866737646330759*^9, 3.8667376465136995`*^9}, {3.8667376988837075`*^9, 
   3.8667377777961025`*^9}, {3.8667386986753044`*^9, 
   3.8667387105614476`*^9}, {3.8667389141044035`*^9, 
   3.8667389332601886`*^9}, {3.8667389783395615`*^9, 
   3.8667389806728044`*^9}, {3.866739043478426*^9, 3.8667390512579017`*^9}, {
   3.8667390870272956`*^9, 3.8667391318757434`*^9}, {3.86674040926027*^9, 
   3.8667404968818393`*^9}, 3.866740531578581*^9, {3.8667406439541187`*^9, 
   3.866740650558975*^9}, {3.8667406893863773`*^9, 3.866740713276625*^9}},
 FontWeight->"Plain",
 CellLabel->"In[1]:=",ExpressionUUID->"3f696a03-1a42-4c5d-a991-badf9523303d"],

Cell[BoxData[
 TemplateBox[{
  "Remove", "rmnsm", 
   "\"There are no symbols matching \\\"\\!\\(\\*RowBox[{\\\"\\\\\\\"Global`*\
\\\\\\\"\\\"}]\\)\\\".\"", 2, 2, 1, 17549072368389752646, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8671629472466583`*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"4ed6fa7a-d776-4cb0-a10a-a7be33ace634"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Remove", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
  RowBox[{"(*", 
   RowBox[{"ICs", " ", "-", " ", 
    RowBox[{"Initial", " ", "Conditions"}]}], " ", "*)"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Error", " ", "while", " ", "cosntraining", " ", "u"}], " ", 
   "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"CalculateSMatrix", "[", 
   RowBox[{
   "x1a_", ",", "xdot1a_", ",", "\[Theta]1a_", ",", "\[Theta]dot1a_", ",", 
    "u1a_", ",", "\[Tau]_", ",", "A_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x", ",", "L", ",", "RHS", ",", "xdot", ",", "\[Theta]", ",", 
      "\[Theta]dot", ",", "u", ",", "K", ",", "S", ",", "soltn", ",", "Af", 
      ",", "Bf", ",", "Q", ",", "fx", ",", "xState", ",", "R", ",", "Mf", ",",
       "x2dot", ",", "\[Theta]2dot", ",", "S0", ",", "sol2", ",", "t"}], 
     "}"}], ",", 
    RowBox[{
     RowBox[{"xState", "=", 
      RowBox[{"{", 
       RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
       "}"}]}], ";", 
     InterpretationBox[
      DynamicModuleBox[{Typeset`open = False}, 
       TemplateBox[{"Expression", 
         RowBox[{"CompoundExpression", "[", 
           DynamicBox[
            FEPrivate`FrontEndResource["FEBitmaps", "IconizeEllipsis"]], 
           "]"}], 
         GridBox[{{
            RowBox[{
              TagBox["\"Byte count: \"", "IconizedLabel"], 
              "\[InvisibleSpace]", 
              TagBox["7064", "IconizedItem"]}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
         Dynamic[Typeset`open]},
        "IconizedObject"]],
      $CellContext`x2dot = ($CellContext`u + ($CellContext`A $CellContext`\
\[Theta]dot^2) 
          Sin[$CellContext`\[Theta]] + ($CellContext`A 
           Cos[$CellContext`\[Theta]]) Sin[$CellContext`\[Theta]])/(
        1 - $CellContext`A 
        Cos[$CellContext`\[Theta]]^2); $CellContext`\[Theta]2dot = (-
          Sin[$CellContext`\[Theta]] - 
         Cos[$CellContext`\[Theta]] ($CellContext`u + ($CellContext`A \
$CellContext`\[Theta]dot^2) Sin[$CellContext`\[Theta]]))/(1 - $CellContext`A 
        Cos[$CellContext`\[Theta]]^2); $CellContext`fx = {$CellContext`xdot, \
$CellContext`x2dot, $CellContext`\[Theta]dot, $CellContext`\[Theta]2dot}; \
$CellContext`L = $CellContext`u^2/2; $CellContext`Af = 
       Grad[$CellContext`fx, $CellContext`xState]; $CellContext`Bf = 
       D[$CellContext`fx, $CellContext`u]; $CellContext`Q = Grad[
         Grad[$CellContext`L, $CellContext`xState], $CellContext`xState]; \
$CellContext`Mf = Grad[
         D[$CellContext`L, $CellContext`u], $CellContext`xState]; \
$CellContext`R = 
       D[$CellContext`L, {$CellContext`u, 2}]; $CellContext`S0 = {{0, 0, 0, 
        0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}}; $CellContext`RHS[
         Pattern[$CellContext`t, 
          Blank[]]] := ReplaceAll[IdentityMatrix[4] + Dot[
           Transpose[$CellContext`Af], 
           $CellContext`S[$CellContext`t]] + Dot[
           $CellContext`S[$CellContext`t], $CellContext`Af] - KroneckerProduct[
          Dot[
           $CellContext`S[$CellContext`t], $CellContext`Bf], 
          Dot[
           Transpose[$CellContext`Bf], 
           $CellContext`S[$CellContext`t]]], {$CellContext`x -> \
$CellContext`x1a[$CellContext`\[Tau] - $CellContext`t], $CellContext`xdot -> \
$CellContext`xdot1a[$CellContext`\[Tau] - $CellContext`t], $CellContext`\
\[Theta] -> $CellContext`\[Theta]1a[$CellContext`\[Tau] - $CellContext`t], \
$CellContext`\[Theta]dot -> $CellContext`\[Theta]dot1a[$CellContext`\[Tau] - \
$CellContext`t], $CellContext`u -> $CellContext`u1a[$CellContext`\[Tau] - \
$CellContext`t]}]; $CellContext`sol2 = ReplaceAll[$CellContext`S, 
         NDSolve[{
          Derivative[
            1][$CellContext`S][$CellContext`t] == \
$CellContext`RHS[$CellContext`t], $CellContext`S[
            0] == $CellContext`S0}, $CellContext`S, {$CellContext`t, 
           0, $CellContext`\[Tau]}]]; $CellContext`S = 
       Part[$CellContext`sol2, 1],
      SelectWithContents->True,
      Selectable->False]}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"CalculateGains", "[", 
   RowBox[{
   "x1a_", ",", "xdot1a_", ",", "\[Theta]1a_", ",", "\[Theta]dot1a_", ",", 
    "u1a_", ",", "time_", ",", "A_", ",", "\[Tau]_", ",", "S_"}], "]"}], ":=",
   " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x", ",", "L", ",", "RHS", ",", "xdot", ",", "\[Theta]", ",", 
      "\[Theta]dot", ",", "u", ",", "K", ",", "Af", ",", "Bf", ",", "Q", ",", 
      "fx", ",", "xState", ",", "R", ",", "Mf", ",", "x2dot", ",", 
      "\[Theta]2dot", ",", "S0", ",", "sol2", ",", "t"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    InterpretationBox[
     DynamicModuleBox[{Typeset`open = False}, 
      TemplateBox[{"Expression", 
        RowBox[{"CompoundExpression", "[", 
          DynamicBox[
           FEPrivate`FrontEndResource["FEBitmaps", "IconizeEllipsis"]], "]"}], 
        GridBox[{{
           RowBox[{
             TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
             TagBox["3608", "IconizedItem"]}]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
        Dynamic[Typeset`open]},
       "IconizedObject"]],
     $CellContext`xState = {$CellContext`x, $CellContext`xdot, $CellContext`\
\[Theta], $CellContext`\[Theta]dot}; $CellContext`x2dot = (1/(
        1 - $CellContext`A 
        Cos[$CellContext`\[Theta]]^2)) ($CellContext`u + ($CellContext`A \
$CellContext`\[Theta]dot^2) 
         Sin[$CellContext`\[Theta]] + ($CellContext`A 
          Cos[$CellContext`\[Theta]]) 
         Sin[$CellContext`\[Theta]]); $CellContext`\[Theta]2dot = (1/(
        1 - $CellContext`A 
        Cos[$CellContext`\[Theta]]^2)) (-Sin[$CellContext`\[Theta]] - 
        Cos[$CellContext`\[Theta]] ($CellContext`u + ($CellContext`A \
$CellContext`\[Theta]dot^2) 
          Sin[$CellContext`\[Theta]])); $CellContext`fx = {$CellContext`xdot, \
$CellContext`x2dot, $CellContext`\[Theta]dot, $CellContext`\[Theta]2dot}; \
$CellContext`Bf = D[$CellContext`fx, $CellContext`u]; K = ReplaceAll[
        Dot[
         Transpose[$CellContext`Bf], 
         $CellContext`S[$CellContext`\[Tau] - $CellContext`time]], \
{$CellContext`x -> $CellContext`x1a[$CellContext`time], $CellContext`xdot -> \
$CellContext`xdot1a[$CellContext`time], $CellContext`\[Theta] -> \
$CellContext`\[Theta]1a[$CellContext`time], $CellContext`\[Theta]dot -> \
$CellContext`\[Theta]dot1a[$CellContext`time], $CellContext`u -> \
$CellContext`u1a[$CellContext`time]}]; K,
     SelectWithContents->True,
     Selectable->False]}], "\n", "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ffCartPendulum", "[", 
    RowBox[{
    "ICs_", ",", "n_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "A_", ",", 
     "order_", ",", "maxIter_", ",", "maxError_", ",", "maxCount_", ",", 
     "maxJ_", ",", "initGuess_"}], "]"}], ":=", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "InitGuess", ",", "J", ",", "S", ",", "K", ",", "count", ",", "error", 
       ",", "x", ",", "dist", ",", "xdot", ",", "f", ",", "\[Theta]", ",", 
       "\[Theta]dot", ",", "\[Lambda]1", ",", "\[Lambda]2", ",", "\[Lambda]3",
        ",", "\[Lambda]4", ",", "\[CapitalDelta]t", ",", "bcs", ",", "eqns", 
       ",", "sv", ",", "froot", ",", "xff", ",", "xdotff", ",", "xff0", ",", 
       "xdotff0", ",", "\[Theta]ff0", ",", "\[Theta]dotff0", ",", "uff0", ",",
        "\[Theta]ff", ",", "\[Theta]dotff", ",", "uff", ",", "\[Lambda]1ff0", 
       ",", "\[Lambda]2ff0", ",", "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", 
       "i", ",", 
       RowBox[{"xGuess", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          SubscriptBox["xGuess", "i"], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     InterpretationBox[
      DynamicModuleBox[{Typeset`open = False}, 
       TemplateBox[{"Expression", 
         RowBox[{"CompoundExpression", "[", 
           DynamicBox[
            FEPrivate`FrontEndResource["FEBitmaps", "IconizeEllipsis"]], 
           "]"}], 
         GridBox[{{
            RowBox[{
              TagBox["\"Byte count: \"", "IconizedLabel"], 
              "\[InvisibleSpace]", 
              TagBox["52440", "IconizedItem"]}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
         Dynamic[Typeset`open]},
        "IconizedObject"]],
      $CellContext`\[CapitalDelta]t = $CellContext`\[Tau]/$CellContext`n; \
$CellContext`f[{
          Pattern[$CellContext`x, 
           Blank[]], 
          Pattern[$CellContext`xdot, 
           Blank[]], 
          Pattern[$CellContext`\[Theta], 
           Blank[]], 
          Pattern[$CellContext`\[Theta]dot, 
           Blank[]], 
          Pattern[$CellContext`\[Lambda]1, 
           Blank[]], 
          Pattern[$CellContext`\[Lambda]2, 
           Blank[]], 
          Pattern[$CellContext`\[Lambda]3, 
           Blank[]], 
          Pattern[$CellContext`\[Lambda]4, 
           Blank[]]}] := {$CellContext`xdot, (1/(1 - $CellContext`A 
          Cos[$CellContext`\[Theta]]^2)) (($CellContext`A $CellContext`\
\[Theta]dot^2) 
           Sin[$CellContext`\[Theta]] + (1/(1 - $CellContext`A 
            Cos[$CellContext`\[Theta]]^2)) ($CellContext`\[Lambda]4 
             Cos[$CellContext`\[Theta]] - $CellContext`\[Lambda]2) + \
($CellContext`A Cos[$CellContext`\[Theta]]) 
           Sin[$CellContext`\[Theta]]), $CellContext`\[Theta]dot, (1/(
          1 - $CellContext`A 
          Cos[$CellContext`\[Theta]]^2)) ((-(1/(1 - $CellContext`A 
             Cos[$CellContext`\[Theta]]^2))) ((-$CellContext`\[Lambda]2) 
             Cos[$CellContext`\[Theta]] + $CellContext`\[Lambda]4 
             Cos[$CellContext`\[Theta]]^2) - 
          Sin[$CellContext`\[Theta]] - (($CellContext`A \
$CellContext`\[Theta]dot^2) Cos[$CellContext`\[Theta]]) 
          Sin[$CellContext`\[Theta]]), 
         0, -$CellContext`\[Lambda]1, (
          1/(-1 + $CellContext`A 
            Cos[$CellContext`\[Theta]]^2)^3) (($CellContext`A^2 \
(($CellContext`A $CellContext`\[Theta]dot^2) $CellContext`\[Lambda]2 - \
$CellContext`\[Lambda]4)) 
           Cos[$CellContext`\[Theta]]^5 + ($CellContext`A^3 ($CellContext`\
\[Lambda]2 - $CellContext`\[Theta]dot^2 $CellContext`\[Lambda]4)) 
           Cos[$CellContext`\[Theta]]^6 - ((((1/
              2) $CellContext`A^2) ($CellContext`\[Lambda]2 - $CellContext`\
\[Theta]dot^2 $CellContext`\[Lambda]4)) Cos[$CellContext`\[Theta]]^4) (
           4 - $CellContext`A + $CellContext`A 
            Cos[2 $CellContext`\[Theta]]) - ($CellContext`A 
           Cos[$CellContext`\[Theta]]^2) (-$CellContext`\[Lambda]2 + \
$CellContext`\[Theta]dot^2 $CellContext`\[Lambda]4 + ((
              3 $CellContext`\[Lambda]2) $CellContext`\[Lambda]4) 
            Sin[$CellContext`\[Theta]]) + 
          Cos[$CellContext`\[Theta]] (($CellContext`A \
$CellContext`\[Theta]dot^2) $CellContext`\[Lambda]2 - $CellContext`\[Lambda]4 + \
((2 $CellContext`A) $CellContext`\[Lambda]2^2 + $CellContext`\[Lambda]4^2) 
             Sin[$CellContext`\[Theta]] - (((
               2 $CellContext`A^2) $CellContext`\[Theta]dot^2) $CellContext`\
\[Lambda]2) Sin[$CellContext`\[Theta]]^2) + ($CellContext`A 
            Cos[$CellContext`\[Theta]]^3) ((((-2) $CellContext`A) \
$CellContext`\[Theta]dot^2) $CellContext`\[Lambda]2 + 
            2 $CellContext`\[Lambda]4 + $CellContext`\[Lambda]4^2 
             Sin[$CellContext`\[Theta]] + ((
               2 $CellContext`A) (($CellContext`A $CellContext`\[Theta]dot^2) \
$CellContext`\[Lambda]2 - $CellContext`\[Lambda]4)) 
             Sin[$CellContext`\[Theta]]^2) + 
          Sin[$CellContext`\[Theta]] ((-$CellContext`\[Lambda]2) \
$CellContext`\[Lambda]4 - ($CellContext`A ($CellContext`\[Lambda]2 - \
$CellContext`\[Theta]dot^2 $CellContext`\[Lambda]4)) 
            Sin[$CellContext`\[Theta]] + ($CellContext`A $CellContext`\
\[Lambda]4) Sin[2 $CellContext`\[Theta]])), (
           4/($CellContext`A Cos[2 $CellContext`\[Theta]] + $CellContext`A - 
           2)) ((($CellContext`A $CellContext`\[Theta]dot) 
            Sin[$CellContext`\[Theta]]) ($CellContext`\[Lambda]2 - \
$CellContext`\[Lambda]4 
            Cos[$CellContext`\[Theta]])) - $CellContext`\[Lambda]3}; \
$CellContext`InitGuess = $CellContext`initGuess; $CellContext`xGuess = Table[
         If[$CellContext`i != -1, 
          Subscript[$CellContext`xGuess, $CellContext`i + 1] = 
          Subscript[$CellContext`xGuess, $CellContext`i] + $CellContext`\
\[CapitalDelta]t $CellContext`f[
              Subscript[$CellContext`xGuess, $CellContext`i]], 
          Subscript[$CellContext`xGuess, 0] = {
            Part[$CellContext`ICs, 1], 
            Part[$CellContext`ICs, 2], 
            Part[$CellContext`ICs, 3], 
            Part[$CellContext`ICs, 4], 
            Part[$CellContext`InitGuess, 1], 
            Part[$CellContext`InitGuess, 2], 
            Part[$CellContext`InitGuess, 3], 
            
            Part[$CellContext`InitGuess, 
             4]}], {$CellContext`i, -1, $CellContext`n - 
          1}]; $CellContext`bcs = {
        Subscript[$CellContext`x, 0] == Part[$CellContext`ICs, 1], 
         Subscript[$CellContext`xdot, 0] == Part[$CellContext`ICs, 2], 
         Subscript[$CellContext`x, $CellContext`n] == 
         Subscript[$CellContext`xdot, $CellContext`n] == 0, 
         Subscript[$CellContext`\[Theta], 0] == Part[$CellContext`ICs, 3], 
         Subscript[$CellContext`\[Theta]dot, 0] == Part[$CellContext`ICs, 4], 
         Subscript[$CellContext`\[Theta]dot, $CellContext`n] == 0, 
         Subscript[$CellContext`\[Theta], $CellContext`n] == 
         Pi}; $CellContext`eqns = Flatten[
         Join[$CellContext`bcs, 
          Table[
           Thread[{
              Subscript[$CellContext`x, $CellContext`i], 
              Subscript[$CellContext`xdot, $CellContext`i], 
              Subscript[$CellContext`\[Theta], $CellContext`i], 
              Subscript[$CellContext`\[Theta]dot, $CellContext`i], 
              Subscript[$CellContext`\[Lambda]1, $CellContext`i], 
              Subscript[$CellContext`\[Lambda]2, $CellContext`i], 
              Subscript[$CellContext`\[Lambda]3, $CellContext`i], 
              
              Subscript[$CellContext`\[Lambda]4, $CellContext`i]} == ((1/
                2) $CellContext`\[CapitalDelta]t) ($CellContext`f[{
                  Subscript[$CellContext`x, $CellContext`i - 1], 
                  Subscript[$CellContext`xdot, $CellContext`i - 1], 
                  Subscript[$CellContext`\[Theta], $CellContext`i - 1], 
                  Subscript[$CellContext`\[Theta]dot, $CellContext`i - 1], 
                  Subscript[$CellContext`\[Lambda]1, $CellContext`i - 1], 
                  Subscript[$CellContext`\[Lambda]2, $CellContext`i - 1], 
                  Subscript[$CellContext`\[Lambda]3, $CellContext`i - 1], 
                  
                  Subscript[$CellContext`\[Lambda]4, $CellContext`i - 
                   1]}] + $CellContext`f[{
                  Subscript[$CellContext`x, $CellContext`i], 
                  Subscript[$CellContext`xdot, $CellContext`i], 
                  Subscript[$CellContext`\[Theta], $CellContext`i], 
                  Subscript[$CellContext`\[Theta]dot, $CellContext`i], 
                  Subscript[$CellContext`\[Lambda]1, $CellContext`i], 
                  Subscript[$CellContext`\[Lambda]2, $CellContext`i], 
                  Subscript[$CellContext`\[Lambda]3, $CellContext`i], 
                  Subscript[$CellContext`\[Lambda]4, $CellContext`i]}]) + {
               Subscript[$CellContext`x, $CellContext`i - 1], 
               Subscript[$CellContext`xdot, $CellContext`i - 1], 
               Subscript[$CellContext`\[Theta], $CellContext`i - 1], 
               Subscript[$CellContext`\[Theta]dot, $CellContext`i - 1], 
               Subscript[$CellContext`\[Lambda]1, $CellContext`i - 1], 
               Subscript[$CellContext`\[Lambda]2, $CellContext`i - 1], 
               Subscript[$CellContext`\[Lambda]3, $CellContext`i - 1], 
               
               Subscript[$CellContext`\[Lambda]4, $CellContext`i - 
                1]}], {$CellContext`i, 1, $CellContext`n}]]]; $CellContext`sv = 
       Flatten[
         Table[{{
            Subscript[$CellContext`x, $CellContext`i], 
            Part[
             Part[$CellContext`xGuess, $CellContext`i + 1], 1]}, {
            Subscript[$CellContext`xdot, $CellContext`i], 
            Part[
             Part[$CellContext`xGuess, $CellContext`i + 1], 2]}, {
            Subscript[$CellContext`\[Theta], $CellContext`i], 
            Part[
             Part[$CellContext`xGuess, $CellContext`i + 1], 3]}, {
            Subscript[$CellContext`\[Theta]dot, $CellContext`i], 
            Part[
             Part[$CellContext`xGuess, $CellContext`i + 1], 4]}, {
            Subscript[$CellContext`\[Lambda]1, $CellContext`i], 
            Part[
             Part[$CellContext`xGuess, $CellContext`i + 1], 5]}, {
            Subscript[$CellContext`\[Lambda]2, $CellContext`i], 
            Part[
             Part[$CellContext`xGuess, $CellContext`i + 1], 6]}, {
            Subscript[$CellContext`\[Lambda]3, $CellContext`i], 
            Part[
             Part[$CellContext`xGuess, $CellContext`i + 1], 7]}, {
            Subscript[$CellContext`\[Lambda]4, $CellContext`i], 
            Part[
             Part[$CellContext`xGuess, $CellContext`i + 1], 
             8]}}, {$CellContext`i, 0, $CellContext`n}], 
         1]; $CellContext`froot = 
       FindRoot[$CellContext`eqns, $CellContext`sv, 
         MaxIterations -> $CellContext`maxIter]; $CellContext`error = Norm[
         ReplaceAll[
          Flatten[
           Join[{
              Subscript[$CellContext`x, $CellContext`n], 
              Subscript[$CellContext`xdot, $CellContext`n], 
              Subscript[$CellContext`\[Theta], $CellContext`n], 
              Subscript[$CellContext`\[Theta]dot, $CellContext`n]} - {
            0, 0, Pi, 0}, {
              Subscript[$CellContext`x, 0], 
              Subscript[$CellContext`xdot, 0], 
              Subscript[$CellContext`\[Theta], 0], 
              Subscript[$CellContext`\[Theta]dot, 0]} - $CellContext`ICs, 
            Table[
             Thread[{
                Subscript[$CellContext`x, $CellContext`i], 
                Subscript[$CellContext`xdot, $CellContext`i], 
                Subscript[$CellContext`\[Theta], $CellContext`i], 
                Subscript[$CellContext`\[Theta]dot, $CellContext`i], 
                Subscript[$CellContext`\[Lambda]1, $CellContext`i], 
                Subscript[$CellContext`\[Lambda]2, $CellContext`i], 
                Subscript[$CellContext`\[Lambda]3, $CellContext`i], 
                
                Subscript[$CellContext`\[Lambda]4, $CellContext`i]} - (((1/
                 2) $CellContext`\[CapitalDelta]t) ($CellContext`f[{
                   Subscript[$CellContext`x, $CellContext`i - 1], 
                   Subscript[$CellContext`xdot, $CellContext`i - 1], 
                   Subscript[$CellContext`\[Theta], $CellContext`i - 1], 
                   Subscript[$CellContext`\[Theta]dot, $CellContext`i - 1], 
                   Subscript[$CellContext`\[Lambda]1, $CellContext`i - 1], 
                   Subscript[$CellContext`\[Lambda]2, $CellContext`i - 1], 
                   Subscript[$CellContext`\[Lambda]3, $CellContext`i - 1], 
                   
                   Subscript[$CellContext`\[Lambda]4, $CellContext`i - 
                    1]}] + $CellContext`f[{
                   Subscript[$CellContext`x, $CellContext`i], 
                   Subscript[$CellContext`xdot, $CellContext`i], 
                   Subscript[$CellContext`\[Theta], $CellContext`i], 
                   Subscript[$CellContext`\[Theta]dot, $CellContext`i], 
                   Subscript[$CellContext`\[Lambda]1, $CellContext`i], 
                   Subscript[$CellContext`\[Lambda]2, $CellContext`i], 
                   Subscript[$CellContext`\[Lambda]3, $CellContext`i], 
                   Subscript[$CellContext`\[Lambda]4, $CellContext`i]}]) + {
                Subscript[$CellContext`x, $CellContext`i - 1], 
                Subscript[$CellContext`xdot, $CellContext`i - 1], 
                Subscript[$CellContext`\[Theta], $CellContext`i - 1], 
                Subscript[$CellContext`\[Theta]dot, $CellContext`i - 1], 
                Subscript[$CellContext`\[Lambda]1, $CellContext`i - 1], 
                Subscript[$CellContext`\[Lambda]2, $CellContext`i - 1], 
                Subscript[$CellContext`\[Lambda]3, $CellContext`i - 1], 
                
                Subscript[$CellContext`\[Lambda]4, $CellContext`i - 
                 1]})], {$CellContext`i, 
              1, $CellContext`n}]]], $CellContext`froot], 
         "Frobenius"]; $CellContext`uff0 = ListInterpolation[
         ReplaceAll[
          Table[(1/(1 - $CellContext`A Cos[
               Subscript[$CellContext`\[Theta], $CellContext`i]]^2)) (
            Subscript[$CellContext`\[Lambda]4, $CellContext`i] Cos[
               Subscript[$CellContext`\[Theta], $CellContext`i]] - 
            Subscript[$CellContext`\[Lambda]2, $CellContext`i]), \
{$CellContext`i, 0, $CellContext`n}], $CellContext`froot], {
         0, $CellContext`\[Tau]}, 
         InterpolationOrder -> $CellContext`order]; $CellContext`J = 
       NIntegrate[$CellContext`uff0[$CellContext`t]^2, {$CellContext`t, 
          0, $CellContext`\[Tau]}]; $CellContext`count = 0; While[
        And[
         Or[$CellContext`error > $CellContext`maxError, $CellContext`J > \
$CellContext`maxJ], $CellContext`count <= $CellContext`maxCount], \
$CellContext`InitGuess = {
           RandomReal[{-1, 1}], 
           RandomReal[{-1, 1}], 
           RandomReal[{-1, 1}], 
           RandomReal[{-1, 1}]}; $CellContext`xGuess = Table[
           
           If[$CellContext`i != -1, 
            Subscript[$CellContext`xGuess, $CellContext`i + 1] = 
            Subscript[$CellContext`xGuess, $CellContext`i] + $CellContext`\
\[CapitalDelta]t $CellContext`f[
                Subscript[$CellContext`xGuess, $CellContext`i]], 
            Subscript[$CellContext`xGuess, 0] = {
              Part[$CellContext`ICs, 1], 
              Part[$CellContext`ICs, 2], 
              Part[$CellContext`ICs, 3], 
              Part[$CellContext`ICs, 4], 
              Part[$CellContext`InitGuess, 1], 
              Part[$CellContext`InitGuess, 2], 
              Part[$CellContext`InitGuess, 3], 
              
              Part[$CellContext`InitGuess, 
               4]}], {$CellContext`i, -1, $CellContext`n - 
            1}]; $CellContext`sv = Flatten[
           Table[{{
              Subscript[$CellContext`x, $CellContext`i], 
              Part[
               Part[$CellContext`xGuess, $CellContext`i + 1], 1]}, {
              Subscript[$CellContext`xdot, $CellContext`i], 
              Part[
               Part[$CellContext`xGuess, $CellContext`i + 1], 2]}, {
              Subscript[$CellContext`\[Theta], $CellContext`i], 
              Part[
               Part[$CellContext`xGuess, $CellContext`i + 1], 3]}, {
              Subscript[$CellContext`\[Theta]dot, $CellContext`i], 
              Part[
               Part[$CellContext`xGuess, $CellContext`i + 1], 4]}, {
              Subscript[$CellContext`\[Lambda]1, $CellContext`i], 
              Part[
               Part[$CellContext`xGuess, $CellContext`i + 1], 5]}, {
              Subscript[$CellContext`\[Lambda]2, $CellContext`i], 
              Part[
               Part[$CellContext`xGuess, $CellContext`i + 1], 6]}, {
              Subscript[$CellContext`\[Lambda]3, $CellContext`i], 
              Part[
               Part[$CellContext`xGuess, $CellContext`i + 1], 7]}, {
              Subscript[$CellContext`\[Lambda]4, $CellContext`i], 
              Part[
               Part[$CellContext`xGuess, $CellContext`i + 1], 
               8]}}, {$CellContext`i, 0, $CellContext`n}], 
           1]; $CellContext`froot = 
         FindRoot[$CellContext`eqns, $CellContext`sv, 
           MaxIterations -> $CellContext`maxIter]; $CellContext`error = Norm[
           ReplaceAll[
            Flatten[
             Join[{
                Subscript[$CellContext`x, $CellContext`n], 
                Subscript[$CellContext`xdot, $CellContext`n], 
                Subscript[$CellContext`\[Theta], $CellContext`n], 
                Subscript[$CellContext`\[Theta]dot, $CellContext`n]} - {
              0, 0, Pi, 0}, {
                Subscript[$CellContext`x, 0], 
                Subscript[$CellContext`xdot, 0], 
                Subscript[$CellContext`\[Theta], 0], 
                Subscript[$CellContext`\[Theta]dot, 0]} - $CellContext`ICs, 
              Table[
               Thread[{
                  Subscript[$CellContext`x, $CellContext`i], 
                  Subscript[$CellContext`xdot, $CellContext`i], 
                  Subscript[$CellContext`\[Theta], $CellContext`i], 
                  Subscript[$CellContext`\[Theta]dot, $CellContext`i], 
                  Subscript[$CellContext`\[Lambda]1, $CellContext`i], 
                  Subscript[$CellContext`\[Lambda]2, $CellContext`i], 
                  Subscript[$CellContext`\[Lambda]3, $CellContext`i], 
                  
                  Subscript[$CellContext`\[Lambda]4, $CellContext`i]} - (((1/
                   2) $CellContext`\[CapitalDelta]t) ($CellContext`f[{
                    Subscript[$CellContext`x, $CellContext`i - 1], 
                    Subscript[$CellContext`xdot, $CellContext`i - 1], 
                    Subscript[$CellContext`\[Theta], $CellContext`i - 1], 
                    Subscript[$CellContext`\[Theta]dot, $CellContext`i - 1], 
                    Subscript[$CellContext`\[Lambda]1, $CellContext`i - 1], 
                    Subscript[$CellContext`\[Lambda]2, $CellContext`i - 1], 
                    Subscript[$CellContext`\[Lambda]3, $CellContext`i - 1], 
                    
                    Subscript[$CellContext`\[Lambda]4, $CellContext`i - 
                    1]}] + $CellContext`f[{
                    Subscript[$CellContext`x, $CellContext`i], 
                    Subscript[$CellContext`xdot, $CellContext`i], 
                    Subscript[$CellContext`\[Theta], $CellContext`i], 
                    Subscript[$CellContext`\[Theta]dot, $CellContext`i], 
                    Subscript[$CellContext`\[Lambda]1, $CellContext`i], 
                    Subscript[$CellContext`\[Lambda]2, $CellContext`i], 
                    Subscript[$CellContext`\[Lambda]3, $CellContext`i], 
                    Subscript[$CellContext`\[Lambda]4, $CellContext`i]}]) + {
                  Subscript[$CellContext`x, $CellContext`i - 1], 
                  Subscript[$CellContext`xdot, $CellContext`i - 1], 
                  Subscript[$CellContext`\[Theta], $CellContext`i - 1], 
                  Subscript[$CellContext`\[Theta]dot, $CellContext`i - 1], 
                  Subscript[$CellContext`\[Lambda]1, $CellContext`i - 1], 
                  Subscript[$CellContext`\[Lambda]2, $CellContext`i - 1], 
                  Subscript[$CellContext`\[Lambda]3, $CellContext`i - 1], 
                  
                  Subscript[$CellContext`\[Lambda]4, $CellContext`i - 
                   1]})], {$CellContext`i, 
                1, $CellContext`n}]]], $CellContext`froot], 
           "Frobenius"]; $CellContext`uff0 = ListInterpolation[
           ReplaceAll[
            Table[(1/(1 - $CellContext`A Cos[
                 Subscript[$CellContext`\[Theta], $CellContext`i]]^2)) (
              Subscript[$CellContext`\[Lambda]4, $CellContext`i] Cos[
                 Subscript[$CellContext`\[Theta], $CellContext`i]] - 
              Subscript[$CellContext`\[Lambda]2, $CellContext`i]), \
{$CellContext`i, 0, $CellContext`n}], $CellContext`froot], {
           0, $CellContext`\[Tau]}, 
           InterpolationOrder -> $CellContext`order]; $CellContext`J = 
         NIntegrate[$CellContext`uff0[$CellContext`t]^2, {$CellContext`t, 
            0, $CellContext`\[Tau]}]; $CellContext`count = $CellContext`count + 
          1; Null]; $CellContext`xff0 = ListInterpolation[
         ReplaceAll[
          Table[
           
           Subscript[$CellContext`x, $CellContext`i], {$CellContext`i, 
            0, $CellContext`n}], $CellContext`froot], {
         0, $CellContext`\[Tau]}, 
         InterpolationOrder -> $CellContext`order]; $CellContext`xdotff0 = 
       ListInterpolation[
         ReplaceAll[
          Table[
           
           Subscript[$CellContext`xdot, $CellContext`i], {$CellContext`i, 
            0, $CellContext`n}], $CellContext`froot], {
         0, $CellContext`\[Tau]}, 
         InterpolationOrder -> $CellContext`order]; $CellContext`\[Theta]ff0 = 
       ListInterpolation[
         ReplaceAll[
          Table[
           
           Subscript[$CellContext`\[Theta], $CellContext`i], {$CellContext`i, 
            0, $CellContext`n}], $CellContext`froot], {
         0, $CellContext`\[Tau]}, 
         InterpolationOrder -> $CellContext`order]; \
$CellContext`\[Theta]dotff0 = ListInterpolation[
         ReplaceAll[
          Table[
           
           Subscript[$CellContext`\[Theta]dot, $CellContext`i], \
{$CellContext`i, 0, $CellContext`n}], $CellContext`froot], {
         0, $CellContext`\[Tau]}, 
         InterpolationOrder -> $CellContext`order]; \
$CellContext`\[Lambda]1ff0 = ListInterpolation[
         ReplaceAll[
          Table[
           
           Subscript[$CellContext`\[Lambda]1, $CellContext`i], \
{$CellContext`i, 0, $CellContext`n}], $CellContext`froot], {
         0, $CellContext`\[Tau]}, 
         InterpolationOrder -> $CellContext`order]; \
$CellContext`\[Lambda]2ff0 = ListInterpolation[
         ReplaceAll[
          Table[
           
           Subscript[$CellContext`\[Lambda]2, $CellContext`i], \
{$CellContext`i, 0, $CellContext`n}], $CellContext`froot], {
         0, $CellContext`\[Tau]}, 
         InterpolationOrder -> $CellContext`order]; \
$CellContext`\[Lambda]3ff0 = ListInterpolation[
         ReplaceAll[
          Table[
           
           Subscript[$CellContext`\[Lambda]3, $CellContext`i], \
{$CellContext`i, 0, $CellContext`n}], $CellContext`froot], {
         0, $CellContext`\[Tau]}, 
         InterpolationOrder -> $CellContext`order]; \
$CellContext`\[Lambda]4ff0 = ListInterpolation[
         ReplaceAll[
          Table[
           
           Subscript[$CellContext`\[Lambda]3, $CellContext`i], \
{$CellContext`i, 0, $CellContext`n}], $CellContext`froot], {
         0, $CellContext`\[Tau]}, 
         InterpolationOrder -> $CellContext`order]; $CellContext`uff0 = 
       ListInterpolation[
         ReplaceAll[
          Table[(1/(1 - $CellContext`A Cos[
               Subscript[$CellContext`\[Theta], $CellContext`i]]^2)) (
            Subscript[$CellContext`\[Lambda]4, $CellContext`i] Cos[
               Subscript[$CellContext`\[Theta], $CellContext`i]] - 
            Subscript[$CellContext`\[Lambda]2, $CellContext`i]), \
{$CellContext`i, 0, $CellContext`n}], $CellContext`froot], {
         0, $CellContext`\[Tau]}, 
         InterpolationOrder -> $CellContext`order]; $CellContext`xff[
         Pattern[$CellContext`t, 
          Blank[]]] := Piecewise[{{
           $CellContext`xff0[$CellContext`t], 
           0 <= $CellContext`t <= $CellContext`\[Tau]}}, 
         0]; $CellContext`xdotff[
         Pattern[$CellContext`t, 
          Blank[]]] := Piecewise[{{
           $CellContext`xdotff0[$CellContext`t], 
           0 <= $CellContext`t <= $CellContext`\[Tau]}}, 
         0]; $CellContext`\[Theta]ff[
         Pattern[$CellContext`t, 
          Blank[]]] := Piecewise[{{
           $CellContext`\[Theta]ff0[$CellContext`t], 
           0 <= $CellContext`t <= $CellContext`\[Tau]}}, 
         Pi]; $CellContext`\[Theta]dotff[
         Pattern[$CellContext`t, 
          Blank[]]] := Piecewise[{{
           $CellContext`\[Theta]dotff0[$CellContext`t], 
           0 <= $CellContext`t <= $CellContext`\[Tau]}}, 0]; $CellContext`uff[
         Pattern[$CellContext`t, 
          Blank[]]] := Piecewise[{{
           $CellContext`uff0[$CellContext`t], 
           0 <= $CellContext`t <= $CellContext`\[Tau]}}, 0]; $CellContext`J = 
       NIntegrate[$CellContext`uff0[$CellContext`t]^2, {$CellContext`t, 
          0, $CellContext`\[Tau]}]; $CellContext`S = \
$CellContext`CalculateSMatrix[$CellContext`xff, $CellContext`xdotff, \
$CellContext`\[Theta]ff, $CellContext`\[Theta]dotff, $CellContext`uff, \
$CellContext`\[Tau], $CellContext`A]; K[
         Pattern[$CellContext`t, 
          
          Blank[]]] := $CellContext`CalculateGains[$CellContext`xff, \
$CellContext`xdotff, $CellContext`\[Theta]ff, $CellContext`\[Theta]dotff, \
$CellContext`uff, $CellContext`t, $CellContext`A, $CellContext`\[Tau], \
$CellContext`S]; {$CellContext`xff, $CellContext`xdotff, \
$CellContext`\[Theta]ff, $CellContext`\[Theta]dotff, $CellContext`uff, \
$CellContext`\[Lambda]1ff0, $CellContext`\[Lambda]2ff0, \
$CellContext`\[Lambda]3ff0, $CellContext`\[Lambda]4ff0, $CellContext`J, K},
      SelectWithContents->True,
      Selectable->False]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"testSwingUp", "[", 
    RowBox[{
    "ICs_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "uff0_", ",", "A_"}], "]"}],
    ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eq", ",", "init", ",", "x", ",", "xdot", ",", "\[Theta]", ",", 
       "\[Theta]dot", ",", "xs", ",", "xdots", ",", "\[Theta]s", ",", 
       "\[Theta]dots", ",", "t", ",", "J"}], "}"}], ",", "\n", 
     InterpretationBox[
      DynamicModuleBox[{Typeset`open = False}, 
       TemplateBox[{"Expression", 
         RowBox[{"CompoundExpression", "[", 
           DynamicBox[
            FEPrivate`FrontEndResource["FEBitmaps", "IconizeEllipsis"]], 
           "]"}], 
         GridBox[{{
            RowBox[{
              TagBox["\"Byte count: \"", "IconizedLabel"], 
              "\[InvisibleSpace]", 
              TagBox["5696", "IconizedItem"]}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
         Dynamic[Typeset`open]},
        "IconizedObject"]],
      $CellContext`eq = {
        Derivative[
          1][$CellContext`x][$CellContext`t] == \
$CellContext`xdot[$CellContext`t], 
         Derivative[
          1][$CellContext`xdot][$CellContext`t] == (1/(1 - $CellContext`A Cos[
              $CellContext`\[Theta][$CellContext`t]]^2)) \
($CellContext`uff0[$CellContext`t] + ($CellContext`A \
$CellContext`\[Theta]dot[$CellContext`t]^2) Sin[
              $CellContext`\[Theta][$CellContext`t]] + ($CellContext`A Cos[
               $CellContext`\[Theta][$CellContext`t]]) Sin[
              $CellContext`\[Theta][$CellContext`t]]), 
         Derivative[
          1][$CellContext`\[Theta]][$CellContext`t] == \
$CellContext`\[Theta]dot[$CellContext`t], 
         Derivative[
          1][$CellContext`\[Theta]dot][$CellContext`t] == (1/(
           1 - $CellContext`A Cos[
              $CellContext`\[Theta][$CellContext`t]]^2)) (-Sin[
              $CellContext`\[Theta][$CellContext`t]] - Cos[
             $CellContext`\[Theta][$CellContext`t]] \
($CellContext`uff0[$CellContext`t] + ($CellContext`A \
$CellContext`\[Theta]dot[$CellContext`t]^2) Sin[
               $CellContext`\[Theta][$CellContext`t]]))}; $CellContext`init = \
{$CellContext`x[0] == Part[$CellContext`ICs, 1], $CellContext`xdot[0] == 
         Part[$CellContext`ICs, 2], $CellContext`\[Theta][0] == 
         Part[$CellContext`ICs, 3], $CellContext`\[Theta]dot[0] == 
         Part[$CellContext`ICs, 
           4]}; {$CellContext`xs, $CellContext`xdots, $CellContext`\[Theta]s, \
$CellContext`\[Theta]dots} = 
       NDSolveValue[{$CellContext`eq, $CellContext`init}, {$CellContext`x, \
$CellContext`xdot, $CellContext`\[Theta], $CellContext`\[Theta]dot}, \
{$CellContext`t, 0, $CellContext`\[Tau]1}, 
         Method -> {"DiscontinuityProcessing" -> None}]; $CellContext`J = 
       NIntegrate[$CellContext`uff0[$CellContext`t]^2, {$CellContext`t, 
          0, $CellContext`\[Tau]}]; {$CellContext`xs, $CellContext`xdots, \
$CellContext`\[Theta]s, $CellContext`\[Theta]dots, $CellContext`uff0, \
$CellContext`J},
      SelectWithContents->True,
      Selectable->False]}], "]"}]}], "\n", "\n", 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"testWithFB", "[", 
    RowBox[{
    "ICs_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "xff0_", ",", "xdotff0_", 
     ",", "\[Theta]ff0_", ",", "\[Theta]dotff0_", ",", "uff0_", ",", "A_", 
     ",", "K_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eq", ",", "init", ",", "\[Theta]", ",", "\[Theta]dot", ",", 
       "\[Theta]ff", ",", "\[Theta]dotff", ",", "x", ",", "xdot", ",", "xff", 
       ",", "xdotff", ",", "uff", ",", "t", ",", "\[Kappa]1", ",", 
       "\[Kappa]2", ",", "\[Kappa]3", ",", "\[Kappa]4", ",", "ufb", ",", "u", 
       ",", "\[Theta]s", ",", "\[Theta]dots", ",", "xs", ",", "xdots", ",", 
       "us", ",", "J", ",", "error"}], "}"}], ",", "\[IndentingNewLine]", 
     InterpretationBox[
      DynamicModuleBox[{Typeset`open = False}, 
       TemplateBox[{"Expression", 
         RowBox[{"CompoundExpression", "[", 
           DynamicBox[
            FEPrivate`FrontEndResource["FEBitmaps", "IconizeEllipsis"]], 
           "]"}], 
         GridBox[{{
            RowBox[{
              TagBox["\"Byte count: \"", "IconizedLabel"], 
              "\[InvisibleSpace]", 
              TagBox["15056", "IconizedItem"]}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
         Dynamic[Typeset`open]},
        "IconizedObject"]],
      $CellContext`\[Kappa]1 = ($CellContext`\[Kappa]2 = 
        3); $CellContext`\[Kappa]3 = -0.1; $CellContext`\[Kappa]4 = -0.65; \
$CellContext`xff[
         Pattern[$CellContext`t, 
          Blank[]]] := Piecewise[{{
           $CellContext`xff0[$CellContext`t], 
           0 <= $CellContext`t <= $CellContext`\[Tau]}}, 
         0]; $CellContext`xdotff[
         Pattern[$CellContext`t, 
          Blank[]]] := Piecewise[{{
           $CellContext`xdotff0[$CellContext`t], 
           0 <= $CellContext`t <= $CellContext`\[Tau]}}, 
         0]; $CellContext`\[Theta]ff[
         Pattern[$CellContext`t, 
          Blank[]]] := Piecewise[{{
           $CellContext`\[Theta]ff0[$CellContext`t], 
           0 <= $CellContext`t <= $CellContext`\[Tau]}}, 
         Pi]; $CellContext`\[Theta]dotff[
         Pattern[$CellContext`t, 
          Blank[]]] := Piecewise[{{
           $CellContext`\[Theta]dotff0[$CellContext`t], 
           0 <= $CellContext`t <= $CellContext`\[Tau]}}, 0]; $CellContext`uff[
         Pattern[$CellContext`t, 
          Blank[]]] := Piecewise[{{
           $CellContext`uff0[$CellContext`t], 
           0 <= $CellContext`t <= $CellContext`\[Tau]}}, 0]; $CellContext`ufb[
         Pattern[$CellContext`t, 
          Blank[]]] := Piecewise[{{
           Dot[
            
            K[$CellContext`t], {$CellContext`xff[$CellContext`t] - \
$CellContext`x[$CellContext`t], $CellContext`xdotff[$CellContext`t] - \
$CellContext`xdot[$CellContext`t], $CellContext`\[Theta]ff[$CellContext`t] - \
$CellContext`\[Theta][$CellContext`t], \
$CellContext`\[Theta]dotff[$CellContext`t] - \
$CellContext`\[Theta]dot[$CellContext`t]}], 
           0 <= $CellContext`t <= $CellContext`\[Tau]}}, \
$CellContext`\[Kappa]1 ($CellContext`\[Theta]ff[$CellContext`t] - \
$CellContext`\[Theta][$CellContext`t]) + $CellContext`\[Kappa]2 \
($CellContext`\[Theta]dotff[$CellContext`t] - \
$CellContext`\[Theta]dot[$CellContext`t]) + $CellContext`\[Kappa]3 \
($CellContext`xff[$CellContext`t] - $CellContext`x[$CellContext`t]) + \
$CellContext`\[Kappa]4 ($CellContext`xdotff[$CellContext`t] - \
$CellContext`xdot[$CellContext`t])]; $CellContext`u[
         Pattern[$CellContext`t, 
          
          Blank[]]] := $CellContext`uff[$CellContext`t] + \
$CellContext`ufb[$CellContext`t]; $CellContext`eq = {
        Derivative[
          1][$CellContext`x][$CellContext`t] == \
$CellContext`xdot[$CellContext`t], 
         Derivative[
          1][$CellContext`xdot][$CellContext`t] == (1/(1 - $CellContext`A Cos[
              $CellContext`\[Theta][$CellContext`t]]^2)) \
($CellContext`u[$CellContext`t] + ($CellContext`A \
$CellContext`\[Theta]dot[$CellContext`t]^2) Sin[
              $CellContext`\[Theta][$CellContext`t]] + ($CellContext`A Cos[
               $CellContext`\[Theta][$CellContext`t]]) Sin[
              $CellContext`\[Theta][$CellContext`t]]), 
         Derivative[
          1][$CellContext`\[Theta]][$CellContext`t] == \
$CellContext`\[Theta]dot[$CellContext`t], 
         Derivative[
          1][$CellContext`\[Theta]dot][$CellContext`t] == (1/(
           1 - $CellContext`A Cos[
              $CellContext`\[Theta][$CellContext`t]]^2)) (-Sin[
              $CellContext`\[Theta][$CellContext`t]] - Cos[
             $CellContext`\[Theta][$CellContext`t]] \
($CellContext`u[$CellContext`t] + ($CellContext`A \
$CellContext`\[Theta]dot[$CellContext`t]^2) Sin[
               $CellContext`\[Theta][$CellContext`t]]))}; $CellContext`init = \
{$CellContext`x[0] == Part[$CellContext`ICs, 1], $CellContext`xdot[0] == 
         Part[$CellContext`ICs, 2], $CellContext`\[Theta][0] == 
         Part[$CellContext`ICs, 3], $CellContext`\[Theta]dot[0] == 
         Part[$CellContext`ICs, 
           4]}; {$CellContext`xs, $CellContext`xdots, $CellContext`\[Theta]s, \
$CellContext`\[Theta]dots} = 
       NDSolveValue[{$CellContext`eq, $CellContext`init}, {$CellContext`x, \
$CellContext`xdot, $CellContext`\[Theta], $CellContext`\[Theta]dot}, \
{$CellContext`t, 0, $CellContext`\[Tau]1}, 
         Method -> {"DiscontinuityProcessing" -> None}]; $CellContext`us[
         Pattern[$CellContext`t, 
          Blank[]]] := $CellContext`uff[$CellContext`t] + Piecewise[{{
            Dot[
             
             K[$CellContext`t], {$CellContext`xff[$CellContext`t] - \
$CellContext`xs[$CellContext`t], $CellContext`xdotff[$CellContext`t] - \
$CellContext`xdots[$CellContext`t], $CellContext`\[Theta]ff[$CellContext`t] - \
$CellContext`\[Theta]s[$CellContext`t], \
$CellContext`\[Theta]dotff[$CellContext`t] - \
$CellContext`\[Theta]dots[$CellContext`t]}], 
            0 <= $CellContext`t <= $CellContext`\[Tau]}}, $CellContext`\
\[Kappa]1 ($CellContext`\[Theta]ff[$CellContext`t] - \
$CellContext`\[Theta]s[$CellContext`t]) + $CellContext`\[Kappa]2 \
($CellContext`\[Theta]dotff[$CellContext`t] - \
$CellContext`\[Theta]dots[$CellContext`t]) + $CellContext`\[Kappa]3 \
($CellContext`xff[$CellContext`t] - $CellContext`xs[$CellContext`t]) + \
$CellContext`\[Kappa]4 ($CellContext`xdotff[$CellContext`t] - \
$CellContext`xdots[$CellContext`t])]; $CellContext`J = 
       NIntegrate[$CellContext`us[$CellContext`t]^2, {$CellContext`t, 
          0, $CellContext`\[Tau]}]; $CellContext`error = Norm[{
           $CellContext`xs[$CellContext`\[Tau]], 
           $CellContext`xdots[$CellContext`\[Tau]], 
           $CellContext`\[Theta]s[$CellContext`\[Tau]], 
           $CellContext`\[Theta]dots[$CellContext`\[Tau]]} - {
         0, 0, Pi, 
          0}]; {$CellContext`xs, $CellContext`xdots, $CellContext`\[Theta]s, \
$CellContext`\[Theta]dots, $CellContext`us, $CellContext`J, \
$CellContext`error},
      SelectWithContents->True,
      Selectable->False]}], "]"}]}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testWithFBClipped", "[", 
   RowBox[{
   "ICs_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "xff0_", ",", "xdotff0_", 
    ",", "\[Theta]ff0_", ",", "\[Theta]dotff0_", ",", "uff0_", ",", "A_", ",",
     "uBound_", ",", "K_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "eq", ",", "init", ",", "\[Theta]", ",", "\[Theta]dot", ",", 
      "\[Theta]ff", ",", "\[Theta]dotff", ",", "x", ",", "xdot", ",", "xff", 
      ",", "xdotff", ",", "uff", ",", "t", ",", "\[Kappa]1", ",", "\[Kappa]2",
       ",", "\[Kappa]3", ",", "\[Kappa]4", ",", "ufb", ",", "u", ",", 
      "\[Theta]s", ",", "\[Theta]dots", ",", "xs", ",", "xdots", ",", "us", 
      ",", "J", ",", "error"}], "}"}], ",", "\[IndentingNewLine]", 
    InterpretationBox[
     DynamicModuleBox[{Typeset`open = False}, 
      TemplateBox[{"Expression", 
        RowBox[{"CompoundExpression", "[", 
          DynamicBox[
           FEPrivate`FrontEndResource["FEBitmaps", "IconizeEllipsis"]], "]"}], 
        GridBox[{{
           RowBox[{
             TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
             TagBox["15424", "IconizedItem"]}]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
        Dynamic[Typeset`open]},
       "IconizedObject"]],
     $CellContext`\[Kappa]1 = ($CellContext`\[Kappa]2 = 
       3); $CellContext`\[Kappa]3 = -0.1; $CellContext`\[Kappa]4 = -0.65; \
$CellContext`xff[
        Pattern[$CellContext`t, 
         Blank[]]] := Piecewise[{{
          $CellContext`xff0[$CellContext`t], 
          0 <= $CellContext`t <= $CellContext`\[Tau]}}, 
        0]; $CellContext`xdotff[
        Pattern[$CellContext`t, 
         Blank[]]] := Piecewise[{{
          $CellContext`xdotff0[$CellContext`t], 
          0 <= $CellContext`t <= $CellContext`\[Tau]}}, 
        0]; $CellContext`\[Theta]ff[
        Pattern[$CellContext`t, 
         Blank[]]] := Piecewise[{{
          $CellContext`\[Theta]ff0[$CellContext`t], 
          0 <= $CellContext`t <= $CellContext`\[Tau]}}, 
        Pi]; $CellContext`\[Theta]dotff[
        Pattern[$CellContext`t, 
         Blank[]]] := Piecewise[{{
          $CellContext`\[Theta]dotff0[$CellContext`t], 
          0 <= $CellContext`t <= $CellContext`\[Tau]}}, 0]; $CellContext`uff[
        Pattern[$CellContext`t, 
         Blank[]]] := Piecewise[{{
          $CellContext`uff0[$CellContext`t], 
          0 <= $CellContext`t <= $CellContext`\[Tau]}}, 0]; $CellContext`ufb[
        Pattern[$CellContext`t, 
         Blank[]]] := Piecewise[{{
          Dot[
           
           K[$CellContext`t], {$CellContext`xff[$CellContext`t] - \
$CellContext`x[$CellContext`t], $CellContext`xdotff[$CellContext`t] - \
$CellContext`xdot[$CellContext`t], $CellContext`\[Theta]ff[$CellContext`t] - \
$CellContext`\[Theta][$CellContext`t], \
$CellContext`\[Theta]dotff[$CellContext`t] - \
$CellContext`\[Theta]dot[$CellContext`t]}], 
          0 <= $CellContext`t <= $CellContext`\[Tau]}}, \
$CellContext`\[Kappa]1 ($CellContext`\[Theta]ff[$CellContext`t] - \
$CellContext`\[Theta][$CellContext`t]) + $CellContext`\[Kappa]2 \
($CellContext`\[Theta]dotff[$CellContext`t] - \
$CellContext`\[Theta]dot[$CellContext`t]) + $CellContext`\[Kappa]3 \
($CellContext`xff[$CellContext`t] - $CellContext`x[$CellContext`t]) + \
$CellContext`\[Kappa]4 ($CellContext`xdotff[$CellContext`t] - \
$CellContext`xdot[$CellContext`t])]; $CellContext`u[
        Pattern[$CellContext`t, 
         Blank[]]] := 
      Clip[$CellContext`uff[$CellContext`t] + \
$CellContext`ufb[$CellContext`t], {-$CellContext`uBound, \
$CellContext`uBound}]; $CellContext`eq = {
       Derivative[
         1][$CellContext`x][$CellContext`t] == \
$CellContext`xdot[$CellContext`t], 
        Derivative[
         1][$CellContext`xdot][$CellContext`t] == (1/(1 - $CellContext`A Cos[
             $CellContext`\[Theta][$CellContext`t]]^2)) \
($CellContext`u[$CellContext`t] + ($CellContext`A \
$CellContext`\[Theta]dot[$CellContext`t]^2) Sin[
             $CellContext`\[Theta][$CellContext`t]] + ($CellContext`A Cos[
              $CellContext`\[Theta][$CellContext`t]]) Sin[
             $CellContext`\[Theta][$CellContext`t]]), 
        Derivative[
         1][$CellContext`\[Theta]][$CellContext`t] == \
$CellContext`\[Theta]dot[$CellContext`t], 
        Derivative[
         1][$CellContext`\[Theta]dot][$CellContext`t] == (1/(
          1 - $CellContext`A Cos[
             $CellContext`\[Theta][$CellContext`t]]^2)) (-Sin[
             $CellContext`\[Theta][$CellContext`t]] - Cos[
            $CellContext`\[Theta][$CellContext`t]] \
($CellContext`u[$CellContext`t] + ($CellContext`A \
$CellContext`\[Theta]dot[$CellContext`t]^2) Sin[
              $CellContext`\[Theta][$CellContext`t]]))}; $CellContext`init = \
{$CellContext`x[0] == Part[$CellContext`ICs, 1], $CellContext`xdot[0] == 
        Part[$CellContext`ICs, 2], $CellContext`\[Theta][0] == 
        Part[$CellContext`ICs, 3], $CellContext`\[Theta]dot[0] == 
        Part[$CellContext`ICs, 
          4]}; {$CellContext`xs, $CellContext`xdots, $CellContext`\[Theta]s, \
$CellContext`\[Theta]dots} = 
      NDSolveValue[{$CellContext`eq, $CellContext`init}, {$CellContext`x, \
$CellContext`xdot, $CellContext`\[Theta], $CellContext`\[Theta]dot}, \
{$CellContext`t, 0, $CellContext`\[Tau]1}, 
        Method -> {"DiscontinuityProcessing" -> None}]; $CellContext`us[
        Pattern[$CellContext`t, 
         Blank[]]] := Clip[$CellContext`uff[$CellContext`t] + Piecewise[{{
            Dot[
             
             K[$CellContext`t], {$CellContext`xff[$CellContext`t] - \
$CellContext`xs[$CellContext`t], $CellContext`xdotff[$CellContext`t] - \
$CellContext`xdots[$CellContext`t], $CellContext`\[Theta]ff[$CellContext`t] - \
$CellContext`\[Theta]s[$CellContext`t], \
$CellContext`\[Theta]dotff[$CellContext`t] - \
$CellContext`\[Theta]dots[$CellContext`t]}], 
            0 <= $CellContext`t <= $CellContext`\[Tau]}}, $CellContext`\
\[Kappa]1 ($CellContext`\[Theta]ff[$CellContext`t] - \
$CellContext`\[Theta]s[$CellContext`t]) + $CellContext`\[Kappa]2 \
($CellContext`\[Theta]dotff[$CellContext`t] - \
$CellContext`\[Theta]dots[$CellContext`t]) + $CellContext`\[Kappa]3 \
($CellContext`xff[$CellContext`t] - $CellContext`xs[$CellContext`t]) + \
$CellContext`\[Kappa]4 ($CellContext`xdotff[$CellContext`t] - \
$CellContext`xdots[$CellContext`t])], {-$CellContext`uBound, \
$CellContext`uBound}]; $CellContext`error = Norm[{
          $CellContext`xs[$CellContext`\[Tau]], 
          $CellContext`xdots[$CellContext`\[Tau]], 
          $CellContext`\[Theta]s[$CellContext`\[Tau]], 
          $CellContext`\[Theta]dots[$CellContext`\[Tau]]} - {
        0, 0, Pi, 0}]; $CellContext`J = 
      NIntegrate[$CellContext`us[$CellContext`t]^2, {$CellContext`t, 
         0, $CellContext`\[Tau]}]; {$CellContext`xs, $CellContext`xdots, \
$CellContext`\[Theta]s, $CellContext`\[Theta]dots, $CellContext`us, \
$CellContext`J, $CellContext`error},
     SelectWithContents->True,
     Selectable->False]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Energy", "[", 
    RowBox[{"{", 
     RowBox[{
     "x1_", ",", "x2_", ",", "\[Theta]1_", ",", "\[Theta]2_", ",", "A_"}], 
     "}"}], "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"1", "/", "2"}], "*", 
     RowBox[{"x2", "^", "2"}]}], " ", "+", " ", 
    RowBox[{
     RowBox[{"1", "/", "2"}], "*", "A", "*", 
     RowBox[{"\[Theta]2", "^", "2"}]}], " ", "+", " ", 
    RowBox[{"A", "*", 
     RowBox[{"Cos", "[", "\[Theta]1", "]"}], "*", "x2", "*", "\[Theta]2"}], 
    " ", "-", " ", 
    RowBox[{"A", "*", 
     RowBox[{"Cos", "[", "\[Theta]1", "]"}]}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.862753343189165*^9, 3.862753411389415*^9}, {
   3.8627553611496043`*^9, 3.8627553647834463`*^9}, {3.862755542386807*^9, 
   3.862755582254092*^9}, {3.862756179429644*^9, 3.8627562078485813`*^9}, 
   3.8627563320549693`*^9, {3.8627564690202875`*^9, 3.8627565488258357`*^9}, {
   3.8627568793814173`*^9, 3.8627568873778677`*^9}, 3.8627585165043135`*^9, {
   3.8627585965107956`*^9, 3.862758689290209*^9}, {3.862758834699833*^9, 
   3.8627588555911727`*^9}, {3.8627590963373947`*^9, 
   3.8627590998392787`*^9}, {3.8627594410134716`*^9, 
   3.8627594626865597`*^9}, {3.862759635094576*^9, 3.8627596377257366`*^9}, {
   3.862759669455618*^9, 3.8627597448635693`*^9}, 3.862759795914287*^9, {
   3.8627603319473376`*^9, 3.862760490473783*^9}, {3.8627605307139487`*^9, 
   3.862760536806006*^9}, {3.8627610047197795`*^9, 3.8627610478400292`*^9}, {
   3.8627611285982723`*^9, 3.862761147921111*^9}, {3.8631982964294224`*^9, 
   3.8631982970332265`*^9}, 3.8631983363504767`*^9, {3.863208693665881*^9, 
   3.8632086943846474`*^9}, 3.863210007245922*^9, 3.863271804426487*^9, {
   3.8632718412836447`*^9, 3.8632718583741503`*^9}, {3.8632719591337743`*^9, 
   3.863271959351703*^9}, {3.863272049174841*^9, 3.863272070205083*^9}, {
   3.863272113471178*^9, 3.863272123024109*^9}, 3.8632747752128673`*^9, {
   3.863274857845314*^9, 3.863274901443305*^9}, 3.863274985905165*^9, {
   3.86327502591031*^9, 3.8632751590365314`*^9}, {3.8632751952308993`*^9, 
   3.863275233662552*^9}, {3.8632753992893295`*^9, 3.863275415841012*^9}, 
   3.8632757933676972`*^9, 3.863276112914017*^9, {3.8632763683199444`*^9, 
   3.8632763983313017`*^9}, {3.8632764721665745`*^9, 3.863276525061578*^9}, {
   3.863278235705888*^9, 3.8632782777863655`*^9}, {3.863278324944213*^9, 
   3.8632783286160316`*^9}, {3.863552728717914*^9, 3.8635527298355513`*^9}, {
   3.863613419658352*^9, 3.863613423534114*^9}, {3.8636150904008484`*^9, 
   3.86361513154671*^9}, {3.8636152078133564`*^9, 3.8636152525520706`*^9}, {
   3.8636152893383236`*^9, 3.863615479516596*^9}, 3.8636157247782784`*^9, {
   3.863615879717803*^9, 3.8636159617646036`*^9}, {3.8636160220243616`*^9, 
   3.8636160299278383`*^9}, {3.863616069486206*^9, 3.86361607601912*^9}, {
   3.863699007217822*^9, 3.8636991515617003`*^9}, {3.8636996033223495`*^9, 
   3.8636996129842625`*^9}, {3.8636997844214835`*^9, 3.863699805489752*^9}, {
   3.863699907217247*^9, 3.863699944316393*^9}, {3.863700788168758*^9, 
   3.8637008845809517`*^9}, {3.863702046275758*^9, 3.8637020830100203`*^9}, {
   3.863702595245346*^9, 3.863702645292355*^9}, {3.863884194660141*^9, 
   3.8638842031804175`*^9}, {3.8638909914788537`*^9, 3.863891009810995*^9}, {
   3.863891113237941*^9, 3.8638911537729845`*^9}, {3.863891279619763*^9, 
   3.8638912855948534`*^9}, {3.863891344230113*^9, 3.863891351574766*^9}, {
   3.8638925953132634`*^9, 3.8638925989880886`*^9}, 3.8641412354391413`*^9, {
   3.864141550931038*^9, 3.8641416655529428`*^9}, {3.8642361939817247`*^9, 
   3.864236202546955*^9}, {3.864236595072028*^9, 3.8642366322340117`*^9}, 
   3.864236674617306*^9, {3.8643997929515553`*^9, 3.864399794341104*^9}, 
   3.8647401548354416`*^9, {3.864740367280447*^9, 3.864740382577551*^9}, {
   3.8647404140084915`*^9, 3.8647404181541643`*^9}, {3.864740488606616*^9, 
   3.864740495693348*^9}, {3.8647405289317093`*^9, 3.864740542820265*^9}, {
   3.864741074561078*^9, 3.864741079667444*^9}, {3.864741140307036*^9, 
   3.864741143520008*^9}, 3.8648372672245474`*^9, {3.8648373045645533`*^9, 
   3.864837353847723*^9}, {3.8648373920424533`*^9, 3.8648375909655547`*^9}, 
   3.864837839079855*^9, {3.865356690975731*^9, 3.865356718635888*^9}, {
   3.8653568425522747`*^9, 3.86535688554853*^9}, 3.865356998743344*^9, {
   3.865357063056785*^9, 3.865357082860453*^9}, {3.865357192303467*^9, 
   3.865357202547192*^9}, {3.865357324369248*^9, 3.865357327732173*^9}, 
   3.8653573727697754`*^9, {3.8653584117496357`*^9, 3.865358421880398*^9}, {
   3.865359119417409*^9, 3.865359146498752*^9}, {3.865359181803466*^9, 
   3.865359209189711*^9}, {3.8654491379879255`*^9, 3.8654492290188136`*^9}, {
   3.8659657476182566`*^9, 3.86596576077604*^9}, {3.8659665703366394`*^9, 
   3.865966589562479*^9}, {3.866052164082869*^9, 3.8660522776132393`*^9}, {
   3.8660523127439046`*^9, 3.8660523189908895`*^9}, {3.866052389927002*^9, 
   3.8660524026289043`*^9}, {3.866052461586882*^9, 3.8660524626125507`*^9}, {
   3.8661445639235554`*^9, 3.866144564756291*^9}, 3.8662991531581025`*^9, {
   3.8663105616671824`*^9, 3.8663105911556373`*^9}, 3.8667363828997054`*^9, {
   3.866736420986347*^9, 3.8667365360060267`*^9}, 3.8667370916337423`*^9, 
   3.866738628056218*^9},
 FontWeight->"Plain",
 Background->RGBColor[
  1, 1, 0.85],ExpressionUUID->"580f172d-8037-47c3-b83f-1fe6df9c977b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ListBadICs", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.5919233888024076`"}], ",", 
       RowBox[{"-", "2.626560404936485`"}], ",", 
       RowBox[{"-", "1.8337732091632066`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.8988421797170734`", ",", 
       RowBox[{"-", "2.781568090526754`"}], ",", 
       RowBox[{"-", "1.7208327942083077`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.5130003928325353`", ",", 
       RowBox[{"-", "2.7638782645015807`"}], ",", 
       RowBox[{"-", "1.5499618641831363`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.1258783007678108`"}], ",", 
       RowBox[{"-", "3.075660607934064`"}], ",", 
       RowBox[{"-", "1.8180933102904318`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1.0862158325400353`", ",", "1.389077323652403`", ",", 
       "1.2418614212135708`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.410811763077299`", ",", 
       RowBox[{"-", "2.6799695626956286`"}], ",", 
       RowBox[{"-", "1.249504352429808`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1.8018187254571911`", ",", "0.6312196180519329`", ",", 
       "0.3007314035275339`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1.6639286656315342`", ",", "0.3762926167702396`", ",", 
       "0.9290478726251834`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.03706862009377243`"}], ",", "1.2622064778502988`", ",",
        "0.8466788889730772`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.5434651973062383`"}], ",", 
       RowBox[{"-", "2.601835119680123`"}], ",", 
       RowBox[{"-", "1.7656478532020108`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.277167056780228`", ",", 
       RowBox[{"-", "2.939647560942354`"}], ",", 
       RowBox[{"-", "1.4975993973103163`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.591878596354511`", ",", 
       RowBox[{"-", "2.898678940703004`"}], ",", 
       RowBox[{"-", "0.8043365992636904`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.8881446664424688`", ",", 
       RowBox[{"-", "2.3394205463410316`"}], ",", 
       RowBox[{"-", "1.837011306641183`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.0744667175310116`", ",", 
       RowBox[{"-", "1.7285609705780498`"}], ",", 
       RowBox[{"-", "1.954902635840356`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.9498789296971752`", ",", "1.4434997322554963`", ",", 
       "1.0211631207173442`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.9096980484776003`"}], ",", 
       RowBox[{"-", "1.6160359759348495`"}], ",", 
       RowBox[{"-", "1.9523905732877624`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.401393896381272`", ",", 
       RowBox[{"-", "2.488365977780391`"}], ",", 
       RowBox[{"-", "1.3431904393576986`"}]}], "}"}]}], "}"}]}], 
  ";"}]], "Input",
 CellLabel->
  "In[3637]:=",ExpressionUUID->"e4a00a5f-0f4d-44bd-8fd8-356f3e97c1c4"],

Cell["Test the working with random initial conditions", "Text",
 CellChangeTimes->{{3.864919546243415*^9, 3.864919566793731*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"74e82f71-7d3c-4f7a-b18d-cc3109df4131"],

Cell[CellGroupData[{

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"n", "=", "15"}], ";", 
   RowBox[{"\[Tau]", "=", "5"}], ";", 
   RowBox[{"\[Tau]1", "=", 
    RowBox[{"\[Tau]", "*", "1.25"}]}], ";", 
   RowBox[{"A", "=", "0.2"}], ";", 
   RowBox[{"order", " ", "=", " ", "4"}], ";", 
   RowBox[{"maxIter", " ", "=", " ", "100"}], ";", 
   RowBox[{"maxError", " ", "=", " ", "0.01"}], ";", 
   RowBox[{"uMax", " ", "=", " ", "5"}], ";", 
   RowBox[{"maxCount", " ", "=", " ", "5"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotMin", " ", "=", " ", 
    RowBox[{"-", "2"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotMax", " ", "=", " ", "2"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Min", " ", "=", " ", 
    RowBox[{"-", "\[Pi]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Max", " ", "=", " ", "\[Pi]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]dotMin", " ", "=", " ", 
    RowBox[{"-", "2"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"\[Theta]dotMax", " ", "=", " ", "2"}],
    FontWeight->"Plain"], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"xdotMin", ",", "xdotMax"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Init", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]Min", ",", "\[Theta]Max"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]dotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]dotMin", ",", "\[Theta]dotMax"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "xdotInit", ",", "\[Theta]Init", ",", "\[Theta]dotInit"}], 
     "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"maxJ", " ", "=", " ", 
    RowBox[{
     RowBox[{"uMax", "^", "2"}], "*", "\[Tau]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"InitGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"EInitial", " ", "=", " ", 
   RowBox[{"Energy", "[", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"ICs", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", "A", "}"}]}], "]"}], "]"}]}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
       "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
       "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "Jff", ",", "K", ",", 
       "time1", ",", "time2"}], "}"}], "=", 
     RowBox[{"ffCartPendulum", "[", 
      RowBox[{
      "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", "order", 
       ",", "maxIter", ",", "maxError", ",", "uMax", ",", "maxCount", ",", 
       "InitGuess", ",", "maxJ"}], "]"}]}], ";"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x1b", ",", "xdot1b", ",", "\[Theta]1b", ",", "\[Theta]dot1b", ",", 
      "u1b", ",", "J"}], "}"}], " ", "=", " ", 
    RowBox[{"testSwingUp", "[", 
     RowBox[{"ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "u1a", ",", "A"}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x1c", ",", "xdot1c", ",", "\[Theta]1c", ",", "\[Theta]dot1c", ",", 
      "u1c", ",", "J"}], "}"}], "=", 
    RowBox[{"testWithFBClipped", "[", 
     RowBox[{
     "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
      "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A", ",", "uMax", 
      ",", "K"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"p1a", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1a", "[", "t", "]"}], ",", 
        RowBox[{"u1a", "[", "t", "]"}], ",", 
        RowBox[{"x1a", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1a", "[", "t", "]"}], ",", 
        RowBox[{"xdot1a", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1a\>\"", ",", "\"\<u1a\>\"", ",", "\"\<x1a\>\"", ",", 
         "\"\<\[Theta]dot1a\>\"", ",", "\"\<xdot1a\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Feedforward solution \>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"p1b", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1b", "[", "t", "]"}], ",", 
        RowBox[{"u1b", "[", "t", "]"}], ",", 
        RowBox[{"x1b", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1b", "[", "t", "]"}], ",", 
        RowBox[{"xdot1b", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1b\>\"", ",", "\"\<u1b\>\"", ",", "\"\<x1b\>\"", ",", 
         "\"\<\[Theta]dot1b\>\"", ",", "\"\<xdot1b\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<True Dynamics \>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"p1c", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1c", "[", "t", "]"}], ",", 
        RowBox[{"u1c", "[", "t", "]"}], ",", 
        RowBox[{"x1c", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1c", "[", "t", "]"}], ",", 
        RowBox[{"xdot1c", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1c\>\"", ",", "\"\<u1c\>\"", ",", "\"\<x1c\>\"", ",", 
         "\"\<\[Theta]dot1c\>\"", ",", "\"\<xdot1c\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<feedback solution \>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"Grid", "[", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"p1a", ",", "p1b", ",", "p1c"}], "}"}], "}"}], "]"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Tau]New", " ", "=", 
    RowBox[{"\[Tau]", "/", "3"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Init", " ", "=", " ", 
    RowBox[{
     RowBox[{"\[Theta]1c", "[", "\[Tau]New", "]"}], " ", "-", " ", 
     RowBox[{"Round", "[", 
      RowBox[{
       RowBox[{"\[Theta]1c", "[", "\[Tau]New", "]"}], ",", 
       RowBox[{"2", "*", "\[Pi]"}]}], "]"}]}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"IC2", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x1c", "[", "\[Tau]New", "]"}], ",", 
      RowBox[{"xdot1c", "[", "\[Tau]New", "]"}], ",", "\[Theta]Init", ",", 
      RowBox[{"\[Theta]dot1c", "[", "\[Tau]New", "]"}]}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"initGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Lambda]1ff0", "[", "\[Tau]New", "]"}], ",", 
      RowBox[{"\[Lambda]2ff0", "[", "\[Tau]New", "]"}], ",", 
      RowBox[{"\[Lambda]3ff0", "[", "\[Tau]New", "]"}], ",", 
      RowBox[{"\[Lambda]4ff0", "[", "\[Tau]New", "]"}]}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.863699832878002*^9, 3.8636998879424076`*^9}, {
   3.8636999587037973`*^9, 3.863699966845196*^9}, {3.86370068689312*^9, 
   3.863700742439372*^9}, {3.863700775571786*^9, 3.8637007771342835`*^9}, 
   3.863700945211579*^9, {3.863700998427576*^9, 3.8637010107976217`*^9}, {
   3.8637016473912125`*^9, 3.863701669091281*^9}, 3.863702035899074*^9, {
   3.863702126179226*^9, 3.863702160529252*^9}, 3.86370251869481*^9, {
   3.8637025705572357`*^9, 3.8637025888983755`*^9}, {3.8637026681560507`*^9, 
   3.8637026692896886`*^9}, {3.8637027081322765`*^9, 3.863702762285972*^9}, 
   3.8637029838601737`*^9, 3.8637033230088053`*^9, {3.863884225388322*^9, 
   3.8638842448491*^9}, {3.8638842916161537`*^9, 3.863884295082047*^9}, {
   3.863891061309538*^9, 3.863891063069975*^9}, {3.863891163269951*^9, 
   3.863891163428899*^9}, {3.8638912925906177`*^9, 3.8638912940581484`*^9}, {
   3.8638913677266035`*^9, 3.8638913686183195`*^9}, {3.8638926039804945`*^9, 
   3.8638926063767295`*^9}, {3.8648376392630434`*^9, 
   3.8648376724073963`*^9}, {3.864837714278944*^9, 3.864837730198832*^9}, {
   3.8648378000064077`*^9, 3.8648378125593743`*^9}, {3.8649192769420185`*^9, 
   3.8649193477849746`*^9}, {3.864919494855133*^9, 3.8649194949211097`*^9}, {
   3.8649195280303416`*^9, 3.8649195281572976`*^9}, {3.8653430179727*^9, 
   3.865343036098905*^9}, 3.865343126059147*^9, {3.8653475497269955`*^9, 
   3.8653475530049467`*^9}, {3.8653477236523952`*^9, 3.865347782090714*^9}, {
   3.8653478250659747`*^9, 3.8653479145413723`*^9}, {3.865347947982681*^9, 
   3.8653479716121283`*^9}, {3.8653525506493053`*^9, 3.865352599733616*^9}, {
   3.865352652578721*^9, 3.865352654559091*^9}, {3.865353691929463*^9, 
   3.8653537130737047`*^9}, {3.8653538376038947`*^9, 
   3.8653538378768077`*^9}, {3.86535394844846*^9, 3.8653539491322412`*^9}, {
   3.865356726928239*^9, 3.86535675400958*^9}, {3.8653568966909695`*^9, 
   3.8653569073245697`*^9}, {3.8653569602766423`*^9, 3.865356975731701*^9}, {
   3.865357167158506*^9, 3.865357170606405*^9}, {3.865357223946353*^9, 
   3.8653572240363226`*^9}, {3.8653573936860905`*^9, 3.8653574653461814`*^9}, 
   3.8653581484318137`*^9, {3.8653592129605074`*^9, 3.86535921807887*^9}, {
   3.865449250153057*^9, 3.8654493036779404`*^9}, {3.8659655743007927`*^9, 
   3.8659655800469513`*^9}, {3.865965617846839*^9, 3.865965644481305*^9}, {
   3.865965768794471*^9, 3.8659657912472773`*^9}, {3.865965935003215*^9, 
   3.865965935326112*^9}, {3.8659659868356075`*^9, 3.865966006077441*^9}, 
   3.865966083507631*^9, 3.8659664582355595`*^9, {3.86596655432277*^9, 
   3.865966563962682*^9}, 3.8659666064800587`*^9, {3.8659666379409776`*^9, 
   3.865966662002268*^9}, {3.865966724901114*^9, 3.865966734984883*^9}, {
   3.8659667752089934`*^9, 3.8659667994792185`*^9}, {3.8659670983784432`*^9, 
   3.865967114308339*^9}, {3.865967415398863*^9, 3.865967415558814*^9}, 
   3.86596806058513*^9, {3.8659697572814713`*^9, 3.865969792480193*^9}, {
   3.865969847631523*^9, 3.8659698777298765`*^9}, {3.8659699125237284`*^9, 
   3.8659699227194633`*^9}, {3.8660520784155097`*^9, 3.866052078606448*^9}, {
   3.866299038992057*^9, 3.866299063807024*^9}, {3.8662991135359306`*^9, 
   3.866299117442664*^9}, {3.866299188589633*^9, 3.86629919001517*^9}, {
   3.866299354438949*^9, 3.866299364496692*^9}, 3.8662994378149586`*^9, 
   3.8662994758636427`*^9, 3.8662995455700784`*^9, {3.866309716236847*^9, 
   3.86630980613275*^9}, {3.8663098363239756`*^9, 3.8663098541502047`*^9}, 
   3.8663105182622347`*^9, 3.866310619892336*^9, 3.8663117939323*^9, {
   3.8665656447826576`*^9, 3.8665656490393023`*^9}, {3.86666037409522*^9, 
   3.8666605929433*^9}, {3.8666606653571625`*^9, 3.8666608053664308`*^9}, {
   3.866660839553507*^9, 3.8666608737455826`*^9}, {3.866661162186427*^9, 
   3.8666611737737226`*^9}, {3.8666653738348045`*^9, 3.866665397429268*^9}, {
   3.8667344208606143`*^9, 3.8667344797394304`*^9}, {3.8667353231215725`*^9, 
   3.866735333097335*^9}, {3.866735385339385*^9, 3.866735418014782*^9}, {
   3.866735702678417*^9, 3.8667357070869875`*^9}, {3.8667358235761895`*^9, 
   3.86673582400605*^9}, {3.866735896269603*^9, 3.866735924112569*^9}, {
   3.8667361218833976`*^9, 3.8667361220503435`*^9}, {3.866737159880598*^9, 
   3.8667371629755936`*^9}, 3.8667373705322485`*^9, {3.8667375563659506`*^9, 
   3.8667375763234744`*^9}, 3.866739987559099*^9, {3.8667402825863724`*^9, 
   3.866740283643031*^9}, {3.8667403886539574`*^9, 3.8667403924007425`*^9}, {
   3.8667405674789343`*^9, 3.8667405865157566`*^9}, {3.8667407977972016`*^9, 
   3.866740821291578*^9}, {3.8671630011884055`*^9, 3.867163020098357*^9}},
 CellLabel->"In[84]:=",ExpressionUUID->"c47d3c4e-60ca-4c63-8b5c-ced31cd89cdf"],

Cell[BoxData[
 RowBox[{"-", "0.2`"}]], "Output",
 CellChangeTimes->{
  3.8648376866338243`*^9, {3.864837721244707*^9, 3.8648377460817285`*^9}, {
   3.864837800602215*^9, 3.8648378151965265`*^9}, {3.864837882180011*^9, 
   3.8648379006680717`*^9}, {3.864917359659708*^9, 3.8649173767071624`*^9}, 
   3.864919300876232*^9, {3.864919337508316*^9, 3.8649193485657187`*^9}, {
   3.8649194958228164`*^9, 3.8649195287531037`*^9}, 3.864920239187001*^9, {
   3.864921249563326*^9, 3.8649212721359825`*^9}, {3.865342438564925*^9, 
   3.865342509036396*^9}, {3.8653477634896584`*^9, 3.865347782729508*^9}, {
   3.8653478492912292`*^9, 3.865348013067874*^9}, {3.86535368874548*^9, 
   3.8653536939258237`*^9}, {3.8653538219528966`*^9, 
   3.8653538384286294`*^9}, {3.865356737715789*^9, 3.8653567547593403`*^9}, 
   3.8653569273791575`*^9, {3.8653569657139025`*^9, 3.86535700435555*^9}, 
   3.86535703851363*^9, {3.8653570911278105`*^9, 3.865357172559778*^9}, {
   3.865357210731576*^9, 3.865357232535606*^9}, {3.8653573843380775`*^9, 
   3.865357407024825*^9}, {3.8653574402422056`*^9, 3.865357560552746*^9}, {
   3.8653576116883984`*^9, 3.8653576483786693`*^9}, {3.865358188766919*^9, 
   3.8653581946510377`*^9}, {3.865358314589696*^9, 3.8653583435974226`*^9}, {
   3.8653592266591263`*^9, 3.865359247679407*^9}, {3.865443792998208*^9, 
   3.865443801104616*^9}, 3.8654440595339727`*^9, {3.8654487336752205`*^9, 
   3.8654487504428587`*^9}, 3.8654492637776985`*^9, 3.8654493114634485`*^9, {
   3.865965582539151*^9, 3.8659656451141005`*^9}, {3.8659657927138066`*^9, 
   3.8659658125544496`*^9}, {3.865965935915921*^9, 3.8659659557085795`*^9}, {
   3.8659659882041674`*^9, 3.8659660068222017`*^9}, 3.8659660863577166`*^9, 
   3.865966459016309*^9, {3.865966598898487*^9, 3.865966735717648*^9}, {
   3.865966781206072*^9, 3.865966802194347*^9}, {3.8659670998539696`*^9, 
   3.8659671350117044`*^9}, {3.86596737708314*^9, 3.865967416340561*^9}, {
   3.8659680911663313`*^9, 3.8659680979531565`*^9}, {3.8659697724146223`*^9, 
   3.865969803929524*^9}, 3.865969850623562*^9, {3.865969890971634*^9, 
   3.8659699231933093`*^9}, 3.8660390961121736`*^9, 3.8662990686684504`*^9, 
   3.8662991222131176`*^9, 3.8662991578515816`*^9, 3.86629920027185*^9, 
   3.8662993658012686`*^9, 3.8662994388686166`*^9, 3.866299477311173*^9, 
   3.8662995466917143`*^9, {3.8663097469868937`*^9, 3.8663098065886*^9}, {
   3.8663098368937907`*^9, 3.866309854605058*^9}, {3.866310502074473*^9, 
   3.866310510541732*^9}, {3.8663105771391745`*^9, 3.8663106410764785`*^9}, {
   3.866311168140868*^9, 3.8663111757344103`*^9}, {3.866311795831685*^9, 
   3.8663118226190147`*^9}, {3.8665635751502676`*^9, 3.866563580078697*^9}, 
   3.8665655738792553`*^9, 3.8665657789678917`*^9, {3.8665767519812546`*^9, 
   3.866576756524807*^9}, 3.866660334114994*^9, 3.866660482879464*^9, {
   3.866660550000019*^9, 3.8666605935181146`*^9}, {3.86666067663256*^9, 
   3.866660712885977*^9}, {3.866660752264395*^9, 3.866660805816285*^9}, {
   3.8666608513737297`*^9, 3.8666608747462626`*^9}, {3.8666611627682395`*^9, 
   3.866661174481497*^9}, {3.866665386657707*^9, 3.86666539847793*^9}, 
   3.866734379456105*^9, 3.8667344861903286`*^9, 3.8667353661046257`*^9, 
   3.8667357177695217`*^9, 3.866735753672871*^9, {3.8667358006986127`*^9, 
   3.8667358274309397`*^9}, {3.8667358972192945`*^9, 3.8667359268736725`*^9}, 
   3.8667361227441196`*^9, {3.866737147475623*^9, 3.8667371639832687`*^9}, 
   3.8667373709801025`*^9, 3.866737577156204*^9, 3.866737652870638*^9, {
   3.8667377588552485`*^9, 3.866737781921764*^9}, {3.8667383832806406`*^9, 
   3.866738390601266*^9}, 3.866738566389228*^9, 3.8667386326267366`*^9, 
   3.8667386644044247`*^9, 3.8667390204219074`*^9, 3.8667390583196106`*^9, 
   3.8667391387805033`*^9, 3.8667395730935817`*^9, 3.8667400543844166`*^9, 
   3.8667405527697053`*^9, 3.8667406622281895`*^9, 3.866740718213024*^9, {
   3.866740809722332*^9, 3.8667408355659466`*^9}, {3.867162956213792*^9, 
   3.867162976012458*^9}, {3.867163011124227*^9, 3.867163036890986*^9}},
 CellLabel->"Out[98]=",ExpressionUUID->"b84415a4-d48a-4238-995a-3f462afa7d6f"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
l27dECmUjnCesTsrXp4yPolwnhHdmVt1X60T4TzDxb7t08rzNWyeIRyn6sUd
MsjmGfBk06cx5Wk2z2Ade1dh++Efz9ivzSEXSGGwecZYo0XsLX4mm2esa7+w
+nkBg80zYrlsH1QeowOcZ9Q2t5jHcM0DnGc4jf8yWtw1A3CeEfQ9JeS2xQTA
eYay44p7S0I0gPOMayjrT1NOB8B5hslOs/dD13MAzjMauT8/ydNvRDjPEMpY
/6iNNoBwniFHvPTy05EphPMMi/JqD0NLOsJ5RqrrOjPFEkIJzjMI//0H5xl4
G+cZeBvnGXgb5xl4G+cZeBvnGXgb5xl4G+cZeBvnGXgb5xkbNJo1ea2WAPe8
9NgKtQ4wk+18VJqvG5xNf78st5UK7pWrzhb1VACCr+vOCTAA0oG7Ys7mPDbf
2ORKkDrn94PNNwQTrURsKL/ZfONhytfSPr5uNs8ILh9/mWw9wOYZkk83Fx7R
HWbzDGn9fCPv7nE2z7jBR4gQLppm8wzlZa+b60fm2TzjRPr5+fsyTDbPoJ5Y
p2o8wkIxZa6JlCYivO4/faw4g4lEg8db6b84IDN8T/oZoznE4aH22aGHE77c
ap1X6z6E9n6X9B6Z4YLdJ1V3FD/pAs0LdwOvMbhhZHsHzcV/HFCPfNIKJpJg
zqPM2bDmWUDQ05sSXyTB08o83pdW0YFuesvmzwQydDa7UbejhAFYuxVJ/Vx8
0I/BiOHkZoItY0cjnvPzw68frGqvbGSAm+SL8TarBSB136SnFFwAnT963qSu
FYQv30t7ED/NguzSDRY35FZCg26zCl67KbA88tSCJioENeUiH6lEjQCcv2ho
o8q9FxYRzl/w8cX5C97G+QvexvnLWf0DnBZqBLhBZ/uZ0/t/A2rioGImsRf8
GW0KSFvdA1rJ6fvWK3wHm4wcw+/q9AMDEdEDbSYpbB6zEOu+xFFcx+Yx3NZT
UpuV29g85jvt14nQ8i42f5HLdbu8z6efzV/aY1zFc7cNsfnLi67QNdv3j7H5
i4T1UvjZd1Ns/vIixqZNZ2COzV8yrOkend4MNn+ZyfzUP/CRhQKLWz1MHhOh
6pmdBU7nWGj4zZH+0hgOWOOR8Sh45wL6ZLFLcziWE26e3m8vhcaQXc/fW0qf
uKB01eHmPbXNoOsHa+nKJ26oVN7gu/DmL/ipt+EvVxkPXOx+YvwA28f4HQ0b
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
FP++iAmPkh9Iwz//r/m0/9fro5//Dw8vWHo=
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{927, 2833, 2831, 433, 434, 435, 436, 831, 723, 
                634, 562, 508, 476, 855, 747, 658, 586, 531, 873, 765, 676, 
                604, 437, 832, 724, 635, 894, 786, 563, 880, 772, 917, 683, 
                904, 796}}], 
               PolygonBox[CompressedData["
1:eJwV00lsjHEYB+BvWkVtaSIhRau11L5f7MvB3lbigOBU+x4JiYPEvsaBYIoq
rQMOEhJHu252rmrf97Y3nHjew5P39/7+38zk+2amsGzD3PUZSZKkaKRT+yTp
SK7yg7KGqZlJ8ty+ndGkOKbvp78ml9GNj7papukb7TsYQwbH9f311+UldOeT
ro40A5zd0C2lB5919ZRzgoHOb+qXkccXXQPT9S/sOxlLJif1g/S35OXk81V3
jxn6l/ZdjKMVp/SD9bflFfTkm+4+M/Wv7LsZTxYV+iH6O/JKCviue8Bphjq7
q1tFIT90D5mlf23fwwRaU6kfpq+RV9OLn7pHzNa/se9lIm3i2el+m2eYF9N1
w3W18hp6x7T/M8/zy/lCe1N8B/Gc5C6UyJvMtpRz2X7QzKeax15XbL7VHzb3
mdvMzlQwyb7RzCLNJfsBM4+qeN/4Ls0/5lHzbNy3mUsl8+1bzA5clQ+ZBXGd
zx1h1unWslXOoU/sZsIFucl1i+RmOU0pm+3ZXJGfOC+R38n7mUx2/H50f80q
FsR03UhdvbyOvjHtKS7Kzc4Xyy3ykXhW8dsxuzJHfuq8VH4f988U2lGtH6Vv
kOMPVkSL7hnn+A+Dr2xz
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{398, 2832, 2829, 609, 698, 806, 403, 512, 567, 
                639, 728, 836, 450, 482, 536, 608, 697, 805, 402, 511, 566, 
                638, 727, 835, 449, 481, 535, 607, 696, 804, 401, 400, 399, 
                448, 480, 534, 606, 695, 803}}], 
               PolygonBox[CompressedData["
1:eJwV0MlLlAEcBuAvhYImxwyFqIN4al+E1PZDtp7S0YIM0zqUJ8fUNIMgIQoy
s6JDiwSpaVbaQv0PZVlpex7TtpujtqiHnu/w8L6/95sZZibrUDxWmRQEwQz6
iEaCIJWHhgf0MsQU2V7YwCCbk4Ogx/aFSVbbjjPAJs/u2z7zj1W2et6w0bN7
tnn6Li7xi732T/a/rHTX8ZoN9ru2NH0nF/nJHvtHe7HeygQHbX9sK/RjvGK9
rdv2VI/qJ9ivtzNNhXuu7GWWXsMOPUM20qL/oFj/4HMyZROPbVdlhHqKwu8h
53OaG+7LclyWy9/ee1Mu5Gz4m+xXZDJxlruvyzROUutukf1ynbzj/VmymSe2
azKFBkrcC+QZ2vQpjuipsoeZejXb9XR5igv6d4r09z77kT5bryMWfhfGKHNP
eN6tJ+mVLNNreMlad5fn+/RbTHLYFpXbaOYbMds7rysMvzsJDoT/j22pXs0L
8mydthR9K+cZodD+1l4Q/u+MUmobsy3Rj9JHru22bY6eTxPDFNgH7QkWu6t4
To69wxbRt3COr+y2D9hHWeSO84w19nbbf2PPabc=
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwt03ecz3UcwPHLvpN9xznznJVo2KuMVJeV6GTk1JUV3UnK3itEj4oUbYSi
SCjRMNrKrBTtQkTKanu+H4/+eN7r/fn87vH7fX+f7/eXnpPXNfeChISEMf5E
a/nzqY7UBdpfU5jEQOssLcA4tlvfpVWZTqb1tXrm//fboHdqRaZyn3VfLc4n
5uGaQQNzcz2iz3OHuTxjzL00kQ9i5nrzv/omD5KP2vY+00cZxHVk2jurrzKT
hrSw97O+wFh6k5+L7H+uj8Vn055GFKAghShMHf+3XxcymA40pggXe+0LXcQQ
OtKElvaP6krGcTOJ1LX/pT4eZ0QnmnKF/WO6ivH0IYl69g/oE+TSOb6nvXP6
GrNoxpX2ftEXmRDf0TqJD83ZdDH/p2/xELdZl2aPuSiXmA/qkwwwlyXP3F0L
8k7cgzgj8x+6Ma7HXInZ5lu0BDvN92h1ZtLcupUe19H6UpyhpjGFiXE2WpQJ
fGR9t1aL54a+1jfEA8pY3jbmaWWm8bD17VqGveZ7tQYXmi/Vr/QpBprLMdR8
kxbi3TiXuJ/mP/V17udW65LsimeH1uYTuppJcW/i/dkR35uu8Rtii3kexbjM
+mt9On4r8R3i2bD3l25iTjwjtLH3q65hcnw2xbnc/jf6DMPiM+IZoa39k/oy
U8ihBPXtf6vPxvnRLZ4JrrL/m65latx3StLA/ne6mOHcGPeJUjT02ve6JO4l
WXEGlKYMyaRQlnKkUp40KlCRSlSmClVJpxoZVKeRz/hBl8Y9i+cszoIaNPba
j/ocI+J+xfemnf3f9RWmxX2nJk3s/6TLGEkPOtn7WzczN86Bq+2d0nVMp1+c
k718bDXPpxZNrQ/pckbF+1kX5j1zTzqb/9E3eCDugXUpdsc1co35tK5niLkC
M8zZWoyPzf3jzM352WYeqlV4JK5Lk+O3wb44A63JLGpbN9PDcW26QgdpKpMZ
HdeoRRjP+/H8aHpcA+cB7eukIg==
               "]], 
              
              LineBox[{144, 69, 103, 41, 70, 42, 43, 44, 45, 46, 47, 48, 49, 
               71, 50}]}, Annotation[#, "Charting`Private`Tag$16564#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1GW0VVUUBtDLo6RL6ZTuUrqURmkEBaQsMMDAVkJRsCjpklCR7mEr3dJK
qnQqjaQD5xr+mKxvf/vc994952wK9ejTpneyRCJxyj9DKZw8kfg6KZHoQnYO
6pYzjOGMoIhrvrHXlRwc0q2gvn63dT+qcFs3kqL6b627kZPDupU00O+x7k9V
EnyqL6b/Tu5OhnSJRC7ziH4VDe3ttR5ANZIxSl9c/73cg9wc1a2mkX6f9UCq
k8RofQn9D/Jj5OGYbg1jKGnvR93j5OW4bi1jGUcp+z/pnyAfJ3TraKzfb/0O
NUjOeH1p/c/yk+TnpG49TfQHrN+lJimYoC+jXy4/RYGk/5/NBprqf7ceRC1S
MlFfVr9C7klBTus2Moly9lbqelGIM7pNNNP/Yf0etUnFZH15/Sr5ae7mL91m
HtD/af0+dUgd90531ZxC+5iuq6BbLT9D4ZjWt80v+dt+R+uz8QziPsnZaS73
Ne9gLAusPzTzM41ffO5B86B+uDk43hkzGxOpa/2CmZIxzLX+wMzH1Pi58SzN
a/F+mZ/F9zZzMZkO1q+Z6Vkif2wWjOv83ormGt2zvCVnpkiszQQz5bOu6ySf
k8fQgpet07BQ3mK/uXxIHkI90sT7o7tuTuXhmK6rpFsrP0fRmNbJ+Eo+Z7+z
fF4eEfcq3h0zBy3lrfZbyIfj+3MfaZmmr6xfJ/emGOd125hORmdshnmPa9bb
60NxLui201J/JJ4J95OOz/X36jfIz1OCi7odtNIftf6I+qTnC30V/cZ4VpTk
ku5R3QV5HK3YqWutOxbPgQZkiPdHX1W/SX6RUlzWddFdjHNGa3bp2uiOy5/Q
kIxx9nQ34l7wCDNdV023WX6J0nFvrJOYJV+x31W+FGeSNrxinZZF8q/228on
5KEMkO+kUfx9ZirmyZniHMs3zelxfuTcdJRfNzMwnqXx95qF4ln72dXjvdcN
M/uab5tZmECZeEZmckYx23qwmYcp/OPz3czL+pFxRsxBZk4m0db6VTMd41gc
z8oswG8+2848Gb+bgfJdNI77ZKZmvpyZnvItcwadeMM6I8vkWX5ODXlLnAXK
clXXXXdFnkQ7duse0p2Ks00TsjBbX1O/Ne475bim20N7/ek4AzQlK3P0tfTb
4rtRnuu6vcyltr3tcc6pwA3dPuZRx96OeB5U5KZuP/NZwEIyOSOLzMUsYSl1
fW5nfG8qcUt3gA76M3HvaUY2eun+jXNDZ5a5rp5ul/wm/eSsVI7zZKZgNHOs
h5h54/8j/gNeYPc9
               "]], 
              
              LineBox[{866, 758, 669, 597, 477, 856, 748, 659, 587, 532, 438, 
               833, 725, 636, 564, 509, 478, 439, 440, 441, 442, 443, 444, 
               445, 446, 834, 726, 637, 565, 510, 479, 857, 749, 660, 588, 
               533, 874, 766, 677, 605, 891, 783, 694, 910, 802, 930, 447}]}, 
             Annotation[#, "Charting`Private`Tag$16564#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1HfcjQUYBuBjk1lWCBGF7GyZDRHZVGQTysjeympqoimj7L139h4tDTu7
hKJhq+v54/o993Of95zzfe84+dr1aNQ9SSKRuCtpIjE9WSJRP0Ui8X3yRGKX
2ctcYJbhIIXsH5m5+Y619nVmTY7yr/ePMFPyNdO8vtysTAt5mlmEnfJm8wl+
9p5u5iXduyyWy/O4PMkswGY5M2/LmVksd2aG9zaw75d7U5grupG6VEy3t+SA
rrv9svwetcjCTH1D/Q9yH4pwVXeQWTTy2o+6vjzINd0hZjOHucxjPo0d+5Nj
+lGU67rDLKBJ/J+6/hTjhu4IPfR/2d/nCbKyUN9Uf0AeQHFu6o7SU/+3/QNq
k41F+mZxfeSBlOCWbpQuNTPsz3FM95L9H3kcdcjOO7osLJG7xPl3XHP7IXkQ
JfnYnod18m2vj5bTMNO+wnyYVvJ080F2yVvM2vzi+F5xb+j2muPNJWYFnpQn
mwXjGrDFvjGufbyPu+OeMLPyDUvtq81qHKarfY5ZMs593HP2bfG5nIj/yXc/
HcfqB1OKT+x54x7nK/tX5iP859gx5h3M0q80q9A67jOzKLvl447rLV+RJ1CX
Kfb72SrniHtMzsYy+QWWes8z9iPyEEqT4FVdWmbLbTjhuD72q/KH1CMny/TP
xjMmD+UhknBS31d/LZ5LniJXPHP6Fvpj8jDKkJRT+hW0jPNrH05ZknFav5JV
rGYNa3nOsce9/jLlSM4Z/TpaxXm2v0J5UnBW309/Pe4b6nNPnGd9a/1JeQQV
SMmv+v76G3FtaEBu1uvb6E/JI6lIKn7TD9DflD+lIXnYoG+rPy2PohKpeU2X
jjlyW845bqD9lvwZjcgbz6AuO8vlF+M+dFw7+xl5NJXj++z3sl5Ow+tyeubK
q8yqtJNnmsXYI2816/C7zxtk3tbtMyfGfWFWpLE81Xwgfm/YZt9k1opzH98Z
z3w8D3zLCvsas3rcU3SzzzVLxe9MPCv27WbdON9s8t3tzbP63eYYc6FZNp7d
OA9mPjbEeTcfjedAfsPMwDy5PbPk4uyVz/vMwfHcyJ/ThC/shdgu52OcnIOV
cnc2e08H+69x71OFtLypy8h8uQMXHDfEnmCSvSn54zdF31H3W1xXqpKOi/qt
dPLaubguVCM9f+i3sZ0d7GQXz8c1if+R6mTgT/1QfRIm25txX5wzfWfd+fhb
qUFG3tJlYoHckUuOG2ZPyhR7cwow3p6TVXIP9jiui/1CfAY1mWjPz0Y5E2Pl
O1kod2K2XIJ98mXvHy4nY6p9mVmJp+UvzcLskAsyQc7FanmtWYOe8jyzNAfi
nrLvMOvF8xbX1+d3NS/G32qONReZ5TgUv5dxzc372B/3Vzx/5mPxm8P/Rrch
bQ==
               "]], 
              
              LineBox[{1298, 1201, 1127, 1011, 1408, 1284, 1187, 1113, 1062, 
               974, 1387, 1263, 1166, 1092, 1041, 1012, 975, 976, 977, 978, 
               979, 980, 981, 982, 1388, 1264, 1167, 1093, 1042, 1013, 1409, 
               1285, 1188, 1114, 1063, 1431, 1308, 1211, 1137, 1454, 1331, 
               1234, 1481, 1358, 1509, 983}]}, 
             Annotation[#, "Charting`Private`Tag$16564#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1XfcjlUcx/GLzIZRQho2lVCSUsqOlPBY2RmpyN6y996yN5WMBtmkhRQq
shpUyqaiiErv3x+f13eccz/3fa5znfPkbdEhpX2qJEmmpU6Sk2mT5Fz6JKmB
r9IlSQ+Uwe3InCFJOur/4KejMU6Zf15XE1/LPfE47kAW8zvpL/Az0ASnzf9N
Vwt75V54AveaO1p3E1bJdyKrrrN8kZ+JpnhUN1t3Fz6Rz/h7v/Mp2Cf3RhVz
lspFUFYuIo/hM2G1fBdu1nWR/+RnIUVeLZdCM/kxeQ6fGz35w/RTfQv+E/5J
nPXdf9Da+MZYW2O7+Ff5qvxb/Gv0PtqPHqWLaTnj99Gx8gSamXal++l8+n48
W7pFnhnz6XB6ki6luY3fQrvKY+lfckf6tTybrx1/g38Yg/lf6POxj/xcPg96
8d/SbfqW/Kd8FZyzpgu0DvYb64OnjC+Ti6K8XFQex2fBGjkPsum6yZf4OWiO
8/7WRV1dHJD7ogLy4jdjf+rr4aDcDxWRD7/Hc43fEZ+PefgLl3AZf0f2ufo4
ZH5/VEJ+3Op3dNdf5ufGfuFKfFb3HA7LA1AZBZDd/B76v/l58SxwNb5H1wDf
ygNRzbzlcrHYe7mYPJ7PirVyQeTQ9ZSv8PNRR14jP4JWcS7keXxebJdbydv4
qvgn1kUb4jtjrxjbzQ/in+ZX8MXRn/8x9kpfnJ/AT6Q30270AF0XZ43/gJ9F
y9MR9BR9ixYynpP2ksfRq3InuleeSxfIdelaeRotTYfQX+nr9IU4s3S+PJnm
o73pd3SHsRf47fxT+Ne6rtBG+N7YYDxjfKV8f6xdvl+eyN+C9XJh3KbrHc+F
X4h68jr5UbSWy8bv5PPHeeO/pwvpZ8Za0x1yNfzn+6/SxvjB2JB4n3E3rhlL
6D/GmuAIPzT2GvcgFf7VN8VRfljsRdxVyOU7Xo318YvwIlLjv7g/8CM/PNYa
90/cn+b3id/DL8ZLuC5+Q5xN/MSPQHU8YO4kXTZsiLsi7lNdX/kavwQvIw0S
fXP9z/xIPIsSusm6W7Exzmvcp7p+chJ7KNeX1/OPoY1cTl7IF8BOOW2sX9dC
PsaPit8mvy0/gBryg/IUPju68wfpprin+a18hTgvcd/K/flU6Mzvo2/on+M3
8NNpGTqUHo8x2tZ4ebpInkIL0j70B7qIfh7PPPZbnkOfpqPoGbqcpov9oC3l
MXEHyu3oHnl0PCf+Hb4EBvA/0Zr6kvxUPgc2y83kD/mKcf7k3PIAPjXejHMa
d5pusVwIX8jpY291reRf+TGoFe85MsS+xRkydpwfixQ8pHtNlxNb4h2Ie1U3
UL4OS+UG8kb+cbSL+1JewhfGrnin5J38M8gYeyi35k/w7fkv47zzNfh3+Qcx
kP+Z1taX4qfxk+httAc9RBfEXWL8efqRPJtWoiPpabqMloh7nQ6Sx9M0tAv9
hs6L/4XGG9JN8gz6BB1GT8RzpO3jDqevy1Pp3bQvPUJ3x/see85Xx/VyOvlF
/iTfgf8qvpevyb/Hl0Qd+WF5Op8LW+Xm8sd85Vi/nE8ezKeNdciN5M18WXSI
/xPyG/w92CPfEPure0k+xU+IuxKP6GbobseH8R4hv26InC7eSbkjbox3QP+y
7jQ/Me42lNbN1N2Bj+J9QAHdUDk9VsQdjZuQUd9Gd4afFGc59g4F9cP0GbBS
7oxMuD7Ok+4sPznOXTwXFNIPj3cFb8tdkDnWqH9Fd46fEu9drA+F9SPi+eMd
uSuyxJr07XTn+anxrsur5IcwiD9Gl9D/AQj9UrA=
               "]], 
              
              LineBox[{1947, 1821, 1731, 1593, 2088, 1929, 1803, 1713, 1653, 
               1553, 2061, 1902, 1776, 1686, 1626, 1594, 1554, 1555, 1556, 
               1557, 1558, 1559, 1560, 1561, 2062, 1903, 1777, 1687, 1627, 
               1595, 2089, 1930, 1804, 1714, 1654, 2118, 1960, 1834, 1744, 
               2154, 1996, 1870, 2187, 2029, 2221, 1562}]}, 
             Annotation[#, "Charting`Private`Tag$16564#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1GXUFGUYBuClu7sURGmQUkAEaQmROhISSiihdEoj0kp345Hu7g7pkO5u
SUkJvd4f13nu+9mZ3e+b2dlMjVpXbxUlEonkjBqJLI0dibSOG4ncixOJ9KMQ
UblqP9Q+Pn/oNcnIMvs2dvfl/hQmGtfsh9knYKZei0wst29r90AeQBGiM9Mu
M+vlllx33HA9IbP02rzHCvt2dg/lgXxCDGbZvc8GuRU3HDdCT8RsvQ6ZWarn
ZbfclZWOa68/kgdRlA16UY7KMZktf8BGuTV75Qpclm86f6ScmDn6abM2X8s7
zNKclW+bzcLfGK6ZmY9n7NEvm98SiReJdNMPy1X4l5v63+YPxPT6Kp/XQX5s
/9AcbJ4wv+INn+obw+Q5x8K1NJsQ1fmx9DlyFv5hk37BrE8beZ9ZkSvyLZ81
Sk7CXL0uO+UynJM/CPdTzs9euTurndMxvLc8hGLEZq5dVjbLbcP1cNxoPSnz
9HpkYY19J7sn8q8UJw537NfS2WtP9d/4jLjctV/HejbQJVxb+6GUIF64hvYb
+SlcF30YJYnPPftNdPXaC304pUjAffvNbGEr3Rzz0n4EpUnIA/ttdA/3TB9J
GRKFe2Q/xj4Z8/X6ZGW7fQ+7V/IoypKYeXbZ2CK345HjxurJWaA3IFt4DvQC
7JN7hO+a43rqr+XRlGOTXozjchLmy9nZKrdnv1yJq/Jj54+TU7BQP2PW4Rt5
l1mW83L28MzIBdkvXzEb0lM+YlYN/xO3wnU1fySW791O798rfEfD/2SOMU+a
NXnL5/pms3i4B5wIz7D5HdGcn1RfIOcI3w226RfNBnSQD5hfcC18V8zm4Tvo
M8ebKVlkfzY8l+FZk/80y3FBzsEq+SMOyFfNRkTxub30v+Rq3A7Xwnv2Dn+z
PJbyJOOJ/QT7VCzWG5IzfI59H7v/5HFUIDlP7Xezh73sYz8HOMghfg6/CYx3
fEVS8Mx+ol1qluiNyBV+M+z7hr+ZCXolUvLcfpJdGpbqjckd7pX9L+E3gYn6
F6RioZ6T7XJHXjhusp6WZXoT8oTnXP+Yg3LvcI0c1y/cKybpldkif8ZJOTWL
5FzskDtxUK7Mdfml86fI6ViunzPrhvsv7w7fDy7KH4bfCLkQh+RrZmP6yEfN
6uEZ4E54ds2WxHYfj3r//nJ0HjPZ66fMWuHe8KW+1SwRnm9O6TfN78M5zk+j
L5Zzh98fduqXwvNBZ/lQeA9uhN8js0X4LfCZU830rLA/b9YL7ynvMctzSc7L
Wrkwh+WfOSbX4G7I3meAHIMpehW2ySU5LadliZyHXXIXXjlnmp6BlXpT8rFO
L8IRuS/HHTdQj8lUvSrpeG0/3e4dVunNyM8J+0HhmWaaXo30vLGfYfcuq/Xm
FAjPuP3gcA+YrlcnA2/tf7fLyBq9BQXDPbEfYheHGXoNtsulOCPfMpuGa+Ge
/A9OPz+T
               "]], 
              
              LineBox[{2607, 2503, 2425, 2303, 2723, 2593, 2489, 2411, 2357, 
               2265, 2700, 2570, 2466, 2388, 2334, 2304, 2266, 2267, 2268, 
               2269, 2270, 2271, 2272, 2273, 2701, 2571, 2467, 2389, 2335, 
               2305, 2724, 2594, 2490, 2412, 2358, 2747, 2618, 2514, 2436, 
               2773, 2644, 2540, 2799, 2670, 2825, 2274}]}, 
             Annotation[#, "Charting`Private`Tag$16564#5"]& ], {
             Directive[{
               Opacity[0.2], 
               Hue[0.67, 0.6, 0.6]}], 
             LineBox[{396, 397, 395}], 
             LineBox[{932, 933, 931}], 
             LineBox[{1511, 1512, 1510}], 
             LineBox[{2223, 2224, 2222}], 
             LineBox[{2827, 2828, 2826}]}}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"Feedforward solution \"", TraditionalForm], 
         PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1a\"", "\"u1a\"", "\"x1a\"", "\"\[Theta]dot1a\"", 
           "\"xdot1a\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
LMv+lOt5Mxmlhl04ccWPjqkKWvXtHWzI+SZjNZfIDJ7xwrtLGJzITe/gOt64
Nkhr8defYeNGZoZx1X/po6DwnCfWnpcHdb9RLKLPTIPvOrjTzsH8nq5If1iz
ngpzKWo5G3j5UAQH35HPZTQQDfmlWirIj7J1UpsPs9PB7P75X2vEBZD7k9Jt
VdLM9ZiqzGTpakEUsktE6a7yHGxrNGfjihRFkgWapMPv5vFGW/pp79X/7P17
aZGeTME/e7PdWf1D9A0JHZc+IPmYOR/5FgdafgaRUYPzHP/xwwz880B4V+w7
NsS7q/aFB8ccFvO4d2bmGzd6GvDycUrBFAhvfHYjtJQHGcgU1Uu7z8FZp/Xr
wr7yInONq7xrHjLzWc/0+rwqPjQWHEHyYa4/nin39tX8Yvpj/5F8/9s08Nun
gWjs/+6vzvBG0W4pEgplbPBY/Y2OO3liuKjiZKSJNavOjjPwJu6Vmw/KsaGj
No4GZ0JoWFhh5oHCfl4kb/K4Tz6JCsEUbZ3MY0z/Npuw/fgMDSo/Dvr+PMaP
rEzpObLdNEBv5ZP/FjHzZWunXROfF/Hzq6fsoOOfPTwFHzv9tSehLX3nqY2v
GJg0//bwxD0ycgluG/n8nIHV648NCDxmQwckW9efzJ3DbpcjWhqieNHy87R0
Jz0aMMjr16sl8iFX0WcT4kx/fCjOMENlShQde7F9Fd2QXHg9iiMLz5DQcLZX
JPssA1dUFrKPb+BDZu1rnvV2MOPX6oudR5T5Eenm9GzRNA0eNBbL6GSRkFmB
ZlZmMwOLkNVsPuWQ0YZYnUuBM3S8PijJyqyPF1XF1s07fGDmWyL7n2qOMNd7
t8SmAwXocN7ywJmt28lIJ6D+YEIrA99k/x3oZMmHHLc8SRXkpMOGbfagd5Mf
3dr9otKKGf8pvjJ81RP/7MFwuO/CfpWMsrzeRlW+Z+CqPR2/bMP5UP2bhfhU
ZnyNbL45fnSIaU8PviGpFeTCz1Zpwqv7SChhMHyr2DQDmxQyWgVl+NAPwXMC
7nU02Gcs+fzZcn4001Izyz9Pg4KYO3eSYklotczeu35VDBzspN1+L4UNSYxp
sFsFzuJnxxnKLq18iHOpnX44M38M2z39KWANGZWHV9Bj+hmYbUbAJtiID6ne
C3MxWaDBxlJLF1oBH2o98/LKZab9h22POYgzRFEMdUFAPJRcuLZez9iQi5kP
x7/gLWfe3w5+saL+MhKqb0SMjj4G7qn3aGZf4EMagwkn7XnoIBEZwKjSIqN0
rxCBS78YuFY4INfEhQ+pTJOTzzPjneT7hVMh9H/2Iuq5y5XfaAYrkpHrkbS4
astGaFa84qBJ6YFjTe4xUivaQVOw9yJ3di3QntvmtpztBv9tDXB2yBuI+u5n
24G9/qblrPru6+J6do7D9az6bomDlccllxZWPZfuciBzW0I3q577S7VHylqd
wqrnkqI0j25tGGLVc9uS31WaFY2z6rkHNb9pxXVNs+q5a17UL0Z+o7LquRtP
Y+uiMwycfr6M7Y8uGUXCEJdIMQOnSP2ydjJmQ52bDKvX21HxyHrpr8mG7Oh+
vNl0V+k4tqz2vWTowIkorqt/Jj+tgLPLF1pj73EhSfOQk+OVfdBzNbfygRs3
imi33KV+aBLKC86svvuEByWEzSWtwLNwXquvotGJF3EI6z13kqGBf3l5V9Fz
PjTTrZ5lIkgHofCBdo1n/Ki39XTcXCYN1koIvbB6I4D4nH9+UTlIBb460d82
MYLIhMc9sZo+A5t6DeY4IoRQSM/mbxobpoA2Peorm7gEyZ5ZRgo5MQaVybzn
4YIo+jFgcYfiQsXVspr0W52iKGg7N/uPn6TCuaSgF90m//yViKl57lvbf+9f
K+V5w2a9ZqD+ulBbkN0GSH/Pa/7dnfBl36ets/tK4HPHw/mME72w/gwnip7O
YtW/jdJrDwfF/mbVs1PEzCveWvWy6tl8ViE10WcHWPVsqhO+eYA+yqpfqw0p
vBmmz+LFZRwKyu8WIVmPz7pYkY73b/GF8BoSkpI7EnlghIGbLtNPn2gkoxxD
d0pKBB1zNUifG25hQ1oJOaf2qc5g6c9DFxrnONF6m161lyvbQOuGwFj6AhfK
fD67q6JwFNhvtNk85ORBkR+1v5ztnYbyzOKtDBIzH1bQkK9dQYWwRO7xcQ4+
VBC43ZNRTAOegYW3dbz8KGcZz45EDjqUbq1JbhcWQNKH42Ler6QBDkPfAlYK
Ikfv+J7KHXPQtdspkxLGXL+FZsrih/OY7RGW91/1z95uAh5slNx/9j599cQ7
pQAScjiGKr9nMXD5xUsb/f3JSJa7jsf5FAM3z941Sw9jQw23gg+ukZ3DU+Y6
cgtfudHy33Z6yXFToJ0rsDGriAf5zmb/UHKcA4b9rNGVL7yoq7H4Zr8DDY7/
6UI/KvjQaM6XqFZm/BqgXPz24gc/kpIPVb18lwZEvZW4n8b5nVcExEjIxuwC
6XwBHasyfjUvFSEjldSQlELmem74aoAjnywbOrTqvVlZAg1rpz1QR8CLOiRW
LTGIpQLqkXzirM30l9MN+5dO0aCIJk1v1eZHMmO0s569NBgl7byaXyiKKjjt
lEa8FzG6JL1WsO2fPZpIiacnbUlo2z4z91wvBsaGYq8zbMhoxK92dwMznh16
Jn9D2oUNtQVr2276PYeVjG+LhYfzooge66G7x2kwpnv21aGPzPgQbXK7jvm8
KzLknu6cEEVfx2Qu7tEhF+YGqrxonCChrHcfTGqY6wmrCh/1rLV8yFTgEh5v
pYGZjdex84r8iLz3qNjnWRp8/z46diWNhA6QZH1s/zDwb5PP2DqDjMZiLpvX
kJnxxN/lw8YuXhS2sIedJ4oG8ZesR3UHmOtR+tNNd5jf98dL1huPbiGjiiRJ
zpwOZvwjRVRqXedDV8VEQx8z86EVjz/EmZrzo5GNN7DRbxqEPu/IDB/7Z4+c
puEfZZfIaL4HJUwlMHCR15LdT0P40LFbqj6bmPHLrl+l8NSAKNrFe5PXQohc
uGja3ru7i4Re481DMlMMzJX/XbxOnA85Rx2y3FZNgx2fD0y/luZHR0oTQtOY
8WbJm/DD36JJSHNf6Jh/BQN/2Lzi0uPPbKj8uklKbvosdny7IejFXz4klL8u
czvzeqObVj35vIqMDNT8P7YPMnDsRFPsJQM+lPD+dJATgwZy4m/7eXP5UFjH
GovrzPhV8kj4iCyNmT8c09I77EUuvP/NdbstGxk5k6J8TJn2d1+AILYSEnqg
8uK1cQ8D/12TdVCUxoemlxx4FsxLh2v+X6r7EHM91r5rYn8tAz8QNJtY58CH
Op8qqa5nHv8R8ZVkQf1nr/gNN5dE+/GhWIfm+iHm+iDyiJrfrab/mc8cCn7M
/KvI79vl0PdsSHnO6WnG0Cw22+1+81M1H2qcuvBGmTlfXorbq7Qz120aTu9G
s0YZmCeVmr8+lfn8xuv2ajGfxyo0qE9xRhRdPZ1pnHeTXCid1NjxnkZCtnYq
W8jMfEix57XWtjwSkvHwRxVtzOsViy3bOsFcX75OuRbHz/QfXGwmGTZ86BF/
TNlDLjr8HUm5ejWKD/n4Jp1fy7y+kdMzdb5BEpLwWO7YxIzv/ouVxbc7+dD2
eAXLWebz6Gh/a3BkxuVcb678Hcx4v+M+Eh8s4kNyq7zNtJn3R/ASzvVywzIf
yYV1nes99vOR0bZcm/VU5nzokaQM/vpOQuvXqA2pDjDw5Y87Yyrn/9nvv/3B
f5/vf/9XDE00/M94HP9XP9Aegr+IEWEb4pLxY/EXMNpRN/E7hcVfFOhw82fX
FrH4i7Fzxy1FoypZ/AVPvOrwPFcdi7/Y5F/7fvHLXyD4i2PZwpFNR9uB4C/C
Kn/ePd7aCQR/caGbOzV3vBsI/kLy0fbebRW9QPAX2gHWIjWiFCD4CwmvTjGB
VgoQ/EVb8zHup1L9QPAXB93oS90DKUDwF2nmnAd2CPcBwV/IOHgnXjfvBoK/
CMps6Vj/s53VD5ThFbDhln0Dqx+I3/V7ilRsOasfyNLwt5g0z2MWf8ExHmcm
oFmBCf7iuH5eYx+jARP8RZj8Zom4jR2Y4C/2Di2rvKrcgwn+olC+c13OXgom
+ItzIrvX7ns5gAn+4qCoqMJc2SAm+IvUA/eNekWGMMFfyNHY+E5cHMQEf6G7
rHbzl45+TPAXBy5Ur7a524cJ/kKTxyVy1qMbE/yF7PHP6413dmBWP1B7xrtL
b/5igr+IK3ffeGRjDYu/KL0dZyGxrIzFX2Quv/D+w/N0Fn8RHPNE6eFnNxZ/
QQp44ujv/Q4I/uIY5ziH3ruPQPAXL1zEXogIpwDBX9xbwQ+ZfulA8Be6kz/o
E+OZQPAXL1wNfpyVzgaCv7A7rx8pbJEFBH8xrXKQWy0mHQj+Ag81VGQkJgLB
X+QfR/cCZt4CwV+0FM9vyg3zxwR/8Yan66LE0B0g+oe+XOkK//MhBoj+IZf+
mDUqablA8BTB8rvKiia6gOgPer4peVB/qAcIvuJa9NdV9k59QPAVcin5UuIe
FCD4ip6AgdX7RfqB4CtCdmvGnRmjAMFXWGbqLqHM9AHBVxjHBihv7+oBgq9w
e6oSW1HQCQRfUUOunTapaWbxEhaGtY9njFswwUuYh3GcGDzUhQleYnQxR35Z
dS8meIm6la8Fajz6McFLGHwII1EPD2KCl9A8UTc2ITSECV5C79GbkLUNg5jg
JQ7Fjzx/ljWACV7ix4FtiXdKKJjgJWQ7d1pKLu3FwsundApDRdDe7kv9pjGF
+FkJ+54vMqLozYXv7G0/3mOCp4j+vP77g7iXQPAUWS+OdNy2+gDm3z71Vm4Q
R7bpG8QVh1KBrT7ZNS5BHF2PdUz07s6A+hlpqyObJdBL14xcpbws6NnYm5aU
IoF8YyrdJRazwHFHp52eiiR6+MiJKq6bCTF3DZ3IKZIozf56boR8KvCWqTfc
2SaFUld9baMviQWC1yg/tiGfvM8eCF7jbVe9M8cZPSD6sQRbbR8tVwgDoh9r
wMt2caVsJhD8hUxesof8jS4g+q3UXF6yP7bpAYLHCKl3azm9rg8IHkPxypPb
p09RgOAxLnO3xAXPU4DgMYxX7OQ/ytcPBI8R1iq+escJChA8hjUSe7/rcS8Q
PIbow4zn5qFdQPAYO/gDA9uPtrH4ChAd61fI/YsJvsKc1HHLFnVigq/4LB/+
MYmrFxN8xS6TcIv0IQom+AolBcpO+tQAJvgKE8p6k6HJQUzwFSsfKlVXMAYx
wVdYS8o1JC0dxARf4eVYdiTVoB8TfEXy1roJ97JeXGVtD2OOIuihMcffWz+L
sVDoTI0vXQSJ8mZ+ZhxOwgR/QQ0T8hpdY82Kr6NXXumtXB8DPE6JW3fwiqN3
3LOVk+ypICH7+dppb3FkRVW61rw/A/QjLJbqCkqg2IsV8Mk0C5qvqYzPvpJA
Ujdov77LZIP69Jvzu5dKosLWptaFYaY/CrwmreUriU6ctNq/1jEN4h2Q0JyY
FApu+1unI5QABO9hqaR1KvzVKyD622YqzprbTD4For9tZJzD7u/2T0D0q+l3
rwlZvNgLBN/hfaw71fRHHxB8x/mISv7STAoQfMefqgEB62X9QPSrPeT0L5j7
RgGC97DflFfw26sPCN7D/rKBZfbmHiB4jx+/VMsjfnaweA25uTnfOM1uTPAa
f0fpl519+jDBa4i99t7GITGACV7j1ZoKt0O+g5jgNeorLlK3Sw9hgtdQuKoh
v/vdIN43/nSpmpEQykw8bLni9AA+VW5p6JsngjRiw+5818zFbMPC78d3iaIP
a4SNVSNCMMF3sH/brJoWEwrl4gnBV46JI+7GJCNUlgYjPulvFr+LoyPHnKSu
3s0EPZ2KKq2TEkji9dDbG9QsGBkNsbOolkDZpxkBViVZUHB/w+tbJyTRyB8h
vWTvDLA7dbKjoEYS2T1VqiC9TgZzke0Ro6elkPTM5Q0706KA4EcGfi/6L4o6
sPr9yrcO9Pl4bAOi36/Uznmx4lwQEP1+VQPTWzOH0oDgQYbGafsN13QB0c+X
YrW6irq1Bwg+pFqNFhRO7QWCD2lINj/EtY0CBB9ya6bo+LpRChB8yMnG3u5a
Zrwg+BClO5Zy43cpQPAhnPuW1gv/YM6f//AhStwqF0M5uoHgQ0YnPDYxNNpZ
vMd9j2U3pY3/YIL3sOyI10vN7MAE71F+s6e5JKQHE7yHkKrVzurXFEzwHrq3
Zz7OlAxggvfg9Ys+KdI+iAneI1A3wqGSdwgTvMfpcT/7gF2DmOA9jAtkN5uH
92OC96hNlXbfsbIPK8tqqPHcEkG7aKYROtZf8S9uq/C5QRG0Uy1pzqUtBRM8
iOE+zpft3NdZPMgFo/s2e0WjofFskv71OTHEOHsq8vLzFJADpQuxTuLIzK/s
4LvhdJCxXdp5iiGOzt6JSWhQzoKGp2d8lj2WQNOvHukFL8+GN7W23z+TJZHU
eh9S+eYsoKy7de2KiySq7V+nHymRDrQzxYrqnFLI+dXtny8GPgHBm8R/u7u1
yyQIiP7Jn29C7v+pcgaif7L7D9tj/ZNxQPRDWhZqKgeu7QWCL7EbW5ryJ6YP
CL5E/TfvSttIChB8iXfGkeWnmfku0Q9ZeFSQXsDMhwnepO5g8gr5kj4geBOj
ZaKcQ897gOBNFoLF75sd7mTxIid71pi7lXZhghe5J6v7x2drHyZ4kYXHXJW8
1f2Y4EXke7t3TFsOYoIXEVbxpCtKDGGCF9nzJs02oGAQ+3akGo3tEUJZQxmT
Z90HcLLNljOxCSIoVXdg2EKjAH/V97Q22CCKGkVj009ue4cJvmRs8B4fuvca
gkYTCt/sFkfrZeUVrC6kwVyKqrdenji6kr/i88dNmSAubxN+CEmgFb12imda
s2BA8IuEd5EE2qLqubWgJwuWn+Pi6QBJ1C05I+w9mQEvus5ubi+SRG5DzkpK
pimQNZSZu0VLCu3zkL/9bTgGCH6l+XtTheYZOVY/qbncqbfvoq8C0U+acdmj
9KrGOyD6QxfGdPmSLSlA9Id6L1h/0uPtB7aDH44nbqEDrSXGrnqBAkE1Vm7D
avPQ/OZdxu41FBa/8qthSY/uqkFM8CsrwybaPNmHsJ55sG4TVQCFCFyq6xkc
xBuKlsyYLAqiw59vBsT1DmCB/G3iHc9FUTvHtNIzdzcW7/Kp35F+2fg9CFA3
310IFUcyl4ZzdgVmwOvvX5DOCgn0tTt37za/LGg/zH+69p0EWjYpXJAinA1N
4gX9ZXKSaJHUUOUSlQl5nJe/y0cy86PCBj/vulQg+l3/XE0e3u/rDUQ/a8yb
NnPGdwqwq9RU2m+hgeaXuchnzHgks9PtzSVlBhQXqx0dTqaweJnnRUsOTXwa
xBOGtNsSdwRQv2GI4nKpITwy9uM5yVUQ+b4tjpR7NIgJnibK5XhC7psI6L65
8318kzjyyu6I907PBD87+QXNyxLoU4eytbJgNkz+vvf3QKcEElxJcpgKzoKL
QcfX0i5Kov3ISVd3RQaweByOgQtD256z+m+17HmD1aLEgOi/bft1vij1fQAQ
/bcCATqhn5pTgeBr6sR6pufJXUD0165+mNTvK9IDBG8zsf6Ar1xnLxC8jUXc
xN/1ChQgeJu+RzfDhnspQPA2yt/J01wS/UDwNsOuHELgRgGCt5nreJiWNdIL
BG/D8aGRvmRnNxC8TaP2Uq4kt3YWP3Mg2H/wy+dGTPAzDaGZ+hI2HZjgZ2I/
aeaxX+nBBD/jaXgn9McNCib4GS68xubVxwFM8DM3P9Eee9cOYoKfaTzmEdLA
zP8Jfkbnts86/WODmOBnzr5cK0r+0o8JfsbXHX9dfaQPG1q/3SZ2RQTtu76v
TuNAKU7JV3qq1C2C0tQdfCu3pmGCrxGXq16WMOjI4muKmt98qDSIgsLipBsc
Y2Joy/aAgiXHUyBad7C22lYcCXde2y33JR0eGF85UjspjpSzDVGUcBbUiplf
VHaQQGSdriPnZLNBu6TrMYUqgbQtv/Da62TB3bHbQjP3mPO7luJ0xTgd5Iuf
7LwwL4mSZeR92X99BoLfWee+srlpawgQ/cxKL78F+4nbA9HPnJcfq8Vj+wGI
/uTbmhueJvP2AsHr7GTmY10v+4DgddLy/I66BVCA4HV+XqSujRXvB6I/eb/O
T8pIHwUIfudJvTNFrLUPCH5nz1sDBeWsHiD4nRCPz+lRTzpZ/M2NfTu1P7h3
YYK/EQ7XZi9l68MEf9Pe1Ntn+7kfE/yN3cUjD4YMBzHB31Cah9XERIcwwd8o
OHwoOfd9EGf8qXh8bJMQ2qB2X/1kxABuL3t1Mi1aBEmXRNuqfMH4vdChc97y
oijkvlKo4oNoTPA6YjdbXmtG+YOr4acaVVVxRNvi+FBNIQ2cSia4XNLE0TyH
utpavky4J1DK/W2nBDINGxdZWcWMt6E1PWE5Euimju+dK5NZ8OPg3UIZNUnU
XCWaMCefCTIJBvVWOZLoq1Ho5QclKdBuYP/tlIYUyj7GsfMnmem3/8MDPRlg
T7oxaQ5Ef3cvbffylhBjIPq7F6L1D/eGRQDRr332+v3vhSZM+/+nX/t4/PW5
n+z90HbtKOcuETo473g1NszRD9365rPVEvNMP1/gUKROYfFAlWEbG0P4BzHB
A12X2vZlH3O9oym5LU6iX4A5P1etqp0axCdz1srmjwqirRtLF3wZA7jiqFv/
jceiKP9I04skUxcWP6T5OzBGpz4GXvKNDq8PEEfua8rveNzKgLl08bgqcQkU
naXosdcxC1obl8v3BkugtZ8GVyVIZIMnp9I7srQk2u6/zOLPt0w4VGVmkxok
iaQfqvJd2pAGRP/5wT4xLuMIDyD6y7fGeB1bU0SBm9ix/8sSGqw2DBxqZfrz
Wf0NuoOCDEj9Ys1pVEBh8UcKo28+vwwfxA5HWqbJl5nPd3gSKzPz/7/hV7t3
3xZEhVfqLsS8GsQEn1SeLjm4lBwOFs4zK+tqxNHerIOqPgGZMHX53tViAwnk
c87q3G6ObBgz8Yg791cCeR83G8pNygKhZ3mtquckUWSQTPi2cxlA8E2GYTGq
d08/YfXDUx2sVyrOHwQ3A9mFVwVzYHr4KE/mDAXefPSzOVZDg4DtM5ZDQv1Q
9zJHZXsmP7p/1knSfWAQL7O9dt67TADlL//VX86MvwTfdCDHcSAhOxqyPfPt
f3NIIMOqiyefHc6CvzP7CnmfSyC2OpVmKWa+ONDNLWrLK4k861c1zCzJAqLf
XmhOOjbL8xHsbf0pd+oHFfaVfgjUlOmH5FCb/IUqOkDHPcXiWgqLj1pwUrMX
dR3E3muiyH9AAE0GDtO2MeNj2vybgBQdQVTTv6OjPWkQX5gMHd2QIYo8J+6q
D6wKhrSdK3aWaksg5HO1qHQoC4acPx9yqJBAPWX14dL1WUD087+t3XksOc4S
Opfd87E5QIXPiUcerWXaY40Ce9Cak3Qw1eafmJ6lQHLTJml3Oj+Sbp+4/JWZ
v1/LJs2F8wmil/XnaaTOQbyj41bj97USaPOZTyZusVnQmTP3uCheAvlVrPVv
5MmG4AjFlC2nadDygO57g/m8129LDmx4IoBM9m0U42Tmi1ezzoYtNogi2pex
XUphkbD1RVVA4XUJ1ELqvblLLBtm9pnxbxuQQK/4x6VFH2ex+K2B2OWkPomX
rP0Ful/3t39MmtpL7C+w21vjdfEFfyD2F1j/Npo9+mwqEDxWTnWKrspYJxD7
B7geulGhytYDBJ9lZf0V1Op7geCz7AbOjAnIUoDgs0SPT6W87KQAwWfh9wLn
DSX7geCzTis9fP34BTPf+w+fFTqEIkMXe4Hgs4oSP1i0n+gGgs/SXbAgi31s
Z/FWZMuoIo6zjZjgrbLSoiOpxzswwVt5Tqul6B7uwQRvFRx0Z9bsDAUTvFVq
gOlP97ABTPBWwibTI2ZVg5jgrVx7SfcXhIcwwVtZ/b4kf+vMICZ4q9XR/Wcd
f/djgrfqHLIev2jch6eWVW2VuSSCFPbJnR5OLMXvpPjtDraLIN0S/zrP1jRM
8FipvGeDojwesXgs261rvbhm3sE2mort70Ex5LLqhPTazSlw9U/FUoq1ONoo
r6H9LD4d4vV8FvxHxZGgzIL0A3IWnDYcP7DjvgT6e//KEaFl2SCXJ2PCOSOB
Hn2qC3K/kAU5euOXCmwk0Rj64pTwKB0y7K8U3KBKovUVwSIBKBEI3msDB/3H
w8BQIPZr6EvqdEizvAfEfg1CERZxbl7vgdh/4Xmi73tReg8QfFdAkOBMnnsf
EHyX/Eh0n5EPBQi+S7NrbaGAWD8Q+y/MnjPav3uIAgTvVVX5CL0b6AOC9zKP
kdrZWNkDBO91zWziwN/IThavdc9Prq77WhcmeK3OLIuPXgO9mOC1mvPizh4M
7ccEr5VeyC7te3oQE7yW9qn0pWuWDmGC17o6cuuz0e9BXHGmPvDBWiHEU7X8
zNOEAWxnU3wiJ0IEfd3Mu5i8rxC/tlhz5MMKURS60Cs7FBmDCb6rVZbuuGmj
H0y9Um4hbRZHe5a1XznKkwZIp3q/f5I4kmzyYTjMZsB78liuh6oESlMOHTT8
mgVXuw0rP2RIoJpyqq4jNQui934M3blNElU7zqb+2pUJJsJNirsyJFFS/mbl
ickUuCt8XtdUTQp15AmFRnh8AIIfU8teve1mtw0Q+1dohp9RJ380AGL/itNr
8cOChHAg9qNQ3mH+6Y0Bcz38n/0oZJMG4TupH6rs3rY7sdGhXiJpRRp3P3gu
6078yjkPL7OEXFYcoLD4sYn7a+fNSYOY4MekGSamu+YGcdaI65m0dgF0JSfB
aYQ5NtuxdfNgnyByOtgzsot7EK8XTfw/Xd15NFVdH8DxcBUZcg2XkGhENEgq
Yu9SpiihjCFJ0kAypEFIkZCQEpEiGpDMiiOK5sE8z9c1cw3XzHuetZ69n7Xe
P1u1dO455569T8/n+f6Mt90QgitaJKWmj13G/73ejI9pznBOAiYRv+Q17otA
kR4OxQqzHCD7Ghy/R6VBea9ldbIueeC4dDL3cBQNyhyZL2KJ5QO7eTtvKRFR
KGkfpaHUlAuClbo/X40UhbqaF9mSjLMA6mtsfevH7fExAKB+Rv4RjUdLC3uA
dMCRSfrCNIAnfpkVk+t395lrm7YuzAKFZZw7D3zqwV7tnBilgvtRPwE//srz
NOeF4o1rWUbk+m3omRlW78AHr7S6bQ59TP7+v57NXKzW1KvuCflzaqz6fotA
z79uMatv5YJ1Zk/F/Y/SYLVe6Qv+xTzgnCJ437aGvP59rzfWFeSB7htjBYbG
onDjuG4g4ZoDkIdz3Cqz8W2/D+59MB9ycG9mg0BVhsmTmzoFfoeoBlPGyPXx
A93gfukMyDgfET8p0Asec70Ze5XGA8ln6ZsL9H4iXD9r6SaCF25p3+7at3SA
QB6OR0Wmod4xEfTdYCiGL6HBy2OtrDa1PGCm8SNZMIAGp/mTo8PJ9bukSWP4
PqcoPFPwtWGtdB5APRGfvK3aR0Z8wGhS4maP99PA7eN2qt3KXvA09dMjTWIW
NFrJFDTU92BPt8l6+FmCZz9hFBv56dBOXrjxh3e5oegAIV/dvdfwAB/Um1yw
q8/tJwoKPpuPZAjBP+afHbn+PgJdCjr9t/fT4PKDF7nL6XngbNnOLf5lNBjr
ksWp0JIHUK8kOOnv1VRfJxDVqfckSnkaHAk9JlbFQ74/7jh6yWnvLHi53c7v
2mwP8DCSbpob5YHyCb7fvpLnoyXMIFGdnQ8KzPHJCTL6CYeah8HBa2hQULd0
v2BcHjjB7nf2+wsaXDq2fDs7+T59yHGBOLqPXL+5tq0SIu+fzd1cqU+v8sJk
au8SJfLzfL5xg+tzpRD05Y1/FCaVAOxuTun6OtDgwP20ghGBfOAWNDi6p5sG
zzb3X9G+l/ef90syonulheJ+iih9/5UHchvBqZY7FInEGfBNfXWYP/k89Z41
sHFI44Wmo+E9F3kHiGM/WzzW3aDByer2oa3k9bLacUivKHoaUL1jl4uQ62/D
HU891Q28sNes3LtYeIDQEo015tpDg8ErxeVdyf3PmaN6Cw+KaNA3YXz5X3J/
hHoszYdTnDcLnQRLLo3ntQhOg2qBwKCUpb1gAXDY9bTzwPXL3UK5lgwQNvcj
VZvjaHDd8mTRfqF8kDeZ3PhEegZULP3p/oM8PzmV/UrBTrwwOjbAtYzcr306
r/+O3ZoGM2s2PR0h90Oo5/Jj5MWUpsphYJmeX7fkHg3yubCpKpDvp0G0WcHN
zdMg/vgJSya5X/qSlqFxUocXasxIpdWQP2+zSYLvoWPTQIVt+dOD5P0/YK9+
jErhhcUbxYquk+fH/pJzbH4aDd52T5lTJvfP3XUmiXz2M4AVFf3iPnm/vpha
vzE7mBc+8ZC8EUWeH/boxPbFCzQ4rM17ealoPvaF+ymyE2fqw3EvRr7I5ZzT
+yoN1ItZ7Qk1C/MjAOrFXH1UKSQtnAmQF1zardyzl9EBUA/mrwVLYna6CyA/
2LZy0+juP90A+UEzjZjCMdEegPzgjTMcNJO2HoD84Mh9DU0WeX2RH3TR73EO
Ce8ByA/eSDufO7qMAZAfNNh61nCzVRdAfvAMK99CtrANe8Dk/MidfnJ1BPKA
xRwPK0zV2wnkAYV2+UfbqdEJ5AHHl2wfF9XrIbAHlCywHHjYRyAPWPjOhLqT
fD9GHpDtVJbeDLn+Ig+Y/zHmSpd5P4E84Gcevcik+l4CeUDa8uKQwTMMAl7s
3rbKRhBWEpb9rvQyQlzrykXjFkEY20zcGlTOJpAXPDcx9WA02h97wbVrnrjY
lTwDF0SY07m9wrA79tGthNXvwJcnqm9HnUVgScqSpg3x2WDf4UQz90ERGCss
rVoynQsEl+Tkq7rT4Jf1GgZQPB/w7lL5JTROgwlKd4ut7PJA09J3d5+5iEKh
ir3PuCOzwZLqaja3SVGYkXKzxfhyOkAe0WRbDXVB6wlA/R3tw6tt6mTdAerv
6Cxm/c5a+QKgnk7YrZSO/DE6QP7QQfjC6zg/BkD+8Jd9SZB6cA9A/nBDXH2m
olAvQD2dMm6v9ENDPQB5RHflScFfIwyAPOIH83TXsDo6QB7x7uelGpZvO7An
zKhXHR0y7SSQJ/ylwz9g0dJNIE/4MttZViSil0Ce0Obvtq7vh/oJ5AkvlC2c
ECb3z8gTSsmllelW9RNVQlZP76/hhwf+mK4IeddHfCpvPFQYJwhNZj7wT10q
JgQeRmpmSQrB2qIdY4sqLwjkDx8ZseICzoaDzWmDJxgKIrD9snEdnMkECdR9
HXFpIlAuh9+AbygHaMxRaE7baFA6Yq9/RXEe2BAos/dNFg32JAyMms3lgbCC
suVaSqKwr3UsgfNALvAriTFelSUKpa/LhtnxZIKis98izqqQ+6mZE4tzP5IB
8o3O5jv/NAl7ANQjSnFO0IwYOAZQjyh6rrzKmhEHUF/o4cSM88xR8v3n376Q
xnbuc7sWe8ABX61DT2dmwMa0fk9O7l7QPCfDC+bnwFatyzVKej3YN5ZrrLyc
P9NHIN84mVpkKsHqJy5ZJG+62cQLW4xnnbpm+okL47m72Lv4IK/k7hdXefuJ
Oo9SLuHrQtBNAqjMlLiBbFONrzr3ROBu8Rp+m0M5oDjJJNd5BQ1e+jaUN3km
D0h+Ont9LJJ8vgbu6R9eSa5nXt4DCkKiMJWfnUuengvSu14M24SLQkOBy/3z
p7MA6iPJiq0WO1p3G6D+0cmCmTtOBT1gpk9twZM1DVzT8z7Fkc/7467ro41Y
s4Dh+ipofXkP9pPnr/XMbInsJ55d036sdJQX5qY3Evrkfoq3s94hxY4PlrIH
bDgX108gX+m88QmwhE9AyPcDs+M/RWCv3U2eH9dywQejbDd7Yxo8n2zbdJC8
vpv1aymnqsj3e52137KIPFAxyy9nc0QUluTp3jrokwOQz1wXlN4h6+aNe02t
78PESyZ2A+FbjYK6SVPguKPLXglmD1j8FPo+8/0MqAsvmu6n9oK50nXVp17x
wBMyFxa+kO/3BnkNTdMFvHBBPuHLSa4BAvnMyGX+iYkaicDvylyA64II3Pm6
6UaPch4Q6wiTEL1Fgw5Q62UiuT6nmVkcf8ohCn/788wtlc0DqAe1JGXv1jdy
PuAH970dXJnTYAZO3WgT6wWiOeeXOuTOgiL59cC4qQf7Tq+eLcVGl/qJLFO+
F9zbeWF70cqcz7QBgg75xFbv5YOJbjfmNN73E2ekGvgr04Ugd4vUWOu6R+Da
xuMHTu+jwZUZjQaSHXlA3mnuWeAnGgy9xRLmJH+NelPd25hU4o4jcNHekSir
MA18BFwXopf3grvqC23Bu2fBC3/bu4rzPaCOL7owd4gHTox/K1biHCCi5y5d
4V3ghd9jHmfc7O0nFv686T4nTYM2HncuvH2UB6RfaLX+TiTfV2ubg3v584Hs
j54yxu4ZUJRLkzAh75+wBN9QS09euNfwxu90cj/l1hlRmPxXCIpzPSV+ND0F
M9f5Ek/Yk/uXzgZTqRX5QHnzO4e9XTT4S7C0bvODPOxPgw2eU6ZHgnH/ypu7
gponLg2aupVc1WNnQNSXoNMHRXrB7tNuO3a84oUr/6yPecM3QIhcfN4ne50G
X58MplWQ+w+V6F1HDO9PgwQlvgv2tF6w58DIpgkZXijN8s0ZFSL3j9SM1J7d
NLhbi/P+sQryezLN7/r4Aw2+uD26ID+SB1BPa+Kst8SCwwnQUNNCuCyfBuZp
Fd/2cvYC29mrms+beeAP82ixzQv9hNQO87T2WBqseXb/soVIPgi3DO/YIjYD
eHe+rm0kz4/YPXthbQdeSCiesWAnvz9Wjid4Oy1pUL38y3Ti0nyAelyX/Jq7
d4/qAXFjb33OEBrctaVi4i35eeyv0FcWV00DeTVNj3hyPyXvJC8ttZ8XDlzg
XhtK7qe48u4GthlMg1O1dwiNFb3gkHTOzh+LPJCru50lxzNArBVVFih6Q4P6
Dl9Fosi/r3gPeB1vOQNez84OUMifx5UVx+USyAsfGI/OHRUZIB5H5Ku1naPB
7+Wml9PJz4O8a8K3jZy/Ju/j3lcVR4FGo8Yy8H3S38AveAYoCfbsyyXPd2Se
QsU2L/J90F8+pVgiH/TZ8tm4+UyDvsyVoI3cD7N/aB9yWskLuZewc6wXHCDi
rnU86HtEvm9PTm1pI/dvWmtPjxgvmwGKis1F1eT5a+E8VvvhOC9kPkmL1yHP
H+qFfd+go2drqgmiHy9T5r9DPh+3nuC2J7+vYvsKNnaVToOF7OayWnK/ONIm
0RmhRr4PnipR+v7P/UkRzi/VmwEPupyffCY//w/5sO/0G7yQd/Twx+fk9/Fb
YOfwU0dyfz6c7pkomA9Qb0w86szaz9e2gCg5cQ5pXxo8UB2fe4n8+y7/WnC8
Ic8LrwqWR14nz19LRGEVj9wMsBZO/fCWPH4TsUtH/l7gha+7P/NcIa9XLM+E
/VwYDXZ8uRIcRJ6ft+8EeGPp0+CuR6baTvLPO4ztOp6iT96vWjvj+f953ro7
Pbl6bgZkX5t7RyU/j1PcvYDVF2nQw3+5nsY/79f/elqtZ4ke+e8jiP9/X/9/
P4Q8bUL+XlMO/SSAPW2a4M0Vyx8WIU877XCz7nlEBe7rnzjIUIixb8N9fQF2
yW1PDnThvn7nuvxde7LouK9/1yk04iI3Hff1A+J7PzLrO3DPrGgtwy81swX3
zIJkz54bPlyDe2YvRMZEn2z9jntmNQUXeadfvMI9s1NXF09PW37AnjZUANwG
mhXY0zbEP191ebAVe9pYgQJ/tuMM7Gl/BEwYXjIZwZ62InVx560jE9jT5jxY
+ce1cxp72kKHCw83vp/HntYqKji+7NAi9rT2/Zv+3otcwH19HuPw5Jf753DP
7JDExeJQ8rmEPK1mrTObbP5/fX2nyI9WSd7juGcGzsPwt42juGdma24ZmF7A
xD2zVfv6t8rsY+Ke2dfDr2sfGTFxz8w1SmHfqg4m7pnV3Is7vbJkFPfMik+I
BIoyx3DP7KOY6w+K4ATumbWzezIZkxO4Z7bUefBauhsL98y+fz1zsF2XBZCn
lbWpUD1xagIgT5uwnt1Ia8k4QJ5WSiHu+7kDowB52jCXVQZNm0awpz3wiGUV
lzOCPW3kgge709FR7GnfuBasrucZx55WVIDV01MygT3tuud3ivU+T2JPe5VP
9a/vn2nsaeWazy3fujiLPe16w2TBweAF7GklDzdfP3NjCUSeVo93nlKUzYZ7
/I6dRZkGLaW4x99csUFY170B9/jlRAxTa5I7CNQ7e7Q7UKl3H51AvbNNrqd4
1zylE6h3ZhoU7fNerOu/fn/JOtXju9px72xLlJudaUoD7o/p05Zlq7ycxD72
TPOFyaBlcwD1x3x6nUVVfi8A1B9z7JCeH9m5CGi/PCWGRiiwtHqFKStkHqAe
GfVy4Mz9kRnsaxXgRP+Q+BTukdmYF8Vtuftfj2zNvm83+x6P4R7ZaVG9qJod
o7hH5jDrIyB9nol7ZC8ml59138XEPbLkZJnWDcFM3CNrC4fGbLqjuEcWSjcj
ak3GcI+MrVvl+yP/cZB26GeoUbgA3GI0f0zz3gQY7vRZ+CxEhbtz9M0V9FjA
KeRR6cIDKqRzd2m1XWIB6YPCLXNigvB4qKSh7NAEQD53TeFq6XsfxwHyuVZ8
5b0vNo3h3pnI6ccB59WZ2OfqbN72WJB9BKDemVLNeS0ePyb2s5GLoVS3dWwQ
+dlNprc5VXyz8DyD2WjWXo2cGjzPwNnEMvaf/ijqofE1H031rukiUA9t/cn8
5znv6QTqoamf3RHGiunCPbRrzTpuT6gduIcmoDO0ITmvCffJBkxWzm67wcIe
9tOvzYJr2WYB6pPpew/suntsAaA+2dDyuYvMY4vA/L1Jz5tUCrwQ7n4wQ2IB
oF6ZQvlfrjVPZrGn7VsZK+RVNYV7ZUP6D98YSLFwr2xmIjvmANc47pX1jXs9
t745intlu5K866/eY+Je2Up6+J1E8v5AnvZ1malM/Fkm7pWZ7x+N5RYaxb0y
pc3ap2q4/+uVRb3LSJVQGwcvcnOqtS8JwB9FK31KjSbAsbeFi7RRAWjfphUS
tZ4FtAZ+29z3oMJC5WGqpRd5v/DFK/ezqHCu8MfdbhkWQB733cff72+ITgDk
cW35hs9dezSGe2i/M3arMEvI4/23h3Z5+onkUQkm9rGe037CKf/8f4P/+ljO
NSOLPjU/8PyH/Y7mjC9/mgl6mm/FglENOLm+uZkZ1Emgftp2PU0L/WA6gfpp
heNXlLpO0gnUTzsipDizwa8T982EZ2IdmN+nAOqbbfjJL/qWOQdQ3yxqU/mu
7zKL4HDY9p396ylwax6nZurEAqhqe3xoizIn1H4lvSRueA572avqX49cWTKB
+2biOjKvM1XGcN9sNNxXYmGUiftmEe3rc88YM3HfTCEmO1JtLxP3zUbSns+V
ZjLBr6WSReHKAvBvrHVwyI9xkEPv1D6eIQAtxEv4YsomyPVt/7zbDiqsyhT+
8MWeBe5tPrHxXDYV/n20w0SA/HVN4J0AfjVBGGkfUbQqfQL30mr9nccDs0cA
6qUVT7NNXbYcwd41feLTgrkLG0TedXDb88d9fxPxfIvyT8v6rDOq8HyLF208
A1qc7QTqqYU1HQTvwrsI1FO7U5LR7vOBTqCeGie9fvxRdRfuqVml9NuzX+7A
PTU3g95yVl4z7ptFFbaoPO6ZwH5V5BilpO2fOUD/9s3WPLvNOca7AFDfrPvV
g4Ip00Uws630EG8wBSaIr5xms1wAqHdmfZjtbjpzFvvXsJf5GzOUpnHvLOBu
/fLfTizcO2MY3og03TeOe2eLhes1FNNGce+sfMXMp8nnTNw7C/xaT9++h4l7
Z9N6d03XWzNx7yzUa1dB3zQT985inmcs96OP4t7ZAYnP2hK0cbDm3CavkpMC
MEv25sFmpQkQRLPyAe0CcPHDY/7KFeR+IqY/tcGBCt92xjw8cJm8/he6bDro
VMgzJr3PbicLID+rmpS95DqYAMjPGkV/d+H7OfZfT+3L5MJjyihAfrbYyxge
qRkGqKf2VfftzfyeEexb3d69KWx/uQQi3/q9nHNyt/MXPB/E1kg80X1LE5FT
FG/5yqQatDV9mPWT6iRQf23FaIBJ51k6gfprF0xMAPMWnUD9NY5VbNuLf3fi
Ptoz9ZXfCtSmAOqj5WwP+OviMwdQH0362nvO/fMLQNZfeeoVBwUaqVyWGRNf
BO6m3Nmhgpywa2q9eSycx97Va+eD30X7J3Afrf/JrMbL02O4j6a9R96HRj4/
kXfV2z9xf7sNE/fRft3LjCbUmLiPJtuTl7Ayngm6p+tDC9eR10dI4EZlyjhQ
emzWX5sgAJ1DfR4/ez0BPlzvuP5kHbn/+yh7vcyMBeaar7lnJ1Fhs9fKE/vP
s8Bs7693nPKCcL++Yi7HnwncWxvMvnKmcJo8///21rrcL3mGbB7BXjV01qxA
8iAbNG9pPM9mVgk+13j3/drQQYisSn6WqtYI6NwzvxSodELSYJ8m41k72NE3
ZSP7jk5EnBnqyP9IBwYmTLZ2qy7cZzMUua4RHjALUJ9tZJsnjHq4AJrOqlyR
JzigyEKhuKT+Iu6xsbQefNhnOYo967uN1xd2XGfiHhtFeCLVcScTIM9aHCft
Pn2FCdborb4xxE6FXQYFR4V2s0Ddniyqzm0qPJjFqdTtyQIH3phzjy8ThEVe
QTZe3CzsW21TH1YKvhkGwvEndY2P1ALfx8ZdmoOdRL2/95/lMq0gcF0bMEuk
EwLfJpUbCHI9EH3F0FWl476bnMIJ92KLeVBV2136cxcHvObnw9+zZxF4xCp5
bNKhQLbzqQJvvyzg3tvbq5pHAquZ2K/uZx23f6/LBMivugrlezbrkJ8vI+ma
vhYVulTOiq26wAJrbhyoX/OZCpN3d7f80+ND/jS8/rHcZAQbRP5U8wRHp8hM
JJ7/QqtUHYpJqsTzXwjbRRutnDYC9eJCsh6dNj7fRaBeXCv/zJx/Pp1AvTiN
8l3X94104XkxfmNu8cEvO3AvrkXdooZ7Zwvut81xq4+IPZnAnrTkHev1J4UZ
gPptGbQw3RX0eYD6bd/OZ1FSTRbBwfMzbHuuUqBsyQvxoMsLAPXcLMuu29pL
zGGP+pP/reMKu2nccxupVZYtuc/CPbd1aQ9P7bQdxz23kT0LKo8+jeKeW6JD
cw1POhP33K7cFpVv0WDintutzjfPpc2YuOdmbfBtpG6QiXtuute2ZqVVjuKe
W16WMO8jjnFgW0b/tmhJrqfpNddC1kyARN3XxZV1AlDs4IKnNIXc71yaNlm0
psLiI2F9Xz3I67k6YOJ4MxV6tsf0sO1lAeRZDWvzQzLJ/RPyrPtyd2nUdI/h
Xhzt5m8D6fWjAHnWbTzPDgTxjADUi/smf6825vcI9qbF8RvN8yOXQORNawwU
I8Y3leH5OS4BW05dPdpIxJdtlvaprgLTvJ3+Hl0dBOrLxTrE3rtqRidQX67+
yE7R5ZHk/f9vX24kt2559Xgn7r9Z924IKxidBKj/VvQn/FMv+f6N+m+HfZTZ
nBkLQGQhqy5olANS7wX03pRfBGXh0LGIjRN2NDkOfT49j/2pSTIr4N3pCdx/
G3T/dWeJ7xjuvyk11erLrBvF/beVDZb89FNM3H+LoW4PqdzNxP23+cLnzo4P
mMB1bNdkhaQAbHyxx/hT1DhwGRdUF3ksAM2D3vLEkfdvzdttRdskqXBIeLrp
2xEWyMwOkmx4Qu5X+YLU6C4sEPr4oo6vjCAcvfLD2rl1Avfk/i6E704m96Oo
J1c+19e5V2wE+9Gg7LfxozvZ4L5uJ6Xaugrw6571PduOdkJy68AcG9EAlKVa
mljjXYT3Ex66jg35fOV+qM+RRyeaWt4UxPnRQQXN7DX1ehfuz604K3xs9YFZ
gPpzkiF981vJ789Xeo7F8jQOWOTx9VC+0SLuzY1M6t2euTCKfellrvQ7greZ
uDfXULup/gP5fEW+9BfFhJd6iQn2XL9A+M0IwJyVoU/jt5D7A+GSvHPeVCjh
S7EeJfcLdVZzcc6LVPhYbbUxH42FvWnIdOR9G59hMPdilE+uogZ0pyXYWBV2
Em0PS+VtElvA8JuJ1xbRdMJV/GON2rVOUBYvV8phSMf9OgO7gjVaG+cB91P1
8kVZcr0Id4nw37oI7GiZx3h2UmBITISNZNsC7tnJqHrsGu5kYk964Vtd+OFD
TIA86Q6DPaFf9jPBha7xD23qVLjXc7Dv6xny+I8Z+2gXUqGdk+rS69Ys7EEd
t/uM2vixQYVjHhmvPteDOLNURlF2FwE14mR569oAu5rt9K5COu7dPfwlE/JV
aQE8r8+V+HaXA5qJ5fdlmy1iH2qhbrNKRpUJkA8Nqeg6nmTPBPOlzUtzLlDh
DtlRCRny/WiucO83hyEqND5iYM+hyMJ9vNGe3+yuD4bBSKFB67LXzeBw2eXi
DdfphPJ7Y/HF8Q7QG73FqN2dTrht7f95kpsDXlw2I5orsAj2LM8S/S5MgRb3
bHcbci9iH+oaIU0sNye/H//6UA+Lgyt3kc/DZ3oR6tyKVPhgOltI0oZ8f1vq
/CsslQpXGWy9Ou/IAvzL7XTM8xqBpLnJ/g2byP343OWEW93toO6NzMktr+iE
3hGtxk3f2CFVPenso6wFMMzMjtb7wwEnPsiZymkuYg/KC0dSXpD3m8ypF05r
Q6lwhnW5ZAf5fKy4uNsj50krkGLmfD6YSifiVoQVx+hwQC3qSMWs1iLu8T1z
r1Z/c4CJPejb0IvFlw3I/YL3sT15h6hwvHq0iLjIAmeTdyot/KDCBJkPCqfI
7zPyn6I2Nn/Ektgg8p9t2fNjivy3COQ/L1bQTzisqsTzpdaUXdxbFtJGoL7f
Hd3rt0rNuwjU9wt6t7JMPpdOoL6fT4NcLfd8F55HdZX90eGujx2476cCHHYE
ubfg3l6F+ZVoQ88J7DnVKxXX7uWaAai395R1y9TyzzxAvb0K0+FGPvL7Pb48
qrHSlQLfqUrYFN1eAKi/N6Ay+Uxk6xz2oK/cmq9895rG/b33EeGTDkks3N/z
H3zy0sp5HPf3YKZINv+fUdzfcylSzviexcT9vYeeH33OQSbu702etFhmcJSJ
+3sajnGqIwwm7u89+/RQounbKO7vPfQ/vsd0ZgzcGCu5JGUmAC8/neY0FJ8A
Wzsr2p5UCcDNBuCd8MIE0LLxSaFaUmFm32H3P+7k9fQ0K5aop8J3xjsz7xxg
AeRJ3XQCUiSsJgDypDM6VkHRY2O472dlIVtj8M+/l/3rSVenXjfNlhgBqO9n
SFcSXFk6gr2nZZuEAC1oCUTe8/QDxW/nln7G87lcxYSPyHU3EJF6Huz9D6oA
VXe7pldZB4F6gNUN1UJTBnQC9QD3nKd/PfaYTqAeYNqX635DS7twry9k1VNJ
rl+TAPX63p4y2eC2YQ6gXl8x/49V8Y0LgFdt4stMLwd82Zg4c2PbIriwtWnv
sWkKNFXT1Fu4Mo/9Z2JVDLut13+9vs/u11U6Q8Zwr68rzjm6W2EU9/r6Hige
uXiGiXt9sd02yYLk+on8p3bjwUf5YUywy8XxdbOYAOQLFGvJCBkH92RG6Nuj
BKBd/qY9V6MmgJ2eecusKBVKzul+XnGIXC8TqC4D0VTILDL29HRlgdrRfUJg
lSB8cYpypKN7Avf/bMyEpkMVmAD1/0Ymv2Ru4BvBfvPibW4/9c1sUMXpnfC+
6ArgtsLFUpFoJ57m88u/8WkAn64In+To7iLSDoxke6m3g7vcj33XFNAJ35XB
G6gn6cDaaE43LbgL9wJn+0NXHlk7C1AvsF5DdPmz0wugeM2k3pUkDuiQ/350
zdFF3Ae8/siaIuo1in2nvNGb4OwgJu4DZjl/lZfaxQTId9ZlJ2zSdWaCr7So
Vn2WAKx4oH8nVZ7cDy7R5b1xhQpji/eLq5HPe5nsn2cUZ6kwC2w8QZVkYe9J
bQh4PGpDPu/lVUciwmvAxKacMs/ETsJeptuU26EFlMZ6c9Ai6MSzkqTkcxad
IORNVNkWCzruDb4Sr00u5CXvB0rvFzEZDvigTHHaVW4RmBmPaV3dTIE9T23O
yPQv4P5gLGd1/Il+Jvacr/hP1343ZALkOXPvXpgZ2ccEs9clm1/tpsKzEhv6
rU+zQNa+hkrzfCoMNz543vIEC3vM7fynTjp5kfdx66MWk4B68Gf/E3+/xC7i
Yrff9J6cNpB1gPl3Hbl+oj5h+W8DN2lp8nhoUzyqNzkgK/GGVQq5fiKfuUvv
/gtR8n0Z+czpz0Xcx04wQV26vcUXJyo8c8/GvZzcj2jRhB6s66NCvoE9L/WU
WLhnKPaOd6Arexi4abvwvjvXDBS5HRS/utGJUyd39W+p7ACbZTVDNnrTidDI
qN/X2DjgTcn1ibrLFoGS9vgyNV4KvB5664+d4CL2mSV8xjL8VkyAfKbAkzC7
vj1MsKWr4HilLBVyl+7es9SKvL6jEzLPX1LhI5pF5o6zLBAe4e/OcaUR8J4d
yHeRohP9icddcz61g9eSvlzOaXTCPpvZtL+EHWbdXqg5+WIBdG9m3Sko54Bn
XNgvDmgvYo+ZdCT2mju5fs4ZKhbtCKJC2QzHe2v+mVM4a/nc1qYVmBBO1YIv
6UT+JbWSLMgBG0W2+antW8T9RC+naY3n2kzsMe19dp8RP8gE5aLeVn56VJie
ezGJQu53tSKKbgl8pcKWPE2lXhMW9pduRbmSD2PZYKWKfkycaxtI3TIxe/A9
nbgddnlgpSsHHJ5Q8Ew6tgjWsEK9op7wwOUiQhQPdSa4F+DKNmhHhTFdr9Jj
yOO9YpHtsHSkCZhmxdq72dGJ8ky2kPv3OsCk39dN6iF04pPVYEUakx0u+XmL
kTS6AKQ+uvWIz3LAyaq7vQtrFrHXfHk0djCX3F/VfeX4Wp5A7idyZu7KObOA
wcQGYTHfdtAfs0nJIptOVKR4OD3O4YBc8XG2OYcXsc+0NGpw9CHPZ5as2ikL
Pyo8pEaU+pD3kxV/wnxWRwuIg33rJOLpxJBa+OfurRzQWnxN6pKdi2DOWann
vhUPHKER38fJ89eu9zOWto8KtXf7OXGfYwGBqHzTxuk2oNrkdavoA514E+u5
ySKSA4Z0eSxdS97fAhJfzxMED1TSPSNjSD5v19Qdy3zuSoU3hg5bG5HPB9SD
/Gz/lT7lNow957Kk2dAUwARBJpF/TLg6QMa8TrJTEvm+luX+sqGOA45/2/W3
Sn0R+04uYeqyOfLzaXmtFqWGUyFjc3nGanI9PdRD0+VtagVZcwZMjgw64f+6
q8jPkAO+jghtkju4CNK6NksOGZHP7xhl8UOXWNh3egd4nL6aygaR72RpOZ41
FXMnkO98X6KRl1NXgecBch5/KK7l1UagvqT03fdKpYe7CNSX1JBZK1lGXh/U
l1x3TCpfl4OO5we2l07ajP/swH3JsmePwpMjW3Dv8WQMx7az9hPYa1ZLXpXt
nJgGqPdIW7bf+u/neYB6j86KUyY3DBfBl/qTX+IvUGDQhr4HmSELAPUf5asT
7U6qzmHv6aplo/Pm1jTuP4o0xc5pprNw/zHz5mjUnMc47j/ynT2zs6F6FPcf
P0a3SuTnMnH/kfpBjGffXibuP/K9LF0YMmbi/uMZOuSg0Jm4/xi30FV0uWwU
9x9VrFfuyp0YA/xB274oHhOA6Rxq4go0cv+Y3j3iVyEAhY1+OrLPkutrtWaF
uDkVema+695PXu+wtR+TZmqosP9OdsB7bRZAXtSCLaK8xHYCIC/qryr9aXR6
DPclh3Zul7NRHwXIiw5VSZt/XTsCUF9ybrtBdsOHEew5axt6u4v9l0DkOfV3
8ou+df2E5ynWNoxP96U2EKG8jy9Je1QBh6qbL/fkdhCoR2k5813CT4dOoB7l
O7Fnb/Sf0AnUo5ROqYtrWdGFe5Eekx9ln7+fBKgXmXulq4FPdA6gXmS6vmLx
9eoFEGAu8vEdnQPq7shc/KpMvk8svty8ZoICn6V+veLnP499Z3pF8z1Nv/96
kRfCSnXtIsdwL/La2VJovm0U9yIDXkbZ7D/LxL1Il/Wi9wlyP4B85x5zn6xz
oUwQu9mHs5MmALd0dEhvuDMOpPKsVTUjBeDMSV56e/gEkBU9P9QmQoU1/MFC
a/VZ4JpodfTEQyqUN5Dn3UZ+/+biXk+tkhCE5x7ojwX1TeD+5IHj188uKjMB
6k8+kuotjVk2gn1m3vwtbUs5NrhVoeaWp1cFkE1ZDDdJbSfsFuKh74kG8HhO
X9W4pYsoi7aTCldoBz9ampctkPunqpyrVnrGdLAxYKfW8cgu3KtUY3h1HxCc
BahX+c7mZehGmwWgtldUUymBA+pYH89cRT7/UZ/yVR6X8w7vUew3oy5a6giH
MHGfkv3dt2wr8nwhv6l3Qc/R5TwThHW+HN42LgCPiOU83SDLAmYevCqBl6nQ
qVhE0ZB8PmqdUDnMO00+nxq21rCtZoG+geMnvrrWgLHUM5SvDzuJDQ6eF1q0
WsCGR3xNH++R76s0MYFbup0g7TfgWGlDx31Lr+v9dtqLc2BbTpHu+lUcMLnF
tztj/SKouigEtstToNPE6wSPkQXcu9Sc/x4tP8zEXtPpBSWcZkS+P//rNSMp
aQtUcr9Uord18N5OKtwpfVl5pQMLPMt7Mm+XS4XdhnbU93Ys7C1v7D7rTXdj
g67r5CfkHOtB8kB1z5uYLiJIdeLE0aQ24KlbSu8i1w/Uw1QuDd79mLYARHaI
UUa9OWD5+fZue3I9Qf6SJULnTSD3S8hfto6q1efbkPfneln/v47k+YqPCLpL
rm9OJVevcPRQ4Xm+o+eblFm4n/ljfuWwRNkwUAlmWxtg0Az23Pp07LQLnfDO
fWWsU9IBKMxtPJJ+dCJW65zhnXl2KJjn12rOvghSTwkvGVtGgZxaw6fe0xax
v9xvRIuKPU6ur//6S7UWzyeG5H6J9fbX+bwNVPh974mIsxYswO+Yf/BNMhWy
HeFX20eunyZ1IsF1Fo3AKMoltk2UTlCmfzf8ymwHPc0u963e0gnX0+XHjxSx
Q+Pjj2QF4hfACQOan2spB+RnrKqk6S1ib8ktXX3biVz/+spGGBqBVDjwwMn/
Drn/EIOD+TtgK1CrPPrz8ws6UbaeqvlxDwfkVbLfnQgWca8zoVl702sdJvaW
bO1Piyd1mSC06/650zpUuPnzLUcaud9Q5vZLX1lOrv/PDmXFHGNhX5m2W7dZ
j3zvGAgq4sg90QYsHgb9vUJ+v9jSH3X9PU9ev8LXc4Xk+4Z/xjLLI9E88Ixm
qPF6DSa4Nr9jE8uWClPvj37eSR7vnnit641/msBnbW7NO8fpRNsyt4mX3h0g
5YrMg8wwOvGXv9T4/SC5f9z9NWzVILmfbo1sq2BxwM1GZ05VbFjEHvOtK8eR
veR+qQyUj/6Jp0L1xsxwXnK/56AbfW2rSzsIf6PSS+TQiUPlUXZG7zhg5cWe
dr0ji9hf+t17uOwxeT6fxS2EnvShwjeuu9OKyPtJylhJOKi0BUzJ6Z84GEsn
5gZPa40pkPt5/gXN6u2LYKTI1ijBjAd6SHmxSRkwQYpo+5tZQIU2WT9WDzux
gGzfpuKxnjbgz77Eh498P5B9/3CtYBh5PbRYTj7k/e1as/fwlfc88PspvZFM
cr8kcEi8+Y0LFT5v9/yhQT4PUH80g4+urHJrGHtNXcPti/3//PtWytLd5yfb
wWJUSGRzMp1wq3yQEF7FAQ8ajq6+Dxex3+RZfqvqB/n5lIc7oHgY+Tw22tKV
Tq6fAoopNu0fWsHNAIHunel04v7xAnBPnwNeedotsF53Ebhl7FOoNKTCw8Kb
A4PJ913kNz+o6PMdeskGJbc/r2KANuC308XCKY9OTPbXVe09xQEpu+eOuxqT
72e9H7y5jlNheey6tUYeLOw1v6lwpVwgP28U87rBiUPtIEbvicq6fDqxn1Jr
VPKSA3L6fXZkM1kEG1zPL11ZzQO/rhPq7CGP/1rQrQ73a1Q4aXCoRoI8P2bh
AvfXlbeBK1L93yF5fqWmaoX8AjjgjUtrDErJ87vLYLvgyDseSJMoTX1I3h99
uxO2EueocIOqjdE0eX2FHybP7J3kgZfSf925Q/58/sYzkQrBVJggVXE4gzze
yJxvwXe9W4EidasbeE3udz+e2puynwOa1qqxp+1fBAUd9Uq3b7aBcBW+p1Pk
+wKPq9n4CQ8OqL+7L+mk6SJ4Rk2v7bQn35cqxJ5NkPe7ckLW68X77cBLY71B
RSadMA065tpRwAGHzE9zzxksglj/IB/Fbh64sOHypDN5PGXvPNWO+JPHM3Y6
Zhd5vFN7tYdLlreD41uub9Enn5/bvE23P3vEAaPNeyeekH9fmo1hMOUTD7Rl
j3s9Qa4/ynYRdx67kc9HyuL3f7wK8puHrcxmAk8Ng6CXn9yOcfHCOHsxNWXy
z3tM82t4mJDvOw6hx5aTx4M86KvL6qVPM9jg/7/P///PQx50q4TLt0K74f88
6HLhfzyoBvKgOq1ntoY8rcB91S+HBYTlYttwXzV4v9iFnpEu3Fc9HnN3afdq
Bu6rOqRorXKPZuC+qi5P45RCfjfuqyrJHLAwqezCfVVFNurPI4b/9VW3p7g8
TF3bivuqC7OJvMus6nBfVXLg5dm4FX+xB9334vaittdH7EE/cQc/fXAxAc+3
tfr66emGxz/xfNs7XMsPFLq1/jfftsuq3Y+9F8+37d+R7qo1PYLn234+WFUs
qziB59v6b/NXEXg5iefbNkpVn5vVm8J91WmLU3sOyE/ivqpYT82HgSUTuK/K
MSqSP1LLxH1V25tyDSI/B3Bf9fYNlcy8aDruqx4TcXGT2NKI+6q5toXlKyK+
4L5qafpSInrna+xBT2tdm1439Rd7UMDZrH7EuwV70HtHpV8N7qRjD+qWfZXy
raAXe9BMbnrL1qoB7EF93izV+m019J8HlX3HFKwexB60Ifko8ZytH3tQJZ8l
bzj1urEHXa+uNVAf04o9KFfAiJU133fsQStT4tsuvC/GHrQlfZRYnlaIPWjQ
KQHHD2dysQdlVB5Pt3uYij0oxVgup0/hBvagMVupO3cbvSaQBzUM13viuqOY
QB7U4Y58mjP/DwJ5UEDNHFkxXEkgD7qltFZOo60e91Vfv+E1iWkvxX3V1k0P
i7yfN+C+6j17kTDfFZ14/m2JYL6A3/5uPP92vndvwrJIBp5/K1R4SGdGlwGQ
B9XT7zk02EoHyIPGx58az3zWifurRadpcGzdN9xfFbxZsqLW9w3ur36cuDZw
QL8Yz7dlF9YUkP5cg+fXqq8PjGbuHMPza/dcCKT9Tvxvfu379kqbdLUpAvnR
VSvZ3fN6J/E8WwXfScPQbSwC+VFz64Cl3n5juJdKmRbrCLTswJ7T7tKTZ1nx
DOw5z9B/BF7y6Meek71w49HghkHsOSX3Xn1HNRvCnvPcgz93bHIGsOfM5hIJ
fNrVgz0nh+OWzPsHOrHnNOMvHvwsUos9p9LSuHPtGh+x51zceF+quYnA/VXd
L0kLE/QC3F9lKlx2D/TMxP1VNYbUXtfsBNxf3fzqd2/v0wcE6q+erzqb7xif
QyAf+km07/0krZZAPrToQ6kQr18W7quetTfmdflTg/uqJ15KVT3uaQfIh/q+
TbS5+IqO5+VeGqTtbXBk4Hm5idHacs1XGAD5UDenru9Jxt0A+dAlkg1NT0AX
7q/etMnboKjyC/dX5eIaZ/2a83B/9ebAoEKhURaeh8sVv3Ym/m0Fnnd7oO84
1+/Vo3jebbnytQOfJybwvNv+Qf6ljzmmCORJ25qHtm/dOIXn30ar7poKzWYR
yJMy+rWVarXHcS+11WurYmpVG/addY3h82lu3dh3PjUZMCOe92Hf6R6+kaZ1
ehD7TvPix9kcTkPYd4rMf5G9bzaIfafJM77cZRx92Hem3rzie6ymC/tO29bv
Rgtejdh3VovrP0k4Xox7q+6C4m9O2XzAvdW5G6rh7AHZuLfabhB04XZH8n+9
VdPZKyqdXgTqrd5UVUoc5npHIC+6v5PHYCKomkBeVOFLeMCt9h+4p1rOuvZ0
RLwFIC96u/VVbye1CyAvKnZPZ7lPcTeet1sv9+HO7ecMPG9378SAyAgXA6B5
u8RtdVVHGzr2omVXWEpJ6uN4Hq7d6U2bJVQmCeRFL3un3K4xmiKQF+VSVwrK
iZzE83KvhpArS/wEgXznqRU9Izdze7DvrIk1TX21bQD7zgPZ9x+WKAxh3+n0
SCfn1oYh7Dt/NFSpPR/qB6inmh99llL5ggFQTzXYlbuJ41E79p9m1GJrM+cK
7D/lfyiefMjxEXifOLD+9GdhWGe7R12zvgj3ViV7z5ldBfm4t3q3sYuasDsD
91Y/eao2R6+Mwn7UkCrUceVuHe6lNheanJauSMS9VLE2SS25T1W4l3pMLtJu
jXY7QH60eUDcNuMIHc/jFak9uEFVh4Hn8fZGSDjGBDMA8qOelxim2oHdAPlR
PRv94TdBXbin2nH8Ru0H0T+4p+oePJ6kP1WIe6qrx2+cK+p4g+ftgtw030d5
f/A83aeO0yYioUw8T5dtrOepfeQEnqe7Iu5HZU7DJIG8qWqX2I/ze6bwfN3T
Vk+bepksAnnTZ4MWZotJ47h/+vWywcvXPG3Yf4onBN91rqNj//mr24Y+ta0P
+8+uzvt98TKD2H+OGHmcP3B6CPvPtZOVvwNjBrH//OsbrXz0dh/2n49Nji5W
R9Cx//zAjO9Ri2jG/rNO/+ZLkYNl2H++qGkrSQgtxj3VdbVtioM8hbinGuFj
dKbpeg7uqSrL6t0u+f4K91RtC5Nn0zJ0cE+1if/HQd3EdAJ50i8ByYIhRVUE
8qQnFxYLnrt/wb3UIKvSW5FOTQB50iPProdte9AJkCc9f8lPTeF2N57n+9KC
V1CCXC+RJ30paxFst4kB0Dzf3IBAny0JdOxJA7c9DTEtHMPzdov3sefuIa8X
8qTfHo23ah6cIpAnZdOXUlxWMonn8eqkfZHU6JsgkP909Gq3E9vcg/3nEakg
dcHafuw/N0z5r29aNoT9Z3ZIePR+zSHsP8u2R7JvMR0AqJdKVGasearbA1Av
df/Y9xQb1w7sQ+lV3uNV36qwDz1eUH/x65qPoM/r3uWDWeT+b+KXYbMNgXuq
mRG1rdfFCnBP1f6tytdr1u9wT9X0N+NXQHss9qXpWwTkXlXVEsiXFoU8q033
6QDIl06/s54xmqUD5Eu/rPnrx+XHAMiXBhqrfgy0Z2BP6vlM6U23IYtAnrTs
7J7fzWuniLz93b4GvymwkGPCN4BnipDn2Kf0008Amqirek6s6MdeNNa2Y3wy
cRB7Ufe9OyIm7YewFy3J4h1X4B3EXvTTo/gLc6YfQcmrtauFw4Wh+mgQp45s
MUBe9Kfo59TUsW6AvGivO+dwSAIDaBEz6yIKGKAk8u/P3x3d2ItyZFfqn7g0
SSAvatBalppMPu+VnBR6fh/lhALVsZxcdpOE6jbnxI5iAdhul5hBuz2AfSiI
rpCR0h3CPpT/527PH2xDoMBizb3JQ8IwYQUoUWwvxl7UTDJv2Eq1HvdKJxIP
Na2dicS90vF3xo+0sytxr/T1rtrk2tE2gLzohr6rKYZr/psvHG2W/Hr5Dgae
LxwbvlwtJYKB5wuHH8r/ppzQDZAX7TU1sjic3oV7pnC14YF9kX9wz9RXKOJu
1p5i3DNl3yFMzEkn4/nB59wuufn7/cbzgYsXbHZy7Wfi+cANvaJXrp+YwPOB
da8nV8yT3y/kS8P/jnWG7p/C84JT6/xOP+afJJAvPfLq18q2ynHcHz3ZNvI3
/WAr9p5Wtgu2WYF07D1XTW9n553sxd6zeklIUcvsAPaeIkJHhZacHMLes1FN
zOtq/iD2nuzFk7T5T33Ye+4wee5XN0zH3pPf86dvfHQL9p6Zt/sa6tK/YO+p
sOWifnBSMe6Zjgx9erHfuhD3TMcP/V4vO5GDe6bnTlMHNXa8wT3TOl51sz/q
F3HP9P6da6U/PVMJ5Ecfb7WMXmtaRSA/KveDbSZxaxnulfqu/97VeacRID+6
VCol5qpxJ0B+1NbwGmO/QzeeT3xJSirK6TEDzyfOOiX/VEGNAdB8Yn9ZGcnR
Yjr2o50MGg+8OobnB7PKcr6yvrMI5Ec7fc5kXSevJ/KjC2p/ux7WTOL5wjen
Hqsb87MI5D1/3xTr92MwsPcs1Jfb55vcj73nGTWZNWB0EHvPZlrX+5RDQ9h7
mhSJ7xoLGACoV1pg3vZe/FEPQL1SUeFI+5amDuxBBZcc6bYercYeNL8kvFVl
20cgfVv5WeFrYXj0z6VXd+MJ3DN9wfrx8YVPAe6Z9vV3nvcaeId7pgVcY4Pz
tKfYk84KSOXGetQSyJOuU+Kq+r2jAyBP+kPN1qCxkg6QJxUXMfCw9GAA5ElF
L/sFqrswsB+N0g8cUVzHIpAfbTOaUf0pPEVw+azacb2IAqPGYobWiU8Rjsfn
bi6/KgBjYv8Ohzb0YR9q2b5fXjpgEPvQJ+9mBzwdh7APzfjh5Rq8fRD70OBm
dim3kx/BVM4Xndt3hOGZX44OfprFAPlQyxnLmKmGboB8qGeYnI8Rub8OU86f
87zKAFd26g8asbqxD+2ZPueVcXSSQD70l9qiRKbxFHEz6WTM4n5OmC/3cmHp
tUni8l051up8AQjPesemWA1gD7pgeTmLY88Q9qANf4w+y4oMAeFQpW+C2sLQ
JYlu8320GPvQ8Xm58pnOOuxB9dujHlwzJ++vr3JOjhQ6MDoTf+moPwN70MxA
/UaNkUniFetuTFMsBb5qjs94qjRFuHTywte9AtC6MK/5woFB7EEXyiV+x54Z
wh6UHjKZp3p1EHvQC96nXQRbS7EH1XcxG1JP7AbIg0qUJYTKPGMA5EGPyXOn
xQlPEsiDes9beHEbThHIex7meEpYSwxh7zlH7WDv2kGuJ//6zi/5zOLeuwzs
OW9sOkj83TpFnOZO/7WqjQJvDgX72M5OEshzKsjzf/WxGQJpXpsjLnN0gaPb
qo33xjHAnTXvHhw0p8DZU9IdHw5PEchrHnal9fOZDGGvKVGzUthlYBB7zbLr
kQPeofW417nG90/fNv5bAHnNVc+F3yRtqvyv16m3TuhneRtAXjNR0/ZHM/d/
85i7N5neyJVn4HnMaza8F82NYuB5zFEXE4cPp5Lv8/96zbVbD3469bEL9zyr
DKSWilT8wT3P0Ivv1a81FuOep0fTtuec2ol43vIrMN0WFPILz1OuCyls/SDF
xPOUPQItVXy0J/A8ZcU7nF8MciYJ5Du7bxnvm9OewvOVrfjfd4dJThLIdxbL
3NL27RvH/U2Nj21/VOgt2Fu+5z8j62pLx95ybXvJMZH6Xuwtb+7/y3OgZwB7
yxOPi0bX2Q5hb+nASnwYXj6IvaViAPfLsM4+7C2VbMfr5FZ1Y295zrRyaq9E
K/aWkvHB2262fsXeMld6UCfubTHuec5vumfgdbsQ9zwrp85+/rIlF/c82bl6
5lQZb3DPU/78i6VOey7jnmfw3/wDG+zfEMhvvjVpdlNcW0UgvzlUnhdyYvln
3OtUd+/d4yjaCJDfDPOQtivf1gmQ35QPFtOJP9qN5zkvfphiOj9k4HnOsw5X
bDL3MQCa52zvm8IK/EPHftOsZSaryHwMz1vOXCexGJfHIpDf/BNSzGYGpwjk
N6uzhXKPtU3iecxTH6UseKVZBPKWnPqWISWlDOwtvZ/8TZO714+9peHmSfmU
7kHsLePTJANjjYewt0xIeH3WLX4AoF5n9Bfzo7FFPQD1OrVSDO9cpHZijznN
WPsjyr8Ge0zhT63a63Z9BGq8y3I9koXh+uduDjeKCNzzbCu+w/kyswD3PO/F
HlO1VsrEPU8L7aNLtzKeYs/5azhBZlarlkCes8nkyw6fFR0Aec6Kd9nj9gQd
IM+prvCcXu3MAMhz6vtvfvbWnYH95tcoH4lNfCwC+U1w/dWhy7xTxNtV+fwi
ORR4cPc122bpKSIgqF5BzpN8Hwh/wTIm+rDPNPf7I3rJcxD7zML71w5cI5+/
yGceNbilYKE1iH2m43GX9KCzH4GQesxxcEsYHvq9TzzbsBggn+mrc37txM9u
gHzm2tj3q+LJ9UvZ+ZFjnyUDCKe/e1i02I19ZsjOo+vWak0SyGdGTq+x8iPX
LwXNRbeHezihg/d2pTuBk8TDvKXxGtkCcPknXxNL7QHsMQdvpH1IVh7CHjO/
bWyVqNQQKEkuOC2tKQxZry6bH5wtxj7z1M39DnO5ddhjBv/cd1XsCAOIULhr
Grq6wNzN0jXxgQzsMQMKivKL6ZOEUeRGd7dICvTZOK/8YecUMX9N2dadLgCH
xqw5ysj1HXlM6sVUznRy/Uce0/xI2Y7Uu4PYY74YuWMwJ/IZe0yd4iBH5wfd
AHlMdiNjrsqnDIA8ZuqdcQN5jkkCecxstp8a3QZTBPKWIZf6udupQ9hbnvI0
ZFaS6znylRV7PworBTCwp/Suy5t5LD9FCCTrpWTXUmCokvLrRI4pAnnKYmsZ
8at2Q6BVRsj+ZXsnKJAOkhAjj8fHZvTWe0Py77fWeHn+yBSBvGTns32PG8n9
IvKSTv1fjK0nB7GXrPf/LpFnX0/YeJWnEkldoGm/op1uGAM8+20tm3iTAndn
V5/IIp8HyEdK7JM2tT01BJCHzI+Zj5mKZWD/mFseYCmjM0Ug72jL+LBOhXwf
RN5xz/dPc2evMQDyjmE1xJVoySkC+caEma0uLIchsNe1iZMnrhPIfYkvTiD3
C+fqXR1iAAW+rRtrOEPef8gzZqyyWVKzbwj7ROWbol78TkPYJ1ZRyg+bvSgB
FCFn3V+0TqB9+X7WMvJ+1/p5aaPlKgo0L+4ISyPPF/KKPGJpD7aSnx95xTbn
vj4/lSkC+cQvtsL2XFZDwPuvbon2+i5Q91YnaTn5+cPpF5MaT1Bg3KkbF6LI
6498Yk7A95gssyHsE0/X9/Km5tbj/mTtU/4WMzF3gHxiwDFVLZ3uCtyflOgS
1+F/1waQT5zS0vG8NN+F51+H3I2LtV7PwPOvm/lFNKUfMfD86+xa6/1amd0A
+USv56+pdt+6cJ+SYjFc1THyB/cpS4biXXzlP+I+pT+NurWw8Rmeb83dsnku
SegXnl+980t831JeJp5f3S+bmGajOoHnV987OpNVnD5JIM/IQRVMv6M7hedZ
e/7xs7u0dpJAnnHdLu1PhRPjuCfp1Xvh9t+MFuwLqdRDsrv06dgXirbe2jXz
tRf7QrXTPLv1WgawL/yl3OR4x3oI+0Lid3HsqV+D2BcKHjLUejXah33hxuh0
9xfbu7EvTNjwVCvdshX7Qq/c2JRXHt+wLzy1cSiXP6cY9ym1TUUsjz0uxH3K
wu+asnX6ubhPydCW2n8HpOI+5XycxNy5nKu4T8nlFnpqquE1gbyiwWeNc2u5
qwjkFatbTn0/5PEJ9ye56xs0E5obAPKKR7VzsnKkOwHyign06lerDbrx/Ozb
qsJhXx8w8PzsQy89G6y1yO/Xv/OzrZLCr++to2OvWP7xsk+7zhieby2y4wJX
WRqLQF7xHRiSFNaYIpBXdHy+R1eIfB6j+ddNAaf2V8myCOQL6SEa4HMGA/vC
DCFT+wa/fuwLz8qkVLxqG8S+0GZ4Yqj76BD2haGXlIi5VwMA9Sdzm4ul0v72
ANSfLB6IXLy3qRP7w/vvBT0O/6zB/vBCh1NjoNpHoHPYZa9xkjCUi0oeLv5J
4D5lrYfvyu4fBbhPefdIYuzyo5m4T8nh6LX03qEE7BdTN785zbmllkB+8TZT
64D0XDtAfjH+r03TTBYdIL/4xdyt2+EcAyC/+FjTe5nhZQb2iled42/4s7EI
5BWtj7HZinNNEf4Dt2fbMsjzu2TPPaF1UwRNRsd3l7sAvG7hUBGZ0Yc94tHu
9KBzzoPYI0YF10f9JvcLyCMWr5O8GXh4EEj7UHokbgrDmjdaYsqmxQB5RGFi
Za1OeTdAHrEijRH0z/7gNm9g3Fp9BuDXOJxsTWFgj6i8VdFqs8YkgTyi4IA2
XY18Pi8R/Hni5C5OeO7JhzuvQieJDYfdxwwyBWDg60Mn7+0ZwP7wrXu7dtnW
IewP5Zbk2VqvGQKPsrxVNu4VhklWnVWei8XYI26Ie/Ppe0Id9oeNb3NS8sjj
ckyY4hGu7gIXMng5koMY2B/GpE9oGZD71w0nJ07AMAoULz14eI3qFPFJV8fF
olMAXhUrjSiRH8T+MP64bRo3uT9A/vBwf25LasQg9ocxf7fNl7z9jP3ht0XO
S00h3QD5w0o/WX0KuR4jf+i/vjZp3wyLQP5wo/UCR5L+FIF84Qt3C7dh3iHs
C/VKkzZJwiGAPCFn26no1+T7OvKDFeIsdYONU0SXu9gD30oK7F26wejZsikC
+cG/5QN8X08OgSn3Wz8+/ukEm1YnKbeSxzN7XdD7kj4FstJkHqw0miKQD+Rd
IazGrz+EfaCmZfTppLlB7APnm5q/xx6uJ97RcjunHnSBiPmLxezhDOARpyDi
coMCtz6wUEnfN0UgD0jLaHkA7IcA8n9lbUwJIoaBvR/3mc3vbbSmCOT79sQA
/cWDQ9j3HVZW1nP1YgDk+3qKnOw/iU0RyPNBSktN2ekhYFF26MLakE7we9mr
iKXk/cmYDLc2VqPA6VV6r56Q9x/ye21r/op6gyHs8cyiBBXp5PcBebyNv40v
D+8rBZKn2zO6OTuBRePr2H/2Gx/7I1YLraTAMruz+f3//HvEvz5PL9N8h0Qo
AyCf91NMcaZg+xSBPF5E5A+rquNDIGr9B3lb4S6QXBLRs+0J+b2hhD+JOE6B
/Nul9fMOTRHI473dwVPkemwIezxpZx4zuef1BPJ2L589qk84QR7/W7OyBqsO
INKZ1zNDru9hktV/9g2R+8/Bj/JX/zn//3q60r6lBdzk5wu6sB2YnO0Ek3Kb
7G+R56dZufJQqRIFGrhc4XtFnh/k53KNdM7sIP+8/ooyP9GuDnBiiY9jQAID
5MpWrbgpQIEz3HfeLjs8RSBPt0vm2Fs+8njKfj6dDRvtBB/e237eFc8AlL0V
IRxHKfDs22zexH/O179eLvIuxcCO3M+l2dxb5/W0A8wUL98lGsfAHi73rWfG
UvL3ZaWcnoymdYK/nQuy68jzzywwutCpSYE1ig/+iJLHi/wbVVD9pRi5v0Ne
LX71jz4pagkYKJpry97YCfirD0wZk5/3W5rxlucyFFgY27vaiLzfRcuPpK51
oMB6lbPnTcnvH/JwDovDPtw/6on/f3/6/5+PPNxdDamfJkUfwdy0Q8YGNTSf
XAD+D85GFss=
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{827, 46, 44, 333, 334, 335, 336, 731, 623, 534, 
                462, 408, 376, 755, 647, 558, 486, 431, 773, 665, 576, 504, 
                337, 732, 624, 535, 794, 686, 463, 780, 672, 817, 583, 804, 
                696}}], 
               PolygonBox[CompressedData["
1:eJwV0klsTWEYBuBzW7SVSEgsJDXV0IghtBfVyQILCUmTbsza3qo57co8z1rd
YUVRVCyaSEjRqnmeN8ZiYSqtHaJW6vkXT97v/f6Tc8+5ORmJquLKpCiKYrQx
htE0WWyjhI8uWMNAXuh1TOC2Pod/5otsp5RPdmsZxEv9GFnc0efSbb7EDsrI
5q79vPAgXNZ3kiDORO7ZzydGs76Lcj7r6xjMK/04k7ivLyCJFn03S/iir2cI
r/UTTOaBvpBkruh7qOCrvoGhvNHryeGhvogetOp7WcoUHtktpidX9X0so13f
SAZv9ZPk8lgvoRfX9P0s55u+iWG06afoNh8kj596Hk/MpaRwXU9JjqIj5mlU
639kDVnhf3J2XnbY9zWfNsflLJkpW2ShXOH8u3kzY/XhMl2ekznynfM+sl7P
ljPlSNksC8J9wwclD+njZX54b9kkc+Uv5/3lWb2IUeZWmW//VJaRygD7RnnD
PtV81Dw9vI/eJQ+E36dT7+e8wTyblXqH3MII3usNxFxzODwjv/UCnpkTpHFT
T3NNnXlGuL/+V9Yyzj4evh15Qf5wtopO89bw/nzQz1DIc72c3tzSa1nNVP4D
iqZq5A==
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{298, 45, 42, 509, 598, 706, 303, 412, 467, 539, 
                628, 736, 350, 382, 436, 508, 597, 705, 302, 411, 466, 538, 
                627, 735, 349, 381, 435, 507, 596, 704, 301, 300, 299, 348, 
                380, 434, 506, 595, 703}}], 
               PolygonBox[CompressedData["
1:eJwV0ttPjnEAB/BHuSreTrLZtDlsUm/MRWE2QoqcVv6EFkqRs0uHcFciyhUb
m04ytsaFuUJ4sTkUcVEOuepso1E2n+fis+/3+/u97/a8756FZTW7DsQFQTCD
GFFy2O5gG1s5QTOvSffh8AufKbaP08Qr5jjbzye22Me4wkvSnFXTx2b7Dj9Y
Zp/nJ0fty8RItav4SJHdySA59jkmOGKPs1q/yD8a7Rek6Pv4QKFdKtuZGx8E
k3a+fpWZ9u3wd+o3SbK/2/f0DD0qzzLOYecPZabznTJXtsg0ORY+h+yyF8hV
crlskNNccr/GfqAvlkVyhbwuE+Vz9ytlpz1PJsuorJS9bHL/SGY5K5F5sk2m
y9/u7uuL9HWymXi9w3mxfoOI/c2+q8/Xs2UtYxxyvkPeItXdaPgs+gWmwv/W
LpTXSHD/zE7SK+ihwP7FWr2JOJ9pt7+SZZ9hlIP2CHl6PX9psLuJ6Ht5z0a7
jS8stU8zQo09TK5ex5/wGe2nzNb38I4NdisDZNqnGA7fW7ueJ8yyd/OW9XYL
/SyxTzIUvst2HY9JtMt5Q779HzI2ZnA=
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwt02WUlVUUgOFBQQRBGqWk4yepoKQoICBId4c0KEqDgqCUSkkKGKB0dzdK
p4KETSjdIfHstfzxzHvOvXdmzXf2uTlbdq3ZJVFCQkJ2P6J/MJssNn01tf6s
ubSePqV7///8dM2op7Q099nCONJ5/RftRgrrwzqTglxhJcNoQzLvH9BvqMoT
9j/qFHrGnj+ZQz/qU4b/2MoXvEMhrrKK4bTlTZ7kL+bSnwaUpTCJSRLPRVL+
Zh4DaEg5inCN1YzgbarxNGeYzwc04lWKcp01jKQd1eM5OcsCPqQx5XnANsbz
LsW4wVo+pT1vkZxzLGQgTXiNh2xnAt15kZus4zM6xO8604P6LTXiTOx36Zdk
sD6pvXjW+qh+T2br3/UZzrOIrF4bpGn0mDaNc7Pepzn0K31OT2sefV0fsYMX
7Cdqej2hufU9TalHNKd+p5n0N82rL+kt1pPN/nNNq8e1Y/xv1od0Bs9b/6o1
Y67Wu3UqvUll/5POIgX/sJiPaBaz9P5+/ZoKxJdhp0zifYpzmw2MohO14u74
3B6dRp94Fv5lCYNpTsX4cz73g06mByW4w0ZG05nacf5cYClDaEElXuYumxhD
F+rEc3GRZXxMS97gFe6xmbF0pS6pucRyPqEVlSkZM+UyKxhKa6pQKs6cdDG7
uC9kjDnHmce84q6QJe5HzClmTfa4EzFXcsW8407EXMlHfgrE2tk8BsCmgyw=

               "]], 
              LineBox[{41, 2825}]}, 
             Annotation[#, "Charting`Private`Tag$16653#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1HV4VmUYB+BvG0h3qAgKggUjxuhRgtJpBzlaYiip0mlQSnpJIymhdEp3
KV1KozSCAhLi/V7+cfN7fs/7XdvZ+c4hT2LSax2iIpHIRf/kZ210JPI698wL
6UEDChBLQdY5f4P75kX0pCEn7TqRg336txRivf4mD8yL6UUjTtl15in26+Mp
zAb9LR6Ga3JtS2RvGnPavgs5OaBPoAgb9bf517yUPjThjF1XcnFQn0gcm/R3
eGReRl+aUpTN9u8SYbnej0TiKcYW+/eIYoXen2ac1bvxNIf0SRRnq/4+0azU
B9Ccc3p3nuGwPpkSbNMbEMMqfSAtOK9/TG6O6FMoyXa9IclYrQ+iJaXYYdeI
5KzRB9OKC/on5OGoPpXS7NQb8xg/6Z/Rmt/1T3mWY/o0HplHUoabehl2mZuQ
grV6ihjPgbkSn+u35RfEhfvkbGH0/89eRvN35nhZUz4vV8pyso3zP8w9iNXz
hmdGLpAl5XHn6eQUvaisJp+TK2TZ8HPDAy5H6YVlQvi75RJZWt5ynlXO0uvy
onm1TLDfLZuSkifs58p19inN482Vw9+j35Ffht/PJT2T8+nmWnygX5Q9yccJ
fTpRPjM6XCN/6WXZY04kFev1VD4zwfxK+Pn6XTmEgvbx4dmRi+RlZ225ZO4V
/n5+1WdQjr16M1KzQR9CO8qHd9vtqSB/dtacNGzUh9Key3rv8J3wmz6Tivyi
tyAtm/RhhP9Mruh9eIGT+ixeZp/eknRs1ofzj3koxbiiJ3HV3Dd8D5zSZ1OJ
/Xor0rNFH8E98zCKc1XvyDVzP17itD6HaPdpTHie+FuvzAFzazKwVU/tMxPN
r/KVfl8OpwTX9MzOZ5hr86F+XfYnPzmd/SDP2Kc3TzVX53s9Rh9rLh/eH/NS
eds+m3l2uHZZL1yvXBO+a2cHZRsK2GWUT8p54VrkNudp5CS9iKwi88pl4V2U
Xzt/YB5BIb2kzC0Xy1LyuvMscma477JO+K7kKvmRsxtyQPjd5LL/UZ61z2Ce
Zq7BXD2ZPs5cgTt6dn2OuX64h/qh8OyTie36SB6Gexuugxt6J/40DwzvNuf0
eVThsN6WzOzQR9GZm/qg8A5wXp9PVY7o7cjCTn00XajGUbv2ZGWXPoauVOeY
XQeysVsfSzdqUJNaxHpHass61KUex30+iezs0cfRnVv64HDvuaAvILl7841e
kbt6fU6YO/I4OZzPl3vt05onm+NkVZlPLpcJ8j9cmvHi
               "]], 
              
              LineBox[{766, 658, 569, 497, 377, 756, 648, 559, 487, 432, 338, 
               733, 625, 536, 464, 409, 378, 339, 340, 341, 342, 343, 344, 
               345, 346, 734, 626, 537, 465, 410, 379, 757, 649, 560, 488, 
               433, 774, 666, 577, 505, 791, 683, 594, 810, 702, 830, 347}]}, 
             Annotation[#, "Charting`Private`Tag$16653#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1WdwlUUYhuETkmDD9kMQUBBnBAuMzgiCSJFI76LSCRBasIDSIXYICSiO
BUS60pQgJEhTEpBeLOMISK+hiYRi7+L1/rjzlN1852R3v02VjMEdBiUlEokS
P9KSE4kmqYlEfkoicYDeT9fTe3AWe4x/QMugGG8a/4bWxVRj4+gF3RBsj9/H
TfxyWglz+WHmZfI7+Y74U86LeZgmr5En85f5saiKR3RNdQV8TeyV30O27qI8
FGUxXDdQt4vvhL/kQjRGM/0yXS3sk6dhRPy98ewYR3O0QMvw5n9i7gPYL0/H
SLSKOcaW62vHOskzMApP6nfrOuNvuQit43n6Fbo6OCjPxGg8pf9O1wX/yGvR
Jj5Dv1L3IA7JszBedynWD+UwRvd07AnfFf/K6zBFl8A4XTW0je8gr+Lr4rA8
V74Wb8mz5Rz+x1g/7OBr4mZ+Ba2Mefwu2gBZ5j9D98azaDe6md6L/4wtpmVx
EtONfUvrxT7hc+Pv0iQcQ7bxr2htlODO2H96B05jkbyHNorvh3axPnR1rCN9
iG6g1XHE2Dx6Hd7Wz5Fz+Z/4ESiPlfJtmM8/b3wQv4/vjsvyx3I5zIhzL0/l
S2G8fBfa69rKn/L1cFR+HxN0P8sjUQEv6Abr9vM9kIjvqXsU7fSfyfVxLN4n
vIhn9Qd06UjCRl0HtNevkRvgeOwdXsJz+oO6niiFTbrH4jP0hXJDFMea4GU8
jifQEZ3QOZ5vbpF5D+OEPB+voEs8y9hafSOclBfgVQzRH9L1QnLsva5rPF+/
Tk7DKXkhxmKo/rCuN1KwRdctvkuch3i3cVr+MO4PDIu91GUgFVt13eN769fL
jXFG/ggTdb/Io1AR2brhuqN8H5TGkjjLmMlvi3uDT0aOfHfsT6yHvIFvgu9j
HeTr8Y68SH6N/5UfjS/4WriFX0WrYAG/mzaMsxL3Spxv3RHaN/5meh/O4Qp5
KS2PU5gl76T14/3G9ribaAqOI9f417QOzsddLBfSqjiDvLgPaRrSY1/pRl3T
OEN8DZyN/aM3YLI+T36d/y3uEdyK1fLtWMjnxF0Xn8/3w5XIlytgdtwRcR/y
qZggV49zGOdG3sQ3ww9xF2CS7nc5C5WQG3elrpjvj6tiTXW94hzpN8vNcS7e
x3i30DvOjLEt+hYokZfE/iMDfdAX/dA/zou5W81rifPy0tjDuHP1J3QDcDW+
1A1AD/02uRUuyPmxPhgT95guE9fEXaXLRHrsk9waF+UCvKH7I+4VVMYkXVbs
MT8QZVAgV8Sc2NP4v8GXxkS5Bor4algcv2O8J7+Db4NL8U7JN2KKvEz+Hxyu
CbI=
               "]], 
              LineBox[CompressedData["
1:eJwV0FtMznEcBvCfYag5dLjMJmorF6UubObGlmtR3BNlq7yJWx1dRkeqC5Sr
smGTU13gwlab0gkbm82FzZlNOSSxPr+Lz77P8/zft7f3zSyrKUmsCCGM8mdV
CHVsoXVlCJVUcXh1CE9s+/iuD9HGGfs7WyXrmbRVc8Q+rhczp9+Or7ct6vVk
0m6rs72Xq9jAlO2SbQ0teh4nbGX6hLyfeX1AT6Vbv6O3y3/lBrYyrG9jQO7w
vF7+IFczKhewUb7lZtAvT3vdZXkt5+J3cXeRLz9wc+Lf4Lr+0i1ijoT3HXWf
2l+7B9zHbh6f+OH5oJvGW3riZ7m7+cZdzzvcJfsbt9Edd3fG7yCPuFkMyi/c
PXR6T4P7Mf4+jMmFbJKH3M1clWe87oq8jvP6Dh7KudyQazw/Jk/KJfzUr+np
9Or39E75n9xEFl22xvjd5AQpzNr6bEm06gWctJXrU3Ipv/T7dNn+681kc8HW
ZPsc/x9SeWarpcI+rR/ktz7MRZrtX+JnkMZz2ymO22f0QyzoI3Rz1v7VVkt6
/B1t/bZk2vRCHsnbuSm/cvcyz2mvXQafwXDj
               "]]}, Annotation[#, "Charting`Private`Tag$16653#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1HfcjmUYxvHnJbtCisxIdhFJtlDZZCQayirK3jt77xkh0rIro0GlEJEo
Oypayt579D3/+H2O43de1/M+z3vf133nadGxQYekRCLRKVkicSlFIvFnqkSi
Hg6kTCSGoRYKIUXqRKKz+Q39A7TDZfv/MnsaB/lw1EZhpLS/i/lN/UO0xxX7
/zarj1/5CNRBLntHm2XGOl4Eqcy68lv6QnTAg2YzzfJhO7/q7/2jN8BvfCRK
2/MeL466/D4+Rs+Cb3gNvlqvggd5at5NT+A5fZNcZF5ZX6aXRUf+EJ+l50cr
/Se5w7yevlYfKqvLLvJ3ec1vOyIbokfM7G0s1/PhchQvI9/nA2QJ2UbuluNk
Peu55VjeR94rX5bb5Cj5rfWa8lNeFR30A/Ih8zR6dz0Jz+ub5WLzKvpyvRw6
8aL8Lb0AfuLX/eZ/9UY4xEfjaeSxb5xZVqyPzyGtWQ+eDEt4Z9zw+f/4MzjM
x6A+iuGmtaPmjfEHH4sGeBi3rCVkEpIhOW6LMxfnKM4Cjvncs/hTH4eGKI50
fkdP8+RYyrvEPcVx3gR/6ePRCPfbO94sGzbwErjdrBe/Dct41/i9ZrN5Qfwc
1xMn9Kb4W5+AsvZ8wB+J/5fn5RP07NgYzw3/TH8i9vA7eG89BV7Qv5fLzavq
H+nl0S2uB5+jF0Jr/We5M+6D/qU+TNaQXeUhOUWmtX4yzi968n/4s3IDHyEn
8nLyQ/6GLCnbyj1yvGxs/YHYx/vKHLK5/FGOlt/Fcy0/50/G86AflCXN79T7
6Cnxor5FfmT+hP6xXgHd417xuXph7Ir7hlNxPnFEnxS/GY8ivb19zVPhY94j
7hNOx7XDv/pkNEGpuLY4E9+P//QpaIrH4vfhrHkzHNWn4rl4TyCD7+lnnhqf
8J7x3TjHX8IxfRqej2cVGe3vb54GK3iv+Bs4H88mjuvT8QLy2TvJLCc2xXnB
XWYDeFqs5L3jDJq9zYtgd3wHLsT1xwl9Bl5Efvsmm+XC5rifyGT2Bk+HVfxJ
/oleMd4Z/BE+L95zeEXfKffEM6l/pdfEXfyibIGTcU2tbdTf1MvrC/WB8lH5
mtwrJ8hm1gvIKbyfvC/+htwux8T5tl5HfsEHy6finSN/lZNleet3y4G8t7w9
7pHcKldbe0pfoVdCe/2XOJvmJfX58Z7D3niH8K/1WsjEL8mWOKXPRAXri3ip
uKe8IJ+q58aWWMc9ZoP4HfiU94vfhsu8FU7rs/AyKsZ+XInnE2f0t9AclZAZ
V+N646w+Gy3weKz5nsHmd+Iz3h9ZcI2/inP6HLRE5Vizf4h5enzOB+BeXOdt
cF6fi1YoZO80szzYyqvEXrOhPAO+4NX4Sv3xeA/Es8bf0YvG9+u75D7zhvo6
vXa8k/TDMqv5jXhvoJfZhXjG4t3AR8YZjmsjF/NB8jH5utwnJ8rW1gvL6by/
vD/uk9whx8ofrNeVa/gQWU12lr/Jqtay6sP0jHEfY79cY15dX6VXjnMa7wO+
QC+G/bwR/0avg2z8ZpxjXNTnxT2zvoSXjnvGi/AZel5si/cYspkNj2cFa/kg
ZMet+B9xSZ+PV+MZRA4kfKadtcv6O2gTZxo5kWStvbUr+gK0jXsTf9N8RJxj
fMkHIxeSmXcwu6q/G2eJL+Vl0E7fLyfJ/wGYpTPN
               "]], 
              
              LineBox[{1944, 1828, 1742, 1608, 2076, 1928, 1812, 1726, 1667, 
               1567, 2051, 1903, 1787, 1701, 1642, 1609, 1568, 1569, 1570, 
               1571, 1572, 1573, 1574, 1575, 2052, 1904, 1788, 1702, 1643, 
               1610, 2077, 1929, 1813, 1727, 1668, 2103, 1956, 1840, 1754, 
               2133, 1986, 1870, 2165, 2018, 2196, 1576}]}, 
             Annotation[#, "Charting`Private`Tag$16653#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1GWYFmUUBuBhCetSuts/SgkoIaGkTYOUhKJSSigNSpdNd0jDLrmLoKSU
0p3L0indHd7vj/s6z3lmvt39Zmcmb7N2tdomi6IoVUwUjXk2ito8H0UXnoui
nuTjsm4zQ/QvMkVXhdSM1bfVXZR7kZ8rui0M1b/EVF1V0jBO3053Se5NAa7q
YnWvsNzenK26YfbUTLNXIy3j9e11l+U+FOSaLk73KivsLdimG25Pw3R7dTbJ
73FYTscSuRgb5Q5M8Jlv7FfkvhRijb0ce+Trjs+V87HSftRsREt5h1mVE/J5
sznbnT/CTMs1Zjh22GzAI2rYN5vvc4ck+1nzC2JeiKL09qVycW6yyX7CbMoT
Otr3mDW5zxn7RbMVE/3ub82run4clOvymrzWLM9e+Ybz5sn5WWVvFb6LbqQ9
HTPtNcnAn/YSbJY7Mcl5HcJ3k/tTmJu6nYzSp2eWrhYZmazvqLsuD6AIt3S7
+J0pTGUanZx3w/GBFOW2bjfT6Ryuh24Qr3NHt4cZdHHslm4wb3BXt5eZdHXs
tu4HinFPt49ZzGYO3cL/wrEfKc593X5G6zMwW1ebTMTqu+vuyj9Rgge6+boC
rLa35oBujD0jc+x12CJ/wBE5M3/JJdkidybOZ3rY78k/U5J19grskx86vkAu
yN/2Y2ZjvpJ3mtU4Kf9ntuCg88eamcL1J9axJLMhH4fnzfwwfBeO2s+ZX5Lc
fZjFvkx+M1xbttpPmp/ylC72vWYtHnDWfslsTQqfn+t3fxfuUf0vHJLrhZ8n
rzcrsl9+5LyFciHW2L9ml1ydU+Fzjo+TMxNnr0tWlttLsU3uyjznfR/+FvlX
SvFYl8h4fRbm6uqRjfn6nrqH8m+U5onucLjG4W9iEfEksJg/WEKv8Cw7fwhl
eKpLYim9HXusG0pZIo7oJ+izMs9en+zh2dL3Cc+1PIy3SMai8MyyVm4T3jnO
m2jPxnx7A3Kwwl46vHPkbuF+cl7f8P+Rh/M2G+yVOCDHEC8XZp3cNtxDPjPJ
np0F9oZskz/imJyTlXIZdsinzM/oLu8za3NOvhzuQ5b5ef3MKLyHGOFYolk/
XGvK2f8xK4fnMtyj9tNms/AZ901ye4JcJLwLWG8/bjYJ15V29t1mjfCccNp+
wWzJcb97spmDheG6m58E8nazSjhHzsUquSw75R7sl+twPtxbfk5/ORkj7eX5
V36HQ3IKFstF2SC350R4n9lzssjeiNzhf6QfoIthlL0CKcOzFN59ulzE2xuT
J1xr/cDwDDLaXpFU4bqH96QuNwn2JuQN30M/KDxzjLFX4plwTcM7VZeHxfam
vMxq/WBdSsbaK7NRfpdE+Yz5efju/hf/A3r2NOo=
               "]], 
              LineBox[CompressedData["
1:eJwV0LkyQ2Ech+FPgbOEe4gs1NR09s6MnmBGYRhqLsDe2wvrBcTW2BNKGldg
CcY1eBTP5P97zzlNsqWZoem6EMIk7UkIlTiEWd6iEPbtLGV7hBxXdifP7nmu
vbdoN7BhdxNRtjuouud4996B3cKpPUqeG31Ja2TT7iHmQz/UcpzZJQrc6sta
xJbdS8KnfqTlObfHKHKnr2gx23YfKTX9WCtwYY/Tyr2+qiXs2P1k+NIfWNNT
drUBmvjWK1R5ZN3zDHueDdLMj36iFbm0J2j7///sLl7cC7y6h6m5f/1OUZ+G
8OT7PzqKNzo=
               "]]}, Annotation[#, "Charting`Private`Tag$16653#5"]& ], {
             Directive[{
               Opacity[0.2], 
               Hue[0.67, 0.6, 0.6]}], 
             LineBox[{296, 297, 295}], 
             LineBox[{832, 833, 831}], 
             LineBox[{1525, 1526, 1524}], 
             LineBox[{2198, 2199, 2197}], 
             LineBox[{2823, 2824, 2822}]}}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"True Dynamics \"", TraditionalForm], 
         PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1b\"", "\"u1b\"", "\"x1b\"", "\"\[Theta]dot1b\"", 
           "\"xdot1b\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, GridBoxSpacings -> 
                    {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
d4/O7UjB6i/FrVfTq7xx0Ejo2Gwcll9pvJ8ij4DywVsMld8C2G4NLm6CcN58
dfl0CvJqO+CudJAAtzm8H4HY/KT/xKjJl+HgwnrX6Qgs/1TXkLYdmuOAuw1r
dIyweufoH412NQcCHHe9adCK1UfaPOOiHrsIMOK85jUSFt+3884mxmRj9bSV
QWIOtp+sipS2hIssMMMtqfuxVi7C72L2eWBCgBcEWup7sf5sUStd+0YoDjYt
mHhlYutJ4+3iIjgkNrIYKrNi3X6sQwI85PXTWwgb3x/Bsb/NX3CwlwV3Vhvb
Txq/19wcMeOkmYr+b/76v8+j8XtP7z2//fnQKPo/v8+jTOP3rDrb2aVEntH5
vYTbeOsPLXl0fm/3ucSxP9+q6fzesp61sW3ENzq/V8F2mfveShud37uTUSV3
sbAb0Pi9Oz3Mh/s1BwGN31uL51U2nSADGr83YRigxcH9B9D4vV2b27wj1kYA
jd9bNrt06arRGKDxey3WLNtE4Tig8Xtfx85kH44eBzR+L/hg9LZmmXFA4/cu
FHecbkSjgMbvjd4YiX59+A+g8Xve4ke+7Sgfov8+z64f7H2Djb/ov8/z0j2m
7G7ad/rv89jYzTknnHpL/32ePZrahz4eqUQ0fm9a/Op41smfiMbvSXOv8/Lv
6kU0fk9G8YHpLcoQovF7DoxB/2TxfxCN36sXMc4LNx1FNH4vJPqgesDLMUTj
9ywyWBntlsYQjd8T2Bmn56I5hmj8Xij4tOPsrxFE4/futqYXnr43jGj83sVw
Hv+mtCFE4/eC2NnHFtp7EY3fS4vt+F2h1I5o/J67b5AdL8NXOr/34M25rXWH
Suj8nn+lqOKCnS+d33s/G3ebXyMX0Pg9W84Z+b23SwGN3yN47b4ueBPR+T18
uLacsmYNnd9jOGua+P/IevNwqr73/7/QoAzHeGiSRqQMTaJaK5WkyFSpaJSE
UirSgGTI0ISIylBRCpF53BxDiMg8O4ZznNM5hjIPh9/+XNdrrfd1fX9/vi6v
K3uvvfe671WP5+OOWl6K+T3ba/5Seo6VmN8bc/hULD71G/N7L/fRDBO06jG/
dyq/dGjPiybM7030zjW82N+G+T2naH2ho0QnQPzesvEs/atVXQD7eWqvFqUM
3gLIz/NmPut805dozPOJuytQ+L9lA8TfdYxZxFxY2AuQf0fN/fKHbRJMgHi8
WDGZnSrZfQDxeCkX9aS+dLAA4vE+y/DFKLmzAeLxnM1qTvveYwPE4534MjnR
EcoCiMeLlFnrXhbBBIjHS/bSUO8N7QGIx7vhOs9Es7sD83P590Lmv19JJxA/
l1rRaP38TQ+B+LlOH4V1/ceZBOLnfGabOb9XsQjEzz3xM4p/1s8iED8XTLez
tCNYBOLnVpkcAC+/9BGIn2M9Um8apDEIxM89HhAzVJbvIZAPyK1000Ye/1cC
+YC8h6fHnVgRmK/LHhs0f78hHSC+7lzmk74gjVzM17EUh7bsOVaA+bpJyfZV
W18UY76OcSHohvL3cszDxa+vLF7fRAeIhwv+G/rx6ElTgPw/6gKl9b8VwwHi
4yxXNZu2yKYDxLMNLp62rr/XA5Df51RNYP5oIAMgvs1H9bG5/rk+gPi2Xxt2
2VVHsQDi20ojwg2CrNgA8W3Lze9AvWdsgPi27I0jknQOCyC+bYT+9oPSrj6A
+La5iXrLA/a9APFto+o/m5sj6JhH+xzb/SBjVweBeLTcKm97q9/dBOLRzNwN
r+5KZxCIRxsvypp6/KOPQDza4dkzEwuqWQTi0YSf/Mj41s0iEI/W5aEksms+
i0A8WqeL376npkwC8WjnDZ7aVdT0EMg3xJRbdXdeVjKBfEPbTrIzTvr7YF7t
XXmzvc2CFFyvvnlaNH6/lAMwvzburNFxOx/za/yHHdT3WRZhfu0sZQ+z+HwZ
5s0uFrrT55vTAfILad29snvjhCdAfqElG+Ym2nfGA+QLkrqQu+aRHxMgvmzu
6GrLv6IsgPiyrjX88s8l2AD5gszeVJnvD2ADxJsF9I3+PHiaDRBvtvVwR4Ho
DhZAvFloGafyzDADIN6sbEq4MyW5G/Nhm8zVNhqIdxGIDxu6zJB+ZdZLID7M
b6fQbeleJoH4MG0+mbB7V1gE4sPCFkTo602xCMSHbVYKZbH8WQTiw16rrBqv
PNSH/UXZ6+9lnNMPJ5C/yGH9u9vTKZ8xPxYlzjS5+D4TIH7M8MT0kqc78wDy
F22un0xl76Nhnux7rYbulEkXQDxZXfb0jkbfbQD5inI21phWmb8GiC+bDVly
8TknBSAezPXEm/vbt/YA5CNSUua78tuIARAf9iBQsKZ4Sx/APiJhkx53NxZA
fFjItMT1OFM2QHxY2ymLuYRANkB8mHzqZNk1ETZAfNhR7X97Klz6AOLDvI6Y
FL6q7QWIDxuyHOXLU/0fz/W8flP2DtV2AvFc9EUhS12udBOI54pQEdybfYFB
IJ5L1ynp9NngPgLxXJXhds/7slgE4rnilioHuA+wCMRzPflVJ8beyCIQz5Xs
dkX0+WsmgXiuAVG11h0KvQTyIz0Bd4VqB9II5EeSybQ/WLDsMua9nu3dFXNM
8ztAvFfTOrMkO/4cgHiv5EyN6yfE8jHvlbPmc/yR+kLMe8Vtesh+m1OK+aw6
rZg7zSvpAPmQHH/2X5OsdwHIh+RgOdglYBoLkN9ItY2euceQCRCPtaVBbsKJ
2QcQj3VafKBv9RQLIL/R1b9Bq5L82ADxWQdUOtz57dgA8VlRuis1dtuwAOKz
VJyWOY4fYQLEZxlQzh/uUujBPNW4WN2IeyidQDxVCtxkmz3dQyCeKnWuoFgq
gkkgnkq1/J3X1AEWgXgqKNqzlZ/spxBPZSGY1i/8mUUgnupjwbrU+Ht92Ldk
+VWo4M/8aAL5lkr/SPtn2n/EvFWCHN96lnMGQLzVbtOrjX5JuQD5lvwyuLkf
iwswfyW2Wvb8cukugPxKLbKR0hKfrQDyK8U23UyzB+8B8ic9SZHU3lHAAsif
dEmHwym6wwZ8Op8MvqlNgwf3PfmGPNkA8VwLDxt0CRezMF+l39XROTfSRyC+
6v58pywmnUWYWocZtk4KQcaaJ/lTNSxCiSY6dn5OGCr/PlN1rbGPQD6mUL+M
X7OxqZjHMlazDaJU5gDkW3LpVFDNCX4KkE8pPHnGlaXEBvyqtZXOalOAV/04
7OcrNli20yv0wuYZ4M98maV1kI35q1nqqecmXiwC8VcJJxOf2JD73cBQhd88
N2EoG/Tt+6LrLALxWB3upU3h4VkA+ZgOuQCaWnkeQHzWuqEX1cTLLoD4rDX7
cp/u/ygJkH8p6wCcf+TrK4B4LZWuKGKuNRkgviphhuX3V6QHIL/S9tVTifKq
DIB4q6CX8qZ0qT6AeCvp342HFOxZAPFW5W2f4zL12ADxVvNu75E+St4/4q00
r64uXLOK/B7+462GQ8zdOiL6AOKtZo1kK9cLMADirdaf9It1c+rCfNRC/3/X
Tsa2EYiPElzB/nRKrZtAfBRtZ46x43YGgfgoSwlPKbsHfQTio+LmpBhEAotA
fJRr3oKgkX8sAvFRBxYt6pTQZBGIj9rU63PyeCaTQHxUuuqJmiXGvQTyPe1l
fr4++SyDQL6nCkt9A0VPSwLxUyKmTUvzdZIA4qeeGRk1uOVmA8RPvVnu7r2p
iMD8VFOUXubH54WYn9LxDE1Ity3FvJO3k0HjI14nQH6nL3zjqrbLnAHyOwlE
5WX3OX0CyNekRvgb/lVjAsQ36cs9FxX+3QcQ36Tp9+p3NJcFkK/p+j5x6hFv
NkC80xqtyhtxt9gA8U5QdoXzO3cWQLyTdJfXaWdHJkC8E+1mcAbrQg/mkw7t
yjAiaymB+CSpj0vXiVb0EIhP+kYEr194n0kgPslf3u7MGXUWgfikBTar5wzI
54P4pA356wJ2pLAIxCcVied8mwvow/4oE774Pq3ZTwTyRwnFfu2I0HiP+aVr
7hLl3vXpAPFL1sYrXlvfygXIH3V0iSbfd58CzDM13fq2Z+04HSBflCFtcINk
5DmAfFErwnZMt0dFAuSDij2VN5CfxALIB/Xj05Ncj+ts0HnlyIJd4tNgddm9
rQ992QDxUcUNB6TmN7MwrxTezq+U3tFHIF6Jp7mLxmtiEfuo22Kl2ULw9ark
UcNWFmGUtWFF7qAwTPpXrZnG7SOQX2opa3rgTVsK5pv+rd7Gufc2ByB/1I/m
lTr/on0A8kP91Du9zVWODeyIB+wC0Smw44PrcpsgNhg3UzLkCM+A1ntvP2wy
ZGOe6fOzJ+1nnFgE4pni34o2dJD7VUuEVa+WvTDcIRmpMfiQPL//xzftOjPk
LrchCyC/1PwvYVuMXPMA4p1Sdkteojt0AeSTWprvlqs2pwO8Tq2YDcibAPOc
t0uMWbBB6NdAh6O1U6CJsXfw1Es25pkWg3f5s8UsYvmdK6ef/hCCatXPh6XY
LALxTdeJuHs/9uYA5I+KsxTfG/bMHeztqFptXDEJrozxVp5+zgZJbx1yZ39N
g5gr19r8L7HB0/Uf5jcDIehosVAoboJFpPBCX33XF4aH/+ZEDIexsF/qpcDV
rFcSmQD5o4x9hHIaE66D7uWOzx0OTgLV73OWxg/YYP06/tfrjaZBZJ7lRIQb
G/NOlHAxl4I+FnElc95ExBJhuMQoWiWhjLz+SMXvaiZT4No+d4nLwWxgY0/9
o+QhBMvd2nQHyOtBPqmlW74xk5ZmY75p+yptrdeJXQDxTc8Z3//dTxrZi3xR
HHpd/OrzQQDxTvPfpsxtPpEMEJ+00nEp4/tMN0A+qKfnH/WukWMAxCtNtt1+
f1CwDyBeqXb5LS8DKxZAvJKPzerQR2R9Q7zSc9k0mwZy/0e80oL3iSph68l6
/R+vVEaTTZ341gcQr5TrsC9t0QoGQLxSzELNzbfDujBftPvyWuOLl9sIxBd1
f6ILzkh1E4gv+kD/1v5vFYNAfBEzsWbtcvs+AvFF2y41ZR8k+x3EF0VG/T1a
NcIiEF8kfyHZqV2bRSC+qDN+mm1dxiQQX2RZFO+dbdVLID/V3vWhMtfOZxLI
T7Vw7/swjYrbBOKPLBPSjvmVJQLEH6002Xg/MjgbIP7Is3kPXT2YwPyRp13D
F91rhZg/2lU56BGwvxTzQtU5rvevdHQC5KNa/EuJzXZwBMhHdVXXT+Hu8xiA
/FJLVh4ZilzDBIgPiua/d0u5pA8gPui0kt/fdAYLIL9UgdMavhoPNkC8kPql
vrBtTuR//8cLxbRtX3jxGQsgXqh8+mXYIfJ8iXihW32SgotdejDfU7mz3L1n
N51AfI/1XviendxDIL7nAh/8EWbNJBDfU35+60CyAotAfI+4YddlyhB5HvyP
7ync1sYazGQRiO9R58sKo4f3Yd/Vpt1LG/+5xhLIdyXG5zMsLhOF+Z9nkbmt
F13TAeJ/3t5cNRt4PBcg39VMTtn1Q3YFmAcKbP+0IbqPDpDfSksgQEUp4RRA
fqsWg8r1gd8jAPJXlUjPm2uMZQHkr1q4rs3qvQ0b/Lr7jv6Qbxoky/QF3fdn
A8QXqW92+BPQzcK8z0vZS12atX0E4n1UDA0KPtSxiIwBt+MpdCHo79JzQq6T
XJ8d6iqcPmH4xmXahjLeRyAfVuoSry2aDin43/vUN6cNPL2XA5Dv6vs263+v
S7wB8lmteR7DDpFlg9XeRuOM2UmQ6bhOw548XzKvPtikOjsNugUfHDQ5zsY8
UJX++5tP7FkE4oFMf5VkpZL7v6FT8otmK2E4/jW008eT/Pl/fNAZz2gimpEJ
kA/L5r7hzyVn8gDihdgvp9dfv9QFkP9q4dFP0Zf4INCU/7s0PX4CbI0ffGJ1
ig2e5DD0XxZOgZTnL6LeBLAxD7RQZaPKq3wWEXA0ZeEmQghqvZjz4nBYBOKD
ftkkvbu+Jgcg39VkjWLKr2E38C/64xbH7Ekgm3PJ5t1TNoiML3q9n5gG7zVG
xLqvsIHx26Aig51CUKb20dzdcfJ8UM/cZ3hQGL4W3tUfHsXCPqxl8IyCTCl5
/vnPd1WSyajietqA4B69d8HbJoFnvOuGNc5k/7v9+C2bfdPgjuZ+j/OP2ZgX
2ju0uPlOL4voeKH/cQ+fMOT8WaZ+6xeLMLCeJY5rTwGO3RlPNXL/38JcHB95
XwhSjnSYVU6ysP8qkxdd9bohC/NBdUWhHOUosp7+57faudLJ6KfSRnC5w0dg
+ccpcDZQyTyIrO8u0/rnrBKE4NrYtWMt5PeF+CCtxl9uJV3ZwHy7gV5e6CSI
s3/38pUPG7T4OOlpbhCCn+6seKlH7pfIZxVqtegiS+oSGDoxqTgiPw34JJzL
DZ6wwSzgv8jqIu9PN0dEsp18f8c/tb5bPQU2Nw8mbCXrQVotR93fRgjOv92b
XUy+P8hf1dZnfNV61zHwJWxfyKKeKWDjWBzAJusz4oFoNwTuOZjlAF/pafEt
7ZMgycyhi/mCDUoTkvZe0hWCa8Bmh7fk+nAt95wQExCCK90u5Zb9YRHMJtOP
wpZTQHVDMPv/6mnMxPqNqf5CUNHD0bGSfL6I9zl8sS1lfn4XQLyPQn18TFJO
3V7kp7qQPP1sJjcQIP7n5bXZ/CKJZIB4nYPdJfb+w90A+afeDf2rCpVmAMTv
FDVuNB/g6wOI3+ld7/K64QILIH4neK6ar0GbrJf/8TsyV+Vjl5DXi/idhmh4
bI8iGyB+p3pkfPOf9D6A+J2ONRkbOjcyAOJ3uj7kw5qvXZi3GYyKjtPZ30Yg
3maYxn9bc3E3gXibvt9l/15LMAjE27xkfMwyt+4jEG/TKq4oNPiRRSDeRmUp
QzB6lHwf/uNtamc+QpVDLALxNoTRw+Szv5kE4m02MdJuLbjZSyAfVqvsWvWH
ZZkE8mGVn/v7/qTsPQLxOI4D6YoyvokA8TgbbsiX7XTPBojHyRnuOO3jSmAe
x4/jUaVhXoh5nGurbB4FqpRifkbjUHxv869OgPxXqRcE2vOV7wDkv7ren+0Z
vyIGIJ8VUbDx4MAyJkC8zJe7sVeS8vsA4mWqtTbN207u38hn5b6smOpBft+I
n+F/nURj3GUDxM9Uvr56TTGIBRA/s0BxlhrwigkQP8Ok9HrM+vVg3sWrnlWn
u5lOIN5F4dWiZYWfegjEu1RQJfYcPcckEO9yiMoA5WtZBOJdGOYCg40DLALx
LlPbbxWl5rAIxLv8rLw3kfexD/u1NLmfViTs+0Igv9bMMku1F16RmIe5fG1d
8nGTdIB4GN9hm8+TOrkA+bWKDsbsSLMowHxMYnZGOKOTDpBPy8ROSUdn8ARA
Pi2FeO7U2v5wgHxZh5xvLGqKZgHkyzK7vfBXpDUbHHykYxA5NQXm8wW3WZP7
NeJt9BQ7RbT7WJh/ST32rcCqso9A/Eu6EOWkRQ2LuHX606bHbUJwlzPn8CCd
RVwfSdfg6xWGi3vCh5Rm+gjk31Ku1kqV250CkF8rle9cNGz3AsiftaCLlxQi
zQZTf7RmncYmga3S1KVOsh5ZOKwPNR6bBj+2NG6oPcnGPEyTcGbtE1sWgXgY
Z+fthk/I/U6op9nq80VhuHaraQv0YRGIj+mij3WZF2UC5N8SFzbLUz+cBxAv
8+6Nh03KmS6AfFtzwdbxfuO7gKRnq/jh6Amge2qmVIT8/XNFz7KTs6dA1/Aa
6iayniMexnypRHdJLovQz2hpm8wi68m5Z517+1kE4mMSfBIeaEvkAOTXunLv
j/SkshuoEHy+fXHyJDCp41ePJ/sXatq1hVbp08DjSfCeyatskHJSOEZwqxBc
HSB9q2SMRTCgsIzcPmG4OXp8vJ3cL5B/y3mBqMyJqAyA/FrPG6IGA59agxuH
tn9UUJ4EppMla53JftNvzyzdf9c0MPn+4VwC2Y8iXiZQdlNWWjeLCJ25dU9o
Vgj2rBX4klfNIhQqWCV9u6bA44myegFyv3wR9ejZGSchuPVc0JZ15Hoj31an
nmngeFYW5mMOvmgIdgztAsinZTAjWuC/fDVoY6o77Hk7BVqXWvWPkvVy15Xb
27d/Ic+D9sURg39Z2K91sFPJYLwqG+wI1TAyfDkJzsQ1KjuS9W/3waFNo/JC
sHXcc+PxYRaB/Fnpeds7L1+9AKzPvQ+RXjYNBHdeXGBH1tfz0/f3f2hfCtOK
Ki3EyPN9wJmAbhWZKfBALUWynvz9Ms8tJQ9ZCUG+xq6nLeT9IF9WBXeyu2RE
D6z58EdAqXUKWC44+fYTWQ8RDxN2f5pv+EgOsLzHkM2vmwQLx7UebyB/rmSj
tHrVASGYtGlngDJZLw1Wp+2smFsKZzvWCRqQ5+f83eBrxJkp0B+0v9WWXM/F
KeGLbzwRgo/aRqSsyPMn4l182+5v1c/oAsiHtZs6HpADFoGf4x767v5TYNdP
v75gst5/21vQVRMlBCfdFlexyfXgy+kasJEVgmEyfyQ1yPXUWXtlyGTRFDA4
afjrH/m+diw40ZhjIQRDLOkvasj7Rf4rpc+5xJjZfkBJ2U2//nMKJJarh84j
vz8Z7ayNvYWToMQ1LefRMzYYoi/vCdQSgt89N7QtI6/3toBkZqHeFOCp5bwz
Iu+nQunFT4Yr+fP7y5dakfePfFY7m+5t9XZRAQP19OCJr1NAt6//ykZy/TsC
c+uWKk4Bk5vbOj3J+zGVuWX0+7oQpNZ9vBRJXp/VsIbF56NC8Ki447dp8s8T
umPz7r7dFPgzILrVhPx9B/bEH5x6IQQXpdy5vo7sNxDfojEjnJf6o+v/16//
v/9eiPiWG82Cl1bb5wDMt3ipPBFdEpKH+Jan1ZffqoXU4PlTyua/N2w+S8fz
pzpF9nMvq/Xi+VPzhdZ27nzDwPOnzi20lxWdz8Dzp8L6n9pN/uvGfqoTM3yf
h3Z0Yj/VjqW+c5flGrGfKvLJVomHepXYTyWZaHztkMZ37KeaUn07kCSfjvmW
4Y4vYxe7qzHf0g435pcEdWC+ZffdNA+CYGK+paLhjuXdxUOYb6kQq9A/+28E
8y3OiSVpG8wnMd/icSypOaZpBvMtMe7bmRt4PMy3LNnE8bFYwsN8i/vWFTeb
B6ewn8rupUu0yq0J7KfS+dkw9erd/+ZP1SxxYZ7dMoz9VLMijYlZ6n+xn0rE
zHqfxeZB7Kda8PS3o4VKP/ZTrUzW3L9lPhf7qfgczOxrYzjYT3U9ZI0gt4mD
/VT+rPPfv53mYj9V8aELzy+VcrGf6tezl6EPq7jYT7VHPlK2ZoqD/VRO8tbl
D/n/AMS36FGkXrzdzgSIb+FrvvEusooOEN/S8KH+/N2NtZhvyQwNv6t66xWB
+JbNSs/+biyLJhDfYhPbwNhW9BbzLSOZj79rPkvGfAszx+d2iVU25lt2qF4h
VGzyMd+yz5Cu96WxAPMtA58EQPttGuZbEvZbdPIcaZhv4Vkruw8L0DDf8uxb
oPNNhQLMt4jVnhzr7y7E86eU5C2+jd9qwfOnMpaf3HY6rJtAvqpdq6omTisx
COSrgmUBMfv9GQTyVekaOHtTVvdiX9WJpXwnAi53YV+VtnL+McK4Ffujxg+b
1EzvGse8ityBSzU6p6YB8kdlRj3Z8iuFB5A/KmzNlg962TyA/FHPd8tMnZMk
v4P//FH3ihadp+RMYt5lFXM6SerMCPZFlVYUwiH5f9gXFX7D885u4yHsixLa
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
mffXJPzlgzL8n9wdKnlA2sMtzG+bMPzss/DeGfI8b/Rje9DYOwpcWn6nxIt8
nnWHmtw/51GhjWHMGkFyffRHN0jKPOoCiTu1bNQjGETNZ0ebsDR+KJ2TF5DZ
zgN79y4XfD4uDFvmGf7aFccBh1XlWjkuFHhDN4U/vYUL+Gx6VnHeUiHsTaqo
JJ+/uUgUL6W7A7SWipTkeDKIAa2AYqYqP7RzbTuVNcoDlqWyGuFOwjA8rl0r
OpYDTp09qj8/lwLztucbJJL75ef1lczLdCp8PH2qRsWNBijBmSdbJ+ngmdxn
w+3k9xn31mnT6SB+eHCjsE/UEA/4bzl8/FCTMFytduheOPn8EH8uFRlnWp2b
QchMs+yE/KlwQvV2mR+5H5yqABV6Yvzwan99z3ImeX8b9NmSJ4Th7gI+txTy
/aoXLxi6H0+B5orh3/vI9ysvrWabdxUVFlqb3d5Knld9TYOqTReT/cd5cYsl
LxlE5f0vO28+o8DdytUmOWS//6epvbosngqtF4K8UHJ9DVjSh4XaOoGAjk9O
TwiD8Pjam+duyA/pLwdKU2Z4wNeG6bUxVBhm6lWlSJP7R1tsY6xXBfn8Qym/
k35zsd8yS1Q84IFqAebdjWT3NITJ3CEQ7y7iGRyxq60Gz2OeFvhw54MDnUC+
S77q5YvPavUSyHdZG3J0ouYtg0C+S7mry8NMp3vx/Oaq78mOYX3d2HcZoH7Y
XFG2E/snLyqqZTcIjGJ+3ceOYRp8bRIg/2Sc28oTH7pmAPJPCgwlvN1C9u/I
P2n1SvVmKD8PIP8kdferlanMKcy/d+UFTsHAUeybLNk6vP7l+mHsm/xUdmZ4
46a/2Dd5NXT2l+faQeybPMWy9shT6Me+SWix/siJWQ72TWoUrObmk98f4t8d
bl1qfdrCwb7JK68fLc4kz5Mivmqlm09Q4MVOy8OPyrhg7BtzyL2GAr2E+K/s
JL/XbfX7a5adEoPZr2f2OI1yAJonnTssu5Y7zgaIn19yo10waS0TIH7eZtP9
kjCy7iB+fitVE0Z31mB+nmn3Z3ZDexiB+Pl1trJD11ZFE4ifz8t2v7c58R3m
52dPaLpOJydjn+XE4Wl34J6NfZb3VzTvqriZj32WlT1V0L21APss759ok1zp
SMM+y52qXZsn79Awj2/1WFZTmY+Gefxb1UJDLk5FeB5116v2JNO4FuKZUNit
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
Pw++xvXC+Pp/ADxCEak=
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{560, 3302, 3300, 559, 1032, 901, 793, 707, 641, 
                601, 1057, 926, 818, 732, 666, 1077, 946, 838, 752, 1099, 968,
                 860, 1122, 991, 1143}}], 
               
               PolygonBox[{{1140, 3299, 3297, 546, 547, 548, 549, 1022, 891, 
                783, 697, 632, 591, 1055, 924, 816, 730, 664, 1076, 945, 837, 
                751, 550, 1023, 892, 784, 1103, 972, 698, 1084, 953, 1129, 
                845, 1114, 983}}], 
               PolygonBox[CompressedData["
1:eJwV0ldvj2Ech/GnamupeWRVjSMjoa3ZQUKJmI0RUtWltFYkXoHRamu+AKo2
PTIOkJCYRasNESLVOkCr9oG9PvfB9f9+r9995/nfz0jM27xkU6coimIQ76c1
LopakGOYjF6do6gsNooG4zbfgS54xfPwVT+CNUhBnP3l5kNwh+9EV7zm+fim
VyMXqeiGN+YF+K4fxVpMRnf0QJu1QvzQa5CHKYj3X3vMh+Iu34WeaOdF+Kkf
Qz6morf9FebDUMd3h/vDW74Ov/TjKMC0cC/oMC/Gb/0ECjEdfVyr0nw47vGy
cB684+vxRz+JIoyw97DZRDTzGUgwq+KJuM/LMdbsDE9DWzgv3usb8Fc/FZ6x
Pef5nHBmnsSP6JPwgs/k1/Sl4Tq8L9+rj8AivV4+CGfQL4drywVylXwq91gb
p5/V07FMfyTbzWfrN/TlyNWbZR/zD7IE//T55nX66fB+9Qvh+cksuVI+kdtk
sfWRsjq8W5kcziwb5RbZYn2WvM5LZbbMkc/ldpluvZ/cF74rmSQXywZZby1N
v6IvxGr9mawwH6+f0zPwls/hN/UVSOAfw/8hwpnwHVq/qM8N75WP4kf1FLTy
DPQ3289HooFXhueOT3wjYnA2fLP2XdLnhefOR/Oa8K3KVJktm+RLa5kYwA/w
UXjIq8I94zPfhE44x0vCe8dA+w+ajUYj3xvOhi98M2JRy0vDs8Ug+w+ZjUET
T+dXw3eCfXwCr9UzwzvXH8utssNalrwV3in+A8Zhgh8=
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{511, 3298, 3295, 671, 757, 865, 996, 516, 643, 
                709, 795, 903, 1034, 564, 605, 670, 756, 864, 995, 515, 642, 
                708, 794, 902, 1033, 563, 604, 669, 755, 863, 994, 514, 562, 
                603, 668, 754, 862, 993, 513, 512, 561, 602, 667, 753, 861, 
                992}}], 
               
               PolygonBox[{{1068, 3301, 3300, 600, 640, 706, 792, 900, 1031, 
                558, 599, 639, 705, 791, 899, 1030, 557, 598, 638, 704, 790, 
                898, 1029, 556, 597, 637, 703, 789, 897, 1028, 555, 596, 636, 
                702, 788, 896, 1027, 554, 595, 635, 701, 787, 895, 1026, 553, 
                594, 634, 700, 786, 894, 1025, 552, 593, 633, 699, 785, 893, 
                1024, 551, 665, 731, 817, 925, 1056, 592, 743, 829, 937}}], 
               PolygonBox[CompressedData["
1:eJwV08lLlVEAhvFT2ai1ah51lUMD1ca0RYNajtAFI4qIImgR16vXsf6KBoeG
bVkrtdR0U1ALA1sEzUWI2bCqNmpWFvQ7i4f3fd5z+C7f5d6c06lE3dwQwhyM
YjwrhI/IMWZjE2rQimEsmxfCBfzDRl6NFgxhqe08/mID78I7bOc34v2MEKp4
M+4jy9aGWaznnXiLbfx6fIb7lbwJg8i0teIP1vEfKNH7sMvdDv4GW/m1+Exb
BT+iP0Yp/8r36HdQwBt5lT6MYj7An+o1+hLZgt9Yax+Tp+zHZZ18Iivkd2dp
+YoflQfkWdkrd8r2+M7yPT8hE/KcfCj3ydfOU/IZT8gt8oy8Gt9Tljv/oJ/U
a2VSPpIl8ouz53qtXixvI19P2yv1IRTxfj6qV+uLZTN+YY39mBxBubNvfL/e
gx38Cj+sP8De+I68QO+K3wk/xD+jiHcjz9bA72ERb8IMVvPLeIl83hk/292D
/BN281vItdXzu1jIG/ETq/glvEAe74jPdLeMT6CQ38RmW4r3YQFPYxor+cX4
XSGXt8dnulvK4x+gF/NtDZjCivjbQhI9yLDVYxLL+X9CtGE8
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwt1Gt0z3UcB/CZydDY3O/MhqSeMLdiZjmV2MYQCp00zX11HEkWRfGoIl20
J3Mp5yiXczLKJZfwwGXaInY4KreDUqcSJ5yD1+ecHrz2fr+/u/z23//3W/qk
ksJZtRISEub6EDnHh2TOscU+JCfwN3Psr+WTXIkz+6ScxlC9XPbgrF4liyjX
98iR3NV78p7ekSPR2a7n8Z/+Euv1AXEN/UsSec2uR0V0hrHK7snP0cnifTud
o9Epovb/r68+W6OTRy+SqMMD1OV1X9OAbdHJpzcfOOtEZXQmk8w8Zw/yTXQK
6MMyZxkci87L1OMNZyl8G53h9GW5s0x+iE4x9ZnvrCHbozOC1XYWv0SnHx/a
namKzg49n1v6lPg76tlc1b9ivz6GxHi9dqlsxA79sJxIqb5FPhXfxz/2KTmd
Qn2N7MUlfrWr5WRusMbeK0fxJ/fss/LVeJ95zF4hu3CBartSvsh1Vtg7ZQG/
c9s+LeNmnRqvQQ7kN/24LGaDfkCOpXa8L/abMpWd0anQn45r6CNZq/eO+z06
j/OR3ZUfozONDXZO/C76RlJYYKexKzqj+Nzuw/no9Odj+yGOR2c6DVnorDHf
RWc0A/jEWTdORGcGjXjLWRN2R+dZsvnU2cP8FJ2ZpPK2s6bsic4YBpLGIufN
2BudseTQmCY0pRnNaUFLWtGaNrSlHe3pQEfS6UQGmSz285uzLzrjGERn3nHe
gu+j8xy5rHTWnZPRmUUX3nXWkv3ReZ4v7L5x/0TnCT6zH+FUdEri/bIHcU3f
RFeW2K04EJ2t+hD+1cezTu/Hxejs00cT/yQHizL5KDX6MTmJMn2XHB7X4o59
RpbwSlxb5nKZP+wTcgo32WwflOP4i6R4vpkd937cPz6/VLaOe4uD9hH5QjyX
LLW3yWfimYhn0K6RM5ig3weQlrdS
               "]], 
              LineBox[CompressedData["
1:eJwVzjkvw3Ecx/Ea8CBcMTrbGrG5j0UHA0KRSAxuD8HgegbKqibHwsJgaEsk
EonBETE4JscgRJB4/YZXPu/vv82/LR+ZSkzmRSKRBerFo92khTV3LVehOdQ9
/OoZtnUTr3qHjO4jnwr3oi0io89skkW9b7v41Fd2gsHwu7aBp8B9YcdI62Pb
yxt53DHLN60+T9koD1y7z+0oH6TcRzbBC3/uWzvNV3hP+P+2ObxfX9pxdnXW
9lNApXvJFpMNzYHuDu/RQ6R1I896izbW3TFuQjNHFcuelZALTZJ2qlnxvJST
0AzTQQ21RIkRZ9X3yjgNzQidbHgW5zY08+y6W3jXe+T0AIXcM88PdT77B4E7
SRg=
               "]]}, Annotation[#, "Charting`Private`Tag$16743#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1lXUVVUYRuFDd6gYhHQj3SGNNCgCKiGNIK0gGFcG3UgoKCUhjZRiKyHd
EgpIihJKCUj5fMOLOd53fmv9m332XucM8nTu16JvkkQikS9pInFf+S1ZItEe
l/l0tEFpJJAEJ6y9iCv6DLRFGSTFSfMOuKp/hHYoizTJE4mh5tmwgb+NZDjF
O+Ka/jHaoxzS2j/MPDs28neQHKd5J1zXZ+J4evciyyOdvxluLQc28XeRAmd4
Z/yjz0IHVEB6+0eYP47N/D2kxFneBTf02eiIikiF38274qY+B51QCanjM+Kc
tW64pc9FZ1RGBv/WSPOc+IkPjc+IP3h3/Kt/gi6ogoz2jzLPhS18WHw+/Mlf
wm19HrqianwWnDfvgTv6fHRDNWRyrdHmubGVD4/7wQXeE3f1BeiOvPbONCuL
o/xJZDYbw/NgGx+B4maLeHWci/vFRf1l3NMXxjO2ZxWvH/fM8/FZejkc47X5
t/qzcR3+AB+r58XT+g65Pe5BXx/Xls1kW3lIjrRWQl+s10BrfZ/8w/wp/Uf9
uThf+lGZyfyS7IX7ehPzLfqn8X711fH8ZAP5gvxZvip7WM8vZ8e7leXjnuVu
2V8et15Hfsd7y5bx/ZC/yNdkDesPynFxrmQ++YzcKXdYq65/qTdHO/2wHGVe
Ul+i18SfvD7foD+PzPyv+PeQwKI4h9bX6A3jvfICfI5eAb/xmnjIbDzPj518
dDx3/M37IAkWx5m1b63eKJ47L8jnxlmVFWVLuUeesFYLWfgEXgC7+Jj4zLjM
+yIplvBe8d7xsP0TzQpiNx8b94YrvB+SYSnvHc8Wj9g/yawQ9vAa/Ks4JxjH
S/Gleq145/p+OUCet9ZAbox3Gs/B70UWs6vx7pAcy3gf1I37wrX4W6TAct4X
9fCo67xvVhh7+fi4L1znryAlVvB+KGTvJ7wSTsZ5xGNmk3kR7OMT4pr4J84Z
UmEl74/C9s7jlXEq3j2ymk3hRbGfT4xr4gYfiNT4jA9AEXvn8yo4Hc8A2cym
8mI4EOeBfx1nEZN4ab5Mr40LvCHfpLdBVn5TDkIaNLW2Va6K3yt9nd44ngMv
yhfoVdFK3yvPxPPVv49zJlvJDvLXOK/WsuvT9K7yCdlC7oqzEN/DOGPym/ju
yhayvTwS9xPvxHoZuTx+Z2Sd+I7IA3E/8qL1RnJznEXZVnaSx2Q2a7fie4q0
aGa+Ta6O31X9c71JvB9ejC/Uq+FsnAn+g946vic8B/9AL46DfDLKmq3gdXEp
Pif+1QcjHdbwgWiMx+390KwEDvEpcU3c5kOQHmv5oPjtQk77p5uVxGE+Na6B
O/x1ZMA6/hqaxn7cNXsDGfE5H4xmyIXcyIMTviN5k/7//4H88TuCe/a/iUz4
gg9B8/g79zDDrBSO8GkoZ7aS18Nf8duB+/pbyIzm1rfL9ebV9C/0nrJpnDV5
MM6z/A9aMwT1
               "]], 
              LineBox[CompressedData["
1:eJwNybkyAwAUBdCXBSk09qSTyhZLzCi1Gk3EmowqH0BpiGyWj2Amem1aO41/
iBmNGa1PcIoz791787Xj8lEiIqoU0hH3qYh1fpMRJaZ1XblIX75hhtA3dCM8
yKdsMUvC1tSP8iifUWaOpK2lH+NJrrPNPClbWz/Os3zODgukbR39BC9yg10K
DNgu9JO8yk32WGTQdqmf4k1usc8SQ7YrfZZ3uc0BP8MRy27Gfm3L8SF3qJDX
3+lW+ZJvWdP15A3+5E35039Izf/tnrgrtn/ZFCV5
               "]]}, Annotation[#, "Charting`Private`Tag$16743#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1GWUVWUYhuEzxCDSkiYM3aESBiCNkiLdpWtZg40Kwgwl0t1tL6W7JP2h
0tKgEgYgSClSxvX+uOd53vv79pyZfb69U3r2aZWalEgkzvjRL1MiUTg5kfgi
cyIxQTaRA2Q2zEHC/Ly8JqfJKfIDWQDfuba1PMGlYYieB1X1N2UGLNAX2ldT
/yZ+Fx5AH/NtOQtnrXczn9dHoQ76c0W4L/WmSMIOrg13Uk9HNSzianHf6i+g
MM5x7yGFX2huhgzYyS3GAAxEGtIxCINR1P5F9jVHRuzilmAIillbzLVAJuzm
lqJ23AfziyiC37mhKM4vMbdEZuzhluEJfof5JaTgPDcMJfil5qeRjL1cW+6U
PgjVsZyrw+3UX0ZRXOC6cxf00aiL97mS3DK9FbLEvTH/Ladin/V25tP6YNTA
W+aM+FBfYb2uvktPjc/Xc6GY/or8R86Qs+P7knfjD9f0iOSmyDHxd8h8mId6
5ndlFszCp+ax8r74TAx3fSm5nJ8on5EDZXbMxR1xj+V1OV1OkyNkQXzv2vby
5ziDGKrfhUf0vjITPtJX2ldP3x3nD8XxqvlfOQcXrfc0X4y/DfXjrHOluRV6
a2TFfq4D90t8Fh7FKq4+tyfuEUrgEjcCZfiV5ja4Ewe41WjA742/ASVxmRuJ
svwqc1tkw0FuDRry+8yvoRSucKNQjl9tbofsOMStxWiMwViMw3hMQHn719jX
HjlwmFuHRnEvza+jNK5yE1GBX2vugJw4wq1HY36/+Q2UwZ/cJFTk15k7IheO
chvwJH8g3g0oi7+4yajErzd3Qm4c4zpyv+rD8Bg2ck9xB+Osohyucb24S/o4
NIizx1XmNuidkSeeNfONODc4br2T+bc4n/H79bx4XH9bZsbH+hh5L76yv4k8
xE2WfeOZkblRPr4L+Z+cGec0nkF5T7z34nlzbW95OZ47OV4Ol/kxHw3N/eJs
x7OEz+L/kPfHecVU11eRG/lJsotMkznifMc7QN6MZxE/2NvZfCY+AzXxjjkZ
n+ibrDfVD8f/iQrxPcf7PZ5P/br1Z/Ur+gQ0wjTuwbgHelfkxY9cF+5sPBuo
hc1cM+5IfCYq4gY3HQ/xm8zdkA8/cVswAw9b28x1R36c4LZiJmZhNuZgLqra
u8WeHiiAk9w2NOePxrsFlXCTm4dq/FZzTxTEKW47WvDH4r6jMm5x81Gd32bu
hUI4zXXlzukjUBtfcy2543p/VImzb06K71O/bf05/ao+EY1jnzkrPtcXWK+h
b9d7I13PGe9PPVXeinOEkXqheJ/Z/z8TW/4Z
               "]], 
              
              LineBox[{1515, 1419, 1344, 1222, 1617, 1501, 1405, 1330, 1277, 
               1639, 1524, 1428, 1353, 1187, 1593, 1477, 1381, 1306, 1253, 
               1223, 1618, 1502, 1406, 1331, 1278, 1188, 1594, 1478, 1382, 
               1307, 1254, 1224, 1189, 1595, 1479, 1383, 1308, 1255, 1225, 
               1190, 1191, 1192, 1193, 1194, 1195, 1596, 1480, 1384, 1309, 
               1256, 1226, 1619, 1503, 1407, 1332, 1279, 1640, 1525, 1429, 
               1354, 1661, 1546, 1450, 1681, 1566, 1701, 1196}]}, 
             Annotation[#, "Charting`Private`Tag$16743#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1WUUFUUchvGrIC0d0iGICoogktKIIGCAKN2hKGEr0h0SHguQlBKVbpAG
6RBR6Va6kZBj/P4fnvPGzOzeu7uzm791l3qd70kkEt3vTSRmJksk0qZMJOql
SCR+TJ5I1EESHNSX0nfTn5LfxaP4Tp9OX1+/Uq6LpDikL63/WP+H/B6K4Ht9
ev3L+lXy87gPDXXjdMnwpXzYvDK67vKf8vsoik66+bpc+EH+wbwMugbyavkF
9JDXyUXjeHIjeTyfHF/Jn8n7+Ko4Yn1ZuQd/2tgHGCzvkEvjMbmzvIDPjQX8
bTpLP44/zh+ktekGmhKzHDMjfUW3ha4xdwo9E+ejL8o96Xr5F/oYXUr/id9A
kxtvTCfIO2kKOptepyfpaOOf0/3yPlqNrqXJcNS5y9GeujPmzeQv8R/yQ/id
fBk8LneRF/J54vjybGsz6V6N48kvIQWa6CbqUmKMfMy88rpe8ln5IxTDHH1m
fUP9OrkeUuK4fi6yGGtkbL2uPlLhhH4e5mMBFmIRFmMJlmIZslrbOK6xNS8j
NU7qn9b31p+Tu+EJLNdn0zfRb5QbIA2a6ibpUmGsfMq8Cro+8nn5YxRHV90i
XV7MkVeY94CuqfyT/Ap6yRviOuJ+uZk8mU+Nr+Uv5AN89Xj+ra8o9+UvxJ7h
L/Pd+aH8Lr5s7B/+XpTQv0UX63bTfHQhvRPHonONj6cn5EO0TvxPmgoX8KPz
ZafN9FvpJvOn0rPy0bi/cm+6Ud5Li9Fl9F+a1lhz/hs+Tfx//gYdp/+SP8g/
E3vSOSrJ/fiLsecwTN4tl8OT8tvyEj4/5skrrcmhay5vjj2PdDitX4WcxlrE
nok9i/Q4o1+NNchlvGX8p9gfyICz+rXIbayVsW3xvCIjzukr6/vrL8WeQ0ms
0+fRt9Zvj+cCmXBeX0U/QH857jGewnp9Xn0b/Y6418iMFropcf8xXr5gXlXd
QPlKXGOUwgZ9Pn3b2M9xfZEFLXVT45pjgnzRvGq6QfJVuQ8+kX+Wy8f7SH5H
XsoXwHx5ozX5de3kXfGbYp38k/wEssqt5Gl8OkyUv5IP8TXiulhfXR7MX4v3
M3+F78sP5/fwT8e7mk+CMvHup8t0P9MH6SL6dzwT8Z40PoGelA/TurFnaGpc
jN/lfAVo+7hX8byYP42ek4/F/ZX7xjMr/0qL0+X0P5rNWGt+Op8ec/m/6CT9
aP4w/2zcO+d4Rh7CXzfWDyPkX+QKsdfieyQv5wvG3pI3WfOgrkP8r7hmeABX
9JtR0NhrxvbEb0B2tNHN0GXAZPmqeTV0Q+Ubcn+Ui2+XboWuUFwreYt5hXSv
x/tfns6f59vEb+U38yWQQ24rf8tnjD3E36Tf6MfwR/j9tGa8b+O7EdcR1xz/
WTosnu+4RvGdpFfl4/F8yyPpXvk3WpGupknjHYHy8R2M90j8X/oQXUzvhhqb
yJ/in8cmPg22OudDtGO8U8yZEe8ivm1cB35LvBOQU24nz+QzYYo8Nr5bfK24
X45TU/6Ev2lsIEbJv8qV4lmUP5RX8oWxRN5mTWHdG/HMxPGRC+113+kyY6p8
w7xauuHyLXkQKmC7/mH9m3E9Yh1yo4Pue10WTJP/Mu853Qj5tjwYFbFD/4i+
k/73WIc8uKmvrR+pvyMPQSXs1D+q76zfJ7+GvLilr6Mfpf87vg2ojF36Ivou
cb/l15EPt/V19Z/q78b7F1WwW19U31V/QO6IAXGP5JJYwSdwBv8DHWJiog==

               "]], 
              LineBox[CompressedData["
1:eJwV0klQznEcx/HfEykHV1unZItBSs7KnhkttrtTSGlDcuZi66lsXXAgKtvF
kqHGxVimsVQkVLaD4eBi6Km8/of3fL7v9//fM23pOytKymMhhKdoTw1hOi6n
hPB3Sgibp4YQ5wl+DPl4qS/RK/X3fA/S8U8v1Bv1MX4cq/FKX6pX6YO8DHMw
qhfpTfo4P4E1eK0v06v1D3wvMpDQi/VmfYKfxFq80bP0Gv0jL8dclGod2gxc
4WPeK9FO84BT2jr06sv1Wu0Tr8A87NKuazPRyse9t0U7w2No0NajTnvIF+Iu
7/NetrafD/F9mI/d2g1tFq7yCe9t1c7yJMS1Bt7nXoUN/BB/5M7EPX6Bf3UX
ot/X5/AD7mHPWt0/3ZXuI+5n7lw8cMewIPpb2Ztaj51tb9s/9ou95nmLHeID
tsA+tqn4geD5NntOf2En2Q77245Ef3fP47Y/+t5snu2yydjoWb3t0hbhjjth
7+sX3d/cRXjrZ1rBD0af6VkVjvLnfGX0O47+f/gtdxraeAzbtfN8Mpp4Ad75
rFy9TvvMq5GJJOzQW/RkNPNNOKx188Xo5Jf4d3cxnrin4RcGfO5/mk5xsw==

               "]]}, Annotation[#, "Charting`Private`Tag$16743#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1HWUVVUYhvE7Q84wtIBBd4fY0mnRoKKUtIIopYB0l9JYKN0psBQVpVuW
rahIyFoqogjS7e/741nv97z73pl7ztlnF+n4UvNeSYlEokRyIvFfSiJxZ1oi
MSBLInEhNZGYhsdRHLX1c/X5sYn3xjmfv0s/UHeRT8cTKIE6+nn6AviY98F5
n8+vH6S7xGegEZ7TbdFVwyFeEnV183lBfML74oLvF9C/prvMZ6IxOuq26qrj
J14K9XQLeCF8ysfx382d0C9+P//K3Agn+UV/u6BuML/CZ2EIP8xbownvxLeZ
a2CxOT1+1k+Rp3U9sN6cE6X19eVC3WeysJwvE9hsbbz8Q7dLdpZrZTZ8h/5x
v+TX+m2ysVwuM8dvxl9x7fKc/oB8WX4o88TvwSXXUkgOiWuXV31+jrzGZ5uH
mn81P4OmvDPfbq6JX/hU/q+5J8rwBnyRuUhcC38lnofum7gvOMUv+5+FdUP5
Nf4mmqEsGuoX64vic/4qrvh8Ef0w3XX+FpqjHK5au4bruIGiPjfc525Yexst
UB43rRWzNsLaTf4OWqICblkrbm2ktVv8XbRCRSRij1obZS2BOfxJVEISkmMP
Wh9tLQnv8adQGY/ol+iKYQsfgHSx5/RjdMl4nz+NKnhUv1RXHFv5QKRHaf1Y
XTrM5a3RRbeD18Jhfjce0y3jJWIv8An8T3MXDOL9+LfxHPF37Ft+3twbGXgZ
Ps6cPq7DfF3O0w8zHzE/G/uAd+U7zbWxxJwh9kicAfKMbq98UW6QufAjqsb5
IJfHc5Ul5QKZhIOxp6xPlCf1u2VXuU5mx/fxHlvvH3tev102kytkCv6xNlte
0PXBR+a8yBh7So6P64t3ig/nR81t4np4N77LXAdH+D1xLulW8FLYwQfHPo7f
wZvjNM8U+083gWeMa+Ft0F23m9fFUX5vnFu6lbw0dsZZgcyxL/UTdZmwkLfF
fUiJfWltkj4zFvF2uB+pyII0ZEU2ZEeO2K++M9nnU+LM4e3xQJx7+lXxfsYZ
Eu80csYe1r+uS43nyDvgQTTRr9aVjWcRzx+5Yk/r39BlwdI4i/G8bg+vh2P8
ITTVreHlsCfuOXLHHtdP0aVhGR/Bj5nboiN/ge8118dx/nCcC7q1vHzsKz4p
zjRzN4yI84H/YG6BlebUOI/iTJEXdX2xyZwPt8V7IqfqNsus8f7JG/KL2JvW
R8rj8ZxkO7lapsX5hU7We8h98X7KBnEfYp/hS/xmfbo8q98ne8mNMjcOoVqc
W3KdvkI8c3Ny/D39ZHlK1x0j46yI98bcEmfizIuz2twPeXhVPs2cLd4DPir+
v7k9OvOefL+5IU7w6nEW6j7gFbE/vhNnTPw23gpned54B3TTefa4p3HWoEac
l/r1uko4wEcjX+xx/QxdDqyK8wE14wzVb9BVjvvLx+D22OP6mbqccX/jHUSt
OFf1G3VVcJCPxR2x7/WzdLmwJv4vP2HuEB7PMc41/A+4QCBe
               "]], 
              LineBox[CompressedData["
1:eJwV0ctTDWAch/HXWJiRhRmhTkL8B3LpgpRbxcpCIaSVik4bzGArUaoZM6jc
FhYWZgiVLlg0xoxLya1R28JCm1hgIZ938cz39zzvnFMzJ6squaduTgjhBV6n
hFCMyfkhFKJsQQjdfA2G+XkkkKNf0RbhPj+KIpTrPVo2RngjMpCrX9VS8YBX
Yyv26b3aWrzjF7AMefo1bTG6eA22Yb/+RFuHUX4RmcjX27UleMhrsR0H9D5t
Pd7zJizHRr1DW4pH/Bh2oELv1zbgA2/GCmzSO7U0PObHI9obXoIpvhMHtQGe
g4/8ElZis35dS0c3r4tob3kpvvJiHNIGeS4+xc/zH+5qtPDT/It7L2Z4O//t
PoEsXsBvuBO45f5ne/Rz7kn3ESR5kg+7d+Guex6+6ZftjPbKJuP/alPj30SJ
98P2qf7c5tk7dm78Lnz23mKn9Ze2Jv52dmF8Q6v3M3ZcH7Jl9p5NwSh+eu+w
f/ST6HOnYZW+xd7UMnDbPWt79Qb3lLsK9byej7h34zsvRaX2jOdjjLfhrDbB
y/GLd/K/7lPod6fHd6z29h+0uW6E
               "]]}, Annotation[#, "Charting`Private`Tag$16743#5"]& ], {
             Directive[{
               Opacity[0.2], 
               Hue[0.67, 0.6, 0.6]}], 
             LineBox[{509, 510, 508}], 
             LineBox[{1145, 1146, 1144}], 
             LineBox[{1703, 1704, 1702}], 
             LineBox[{2544, 2545, 2543}], 
             LineBox[{3293, 3294, 3292}]}}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"feedback solution \"", TraditionalForm], 
         PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1c\"", "\"u1c\"", "\"x1c\"", "\"\[Theta]dot1c\"", 
           "\"xdot1c\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.8648376866338243`*^9, {3.864837721244707*^9, 3.8648377460817285`*^9}, {
   3.864837800602215*^9, 3.8648378151965265`*^9}, {3.864837882180011*^9, 
   3.8648379006680717`*^9}, {3.864917359659708*^9, 3.8649173767071624`*^9}, 
   3.864919300876232*^9, {3.864919337508316*^9, 3.8649193485657187`*^9}, {
   3.8649194958228164`*^9, 3.8649195287531037`*^9}, 3.864920239187001*^9, {
   3.864921249563326*^9, 3.8649212721359825`*^9}, {3.865342438564925*^9, 
   3.865342509036396*^9}, {3.8653477634896584`*^9, 3.865347782729508*^9}, {
   3.8653478492912292`*^9, 3.865348013067874*^9}, {3.86535368874548*^9, 
   3.8653536939258237`*^9}, {3.8653538219528966`*^9, 
   3.8653538384286294`*^9}, {3.865356737715789*^9, 3.8653567547593403`*^9}, 
   3.8653569273791575`*^9, {3.8653569657139025`*^9, 3.86535700435555*^9}, 
   3.86535703851363*^9, {3.8653570911278105`*^9, 3.865357172559778*^9}, {
   3.865357210731576*^9, 3.865357232535606*^9}, {3.8653573843380775`*^9, 
   3.865357407024825*^9}, {3.8653574402422056`*^9, 3.865357560552746*^9}, {
   3.8653576116883984`*^9, 3.8653576483786693`*^9}, {3.865358188766919*^9, 
   3.8653581946510377`*^9}, {3.865358314589696*^9, 3.8653583435974226`*^9}, {
   3.8653592266591263`*^9, 3.865359247679407*^9}, {3.865443792998208*^9, 
   3.865443801104616*^9}, 3.8654440595339727`*^9, {3.8654487336752205`*^9, 
   3.8654487504428587`*^9}, 3.8654492637776985`*^9, 3.8654493114634485`*^9, {
   3.865965582539151*^9, 3.8659656451141005`*^9}, {3.8659657927138066`*^9, 
   3.8659658125544496`*^9}, {3.865965935915921*^9, 3.8659659557085795`*^9}, {
   3.8659659882041674`*^9, 3.8659660068222017`*^9}, 3.8659660863577166`*^9, 
   3.865966459016309*^9, {3.865966598898487*^9, 3.865966735717648*^9}, {
   3.865966781206072*^9, 3.865966802194347*^9}, {3.8659670998539696`*^9, 
   3.8659671350117044`*^9}, {3.86596737708314*^9, 3.865967416340561*^9}, {
   3.8659680911663313`*^9, 3.8659680979531565`*^9}, {3.8659697724146223`*^9, 
   3.865969803929524*^9}, 3.865969850623562*^9, {3.865969890971634*^9, 
   3.8659699231933093`*^9}, 3.8660390961121736`*^9, 3.8662990686684504`*^9, 
   3.8662991222131176`*^9, 3.8662991578515816`*^9, 3.86629920027185*^9, 
   3.8662993658012686`*^9, 3.8662994388686166`*^9, 3.866299477311173*^9, 
   3.8662995466917143`*^9, {3.8663097469868937`*^9, 3.8663098065886*^9}, {
   3.8663098368937907`*^9, 3.866309854605058*^9}, {3.866310502074473*^9, 
   3.866310510541732*^9}, {3.8663105771391745`*^9, 3.8663106410764785`*^9}, {
   3.866311168140868*^9, 3.8663111757344103`*^9}, {3.866311795831685*^9, 
   3.8663118226190147`*^9}, {3.8665635751502676`*^9, 3.866563580078697*^9}, 
   3.8665655738792553`*^9, 3.8665657789678917`*^9, {3.8665767519812546`*^9, 
   3.866576756524807*^9}, 3.866660334114994*^9, 3.866660482879464*^9, {
   3.866660550000019*^9, 3.8666605935181146`*^9}, {3.86666067663256*^9, 
   3.866660712885977*^9}, {3.866660752264395*^9, 3.866660805816285*^9}, {
   3.8666608513737297`*^9, 3.8666608747462626`*^9}, {3.8666611627682395`*^9, 
   3.866661174481497*^9}, {3.866665386657707*^9, 3.86666539847793*^9}, 
   3.866734379456105*^9, 3.8667344861903286`*^9, 3.8667353661046257`*^9, 
   3.8667357177695217`*^9, 3.866735753672871*^9, {3.8667358006986127`*^9, 
   3.8667358274309397`*^9}, {3.8667358972192945`*^9, 3.8667359268736725`*^9}, 
   3.8667361227441196`*^9, {3.866737147475623*^9, 3.8667371639832687`*^9}, 
   3.8667373709801025`*^9, 3.866737577156204*^9, 3.866737652870638*^9, {
   3.8667377588552485`*^9, 3.866737781921764*^9}, {3.8667383832806406`*^9, 
   3.866738390601266*^9}, 3.866738566389228*^9, 3.8667386326267366`*^9, 
   3.8667386644044247`*^9, 3.8667390204219074`*^9, 3.8667390583196106`*^9, 
   3.8667391387805033`*^9, 3.8667395730935817`*^9, 3.8667400543844166`*^9, 
   3.8667405527697053`*^9, 3.8667406622281895`*^9, 3.866740718213024*^9, {
   3.866740809722332*^9, 3.8667408355659466`*^9}, {3.867162956213792*^9, 
   3.867162976012458*^9}, {3.867163011124227*^9, 3.8671630381885705`*^9}},
 CellLabel->
  "Out[105]=",ExpressionUUID->"a1cb6995-9f0c-4dcc-a4e9-389375f15ca3"]
}, Open  ]],

Cell[TextData[StyleBox["Animation with General Cart-Pendulum swing up",
 FontWeight->"Plain"]], "Text",
 CellChangeTimes->{{3.716613652345023*^9, 3.716613661762876*^9}, {
   3.7166171500953703`*^9, 3.716617173133562*^9}, {3.716626783084096*^9, 
   3.7166267858131742`*^9}, 3.845482883460244*^9, {3.8454833355827293`*^9, 
   3.845483336286716*^9}, {3.847433954599126*^9, 3.847433968468281*^9}, {
   3.8474344191285405`*^9, 3.847434424821303*^9}},
 FontSize->16,
 FontWeight->"Bold",
 Background->GrayLevel[
  0.85],ExpressionUUID->"69635ce1-2bd0-4048-a821-d10e9209db8b"],

Cell[CellGroupData[{

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"AnimatePendulum", "[", "rules_", "]"}], ":=", 
   RowBox[{"Animate", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"DrawSinglePendulum", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "[", "t", "]"}], "/.", "rules"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]", "[", "t", "]"}], "/.", "rules"}], ",", "1", 
          ",", "1"}], "}"}], ",", "t"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
     RowBox[{"DefaultDuration", "\[Rule]", "5"}], ",", 
     RowBox[{"AnimationRunning", "\[Rule]", "False"}]}], "]"}]}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"DrawSinglePendulum", "[", 
     RowBox[{"cart_", ",", 
      RowBox[{"{", 
       RowBox[{"angle1_", ",", "length1_", ",", "mass1_"}], "}"}], ",", 
      "t_"}], "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"width1", ",", 
        RowBox[{"density", "=", "30"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"width1", "=", 
        RowBox[{
         RowBox[{"mass1", "/", "length1"}], "/", "density"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Graphics", "[", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Blue", ",", 
             RowBox[{"Rectangle", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"cart", "-", 
                  RowBox[{"1", "/", "4"}]}], ",", 
                 RowBox[{
                  RowBox[{"-", "1"}], "/", "15"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"cart", "+", 
                  RowBox[{"1", "/", "4"}]}], ",", 
                 RowBox[{"1", "/", "15"}]}], "}"}]}], "]"}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"Orange", ",", 
             RowBox[{"Translate", "[", 
              RowBox[{
               RowBox[{"Rotate", "[", 
                RowBox[{
                 RowBox[{"Rectangle", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"0", ",", "width1"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"length1", ",", 
                    RowBox[{"-", "width1"}]}], "}"}]}], "]"}], ",", 
                 RowBox[{"angle1", "-", 
                  RowBox[{"\[Pi]", "/", "2"}]}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0"}], "}"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"cart", ",", "0"}], "}"}]}], "]"}]}], "}"}]}], 
          "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"PlotRange", "\[Rule]", "2"}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "280"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Frame", "\[Rule]", "True"}], ",", 
         RowBox[{"Axes", "\[Rule]", "True"}], ",", 
         RowBox[{"AxesStyle", "\[Rule]", "Dashed"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"PlotLabel", "\[Rule]", 
          RowBox[{"\"\<t\>\"", "\[Equal]", 
           RowBox[{"NumberForm", "[", 
            RowBox[{"t", ",", 
             RowBox[{"{", 
              RowBox[{"4", ",", "2"}], "}"}]}], "]"}]}]}]}], "]"}]}]}], 
     "]"}]}], "    "}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"anim", "=", 
   RowBox[{"Animate", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"DrawSinglePendulum", "[", 
       RowBox[{
        RowBox[{"x1c", "[", "t", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Theta]1c", "[", "t", "]"}], ",", "1", ",", "1"}], "}"}], 
        ",", "t"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
     RowBox[{"DefaultDuration", "\[Rule]", "5"}], ",", 
     RowBox[{"AnimationRunning", "\[Rule]", "False"}], ",", 
     RowBox[{"AnimationRepetitions", "\[Rule]", "1"}]}], "]"}]}],
  FontWeight->"Plain"]}], "Input",
 CellLabel->
  "In[781]:=",ExpressionUUID->"c527e034-dc28-4127-ba8a-d72f69a3351b"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 6.25, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0, 6.25}}, Typeset`size$$ = {
    280., {146., 149.98193418979645`}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Graphics[{{
          RGBColor[0, 0, 1], 
          
          Rectangle[{
           Rational[-1, 4] + 
            InterpolatingFunction[{{0., 6.25}}, {
              5, 7, 1, {646}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
               False}, CompressedData["
1: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
              "], {Developer`PackedArrayForm, CompressedData["
1:eJwd1QFHIAASBtBur0uSJEmSdEmSJEmykiRJkiRJkiRJ0iVJkqykS5IkSZIk
SZIkSZIkSZIkSZIkSZIkSZJ7e8MzP+D7xvy7/j/lrf8ICAj476+A/8/fFUgQ
wYQQShjhRBBJFNHEEEsc8SSQSBLJpJBKGulkkEkW2fwmh1zyyKeAQooopoRS
yiingkqqqKaGWuqop4FGmmimhVbaaKeDTrropode/tBHPwMMMsQwI4wyxjgT
TDLFNDPMMsc8CyyyxDIrrLLGOhtsssU2O+yyxz4HHHLEMSeccsY5F1xyxTU3
3HLHPQ888sQzL7zyxjsffPLFNz8EKMIvAgkimBBCCSOcCCKJIpoYYokjngQS
SSKZFFJJI50MMskim9/kkEse+RRQSBHFlFBKGeVUUEkV1dRQSx31NNBIE820
8LfkbbTTQSdddNNDL3/oo58BBhlimBFGGWOcCSaZYpoZZpljngUWWWKZFVZZ
Y50NNtlimx122WOfAw454pgTTjnjnAsuueKaG265454HHnnimRdeeeOdDz75
4psf/h7/LwIJIpgQQgkjnAgiiSKaGGKJI54EEkkimRRSSSOdDDLJIpvf5JBL
HvkUUEgRxZRQShnlVFBJFdXUUEsd9TTQSBPNtNBKG+100EkX3fTQyx/66GeA
QYYYZoRRxhhngkmmmGaGWeaYZ4FFllhmhVXWWGeDTbbYZodd9tjngEOOOOaE
U84454JLrrjmhlvuuOeBR5545oVX3njng0+++OaHgH/Kn0CCCCaEUMIIJ4JI
oogmhljiiCeBRJJIJoVU0kgng0yyyOY3OeSSRz4FFFJEMSWUUkY5FVRSRTU1
1FJHPQ000kQzLbTSRjsddNJFNz308oc++hlgkCGGGWGUMcaZYJIppplhljnm
WWCRJZZZYZU11tlgky222WGXPfY54JAjjjnhlDPOueCSK6654ZY77nngkSee
eeGVN9754JMvvvnh7+P/RSBBBBNCKGGEE0EkUUQTQyxxxJNAIkkkk0IqaaST
QSZZZPObHHLJI58CCimimBJKKaOcCiqpopoaaqmjngYaaaKZFlppo50OOumi
mx56+UMf/QwwyBDDjDDKGONMMMkU08wwyxzzLLDIEsussMoa62ywyRbb7LDL
HvsccMgRx5xwyhnnXHDJFdfccMsd9zzwyBPPvPDKG+988MkX3/wQ8C/5E0gQ
wYQQyv8AsPhFGQ==
               "], CompressedData["
1:eJxl13c81d//AHDSMqKkosgoKw2JpOElEpJNiPqgZBUqIiOloiQqo6my9woh
49h7ZbvXuO51l71SSL7H79/f/e/5OOe8z+txzrmv8zqiNi6GtqwsLCxcG1j+
30/VzPrngSYVZf8zFsuSv8QgIV8+dpOcufJhjgAhxrwcHOf40PDamqjMw3vy
J9sBT2ih158YZl1SvmO7r/hVQCDsbDM7u6mICzQXA2iS916D+qqon3PUIbD8
7olqEqKhP+lfzv2KM5AS8uXznakkuH6X8wQPTRPuu1q/mNyWBfT5ezNm+Yaw
wPs89G90DqheEeVhPXkZZCSO3BiQzIewHWn/sd27AQvm9mjdjlJQrtV33r3n
NmiMbXCJulkB9vcuy7+X9AS241VfFX5Ug/YjwwdxBx8CcSS4W2WuDuw+ae+5
3/kE1IuruX7saoKsZekvP+6HwsbfyiyBq20w/Lf54DfOSHg1zK/K1dQB2ckS
pmZaURDbLxQUcbsbRl3MdCE3BjZU2c/aTPfC077Z1oVDiYAKOe82aBLh573b
TzU40+BRGyXuuPcAiLt9T7L/lg2Zi8mHp/aTQO738VG7rDxIva/5ccJ+GA6n
iTmY/C4E1YM77vsGkeE57V6YsF8pgPHmsdggCjjPlogvfykHA7GdI48cRyBJ
Jfa9lEAV9GRaOBrIUCHotlwWk68WbOI/qbvTqKA0d+0WU7IBGuaq/d29aTDl
p2exWacZsq1Ez0WN02D8+ntHQ91mSL/1WLkKmyLN5/NJrxnyNl87Nobd9ACF
0vSbwS4rR4x3ggax2z/Gyxo2w7MQdy4l7BvvEkq8jJqB0JQ0/R929bDgLPel
ZlAMnE1Pxx5w1D8Sa9YMzk3rTJax23OU3RUtmkFXiEjVnKTB8T9h3Ovdm2Hn
O+t67Rka7Mjk39gZ0gw/ezPWn5/H850VMkxMaobuF72fFH/TwMNjguFb0Qzn
HyxFiizRoK3M5l1wdQsc25jfcn0HHZ59M7hbVN8K5JKPRtaH6PBE4BnbXbs2
+Coeq3pAlQ4dlWNWbqN4X+MdqzuM6JAuGuXVdusn+CcMs9+xocOMi3a2YX87
WGzmG0fedNje4X6pQLsTAndfWmzzw+2VG/QqfnQBj6DleW1XOpzcdotxQaoH
fpS8uVanS4cGs5Lf58J6oU5HSvenIB0k9xcU/Fjqg9KGmkoCkQYNSXH+9st9
wMcML87HPtkSoL3zbx/IaLvnhGOvel/dXoU97S6UeBs76r0M4fZKHxx49fKt
LvZn7skvwv/64EtZ9RMZbM97V6S9V/vgYkWNGZVAA2nP6IxuFgJUSDKFv2Bz
6RcekVtHAH29wwQzbN+iAOMqHgI8i7py9W0PDYS3NXQaCxFA1tB0uK2TBuH9
IemUAwTIJTfabWjH4y+QiK4nCKDDcWtBvpUGoTac0lnYI9LnqiSxYwnb7k1h
b1PJfL0be3f2XMVhJQLw6GRc3YJdP5LF44xdZHhWhgX7iZuWZTr2jKH979kW
GvzQOvpL5iQB2HUHQ3qxK58GvEzB3qUSt78U+6ywlrj0Kdxf6UdBLHaeyeW5
3SoEuCbduf9jM16P7OVALnUCCHR4MF430aBkbjNlRYsAvqH/1j9rpEH+9qvr
p3QJ8G/iso9vAz6vRt/M+V0I0Hj/0PqEShrwi/TMKoYSIN/rplNOMQ12jScl
62QSgG3s80R8Hg2m2UZEwjcS4T+T7Jcj0TTwev6A/eUVIjhObYuzfkkDvzMN
IQq5RBg5VvtZ1JMGJM4Tw0Ec/RB3PbxfyoYGAX+dWI5+7wc7Ha09e+WxDzUd
cbQagHeiygo2bDTgKRs8KsY+CIiicoSvjQoWbl9T1bMGId+FZmrwgQrtCYS9
FSZDYGW+qqRgQ4W95NjzZhdJ8PT6+H2H8REwm3PYeGiUBA8UrOW9nUfgg0fs
m31PhsFFAow3MCmwiWX93fW7yUApGDny3JICDMF1Xuewiza09V7A3sUl9/AJ
dvNK0UMu7Pv1YU+rsOXsHCVbLCgwry8ZtH4PGey0iE2h2C6fx1+ew6amct82
wD5SQgirwiYFLn3vvEwBwY7QyHOCZJD2mv5tim2POCOrsC3bpo8RzSkQ8chv
qFKUDHOfrb2XjCnQlrGNVi5BhlMfhzt26eP8xqWWXCpDBo8WE+Vj2hT4yhsu
9UOWDEMCMUUXz1Og9UyEsIYNGe5wzTmS+ShQLEItEblJhmLZnxFMDjyeQ/zY
L3cy/Ck1M2ayUOBxX6B3lR8ZuCih9cMLZMh6oR0W8pwMx/YJ/24fJwNZd1Z0
exQZ+LWkQ7/0kmHGT6rcP4sMT1dIanpVZGCNkTAaqCSDho3lSXImGc5YXfgh
1kOGzQauEWYfyWChM/ggUBGv48HthKCjZHjxRjT2RwRep3OUU5NVOJ/fOfo8
fYYCGrcdfIJMhsE9NiXNQHsEvux/oGtDIYG7dU3Qu5gRaJ5z8LnrTALR/KJo
qaNUmFoYSORTGwL9gK+b7xVQId+NqPnx3QCwOw3yK5yggQq7SsePfiLkaPDc
/A+bYPRmuwj2yj/j0ufYAmQn7adEIsS+zOTJxf62KPxolECEa9N7rQaxL4Zm
5OphL+2LzdysRIOXb3fRcvuIYCjRdfEKtqHT53N+vUSYNLhMy8Z+fDbkg1YP
EfKC5Xw2nqSBaD+Nvr2bCI0H7IKNztCg7M0bvsV6Igysizr4RYUGxUnRI4QS
IoxpOFsy1WiwfDfzUmE2EfQi3PbIadAghdXYITyeCCm3o1YK7fA9NHjLwV6G
iO/ZG8IHnGnQYrDpUBsvEY6FLtqHu9FgPv6I5IElAriZcPf88aLBdujUvjdM
gIM7LW6YPqKB5K3ykNw6AiTT9y8NP8bf/24cV19KgCCFyk9OATQImlpJ6M/F
eSSCTXf+Gc5zF9IjJ1IIQFYOJK4LoUFhcsAJ9rcE8D8gH70ljAZ6bWr+go8J
EDB2N4rvHQ1yQ/KcJHHeuBVZaSdUgO9Jk+7qmok+0HKXZA/EedRsR80uFqc+
ONpVVKe3QIOvGf/xNtB6YcNekSF3PnzPiIfM7rbuhZ3y6dPNWtg+575qOPTA
XtW02QUfOkwt/j5w4GY3RBsW1Y2k04F35hP7A4cuuBBUVxzUTweydkvjslUn
9OZcdyduZgD3XaKVuWEHBLEssMobMsDIc0v+kys/oTcoIiskjAG7wyQ8U+Ja
wHhG+FVIEwMoYhdDV680QOSlQKuJcQbsk5pRVPKuhXTWe7N/sP0iPR4JetVC
0uXex+snGLBcqVa76lkLzP8y+LZi91hVslM8aqGV50/cHuzL/y1o1tyrhR/2
efKS2I3Z/U+S3WvB1GGXkTK2YRfPgsvdWtjAquligt3pxXP5+O1aQGIaz29i
62sTs/4614LboTA+o0kGpLobKhea1cLeReOqE1MMEJzOinZVrYWEJvN3QtMM
WGzS7hM7WAsiSc6vWGcY0BZyj9K6oxaEwmKC+LF94ijKIdtrIe38W/8j2OK8
NcEXt9WCft5Fz/PYjGTBZg6eWnjxs8LpCnbpEm21jqsWSC8XLd2wY8P2iwdy
4PhkGCdjsO+se2rMtrEWuAZ7edqwS6ZTdfxYa6H+RCNxBdshLHLr8t8aGOvT
GKmeY0C+ICW8urUGrv7OsQv6xYChw/n1PjE1sOPb2+vav/H6ZW4+K+peAw9t
ffs2L+L1Xk9t/aZRA9e/jzBT2ZnAdUrx11nfKsgUMLSi8zNB4bDqxz2pFfCb
20UkT4IJ14QNNs+1lcH8GaGf3MeYYLkU6jHfXwKrZAGRXGBC9u2okTuXCnG9
c1D47AUmHNikwrExPxecC/ZIpxgyQf1jw/nLy5ngP8QuTjFjwjEh19QuwwRo
bNcMGLLE/T+8XCdIfQdDAxRV16tM2Pq0gu9s5UN01zO8OtGcCfOBEuZ89+JR
9jBhu6YuEzgnOfilv+WgPGu13K2nmbD9A9/tIZYSZJbrzYnEmHBam2cbybgS
3VbYJJaHnWd0+m/IpUok1pWnmIp9yfHX2BmzSpT0KvBiNDa5ZvvwuHklUrb1
sXqL/fb2W+JHi0okoh9+9yV29p2HxAtXKtGvixzv7mPbnRSiJVlVImIwV6Et
9nlu/Y2brleirMUP3QbYszwCp23tKlHDheMqQaJMaBm8tbjreSUyzzqmXy7C
hA81TyU6UirRww1nNv4WZsIjF4uqyKZKtActW8tgh1nSO2wmK1Hctfzz4zvx
/kQncR9WrUbKz/aY12E/uzY01axRjbq1WGzisBuOndnqrFONMlVsrR9i98Rz
OXMbVSPODRdMLbGVL+myZ5pVo4NHMtROYDeT1pH1rlYjTz839ukdTMjyMuJ+
41CNiqQUkhOxXa8/lu1yq0bF4+Ni/2GrV7zRFHhYjeT6PfIe8TKhS5Jl6+/p
ajRaHXQ1gocJV2l9v+RtalBUxJNtH7iYQDIOYO/oqEEr1bnlofh8nQkPMvup
Xou03FSPauLz+feJOlc6XwNyenOxNHWQAVdLE5gSs01I5r89dhnVDDDRc5s7
PtiKDpUMKJxLYcDWnenXrt/8iS5nN16wDmYAq/gfz4HpdtSzz/LfX20G2IlO
J4VMdCFtz1NCG9fh/2PggZ82bH1oqHfR9UgGHY46BbxmO9qP/GnwUVYf5zvr
VuN0tyF0wyb8cS0d171hyl58N4aR5pezjYU439uF2+y9tpuC7rFU63cvUMH+
wzHltK4R5Hw/wSoRW4xilaDdPYK8u0VcPLGNJEO3jWGL7pT30cKmrNr6BvWM
INpxUuBu7D8mVKZ07wjSURR/M/aLCoW8W0zrsR3nSbEvsTfuSJfbTBhBJ/ez
ZB1Za++f2KpBxON/+H//OU+FnvSWmaf9I+hrx0TF/hkq+P67emGZMYIkXJai
3CeocFrDMuH2rxHUbeytUcWkwtDk0jomKxWd/aCGtuJ3GG3V4Yo1NxXZ+3DX
rFCp4MgYPhGNHdf5pWkU+/Gju3zD2IMxv9t7sFUb9k6L8FDRKm1HXxX2wXJK
oxX21NelwWzsuusViV+xVVgMRl9g01ly/hPZSkW7jpfP22L3n+Xg/4pddFb7
H2C77alrE95GRU5Vpw5WUajQGOMlKbSTikJEgEWTTAVXvT2Vu/dQkZeCvlcj
iQrgEpjML0JFacjhg+4QFYKtA/p2ilORvGC3/2Vcpz7o/2TCZ0pFW0LLZNXK
qfDJbd+bQ8+p6HPM9KvN36hgdi0qzrqIisTVu1+lxFDhjdjnqMwJKmI/yS7x
/DIVpFqKa2S7aMg22qLZi4cKBiGhfRaldFSQUdDuVT4CyoeVX9YlMdBSNDfh
qSuua3MEAzaFM5FNkdDSe8ERMIzhLovxG0Wl8dey2FMpMHq+8CXKHkPtsx29
nvIUuGWuovmMPI66t4fdnSrA9W1EnmTH1knEErLpttcJMuizrgu+dWoKfXX6
2CGTMwzTdVLkUNlpVBqXXrRbehhqO1NfmJVNI5vWo+X8jiQgO0e3Ld6fQe/b
1v81Oj8EvlH/pgtkZhEf7Zi/RfIAHFOb09LqnEUKrdKFr5MGYL8AZ+db7Mor
3eO1iQMg411qSsO+lqok9C9hAFhPbOmT75pFRT+NLshj75L9bfoY++7ofjfH
+AEYVvPp/In9+5hCeXfsACicK65z7p5FBnxirGoxA3Bpj10OZ88sGjMbP5b5
dQBGx7zDk7Blbbdepb0aACOjM3q1A7OoZ1bSkf/RAJDPS2mQKTgebVML9dsD
4Fnt4rnInEVL5+vlb1kPQMxBzSGu6VkUuiHOklaO3y+X3MqXZObQ5lDHV2+x
BXZtbdl1cA6xFRVWamIf51vplcfe++L1wmJZPyxOPKUYYM+yzEqlYi/FpEw4
YwvtJV62xG476vT7BbZJSmlJKeqHqX/7OGqwK0hVe0WxnYQv7mE5NIdUWyZ8
H5f2w/JzyoGT2ESlTa2XC/rBXzbd9cGROWSWTbc9+q0ftK4jgYqjc4jbrFx1
U1o/pEZPim+Qn0PsETW2/fH9YGPBE6FxfA45qbet22zfD+pssuylF+dQTC0L
ZUy6HypqfG4u2MwhWlhyy7MxIlytrxGa9pxDu7/wvRpKI8Jf/guPUkLmkO95
z7npW0QI5K9kEY+bQ8GGDxmp031wCMXt5heeR1sseYuCHHvhXqVnXsqrecRa
M3jqXH838J64af7qzzzqpM7Nh53vAh913fK3l36hz69B4kRKB3h+FvVJTvmF
vvN+YExtagf9ln3T1fO/UKKa5xsT6Tao110c/Xh6AR21X2JaBDXBnNKnR3ye
CyiCe2YnW2EdbFRk+/kwcQHpKCy5xJCqwPqLwn7VRtz+ce7yAbZyCJ3Qs62k
LKArUtXpiqzlsPK8fqYJWzKvZvXcahls4Z3y7cYO8f2jb7hSBsE7zTaRsI+U
XI7+b7kMnsWvD2FiJ2ROTN9cLAOO5vltc9iut91DAn+VgZqHJd/GkQV0nVgu
FTNTBvJm7ZwC2AYNnah4Ao8XMv0jg/2ps26huqYMdDX5+2nYtwT15pq/lMHF
9aHeUdQFFPkyurjTswwq17v26tEWEKL/MycYlMEL9tvzK9hM1nN+WW9LIEBV
KIw8voBKuYMl3i8XQ07A5NjAxAJaEB7zteovhtEr12W5JxeQgMfmcMmSYqjA
l+MZbI3iQYfJqGKgnzj54SY2o+YM18jtYpgeHjmfjn3q4NyxPvViGN7SbTqO
XbF9x0izQDEcPxvbLD21gJQ9lhLVrX/Ajn9jISdmFpDFHib1Y1IBHAnddix5
dgEd7hEw65/6DgKcB9gezC0g/+T173kV8+CgZax+Ifa41tC7F/7Z8PLKDYNT
uH+gd4PL7KdUePvvzCg/nu/SyurVl8fjYLrQ958DfQFV60lV34p/D62VoXbn
BxfQdP/D8N66pxDAF9xY3b6AWgd6fERdAtGOkoOvvxUvoL83j9eECEWj9yta
e8KiF9Csm5dapn4aGvZQmsp9tIBCw/7EuRbmIItst2dWV3D8gRKuqyqFaGi2
IblXfgGJPN3SzlJaihTPv2w137yABgcOK/geqURlTKmkyMpf6MMr1hfX52pQ
UWNm+LjHL/TIiUMgOLkBdV/OUawS/4Ukq9HwrQ/NqDBcafzs0DwSPOdk9vpj
M/qdtidbHFvZNrg591Mz0h4MvMuObSuy72xvVDPyj76qMDE4j5xuHclZ/tyM
PP98WWjDPnAue5/w12bETtXOz8Vumv/CeiOmGU1Oeir6YAu9uN6XFteMqFr6
eWrYzOp/KXMJzaiIq12WE7s2LTfwe0kzUnMKftxFnEeNjdVL9zqb0VPRXROf
++bR/VF5NoUx3O6YesuuZx5FrrJ9nWZtQWEW/huOdM0jsS9Vb6yOtKDo3pdu
RW14Po+5hhrLFvTkt57YuaZ5pHFVS2VfUAvSXv6xXFc7j+5q3Rx1z29Br5ZK
NlyonEc/+ceKVra1IkPliFyVH/PoS+mJlSs3W9FhlZMqUtnzyLXC6WZkTSvi
SB4sZEmaR2zJs9eMtrYhrpPP5Bo+zyP18zL0S3I/0cUNfuJJ1vPo9RaRTIZ+
O4rSuPtyn9g8ontd8KA7daCUzk3zF0lzKOFD84Dc406UocptJv9pDt0107VO
jexCy3XWtkyTOVQ5xZuaKtuDZG+3yevRZ1HLAf4MhfJeZOw8bMTmNossn/gK
0DUIiMfclVP57ww6HL31lk0VEYHHK5rSwxkkv5Qvo3d8AH0HvwPyLDOIlfMn
/+WoQXRv74X5mz7TSGyv5jUdURLS2iWZJZc5hRR5Y6/EYTuojBXGZ0whsXXe
l5axz3L1l/FjmzBbdQzFSOjzm301L9KnEFRGqyVj69LK6/+lTSGDF9OKLPtI
SGh3fuNt7OTJQKEMbDsvvSbT1Cl0kMa7YrGfhLrm1WrOpEwhe53X3eziJGQi
E1G4L3kKlVVnbu6QIaEG8YMtQp+nkNkmrYH3ciQU1PpUZ0fYFLq9o83oqhIJ
6RiPK3E8m0JPCflOIioktPNBWsRfnyl0a1tBiNxjEmJ//Y6XuWUKRV0TmvZ7
RUIhco67wn9Pohou3qLKKDy/cpWBwvAkOhV/Y2wlBX//yanOpoZJlHZ5ve/h
AhL6QN+5xSJ3ErmL8t80qSYh6Za2BlLUJPpctS3vTjsJoZc8elcDJ5GHwC3j
gCESSt98J6rDdRJZD5x79mqRhGTPSTfGq02iBZ6asbvbh5FZeEuh6c5JVH/i
zjXZQ8OI+vBgK5MxgeyOi3VWnx9Ghan8ty2LJtCn1/6pWZRhdF7N1nvzx3H0
UDT08UMvMvK9c03a8N4YmmlX7drLSUGLj6QiP+mMIqVHzgc8IiioJJLTWVuU
iaQe6kl6COA6lgOeVMzQEXPfC8KBzBHku7TX3MGfhhYiXhWFnaIijdkR52Rc
f46bwEJUKRV9bxDUlfpAQXckp9uVTtDQ31mzsQAxMlrnax1pkURDiZv3DFgl
k9D81Yvxwdg/i16o5yaR0AvWU99KsJ9kDWdswta8fqhkEnvck4vfIpGE0gL2
1Qgn0xCrGNejjAQSOmEv1KyPXVpAYrJiJyTx93zDdmMcK0qKI6HyYbE+vhQa
uq1NfKEXS0KRPKc77mHLaPdYLESTULyEE0Uzg4ZG2eVNvcJJyGmHdd+ubzTU
tPHKtn8BJPRRgCePkkdD/2pGXjy6T0L/Sm7cSyukodclV+vW3ySh9fpDen2D
NJTXQjSQaxhCAonE1NZ1dMTxYWhZsXgQkWuX7EPF6ai4bWOgRMYA2jB44y6/
Bh3dy7UtYP/ajyolSqsc7eioROeH2MRrIhJOIMW247rXWS5Va8S3FzGGa97S
OBnozNJMkJ5TF4o3LDqVrstA11IqvslbtOO8wgiUDWSg1dmuc4JRLei9gH2q
bx4DSed3jbwNrkOOX/rG4voYSCRw1+mUgAoUN1Hbr8rCRN6GXBJ8n7KQRM1d
gYvYbZcisk+HZ6FwiXIDE+yy2GZ52+AspLUz6+lVbI6YE9Uvn2Shz59U8uyw
K7V7bL77ZKGZsjskV+yVDylbhtyy0AXj3YcfY+fcKfGVtc1C3h80HSOwGxmp
Yv4mWci1ZSU8EduQ68HfDvUspP9Mxc+clYnCwi5X7TPMRK9B8e36dUz0pOz3
/nr+DJRkWD+QhD2tFGr6bigN3XciGZ1nYyLjuG3vXyekIge/mdmFTUy0df/M
uV1jn5FQnIz8Og4mknR+01CR6YWs1ZJWnNiZqIOk9sXT+TXsU7KwP7GRibpL
Iy9IZsfB07obZU44HikbJOCinQUekzoeb8cZ6NKvXezDurgOKCq7L9PCQPG2
XmGK26ogy3Rwq3E8Awl1pI7zD9dD5G4X1rN3GIhD8ayPYEQrdJFdIsQVGOje
pZKh6Ih2WOl5s7xpnI7Sh3brZl/vgm1bV2qoY3R0RFe2lm7bBV1sHq8qsZ+e
Zjm1164LGgpYzKKxzTX+SzW27wIX+Q9CftgGl3T4Xzh0gbqP2rAl9haDhkfl
jl1wKTPvOj/2fOewzuFbXXAM7Egdo3SktF2e66NLF5BNzYxDsVW0yoo33emC
vQUhR0l0OpLp5EhTC+qC0B/Gmw9T6aiVnnXcK6YL5FUv9XmS6ahFsMg89UcX
3NRSiS8boiO60mHenvYuyHlANG9upiMn2agRA5duqI/097UooqOeDv8WOkcP
2O4faHBKwvH5NW6NjO+Bv61HV/+F01G80g4Zc+iF3ax1otk36cjPXldyq2sf
cHLZbvRUpaOEK+vZZz4RwF9QdMV8Jx25neN7O1RNBIqZypMrDBqSV+4RRqP9
EFuYxiocRkM2sV84xCmD8GMoYcgE5xdxc9Iqmx0JXFQE30j3UtHEneNq1ibD
MDLab1V5h4piNr1oMDlNhp8V9b66m6mo5KHgxRd7KGAVxTd01XQERYxrq792
GIELric9PMsoKPxPZoSNHRWyhXkrdLD72M7WJWCXlFpz7cNOZGxfGsVO1pO+
9AdR0Pbk+gNH7KmQ3mn/pRlb+qzN5bvYbPoijBjs32kDz/KxqxT9PHWwJUQ+
UMABv4M5Sjf+KaUg07xhpTrsE4T+NzHYRbq5L/QdqWBxEt5qF1HQyZTsuhgX
KszuvVU7l09BmT1RGnNuVOD+kbrvYy4FcVxVZlf1okKWlUra2WwKOhQfxx3q
RwWlO165Hl8p6NwKr/nceyqsW+BSfh9KQavWJcsyuVSoLuZ1SnhAQde9qQUn
WqhwqFuU10iHgpIjV02v8dPAYV9q6eU9FPSUmD/Ab00DsuSP7DIGGTFPMvyM
kmjwBmmoP8sjo6plE6stkzTg7phc0NIho8xfNYp0NzqslISnFZGH0a70z7/u
/aLDBu1D/Evuw6g9RXEx2IUBRmPeJWKbcHtXY+QimQFbjpN+G0WSkEJFmOxL
PSbk1an/MLAbQl86wss5t45CyGRaUlbEAJKMvK7AkzsKbr86FGoLiYjaf7D5
9Mkx8JF+5ymOPWnr23wdez/F+cfjAiKa8F6oDca+oWi2PJxPRKLO9NJc7DOn
jE+pYC8d0f/Wjx3Pds3r83ciGsuVjVl/agxCNBIWLucRkZ7wsJcx9nt1BZdd
uURUMOuiHoedGr91pOMbEen09LPOYzs9e5d8JIGIdu73M+aGMfC2alx9/p6I
vl04IrJPdQyOuCgyycFE1KRld01OfQzA3tn+5EMc/6avgqc1x8Bkj12NOSsR
TZ1Uuu5kOwaUR4R0Jp2A0kXGvP85jsFKuOZdtxYC+iVI7PFyHYOAe+0yS7kE
9Himx5nkPgZucl/GvT4S0AXNjcePeI9B8Z0e4i17AtLlZEo+ezoGTY1zozoK
BJQVxDR6GjoGovYxVXvWEdBHs4vWEu/HYIetAl9vSx+ixEn8cYwZg0HJRfkK
z17kJMGg5XePQame9uwLkR4UwrF1MX5pDFxsbG6w1nahnMqnfMQt4+DG/NI6
e7MTyfKvX123dRyEG7ovy2/vQKxHq9RbWcaBmrFej2n0E91UnC1Jax+D/540
nKXLtqLTIzULRwPGIOfM8jHv6kbU8o1zpG/3GLzIjVq541CHlO3CP8q8GgWF
SqkP5SLViJp/3KOAyoSE8lBju6lyZHgwnm33HiaY9r3m23i8CBXHmGZ3V9Hh
71fexF28OYi60SrI+SANNI6rzCntSESu7dJuvfojsGdETVZl8A26up4vY1GW
DFvmHe/mj7qBm32r5oG3Q/AmMVhkpPg9/Pm5Ps9NmQBXzpTutxSNh2/L3loO
xp0wTm/5M3E0FTIytK9OJDcC+02n4A7zDDAnNYx8O4ff0Z4BBMvhDJiNWdxs
HPkD+H//VLXVyYSjLOOuO5/nAmeCn5lbVCacH1VUnqlIAxu5XabbUjKhteKO
tPH5FPi6FMnvlpYJtz1iRMtqksG1eJ9kY0YmeGxI0dipkQzaOiUPd2ZnwjuW
kveXapPAxsiP6Ib98dMOxWffkiB4RwWtHXvc8bxKYVQS0OPPXQ35lgkjTYYH
drslwR/3greaOZkQr5de6XkhCdo7OcNYczOBo1Sdq0skCaKTLztcwf6vfonB
xpUEE2SJ6QLsl6Vvjsr9ToStR4+J8+VlQuelQXsrciIkPBkR2YH91v7GvAR2
mVeY4E7sXaqjfhPDibCSOr6dH9tSnBnpha1ld5pzN7aMQ3f6JuzYNP91gti+
W75VhZMSoY3bzGPN8lJKu7yw704eHF9zmR5y+A87PqmrSwg7qKCe+wB2lpkP
2oudZdyWMz+UCOH/RJKFsY/t7zBD2F0XhOulsOU09zYkDyTCic5sfmls3TmP
T2+xV0XO2a85+tBP56fYRmftNx3A9inz326NrejyImHNJaFyBaexHwTqF63Z
85DzoiJ23McdbWt+Upl88hh2etGXxTUfJ4mUSGMrObotrVkq6Xnwmqv4tZbX
vN111mLNOrVCf9f8V9FCZs2d7rP/Z8pq5ZIUtsX+2pU1i9m+Zltrd3rkurrm
50cO7lizz6AAqww2x1KNxJpDT1WuW7NPlfWJNQcPWm1f8520W4w1r/f/t2/N
rmH33x3AXhD/JL9mr/tPNWWwKxKrCGv+q/JXSg7b1Xzi4UHsW0l32JXW1uvk
TslD2C2ZDCZgcxsXxh3DXjZxzXiCLSfqInYSu9i9/U49tlWM4lcVbHEeHkXu
wURoNdoW8mgtvtNX+krw/ikdUnpcsRbfGbZbtyiJMLox04/teyYwdVhnBWmJ
sKnwzuNz2PoFpvZNjEQQnso42VaQCU7jE8OxbEnQ/yCp8WpRJgi0Hop135sE
f8mVCtMlmbDffV/6WaUkYM2x9XxSlgm5JQSWzcZJIKpmyTtGyIQNbCfXh1xN
BoaGapLTQibcO3JBf+BGCgyX7Jh5xJ4FsvG7JxdvpsLUKfnvZvxZsKWwc5Du
mgYHvaqWCySzYFW5YE/qnXTI4+qd3jKYBaFsLNVKz3KAzBL/6Ep1NqgfPmNP
ns0Hb8rq89i+byBBY3hKsBRDgYIaTXRXLiClRlHL7whUxVk1LLzyYOHHn+fZ
L8shqT7gPjdLPqhavhU13V0JrJKR/JdaC6FYtOLKqk01NHaZHHRmFkOXbOa7
SqNaGM9et9tRtAxevtYo3LNQB8d55DmjGeWQUDKt52LYAAKupQ+rqyshd9aK
94RrI9yr09Qoza2GHAOuVaFLTXCGIyx7OLsWTL8YOGzlaIaDKxuUe8QaQOht
Y4B7YjMUVvv8fPC5CXqKlLRiuVpA9/wK232RVpDm4pRPV2kBk+3pP+63t4F9
09eBaq0WsPIvMyWwt8P7D7Lj7YdbICrh8efH0AHB9bpyAr+a4X+aWJXL
               "]}, {Automatic}][$CellContext`t$$], 
            Rational[-1, 15]}, {
           Rational[1, 4] + 
            InterpolatingFunction[{{0., 6.25}}, {
              5, 7, 1, {646}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
               False}, CompressedData["
1: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
              "], {Developer`PackedArrayForm, CompressedData["
1:eJwd1QFHIAASBtBur0uSJEmSdEmSJEmykiRJkiRJkiRJ0iVJkqykS5IkSZIk
SZIkSZIkSZIkSZIkSZIkSZJ7e8MzP+D7xvy7/j/lrf8ICAj476+A/8/fFUgQ
wYQQShjhRBBJFNHEEEsc8SSQSBLJpJBKGulkkEkW2fwmh1zyyKeAQooopoRS
yiingkqqqKaGWuqop4FGmmimhVbaaKeDTrropode/tBHPwMMMsQwI4wyxjgT
TDLFNDPMMsc8CyyyxDIrrLLGOhtsssU2O+yyxz4HHHLEMSeccsY5F1xyxTU3
3HLHPQ888sQzL7zyxjsffPLFNz8EKMIvAgkimBBCCSOcCCKJIpoYYokjngQS
SSKZFFJJI50MMskim9/kkEse+RRQSBHFlFBKGeVUUEkV1dRQSx31NNBIE820
8LfkbbTTQSdddNNDL3/oo58BBhlimBFGGWOcCSaZYpoZZpljngUWWWKZFVZZ
Y50NNtlimx122WOfAw454pgTTjnjnAsuueKaG265454HHnnimRdeeeOdDz75
4psf/h7/LwIJIpgQQgkjnAgiiSKaGGKJI54EEkkimRRSSSOdDDLJIpvf5JBL
HvkUUEgRxZRQShnlVFBJFdXUUEsd9TTQSBPNtNBKG+100EkX3fTQyx/66GeA
QYYYZoRRxhhngkmmmGaGWeaYZ4FFllhmhVXWWGeDTbbYZodd9tjngEOOOOaE
U84454JLrrjmhlvuuOeBR5545oVX3njng0+++OaHgH/Kn0CCCCaEUMIIJ4JI
oogmhljiiCeBRJJIJoVU0kgng0yyyOY3OeSSRz4FFFJEMSWUUkY5FVRSRTU1
1FJHPQ000kQzLbTSRjsddNJFNz308oc++hlgkCGGGWGUMcaZYJIppplhljnm
WWCRJZZZYZU11tlgky222WGXPfY54JAjjjnhlDPOueCSK6654ZY77nngkSee
eeGVN9754JMvvvnh7+P/RSBBBBNCKGGEE0EkUUQTQyxxxJNAIkkkk0IqaaST
QSZZZPObHHLJI58CCimimBJKKaOcCiqpopoaaqmjngYaaaKZFlppo50OOumi
mx56+UMf/QwwyBDDjDDKGONMMMkU08wwyxzzLLDIEsussMoa62ywyRbb7LDL
HvsccMgRx5xwyhnnXHDJFdfccMsd9zzwyBPPvPDKG+988MkX3/wQ8C/5E0gQ
wYQQyv8AsPhFGQ==
               "], CompressedData["
1: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
               "]}, {Automatic}][$CellContext`t$$], 
            Rational[1, 15]}]}, {
          RGBColor[1, 0.5, 0], 
          Translate[
           Rotate[
            Rectangle[{0, 
              Rational[1, 30]}, {1, 
              Rational[-1, 30]}], Rational[-1, 2] Pi + 
            InterpolatingFunction[{{0., 6.25}}, {
              5, 7, 1, {646}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
               False}, CompressedData["
1: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
              "], {Developer`PackedArrayForm, CompressedData["
1:eJwd1QFHIAASBtBur0uSJEmSdEmSJEmykiRJkiRJkiRJ0iVJkqykS5IkSZIk
SZIkSZIkSZIkSZIkSZIkSZJ7e8MzP+D7xvy7/j/lrf8ICAj476+A/8/fFUgQ
wYQQShjhRBBJFNHEEEsc8SSQSBLJpJBKGulkkEkW2fwmh1zyyKeAQooopoRS
yiingkqqqKaGWuqop4FGmmimhVbaaKeDTrropode/tBHPwMMMsQwI4wyxjgT
TDLFNDPMMsc8CyyyxDIrrLLGOhtsssU2O+yyxz4HHHLEMSeccsY5F1xyxTU3
3HLHPQ888sQzL7zyxjsffPLFNz8EKMIvAgkimBBCCSOcCCKJIpoYYokjngQS
SSKZFFJJI50MMskim9/kkEse+RRQSBHFlFBKGeVUUEkV1dRQSx31NNBIE820
8LfkbbTTQSdddNNDL3/oo58BBhlimBFGGWOcCSaZYpoZZpljngUWWWKZFVZZ
Y50NNtlimx122WOfAw454pgTTjnjnAsuueKaG265454HHnnimRdeeeOdDz75
4psf/h7/LwIJIpgQQgkjnAgiiSKaGGKJI54EEkkimRRSSSOdDDLJIpvf5JBL
HvkUUEgRxZRQShnlVFBJFdXUUEsd9TTQSBPNtNBKG+100EkX3fTQyx/66GeA
QYYYZoRRxhhngkmmmGaGWeaYZ4FFllhmhVXWWGeDTbbYZodd9tjngEOOOOaE
U84454JLrrjmhlvuuOeBR5545oVX3njng0+++OaHgH/Kn0CCCCaEUMIIJ4JI
oogmhljiiCeBRJJIJoVU0kgng0yyyOY3OeSSRz4FFFJEMSWUUkY5FVRSRTU1
1FJHPQ000kQzLbTSRjsddNJFNz308oc++hlgkCGGGWGUMcaZYJIppplhljnm
WWCRJZZZYZU11tlgky222WGXPfY54JAjjjnhlDPOueCSK6654ZY77nngkSee
eeGVN9754JMvvvnh7+P/RSBBBBNCKGGEE0EkUUQTQyxxxJNAIkkkk0IqaaST
QSZZZPObHHLJI58CCimimBJKKaOcCiqpopoaaqmjngYaaaKZFlppo50OOumi
mx56+UMf/QwwyBDDjDDKGONMMMkU08wwyxzzLLDIEsussMoa62ywyRbb7LDL
HvsccMgRx5xwyhnnXHDJFdfccMsd9zzwyBPPvPDKG+988MkX3/wQ8C/5E0gQ
wYQQyv8AsPhFGQ==
               "], CompressedData["
1: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
V/hOZ8H/ACtR+6w=
               "]}, {Automatic}][$CellContext`t$$], {0, 0}], {
            
            InterpolatingFunction[{{0., 6.25}}, {
             5, 7, 1, {646}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
              False}, CompressedData["
1:eJwt2Hk0FNz7APDZZzDDDBpEoSSEylKS3Kd4e1MRkQgVaaFURAuilFaUNhWR
FpIlS9kipLRIkURvkTX7OphhhvldfX/3nHs+99znPM859497nnuuusehzbtJ
BAKBiOe5mcX/jwv5HQXR25jof6qggWW6F6yVPRDzvuXqthRflKhx5JXq2kCU
qZRX1FJ4CUm7yNCVhdeQpXb54re3b6NA/lGnQ8viUYPHzVJmTyKSXmrVnXs+
GVmIRRz3BemoaI/TvXD3LFRvnZ21bclzNGLErFgszkWdI+T8O4FF6GDD1Dei
sBTty5uoys0vR7tujVXsP1qB3AKGS9SMPqCtDv35dcOVKE1lGb+u5As65Vcy
u7eiBqV+b1vRm16L6kwZzr036pA4Xvd4b1A90iHbxfR6/EBE35e9knd/oh9N
C0CnphE5aa77qEFpRhHvLAQx2JJ9SFOK2oxGJFY6hGAXpC4LG8Y6bzTI9KTh
eJQ2cwO9GWnWqO1bysB5copvFCSaUWRqqYuCbDOKsvDicZWb0dWfnMtcjWYU
faRwHlevGcXtspWRPd+Mku3/CFktzSjbIrhLYmULKjaUraPebEHv5z8pIw62
oMf3y94v6m5FYXN+ftnS1oZ23h39HtrYjlYpSDel1Heg2TcWdtTW/EF89uq+
qcpOJBGUEn3sUydS7uAsH8bqbQr85V3ViVBB6+l2rN38DQu3f+5E/nxlP7sv
neh2ZV+RZXUnKkooppvUdKL53R28/P860UUD6eYV7Z1oKGjZp8L+TrT17fb8
lfxO9KD4m+o+bP+L9edvYE0ySgdKsWeSljn2Yz/HpxUrCTqR55XbEX7YydCz
LpXYq4cP62hMdKID35NRnKgT/Wv220Ge0IXmP+B6R5C7kJhuE0qhdyGt36zR
2DldyC63ap+hURcKjIxs/Li+C/k2hX7xuNCFvBb7lU2+7UI7T3nmXCN3o601
jo91VnejtUdWXtxW1I2MZqn5XFreg+bnUewKs3uQrHO3UY9eLyIIqxRnp/Si
B/cKC+3v9SELSHaNjO5H7a3XpyvCB9C58FP3CYGDqITh4O+N5V9euO4bdomM
UNk8aBB5Xfs8mIxNnPWgnBM8iORUrPZ3YM/OG5ItODmIxrViCiNCBpGn15x/
a84Noq8pD2tnXRlE0KO9c1vMIMrQyeyLTxhEkxkDXhtHBlFvzMkyb+IQcm4g
2zyTGELvFC/9x+MMIWNn9l6T2UNI9j+VU2U6Q2hgm/ad9SuH0Mefxtm1G4ZQ
kuuaSlfXIeTHGLyulzmEzJ/Huk6Th5HkznULvmwdRnVSY/0JqcMoMS8x97B4
GJU32aTkRI6gdqoodlyZh6h6KVErnvLQ8kGqrjfWK8vjw11s7JGSPZXYKmMV
iggr5h9P1E3loV3BBr8ise8IfdxBrE74YzvbNB7iZLXHqWTyEP/X/K6uHB5q
YuwyfJHHQ2+MHoScfontVToU3MJD0Ra3qbO6ecgtlhuXPoTzeTcM1gpw3nq5
D01iHuIe/B3fRRpFRtGp/iPUUWT//Nh6EWMURU/KjMvIjKLP8CRx/qxRJHUe
rJcrj6JDVB2f7WtGUe0Zuchwr1G0nDSVlnZ1FMWe+vOpNm8Uqdmf2bNGPIqS
FqgRstaOoUWCojuqUWMo86OzYVTdGDK+N/5JpDKOjtrFVLbFjaN8qsnHjyp8
NFHQ8D4rjo+ojGrLj4N8dGzz6i/d2O64bGeJIT5y6ZzfroWtWnrz4DosCqZN
7MXO43SzkrG0pMp5f7A9phnLFwzzUY3UBUYcj4/yf7n/kB3no4T0lU8vCvjo
XMisIIKQj2zN3hoBVmnSfyAU25an8aQEmxbwzV2MPWp4VhmJ+EjiWVvUK2yc
jgXJfIqPFic9CCjGDpxw4+eRBCjNWvFENl2A9qvXTqYxBUhnLDI4mSNA90z/
izxsIUDsU5oJKwIEKOytXyYpWYDGJEvKKhsE+B4ZfTogN4Ea7VO+s2wm0Obj
c1syLkygirjrvZvKJ5BpGWN8aGoCjaDOzdVukyjl1dtnz4onkfuqR8wrc4RI
qSjM6+BJIaoxda+wbhSiDWOaNw5i3zzrc7+CXeWdvTgTm6dxfKoau+T3qsph
7HyHD3sMm4SI+8GBFICVMG++l4s9/2Vz1toWIaK6v33zvU2Izowsb9jzR4gI
Z5/2jncJUY+BRkYMSYSIGSdfkskipKhd//4QVv/Rku8/sf+oXmr7lyJCrnfb
hnKwF6/ekoqgilDeOStNT5oItQeLwIwuQqmzJzeky4iQbz7fca6iCJk4jrlf
UROhad7IAYK2CMUeKjwX6yZCK3pP3192TYS+77EqrKkQoSOt7G8HhCLE3t7Q
T18yhU5TqtO7bkyhkafvfD5MTKFddiV6T7dPo1p+bv+l8mlkGZ+Rvl9LjF5Y
JvlsjBQjzd57enojYmQ47mBihwUi0yIAa80st76D3aYQ6FSM3Ttv6a4WbJhJ
wnFtnhjF2bCifLG5nkEPC7DFq9+fuDQuRm/mzrJ1mRCjSqG7pq5IjL42ZIhE
02LUcHT7XimxGDXKS39VwrZmF5tpYTttfZKXYfsHVGT/wfJ1gjvdsaS9P4tC
sMyHptdisS9PTvDcCAQYTKmbO4DV+J5lFUIkgBMpyl+aRIC9RQvVM+kECDha
VmXHIsCZJS6BPFkCRPeMat5UJEBpQUWdmwEBBi7cPqu5kQBznLwNB3cTYONC
s9a8UAIEjbOiT90hgMPxTd/pLwmgP3lV+covAtCDv+7kThOgeUou6Z4qEQpC
t/RqrCbCNWLMkjQPImharTyy6QoRCq/+fjHykgjWDWcEN7uIEHNJZm8qttUs
tq4UqzuoafkdezQxO7sXW2pvrk7sJsKW/C3Ti7DdKj4/HbEhp8/mn8auP3TQ
Rb+XCApuTtP/9RGhff2axPMDRMg00bU0GiJCRtimxBECCVwO3P8xiaU7DnPI
RBI8R2vWS2F3al8Pk8My5doLlbG7/4Qv0sW+KlgYZ4ZViPzAtMZGfVY+Moyl
sQ/+uEkiQYhdKTIlk2DsmmxSE/aButXj9ZIk2JQZ+iiXTQKRee7DeQokSKnq
exA1hwSOrvMfTM4nwVu74l779SQw/nercfphEjw2Gw6hxZBglsHl9zuKSRC+
cIFsQRuuq1LiIitJhkiVOgUPYzIsUOmtzdpJhlfKxKvECDI4KitstMsjw8Bs
PUZiKxlUI3fU5GJtxdF3P2FP+77Z1YrNbhvXFWBbt2iPs9rIYGkadWEFNmku
b/ZuLIPslH4V+9/Aut2WHWRI+2/FHMEfMoRU6NSlduF62cqRO3rIcLbrbJGn
kAzapXt0P02TIdNuMiBQTIblbZElWgQKvPJXl6jHnlPv//mJSAGbz/kZr0kU
UAg6ezqfTIEu0xPFm1kUKJz0mejjUuByoYfxeTUKuAVu9VXXoYCU5decSnMc
Z1mPB9hTYF/9OxO1fTg/cU3Qx2AKVHgXF/tHU8B9eOWzZVkUEB0rvC+opkDM
tMm1wiEKGITnnQlmU6FKalmA+RIq7Lv2fA/BlgrDOXJ5t4KpEFjnR9dLoQKZ
X7O1vI4KTfV3T96eoML+5vP+SVhBl//+59jwYXeP11jZSRvnamwCycy2CVsg
xzWfxNZqDC3iTlKh3/ijkgF2qNnG00pIBd7l2oydIiqML3OaODZFhYmWXxZX
pqkgXv6noZhAA1rUoE8fiQbMdgFJmUoDWVPSbSs6DVT/yL9OkqLBomsL+8hs
Giw3N+W6y9PAsmcjvFKkwTeW9iDDmAa7llLj7e1owHNo2RjvQ4Ow48XCrou4
Ttydp4ZJNGB9K1Ll1tCAwWy+IRDSgGJJlvypSQdxkGZosR0dhDlWownBdBjv
PeAVlkyHt0udbe//pENw0tu1uVhDZYNVn7A9V+INW7GJFCkdAdbpxDE16V90
qPCwZZlijTZqT+7GPjAmdUZjh+yDFlo10WGV3+heQjMdLl31eZLXQoeGjD9d
B9vo0NiY6BMzSofjs28MUAV0kN167pC/kA7p148PtU7TYV21t68diQGtTLeR
EioDTlptOqIvwQCFc6tH45gMsBYvGD8hx8DnlRQ4zmZA3vDAhKE6A/q9a4Vs
LQYczinrU7JnAE/4rHFeCAOOWsZ/XpTCgImIiBKjbwwIrgvMXCVmQHzQaPkn
AwkoUT9Y77JHAprfdfb03JEA0kH36RNVEjBf/idHgigJTHL3fTXs2PD4YhNs
YzOlZBO24ouszV7ss1dqjSHY03FmwnTs5kAnpUashpP/ciZJEhxIlz3byJJw
Ni0xupAqCTmO+a+i6ZLQRvjSu09CEl4nZWVUK0tC4sYbvib6khA6ctToPkjC
9tvOfLq9JKwyNys8tFsSLlqOb9KOlYS69ZkdrdWSoG7nHRRHkwKfrRocRzMp
KHRrSpLxkwKa522zD8lSYFxgEj5FZoJ3/WU9dQoTEsaa6iyxdXIGIfuwkgbh
mhFYZNvw+Rk2JSJElY+V/6Bx2JzKhBBqZWk4NsndqtOGwYSq4ncsRSkmjCmt
NWphMUHl6JttT9lMSJZ5/jNclwkGKQ9d3dcxoXjN9UYzTyas+xW2XfEUE2oD
/H7zYpnwVHdrd803JpxuW8l7xmKB0121qci1LFhsR6UfCGUBjdHDXp/Pghre
GYNPIyx4LcGt6MDmqD5xFmMfGZv2K/JYcHPDp1MG2PPu2+U3Yr0iw1aGYjcU
JHlkY/U7Pl7swNLijDgdYyxo2hx/u53PglwJhlr7BAuiSn2T24QsEP/MU2ti
SMNh/tSdhlnS0CxrKVc7Txrs9C9FVC2WBoPd3NDXVtIgH/fAN2+XNIx91fdM
OykN3yVeOibGSEOcPMfH7K00eKjuPVM/Ig1aOsV3/NRkYMBILpNlI4P7iVfF
kyAZ8B82+21ZLgOyCO5Pi2RgbmrgLekpGdBReBExF7v8zGCYPtZiUPuEOdbW
xfOQDdbL8IfLQWyYlM26KGxs22ujDOwNB3vf/mkZeNc67MglsMFC2XTsBbbU
Puz6FiIbJtYdcT5CYcNSc0/VaDobvA23dGRIsqHeTLkrVY4Nlmtbep6osCFr
U3L/4wVsmOvsM/RAnw2C/RNjccCGryHhwlub2ZAezSFGe7Lh/KN7tMtH2eCe
p80Mv8CGK92rp6tS2bjvbBvifmFDv7Vf644RNgREfy7fjxV903l8DHtW8fy5
M1ima9veK9jrCcgqFvtQUyCVg81Oz/z8EVtm5BXdinUJitet5rFhrKz2XfEo
G6IYErtSx9igtcl8+vY4G7Q59tItYja4xhdbFhE5cGWRVlAMmQPl+dey/Kgc
GP9nqtOazgG3nV8dKFJ4PzC5rFCaAzo3g/V9ZTkQ/cwudiGXA8ShYm6NPgd8
l+hcC/yXA82Hb7E0dnLANot0seo4B0qHD1KORXNg2mhp1qksDpgd57ldquFA
0MsXkjeGOVAwfSzvHkcW+KtNPZOXyoJxuIidZScL5P3ftEmhslBtm7bGPk0W
4peddXn0Qxb2q7j6j9HkYAXJKHKtkRzQuqSSYtzl4FtV26uuKDlIzHlZv6JI
DvS+zmlsb5aDauej8TI9cnCk5fMOU54ccL0Wqu8WycG9HmqQ6bQchFM+Od/G
+sy9ZjKOdTBxUnAQy8GhhwE7dmEvSl9P9sO+aq9aHo3lFTLeP8NqRVs4fcae
0SckNGJ/VxZ19GHDDivh56YchJSC44yB7H2nZvTLzP02435bqvYUdteQ/ckZ
N1/+c3XG1ZonHs2o5hpfOeN0dPnIjI3vupSmsRGtroliLCjmZMw4ai1RNKNb
wYvvM77V8BieUXZH4+iMO+44CWYUsDaJZ1zw3O+vdttu/fUkofCvKUmNf63b
OPOjJQ96d9b9Nbzjyl8bl9b/1UbvPnnGV1petBkXaxhIzBgzLrVgRvH7Dphx
T2yJ64xHalcfIWJDpd5cJGEjLNbiAvIg5e96Whp78ZGfhxKWUXfBQgN7jpqg
sRh7rCd4MBa778u2QgZRHpyfm4QHYK3ucG1bsdmXyszm0eRhdvABbQ9JeTjj
o8B9IC0Pfdtfk1pl5cHB1mdQXUEevF7N1k9cLQ8huu8PqB2Qh+t3A1ITbsnD
E8b8nrll8lB8tForvlcevraf3DuHOwu+3DHU4LjNgkqb7mbKo1nwnpxwT9Az
C97kO2zrW8qFMh9JhebjXCieV1pbW8KFwvqAq+9oClD+aP2PThcFqPJVncfI
UoDv5qPeWjRFaJb6kLPORRGGwtudH6Urwv9+CZXg/wCgyUK1
             "], {Developer`PackedArrayForm, CompressedData["
1:eJwd1QFHIAASBtBur0uSJEmSdEmSJEmykiRJkiRJkiRJ0iVJkqykS5IkSZIk
SZIkSZIkSZIkSZIkSZIkSZJ7e8MzP+D7xvy7/j/lrf8ICAj476+A/8/fFUgQ
wYQQShjhRBBJFNHEEEsc8SSQSBLJpJBKGulkkEkW2fwmh1zyyKeAQooopoRS
yiingkqqqKaGWuqop4FGmmimhVbaaKeDTrropode/tBHPwMMMsQwI4wyxjgT
TDLFNDPMMsc8CyyyxDIrrLLGOhtsssU2O+yyxz4HHHLEMSeccsY5F1xyxTU3
3HLHPQ888sQzL7zyxjsffPLFNz8EKMIvAgkimBBCCSOcCCKJIpoYYokjngQS
SSKZFFJJI50MMskim9/kkEse+RRQSBHFlFBKGeVUUEkV1dRQSx31NNBIE820
8LfkbbTTQSdddNNDL3/oo58BBhlimBFGGWOcCSaZYpoZZpljngUWWWKZFVZZ
Y50NNtlimx122WOfAw454pgTTjnjnAsuueKaG265454HHnnimRdeeeOdDz75
4psf/h7/LwIJIpgQQgkjnAgiiSKaGGKJI54EEkkimRRSSSOdDDLJIpvf5JBL
HvkUUEgRxZRQShnlVFBJFdXUUEsd9TTQSBPNtNBKG+100EkX3fTQyx/66GeA
QYYYZoRRxhhngkmmmGaGWeaYZ4FFllhmhVXWWGeDTbbYZodd9tjngEOOOOaE
U84454JLrrjmhlvuuOeBR5545oVX3njng0+++OaHgH/Kn0CCCCaEUMIIJ4JI
oogmhljiiCeBRJJIJoVU0kgng0yyyOY3OeSSRz4FFFJEMSWUUkY5FVRSRTU1
1FJHPQ000kQzLbTSRjsddNJFNz308oc++hlgkCGGGWGUMcaZYJIppplhljnm
WWCRJZZZYZU11tlgky222WGXPfY54JAjjjnhlDPOueCSK6654ZY77nngkSee
eeGVN9754JMvvvnh7+P/RSBBBBNCKGGEE0EkUUQTQyxxxJNAIkkkk0IqaaST
QSZZZPObHHLJI58CCimimBJKKaOcCiqpopoaaqmjngYaaaKZFlppo50OOumi
mx56+UMf/QwwyBDDjDDKGONMMMkU08wwyxzzLLDIEsussMoa62ywyRbb7LDL
HvsccMgRx5xwyhnnXHDJFdfccMsd9zzwyBPPvPDKG+988MkX3/wQ8C/5E0gQ
wYQQyv8AsPhFGQ==
              "], CompressedData["
1:eJxl13c81d//AHDSMqKkosgoKw2JpOElEpJNiPqgZBUqIiOloiQqo6my9woh
49h7ZbvXuO51l71SSL7H79/f/e/5OOe8z+txzrmv8zqiNi6GtqwsLCxcG1j+
30/VzPrngSYVZf8zFsuSv8QgIV8+dpOcufJhjgAhxrwcHOf40PDamqjMw3vy
J9sBT2ih158YZl1SvmO7r/hVQCDsbDM7u6mICzQXA2iS916D+qqon3PUIbD8
7olqEqKhP+lfzv2KM5AS8uXznakkuH6X8wQPTRPuu1q/mNyWBfT5ezNm+Yaw
wPs89G90DqheEeVhPXkZZCSO3BiQzIewHWn/sd27AQvm9mjdjlJQrtV33r3n
NmiMbXCJulkB9vcuy7+X9AS241VfFX5Ug/YjwwdxBx8CcSS4W2WuDuw+ae+5
3/kE1IuruX7saoKsZekvP+6HwsbfyiyBq20w/Lf54DfOSHg1zK/K1dQB2ckS
pmZaURDbLxQUcbsbRl3MdCE3BjZU2c/aTPfC077Z1oVDiYAKOe82aBLh573b
TzU40+BRGyXuuPcAiLt9T7L/lg2Zi8mHp/aTQO738VG7rDxIva/5ccJ+GA6n
iTmY/C4E1YM77vsGkeE57V6YsF8pgPHmsdggCjjPlogvfykHA7GdI48cRyBJ
Jfa9lEAV9GRaOBrIUCHotlwWk68WbOI/qbvTqKA0d+0WU7IBGuaq/d29aTDl
p2exWacZsq1Ez0WN02D8+ntHQ91mSL/1WLkKmyLN5/NJrxnyNl87Nobd9ACF
0vSbwS4rR4x3ggax2z/Gyxo2w7MQdy4l7BvvEkq8jJqB0JQ0/R929bDgLPel
ZlAMnE1Pxx5w1D8Sa9YMzk3rTJax23OU3RUtmkFXiEjVnKTB8T9h3Ovdm2Hn
O+t67Rka7Mjk39gZ0gw/ezPWn5/H850VMkxMaobuF72fFH/TwMNjguFb0Qzn
HyxFiizRoK3M5l1wdQsc25jfcn0HHZ59M7hbVN8K5JKPRtaH6PBE4BnbXbs2
+Coeq3pAlQ4dlWNWbqN4X+MdqzuM6JAuGuXVdusn+CcMs9+xocOMi3a2YX87
WGzmG0fedNje4X6pQLsTAndfWmzzw+2VG/QqfnQBj6DleW1XOpzcdotxQaoH
fpS8uVanS4cGs5Lf58J6oU5HSvenIB0k9xcU/Fjqg9KGmkoCkQYNSXH+9st9
wMcML87HPtkSoL3zbx/IaLvnhGOvel/dXoU97S6UeBs76r0M4fZKHxx49fKt
LvZn7skvwv/64EtZ9RMZbM97V6S9V/vgYkWNGZVAA2nP6IxuFgJUSDKFv2Bz
6RcekVtHAH29wwQzbN+iAOMqHgI8i7py9W0PDYS3NXQaCxFA1tB0uK2TBuH9
IemUAwTIJTfabWjH4y+QiK4nCKDDcWtBvpUGoTac0lnYI9LnqiSxYwnb7k1h
b1PJfL0be3f2XMVhJQLw6GRc3YJdP5LF44xdZHhWhgX7iZuWZTr2jKH979kW
GvzQOvpL5iQB2HUHQ3qxK58GvEzB3qUSt78U+6ywlrj0Kdxf6UdBLHaeyeW5
3SoEuCbduf9jM16P7OVALnUCCHR4MF430aBkbjNlRYsAvqH/1j9rpEH+9qvr
p3QJ8G/iso9vAz6vRt/M+V0I0Hj/0PqEShrwi/TMKoYSIN/rplNOMQ12jScl
62QSgG3s80R8Hg2m2UZEwjcS4T+T7Jcj0TTwev6A/eUVIjhObYuzfkkDvzMN
IQq5RBg5VvtZ1JMGJM4Tw0Ec/RB3PbxfyoYGAX+dWI5+7wc7Ha09e+WxDzUd
cbQagHeiygo2bDTgKRs8KsY+CIiicoSvjQoWbl9T1bMGId+FZmrwgQrtCYS9
FSZDYGW+qqRgQ4W95NjzZhdJ8PT6+H2H8REwm3PYeGiUBA8UrOW9nUfgg0fs
m31PhsFFAow3MCmwiWX93fW7yUApGDny3JICDMF1Xuewiza09V7A3sUl9/AJ
dvNK0UMu7Pv1YU+rsOXsHCVbLCgwry8ZtH4PGey0iE2h2C6fx1+ew6amct82
wD5SQgirwiYFLn3vvEwBwY7QyHOCZJD2mv5tim2POCOrsC3bpo8RzSkQ8chv
qFKUDHOfrb2XjCnQlrGNVi5BhlMfhzt26eP8xqWWXCpDBo8WE+Vj2hT4yhsu
9UOWDEMCMUUXz1Og9UyEsIYNGe5wzTmS+ShQLEItEblJhmLZnxFMDjyeQ/zY
L3cy/Ck1M2ayUOBxX6B3lR8ZuCih9cMLZMh6oR0W8pwMx/YJ/24fJwNZd1Z0
exQZ+LWkQ7/0kmHGT6rcP4sMT1dIanpVZGCNkTAaqCSDho3lSXImGc5YXfgh
1kOGzQauEWYfyWChM/ggUBGv48HthKCjZHjxRjT2RwRep3OUU5NVOJ/fOfo8
fYYCGrcdfIJMhsE9NiXNQHsEvux/oGtDIYG7dU3Qu5gRaJ5z8LnrTALR/KJo
qaNUmFoYSORTGwL9gK+b7xVQId+NqPnx3QCwOw3yK5yggQq7SsePfiLkaPDc
/A+bYPRmuwj2yj/j0ufYAmQn7adEIsS+zOTJxf62KPxolECEa9N7rQaxL4Zm
5OphL+2LzdysRIOXb3fRcvuIYCjRdfEKtqHT53N+vUSYNLhMy8Z+fDbkg1YP
EfKC5Xw2nqSBaD+Nvr2bCI0H7IKNztCg7M0bvsV6Igysizr4RYUGxUnRI4QS
IoxpOFsy1WiwfDfzUmE2EfQi3PbIadAghdXYITyeCCm3o1YK7fA9NHjLwV6G
iO/ZG8IHnGnQYrDpUBsvEY6FLtqHu9FgPv6I5IElAriZcPf88aLBdujUvjdM
gIM7LW6YPqKB5K3ykNw6AiTT9y8NP8bf/24cV19KgCCFyk9OATQImlpJ6M/F
eSSCTXf+Gc5zF9IjJ1IIQFYOJK4LoUFhcsAJ9rcE8D8gH70ljAZ6bWr+go8J
EDB2N4rvHQ1yQ/KcJHHeuBVZaSdUgO9Jk+7qmok+0HKXZA/EedRsR80uFqc+
ONpVVKe3QIOvGf/xNtB6YcNekSF3PnzPiIfM7rbuhZ3y6dPNWtg+575qOPTA
XtW02QUfOkwt/j5w4GY3RBsW1Y2k04F35hP7A4cuuBBUVxzUTweydkvjslUn
9OZcdyduZgD3XaKVuWEHBLEssMobMsDIc0v+kys/oTcoIiskjAG7wyQ8U+Ja
wHhG+FVIEwMoYhdDV680QOSlQKuJcQbsk5pRVPKuhXTWe7N/sP0iPR4JetVC
0uXex+snGLBcqVa76lkLzP8y+LZi91hVslM8aqGV50/cHuzL/y1o1tyrhR/2
efKS2I3Z/U+S3WvB1GGXkTK2YRfPgsvdWtjAquligt3pxXP5+O1aQGIaz29i
62sTs/4614LboTA+o0kGpLobKhea1cLeReOqE1MMEJzOinZVrYWEJvN3QtMM
WGzS7hM7WAsiSc6vWGcY0BZyj9K6oxaEwmKC+LF94ijKIdtrIe38W/8j2OK8
NcEXt9WCft5Fz/PYjGTBZg6eWnjxs8LpCnbpEm21jqsWSC8XLd2wY8P2iwdy
4PhkGCdjsO+se2rMtrEWuAZ7edqwS6ZTdfxYa6H+RCNxBdshLHLr8t8aGOvT
GKmeY0C+ICW8urUGrv7OsQv6xYChw/n1PjE1sOPb2+vav/H6ZW4+K+peAw9t
ffs2L+L1Xk9t/aZRA9e/jzBT2ZnAdUrx11nfKsgUMLSi8zNB4bDqxz2pFfCb
20UkT4IJ14QNNs+1lcH8GaGf3MeYYLkU6jHfXwKrZAGRXGBC9u2okTuXCnG9
c1D47AUmHNikwrExPxecC/ZIpxgyQf1jw/nLy5ngP8QuTjFjwjEh19QuwwRo
bNcMGLLE/T+8XCdIfQdDAxRV16tM2Pq0gu9s5UN01zO8OtGcCfOBEuZ89+JR
9jBhu6YuEzgnOfilv+WgPGu13K2nmbD9A9/tIZYSZJbrzYnEmHBam2cbybgS
3VbYJJaHnWd0+m/IpUok1pWnmIp9yfHX2BmzSpT0KvBiNDa5ZvvwuHklUrb1
sXqL/fb2W+JHi0okoh9+9yV29p2HxAtXKtGvixzv7mPbnRSiJVlVImIwV6Et
9nlu/Y2brleirMUP3QbYszwCp23tKlHDheMqQaJMaBm8tbjreSUyzzqmXy7C
hA81TyU6UirRww1nNv4WZsIjF4uqyKZKtActW8tgh1nSO2wmK1Hctfzz4zvx
/kQncR9WrUbKz/aY12E/uzY01axRjbq1WGzisBuOndnqrFONMlVsrR9i98Rz
OXMbVSPODRdMLbGVL+myZ5pVo4NHMtROYDeT1pH1rlYjTz839ukdTMjyMuJ+
41CNiqQUkhOxXa8/lu1yq0bF4+Ni/2GrV7zRFHhYjeT6PfIe8TKhS5Jl6+/p
ajRaHXQ1gocJV2l9v+RtalBUxJNtH7iYQDIOYO/oqEEr1bnlofh8nQkPMvup
Xou03FSPauLz+feJOlc6XwNyenOxNHWQAVdLE5gSs01I5r89dhnVDDDRc5s7
PtiKDpUMKJxLYcDWnenXrt/8iS5nN16wDmYAq/gfz4HpdtSzz/LfX20G2IlO
J4VMdCFtz1NCG9fh/2PggZ82bH1oqHfR9UgGHY46BbxmO9qP/GnwUVYf5zvr
VuN0tyF0wyb8cS0d171hyl58N4aR5pezjYU439uF2+y9tpuC7rFU63cvUMH+
wzHltK4R5Hw/wSoRW4xilaDdPYK8u0VcPLGNJEO3jWGL7pT30cKmrNr6BvWM
INpxUuBu7D8mVKZ07wjSURR/M/aLCoW8W0zrsR3nSbEvsTfuSJfbTBhBJ/ez
ZB1Za++f2KpBxON/+H//OU+FnvSWmaf9I+hrx0TF/hkq+P67emGZMYIkXJai
3CeocFrDMuH2rxHUbeytUcWkwtDk0jomKxWd/aCGtuJ3GG3V4Yo1NxXZ+3DX
rFCp4MgYPhGNHdf5pWkU+/Gju3zD2IMxv9t7sFUb9k6L8FDRKm1HXxX2wXJK
oxX21NelwWzsuusViV+xVVgMRl9g01ly/hPZSkW7jpfP22L3n+Xg/4pddFb7
H2C77alrE95GRU5Vpw5WUajQGOMlKbSTikJEgEWTTAVXvT2Vu/dQkZeCvlcj
iQrgEpjML0JFacjhg+4QFYKtA/p2ilORvGC3/2Vcpz7o/2TCZ0pFW0LLZNXK
qfDJbd+bQ8+p6HPM9KvN36hgdi0qzrqIisTVu1+lxFDhjdjnqMwJKmI/yS7x
/DIVpFqKa2S7aMg22qLZi4cKBiGhfRaldFSQUdDuVT4CyoeVX9YlMdBSNDfh
qSuua3MEAzaFM5FNkdDSe8ERMIzhLovxG0Wl8dey2FMpMHq+8CXKHkPtsx29
nvIUuGWuovmMPI66t4fdnSrA9W1EnmTH1knEErLpttcJMuizrgu+dWoKfXX6
2CGTMwzTdVLkUNlpVBqXXrRbehhqO1NfmJVNI5vWo+X8jiQgO0e3Ld6fQe/b
1v81Oj8EvlH/pgtkZhEf7Zi/RfIAHFOb09LqnEUKrdKFr5MGYL8AZ+db7Mor
3eO1iQMg411qSsO+lqok9C9hAFhPbOmT75pFRT+NLshj75L9bfoY++7ofjfH
+AEYVvPp/In9+5hCeXfsACicK65z7p5FBnxirGoxA3Bpj10OZ88sGjMbP5b5
dQBGx7zDk7Blbbdepb0aACOjM3q1A7OoZ1bSkf/RAJDPS2mQKTgebVML9dsD
4Fnt4rnInEVL5+vlb1kPQMxBzSGu6VkUuiHOklaO3y+X3MqXZObQ5lDHV2+x
BXZtbdl1cA6xFRVWamIf51vplcfe++L1wmJZPyxOPKUYYM+yzEqlYi/FpEw4
YwvtJV62xG476vT7BbZJSmlJKeqHqX/7OGqwK0hVe0WxnYQv7mE5NIdUWyZ8
H5f2w/JzyoGT2ESlTa2XC/rBXzbd9cGROWSWTbc9+q0ftK4jgYqjc4jbrFx1
U1o/pEZPim+Qn0PsETW2/fH9YGPBE6FxfA45qbet22zfD+pssuylF+dQTC0L
ZUy6HypqfG4u2MwhWlhyy7MxIlytrxGa9pxDu7/wvRpKI8Jf/guPUkLmkO95
z7npW0QI5K9kEY+bQ8GGDxmp031wCMXt5heeR1sseYuCHHvhXqVnXsqrecRa
M3jqXH838J64af7qzzzqpM7Nh53vAh913fK3l36hz69B4kRKB3h+FvVJTvmF
vvN+YExtagf9ln3T1fO/UKKa5xsT6Tao110c/Xh6AR21X2JaBDXBnNKnR3ye
CyiCe2YnW2EdbFRk+/kwcQHpKCy5xJCqwPqLwn7VRtz+ce7yAbZyCJ3Qs62k
LKArUtXpiqzlsPK8fqYJWzKvZvXcahls4Z3y7cYO8f2jb7hSBsE7zTaRsI+U
XI7+b7kMnsWvD2FiJ2ROTN9cLAOO5vltc9iut91DAn+VgZqHJd/GkQV0nVgu
FTNTBvJm7ZwC2AYNnah4Ao8XMv0jg/2ps26huqYMdDX5+2nYtwT15pq/lMHF
9aHeUdQFFPkyurjTswwq17v26tEWEKL/MycYlMEL9tvzK9hM1nN+WW9LIEBV
KIw8voBKuYMl3i8XQ07A5NjAxAJaEB7zteovhtEr12W5JxeQgMfmcMmSYqjA
l+MZbI3iQYfJqGKgnzj54SY2o+YM18jtYpgeHjmfjn3q4NyxPvViGN7SbTqO
XbF9x0izQDEcPxvbLD21gJQ9lhLVrX/Ajn9jISdmFpDFHib1Y1IBHAnddix5
dgEd7hEw65/6DgKcB9gezC0g/+T173kV8+CgZax+Ifa41tC7F/7Z8PLKDYNT
uH+gd4PL7KdUePvvzCg/nu/SyurVl8fjYLrQ958DfQFV60lV34p/D62VoXbn
BxfQdP/D8N66pxDAF9xY3b6AWgd6fERdAtGOkoOvvxUvoL83j9eECEWj9yta
e8KiF9Csm5dapn4aGvZQmsp9tIBCw/7EuRbmIItst2dWV3D8gRKuqyqFaGi2
IblXfgGJPN3SzlJaihTPv2w137yABgcOK/geqURlTKmkyMpf6MMr1hfX52pQ
UWNm+LjHL/TIiUMgOLkBdV/OUawS/4Ukq9HwrQ/NqDBcafzs0DwSPOdk9vpj
M/qdtidbHFvZNrg591Mz0h4MvMuObSuy72xvVDPyj76qMDE4j5xuHclZ/tyM
PP98WWjDPnAue5/w12bETtXOz8Vumv/CeiOmGU1Oeir6YAu9uN6XFteMqFr6
eWrYzOp/KXMJzaiIq12WE7s2LTfwe0kzUnMKftxFnEeNjdVL9zqb0VPRXROf
++bR/VF5NoUx3O6YesuuZx5FrrJ9nWZtQWEW/huOdM0jsS9Vb6yOtKDo3pdu
RW14Po+5hhrLFvTkt57YuaZ5pHFVS2VfUAvSXv6xXFc7j+5q3Rx1z29Br5ZK
NlyonEc/+ceKVra1IkPliFyVH/PoS+mJlSs3W9FhlZMqUtnzyLXC6WZkTSvi
SB4sZEmaR2zJs9eMtrYhrpPP5Bo+zyP18zL0S3I/0cUNfuJJ1vPo9RaRTIZ+
O4rSuPtyn9g8ontd8KA7daCUzk3zF0lzKOFD84Dc406UocptJv9pDt0107VO
jexCy3XWtkyTOVQ5xZuaKtuDZG+3yevRZ1HLAf4MhfJeZOw8bMTmNossn/gK
0DUIiMfclVP57ww6HL31lk0VEYHHK5rSwxkkv5Qvo3d8AH0HvwPyLDOIlfMn
/+WoQXRv74X5mz7TSGyv5jUdURLS2iWZJZc5hRR5Y6/EYTuojBXGZ0whsXXe
l5axz3L1l/FjmzBbdQzFSOjzm301L9KnEFRGqyVj69LK6/+lTSGDF9OKLPtI
SGh3fuNt7OTJQKEMbDsvvSbT1Cl0kMa7YrGfhLrm1WrOpEwhe53X3eziJGQi
E1G4L3kKlVVnbu6QIaEG8YMtQp+nkNkmrYH3ciQU1PpUZ0fYFLq9o83oqhIJ
6RiPK3E8m0JPCflOIioktPNBWsRfnyl0a1tBiNxjEmJ//Y6XuWUKRV0TmvZ7
RUIhco67wn9Pohou3qLKKDy/cpWBwvAkOhV/Y2wlBX//yanOpoZJlHZ5ve/h
AhL6QN+5xSJ3ErmL8t80qSYh6Za2BlLUJPpctS3vTjsJoZc8elcDJ5GHwC3j
gCESSt98J6rDdRJZD5x79mqRhGTPSTfGq02iBZ6asbvbh5FZeEuh6c5JVH/i
zjXZQ8OI+vBgK5MxgeyOi3VWnx9Ghan8ty2LJtCn1/6pWZRhdF7N1nvzx3H0
UDT08UMvMvK9c03a8N4YmmlX7drLSUGLj6QiP+mMIqVHzgc8IiioJJLTWVuU
iaQe6kl6COA6lgOeVMzQEXPfC8KBzBHku7TX3MGfhhYiXhWFnaIijdkR52Rc
f46bwEJUKRV9bxDUlfpAQXckp9uVTtDQ31mzsQAxMlrnax1pkURDiZv3DFgl
k9D81Yvxwdg/i16o5yaR0AvWU99KsJ9kDWdswta8fqhkEnvck4vfIpGE0gL2
1Qgn0xCrGNejjAQSOmEv1KyPXVpAYrJiJyTx93zDdmMcK0qKI6HyYbE+vhQa
uq1NfKEXS0KRPKc77mHLaPdYLESTULyEE0Uzg4ZG2eVNvcJJyGmHdd+ubzTU
tPHKtn8BJPRRgCePkkdD/2pGXjy6T0L/Sm7cSyukodclV+vW3ySh9fpDen2D
NJTXQjSQaxhCAonE1NZ1dMTxYWhZsXgQkWuX7EPF6ai4bWOgRMYA2jB44y6/
Bh3dy7UtYP/ajyolSqsc7eioROeH2MRrIhJOIMW247rXWS5Va8S3FzGGa97S
OBnozNJMkJ5TF4o3LDqVrstA11IqvslbtOO8wgiUDWSg1dmuc4JRLei9gH2q
bx4DSed3jbwNrkOOX/rG4voYSCRw1+mUgAoUN1Hbr8rCRN6GXBJ8n7KQRM1d
gYvYbZcisk+HZ6FwiXIDE+yy2GZ52+AspLUz6+lVbI6YE9Uvn2Shz59U8uyw
K7V7bL77ZKGZsjskV+yVDylbhtyy0AXj3YcfY+fcKfGVtc1C3h80HSOwGxmp
Yv4mWci1ZSU8EduQ68HfDvUspP9Mxc+clYnCwi5X7TPMRK9B8e36dUz0pOz3
/nr+DJRkWD+QhD2tFGr6bigN3XciGZ1nYyLjuG3vXyekIge/mdmFTUy0df/M
uV1jn5FQnIz8Og4mknR+01CR6YWs1ZJWnNiZqIOk9sXT+TXsU7KwP7GRibpL
Iy9IZsfB07obZU44HikbJOCinQUekzoeb8cZ6NKvXezDurgOKCq7L9PCQPG2
XmGK26ogy3Rwq3E8Awl1pI7zD9dD5G4X1rN3GIhD8ayPYEQrdJFdIsQVGOje
pZKh6Ih2WOl5s7xpnI7Sh3brZl/vgm1bV2qoY3R0RFe2lm7bBV1sHq8qsZ+e
Zjm1164LGgpYzKKxzTX+SzW27wIX+Q9CftgGl3T4Xzh0gbqP2rAl9haDhkfl
jl1wKTPvOj/2fOewzuFbXXAM7Egdo3SktF2e66NLF5BNzYxDsVW0yoo33emC
vQUhR0l0OpLp5EhTC+qC0B/Gmw9T6aiVnnXcK6YL5FUv9XmS6ahFsMg89UcX
3NRSiS8boiO60mHenvYuyHlANG9upiMn2agRA5duqI/097UooqOeDv8WOkcP
2O4faHBKwvH5NW6NjO+Bv61HV/+F01G80g4Zc+iF3ax1otk36cjPXldyq2sf
cHLZbvRUpaOEK+vZZz4RwF9QdMV8Jx25neN7O1RNBIqZypMrDBqSV+4RRqP9
EFuYxiocRkM2sV84xCmD8GMoYcgE5xdxc9Iqmx0JXFQE30j3UtHEneNq1ibD
MDLab1V5h4piNr1oMDlNhp8V9b66m6mo5KHgxRd7KGAVxTd01XQERYxrq792
GIELric9PMsoKPxPZoSNHRWyhXkrdLD72M7WJWCXlFpz7cNOZGxfGsVO1pO+
9AdR0Pbk+gNH7KmQ3mn/pRlb+qzN5bvYbPoijBjs32kDz/KxqxT9PHWwJUQ+
UMABv4M5Sjf+KaUg07xhpTrsE4T+NzHYRbq5L/QdqWBxEt5qF1HQyZTsuhgX
KszuvVU7l09BmT1RGnNuVOD+kbrvYy4FcVxVZlf1okKWlUra2WwKOhQfxx3q
RwWlO165Hl8p6NwKr/nceyqsW+BSfh9KQavWJcsyuVSoLuZ1SnhAQde9qQUn
WqhwqFuU10iHgpIjV02v8dPAYV9q6eU9FPSUmD/Ab00DsuSP7DIGGTFPMvyM
kmjwBmmoP8sjo6plE6stkzTg7phc0NIho8xfNYp0NzqslISnFZGH0a70z7/u
/aLDBu1D/Evuw6g9RXEx2IUBRmPeJWKbcHtXY+QimQFbjpN+G0WSkEJFmOxL
PSbk1an/MLAbQl86wss5t45CyGRaUlbEAJKMvK7AkzsKbr86FGoLiYjaf7D5
9Mkx8JF+5ymOPWnr23wdez/F+cfjAiKa8F6oDca+oWi2PJxPRKLO9NJc7DOn
jE+pYC8d0f/Wjx3Pds3r83ciGsuVjVl/agxCNBIWLucRkZ7wsJcx9nt1BZdd
uURUMOuiHoedGr91pOMbEen09LPOYzs9e5d8JIGIdu73M+aGMfC2alx9/p6I
vl04IrJPdQyOuCgyycFE1KRld01OfQzA3tn+5EMc/6avgqc1x8Bkj12NOSsR
TZ1Uuu5kOwaUR4R0Jp2A0kXGvP85jsFKuOZdtxYC+iVI7PFyHYOAe+0yS7kE
9Himx5nkPgZucl/GvT4S0AXNjcePeI9B8Z0e4i17AtLlZEo+ezoGTY1zozoK
BJQVxDR6GjoGovYxVXvWEdBHs4vWEu/HYIetAl9vSx+ixEn8cYwZg0HJRfkK
z17kJMGg5XePQame9uwLkR4UwrF1MX5pDFxsbG6w1nahnMqnfMQt4+DG/NI6
e7MTyfKvX123dRyEG7ovy2/vQKxHq9RbWcaBmrFej2n0E91UnC1Jax+D/540
nKXLtqLTIzULRwPGIOfM8jHv6kbU8o1zpG/3GLzIjVq541CHlO3CP8q8GgWF
SqkP5SLViJp/3KOAyoSE8lBju6lyZHgwnm33HiaY9r3m23i8CBXHmGZ3V9Hh
71fexF28OYi60SrI+SANNI6rzCntSESu7dJuvfojsGdETVZl8A26up4vY1GW
DFvmHe/mj7qBm32r5oG3Q/AmMVhkpPg9/Pm5Ps9NmQBXzpTutxSNh2/L3loO
xp0wTm/5M3E0FTIytK9OJDcC+02n4A7zDDAnNYx8O4ff0Z4BBMvhDJiNWdxs
HPkD+H//VLXVyYSjLOOuO5/nAmeCn5lbVCacH1VUnqlIAxu5XabbUjKhteKO
tPH5FPi6FMnvlpYJtz1iRMtqksG1eJ9kY0YmeGxI0dipkQzaOiUPd2ZnwjuW
kveXapPAxsiP6Ib98dMOxWffkiB4RwWtHXvc8bxKYVQS0OPPXQ35lgkjTYYH
drslwR/3greaOZkQr5de6XkhCdo7OcNYczOBo1Sdq0skCaKTLztcwf6vfonB
xpUEE2SJ6QLsl6Vvjsr9ToStR4+J8+VlQuelQXsrciIkPBkR2YH91v7GvAR2
mVeY4E7sXaqjfhPDibCSOr6dH9tSnBnpha1ld5pzN7aMQ3f6JuzYNP91gti+
W75VhZMSoY3bzGPN8lJKu7yw704eHF9zmR5y+A87PqmrSwg7qKCe+wB2lpkP
2oudZdyWMz+UCOH/RJKFsY/t7zBD2F0XhOulsOU09zYkDyTCic5sfmls3TmP
T2+xV0XO2a85+tBP56fYRmftNx3A9inz326NrejyImHNJaFyBaexHwTqF63Z
85DzoiJ23McdbWt+Upl88hh2etGXxTUfJ4mUSGMrObotrVkq6Xnwmqv4tZbX
vN111mLNOrVCf9f8V9FCZs2d7rP/Z8pq5ZIUtsX+2pU1i9m+Zltrd3rkurrm
50cO7lizz6AAqww2x1KNxJpDT1WuW7NPlfWJNQcPWm1f8520W4w1r/f/t2/N
rmH33x3AXhD/JL9mr/tPNWWwKxKrCGv+q/JXSg7b1Xzi4UHsW0l32JXW1uvk
TslD2C2ZDCZgcxsXxh3DXjZxzXiCLSfqInYSu9i9/U49tlWM4lcVbHEeHkXu
wURoNdoW8mgtvtNX+krw/ikdUnpcsRbfGbZbtyiJMLox04/teyYwdVhnBWmJ
sKnwzuNz2PoFpvZNjEQQnso42VaQCU7jE8OxbEnQ/yCp8WpRJgi0Hop135sE
f8mVCtMlmbDffV/6WaUkYM2x9XxSlgm5JQSWzcZJIKpmyTtGyIQNbCfXh1xN
BoaGapLTQibcO3JBf+BGCgyX7Jh5xJ4FsvG7JxdvpsLUKfnvZvxZsKWwc5Du
mgYHvaqWCySzYFW5YE/qnXTI4+qd3jKYBaFsLNVKz3KAzBL/6Ep1NqgfPmNP
ns0Hb8rq89i+byBBY3hKsBRDgYIaTXRXLiClRlHL7whUxVk1LLzyYOHHn+fZ
L8shqT7gPjdLPqhavhU13V0JrJKR/JdaC6FYtOLKqk01NHaZHHRmFkOXbOa7
SqNaGM9et9tRtAxevtYo3LNQB8d55DmjGeWQUDKt52LYAAKupQ+rqyshd9aK
94RrI9yr09Qoza2GHAOuVaFLTXCGIyx7OLsWTL8YOGzlaIaDKxuUe8QaQOht
Y4B7YjMUVvv8fPC5CXqKlLRiuVpA9/wK232RVpDm4pRPV2kBk+3pP+63t4F9
09eBaq0WsPIvMyWwt8P7D7Lj7YdbICrh8efH0AHB9bpyAr+a4X+aWJXL
              "]}, {Automatic}][$CellContext`t$$], 0}]}}, PlotRange -> 2, 
        ImageSize -> 280, Frame -> True, Axes -> True, AxesStyle -> 
        Dashing[{Small, Small}], PlotLabel -> 
        "t" == NumberForm[$CellContext`t$$, {4, 2}]], 
      "Specifications" :> {{$CellContext`t$$, 0, 6.25, DefaultDuration -> 5, 
         AnimationRunning -> False, AnimationRepetitions -> 1, 
         AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
        "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
        True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{330., {181.13403309800196`, 186.86596690199804`}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.866665403734251*^9, 3.8666656180797677`*^9},
 CellLabel->
  "Out[783]=",ExpressionUUID->"42a70722-2679-4446-97fd-44d919b6162b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<anim1.swf\>\"", ",", "anim"}], "]"}]], "Input",
 CellChangeTimes->{{3.866665548419026*^9, 3.866665553344452*^9}, {
  3.8666655972944098`*^9, 3.8666656126215134`*^9}},
 CellLabel->
  "In[784]:=",ExpressionUUID->"2bcea045-de16-4714-a162-cf2dd2432fb7"],

Cell[BoxData["\<\"anim1.swf\"\>"], "Output",
 CellChangeTimes->{3.8666656489708986`*^9},
 CellLabel->
  "Out[784]=",ExpressionUUID->"852e028c-065e-4820-8aa5-86715aa9711a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Import", "[", "\"\<\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.866665728281559*^9, 
  3.866665736062073*^9}},ExpressionUUID->"b3628257-2d5a-4de6-80ee-\
b0f4238b7453"],

Cell[CellGroupData[{

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"n", "=", "10"}], ";", 
   RowBox[{"\[Tau]", "=", "5"}], ";", 
   RowBox[{"\[Tau]1", "=", 
    RowBox[{"\[Tau]", "*", "1.25"}]}], ";", 
   RowBox[{"A", "=", "0.2"}], ";", 
   RowBox[{"order", " ", "=", " ", "4"}], ";", 
   RowBox[{"maxIter", " ", "=", " ", "100"}], ";", 
   RowBox[{"maxError", " ", "=", " ", "0.01"}], ";", 
   RowBox[{"uMax", " ", "=", " ", "5"}], ";", 
   RowBox[{"maxCount", " ", "=", " ", "5"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", "IC2"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"InitGuess", " ", "=", " ", "initGuess"}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"time", ",", 
       StyleBox[
        RowBox[{"{", 
         RowBox[{
         "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
          "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
          "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "Jff", ",", "K"}], "}"}],
        FontWeight->"Plain"]}], 
      StyleBox["}",
       FontWeight->"Plain"]}], 
     StyleBox["=",
      FontWeight->"Plain"], 
     StyleBox[
      RowBox[{"Timing", "[", 
       RowBox[{"ffCartPendulum", "[", 
        RowBox[{
        "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", 
         "order", ",", "maxIter", ",", "maxError", ",", "maxCount", ",", 
         "maxJ", ",", "InitGuess"}], "]"}], "]"}],
      FontWeight->"Plain"]}], ";"}], " "}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x1c", ",", "xdot1c", ",", "\[Theta]1c", ",", "\[Theta]dot1c", ",", 
      "u1c", ",", "J", ",", "error"}], "}"}], "=", 
    RowBox[{"testWithFBClipped", "[", 
     RowBox[{
     "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
      "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A", ",", "uMax", 
      ",", "K"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox["time",
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"p1a", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1a", "[", "t", "]"}], ",", 
        RowBox[{"u1a", "[", "t", "]"}], ",", 
        RowBox[{"x1a", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1a", "[", "t", "]"}], ",", 
        RowBox[{"xdot1a", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1a\>\"", ",", "\"\<u1a\>\"", ",", "\"\<x1a\>\"", ",", 
         "\"\<\[Theta]dot1a\>\"", ",", "\"\<xdot1a\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Feedforward solution\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"p1c", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1c", "[", "t", "]"}], ",", 
        RowBox[{"u1c", "[", "t", "]"}], ",", 
        RowBox[{"x1c", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1c", "[", "t", "]"}], ",", 
        RowBox[{"xdot1c", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1c\>\"", ",", "\"\<u1c\>\"", ",", "\"\<x1c\>\"", ",", 
         "\"\<\[Theta]dot1c\>\"", ",", "\"\<xdot1c\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<LQR feedback solution\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"Grid", "[", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"p1a", ",", "p1c"}], "}"}], "}"}], "]"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Tau]New", " ", "=", 
    RowBox[{"\[Tau]", "/", "3"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Init", " ", "=", " ", 
    RowBox[{
     RowBox[{"\[Theta]1c", "[", "\[Tau]New", "]"}], " ", "-", " ", 
     RowBox[{"Round", "[", 
      RowBox[{
       RowBox[{"\[Theta]1c", "[", "\[Tau]New", "]"}], ",", 
       RowBox[{"2", "*", "\[Pi]"}]}], "]"}]}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"IC2", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x1c", "[", "\[Tau]New", "]"}], ",", 
      RowBox[{"xdot1c", "[", "\[Tau]New", "]"}], ",", "\[Theta]Init", ",", 
      RowBox[{"\[Theta]dot1c", "[", "\[Tau]New", "]"}]}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"initGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Lambda]1ff0", "[", "\[Tau]New", "]"}], ",", 
      RowBox[{"\[Lambda]2ff0", "[", "\[Tau]New", "]"}], ",", 
      RowBox[{"\[Lambda]3ff0", "[", "\[Tau]New", "]"}], ",", 
      RowBox[{"\[Lambda]4ff0", "[", "\[Tau]New", "]"}]}], "}"}]}], ";"}],
  FontWeight->"Plain"]}], "Input",
 CellChangeTimes->{{3.866299214773159*^9, 3.8662992458810883`*^9}, {
   3.8662992798640895`*^9, 3.86629930973042*^9}, {3.866309891962967*^9, 
   3.866309895632778*^9}, 3.866311820264778*^9},
 CellLabel->
  "In[4206]:=",ExpressionUUID->"85bc551a-4b91-4c90-8cc6-0e1dfbbf40c4"],

Cell[BoxData[
 TemplateBox[{
  "FindRoot", "cvmit", 
   "\"Failed to converge to the requested accuracy or precision within \\!\\(\
\\*RowBox[{\\\"100\\\"}]\\) iterations.\"", 2, 4209, 487, 
   17543413912280077400, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.866311801189951*^9, 3.866311835095976*^9}},
 CellLabel->
  "During evaluation of \
In[4206]:=",ExpressionUUID->"141a4bbe-b075-4ab3-af0d-5b936eacb216"],

Cell[BoxData[
 TemplateBox[{
  "FindRoot", "lstol", 
   "\"The line search decreased the step size to within tolerance specified \
by AccuracyGoal and PrecisionGoal but was unable to find a sufficient \
decrease in the merit function. You may need more than \
\\!\\(\\*RowBox[{\\\"MachinePrecision\\\"}]\\) digits of working precision to \
meet these tolerances.\"", 2, 4209, 488, 17543413912280077400, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.866311801189951*^9, 3.8663118352059402`*^9}},
 CellLabel->
  "During evaluation of \
In[4206]:=",ExpressionUUID->"fdca1bba-02ae-46f4-a3cd-0b215f5e2dfd"],

Cell[BoxData["0.546875`"], "Output",
 CellChangeTimes->{{3.866299285262339*^9, 3.866299328491346*^9}, {
  3.8662993844302387`*^9, 3.8662993940861125`*^9}, {3.8662994510506735`*^9, 
  3.8662995142982006`*^9}, {3.8662995586928296`*^9, 3.86629956576654*^9}, {
  3.8663098995345144`*^9, 3.8663099077608514`*^9}, {3.8663118028724065`*^9, 
  3.8663118377961016`*^9}},
 CellLabel->
  "Out[4211]=",ExpressionUUID->"e8d3095b-0d6e-4a2e-8139-3e26da2476e3"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
u8kwlFMlIUwtH+zZZTdqd2ACrO/vOcdNzKeA+Vr9OjsyNIn5qOpKfF4eUUSy
nf4zf+fkrkt53JoAlo/410cT+lMhYPMqdW8yRNdjHTKJ802Vxu+eGsUU0LXl
1nJWYn40r6fnfYx+DYbTT9wFh6lgwd1SeiSfeD7e3ZEyIJ4PFrXL4185PoP6
jhp31dNUsKtfuXQdywRoSv6k/Jw4ryWKOj08PzYJFlZvGIvToiFhn4oVT16T
obXjtjglYjwwb1Y9wOjTcG5Gv1OVHKuWpYGwiAyz28R+/g6waBfmj4NVIVr2
xoQetbus+zXhVjzQubZx1QkbKuh2mZU8SCfDV6kGTjKEnmsLO33wMZwAsZ/v
jZ/6K184X7DK/gwZ9q8z7PNQyQfhvF4RjEAyfLsvlmZO3P8J1/sbDq75CDZa
g6YC4nzlMp30MpJGhrKy79vDifEQ1tvN/3PlBLixf5lDBaEffFmXvdL5QIav
43QfyRH3j/n3thMTtnEZzejyKO3D/qUZRL+Ewg+cowK3EPE7V+jjwGFLeCeV
0H+3R3wPvLVPBIraUaqahD5OHr4crGdOjNcUz/Z9xO+feacRXTH/Z74wP4+o
Ht2gI9bFrLfU3LUwLyDWyay33ATacuK725n1llmLgevW1jGY9ZauLadtG763
MestuTy1017M0Jn1lgUa7zVyT9GZ/HyHT813kYlWJj93n3b8rN3cyuTn146o
pJB46Ex+fn9PpoLSeTqTn0cJnKvNZ9CZ/PzSQAt1y4U2Jj9f/nQwZJkQg8nP
nZwEfvqGMpj83Hk616yCpZ3JzxWHNEweb2xn8vPy41028/LtCPPzQtecmNIu
BsL8fMV6/ncaVxkI83OD87evd5W2IczPZ31LuLp76Ajz89idBj83z7QiZr3l
xIub11J+IczPU/PucUzY/0CYn8tofkwdE/uOMD+/K24a7He1EWF+zvvF6/qX
2XqE+fmR47/frdKvRZif+5WSkjJiqxHm5xevmEx/vVnO5Of3J190nXGgMvl5
4q2xn9EDBUx+zipsWtcdksPk5+vYneMGrdKY/PxzY2zY9cPvmfzcImpxUHB5
JJOfcy2OmoDYACY/t7GN2noy3IXJz0d3N+5LlX29438LPz/n+f7k3eedCPNx
7tuWoyzGDHQsIWlxzbo2YOTWo/jAsg2RbjltHAKdYNbGnFspmo5cRw8LdZ3o
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
8cW5svJ4bM4EMIlwGVIivu8n7Vo/vmUSTAmFDXcR37+9t3xzm8QkEOPwHRwk
2m6v3aYzWyaAq2G2PYVo4/zAEQWu93O1B0DAyAoX7mOTIDV7i8xj4vP/lh+w
VCwyjn5LY+YHQIiWfXhELTM/YChgclmsppaZHyB7ocN09xpmfuA2Vcvadkk1
Mz8Q52Zz7/RoCTM/UH0/+xGPYD4zP5AiMfmC62YSMz+gMrHMQX3zXWa9t/Cz
0dCpa6nMeu89V5xPTFXlM+u911ZpDZ46Wsys9+69+si8jEpl1nu3Gjdv6dpT
xKz3vofeB0vO5DHrvY/TpL3cz6Ux6731pz9J89wNY9Z7u8jHW+rwRDLzA+Sr
rBEvfT4x8wM99LwMbakvzPyAP9+OoZ6dpcz8gCKp8fPGngpmfuAsh9OBtRnV
zPzAmY95QZTNNcz8gLzqsgpvrVpmfiC32WCHzkAtMz8QVhZjKmBZx8wPyIa/
zl0aWMfMD7Ao2GcOetUx8wNmlzN+n99Ux8wPyH33O8mSXsvMD6S/Ozva2l/D
zA+U+LV4co3TmPmBsh3PfpvkVzPzA422LscEd1cy8wOxo10a756WMfMDvakX
EieKipj5AeG9WYYrzP7kB3KMzyjQNf7kBzwWzOZiXv7vyQ/IKKq9qWitYeYH
AsovTZmM1TLfl/bS4qlK3sFa5vvSgnioIyRrGsD14Ms97E5/zSln5hOCLmU2
6o/HMuu7wVqxNy8Ss5n13d4Gp2J32xYy35+WemnN2VRfKvP9aQ4RtZMBjcXM
+u8DFTUJ2iZfmPXfz63QUDRHNrP+++IyaHk1K4FZ333S+rR1eCBivj9toTFf
vdy1mPn+NNLCBR+B9K/M96ex1xUddyysYr4/LYH9/3Ry5lE1fX8fL0Lde5s0
kEJKKQllSoa9Ec1JkmaheaCJJGOTSiqalEYpUkgjkXsb7r2VpnvPaRQizaGS
JOE51vqd/Vvru9Z3eZ7nz7vuWt3O2efsz2d/3u/3K0i2IoiD+Glb0t+1NDG5
iJ8m/9WtXSENA1r5baue8lDgiBB/mqs6DmY1VPn75lHh5KmsQm/ieVX6pB97
i0aDanxzIrnE83yW4pRuLy0IZ47L7mk8joPXnHe595YJwbsRp365zGKguHLl
ET95YSie65S7yRIDv0cTjwyKi0DLjgIFLX8ueGjUGGVyQwR6Zi1aeuE4B3zu
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
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{257, 1994, 194, 195, 196, 197, 198, 199, 200, 201,
                 202, 546, 436, 354, 295, 256, 233, 563, 453, 371, 312, 273, 
                584, 474, 392, 333, 203, 547, 437, 355, 612, 502, 296, 592, 
                482, 646, 400, 629, 519, 658}}], 
               PolygonBox[CompressedData["
1:eJwV0TtMU2EYxvHTJqRq2FBpRQZHwKBsSAImQCImuFQBHXDoYOIl1MRBMWGB
DiZAQqohMMjGxRYvqJuXWYQRHQTbRRYY8AKERePvG/75P+/zveeSc05lsumB
eBRFMeSxnIiiTyjIRSyiysKshctI4pfuG+r078w30YgEnuuP6ufkK0jht65Z
91l+gFas6+p17+VbOINDaNet8TAu4IW9Y7p5uQcn0G0u8Rj+OD9nXpEHcVv+
y224Km/xFDbsNZg/hB3ckA/4LNLyD37Eeb7Ph/Ek2NzBX3iERzjLMUygy9zP
OzzKT/khV2ISLz33OC/oh7iXM7zLNbgkl3kc9+SKcOaaFl4N98Id+R+fxzV5
m6fx3d5p88ewg6bwj8yb/BhH0Gn+yjnO8V2O46J8nX/yDF65V7X5mdyHk9jT
lbCE13iDpJ1C+Laoxb6ujLdIOSuGd8R/rmBK5A==
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1:eJwVzzsvw1EcxvFD6hILFdXZggQrA4MO7VBD6WKxELcYSAzYlEWQSETEYkHd
3gFeQaUbiUvCZDIoiaGLwec/fPN9fs+55JyOqaX8Ym0IoQbTKKLcEEIJ1/IV
XvGDpE15FNHq0KWuXu7DPO7QrX/Rf6PdPIYzxPUXuoy8gUekdHXcizncokv3
bN+QvIp7DOgqul35HSPmBI/iFC3mc+vHcgUT5nT0IY4+V5A3+YGHOcYH3IgV
7Ju3+CN6L/fwHld5hmd5nW+4k59cfchNWMORfps/eZwH+Q8L0f1c4BL385ez
MV7Gju4NWbmNfzEp5/gEzfI/s58yNw==
                "]], 
               PolygonBox[CompressedData["
1:eJwV0s9Pj3EAB/AnbToQnfv9JW4liQ7USqu2GFuLAyrpEAclc7F+bA5qM2pt
ctChf4CQJSSVutQmbumWUB1ycDAq5PU5vPZ+f95Pz3ff5/sUu9Rc1bQtiqI4
BplJiKJZJvUJxnnLGKtssd8f1/OcmJvf2Fb4xz7bRYbIdG3UlqQXcJ1p8uzL
9lK9g48U2f7asvQ6npFhe207qXexQIVtt3zAKmedj8hNrugtcoqD+jf37pA3
6bfdkd/leXlc9sgteVW2y1vygyyUf9zbK7dzgx77bflZnpZ75T35UzbI2vAs
8qlMl6/cnyhbGbDdlT/Cs8kTMj58Vzr1T5Tru2QfK5xxPiw3uKxfk+/I1b/6
7If6GuecS2Qbcxxz3nS9W1/klPMeWcMT0pxful4Znod5ymyJ8j7LVDvny3Ua
9WY5yQH9i3uL9Vbec9S2YYvpFxgk1TZi26kfookJcuxL9nUyw3vgMSn2F+Fd
hf+N8D4YJzv83vbfZIRn5RHJ9mHbIr9It/0HIZtcKw==
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              
              LineBox[{1, 133, 108, 88, 72, 60, 51, 2, 3, 4, 5, 6, 7, 8, 9, 
               10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,
                26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 134, 109, 89, 73, 61, 
               52, 36, 135, 110, 90, 74, 62, 53, 140, 115, 95, 79, 67, 37, 
               136, 111, 91, 75, 63, 54, 141, 116, 96, 80, 68, 38, 137, 112, 
               92, 76, 64, 144, 119, 99, 83, 55, 142, 117, 97, 81, 69, 146, 
               121, 101, 86, 39, 138, 113, 93, 77, 148, 123, 103, 65, 145, 
               120, 100, 84, 151, 126, 106, 56, 143, 118, 98, 154, 129, 82, 
               150, 125, 105, 70, 147, 122, 102, 155, 130, 87, 152, 127, 160, 
               107, 157, 132, 163, 40, 139, 114, 158, 94, 153, 128, 161, 78, 
               149, 124, 159, 104, 156, 131, 162, 66, 85, 57, 71, 41, 58, 42, 
               43, 44, 45, 46, 47, 48, 49, 59, 50}]}, 
             Annotation[#, "Charting`Private`Tag$976567#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1GXYFlUURuEXkJDu7u7uVBQkRBAVGwUFxQBFxURAUEIFlbKTLmmQ7m5Q
GilpSWkB7335Y31r72fOzDfznijUvkvrzkkSicRlf0ZwhqSJxE/qlminvsBZ
0Uy9hwegq/o2/G18dV4l68nd+AX+l+vgYfVx7s/D+S1OjaH4w73Feba8B3fk
Dkn/f4+BXIbv50Pclz/nbpwKg+P/6+/gLfwB9+TOnEAj9RN8mr/FSHFG/c/q
VsiG5vq9/DFOu15Dv1r9Jupiu6yE7Df1cyiL5LhTtpV7oTFGGZdJ9ku8L7Lj
jGwHSsrn6J9HOaTAaHlm+Qh1a+TAWdlOjMFYrEqZSIzj8ZiALMaPNO4B5MQ5
2S6Uks/Vd0J5pMREeVb5KPWDyIXzspqyNTEHqIfdstKyeTFnqIBUaCjbFr8p
7sEk47LJRqsfQm7cq9/Hn+CC67X0a9Vv40X1Da6PR9Qn+EvsMa6Mfn6MQUf1
Fa4Yv4P6MPfjL2IO+HYMCevv4t+5N/fmLpwEn6GJ/kk+E3PJ3/E7nBbD8Kv/
m53HyLtzG27P/3AetFD/yZ/iNXXyuOae2rwunoWX1De5AR5Vn+SvsNe4svoF
MQaVYo70f/FgpMbdsda5D/fhVzgpmqrb8ln+HpM9K4d+bOwb5MVF2T5MwVRM
Q05jxsVvi3y4JPsT05HLtfHxjlhtDeXny/L9mIHcrk+QPYYCuCI7gHLyhfqX
URlpMFOeRz5R/TgK4qrsIMrLF8V+QxWkxSx5Xvmk2HsohGuyOrL16ndjv+KQ
rIJsccxj7C31Va4a61V9hIcgHRrpt/OHaIbZ7s0XcxpzjsK4T7+fB+K663X1
G9TvxV6Nb9Wf4q9x2PWK+iUxD7Ev1de4Wqxt9VEeivRorN/BH+FVdTI0Vz/F
52Lt8w/xXZwuzgnPzs+TZe9zW36GL8ba4iLckg/E9/Agfp1TxNkWZ6b76/FG
eS/uHvPBt3gQN4x5iDOXB/A3sd84Taw391bipfGu6KS+ztXRRn2MhyFD7Gn9
Tu4b+xhz3FtANiW+DUVxQ1Zftim+JfYfjsgqy5apu6IGMmKuvKB8qvppFMNN
2VHMQyHXpsnaoThuyY5hPhZgIRZhMdZYs0t4KZZhOVZgZZyJWB1jUNgzp8c+
RgkkcJyqyJfHPkZNZEIT2S7uhxZYa1wR2YyYHzyrvsQl0Up9MOY8zhZ+g1PG
mRTnjb4Bb+Yesa9xwrOqylbEXKIWMmOdvKh8ZjwfpZAUJ+XrsQEbsQmbsQVb
sQ3F3DfL2A4ojWQ4Ja8mXxnvhNrIgqay3dw/9kH8/vrz/GOsf3V6DI+z0/3/
AQoA/uo=
               "]]}, Annotation[#, "Charting`Private`Tag$976567#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1WWAFQUUBeC3sHR3d3eDCoiFRQmKii0YqLjYrdjdSXd3N0iDdPfSXdIg
6Xd/fJx7z8y8XWbmQan2ndukJCUSiVR/dE1jSE4keqVNJFqQg726pXSjOz1I
ck5vx1qSk326ZfQkjWN9dK3IxX7dcgrpJ9ufoyJXdL1Iq+9rv4/cHNCtoLB+
iv15KnFV15tkfT97a/JwUFdV94/5XRqyUldEN9Xckcpc09XTrTV/yh300aXT
9Te3IS8327fJ7zjkeDX7UvN7NOJu+375B6scL2qfZn4hPsP8r6wSn2/eHb38
RT4m/5PXXVPfvC7uhfxMPiTPyldkU9lMHpJdedJ8RfZ1XXrzAPP95KOJfbv8
nsOOV7cvM79PY1briummm1+kKgka6NbLz7mTfs7LoBtofoD8HNGtobh+hv0l
qpFEf31G/SBzWwpwVLeWAQxkEJmcM9ixBynIMd06Suhn2jtRnTQM1mfWD4n7
QSGO69ZTUj/L/jI1SMsQfRb9UPPDFOaEroZuufmDeJZs0JXSzTanxL0zn5Q1
aWreE/dG/iofl5dkMjeYN8gv4vPN5+RdNDcflt14ynxVDvUzspqHmTvIdvE+
y+PxO8si8haZGu+z/EE+Ii/IV+OdcX1NucL+rPww7pk8IzvLJvIeeSCeg/xT
PiEvy42uLW3+O86N52c+JWvFszXvlb+RjhvtG+WX8R7Twn5EdmeYz8lmHx6/
G0W51b5D/shJx2vZV5o/ir8Pm3RldHPi3aU26blJt0l+Fb83w52XXTfC/CjF
OKXbTFn93LgP1CEDI/Q59CPje0NxTuu2UE4/z/4adcnISH1O/ah4hpTgjG4r
oxjNGMYyjvFMYCKTmMwUpjKN6eTyeaPjPlOSs7ptzCC3Y2Piu0kpzum2U14/
3/469cjETH0e/dh4XyjNeV0qFfQL7G9Qn8zM0ufVjzM/TRku6GrrVpm7xHNh
h66ibqH5TRqQhYa6zfJr7mW28/LpxpvbU5bb7DvlT1x0vI59tfnjOBbX2Q/K
v9jpeCX7IvNbtDWfju9HfB/M++TvZKWRfYv8hnbm87IZLc1HZSfZI/5e8lrc
p3hvfX5+OcH+jOwgW8sTMkWWk7fLXbKj/DneIXkx3oH4N9X1deUa+ydxLrt0
lXWLzW/He0825ugL6CfGz6I8l3S7mcs85rOAhSxiMUso6LpJ8f2kApd1e6ii
X2J/J957stNYt1V+S3Na2Y/JnvEMzNfjmcf/Wa7/H/ZB9OQ=
               "]]}, Annotation[#, "Charting`Private`Tag$976567#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwNzWWYlGUYBeBvYRfp7pAUpLtTQro7haVrF5FdpFMUFKVLOqS7U6VL6VRQ
QkAa6fb+cc8553lnrskcHtkgIiQIghg+okKDoGxYECTgpn6IDSwmmnLuCbml
H2YjS+jLl/SjPwMYyCDK+34i/tWPsIml1HBLyxP9LL8ymApuibmtH2UzDews
vNEvs4yadjqe6ufYTVM7ByFcs4fwiZ6EO/pvbKGhnZW3+l8sp5adnmf6eVrr
efmAPXYz+TEx6EQxrru3lQWIy1C7okzKXb29LMzvekuZm16E0YUSfMFW741k
NiJ4Z3eURenN3/ZnMj+fE4fulCaKFd5rywz05LndQRbhgt5G5iM23SjFXvfm
MieRxKQzxfnHWztZkHgMsyvJZNzTj7GNxvZHvNevsJI69oe80C+yj+FUdkvO
ff0421nFCKq4p+CBfoIdrGYkXzGKr/mG0YzhW75jLN/zA+MYzwQmMonJTGEq
05jODH7kU/+Zkof6SXayhrpuGXmp/8F+ZlLVLRWP9FO00vMQi66UpA+7vDWR
2Qm4aq+lnp6JV/qfHGAW1dxS859+mp9Zx2zmMJd5zGcBC1lEdb9Jw2P9DL+w
nvpumXmtX+IgLexchHLDDpeFiE8PyhDNT97+B6AehqE=
               "]]}, Annotation[#, "Charting`Private`Tag$976567#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1WW4VGUYBdChUbobKQERpCSV7pAyQKS7u5XuRgTpTklpQUFKaelOlQ5B
ASkB1/djPe9+9zczzD33nkPGJh1rdYgSiURqRo1EesaIRD6IFYnsiBmJ1OUN
Dul66l7K31KO73QNddfkfuRikj016+S/nQ+SYzPPXoOZciZ+lHs5/1DeKX/B
fDk7b8pjzMQsl1eY+fjN63uZr3RTWCLnorw8zXyLn/jB/r1ZkF9Y5n2NzOv6
jWZ/c6GZg595zz7ZTBO+F+vtq80C7OYf7x9svhE+m/nhZzdzU1OeZWYO/7a8
1ixMb+8pZu7S1SMOY+1JWCEfdt5bfi1PpQLLdY11N+QB5Oahbki4Jiyw16KP
rnj4bnJ94nJEt4Im+pv2geThke5LSoRrYW9API7qVvIVfelHf0p63a/OGxKf
Y7pVNNXfsg8iL491Ayil32NvRAKO61bTTH/bPph8/KsbSGn9XntjEnJC10cX
YZq9Yvjd6Zrb78hDyM8T3VBdHBbaPw7fRVfGvk9uQiLG2ZOyUj4ZfnY5CtPt
lZguZ2CzvMZ5C/muPJRF8ru8H/7GzbRskJ963TA5bngfi3TLzDzhHuET+2wz
C1vDz+z1ZeX9clMSM96ejFXyqXDd5ajMsFcOfze6lvZ78jAK8Ew3XBePxfZP
w/XQlbMfkJuRhNO6dbTS/2UfTkGeh2tGef1Be3OScka3PvxMVHB2SNeCZJzV
bQj/LiMYScVw7zlrSXLO6TYyikrODutakYLzuk201t+3j6AQL3Sjqaw/Ym9N
Si7ofmAMVZwd1bUhFRd1m2mjf2AfSWH+042lqv6YvS2puaTbQlv93/ZRFOGl
bhwf6Y/b25GGy7ofaRfucftoivJKN55q+hP29qTliu4n2usfhmcUH/BaN4Hq
+pP2DqTj93Bv6aIx016FrboO9kfhecCHRMJ10sVnifwZX3tdDfspuSPpmWBP
zmr5j3DPytGZZa/KNl1H++NwH1CMKfZ0bJSjhGsoJ2CpvNzMS215jvk22+R1
ZhEm+rya5mndBrOTucB8J7wuPG/D9zRTsIXv7SvN/Ozkz/BMMWOwidnOl4bn
Ldv5yD7DzBjum/AZ4Z40C4VnUHg2e38n899w/7BYzklxeaqZPnyuHDX8ruWE
fCfXYa6cNXyG/I3PqSWfkTuTgYn2lKyRr4ZnmRyTOfZqbNd1tj8J150SRGOS
/mP9WbkLGbmm20EX/dNwTShJdCbrP9Gfk7uSieu6nXTVPwvfhVLECM8d/af6
83I3MnNDt4spfObsgq47Wbip281Uaju7qOvB29zS/cI06ji7pOtJVm7rfmU6
nzu7rOtFNu7o9jCDus6u6HqTnbu6vcxkFl84/13fh3e4p9tHN/3zcO0pTUxm
6+vp/5C/JEc4t6dirbwqPHvZFZ5j4f8LMxZznVVnv667/UX4PVCGWOFvV18/
/L3JX/Eu93UHmMs85rOAhSxiMUto4H1Xvb4vOXmgO0gP/X/h90dZYofngy4R
y+TPmSdnC3/L8nqzKHvCveX9/wOIa0GK
               "]]}, 
             Annotation[#, "Charting`Private`Tag$976567#5"]& ]}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"Feedforward solution\"", TraditionalForm], 
         PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1a\"", "\"u1a\"", "\"x1a\"", "\"\[Theta]dot1a\"", 
           "\"xdot1a\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
14WSDIj+Ct9JbKQGEuvrsd1hK/G+fTHJ3CzC/Ij2JvaiJzEecH/R6nucggLy
9eRGiPgkqZ5g+6iagnZLWzdXEPOVfUn86bQmFX3hbTylRMwn3/H5Wo/vVOQS
k3WPSqzPWe+E67eGhFBLJjkB8XOiEnkbU3YzV/C+mPHhxK0lHHv8Pa2+mQeZ
jUq3j6YS8eP2rNbyVV4k2fFII3SKA4lvfDh55Qcvcjpek/dZloz0bF4pUK/z
Ia72xY0pumSUlif7QLaHD4mc10i8TIwfe1cceGFAQQ5exuvuEfagOTXhr9tH
QRsPGW6pIOyh5o/esKYpFfGuTdIXJsZHK0q1YBuhotLrtn4ixPhjz/xrqLPn
Rx93V7nbEN/reO26RsM4P1oV+jV64hkZTdlS0hSchJD6jkmDaGZOlP7pkWjr
K150Qd6jd4SPjPzDbY65b+JD5cHmhWuPkFFHaeDZjFg+tPt27GZ8g4zi16hf
fCJOzB8n/YEK4f+NPCgUxVFQoK7/+XBifVwu38503UpFxbnHIlcT8UzMWyE6
7z0VJc62G2wjvs9N70P97t38qOmwxqIOsb5mogqzLoVCaDzSKr5yNSd6LSp0
uMeLiK/qZ3o3GZKRbO/+IT1Wwj/uaSYB0d/XE95/LTwpyOPnkxsxxPt6pTKi
BzioyHa4mF+N8N+ZzLJj3r5U9OdTvYEK8T4xnpSNEbz86H6nxNQU4f9iilq0
PFVi/Pur1c4S89PZOHuUv5SCZKW1d50j5pvqv+srnzoVLRt9mflIzOexC5Hz
E5VU1Bm32qCG6E/cplg09rcQWlOe0k+ncCK1G9KB7rYUtPlQ0NRuYjzhTxuE
JGYoqGCz+5fNhL8YV/NFmDtQ0earS5sCiedH/qYcqWHiRzvc18VME/33RFc+
3ryLgj6aPfr5m7j/8njEsEwmBXE8dOrbQPT3deIcOq5IRdLZAq50YvwZt/o1
W3KpiKy/7Z8p0d9puW6kHUxB5X/EWUv+84/XLpNR4VSUfW/guyjRfvVb68SF
sxS0Z/53rith7yZZ2q+XmygIPezz30Vc62/l02rXJvbnlA/kWsKe2pW1E3h+
UZGUveV3Q+La7aVf8t5pITScy0TKFuBEBQ7JsVJmVnD1O8XRxWEJy3fXdbxq
4EHbNBffPU0m9ptrbgm8l3lR8fbYnTkTHMjirg5NpIUX6a/9UEXdRsQ3kapd
wgZ8qDr3FEegDhlFC61yONrBh3TkhwxT7Mlog+ZkrN4VCrpdTSlSIdZjYa2z
rGkPBU32PpyVJtbr360dbGQjKrrWeLxfjRifwpy8fe0/KirLUtzfT1ybtHzl
7bMh9pufChxcxP3vtJ4uBQ8T+cVWVZErhP1fNYtaXXNXCP1zVT77g8gP/KN4
rQfCeJHpnWwtxEtGTWOHKLCeDw3zn38We5iMHGyLTmdH8qFT9e66TWZE/Lqx
WePtBgoiv3ph+Y2wN4VmMxb2KAp6JnLzXRIx/9vs588/kaCiLUZfN5gR9qrE
zfH5zltiPY5fuSRBrMdE4PYfTDv4keJanSoSYf+1vIVawvlCyFEmS2Y1Yf97
S4+p9rvxodsv+DZuNCCj9apCnXeW+ZBDhl5AChHPpCgp53e6UhAnf32aP/G+
oEPKaI6VSuRnl8VziPFQDr68Ag+o6KJWgbcm8b7gozukb6zmR+EpvX/TCfvh
DdyV3nSQgppDcwUXiHiCXol/bC2koM/OdP4nxHwXvs02FTtMRaGL6uQxwj6N
2mx5ksupaNPGIZRG9PfY5JwDdAqh1g9pnGTC/mPkzy0ctaSgkIzJQ9zEeNQT
9TLlJyhoVayCbQhhz64XfqdK2FFR9IiZXArxvLGY/OlXC1TUXN8BeUT/DYvv
XUCOgviUDr9yJ+7Pzqbrjnwk/Kd68ewRor+7a9p+aO+moqCyS158xPdXj+ca
BWZRkXe0eogW0V/y5Kr3IgEU5NqtFFdM3P9W8izX5RAqKj+ZEi1GtGtu+fLH
6hQFnbCd7dpP2Dvd1ZVMr6cgH9/fWh7E9WrV8NG/56hocDgumo0Yz3ShVF55
KxWd1z9tdICwp74AYa66MSE0oz/ksUjEf30cU1N7nYLimX5VJRPz9cngUetz
CyqS1DRWGyfed+e4oNz9RGJ/zNvE7EmMh8Rk+IQtlYqYfA4d30u0W3hdcY1/
SEFfNdPOpRPtP+Sndlc+IfJBVvq1nUS7x5ra9tPfKOiaPp8YH9H/9urKXqU6
KvrwUnLTKNHeG8UklXuH8PfMkHFt4vnjx9HDj05UpPz7/hUHon1hm92D69nE
/pmmaT5OPB/2R/CAWAEVVdS5LDn/F39Msr8HhFLQy3N3nQqJ522Ekjr6XlPR
TfGH3P/FC8H4pXMv54WQe6bX9juCnOgzWXrjLbNrsFn3kDifyxKeSukd8ajj
QUHxKreufOBACo2H64R1eZHrxbhX38Y5UIBEQdzcd160J+zI2kMyhH3Z9O5c
f40P+SbZHWYh/F34qKPN+Z98iFlmy/hFwt8rP3JegssUdKRE9sdGYrx1oqrz
t7oIezLwF79I+O9Maqh/jz4VTQWQ7l8m1sOSf3T2818qcm+StaojrsteHUgd
s+JHO3eIV30n7PnQ6Vgd+0F+5O+okc9L+DufkVnOK3sh9IztaKoj4e9Ogo1h
ky94UVqN9qIJDzFfr9/PrBfhQ0FNiTGDRH5fXNqmmfeaDz2KZpM1JPyd50Xw
4QxRCqLuFfAIIPyrW8n5c99rChreeHb2v/Vj8cDiwZuoKEyyJCGE8Pdjp61V
z8dRkd2i/K3/7E8uedDgjyw/on79MdxOtHtz+7L05QghLVJzVRKRv3uIGqBB
Fz5UdWHxfgSRf4dYPmz1XORDNv6Z20wIe2++U0SmOlPQL1ZpPw/ifeanmdYy
s1DRgHTW6hliPGJubH0inlT06xCl/CLxviqD4Q+nV/EjyemkHUGEvz/CUUk9
ShTEPtBMrSHmZ5hJ0SSPRiH2+ZkXCcR8h2a47N2qSkW0l9yHKMT91hvawx+V
UpG94c4dsUR/yGDdltW/hBB7zehMApEPnws2+Sh9k4KcWhzip4jnN2SKPVAc
o6C3NZdJlYT/+oVqKjHZUlFPi/tYPvH8a6WRes85KhqixHVHEv51cpuIw0lZ
Cgoa2CagSdx/Y0PrmvoUCvr5gxz1nz1rirxJurKTikwvSx05QHx/+94tQ5aZ
xHzatU+eIPq7oiumv/SEgupFr4j/Z78ZptnBisFURFr/8f1/8bXkvFSn0wkK
Oihb6MlP+Lddd1De21oKWusdoJJAXPecukobOUNF64WeP99IjIeNPVA9vpmK
1p1tE91K2FPE487Pb0aEkLnaI7E3hL/zSGQ9yDCioJ0//XyC/4uPsePGtjeo
6PXm29fZifu3fNjWfeUtBf1r2qzxlBgP3+Fvgp0fqMi5W8hRnhiPcJ+Ngu8D
Cqqqk5t5T7T3376Wn/iYirhCp50UifZdtr+f7Son7Mn2bvUuov8DfIo2QjVU
lNn87FYH0f6cxP/jtR0FPZdX4z5KPK/tl8jr70hF279faPIi2pOe+hw4lkVB
nZVGFZxEe7yMe/FCPhXF2Pu9siXaI79WPb4dQkGGBjntxf/Pz/gt6BFUxLNI
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
37R/8Rw4yEaeesT5w7aq6tLbvCmQit/b0eeTj/Xz2EmbM2egqvpm7C9dGrYo
27GRs38JdmhJ2Ym7NWLriNA/0lMUZLms7pBm04prxoPWHEschcW7weVbif20
8iHHzY7JZVjV/eNpnWcjzjeUFl4rxo6as8f3SBLx1dz+8Lck13ewGHUzL5A4
n60pWEogyY7CY6/Axy276DjXVT+E7eAslB89PRYWRcPrE17SJ6yWITfFYuYV
YQ9/7eZFz3aS0IxnxLyaSi0EbpG2e7RlDLgm7OO5LtJxV/jVs8/QFJis/p2C
3PPxzTnJ3KDXU+A0ZzcRYpePv55MFbsVPAOeau8tRE1pWOytnP207yi0flBd
ECL8r/PpTY/rDcvwniU6t+xNI46J1hoxXGZFtg5o09utFXD8z4/wazzEepos
RSf+x5fMLBxJDYwHldH3NiHEem5Zy5V2UmQWUjnkfajONCyfytR+T3MZSuLK
wz/lNuILR3Leiq4egehUuuKZvUW4q6WodT8HEd/nXVvqiXhGVVNf/VNsishv
xyfOvsrHGf3Csq6UGTgtQX8hyl2AlRd+3bG0eQWNp7tFb60uBYdoh9ns9ik4
tsqvZywxH89sv/K3vWkG4g4/ipMg1k/ghk/SmiUKSrySsOHJ51bshmbfhpaN
gkFq6N5HhD8r/LQLy9/Bjhak3da7Et/jNeZ7JvFmMhgaWWwqYi8Fzsi9KVbP
luFhzr61j/Mb8dWRoxFMoyQU+PU2cYglztuj9s/V9KfgkI2dVJ91Pmbw/Ux8
J/MKxkMxg++XtJfadkjwz8r/ZVBnC07kzP5e+b8MlzkzD4+snpX/yzhJ4atx
8O9e+b+MiltuJ7Lvd638Xwblpus9k3udK3z/mtr4m9sLOlb4fvWWF1eWTnSs
8P3Wt7+LVSp1rPD9Z9MmpW/7dqzw/f0HCqlpezpX+P6QsdGGaOJAweD7zbQ+
KZl/71rh+4uVm6N2B3ev8P02lV8z43l7Vvj+qF23WzeZ9Kzw/WpG9xpDg3pW
+P7RvzbBA9E9K3x/VFvzL8WAHszg+/+V/hygaPVgBt//q6jGo6C9GzP4fjsT
mq66fDdm8P0Z42deBBl0YQbfL20s/btfqxMz+P4Ga6urnHs7MIPvd88+EtvI
/BMz+P4L3cmSl3a1YQbfv8f0+IMkm2bM4PsnTS+q7b3WiBl8f15GqanU2TrM
4Puj71v9ihmvwgy+/0PktwWN32UrfH/o021F2KJohe9PXYh5tRCSu8L3d1w3
y+XYnrbC97tt1mA+FRq9wvertHZftPK+scL3U2ZXdzvYvwAG3x/WqOTKNRoH
DL5fmUtcbLPyB2Dw/ZJvFkb/bvy4wvfv6zkpMJT/aYXvt5dtsRBrz1nh++0C
hfkfaBas8P3Sr7oXNhrSV/j+N2fDCljvlK/w/R4bN6158KZyhe/P5aKxtG+o
XeH72209EpI16oHB979VPkpXymgEBt/fObRuv/GjXqyblLIsIdMFd16+f8U1
0YkZ/L7rJQ1bZf7OFX6fx9ma85Njxwq/z7xp1youxY4Vfr+wXHUo9mLHCr+f
FaaUPdfYscLv51J6dm992bnC60evF7nfodS9wuu356yTP9HSvcLr++334vug
2rPC69tfJe366Nazwus/ZZ8lv3vds8Lrs0ZkONYQ1wxePyzK/2Xz3R7M4PUD
0wrUkjf2YAavz8Xjhrc+6cYMXl8IntZsr+rCDF5fwL/aKKGjEzP+H+T8k4BT
Ea8eAOP/QeZr/EcXFKNWeH3hE8kVahvfAYPX/1Sy6h3opazw+k+OGTe17U5f
4fVJQZvNg6OzVnh6V9P3vupuDcDg6ZvJSsKXa3vxr8EG73cinTCesU/Wam8X
ZvDyUl8C79oc6Vzh5alsqx+IvuxY4eUD+gX9dFQ6Vnj5rxZxTH+Pdqzw8p7z
DulMHzpWePmy3h+yZ007V/h4sz2PzcK4ulf4+OrNG5/qZ3Wv8PENLykysK1n
hY9v1/obb2PXs8LHa077146E9azw8fk7WqkCRPxh8PGHQnPTTB70YAYfH/l6
JDhFqQcz+Pj/FXXecTH/Dxy/CG0NdUXSklnIatD7XVLKikKiISMtWkpCEyGF
Fk2Vkob2lda1tK5117gWrjolTRWF1O/9ezx83l//3SN397nPeI/H6/l6vcLf
XGQnUgaoBB9fGzSWF0waoBJ8vO5BQeo92X4qkXfSufTxcYWK64DIO2GLFwfW
ykRjPl7K39i8e2MyIPj4PRI7eIMPv8N8/Mbmv4/GJLIxH//z5NakXevzMb+u
PAFj4760glabRzejVQbAJ76TC19z+6gErz5c11oqMMzCvHr06pIl0IKFefXc
M40qimg8JHh1ciBtYsCehXl1cnCpSc3SPsyjj8lUurVbD2Aefeir8NCS2QHM
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
9c16MW1YrzBOiO1e/a0d6xW6uWHSr0o6sF7h4ib7oXwfE+sVNavfmCqcYWK9
YtN1v5zNa5lYr9AM32em4d+B9YrgYm0GJb0d6xWe0fn6IY/bsF7xWWzP9fXo
+hN6RUJ1kUqSLB3rFXmzRdGvHRqxXvHogMHS1Zy1WK84bfW6aLqgHOsVvmtr
P0fq5GB/WUHpO1l+nSLsL9vuwL9+LLIK6xWbeNUUhwrrsF4RKbW34cSBRqxX
dJY5/DRYaMZ6hfLIdslXXS1Yr5Dq0gRGpnSsV1hFtqyve/Wfv0xx5rnVYCId
6xVbg737tF3pWK/4uerB/bmdDNwfk7LuocCXIQbuj3GJdF6WX8/A/TE5BX7e
e9PpgPCjSY8HTOxJb8J9MmbOPjcuONUAwo82THZxuhNahPWQsBmvj5bfc7D/
TEj9wcneu1XYf6aqVfTbPKIe98ccqaeLrhipx3403ca9Zbqx1diPNsxrxLut
g4r9aLuEX07vTMzBfjQH5ZeT9wITsR/NL2q3wP7BIOxHC/zoE2i38xkg/Gin
bCl8rkfe4f4XE8X8fSaiDNz/ok13XZL2uRVop3VseE/igS+eH/+58mQ7mFdR
5PqyjBdyDf0+6mTeATaOHw6O5OODQl5fwC4eJrjFYxV7aQ0/NDLO/VR6igk+
0vveJksJwHyaQ27XASbILZc3d5NbCa9HaS0Wf+wAi6Ph5l9XCcJQPk2rCPkO
8O5YY+DJ54Iw44jsejWFdkD0Z48lXCy53tgKiP7sbcs2WTqKo+v5rz9bnvVH
weRXMyD8cbrklTNunfVYP0pbPGwNKEX/+eEGZKI9ruZgP9yxTzYRL8zKsX5U
OuwWoXa+ButHn0rVZmLiaFg/2jao4dJS3oT1o9sHL0ysutmC9aNVfTMZ2fJ0
rB/JRw0Xfn1Ax/rRt9amrCg0XhP6kWSFj4NVCB3rR2HPU1Nlpui4v6Z2Mevq
ZnR/Ev019grJWX1fGbi/RvS23/EOfgYg/HkHFVau3C/Ugvts1oZeXG5jWwcI
f57LkMSqEJ8yrE812GZFcd1Kw368gJ0fn8YJV2A/nnE5Xaz5bR3ur4kRr7bp
Pk7D/rwPVz/YPZSsxf689fC42Y+n5difZ7hCSefAHQr25ylSJCt4DN9ifx7N
oXvi0/sw7M8TG4jseB5xFxD+vIHNtmaP45Jx/8wFdRV3g+d03D9za02BvYlb
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
Mys1q1foehGvCT8D/rx/PDfx+n+YvIE3
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{359, 2728, 2726, 358, 881, 706, 578, 488, 429, 
                394, 905, 730, 602, 512, 453, 936, 761, 633, 543, 974, 799, 
                671, 1021, 846, 1075}}], 
               
               PolygonBox[{{2725, 2724, 341, 342, 343, 344, 345, 346, 347, 
                348, 871, 696, 568, 478, 419, 384, 903, 728, 600, 510, 451, 
                935, 760, 632, 542, 349, 872, 697, 569, 982, 807, 479, 947, 
                772, 1041, 644, 1006, 831, 1068}}], 
               PolygonBox[CompressedData["
1:eJwV1GWQVnUYhvGXEJbFAaRRgaEbURjFIaSXEgWkBRT8iCwhXcsXpWF3aZAS
EKSl4wMljexijILSKDN0jwm/58O1z33d/3POnvdUuX6pnQbmTCQSOZDmz1fJ
icQKNJA750okVlqsiBN8JgbgM/13upa4yTejIT7Qr9JVwkk+C59imP6IrhVu
8S1YpLvFB6AwGum66FbLlXGKr+P/ymORzqfx3+XeyIX9/CWkywOtD5ePyin4
Ra6G2/rtZh58rv+WL45eTsrt/Mzr/E1U4kX4Ubkk5suNbd9V/lqugtN8Pf9P
HocMPp1fkPvgkvw6cssHzMIo7rgZ/LHcCqn2GWEe0+W01tr8lVdHGX7H+g45
b+zPv7B+T26KWnyr9S/lO/p8PG7gH/wtVOZF+TG5FF7mC/hfclu8Y99u5hpd
VWTJ5fC9foP5v248MvkMflHuixcwSDdSd1xug7t8G5qgu36trhrO8NnxvOgu
8Y+QB4N1o3Qn5LY4J9fAPf1OMwmT9PfNZtiuX2Le1SX7Hanmn7w+qvBi/Hj8
RrzCF/K/5XZ4gze1fw/5G/2zuL5mtlker1rPsr5RfqYvwCfE88wbxrZ8TjzD
8mX9x7gcx437Ih80iyBTHmK70fJJuV2cP9/F82Ey38GXxu+U8zvuIPMGfxtV
efF4v+I3YJH8j9k+roH9eprr4gW1XQ3zLK+A0jzb+iY5gYI8Ld4vuVFcVz7X
erp8Ja4/72de4XXjGDyJH5KLogSfzZ/IKRhq3zHmKV17nJdr4oF+t5mMKfqd
fJl8P+4vSqC5rpduvVwzzpnPi+8GxupP697Fw7hOaIEP9Rt0tfADn48M3VXe
P55zDNONi2dV7oBHfA/Pj6l8N18e5xj3BCXjOxT3Govje2W9t7xRrh3/R66I
H+MbZuZAIddhorXbcmMssJZpXtPltfaJeZXXi315Mj8sF4tvRjwz/KncGnX4
cPuPl8/EN4u/Z/4W7zHK8sfW98ovxvPEp1l/IDfHHmsrzIe6oSgV31BdH90m
+TX8xBfG9wQT9Fm69+M+xnGRgr76zbo6+Dm+vfEeI02fresY58z34Tn1esG0

                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{2725, 2726, 393, 428, 487, 577, 705, 880, 357, 
                392, 427, 486, 576, 704, 879, 356, 391, 426, 485, 575, 703, 
                878, 355, 390, 425, 484, 574, 702, 877, 354, 389, 424, 483, 
                573, 701, 876, 353, 388, 423, 482, 572, 700, 875, 352, 387, 
                422, 481, 571, 699, 874, 351, 386, 421, 480, 570, 698, 873, 
                350, 452, 511, 601, 729, 904, 385, 527, 617, 745, 920, 420}}], 
               PolygonBox[CompressedData["
1:eJwVzj0sQwEYheHvtiwSSQ1ibWupicnvIlEzuraTiTYhYWO2KGITJmoQBha7
gfiZjAYSc6/BYtJEPB3enPOe796bW1her6xlIiJBDePKRV9EC9N6Awd4wbAH
z1HJRkzxOvbxjKK9hSW3ST6gN/CFE9uNLUWZP2DTtsozeg0faNr2bNt6B1f8
iRf0MyzyCX6kD+mPyOl1pDjm1+6z8hs7tl55i7a9JN8wZ096Iu7lBl9xG+Xz
+g8O7YM8p98h4UU+pn+i2v0uf5e7vOn9ET6jp9iy9/Nfedn9T/e8fEXe9idP
5YL8B3HmLrY=
                "]], 
               PolygonBox[CompressedData["
1:eJwV0kswlWEABuAvrORo05jpwrCoJRPRTOsWndziKFukstIGDV0M0q7aFJtc
cmmm5RHa0MWMXW1CElp1s1ZCzPT8i2e+932/+Rf/f05ew43q5pQQwgFeMJoe
whg1hgTVVHGRSjoZYZ0zHnzFtdQQKvQ59qm1LXPffld/xholtmmu2sv1bPkm
f3lue2fb47L+iV7bHT1TbuIX/bZhW4+cKk+wqp90LlFsn6JRLrOXO/cYtOU4
P3BcPuvcoE3OSAthyzmuv/VMvn5O3uSR/bB+SH7NP/d5eoH8lUvu0/Ql5z39
tvtTelzeps9+RM+S54npxc5vXJd/0icPea5bTpGTfNFPOBc5bZ/kilxqH5Cz
5fcck1v5w5j+xv1DOVOeZVev0Rfp0W/pGdFvxg+eRN/GtkKR/pIG2wX9qNzC
b0aj97c9kGPyDDt6rnfLl9dJuFugW+5wdzD6rfnOY9uA7TOF+gT1trg+y3b0
X7N9pMverj9lOfqetiR19vP6f8/sWoQ=
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1Hl8z3UcwPGfdrStNtO2Zs2atXVSaSZXUumky5RIJUuu2ELuo0SH7iJ0
XypUOhCddFDpQlGhk0LODnJFz/ejP56/1+fz+z6+j8f3+/l8fr+SqprK6lqJ
RKKJj+hvPM8QOnIajTmAJJJJIZUDSSOdDA7iYDLJojbZ1OEQcsglj0PJpy4F
HEYh9SjicIqpTwlHsI5pDOUyTqeCUtYznWF04ox4J/5iNuO4hgsoYwMzGE5n
2nAyfzOHW+jOhRzJ77zACC7nTPbyDnfTl6Zs53Vu5Vou4ig28iIj6cJZ/Mu7
3EM/mrGDudxGj1hTm/KZPsrFsQ/mH+gEBsTami/TpzmaTbzEqFhj177RK2Kv
jD/WY3VKrK/+qGezj/lxv+/ujb3QVXqSVsc+6hI9Xp+MvdA1cS60uf7DvFgn
89tjT/U7PVF7xpnQz7WBPhZ7qj9re5KMP9SJsffG3+vAOC/GX+kzHMNmZjKa
K0lz/RN9iHPYzwLuo4YW7OQNxtOLTPd8oY9TSbL5Qn2QG8gx/1qnxjqxhZe5
kXzXvtWrSDderMfpw1qsP+m5xI/ovXhmvV8LdbWW6/WarUv1BH1KS3WtVmhL
3cWbcWbM79ACXamNtLdm6ZfaUJ/QEv1FO5BivEgnUWT8gw4i13i5PhvPzFZe
4Sa6kuH6p/oI58UrmL+vD9CfU9jNW9xJHy6J/WQbrzKGq2lLq3g+/uA1bqYb
7Tg1zlG8f5yPeK84Z/zJLMZSxfm0Zg9vcxfXcSmpnu8jncxg8sxX6HOUGf+a
+P//rFz/A/iqhzc=
               "]]}, Annotation[#, "Charting`Private`Tag$976652#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
4A==
               "]]}, Annotation[#, "Charting`Private`Tag$976652#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1HV8lmUUBuBvuiEgYreo2J2EIN0doxtG1wZKdygp3SBYYCfYqHR3x+ju
sBWM6/xx7dz38+63fXHeN3daRmp6UiKRyPQjT3Ii8UZKIlGU8/KnDKAVeclH
fl7gTb9TjAvyZwykNd85q0c2VurTKcBbenEuyp8ziDZ876w+2Vmlz6Agb+sl
+Fn+gsGs0zuSiz16W+bLDbia1foR8xXy8Lq+0+zBIxzXT5sjeTHo75gl+UU+
b45hrnzAHMAz8ff09WY6d/MrE9nr/IQ5jJQsPhfzEjPIobdz/Qe5IQk9R7wf
xpNVX+P6UflVkvW85l9Mi/ejz3R9l9yTJP1R83cmc8K1M+ZrFOJyvN/Izmeb
peJ1yhfMscyTD5oDeTb+p77BzOAe9unt+VFuxDWs1WexW+7FY5zUCzNHLs1v
8pcMoQM/OWtMTtbFPlGEd/Uy8frlrxhKR4pSjPdcK8sf8tcMI50FzppwLetj
7yjO+3o5/pS/YTgZLHTWlOvYEHtHCT7Qy8fnK3/LCDbqnbiX/XonFsnNuJ6N
sYeU5EO9An/HjjOSTXpncnNA78xiOY0b2BT7Rabcm8c5pZfiI7li7EvcAxyS
B/FcfKf6ZvMl7uOgftIcToE415eYzbkxdpcJbHZ+zBxCvnitTGe28z1mH66w
R0/E58wUsumnXT8rjyKLXtj8h5mxB3pp1z+WK/Ff7Jp+0RzHVa7P1w/Lg7lS
fz6+F6aSXR/l+hb5Ze6PnWESh5yfMkdQMK7rS80W3MQW/bg5lPzM0feafXmS
M3oZPpErx2uO+43RbNW78ACH9S4sk1tyM1tjJykbzzm9Cv/G/jOGbXpXHuSI
3pXlcituYVvsLOXi+adXjc8m9p+xdKN8POucVyPBAn0c3akQzzVn1UlioT6e
HlSkEpWpQlWqUZ1UalCTWtSmDnWZ6++kxnfMIn0CPVmht+ZWtse9Qz3m6TXi
O2OxPpFerNTbcBs74t6hftznek2SWaJPYrvcjYc4qvdmldyW29kZ9w775H48
xVm9QTwH5FqksFSfzA65Ow9zTO/Darkdd7Ar7h0axnNCrx07yzJ9Cn1Zo7fn
TnbH7tIonhN6ndhZlutT6UdjmtCUZqTRnBbxrPC7dcnKCn0a/Vmrd+AuMmMH
2S/352nO6efM0RSJ3WIWOd0PLV37H4M1BWQ=
               "]]}, Annotation[#, "Charting`Private`Tag$976652#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV03fYzgUUBuBXyazsPT97772LsiLZEuXLrGxCyoqMz96EdtGwicxCyy5a
RhMNGkZoqPv8cXuec67L947feZOSB7YdkCqRSKT4J1OaRKJ22kTiR/kaw2nH
HWQmC1nJRnZykJNc1PH/fpIreZz23ElL+7/kVibTi9zUtf9ZrmIEHehql4GP
9EU05h7z3/IdptCbnnbZ+ER/njzUM/8iX2ckj5rz8qXekQf0jHysj5HlWawP
lUX4Vm9CK/0fuY0n9bJM1QfJQszitHmSrMZC+sTnktmZwafmcbIi83ghvhNZ
nDn8EJ9F1oz3EO/TXF+el9PkG/IJWZpR+mMyH1/pE2RlOund5K3s15cwTC/K
d/pdtNb/ldvj79I3vj+7HBzTXyQfDcwX5JvxunTmbu61vyF3kEI/8tPQ/lf5
FqPpQlMKUJBCFCaJIhSlGMUpQUlKUZoylKUc5alARSpRmSpUpRrVaeS1f5Or
4/lwP81oY/+f3Ml0HqFG3K7973INT9HfnJ8T+tOyCvPpau4ub+OAvpTm3GdO
sEufEXdFzbhtuz/k2rinuC9a0NY+Fbv1mfHsqBW3bHdRrmNsPLv4bdDO/ibe
1WfF+6N23KLdJbk+bineW/wWaG9/M+/psxlAnXjedpflBsbzYLC7nYP6s3Hb
dDCnZo8+h4HUjedtd0VujBvjoWCXiUP6srgnOppvYa8+l0H0MefkuP4S9eIe
zH/KTfE9x/s0F+Ck3iPomTmsL49bo5M5Dfv0eQzWC/N1dPrqufgsPqOsxMv6
CFmCM3r9uAf9qtwc96mXYWJ8VlmQmZwyT5RVWUCyOVlmYTpH4jnJCsxlhXm4
LMZsvjdPljVYRBtzZ5mWFN6Pe5Pl4r70ITKJb/RnZHWG6P1kbj7XX2GkXpKz
eoO4Qf2afJtJPBzssnJUfy5ulC7mdHygL2AoDeMm7a7LLfG69Iwbjd+NfXo+
1BcyLH4z5jx8ob/KKL0U5/SpshZLaGT+H8xVuTg=
               "]]}, Annotation[#, "Charting`Private`Tag$976652#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1nf8TQUYx/Fr72wyQxlFk8qsRBMNRUOpRFFmZJNdRgipbFJ2dtl7Vfbe
pOy9y+z9/PF5Pd/v5zzn3vu795xDwTpNqjdOkkgkUidLJIakSiT2pkkkSmFy
6kSiEq5yxdImEp24f/V+WMul4t7jduiNUQiluf5caozUh9rbJz+KKXplPGNn
uJ49Xs/xe/XO8n+ONZRXyP3lN+SpclGss5daf1/e6Vh9eYncRH5J/ln+2sxv
tjE3mUPNux0vY36jf2WmMZuZv5vfmaMcr23+qn9jPmB+Ye6Iz28O87775cfQ
Tf/Ffl1zgf6M/Kw8Qs6Bz+V18Xc45z65i3zNTiN5Zby+/KY8TS6G9fbS6B/I
uxxripf1cfpduEcvqw+Q02K0Ptw5B+THMTXeH9e44va6ctf1AdjApeXqcLv1
ZiiMEfxBrjSm6c/hOrcR6ex/yO/hPkMRjOT/4spguv48bnCbMAqH+LKYwb+A
m9xmjMYY/O1YOcx07EXc4rYgvfeqy+/lmqMofuT/4cpjll4Ft7kSdrtxN/SB
2Mpl4Opx+/QWKIZy3EAuHcboY+0dlitgtl41/l47I/WcaeKCTyTu17vLN+VB
eEufrt+Lbc6/Q/9I3u9YA3lp/M7yK/J4uQDaypvjHL68PEjuaaY3PzP/ML83
f3T8PfM3fYD5oNnJ3GmOMn/yfkfkJ9A9rkn79cyF+iCzWnz/cc3qfcw7zZbm
ejOJYw/IPeRbcT/Kq+Rv5bflGfJ92O49Muofywcca4lX9Ql6wdjRK+jfyhkw
Vv/ZOUflJ/Fb3G9Iih18Jrv1+YN6KxTHOP4Y9xTmxDWNZNjJZ7bfgP9Lb40S
GM8f5ypibny3SI5dfBb7n/CH9Dbxe2ECf4J7GvPi8yMFdvMTcZKvhPlcdaTE
Hj6r1/qU/1tvG98XJvGnuMpYoL+GVNjLT8bpuM+xkHsdqbGPn4JfMBXTMB1n
7D2LRXZqIA328zNwln8Oi7maSIsDfDafqSH/j94OD2Imf457HkviOYh0OMhn
t9+IP6y3x0OYxZ/nXsDSeMYgPf7ic9hvzB/RO+BhzOYvcC9iWVzzyBDvbfdL
7rY8GIfs5eSacEf1jvF96hP1QnhEf0IfLN+Bn/RfnXNRroLlce3Fc8HOaD1X
7MVn1r+K+y+e3/LqeBbzteSZcnF0kLfFb+X17pSbyj3MY/Y+MZfFtW1+Eb+Z
OUnvG897s525xRxmlnT8SfM7vZeZ0Wxu/mn+EP9uOP6+OUcfaD5kdjZ3xbXu
vS+ZVbHC3kf8IrlWPMvkMXJuZIzvVe8Z92Hc6/o7+iy5RPy2XieX3kw+7lin
uJb0yfGMRyn9Kf17ORPG6XOcc1muhpXxesiER+z14pLG59cP28vNfaaf0Dvj
Uczlr3AvYZX+LjLjCJ/HfnP+pN4Fj2Eef5V7Gav12siCo3xe+y34U3pXPI75
/L/cK1gTzzVkxTF+Af7jX8Xv8f0iG47zC3GNr44/uA+QHSf4RbjOv4Y/uTrI
gZP8YizBDcdex1r+Q+TEKT6fz/g5f1rvhtJYyt/kamCdXhdV4jms50EreYM5
JJ6ljpU0e+vJwumnnZ+fa6mf0bujDJbxt7iaWK/XQy6c4e+y34o/q/dAWSzn
b3NvYENcR8iNs3wB+635c/qXKIcVfIJ/k9+of4w8OMcX5Nvw5/WvUB4r+ST8
W/wmvT7y4jxfiG/LX9B7ogJW8Un5t/nNegPkwwX+br4df1HvFfc3VvPJ+Fr8
lrj/kB+luD5ccgzVL9q7h2uvX9J7x72HitwPXGaM19fYS869o2/VP8Vdcd1y
X3Mp4t7VL9krzHXQL+t9UEOfoheOf1/0p/UhchZMiOtJnys/HNee81Po78rb
4nuUF8sN5aryWDkvWssbzQJxL8h95ZRoKq8xh8f9I8+W+5v3mx3N7eYI87L3
KWJ21L80r8TfZC7XB8ffpNeM/zvq/cwiZntza7y2WdHxSuZQvbeZ1WxhrjUn
xn0gz4vnLbrIu+Pe8Z4p5drydjuNUC3+D6HnQ8G4T/V+cqr4nPoV5xSNZ6Z+
Ve8b3x8qc8O4bJgU95U+Xy6JrvIec3Q8M53/Pypcn1g=
               "]]}, 
             Annotation[#, "Charting`Private`Tag$976652#5"]& ]}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"LQR feedback solution\"", TraditionalForm], 
         PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1c\"", "\"u1c\"", "\"x1c\"", "\"\[Theta]dot1c\"", 
           "\"xdot1c\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.866299285262339*^9, 3.866299328491346*^9}, {
  3.8662993844302387`*^9, 3.8662993940861125`*^9}, {3.8662994510506735`*^9, 
  3.8662995142982006`*^9}, {3.8662995586928296`*^9, 3.86629956576654*^9}, {
  3.8663098995345144`*^9, 3.8663099077608514`*^9}, {3.8663118028724065`*^9, 
  3.866311838195972*^9}},
 CellLabel->
  "Out[4214]=",ExpressionUUID->"e7dd54f8-9940-408e-bad4-6bed731d5925"]
}, Open  ]],

Cell["Initial Conditions which were not solved", "Text",
 CellChangeTimes->{{3.865357567824423*^9, 3.8653575802374525`*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"babf6ace-7c59-4428-a267-e74cf670ecf8"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Energy", "[", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0.04393531553158958`", ",", "2.564108617112703`", ",", 
     RowBox[{"-", "1.8934398671106587`"}], ",", "A"}], "}"}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Works", " ", "in", " ", "MPC", " ", "sense", " ", "with", " ", "both", 
    " ", "constrained", " ", "and", " ", "unconstrained", " ", "scripts"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Energy", "[", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", "1.7176561578501914`"}], ",", "1.9865343349458087`", ",", 
     RowBox[{"-", "1.0173496185733697`"}], ",", "A"}], "}"}], "]"}], 
  RowBox[{"(*", " ", 
   RowBox[{
   "Does", " ", "not", " ", "work", " ", "in", " ", "MPC", " ", "sense", " ", 
    "with", " ", "unconstrained", " ", 
    RowBox[{"script", ".", " ", "Works"}], " ", "in", " ", "MPC", " ", 
    "sense", " ", "with", " ", "constrained", " ", "script"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Energy", "[", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", "1.3903695773492997`"}], ",", "1.2310181542446177`", ",", 
     RowBox[{"-", "0.6104047394312593`"}], ",", "A"}], "}"}], "]"}], 
  RowBox[{"(*", " ", 
   RowBox[{
   "Works", " ", "in", " ", "MPC", " ", "sense", " ", "with", " ", "both", 
    " ", "constrained", " ", "and", " ", "unconstrained", " ", "scripts"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Energy", "[", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0.08036047668264246`", ",", "1.3496547583989287`", ",", 
     "0.6830225774268248`", ",", "A"}], "}"}], "]"}], 
  RowBox[{"(*", " ", 
   RowBox[{
   "Works", " ", "in", " ", "MPC", " ", "sense", " ", "with", " ", "both", 
    " ", "constrained", " ", "and", " ", "unconstrained", " ", "scripts"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Energy", "[", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", "0.6909899189385493`"}], ",", "0.6897150795907763`", ",", 
     RowBox[{"-", "0.7182564346929077`"}], ",", "A"}], "}"}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Works", " ", "in", " ", "MPC", " ", "sense", " ", "with", " ", "both", 
    " ", "constrained", " ", "and", " ", "unconstrained", " ", "scripts"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.8653575500541015`*^9, 3.8653575502740326`*^9}, {
   3.86535820377712*^9, 3.8653582040260406`*^9}, {3.8659655274867916`*^9, 
   3.865965528011625*^9}, {3.866038916664071*^9, 3.8660389170649424`*^9}, 
   3.866039137588791*^9, {3.8662985288122025`*^9, 3.8662985558464513`*^9}, {
   3.8662993319152403`*^9, 3.8662993475391808`*^9}, {3.866299398205779*^9, 
   3.8662994288358645`*^9}, {3.86629946644569*^9, 3.866299466748592*^9}, 
   3.8662995366149793`*^9, {3.8662995715646653`*^9, 
   3.8662995977132006`*^9}},ExpressionUUID->"b9cd0173-657c-4653-9d1b-\
b1d172b2172d"],

Cell[BoxData["0.5409841449619704`"], "Output",
 CellChangeTimes->{{3.8660390743381987`*^9, 3.86603914292107*^9}, 
   3.866298560402975*^9},
 CellLabel->
  "Out[1544]=",ExpressionUUID->"c6bdce7f-dc38-4887-92bd-ff2cb6d9da44"],

Cell[BoxData["1.5182970043634338`"], "Output",
 CellChangeTimes->{{3.8660390743381987`*^9, 3.86603914292107*^9}, 
   3.866298560406974*^9},
 CellLabel->
  "Out[1545]=",ExpressionUUID->"731384d3-0bda-4e58-a666-53d8e039173b"],

Cell[BoxData["0.9937373965832886`"], "Output",
 CellChangeTimes->{{3.8660390743381987`*^9, 3.86603914292107*^9}, 
   3.866298560408973*^9},
 CellLabel->
  "Out[1546]=",ExpressionUUID->"a5b78502-7477-4f93-9b49-69b258772eb9"],

Cell[BoxData["0.008420046823809028`"], "Output",
 CellChangeTimes->{{3.8660390743381987`*^9, 3.86603914292107*^9}, 
   3.866298560411972*^9},
 CellLabel->
  "Out[1547]=",ExpressionUUID->"9c80e7a4-072b-48df-9242-7b3b5a078c7a"],

Cell[BoxData["0.2126104012178086`"], "Output",
 CellChangeTimes->{{3.8660390743381987`*^9, 3.86603914292107*^9}, 
   3.8662985604159727`*^9},
 CellLabel->
  "Out[1548]=",ExpressionUUID->"51eef66b-dc2c-46b2-a954-452519f744dc"]
}, Open  ]],

Cell["Test computation speed with A = 0 and Areal = 0.2", "Text",
 CellChangeTimes->{{3.866310813683607*^9, 3.866310829802389*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"6dcbb24e-a9ef-443e-b5e2-a43dfa73ff1f"],

Cell[CellGroupData[{

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"n", "=", "15"}], ";", 
   RowBox[{"\[Tau]", "=", "5"}], ";", 
   RowBox[{"\[Tau]1", "=", 
    RowBox[{"\[Tau]", "*", "1.25"}]}], ";", 
   RowBox[{"A1", " ", "=", " ", "0"}], ";", 
   RowBox[{"A2", "=", "0.2"}], ";", 
   RowBox[{"order", " ", "=", " ", "4"}], ";", 
   RowBox[{"maxIter", " ", "=", " ", "100"}], ";", 
   RowBox[{"maxError", " ", "=", " ", "0.01"}], ";", 
   RowBox[{"uMax", " ", "=", " ", "5"}], ";", 
   RowBox[{"maxCount", " ", "=", " ", "5"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotMin", " ", "=", " ", 
    RowBox[{"-", "2"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotMax", " ", "=", " ", "2"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Min", " ", "=", " ", 
    RowBox[{"-", "\[Pi]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Max", " ", "=", " ", "\[Pi]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]dotMin", " ", "=", " ", 
    RowBox[{"-", "2"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"\[Theta]dotMax", " ", "=", " ", "2"}],
    FontWeight->"Plain"], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"xdotMin", ",", "xdotMax"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Init", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]Min", ",", "\[Theta]Max"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]dotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]dotMin", ",", "\[Theta]dotMax"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"ICs", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "xdotInit", ",", "\[Theta]Init", ",", "\[Theta]dotInit"}], 
    "}"}]}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"-", "1.5919233888024076`"}], ",", 
      RowBox[{"-", "2.626560404936485`"}], ",", 
      RowBox[{"-", "1.8337732091632066`"}]}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ICs", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"maxJ", " ", "=", " ", 
    RowBox[{
     RowBox[{"uMax", "^", "2"}], "*", "\[Tau]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"InitGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"EInitial", " ", "=", " ", 
   RowBox[{"Energy", "[", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"ICs", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", "A2", "}"}]}], "]"}], "]"}]}],
  FontWeight->"Plain"], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"time", ",", 
      StyleBox[
       RowBox[{"{", 
        RowBox[{
        "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
         "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
         "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "Jff", ",", "K"}], "}"}],
       FontWeight->"Plain"]}], 
     StyleBox["}",
      FontWeight->"Plain"]}], 
    StyleBox["=",
     FontWeight->"Plain"], 
    StyleBox[
     RowBox[{"Timing", "[", 
      RowBox[{"ffCartPendulum", "[", 
       RowBox[{
       "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A1", ",", 
        "order", ",", "maxIter", ",", "maxError", ",", "maxCount", ",", 
        "maxJ", ",", "InitGuess"}], "]"}], "]"}],
     FontWeight->"Plain"]}], 
   StyleBox[";",
    FontWeight->"Plain"]}], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x1c", ",", "xdot1c", ",", "\[Theta]1c", ",", "\[Theta]dot1c", ",", 
      "u1c", ",", "J", ",", "error"}], "}"}], "=", 
    RowBox[{"testWithFBClipped", "[", 
     RowBox[{
     "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
      "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A2", ",", "uMax", 
      ",", "K"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", "time", "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"p1a", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1a", "[", "t", "]"}], ",", 
        RowBox[{"u1a", "[", "t", "]"}], ",", 
        RowBox[{"x1a", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1a", "[", "t", "]"}], ",", 
        RowBox[{"xdot1a", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1a\>\"", ",", "\"\<u1a\>\"", ",", "\"\<x1a\>\"", ",", 
         "\"\<\[Theta]dot1a\>\"", ",", "\"\<xdot1a\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Feedforward solution\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"p1c", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1c", "[", "t", "]"}], ",", 
        RowBox[{"u1c", "[", "t", "]"}], ",", 
        RowBox[{"x1c", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1c", "[", "t", "]"}], ",", 
        RowBox[{"xdot1c", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1c\>\"", ",", "\"\<u1c\>\"", ",", "\"\<x1c\>\"", ",", 
         "\"\<\[Theta]dot1c\>\"", ",", "\"\<xdot1c\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<LQR feedback solution\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{"p1a", ",", "p1c"}], "}"}], "}"}], "]"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Tau]New", " ", "=", 
    RowBox[{"\[Tau]", "/", "3"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Init", " ", "=", " ", 
    RowBox[{
     RowBox[{"\[Theta]1c", "[", "\[Tau]New", "]"}], " ", "-", " ", 
     RowBox[{"Round", "[", 
      RowBox[{
       RowBox[{"\[Theta]1c", "[", "\[Tau]New", "]"}], ",", 
       RowBox[{"2", "*", "\[Pi]"}]}], "]"}]}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"IC2", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x1c", "[", "\[Tau]New", "]"}], ",", 
      RowBox[{"xdot1c", "[", "\[Tau]New", "]"}], ",", "\[Theta]Init", ",", 
      RowBox[{"\[Theta]dot1c", "[", "\[Tau]New", "]"}]}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"initGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Lambda]1ff0", "[", "\[Tau]New", "]"}], ",", 
      RowBox[{"\[Lambda]2ff0", "[", "\[Tau]New", "]"}], ",", 
      RowBox[{"\[Lambda]3ff0", "[", "\[Tau]New", "]"}], ",", 
      RowBox[{"\[Lambda]4ff0", "[", "\[Tau]New", "]"}]}], "}"}]}], ";"}],
  FontWeight->"Plain"]}], "Input",
 CellChangeTimes->{{3.866310861993969*^9, 3.8663108764762793`*^9}, {
  3.866310918668623*^9, 3.8663109267929964`*^9}, {3.866310994358122*^9, 
  3.8663109985797553`*^9}, {3.866311859242159*^9, 3.866311866960662*^9}, {
  3.8663125695042505`*^9, 3.866312588432122*^9}, {3.866563598159934*^9, 
  3.866563603232319*^9}},
 CellLabel->
  "In[2084]:=",ExpressionUUID->"4586b62f-1931-41f8-b45d-20c47c3c2d76"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   RowBox[{"-", "1.6851945913353008`"}], ",", "2.725490843324895`", ",", 
   "1.232626343325748`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8663109335478053`*^9, {3.8663109999823008`*^9, 3.8663110214563494`*^9}, 
   3.866311194894208*^9, 3.8663118684581766`*^9, 3.8663119082363005`*^9, {
   3.8663125738458433`*^9, 3.866312597307249*^9}, {3.8665635939962616`*^9, 
   3.8665636095343094`*^9}, 3.8665657963703446`*^9},
 CellLabel->
  "Out[2094]=",ExpressionUUID->"f609e647-0941-46a3-84e6-74dea5982a11"],

Cell[BoxData[
 RowBox[{"-", "0.2`"}]], "Output",
 CellChangeTimes->{
  3.8663109335478053`*^9, {3.8663109999823008`*^9, 3.8663110214563494`*^9}, 
   3.866311194894208*^9, 3.8663118684581766`*^9, 3.8663119082363005`*^9, {
   3.8663125738458433`*^9, 3.866312597307249*^9}, {3.8665635939962616`*^9, 
   3.8665636095343094`*^9}, 3.8665657963733444`*^9},
 CellLabel->
  "Out[2099]=",ExpressionUUID->"c9c5cfca-9d8a-422f-8c07-34a018db6d95"],

Cell[BoxData["0.15625`"], "Output",
 CellChangeTimes->{
  3.8663109335478053`*^9, {3.8663109999823008`*^9, 3.8663110214563494`*^9}, 
   3.866311194894208*^9, 3.8663118684581766`*^9, 3.8663119082363005`*^9, {
   3.8663125738458433`*^9, 3.866312597307249*^9}, {3.8665635939962616`*^9, 
   3.8665636095343094`*^9}, 3.8665657967222323`*^9},
 CellLabel->
  "Out[2102]=",ExpressionUUID->"c4c3a4d3-c052-432b-a0be-e1f24f246559"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
vz+BsFVyScJlP0qPUo9g7V0GO+yTRGqx+S0pZsv7iV+ckOOVRG29whD9PoUf
F46cdN8lDvwFV/jkOpfApBZFehzbP1S+zzlyQ4sT1ryfebsbqy/8fgXCq7Ov
vN8bgoGWC0lcZsuAZ8oqyM+bClIWd+3OC+CERs1n58ax98PvV5Cznw12f8OL
/if/hFB38v4me0GE37fwedjgrf1nf4D7KELXZ64bHM+i+yhFakVZ8dZkgPsk
tiYOa+FLFID7JAmV7X++b+sDuE/SEEVu2sY+AHCfZJcpq+mg+SCg36/QcsVx
Ezb+cZ9Eu+OI01ns+3GfZNOHCKk//FSA+yQfKt1LjQoGAO6TWBwp3+Vp3wdw
n+T/VHfn0VR2/ePHlUMROofMU6MkSkKk7F2KUjSQDJESaVCSMmtA0SARUklp
Mg+hOVdCaSCRDIXDOcfBwTmmk+HE73p+696737qf9fyee33/+z7/WfeT4TrX
de2913qt90dp2tqYmKNtAHmSqSuiwvKvNmEfUvBMUcfcrolAPuTWXlpS6v42
AvmQ5Y3BDsxSJoF8iIFW5u73e9kE8iEiy5MHfn/qJJAPGbW4rtpFrt/Ih1jJ
39u1+3YngXzIQfaOWKoemxgb5sao5M6Ed88HapozmLgHcba87XFjfjWBehBw
b2r4Xo8yAvUgDE8waDpXCgnkS45Xvh6eWZWEfUmlgmzKq7sLwX/zJagXIeTq
cfWIwR6AehF5nzhzbsrdBagH4a/8Ke/aXBZAnoQVtDzs4rsOgHoQTOKN0DsG
G6AeRF+3f37iiU6AehBmh3PHQ1w7AfInnDl7g4fPsQHyJ9+LM/VfFrIA8idp
jEONr2YwsB8xdy9dcUmXQSA/EiQyeX/YsINAfsRGVmzesGEngfzIY6r4yb0L
uwjiNvwQry4JadIiEfaSXcQ3mV13rs6VgrfO5pgdEOrEPYoj4+Kri2cWE6hH
we35vQ04phPIn9g9fJacfjKU+G/+BPcqHh+tWf91PoF6FZFq+bbqLxIA6lEM
g/hzEelsgHoU59z66s/u7gTrz5hb3xkbA+b6jfmuvp2gWTBHAvwWAM+ewiCV
OjZA3kTp0sdYozo2gbyJLuVdSvrULuK446PFYT8loMakS+BL8nx7ZOip0VSm
JIy8s6/t+o5O3LuYZxNYknw4j0C9C2I7EfjrdzTxd6+C+hd0vnuL3IdAgPoW
zsWvfO1kO8FYt8mEH38U5BQqpPwi3zfOPguStvPHwe1zX6ZEkvtv5FMWvXfy
k4vqJFKDLW7o7ZCAltu5p13J9VuC0eiRtlcS+lf//NXa3Il7GbyHF/uM8lMJ
5FkKtZKD9B/uJf7uWXA/gzm+TvKtCTEr4of0xgcjQL0wZmgZuX5OlkW/LHg5
BvTO3pDqI9dvQen8OveMGZC60EY/vquTsHrW9HP0hQQUe3nwrAt5/kJ9jcV0
ZV0fctONfMthse0pW+tWANTXmL2X8WXhbW/wWeyKwfSCUbBlltfMdeT6Lf/E
S9Tj6Th4WfNcXILcPxTulHwotlwCRhS/Yswiz48sKKmgvkYSrg4xOZj3qxP3
N742eGV1XvYhcH8j9uwjTpw58LYwuK+pPQoSY3UkJw51gourJ+iXjMfBrBVX
2d3k1w2SSa+f9s2ATU/DNdfIdxFJguOBEhMSkGc6dUhcvQv3OrTaJiA76Byh
+bnzHdt4DGh4C0QeketXzN0z0U5+EnCBKZ1qTa7fqNfB3s8/dL3VnPi7l8H9
DleP8ZcFBoTxfl8DgwwJ+P7pRMQj4y7c62i323Z1eMoKgHodp7WnJV3M8gSG
SUbbtl4dBTKPKtduJj+PVet5i4fnSMDlyrMlPuh04X6HZeybVKaOP4H7HZob
z812XASavrcQ3uKjwPfzFbayRyfw3J2aKKc0DrS+XfgY5t0JXMeDzO41z4Ax
r01uhJPP+7lMyVqLXgmYfuHCsn0aXUSsU2z7UoUxUE+NuJhH/v0KV/bNsvCQ
gBattn57yfUR9T8WqmV9reXbEbj/8eLeQCpvBTH3XjdF68cYUA4PCwzzI3+e
2Jrw4k8SsOn+1D0z9bpwD8QzW3H0lZU22BfIUnzzbRRsTyx7FEKuX1oHtWar
rZOAVZkHKBYruv70QaR6r9Y93QHerAKZKU5j4NuTDRmN5PM0vfD2dO9I8jyo
IHd2Pvn5oD6IYm8UZ660BvF3r4N7IdUKASH1OkSuaUlbzV0JeOpVmU0X+byh
foi2zdPItsd6APdChDYkuXSmF5vP28+zmTYG9j7XsTpMXp8WEbv6V84S8KlB
vGP4v9Yz1A+5qZz8UtqEoBauoh/5NAbKpkxkfvHvxD0RvXf+7nFb9YHC2hcL
maWjIDp+4pk/ef7m0ZUZcSYS8JDqdKVt5H7ZlzLreanlGJDql+qyJ3/eZ62Y
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
dGbdW1fyftC/W5g5ebUNXBNc2nmV/P79L7YfYZhRYCBU2l1Bvt9Ejce+3dwm
Amu/Jx1dZygAI2ssuG/F24CPYctQ7FUWYWi9QGvnMSo8XlNmMY/8/si/KmU9
6m/k+4KzLzRkzB0l4RWXw482k3+Pj9Bcz1WK7UArwuXEVPJ5kH+/LXueBwXO
iPNSVCP3l1Nan55cu50Kvwpi6x6S1/f/08ube+50oinyrm383YaX42pwL+/B
U04zbScd9/Iq9We/5Fxk4l5eeZ9vdW1tB+7lURV3XfmZwsa9PCljqSNvpdm4
l2f6UPaiywkW7uVdk0uxb13AwL28UmA6Vh5Ox728r+4/HVuWNOFenmof83Qp
owZ7Vw2ZYDtJlXLsXa+FhT6/ruKD5/OZUiJNjve/x/P5Zt0/onvergnP5xO3
vCYVNMDE8/lC1X2Vxfb34Pl8v2VqpWM+9+P5fEuEVdnHzg7h+XyPbl7/6LyV
j+fztdZpZYL7fNzLu3dqxYLZF4ZxL88p1aRlbOEg7uXN7rI+/5rLxb28mW2h
35WPd+JentLKnHI5t1bcy7t34fZsw/pK3MubJZrclGqWir1rSU3wJZ3Sr9i7
BoY9tVVxacHe1dc5r5v7mYm9a7DPpcQV+Z3Yuwo+bW7RleNg73o1wDvNrZ+D
veuz+pbyyLFu7F2XzUuRbmxnY+8a4vRM5cFYO/aul7aqfjHY/8e7dvVT7Zbk
/u/xruLLFcrXTSvDvbyYrRu/yjk04V7euwupO5cUtuNentZ8zlg2k4Xn9d13
aYotO8TG8/ri5osdzQ9mA+RdvzSOjW507QDIu/76unlVw24m7u2NLq+ur2C1
4d7ey7sy+cFvm3Ffr/zg9SkKtZW4rzcrzCuZfqoI+9hXdrpXb87i4fl6cvtP
J2SZDuL5em/rxApd44cJ5GOvf+tLMMzi43l7cvs1jTNN+ATysetXSb4wDRki
UF9vYJx9tyanH/f1ascCWA2benAf74kBK5tj3YC9q2GBwzwL8rog76o8oD/S
zenA3lXBdoltnXQ39q5vpl4x0H3Dwd7VJMU+yDKHg71rdGTOnYzCLuxdJ7vp
6adzWNi7HhU6s6k6qxV717QGhsn0sqr/sXedXXfbPqCiECDvWufY4hr+8Dvu
6V3uWWsom9iGe3pnMmwbtcxZeF7ftAOLSqbpsPG8vvuhvM3mSWyAvKv+0RKR
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
of7v//4PS6YfuQ==
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{504, 2769, 425, 426, 427, 428, 429, 817, 712, 625,
                 555, 503, 470, 837, 732, 645, 575, 523, 856, 751, 664, 594, 
                430, 818, 713, 626, 877, 772, 556, 863, 758, 899, 671, 887, 
                782, 906}}], 
               PolygonBox[CompressedData["
1:eJwV0jdMVWEYBuADaDTExFhQehFlt4J1sCT2ARxsoGJNTFBjjL0MmmBXwIqD
iQNudsWCvZsIKoxKERu4gIOJCeDzD0/e73v/e+695+RkFW/IL4mNoiiGz9TF
R1EtRxSJcVF0xeFCBvJFV0Ou/r19KyPp0h0lSX/VvohBNOoekqevtW9jFN26
YyTrr9kXM5gm3SOOk+Lsum4JCTTrHnOCVGc3dEsZQovuCSdJc3ZTV8hQvuqe
Ml5fZ9/OaHp0ZaTrb9mLSKRV94xyMpzd1i0jiW+651SQ6eyObjnJfNe94BRZ
zqp1K0jhh+4lE/Qf7DsYEx46p/XD9HfNxaTyUzdT12guZSqvdBN1H807GUsM
+bpfsoy5rLV3yyrOuCbbfs+8kvXmWNLCM5cd8jxbzP3C9/j8LNmk2ysPyo2y
T5iZFr5H/pMH5KVwL3IAh3nt+knyk36P3CVLZG9KGReel/wr98uL4Z2Q/cP/
MhfINlnOZnM888zrZI+8zFm/Mdx+37yK9PCO2DtlJW3OZ9ubzYeYzhvdZF29
eTe5xLFA1y4rmM85nxuhe2BeTUZ4x+x/5AXanc+xt5j3hXuWm2RfZpjfOp9i
bgj3Tx69wjPW5+hrzGvI5LfuHZX8B44KcIU=
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{391, 2770, 2767, 508, 560, 630, 717, 822, 444, 
                477, 529, 599, 686, 791, 395, 507, 559, 629, 716, 821, 443, 
                476, 528, 598, 685, 790, 394, 442, 475, 527, 597, 684, 789, 
                393, 392, 441, 474, 526, 596, 683, 788}}], 
               PolygonBox[CompressedData["
1:eJwV0NsvlgEcB/CnjMJsrf9AJYeOtyLpsJJVaMNVbcwhqd7WzGbNKplupG7S
TTo4dPgD3Dqkww2hIuoy6saxaBk2n+fis+/3932e14vE0sj5a5uDINhENyNx
QTDKa8MrXjLGP9K8eJ2PHIwKgi7bV5ZJtUX4wAHPOm1fWCLFFn7Je/Z71mGL
07No5Acn7J/tufpDfpNv+2tL1q/yjn22dluB/pg5im2xsp0VSt2H5V2+c9w9
Gv4t+joV7tMyVt7ggf6LPP2P9xJkLU9tDXJZXpS75T0ZxZWQu14OyL3yhc82
y+3c5I29SQZUke+OlzW06nfkrCySW+U2WRf+HP0/JXqmjJERGvRJjukjvqtL
X6PcnSNbmOace9HzNn2JC+4kWc1b9rife56nP2KGQtsWmRH+Xkxw1DbsvVP6
faY4a1uw7dIv00+a7ZktRj/Ebb6Rbf9k79RXKXOflM385Ix73vOdehV9pIb/
d1u0ns4txjliH7LPscN9iV5S7G22QWZJtFXSQ7JnT2wbo61fxw==
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1Hecz3UcwPGzVzh7j7N3ZJVkFScUGWXTZYdDGdmZ0Z6KqFSUEW17FbKy
R2iXomE0jKzn+9Efz3u9P+87j/v+vt+vS0pJbTs4TUJCwjRfomV9OajD9WVN
0dyMp79zO03HaLY4D9JiTKK5c1P9R0fpCu2vhXiUGc5d9QZ2m4dqEjXNN+uv
upg+5vyMNXfUzOwwd+Eu8xXdwHOkpZzdIX2FAdxJM7t/dSUzqcUtdid1CePi
WkhHefvDOpsHaUFt0pOBjGSigp87onMYSEvqkJmKvveVvhr3hFbUpZ79KV3K
eLqRhUr2R3Uug+NzxT3gVvvf9D0m0J2sVLY/pvNI5W6S7c7rKh6Pz0d9u991
GRPp5JyFneYe8e/MV3Ujz8fOOSf7zNmoYj6ur/GAOQ9DzO01PVvjerU4rc3N
9YKujntvLswT8Tk1O3vMw7QUU6nnfJv+oSN1ufbVAkyM98S5s2aN588u5yFa
kin0dG6t1/QR3RTPTIvwgrmnJrLf/JCWjvfNXFW/1tfpZc7LUHMHzcAX5jbx
7pgv6hqejOdBA7s/9X0mcX/8bPxn4TN5kexUc/5G34jPzD3xLtld0rU8Fc+H
hnan9QMmk0IObrT/VufHtdM27hWN7M/oh0yJ50JOqtt/p2/yMO3iWmlsf1Y/
Ymp8XhKpYf+9vsXweKZxLeTiJt/7Qd9mRNyX+L3kJg95yUd+ClCQQhSmCEUp
RnFKUJIkSlGaMtT0O37UBfHsuTeulbLU8r2fdCGjuI8mwf6cfsw0elOO2vY/
6zvxHtCRlnb/6Tqe5vZg95d+wnT6xHOJv3V8bn6J8tRxPqHvMjquzTkj28yd
aGW+rOt5hu7OOdhrviOY/9ZP6WcuyGPmLpqNL81945ma07LZPFCLMiveKc3F
OA7E89Qyaf7/u1zBua7+Es9GF8V90HxMYEzcL80UM9udU7UEk+ns/CxN49qo
SDMqUZkqVKVavIPxXsW7QnK8F1wHNvellw==
               "]]}, Annotation[#, "Charting`Private`Tag$389369#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1WW4VGUYBdChpbu7u7u7G6QMUGxFQFEQRbHoTkFauhukG6S7u5FGStr1
Pf5Yz37f/c1c7pw5h5u5bYcm7aNEIpE4USORXoZk0SKR2ebXScAJ3Qp604fk
zufom5GQk7qV9CWFs7m65iTilG4VxfW77F9TkGe6fqTUz7O3IDGndaspod9t
70whnuv2xolE+stUzubrWpKEM7o1lNTvsXehMC90A0itX2BvRVLO6tZSSr/X
/g1FeKkbSBr9QvsbJOOcbh2DSOtske5NknNet57BpHO2WPcWKbig28AQ0jtb
onublFzUbaS0fp+9K0V5pRtKBv1Se2tScUm3iWFkdLZM14bUXNZtZjiZnC3X
vUMarui2MILMzv7UvUtaruq2Uka/3/4txYgwUp9Fv8LclnRc09XSnTX3pgrb
dGV1B8zfUZwoNNH9LYdSj4/sL+V0fvOerPaV5vf4zByV9OGay3vy93CvmOOF
n+P1teU5XXfZR3aUscJM1fBz5FPZQ04On0Umph9/eX85eVD/g+wm28sY9KZE
uF7ysfxVTgz3hEwYfi9zU3ldDqOTOQ71zR/LV3IGo/wb2eyrzO+TIdwj9n/k
GK47r2M/b+5LNbbryusOmb+nJNHCc6e7IYfTgNFel1232vwBGcM9Zr8vx3LD
eV37BfOP4TPLL+RrVDfvcF7BfDh8fkoRPVxjfQ79GvOHZOKmbidj2Od5Gytz
es3a8B2SmVu6XYwjl7N14VqQhdu63VTUHwnfF6WJwXh9bv168ydk5Y6unu6i
uT81wvWzP5NT2OO8kv1o+GyUISYT9Hn0G8yfko27uvq6S+YB1GSvrrLumPkn
yhKLZrqbcgQNmeh1eXUbw/1I9vCs2h/Icdxz3sB+2TyQWuG7sD+XU9nnvIr9
uPlnOphjUi48b/JfOYmu5kThuzE3l7fC7yVHyq9kXBqF6yMj9GRmeLZkEvoz
yb+VT24K941sJ9vJaPQih721fBh+Fzledpbxw/3ovQ3lFd0gvjTHpna4B+QL
OY39XlfVfsL8C+Vpa38i/yA2Ley3w/NM49B7T37dZvPn5OS+rpHuqnkwdTig
q6Y7GZ43KkT9/2/PZH0B/ZbwfJKLB7qDTKGgs63h2pKbh7pDTKWQs226juTh
ke4w05jODPa7n2fKWcxmDnMpHP6PCM8MeXmsO0J1/Sl7DyoSl5a6O3IUTZjn
dUV028O1DJ/bHJ185jbyUbh+coLsIhPQN9wP3tdYXtMPoS5HdTV0p809qUQ8
5uuL6neYO5GfJ7pjLGAhi1jMEpayjOUU876d4d6iAE91x6mpP2PvRWXi00p3
V46maXiu7FGYZe4mkzIg/A3x/v8A9C0LRg==
               "]]}, Annotation[#, "Charting`Private`Tag$389369#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1Hf8VQMYB+BbSkobTdFCkZSGprQHRTvR3nuqSLbs9kBoT9rR3nvvPdCk
FNE28rx/PJ/3+37POb97f+fec3O17Fana5JEIlEpaSIx6I5EokzyRGJVskRi
kdnU/MbMzQbusX9g3s0KpttnmoXZwo+u725e0S81h5mTzfxUlUeYWfhBnm8+
Fa/lmpfiWt0AxssP8aQ8yMzIHPk/5w2QkzDWXo/BurL21XIz7uUnXQ/dVXk4
1Vite1n3k/wGRbitG8LT+jX25tzHz7o1DKWcY2t1LcjESd1ahjGcEYxkFM84
d51zWpKZU7p1jKa8Y+t1rcjCad16muh/tr9JURJ8rq8Q91tuTVbO6DbQVH/S
/hbFSMIX+or6jXIbsnFW11N3Le451dmoa6Y7Jb9NcZLG/dAlZZxcny+dV8m+
SW5Ldj60p2aGfM7xXvJ1eSRT5EepEbuZlYXyJuc1l0/L7zBBfjg+8/jc4rsU
nxtz7XPNYmzjjrgfMVnGePsMs2C8JxrEezQfiM8mzrEvMEuwgzFet7K5Wd+O
+/nInoaVfGufFd8vfnFub/OGbhRT5cd4NnYzG4vkzc5rIZ+R36UEQ+z3Mk9O
Fp+JnIwJckO+ck2VeC7k9uTgV90rupvyaJ5ji66l7qz8HiVJztf6qvqtcgce
4LxuK6305+zvU4o74znVV4t7KHfkQS7ottE6/lf7QEqTgrH66vrtcidy8ptu
O+OoEfdT15lcXNTtYDwTmMgkJvOsc3c6pwu5uaTbyRSec2yXrit5+F23izb6
X+P3hDLcFfdfX1O/W+5GXv7Q7aat/nx8FylLSqbpa+n3yN15iMu6Prpb8SxR
kz26droL8V3gaVLFc6BLzkS5EdOd97x9r9yDh/nYnpbv5D8d7yv/Hc9dvL5c
gFrxeZrZWSzvdV57+be4nonyI5STh5r3xW8O8+3zzOLxOcTvajwr5p0sZ5L9
W/OJ+D7zon2M+WD81sQ59u/NknH/4/n0ui+Y+/SLzZ7xOZt54vXlT8x0zJRn
m0X4yzX9zH/iuYp7ID/O83H/zPtZIu9zXgf5YvwdnmGYPRML5NTxbMgpmCw3
jvfumtr2/XIv8nFF96ru3/hfeIH9uo66S/KnlCcN3+nr6A/IvcnPVd0BZlLX
sYO6V3iUa7qDzGI2c5hLPecdcrwPj3Fdd4h51HfssK4vBbihO0wn/e/2z6hA
WubrG+iPyP14nJu613T/xTNPbY7oOuv+kAdRkXTxfOvuYor8Eguc19B+VH6V
gvH/29MzS77leH/5dvweUCe+d/YcLJWPOt5FviwPZpKcj0rycDMz38vp47dC
TsnUuK9mIV6O92zmZD0r7D+YpeKZjWv9/UbmMf0S8zVznJmXjfG9jPtjZmAV
s+1zzKLxuxXPietfNxN841hdjum62v+Uh1CZDPG6+hf1x+X+FOIf3XEWsojF
LGEpy1jOChq77oTzX6cw/+pO0C2+3/HMUYWMDNSlYprcJO6rnIuV8kKzdPz+
xO76/wEHXTkX
               "]]}, Annotation[#, "Charting`Private`Tag$389369#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1Hf8TnUYxvHH/MlIirISSWaKyl6RbIXMlDKy995CVEaEaBipNKwoKmVV
pFDZo7K3ZMvW+/7j87qu676/zznP+Z7vufO07Fq/S7JEIrEweSKxOVUisSEp
kXgM36VOJFoiH1LilFpD/MWPwFPYYv1GtcfxvdwKDyIV/lVrhL/5kaiGrdb/
plYCy+XWyI/b0iQS3dUu8zORGqflxtjDv4rqyGbdK2ppsFDe5nq/8yWxQm4T
/9eacXJmFJDTyj34K/wsJOGM3AR7+VF42Jqpci7UkLPLw/nb8Az/Df1CvRz/
EV8Y2937D1oKK/Wq6s3nX4494MfznWiW2Ae6gvanBfXT0Z5yO3pVrk2/kvvQ
D+SSdKbcjT5In6dr6GCaRv8s3zTuJe+LvaFfyKP5R/hp/H1oxv9Aa6rn4Efw
aVGP/5YuUi/Pf8wXwQ7PtImWxiq9tvF+9N+U70YhOb3ci7/Gz453h3NxL+zn
X0Mt7HStzWplsFpuh8LxPrBLb4t6Wfwgt0eR2Bfs1vsTf+Fv7MFe7MN+HMBW
vyuHH63vgIfif+G82nM4wL8e+4qD1m9TK4+f5I4oigy4oNYcB/k3UAeHrN+u
VgFr5E5xPmK95+6tdp3/ELfjYrwbHOLHoC5yWjdSLR0Wy4ddbwdfEWvlzihg
zQT5HjwS15L78Df4j1BKniXnR0b5En0Bh/kaeov4sXwx/h0+dzw3/yN9Wv1e
/lW+A01P69NltC/9Ur8CnSN3pw/RF+k6OoQe8X938pXQWv45vnW6QO5Ju8gF
6US5M80a3yldSYvpZeT78jdjP/kl/Md86Tjb8U3iDvk/2gJH+HEorv+unCe+
OTmXPIrPgAb8d7RffCd6FeknclEc9X930SewTq9rXAuZcExvt3pl/CJ3w6O4
E8f1TsRZ06uCX9W64zHchcuxL3F9fjzq4WScS7UnsV7ugceRGVfUXsIx/k3U
xz9xhtWqYoPcEyVwh//fT+0WPwdZcFVuieP8BDTAqTj/ak9ho9wrZkM8m9/3
V0vgE/luXONb4QQ/MZ7Tmvfk+/GsfJ88mr8dS+RK8qf8w/g3vjFaDb/p9UYh
/bfkbDHjYs/kAXwy1OWX0k/Vy/Cz+YJxRvm1ca7Vr8f5QVu1k3JNuljuHdeN
fabvy11p3vgO6U90EG2on5u+JnekGeMZ6Pd0qd4T/Gfx7cSe87/Q0zEjaHX8
bk2fmDd6k+TsMdPivcoD+eT4TM6KG3wb/MNPQiOciVmjVgN/yH3jOZENN9Ve
xil+MhrjbMwltZrYJPdD2TgX7jdILQU+l7PjVuxJ7Dk/Jc6PNdPlB9BEziO/
Ht8IGvLL6dfqlfnP+R60WJwV+isdSs+5/0G+VjyLvNn6anSh3CvOSsxXOlnu
QnPEvegqOoCWizNIB8vtacqYI/RrOjeehf+QLxTfbMwEmkM9wbeLvedrxWzh
344zzs/g86GpfL/8Bp8J38hV5Ll8cZz33w/R2tiiNyDmuf4UOSfKx/mWh/Cp
MC9mLJKptZfP8FPRDHnVxqjdiW9jvrv2Yb4OtsoDY/bhHuuGqqXG/JiXSK7W
QT7LT8NzMd/9/kicd2yTB8XsidmEFNZ3VD/Hv4PmMaetPxp7h+3y4PjO4ttD
Sus7xfPy7+L5mIHWH4t5hx3ykDjbcfaRyvrO6hf49/BCzCTrj6vVw055aJyL
ODNIHbNZ/SL/PlrETIoZp1Yfu+RhKGrd2/K98W741XQgrRLfAx0mJ2FBvDck
qXWVL/HT8WLMKtc9qdYAu+VX8GTsf8whveu4gZu4hUS8r9jjmInxLeNPfjiq
4gGkcZ9u6v/xM/BS1NXGqt2FZXEPeR7/aMw6fj0dRlPo/Q9IPl1p
               "]]}, Annotation[#, "Charting`Private`Tag$389369#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1HfYjnUYBuAX2UTInpGZEcnKJltIIXuW7D2zyd4pO1v2zF7ZssrM3jsj
I4l0/v44j/u6r+d5j+9732dkaNKuRtsokUikatRIpH+sSKRInEhke+xIpC7x
OK5bTT39ZXtvcvJUN4CP9Dvs9YjPCd0a6uuv2L8hF890Aymq/8Venzc5qeuk
ey5PoAxrdQ10V+U+5OZv3SCK6XfaG5CAU7rOun/kiZTlZ11D3TW5L3l4ruun
i86P9uoM1hW375IbkpDh9gQskk873kV+IX/Hx3xvT806eZ3jjeTrcj9my1l4
Xx5nJmWlvMzMF/5H5/c3Y7CRWY4tNHOyhxr2aWaG8Juy2b7KLMBBhvh8CXN3
+I5mI/NH893wm/CWfYSZkC0sti8287CfP3y+q/mvfoM5yZxnZqec/IOZhvXy
euc2lm/I/cnLeHsyVskvwvWXYzLb/inf6kqG7yI3JhFndN10L8NvR/nwt3VN
dDflAeTjX91QSun32puQmLO6jQyjtGP7dE1JwjndJoZTJnxHXTPe5rxuMyMY
SVnHD+ibk5QLui2M4mPHftW1IBkXdVsZzRjGMo7xlAvXwjlfkpxLum1MoLxj
h3RfkYLLuu001d+yD+QDXuomUkF/2N6SlFzRdde9CteCCuzQNdPdlgeRPzwn
9uSsll+F50qOxRx7zXCv6iraj8hfk4qR4f5giXzV8R7yf/Jk5ss5qBh2My0b
5JXmh+F5dX5z8064L8zB5hwza7gXwznh2TNTsI019uXmB+F3DX8nPLtmbDYx
1/GfzFzhWvOZfbr5Trhv5dVmwXB/+lwl86iuFakZZU/EUvma4z3l1/IUKrFT
10J3Vx5CAV7rBuviMM/+ebgXdZXtv8mtScN13S6+1N8L9zMFiYTroa+i/11u
Q1pu6HYzmaqOHdO1JR03dXuYwlSmMZ0ZfOLc485pR3pu6fYyk2qOndC1JwO3
dfv4Sv+nfSiFiBKefX11/Um5A+9wR7eflvr79mEUJiqz9DX0p+SOZOSurpcu
wlR7ZQ7ovrY/kIdThGjh99TFZb5ci9nO+9R+Wu5EJkbbE7NMvud4bzkK0+xV
wnWS04X3n/yr463kh/II5srZ+Cjcw2ZKtrPWvsLMzxvhupjxwvuRBfZFZu7w
bqC2fYaZMdy3bLWvMQuFZzM8I/5mzfAu1K8zO4ffxczMrvAutY8xk4TPsty+
xHw//P4++40Zlen6BeZ7VJWnmunD/S0fdF5r+VF47ijKJHsqfpajh+sox2eh
XCd8d5/5zH5G7kJm7uv66KIxw/4Jh3Rt7H+FZ4FixGCe/nP9WbkrWXigO0xb
/eNwbShOzPDM62vpz8ndyMpD3RHa6Z+E34ESxArfVV9bf17uTjYe6Y7SXv/U
PpaSxGahvo7+gtyD7OG4/W1WyEvNvOGdHL6Lc/uGa8tMx6rxm66D/Zk8jlLE
Ce8N/Rf6i3JPcvBY9zuLWMwSlrKM5axgJXV97pLze/EeT3TH6Kj/2z6e0sQN
z43uTX6Sv2CmnCm83+S1ZmEOs8rn/wdO00kq
               "]]}, 
             Annotation[#, "Charting`Private`Tag$389369#5"]& ]}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"Feedforward solution\"", TraditionalForm], 
         PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1a\"", "\"u1a\"", "\"x1a\"", "\"\[Theta]dot1a\"", 
           "\"xdot1a\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
jZLokue9gSTNGsB9pka2Gt0p2A26ZD3vue2aAtqd7GWa5P0O+6Lj50b5HpHP
r+oFYeuypCXRvXyl0SVN1ZCncfbdAd1JeO+ckveIqxcin65+p7ZvGh7t9crQ
JL8v7It6FvScqVrdR5w8K923JlAYMU7LZ17S6COccqxi/zVIIG2DM2vlnaoB
+yOGcuhAk+kMYH90ZrZB0PnQ1Dbsj/bwSUaEr35C+aNDiiZPTmtnAfZDrtdO
96SXdwD2Q6UD0pb6Ct2A/RBqmUhQm+4B7Ica6gSq1G+xAPshu0sj77NvsQH7
oaO+Ao0d5PMJ9kN7fw7dz+lnA/ZD/W3POKV08nr1nx/akCmfOqXHBOyHGq/z
Bp5x6gLsh94KpVwwud0G2P/kHlR+7Tevg8D+517+BrnG7m4C+x+DSbU97kMs
AvufEG1F4yEVDoH9T5+0T4fzRvLz/c//9Hgp7rmj0Edg/8NyeRaS29dLYP/z
tOKk2LpqFqHp9blV/L0Y2u+5/Kbcy24C954M9su7R0olAu49rZFeLXRB+Svl
heLjMp+bWZUD9kIzO6eZgzeqAXshJ0N7Tt2/GsC9p4dXS336vRoA954Gl9MG
eqzbKT8kGGVzdkxxEnDPaYvjyVNmIt6UJ6ILsZcnmicD9j69dbpnVy3uAdxr
Mtr79vGdKiZg/+Mhq3nDW5oNuNf0O8XtRjV5PuJek/GiV8OPxXsB+yD6CcXT
lVFswD7ottVLk3pTFmAfdL2k99HtsW5QCBZI8hIUQLXJRuo0wS7K9/wSbdwr
GcgksO/R9RbUvKbZS2Df42yWblFVyyGw76mUZ4usJM8n7HuIf8KFd5PJ6+X+
+vDLSqKIlRf5++Q0m8B9qJWMasOstR8A96Gm47UkRvKKKQ8089F8oadvFWAP
ZJH8b17DWDXgPpRJ36bHml21gH3QYscNpbPdU4D7Tz3EkwfOmkcB95287dmu
Hj9ZgPtOUY0mE58zyOcF7thapZFJ2M9GV/7v39sqLsV0+HLPQJXsiSVKpWzK
G81/an1o6iMLsB8qXX7l0WQkm8B+SNvnPPeeIA6B/ZBOqs2JNXv7iJzBgP0Z
HcJI/0PYjyfDHAL3ojbcs/984UAlYF8UI/Bo8GlONeBelI/OZ6Opxp+Ae1A2
q8cirp0KgdT4wsQX/RPQbMTl/XiUDfI3zSeYc1Pwo9BgaC1fL7BcfNaqzs2A
4tA7HUV7NuWJNNp3mZwS7SOwJzoZWGjsq99H7L34/n6TkwjqsekqrbTgENgX
xV1m2q5aQq7P/+tDdeoueiHrUAPYG4mHy5uYfJ0G3H9yfvXSGW7vAN3lIwuy
Uydh22UpB3fy+exWHtMklPw589teNe3kegd7IxfT0Pyd5O9/YJzBv5YQRl/F
R5VahPsI7I+ajqh0pSdWA+49uXe8EHGxDoT4KTdn/7QJWHYvAr6y2fA7MUHF
8+MUJCmdTO8U7qU8UaKttkTeHw6BPdEyP80URH4fuP+Edjf8/vqzCi6KtrRZ
aUgijZ0paXFKNYB7T/MTpAwFhc9BePeemHDNKfj0z3SjPXn/wL4IpR4PX0Ie
74wW2dKvEpKoT3v7TvHqavhguLi7fM0k3Fv+L2v7PzaYOs8R+7dPg60Ks8Fh
mg3YF0leaXZtI69nKiyB1Kfewog3LORLB3m9++7vL/D9pwSyiemet+VgNWB/
9Pnv7WW/1WcA952C5obvVVuug4Q3kcr/gieh6PBoTAB5/8T+qHuewTcP6COw
P8q1faPY/rgaDmuZ7smPmILZP+WPosj7e/Pti3t0lYRRh81jN9N9fQTuN6W3
qpr5K5yAeRdGc9oXTsGc/81YdfL9Y18UmPx3/nby5zeJreNjLJBEU3H/1hh+
rYaciZctMfLk933OyH7tvF7I+vlLPeSkMEr+pfa8hHw9V0WrW81+SKCQ7qj8
ri3VgHtN3o+T/hZy74Oa0N3DZyonYcG9cZFccj2M/ZHvh33K9Ubk88N//ijy
enf0wTfVECQ1s1ClbQpeVflwTpDPQ8Vpb7c5GJDrtbi+59Pkz6tYxl8xtZqC
4bpZWhN5fvc7brUS5xVGxhpS6Z/I7+960oJ7SbKS6DfDOGWwsxqwN1KT6Jn+
fHIGsDeiNe5w6ndp2oa9kSgt6tol18eUN9IeXn8zuj8TsBeKDbi2NuxrB2Av
1LHsKtos1w3YC7HLFs7N/9MD2AulpQxFbb/GAuyFHK64SGdeZwP2QguDVu9o
5+8F7IWKdUomAgbZgL1QiqFDOm0pG7AXcn5woniHEROwF7rk+qJa4kIXYC+0
1jtj3rnXbYC9z4bv7WkrGAwCe59WpRYFnvpuAnufqh9sX6UeFoG9T3L4VseU
VRwCe58Vh78Ma2j1Edj7mPm7slWVyePpP+/z+oSlp9lIL4G9j1fsnWixVhYx
PTZ0Xy5dDGmKhAh4ZnQTuP+0v+icjdyKBMD9J8l4B2HhiQLKB/FPRdjpa5QD
9kE2J9szNl4l19//+aAHi+J29/+pAdx/kh7s9uJzaADcfzrF98XXZHM75YX0
ZOqkhOmTgPtOseK/Vz+96UX5IUPr4kreyleAfU+E3iau6oU9gPtN25a5+RmX
MgF7n/jYgJduEmzA/aYqu4yS8no24H5Tz/UT6VPk/Rp7oPbS2BqxODZgD8S1
MTpA0YoF2AMxLGZuj8/rAZ5TDLcrfAJIt/hQgNtUJ+V57hr+DmNcZBLY8zDn
Dv68sLaXwJ5n51blVy+qOAT2PGZPFdafII9/7Hm2jGxGHukcolbi8NPQFaLo
xRJh42LuXgL3ooytVqpy5eUA7kUJ/DZ7PRFWTPmfyCfVYiXnqwD7nwWLd3o+
HK4G3Ivyzz/WuLOqFrAHSolw2StQPwW4B3Ve28tRsusQ4N7TotOHW8YrWIB7
T0JF/2w3vyPX3063WnJ6J+Hb4LaiafLz23VF3/Tp9DRccKzieVHGpnzRiIG9
DRSwAHuhCvbyzO/32QT2QvVcP7YuvM4hsBfqaC1boGHWR1ywebn2Wqswmt0v
8tRulEPgflTTFxlpMd1KwJ4oRWaTnEdWNeB+lP6wjflEyU/AfaiOqD6nRdbB
8HqdXH5nzwR8tioaXfyHDdN9m+cujk+B2dbkHSbk+WzrphhhMT4DgXk2YyrH
2ZQfCvG0zNu7oI/AfmiFVce3qd19hHB3k1PSMRG0NUvnboU1h8CeyMymSy5D
shpwL0rHZmTeL5sawL4oanj3TuvMacA9qIO+86LNMgAkr7csNEychOT2pelF
Ir3w79vdj+8/TsOyMM82LgYbsC96eXxRSdrOPsIkp7l1KlcYxVaeDRSn9RHY
G4WbW5beeFYNuP9ULnup38j1GjwNLA7IfUHer/MTXbhZbCgTvKcl8H4KNoyn
iz4jfx/2Q5YPhntkyPUR9kOdL066Liefv3EPqrWvrfV1SRWYysa9tlWTREJ1
ses7l9UA7j/dCoyR//LhNJzbrZWwat0U3LmWG+1E3q+wJ4qtzjH+ZtlHZPUy
npSKS6KBJUn1luXk/ar27IzASvJ+8zbrz4I5Nqwq6y1kb5qGQH6/a70zbMCe
6O35K/57VvQR9+Ov3D10URiZbw1lT2zqI9y7wz69rJZAA5mHAy5aVAP2RlNF
YxN/FWYA957+mL0QuZ+5Evwkr6uEXpuEQuJvdpJQL2BvJJjz8vD9rX0E9kZp
g3/f9IdVg3aEjvne0CmouWZus468H27ZNbx2bLkw8k6wnOsg77+453QmQHZj
3rLj0FzfTpwTmoJ5yXapQuT7x55IJ1CsKMKij6DJDf9kCpLnZ87yjH2fq+HB
oQddG+jk+XPWVNKPfN6l33OU3O0kjD5t5Q8P0yOfj92Yoeol5Hr8UyOxU6sa
cL9JVcf43ddTe+H1mNrEvKJJ8DM1k9hEvj7sjcZTu+7c20O+vv+8UUeB1pWZ
1GpwvMyU+Vw7BULS1y9Zk+9/zck18kt3CiNiQdSR1SZ9hEBO8K0OkylIP5Fx
SJh8/abyWRvL/i1A257+VHtPXq8OZ1bapstIosvLgrtPt1UD9kVfrFrulB+e
AdxrsvZfOFvmJQx9diJH3QOmQED8rN8a8nrBndc5eFJGGNVq8pv9II+Hu7Hv
yx9OTQLDYHRRBLk+UHI7zS9TtwCt2fZ7UoQ8/vK0Lp3/w0eub+Z3nPyXWw24
zyT4VqG3+clusPvEz6eYNQkGYy5aUuR6CvsjU/lfXi+SqmG4Q7Y7bLMw2sb8
d9yYvL7k+duF826dAsvOkeN7yfcn+fjltN7EAuQ97/IqB/L94f6SdNGmXTqg
AZcq5pz915Dr9X8t+5LI709JTOidsewUuK46tduM/P+jA4MC1rMWoJILhTfr
yeNhcr0tp7VhEqouKPCpku8Xe6Ilx97cD3xXDZbDWZfzjkzBvS2J2pHk+w16
9c3dSkAYVZflBmSQvx97IZ/pcLUM8r5EeaF2O8sTO6PzsRcacppsXp9ZR80T
O6zd2/dWvYuaJyZvdqb2vT+TmidmxIj8e1ucRc0Tc/n9eoDfr4fqK1Xwh9iO
J3RSfaXTzA0pX43+11firOu8ucK0huoraY9a5Wy8V0D1lZ5Yyd2JaXpAeaHU
ybOddy8VUV6Ic8ne7ApXA+WFfvr67tl9qIvyQpVXNkYJP+dQXujU5AcvQY0R
ygsp+J4TORU6RnmhH39feZqpT1FeKPrh4sOfcmcoL7Q0ultZY8cs5YUu5egm
zCjOUPPEHjs/zZpYMUXNExMX/JU6WDFO9ZXKHc+MGiwfpfpKaOFBs9bPI1Rf
SWHlmh/sG0NUX8nlo3SqoVE/NU9s2+a8ug8H+6h5YgFLzWcV9TlUX2ll1ecg
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
afscZzHnh+TvFw3afvZcRkP+fn25xYylpX2Qv6/Y/WzptZYOyN/32LZ8+S+1
CfrmY2ac9Lc78Qr65j2M7mnFcqqhb/6Lum/86uft0DevMMFSq2lOH+Tv/5Sn
yV4wHoD8/Ss3Xe9nrQLI31ecfa7fUTQE+fvA2G9qT8aPQP7+svNSakr3COTv
d1FnVr/cKIL8fcxxZYX8wLfQX6/9zutj+KVGRPL3Owx3Cm+8akMkfx9e3p3Q
vZyHSP5+gU63qlwq8z7zN39/P8Ro0azLXETy976zxiXlJvRSJH//7Fxubu+K
AYrk7+u8Oz7MPsbM53/z9x7vdwbVMPf/yj/35msJmfkx7F/L8yIBNS2zx6lm
RBJHbj3zeKu4gLLYN5Gf/1sK80N8gzssBiiSp7d/EpSo3c6DPP1Q3iOVEp9e
yNM7Uom7VOL4kKc/WNYk8/0WDXn6xg/rQgNu0pCn3/ujyN3uKB/y9MF+ip06
M3ogT6/5y/lI2JR2yNNXzlu4s8CyGvrtk+Pf79amX0Ne/v3s1ErX53zIy9eV
6a28encQ8vKHeo3CcKsQ8vJH3rf8LvEdhrz8Zp9tvh0RI5CXX/Eu/2D0XBHk
5WelbX7szTwfSV5+rX+ThviV74jk5f/8fvf7fVErInl53yMb3r/7wkUkL//u
xQ7WpHwe+vLomPNah3akdGS56VWaC3n5DaujFEoUBBTJy3t3h/e/XCCkTvWc
Hm3KZuES7TsNpzWElMWL5ztUCiWx+ecN117bCSiSf7+To3bD1oAP+fe1Uwr0
zh6mIf8ud8v+w71CZr5wXWo3UcTGk9QOBNe18CEP7xQX33inPAvy76ZhXw0O
24xA/v1MVIb1zskiyL/beOdYmjLrNZJ3n7JK6GmU0I5I3t1JqWfA/jjzvv83
786NnnosPpgH+XbmuWrS+V5AkXz75fpWiVZmvSamUOHqvkwSu6n5V34sE1Ak
ry4dmrjcop8PefXNvj1ti5/RKLkgYcztMRtXiR21X8WMl+TV3VhxMe0rRZBX
d90r7ZDCzD8kr34gdYwVxtxPJK9+su7TkmnMeo3k0ytUC14oM8db213oii+w
8GLT2OO/5gkpkjf3uHYosmwLjUpm6Zz65MnG8ol1WgHFNOTPczkOWti7EPLm
EX5K7nbOIkTy5ZMX6Yr7uPBQyOP7DmtetqBzzWp11bE8yJdL3ZzN3Z0qoDI8
lMQGpVk4VdVpbJCZX4eyPvgUaLPxmx2Tzltn02iy55N16XfZOFoR/WSdoyE/
viT2WAPfUIRaltrHBlZwcIjw/JNiZvwkT75pw68bx2R5iOTJWZoZ+7qyeJAf
L9G72mfEzK/OwbIHZCTZOMPjQn4n8/u7Svg80zNsfHqn9LKMhzTkwb+9X/Mh
brcIkfx30r89Ld1XmPn9cHh5cWUrulKdZJjFjJfkwfv9jyVyuwXUaLBCyCFr
Fh7Ut2sfYtZr0W0XvfesYeMoVpLBcWZ9RfLfjZ15+X7WIsh/X5+h8ViVuR9J
/ntyeGxWTQYPkfy3wyF35UWKQipozGDukAsb+/aaija8oiHvLax0ty3aIkJN
0n7CeyEtyGVFQteyRGa9/iO26fOQBN7kcWAyzVyP8m3qmdYabGwj7dg/4z7z
fqDpsy77NQcv7UBrVzHHc7dVXNDCg81IcXvK+RpmvWZbesVtQ44EDry24mvS
UiGVnPg72j2UjYemhbzLzqfRz/L62VG3OJgXEPMuYZcI8tzuz5SsJaJ4iDcc
s8PBmIXv9SWdaGWe12lTm9NHERv7vyqc00sx59d/bH81j4P9ZKrHT2T+vk7X
3BeDHU2oTKei/xizXpO3VWlIP8jG7KztYVee05Dftv7++vhM8TxU3H1puuI0
Fh7/xPl7N3M91Qcf15u5gI2bxKo0NjymkYK1QYN5NQe3xjfZNTG/PzlNarnP
cDOyitiqapvOQ35Vl2/FfJHAkktH9ycx52vL8O0nGrkcLDJRf7CEWa+RfPaK
9GcpU27y0GRWTMKl7cx4ViVlaDPrf7/slfOq1rOx/rLLDjzmfJD89UaX7JQq
Zr2mtiTlCw81Id0gq0DxBzy0pfNZyPjtbBxM3xBvYP79BbWvlSv7JPDF9WPa
45nzozZ1NNX6BfN9z5/Y1s5cD1foYBtX22YkfbLqyX3meDToV9m+WszC+wLz
Q8SZf6+fPb7ijTEb9/QODegzx6d6X2TZv60cnHXbpNWNGe+WGPmLM0uZ68m0
8Ew4cz67lt9aSHmz8cvkWrE5zHr5sc4XuZPyLFy3bEaaPPP+FGj2atmPT8z7
bEJgZD3z/z+v75ZJ/NqMjnwzsv+UyUNe8tUXx5VLYLuZ6+wumQqpFz2LpxRm
cvCXl0Y9vsx4xdZ5WSdYs7FxESthCzM+/SsOziwhB2uYm10MY45nYUvt4tMn
m1D6EMfHgLk/k9kPv7XuYmNrCweF/5j7IyV5I9/tjwRu19waHcucT+t5P/qn
vOPgaJ/d2eeZ76N/K+/Bn4vNKFVx/OhV5vmmEvIkapEFG48pWWxwYp5XUicO
KBr3cHBR+bmeROb4jZit7n85oRnpp0r2jjHHj+SpQw50VCW+ykJlmQ4LUjRZ
OFSj9Mdp5u+lbbp7Iu07Bx/RClpQwfy94CuO2VoNElhiVJTjslJIdUxVnSjj
yLxPelybNZdZ/5F8tG2WzlQ5ZvyLjrs/1pvXgsT+/hi5yKQbxkti8tnp6eHR
iJ1s+CwXwlks/UcRPr8aNPec3saBz5C3/vtD8qbk8/8Byu0a2Q==
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{609, 3290, 3288, 860, 782, 1106, 982, 882, 1130, 
                1006, 1154}}], 
               
               PolygonBox[{{3287, 3286, 595, 596, 597, 598, 1037, 913, 813, 
                735, 675, 640, 1064, 940, 840, 762, 702, 1083, 959, 859, 781, 
                599, 1038, 914, 814, 1110, 986, 736, 1089, 965, 1137, 865, 
                1123, 999, 1149}}], 
               PolygonBox[CompressedData["
1:eJwV00dwTmEUBuAros1YkkQXrLSNLkpEWeijD4PRo0bvvY/eid43SiRKghUL
kiBasGCYYYzee/d8iyfvec/9kvzJvTdxcFq3cTFRFBWhpi93SkdRIWVjoyi9
aBQ14JkDR2jAZ306Zbikr2AEcc5vt2vIc/0oDfmiz6Asl/WVpBLv/A67RrzQ
j9GIr/pM4sjVVzGSBOd32jXmpZ6iXzIP5rheT882d6cYnfVbclz4Hte/yVnE
k6evZhTlnNtl14RXegZN+K7PJoF8fQ2jacoPuzmU44q+ljGU97N22zXltX6C
JH7qcynPVX0dY2nGL7t5VOCavp5wQ5rz224+FSnQN5BGBb9nj10Sb/RMWvBH
X0AlrusbqeVsht6BP/p4Ktrt1ZvxVm+tXzYPIUuvr+eYe1CclnZ/5UIqcyN8
PmcumPuzSa+tnzB3pK/5ofxr395cYJ4sR8nh8mX4m+UE1yvJffpY2Vz2lvfD
MyPfud5G5uoT5VA5VD6XJ8PzaD5r7skA82NZgi7m23KKTJOp8nX4X8pk3/fP
vIjRepXwzMh7cpq8Gf6X8qI+Xg6Qg+TT8DzIza7XkZnh2ZKdZD/5SP5zrYP5
evjZjDC/Cp/dvrJ5v7kFfcwP5Hv7tuY88zBOhXdGP2fuRUlahZfTbrG5Krf0
LdS1ywrPORGT7KrYHQj3iw/66fCeUMR+iV0it/WtTKaq/UG7ZD7qZ8KzQIz9
UrtqFOrbmEKi/aHwmfikZ4f7Q1H7ZXbVuaOnM5Vq9oftUvist9PzwzNATnjf
9fPhnjPQ/CS8+7KU7CoLwz2grbOx+nJzDe7q/wEGt5ex
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{3287, 3288, 960, 1084, 704, 764, 842, 942, 1066, 
                644, 679, 739, 817, 917, 1041, 608, 643, 678, 738, 816, 916, 
                1040, 607, 606, 605, 604, 603, 602, 601, 642, 677, 737, 815, 
                915, 1039, 600, 703, 763, 841, 941, 1065, 641, 772, 850, 950, 
                1074, 676}}], 
               
               PolygonBox[{{560, 3289, 3284, 614, 649, 709, 787, 887, 1011, 
                564, 682, 742, 820, 920, 1044, 613, 648, 708, 786, 886, 1010, 
                563, 681, 741, 819, 919, 1043, 612, 647, 707, 785, 885, 1009, 
                562, 680, 740, 818, 918, 1042, 611, 646, 706, 784, 884, 1008, 
                561, 610, 645, 705, 783, 883, 1007}}], 
               PolygonBox[CompressedData["
1:eJwV0clLlVEAhvHj0KDef0LKa2ag7rRNgta9ltOVAg1FEaIESyRQywZaNjis
1bREcGipLcphk7sSbKGmlhSI4KJlpbt+3+Lhed/3nMXH+XLbuxrupYcQ0jCF
jVgIm2gwplCPOjzFJPZwISOEYcQyQ6jVn+AtfqDQPoQcZzX6Mo6RsL1Dvv2x
/gbfcd42iGx7tR6Tb2IFF21Ltg55DVX6kX5FnkNcf6Tflb+iRs/gX2iRU/we
JfKEewdyu9zGqyiXd+19vK3f4ALu5AHO4mvOn/FvvYO7uYc3OMU53M/73MZN
3MXLXMaL0fvwoX6L7/B9/sJJ/he9m9wkX+ZZ5Mn99k55HdV6Ov9Es1zPCyiW
x91rlT/hkr6jf5Ovy+f4FU7LV+3ZciOWUGr7aLstf0ZC/6tXyjM4qz/U0+Q6
zKPI9tq2jXz9JU7ZqvQP+IMK2zTO2B/oY9H3IG57gZP2ZPTmGMUW8uzPccJZ
Ivq/6MUI/gNPo1DX
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1nfcjmUYBuBPtsjee5OVopSyS2WPsilZ2YVS2aTsiKy0FSUqRSGUvcnI
yG7I3nt0XL/+OJzndT2+8T7P/b7kb9ujYfdECQkJZe5KSIh83x8FyGJeYb6h
D6awub/5iN6J3OaU8m45XtZ1bYNswHk9sf0IfY5+Vr5CVh4wL5SPcUCfwr96
D9Lxovl32Yrb+o/4VgkzzAVZqQ+gHuXiul0lDupT6Rw/mw/sCrFKH0h9ypOE
pCTjw3hdrNYH0YAHSc5H9kVYow+mIQ/xk11lDunT6EIKPrYrylp9CI2owCK7
KhzWp9OVlHxiV4x1+lAas9HckAv61zzMYnNVjsSzoRu7za25E78PqfjUXJz1
+jCOxr0kFc+YN8lGXIx74IaO1Ofq5+SrZOMR8xJZjaP6HfkmM/Tjsif5fG16
mVZOkiVld9f36G3IGQ9LppBj43eSi6yu6P3jbJnzyAxyiiwl73b9M/3eOCPm
Deab+pD4+fqfsnOcNVK7PkE+a79ZNuZSPFP7Ufo8/bzsS3Yqmn+W1fkzzgUn
9Jfid4hzZ94rnyMRi82pmamXYKM+nCZsiXvJZf0bHmWpuQZ/xXmiJ2n4PO4N
m/S3aMpjLLN7nL/jjPES9/BF3As262/TjEost3uCf+KM8TJpmWVXmi36CJpT
mV/sanIszhi9SMdsuzJs1UfSgiqk50v7+9imj6IlVclARjKRmSxkJRvZyUFO
cpGbPOQlH/kpQEG+8r3L8ps+mlZUoxBz7O9nuz6G1lTnV7sn+TfONr0pHO+L
+Axhhz6WNmyN88AV/VtqsML8FMfjbNGHfebnuYsl5iLM1cuxUx/HX3qXOGdx
JszbZBOu6t9xQX+NHPEczSvl05zQ44NquD5TPSlfJiPp7N+Tr9j/IduSyy6x
TCnHxdmXP7t+VR9AQXPe+Ho5NZ61LOr6PL18vF/Nu8y39KEUMb9j/lvvSh5z
GplGvhuv27XfZFOu6cnsR+vz9Yvy9Xjvxlkzr5K1OBnnmFN6LzLFZ4V5v3yB
JCw1F4v3g/4gv+vjact2czOu699Tk9Xm2pyKM09fDpjbkZRl5uLxHPWH2K1P
4B+9G/fEzzbvkM25of/AJf2NuK9xbsxrZB1O64m81rf0Wfpp2ZvM8RzNB2V7
kpEq7qFcbn9NDqSQXb547XJaPKc4B7IC2e32mG/rwyga99p8TI9/VPOa08bv
LCfKErKd6zv1FnGGzDfNyeUYczG5wHxZ70d+c26ZXk6O8+zaWlmXM3Hc7N/W
Z+tnZB+yxLM0H5IdSM4v5hLM1x9mrz6R9uwyt+SWvpCnWWeux9n4bOANSsYz
tHuEffokOlCLUvEM7Cvyh/4eHalNacpwH2VZ4O88yn59Mp2ow3q7+pyLzwv6
cdjckRT8ar4uB8V9iefntU9P9P//W+537T8JLwa8
               "]]}, Annotation[#, "Charting`Private`Tag$389454#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1nf8T1Ucx/GvWaLIiLLJpoxs2UVEGckeP0J2kpFQymxYZRdlFCqrrKJI
WRnJqqiMVET2yKjn59Efr8d73HOv8733nPOTN6l3417JEolE8+SJREn8nSKR
eBbpsV4egSSUwhldP2TABnkkOiJjykRisq40jskfoDTOys/hTnwlj0InZDJ+
iq4MfpMXoAzOyf2RERvl0XgKmY2fqnsAx+WFeADn5QHIhK/lMeiMPekSiSzu
maYvi991i1AWF+SByIxv5LHogruMn64rhz/kD1EOF+VByIJN8qvoiqzGz9CV
x5/yRyiPS/LzuAub5dfwNLIZP1NXASfkmvI3fBI+jt8vr+SbIBUayrtpr7jH
9ct0MLJii/w6uuFu497WVcRJeTEq4or8ArJhq/wGuqMSruqG4G5sk8ehB+7x
rHd0lfCXvASV8Y88FPfgW3k8eqIKrumGITu2yxPQCw/iuu5F5MAOeSJ6I7t/
Z5auMk7JS1EVN+SXkBM75UkoZuxiuT5uyH2QQzdbroLTci15E98Ry2JtyKv4
pkiNarqbdDhyYVfMz5j1fBu8KReXl/CPoiX/M72pr8fviHVPu9HO9ET8ZvqM
6znpu3JP+iB9kv4Ua4b+7XptulnuSzvRTvQPujzWI7+afwJt+SP0FjzGfx97
h/amXelf8S5pdff9y7+M7nLuWDN0f+wF+l28S7pB7kPb0g70t1gP9C3XS9Cl
sbZoA9qK/kL/da0+vzOejS78yZi7Phf/Hl8VzfmD9Iz+IX4L/xQ+iT0jr+Gb
4VbU0CV0r/B5sFuejPt0y2KdI4Fndbl1c+J74az8aewTJNOP0OXF9/IU9EMe
/VxddZyTV8RaQHL9SF0+7JGn4jnk1c+LOeG8vDK+D1LoR+nyY688Df2RTz9f
VxMX5IflrbEGsCr2u/xZfHO044/G3qdp6ON0T3wDPGRsSnk0fy/2yXudUdPp
gHgu6iCVMWNcL4D98gwMRF2kdm2sviAOyDMxCPn17+tq4aK8Go/gFv2rukL4
QX4b9+uWx/pCspir7l7dB3xtXIp5yNvi22ONXEH+PL45bkM93a261/jCscf4
A/RHfTX+q3gXeEcuKX8S7wKt+V9p8thj/C7aA4ONKyAviPeEFvwhejl+N/9t
rA3aNdYY/ZMOjfce5xxdK/emLWh7eiyeSdPSRnQv7R97lT5NT8UZQ+u7Pw19
PeZBi8Q+pD/QgbGHXa9ON8ZzkcQfp7P0pfhP4/lxfvCHaQo0iP0XZ0HsNeMK
ygv5h3Elvou8PeaBz+MsltfFeYN08V50t+ne4IvioDwbQ1BIv0hXB1fltWiA
tPpxumI4JL+LoWiIdK6N1xfHz/J7GIbH8DgaoTH2WYtNaFM8gWa43b0T3FcC
v8hz8CIK6z/U1cU/8rr4G6H7Is4R3B77QXeHbiJ/X5wF/I/0V30N/mv+GdqB
dqS/0yFxhpnHXGNK8yt0jZEyvpeuiO4j/hFck79I/v//WdLrJ+nux2F5Hoaj
BVqiFVqjDdqiHTK4503jS+KIPB8voz3ujDNSXwpH5ffxCorqP471j+vyl6ii
+zL2o3m3pnfEnHX7aF9040/T4fFbjf8P3qkpDg==
               "]]}, Annotation[#, "Charting`Private`Tag$389454#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1GW4FGUYBuCVRpGQRmnpkEZppLu7u8ECCRuQDunu7m5pkJZOKVFBQjqk
9P5+3Nf7vM/M7NmzOztpW3ar2fWNSCRSKkok0jdaJFIgRiSyOXokstKsZ04y
U/Mzb9r7mrFYzxz7fDM7J13b2byvG8YMOQMl5JFmYlbKa51XRz4v9yALg+xx
WSQ/dLyX/Dr8barQT1dQt0Wuz1uc0q2jrv6C/Uuy8kjXnw/De7Y3IA6ndev5
kQEMZBCD+ci5W53TkLc5o9vAEAo5tk3XiLic1W2knv43e0+y8Vg3lML67fbG
xOOcbhP19RftvcjOE90wiuh32JsQn/O6LroH8nBKslnXQHdJ7k0OnuqGU1S/
096UBFzQddU9lEfwMVt0DXWX5T7kZLA9HovlZ473lv+TJ1OVMfbkrA2v43gx
eZfcLJwjp+Gd8N2YsdnAXPsCM0f4n8Ln47pu5iP9GnOkOdPMGD5TStl/MpOE
e45V9qVmnvC3wvfn+kbmFf0q8ytzmpmeD+QhZnyWyIvNXPzrmj5mhCn6OWYW
qsljzRSsC/ek84rLu+XmJKR/uMeZJ190/BP5cXiPlGarrrHuqvw1uXiu+0r3
BlPt1cP5uhL2PXILEnFJ96nuiTyKMmzTNdH9Ln9Dbl7oRlFSv9feksRc1m2n
qf6a/Vvy8FI3mo/1v9hbkYQruh2MoZRj+3StScpV3U7GMo7xTGAikyjt/P3O
a0Myftftopn+D/t35OWVbjJl9AfsbUnONd1umuv/tH9PPl7rplBWf9DejhT8
oftM91QeTVn26Fro/pJ/ID//6aZSTn/I3p53+VP3ue5ZuG8px15dS911uS8F
GGpPwFI5Er5DOQrT5BqMk98Nz7Zwn7m+vHxY7sAUOS3vyT+abzFfXmjmDO/T
+V+E+0+31hxrzjIzhecB5cP3biYNzzFW25eZecM9GL4717cyb+hXm/3M6eb7
4dlEQfuw8JtjE8vsS8zc4d4L948ZlenyXDMrNeXx4T2H32d4PX+jgnxE7khK
BtjjsEC+7nh3+Xn4LKjAPl1r3d/h98GHRAn3ny4aM+RazHBeRfuvcidScUO3
nzb6m+Fz4yOihueAvpL+qNyZ1PytO8AsKjt2TNeFNNzUHWQ2c5jLPOZTxbnH
ndOVtNzSHaKt/lb4HylEtPB80lfVn5C7kY7busO009+2D6Qw0cP3q6+mPyl/
Qnru6HroXoTPl4oc0bXX3ZEHUYTh9oQsl2OE340cnZnyPDMbteUJZko2you8
TnX5lPwpU+V04T4I78t8O5zHwnBueA6yk39c96X5Ur/OnGDONjNTKfyuzGSs
kZeb+cJ35ZoO4VrdYIoywp6IFXLM8NuVYzBLrsNi19Swn5Y/IwN3dT11r+SJ
VOaorqPurjyEYsQK96y+pv6M/DkZuac7xlJqOXZW9wWZuK87zjKWs4KVrGI1
tZ1/znndycwD3Qk66e+F3zzFiR2eI7qYzJbrhvcqpwq/J3mFmT88s8Nn5Pr/
AewEN4w=
               "]]}, Annotation[#, "Charting`Private`Tag$389454#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
               "]]}, Annotation[#, "Charting`Private`Tag$389454#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1Xf81WMYxvHTor1VMiMihJb2sneymwpRUlIoFUpFmRXaSkVEypaWtIRC
lE0hlE1mGe/rj8/ruq/rOb/T+T7f+76r1aNfh75FCoXCxqKFQtHShULNsoXC
zWUKhSKYyXdCQ7SVPyI7DGv5ESiGfeS3yIriIb4zuslW8SdhG98I7WRz+cPx
Kn8rimNf+XBZMcziu+AS2Wr+ZHzFN8bxskf5uljHj8Q1sk38hfidL4H9ZCP4
4pjND+G3qHugK9+dX6M+BV/zd/A/qa/FcfwJ/GPqI/Bafif/jbo3RvH9+c3q
izBHXQp/yMfR32WD8JS6GvaQ709vlT1HS9BJ9B+6hs5xPpRu5ZfSS+mjtBzW
o5vzHnStfBE9Ne8k34PX8ruc30l/lq+gA+iTtAqaODuRzpMdiWnqIng9d0e3
y67CaP5a/j31xfiTH59nUg/GnvwB/Ej1Hng47weXyl7lT8N2vilOkj3OH4U3
+NtQEgfKR+W78EjeAZqhFGo5Gy0vibl5XjRHaZRBWZTDQT53m8+Uyh3l30cL
lMfBzm6Xl8Zj/GVoiQqo7WyMvAzm8ZejFSqiEirjEJ8Z67wsHud7ojVOlj8h
q4f1/O2ogkPld8jK4Qn+CrTBKfL5sqOxgR+Dqqgjv1NWHvP5K/MbZev407Ej
84VTZU/yx+BNfhS/Q90HY/kB/PvqjviLn8D/qb4Re/GH8XepK2Cy+t/0g3yY
+nP1ZeiVO0j/qM/IzKZP8a38LvqL7BU6kC6gVfE22jk/jS6Qv0CPpdNp0fQB
3nI+Ot8jX06vzl3Singz9+V8IP1A/hLtlF6ipfG3s/voX7IheFpdPTMkP5ze
LauY38PfxH+hvjwzmXeVnlafie+yJ3C6bCFfH29nRnCd7EO+M3bx1VFXdg9f
CQv5q/IuZW/wZ+H77AOcIXuKb4CNuSfUwBHye2WVM/N8n8wczpQ/LWuId/i7
sTeOlI+TVckz8ldnZrJzcZSz8fKqeIbvm/7Lfs2OzF7LLsksZp5Qz+cn5L3j
Wb5f+g9nyZ+RNcK7/D2ZMRwtv09WLbsouzP9hrPlz8oaYxN/b2YNx8jvl1XH
89l76dvsJf5s/JB+QHvZc9md2Jw9iOtlH/FdsDvziWNlD/A10j/8zfyX6p7Z
vXwvfoO6PX7MnfG/qq/LjPDn8M+rm+BBdbHsrOwY+p2sb2ZRXSn3KL+Bfixb
TLtm79Ay6ZXsX+f3p+/kq+jQ3DmtgY2o7bw+nZhnp3vTKfQ/upa+6PwWuo1f
Rq/I3qHls4Od9U7Py87BLPWe+Cnvgu6UXZ/Z4zvwL6ib4v3sF/57dT9M4Afx
n6i74d/sKTSQTeJrYlFmKn2b+eM74Of0H87N7+Sb4YPMV/YWGsony/bJHGYu
0jM4T75I1hwf5n6yt9BIPkW2b+4y7zY9g/PlL8la4CP+gewfNJZPle2HJXkP
6RFcIF8sa4mP+YmZbRwnnybbH0v54fxX6isxT10hfYFBma/sIvm5+CU9gQtl
S/hW+ISflLlGE/l02QF5R/zg3HdmFk2dPSg/MLuKvzH3lflEM2cz5LXwMj8k
d4OL5EtlrfEpPzkzi+bymbKDsIIfmrvBxfJlsjb4jJ+SmUUL+UOyg7Nn+WG5
G3SUL5e1xRZ+amYWLeWzZLWxMvsvz4xO8pdl7bCVn5aZRSv5bNkh6e3MWfZM
+po/D7/mWdBZtoI/Hp/z0zOjaC2fIzsUq9Pn2UWyd/jzsTPPhi6yV/gT8AU/
hv9BfU3mM/fNf6q+BP+lP/hd6mHZy3wb/mF1HUxVF7BGPoJ+LeuF4dlr/Lvq
CzBbXRK/ZU9Fcyf0BrqQ7oWOzrrSlbIX6Yl0Bi2Oddk5zsfSH/N+aX86n1bO
DOXdpx/oZ+lf2p3OpWXz/0J+Jz+R7s790Juyf7Mjckdo4O//BxBkd9A=
               "]]}, 
             Annotation[#, "Charting`Private`Tag$389454#5"]& ]}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"LQR feedback solution\"", TraditionalForm], 
         PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1c\"", "\"u1c\"", "\"x1c\"", "\"\[Theta]dot1c\"", 
           "\"xdot1c\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.8663109335478053`*^9, {3.8663109999823008`*^9, 3.8663110214563494`*^9}, 
   3.866311194894208*^9, 3.8663118684581766`*^9, 3.8663119082363005`*^9, {
   3.8663125738458433`*^9, 3.866312597307249*^9}, {3.8665635939962616`*^9, 
   3.8665636095343094`*^9}, 3.866565797018138*^9},
 CellLabel->
  "Out[2105]=",ExpressionUUID->"318f4db0-9f01-4012-b6b1-3af1446145a5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"n", "=", "15"}], ";", 
   RowBox[{"\[Tau]", "=", "5"}], ";", 
   RowBox[{"\[Tau]1", "=", 
    RowBox[{"\[Tau]", "*", "1.25"}]}], ";", 
   RowBox[{"A1", " ", "=", " ", "0"}], ";", 
   RowBox[{"A2", "=", "0.2"}], ";", 
   RowBox[{"order", " ", "=", " ", "4"}], ";", 
   RowBox[{"maxIter", " ", "=", " ", "100"}], ";", 
   RowBox[{"maxError", " ", "=", " ", "0.01"}], ";", 
   RowBox[{"uMax", " ", "=", " ", "5"}], ";", 
   RowBox[{"maxCount", " ", "=", " ", "5"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", "IC2"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"InitGuess", " ", "=", " ", "initGuess"}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"time", ",", 
       StyleBox[
        RowBox[{"{", 
         RowBox[{
         "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
          "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
          "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "Jff", ",", "K"}], "}"}],
        FontWeight->"Plain"]}], 
      StyleBox["}",
       FontWeight->"Plain"]}], "=", 
     RowBox[{"Timing", "[", 
      RowBox[{"ffCartPendulum", "[", 
       RowBox[{
       "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A1", ",", 
        "order", ",", "maxIter", ",", "maxError", ",", "maxCount", ",", 
        "maxJ", ",", "InitGuess"}], "]"}], "]"}]}], ";"}], " "}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x1c", ",", "xdot1c", ",", "\[Theta]1c", ",", "\[Theta]dot1c", ",", 
      "u1c", ",", "J", ",", "error"}], "}"}], "=", 
    RowBox[{"testWithFBClipped", "[", 
     RowBox[{
     "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
      "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A2", ",", "uMax", 
      ",", "K"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox["time",
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"p1a", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1a", "[", "t", "]"}], ",", 
        RowBox[{"u1a", "[", "t", "]"}], ",", 
        RowBox[{"x1a", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1a", "[", "t", "]"}], ",", 
        RowBox[{"xdot1a", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1a\>\"", ",", "\"\<u1a\>\"", ",", "\"\<x1a\>\"", ",", 
         "\"\<\[Theta]dot1a\>\"", ",", "\"\<xdot1a\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Feedforward solution\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"p1c", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1c", "[", "t", "]"}], ",", 
        RowBox[{"u1c", "[", "t", "]"}], ",", 
        RowBox[{"x1c", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1c", "[", "t", "]"}], ",", 
        RowBox[{"xdot1c", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1c\>\"", ",", "\"\<u1c\>\"", ",", "\"\<x1c\>\"", ",", 
         "\"\<\[Theta]dot1c\>\"", ",", "\"\<xdot1c\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<LQR feedback solution\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"Grid", "[", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"p1a", ",", "p1c"}], "}"}], "}"}], "]"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Tau]New", " ", "=", 
    RowBox[{"\[Tau]", "/", "3"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Init", " ", "=", " ", 
    RowBox[{
     RowBox[{"\[Theta]1c", "[", "\[Tau]New", "]"}], " ", "-", " ", 
     RowBox[{"Round", "[", 
      RowBox[{
       RowBox[{"\[Theta]1c", "[", "\[Tau]New", "]"}], ",", 
       RowBox[{"2", "*", "\[Pi]"}]}], "]"}]}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"IC2", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x1c", "[", "\[Tau]New", "]"}], ",", 
      RowBox[{"xdot1c", "[", "\[Tau]New", "]"}], ",", "\[Theta]Init", ",", 
      RowBox[{"\[Theta]dot1c", "[", "\[Tau]New", "]"}]}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"initGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Lambda]1ff0", "[", "\[Tau]New", "]"}], ",", 
      RowBox[{"\[Lambda]2ff0", "[", "\[Tau]New", "]"}], ",", 
      RowBox[{"\[Lambda]3ff0", "[", "\[Tau]New", "]"}], ",", 
      RowBox[{"\[Lambda]4ff0", "[", "\[Tau]New", "]"}]}], "}"}]}], ";"}],
  FontWeight->"Plain"]}], "Input",
 CellChangeTimes->{{3.866310891625377*^9, 3.866310909168697*^9}, 
   3.8663119033668776`*^9, {3.8663127088501434`*^9, 3.866312708951112*^9}},
 CellLabel->
  "In[1240]:=",ExpressionUUID->"fa5c8a58-d8d5-48e1-a656-4765e0d09f5b"],

Cell[BoxData[
 TemplateBox[{
  "FindRoot", "cvmit", 
   "\"Failed to converge to the requested accuracy or precision within \\!\\(\
\\*RowBox[{\\\"100\\\"}]\\) iterations.\"", 2, 1243, 103, 
   17545095697018498346, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.8665636136410003`*^9, 3.866563620077949*^9}},
 CellLabel->
  "During evaluation of \
In[1240]:=",ExpressionUUID->"5e10b99f-7cd7-4da0-b41b-ea3c4c0b2845"],

Cell[BoxData[
 TemplateBox[{
  "FindRoot", "cvmit", 
   "\"Failed to converge to the requested accuracy or precision within \\!\\(\
\\*RowBox[{\\\"100\\\"}]\\) iterations.\"", 2, 1243, 104, 
   17545095697018498346, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.8665636136410003`*^9, 3.8665636201729183`*^9}},
 CellLabel->
  "During evaluation of \
In[1240]:=",ExpressionUUID->"cfa28793-beac-4099-8093-3778958ee089"],

Cell[BoxData["0.328125`"], "Output",
 CellChangeTimes->{{3.8663109480511103`*^9, 3.8663109548219194`*^9}, {
  3.8663110103439465`*^9, 3.8663110410939927`*^9}, {3.866311204431121*^9, 
  3.8663112114568467`*^9}, {3.8663118768634553`*^9, 3.8663119511404123`*^9}, {
  3.866312604436941*^9, 3.8663126430494423`*^9}, {3.866563616806991*^9, 
  3.86656362227125*^9}},
 CellLabel->
  "Out[1245]=",ExpressionUUID->"6532e93b-6b4d-4255-9325-bb5b7224d600"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
J6rbFKN8WOVmZbj9klSUD5dezN78eWg/8sniGPcsE/STUD4ssv7LtXT/XJQP
F1CvfBweKEL5cLnT6C4hUwbKhw8yFQWywotRPtyQdeeiktLvfHgPXrN+t/P/
P/lwR8lYGaWCjeahPvI8IynizUHzUO1zAsMPbORg5DzUjAADT931bIych1pg
kpikvXEY+WBF/C2eVWqvAemD1WJ3Q1UUGwDpg9V1bFQTM2sGceWuiWIt3PCk
Yo4bH9YKxG8MsybbeeAPB7/TvmdZgMdrG8Ohlxd6NwktGvXCwYI3nou/jVCg
nuFU44s2HKjVS1348oMKZ45/Ha6IxEHrxJXr537ywTl78q3nvmSB97uL1G9w
C8CE2tigpy5tgEtPjyM5IwA3HNqmPsJsQflzifOCakf7CJQ/V8/fz85RykD5
s+SdXnPG9QKUP0f1BeJmd+kof5539GjL2Awd5c+CB61XnqT8zp816HwGlbT/
e/7cs8w554ATG80/dfVX6lx+koPmn87O67r30YSDkfNPzzESi/W82Rg5/9Q0
baDJXXgE+V+vxb4l83+qAKT/ZWb09qha0BtA+l/2L6SOLU5tAtdLWF6Hwrhh
8APBh/YKrWAobfdAWRwPnN0rb52wiAWKjmxXHUrgheIXaS4hO3Fg/tTkY+YT
ChT4sunrlXocnOz97LexiApXxDc948/DQVfj9C+XIj541IOyz4EfB816cp+p
5fyw6McTTffaNnBxT/hQc4kA9BXZcEme+Dwy306ONpZcF3cJ5dvvN83TxXpT
Ub59e3Zv4W3JfJRvi4aNy+V1F6N8+6bVcJLbbgbKt+/zqSy3c/2dbz8InzMr
ue7/nm9TW3mbFYU5GJlvO0WPyOdd4GDk/FOHhtk+jWk2Rs4/3a/w68fqthHs
7T2KwLt5XPDAtTR1jQWN4OrwdN7audwwaYFy6eKpZpD5Srj6jSQP9Jww6dTV
bAMadpHVm6V44XFfK53F5SywL2zr9s8rKdBPyTJj9gEOWnriDDcpUmGAk5lX
XTMORJ/rnk/fygerc9R/6J7GQe1S4fkXNPjhJvmwkh5PFvLB+Bc4uURoZaO8
PHxLxlnnukKUl//IKPgsvpiB8vLbue2ntzjRUV5Om2HFb9T9nZe/n2P8oE/q
v+flvhrzXJ4qs9F808fPO3ZYmnLQfNMTFso1STYcjJxvqrdgnjD/PTZGzjdN
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
8mvyPAn59f8Dzzpd9Q==
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{2230, 2233, 323, 697, 597, 514, 448, 400, 373, 
                324, 698, 598, 515, 449, 401, 374, 724, 624, 541}}], 
               PolygonBox[CompressedData["
1:eJwV0UlQzmEAx/F/MmMZ+z4OjJGdjrYLThw0Y3JBKG8bDlxVqGyVcsGppAgz
ZoxhpBI3exuRG4nKvs5QXZTPc/jM7/k+/3fmnf/7zontT943LIqiODpoGBlF
9WxxsZVtpLCd+z6YyhiadDn5vNYHmEe3vsUOHug0xtKsKyjgjc5hPj26lp08
1LsYR4s+x3fnEpbzRxfS6ZzLAnr1bVJ5pGOMp1VX8sP5JCv4q4/w1jmPhXzQ
8fFRVOW8kTrdZ0+zhn96lOeXnZPD++jHNp0J4d08u2rb3A/actYz1f1Ne979
T1vKbHcr7SR7PXy/7fN8hK3RCXaTnWnr7FJ71PMu54PM0ovC99pr4f3tR8+H
22o91ybZGbbW1nvWb8+wlinub9hB96OdrzhvDr+5fmIzmMgzPWQr2ECV/mXL
WEW/PsY750Ms5pNuYMD5LOsY0jGeOmeG9+a5rua38ylWM6CP8975MEv4rO+Q
TpPOYjLt+gIn6Nb54Xfii24kg2adHd6XF/oiRfToApbxVd8lkxa9O/xnvNQ1
FNOrC0nkm75HFq16D9Po0JcoIZs2d3uZziv9HxDldJ4=
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{2232, 424, 810, 690, 790, 585, 801, 668, 768, 472,
                 682, 782, 538, 621, 721, 362, 512, 578, 661, 761, 445, 493, 
                559, 642, 742, 396, 423, 471, 537, 620, 720, 361, 395, 422, 
                470, 536, 619, 719, 360, 394, 421}}], 
               PolygonBox[CompressedData["
1:eJwV0rlPkwEcx+EXFChqQoyDMQYteCTGsIhs4mSrFgGpB54M/gESTsWDTWFD
DrUdMJEwmKDWCxkQDxTQP8ATTzaPAUUXqYlPhyef3/d9SRsIRcfq48ezgyDI
4h73Q0EwQq0H+9nHXvYQp4bdVFNFJe0kecFiH1bHOLvsO8yw1j7BNGftBM9Z
ZB/lCRV2mq3ubv5w2/7CGncr7ziT+X4dIHdBEMzZZe5OfnDZjmqSf0zZ13SJ
n83XIzwm5nmJZyPulVqj63RQQzrv/QZN2cu0XMN6QX9zy/uN9l33cq3QYr2i
2frZ+/U6ZBdosRZqi77ltPfDusKzKr1KjvuX5zfcS92btYPvXPI8ognSTNoh
Pcwjdtp/2eLuYo6UHdN+snzeJ7vI3cwbTtk/KXWf5xsX7W2ZvyPzTNh5eoiH
7LBv8pGw3cRr2uxZNrnP8ZU++xm57oOMsT3z+/GB1XYjrzhp9/KUHPsAD4ja
13nPKruBl5n/J7uHcRbatYwSsYeY5j+U1VxP
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1Hecz3UcwPEjI2eTU9ahiOussldGUZEQKSuhIqFsJbI1UdlNGVllZRUq
soukkNVE2Ssi4/l++ON5r8/ne9/73ff7/n7virTv3rRbmoSEhDq+RM/yOcN4
nHu4i7TcQDrSk4GM3EgmEslMFrKSjezkICe5yM1N5CGJvNzMLeTjHEsYTjvu
pTz5+ZeljOAJ6lEhrslFr9W36cbDFOA8yxhJe+pTMa7f+d/qO3SnGQW5wHJG
0YH7qBT36vx1Oo7naE4h/mMFr9CR++OenbtV36c/lWNOjq3X8TzPIzEHx3bo
xwwimYt8was8GXNxzm79hAdilvbb9ANeoErM37ENOoEecR/2+3UeLWLW9j/p
NFKsj+jLFLX+QxdSzvq0FuYSX8bzduw1LaYHtbo+Fc9Jf4n70lmaqsf0bm0Q
z1p/iDnrh1pS/9Ga+mL8Dv1Nq+p8LauntLZWjXdJN8Zz1Yl6ux7WnjFz6wP6
KaWtT+ij8S5Z/6zTGcyt9n/qIorwPyt5nafjPfP9PTqbhuS0364fMYBqZHJs
k06iF4/FzLjMKt6gEw/GbEh0/madTG9axnVwhdW8SWcaUYPbYrZc5StG8wwP
xazI7PO26BT60IrixB/o1zKGLjSO2ZPF8e/0XfrSmiTHduoMhsQs48cd+0bH
8iz57ffqHJqQy/5HncpLMT/733UBtchq/72+Rwnrv7Ufyda/6meUsT6pbchr
vUsr6Uy9Q4/q0JiB9V8xb12sd+qZhOv/h0poWl2j5fWtuH89FPPTrlpA92kV
naul9HhcpzbVgfFe0Tbew/hcUuIaSI3z4z2K6433kHLUjevgGo79il0=
               "]]}, Annotation[#, "Charting`Private`Tag$190549#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1XV81VUcBuC7jRhgFyKKDBO7O+mO0a2jJUaX0t2NdIe05DDo7u7u7m6f
8/GPh/f7nnPZ3S8Xl5AYXzsqEolc9E9W/oqORIoRzSK9Fw3Jxt/WihPDYr03
jdim1+El5sZGInutTSY7/1grQTKW6H1ozHa9LhnYp08hB//qJUnOUr0vTdih
1+Nl9utTycl8vRQpWKb347S5PR9xSW/KTnN9MnJAn0YuFuilScly/a78nWz0
18/IDnzMZb0Zu8wNiOOgHhUTiQwz52G6flX25Bvu6LlZaC5DLCv0e3Ig2Rmg
n5Ud+YQn/byp8or15OZR5gKkM8+Rv1rfLRuGc24tk3xcTpavy0P2o+VwPZPM
K9PKWfJt+af9a+Ze4Xzo38qn5XSZWd61HyvH6q/JwjK9TJLvyjz2F5nLkopH
rP0hV1q/LweRI5xH/ZzsxKdc1VP47GhzQX7T98hGvMJhfQbXzb35jnt6Xhab
y5GaVfpAmrNXb8yrHNFnko8lennSsFofRAvyU4CCFKIw8RShKMUoTgmS3Msl
ZSlKU4ayLPUzK4TjZo0+mJbs05uEc8ZRfRblWKb/xKOs1YfQiv1603DNOKbP
pjzL9Z95jHX6UM6bO/MZ1/TWHDA34w2O63OowAo9IdwTrNeHccHchc+5rrfh
YLiXeJMTeoxrM8KcLzzH+g3Zh++5r6eyP84cH45HXykr8kQ4NnsT5QbrD+Rg
cvKs9RlyuPWLsmt4hq19IZ+S08L3yxv2U8ox4VrKQvIFOVe+I9vaPxTuGTLo
mcP3yinh+OVJ+8nkyHAvyfzyeTlbJtm7KfvyA8+EZ0A+sJ7aPN5cJJxzfZWs
FJ5BNuoP5RByMUK/JLvxJTf1dhw2N+ctTunzuGXux4881BNYba4cjptN+kgu
m7vzFbf09hwxtwjPKqfDO5mKrNGrhGeVzfooOnBUbxnOE2fCe5pKrNWrhuNl
iz6ajhzTW4VnmbPhHU1l1unVwjVjqz6GThzXW/Me58I7miqs16vzHNv0sXSm
Khus/UJatodz4lkaJ7tQjY3Wa4RrxA59PF2pziZrNUnHTn0C3Tiht+F9zuvz
uW3uTxYi4TutbZa1wv0TniHXd5LcZT1iHmqOk7nD7y1nhusW3l/2r5h78DW3
9e6cNLflAy7oC6jBFr026dmtT6QHNalF+KOaSB3qUo/6bPX5RF5kjz6JnpzS
2/Fh9P9/ixdyxzyArESRxu85QRYN/988L1wT2cBn/wMzcALQ
               "]]}, Annotation[#, "Charting`Private`Tag$190549#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1GW4FWUUBtCBC6gY2KgICiIWSKfS3d3d0qCEdDdSSnc3KnbQ3d3d3d2s
78d63v3uOQfmTNykdVqUaR4riqKY2FGUOiaKfo4TRXm5bJ5HJ2qThrSkIz0Z
yMgvPpuPK+b5dKYOmfjVPj9XzQvoQl022NXgedboo8jMIr0A18wL6Uo9NtrV
5AXW6qPJwm96Qa6H86Yb9dlkV4v4rNPHkJXf9ULcCOdNd47o3/I+B/QGbDbX
5kXW62M5Z+5ECk7p2fjDXJib4bdy3dyb1PTQj8rvSMxBvSFbzHV4iQ36XTmQ
jIzTz8vOfMLLcaNoijxtH5l/MucgoXme/Mr+T1mERHa39LhyTPi+XKTfMPch
qZ5Gviqny5Syp+PHzK1JoicJv1lOkp/LQ44/Mg8luZ5NviXnyG8c2yrrhvMM
99J+vNxof08OIhPj9QuyC59yRo/lsyPMOfla/0sW5Xa4p/TiuN6GDzisN2Kb
uR6vsEmfQHb+1otxJ9xjetOY7Xb1ScBmfSI5+Ecvzt1wD+lDE3Lyr30J7oVr
S1+akovc5CEv+chPAQpSiML857sluR9+F/1oRhH+ty/Fg3DO9Kc5O+wahHvD
Fn0SRVmsl+ZhOGcG0IKddg15ja36ZIqxRC/Do/A7GEhLdoX7xets06dQnKV6
WR6H82YQJ/S2fMgRvRW7zY14g+36VC6au/IZZ/USLDOX40n4rdw09yUtP+gn
ZbvwLHJUfyyHhec4vIP6HtmYN8O77hmZIHfY3w/fJ3M4B/tZcpr9JdktPKvh
mbCfKs/ZxzaPNH8sc8l35PzwXsqSji83lw/vvP5UjyfHhudTLtZvmfuRTE8X
rrOcIVPJwY6fMn8fnk09WXiX5WR5zLEncnh4rnnbfm74G2C/VzYJ7w879Qdy
MFmYrl+W3fmC83opVpgrELFEH8Jpc3s+4rjemn3mpuH/Y5c+g9Ks1CsSi6X6
UNpQhrKssq9EbJbpw2jLfr0ZCdmtz6Qcq/XKxLBcH047DujNw3Vmjz6LK+Ye
pOSCXp415irEYYV+W/YnPT/qZ2QHknNCfxr2ZA/XWz8oW/Au8V3biXKv/UM5
hKzh2bGfLWfbX5U9w7Nsl0omkNPCNZYXHY+Ro/QUMnf4d+UCmUZWcHytuSqJ
9bjyOTkuPPNypeN3zAPCvdAzhPdLzpRfhr/Vjp81dwzPISf19hwyt+Q99ulz
qMg6vRrxWKWPoAOVqEwVqlKN6tSgJut9vno4N1brI+nIYb0Vidivz+WauVc4
Py7pcZznaHOecD7mhTKtrOXYM8TOCMU=
               "]]}, Annotation[#, "Charting`Private`Tag$190549#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV03fczmUUB+CHQhIRZRQlhJC99ywkM2R77RGSXYgK2XtEZe+yIpRRZplN
M6FBSjRoULrOH9d7vuc8n9+67/vNmdS7Ua9kiUQiyZ9iKRKJx1MmErfxifyS
WoG58gC1GH/Lg+guP8JleTsdaanPzBl5DeN5Tl+IP+Q9FOcJ/e0ckOcxmE60
MsvCN/JaJlCC2mYpOCi/wRA6U5JSlKaO31NySH6TF+hCGeqap+Kw/BYv0pXW
Zlk5K69jImV50uwOjsjzGUo32phl45y8nkmUo55Zao7KCxgW60Nbs/s5L29g
MuV5yuxOPpUXMpwetDN7gG/ld5lCBeqbpeEzeVHsCz2pSAPzu/hcXswInqUS
lalCVapRnRrUpFbsdexFrG+sX6xTfHt8T7xjPDfuT0MaRfWctHwhL2EkvWhv
lp3v5I1MpXFcY5aOL+WlvExvksxy8L28iWk0iWvM7uYreRmvxLro8/KLvIM+
dNA/yA/ye0ynr/4xrsl7eTruqU/PMXk5A+Xi/CO/Gmso5+NKvJtamZ1xPtQy
3IrzG2dbfogL8c1qJTbHOVRLMYF/9WPUGkxhhv55tTDjuR7PVKsyiX1xTtRy
TCQZr1GTqTSNb1AzMI7jsbdqRVbIg9QS3JBHqdUYFXuv5udqrJ9ahQ/jDKtl
SdBX30nNyUV5S/y/yKX5T55JP7kIf8r7aUZT/T2ckFcyOvZf/yi/yh/FN9NZ
/zA/yluZRfO4h1lGTsqrYr3iPOgL8Ju8K55LF30uLsnvM5tn4h5mmTglr2aw
XJKb8S5qdSbHOsY5UQvyu7yb/nTV5+Yn+QPm0CLubXYvp+W3GcsAWtKK1rSh
Le3ivMcZjmtdcx9fy+8wLs4Y3czy8LO8jdfj+fqi/CV/zHC5PMkZSy2m0cFv
/wNIua7K
               "]]}, Annotation[#, "Charting`Private`Tag$190549#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1GUYFGUUBtAFCUlpkO7u7g7p7i7FABRUFINSUUGkpLu7QzqlSxrpDgEJ
SQnP9+M8773v7GzObIYO3Rt0ixKJRDJGjURGxohEsr0ZiSyNGYk0Ij4XdI11
5839Kc0OXQXdXnM3svOp/ZWcynPHO9rvmIdSg2/tbzLf/Jvj2c3LzI35zhyf
t8xd5RM5jose18R+wTyAQeaklDH3ltGYHdhHywzhOdnpvIpyn36S7C4HyoTh
9clh/0y+ljPlNDlSpmUJ/zm/k7yrnyaHySEyBTXNfWQsFoT3KTMzyjk55HJd
ExKE78b+VI7nkuNN7RfD56Usu3SVdPvNH5OTF7rOun/Mw6kVPpsup26FuSkJ
uazbTWX9Afsn5OKlbgy59CvtzUjEFd0exjKO8UxgIpOYzBSmMo3czl/lvOYk
5qpuL9PJ49hqXQuScE23jyr6g/Ye5OaVbgZ59b/bW5KU67r9VNUfsvckD691
M8mnX2NvRTJu6A5QTf9nuNbIS4RZ+vz6tebWJOemrpnukvl7ynFQ947ucPjt
yUcUZusL6NeZ25CCW7rmusvmHyjPIV113RHz5+QPaY8w3RyVd8335Ahq09ce
m4XmOc4vaF5vbhveV7jeedvcXT6TExhmTsXfHt9CXtFNkQPlYJksPB8V7F/J
6MwJ7GNkxnANhu/J+TXkUf1k2Uv+KBOF65YC9l4yCrOYEe5LmS7c/7xhf0/e
D/cGv4b3Sh1zPxmHRea5XqeQeYO5HSnDtWx/Lidy2/GW9qvh9anIYV1N3THz
FxQkGl10D8L7oC7zPK6wbqO5Pam4o2ulu2b+iUoc0dXSHTd/SSGiM19fRL/J
3IHU3NUdZQFFHdus60ga/tEdYyGLWMwSlrKM5aygmPO2eHwn0nJPd5yVFHds
q64z6bivO0Ft/Ql7bwoTg1X6Evpt4dohPQ90rXXXzT9TmZO6OrqT4TenCDF5
X/dQjqIeqz2upG57+O3IEP4Xwv+ZnMRDx9vYb5gHUYWv7TGYaz7leF3zqdCH
79ecmKLhd5JRmRleT6YP/+fmD+S/crocLYfKlNQ395dxw3Oz2D5eZgn/Y+H/
wGuVkn+E60R2CfeaTMC8cB3be8gXcoacLIfL1OG6C6/p/Lbypn6qHCx/kcmp
av5GxgzPZR4rM/GXc+qFDMfD92tOQrFw3YRrPtwL5lh8aH4U7ikasMa5pXU7
wvdOJh7p2uluhdemGqd19XWnzd9SnNis1ZfR7wzfGZl5rGsf7nXzEN7hjK6B
7oy5DyWIwzp9Wf2u8N7IQk/7y/D/wAhzmvA988RjO8jb4b6lOmd1DXVnzX0p
SVzW68vpd5s/IitPdefYwEY2sZktbGUb2ynvvD0e35VsPNOdp5H+nL0fpYgX
nlv3OPwWNGSAPR5LzBNkVlaG68H5/wNRMCX4
               "]]}, 
             Annotation[#, "Charting`Private`Tag$190549#5"]& ]}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"Feedforward solution\"", TraditionalForm], 
         PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1a\"", "\"u1a\"", "\"x1a\"", "\"\[Theta]dot1a\"", 
           "\"xdot1a\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
9grDNAGjnz2+dPA2jTv8YLIwLI5LHuomzotz7tItMftEYGO/VDxTvgKIBOz8
+ecABT7JnAwLLibq///5CTH7w3z3tJQD/P8NbF+18cccpC/7CgUObT5SbCPA
4eJ6p/bkSVBipjFIIs5zqmtG+VK/T4NPwzMy1cR5bwXQqfxoIQxDzk1bFNfS
wcJdFRPnTmL/uS3tFKVcAT4qnpk/akeBce0aVTVEfsd+wpZpozOa64j9zmru
xp90FqgeVA34U89EkTOOlh5xU6DaVoP9PBHPFNs76umfhOGhH7XNzuIVYAcz
w6hmE1H/7Y0OTtpWARgL3+6B7RS4Rq71nBaRzzMyCi+OJFKgBMzazUfke/z/
FTz2XevqNEgDPl9/DyrunAKNLwYoz4n983XClPF6kggM+7+i7jwequ//A7hd
C2IsM0SllZIkSaXOESKFNhWlhRJJ2bKlSCqRLEm2lCVLVEKS4kpC9hn7Pox1
yL5E5He+j8fnnt/nv3kUc++595zzPn2ej9c7RGm3FHq+76eWp6wMFIUVtH8d
OV/LQUfLytIfomJwVvLLFt4bFWDbzzOe8WrTICiv8uIpVB98OSTFqtj8B8zn
8IwlofphJU/w3x+FwtAtX6FGXr4KFFPvnvPSE4EBXFo7V6+qAgYbv/Td1BeF
D+/77lmWXw5+engs+VkjCl+UCNfnjpYD0kO8GTfb2LVnFFg/cKutDJ0GVSuP
fP3O30PEp0VsWvT7Axhsw8d3l/UQ1LT7r5e2CcNMXrlSOqqvLhJx1fQropA4
pOfTid6/yA2/flkHzADf48K29mg8D1GXRV9dIwIl5padMEb1r9MhquLtZFHo
LOl5iKukHNyvkzWUEZ0BZZ+s2R7o/PKBdfBV9j9hGNCRWfsCjY+1t6lHwiP0
PKn9Wm6o3t29QoG3Y7kY5OdbmZdxqgJk3LLVyln+B1yy7h9vQec14/NH9Dlz
heHJM3eXGGyoAkqttyritEXhks0dmn4/ygHrUM/qzt/C8JClqHkH2l97Yzjk
vjmJwoFF6eNP0fuSWCHN/6xiBiTtUhfJlOwhAu7ceqJ1bAZsG6p9JIQ+u99J
WhW4QgRmOHHThdDPj1rk1AeGicLy74e5utD+mSdTeK/z0B8Ql5HwY1ykh2hN
bkh+WC4MN6TzCd5B9YGN7TynuhG6HpPIfyvRfk56i2NLXDngmVFAeovRJb8+
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
ASGuJIL0a+l6YnsGq94QpEdL41J6Ri9C+9/BeV+RWho8U+T4jr+UDWzrjyRv
aagBH2fa9ETR/QstM9M1zm4BbjYv9idvGidGxj6F61Vzw2aiENLQ96X/zXJw
EabARTqdkbMjkYD2RnrlIRRoc3PrwzNbEwnSsx1Yu7siLpsNBMatrw6l0eBI
q5NrNJ0Ntryo9b5T3QAuHDKwzUX3G70iMD9SlxtK6RjpTDYxweO16c8PG/PA
gkP5z770M8Eq55iiyJMUWNLDiFPWTiJGS0ednljToLpijmNKFRv7t2+JWfYS
uWzs3/RPLsr85RvD/cLWawdOG6WP4X5hpsVRt46tGcf9wr7+sF8hjOp1sl9Y
+IeGrT2o3iO9XFNj8nhs/ihBern4+6mmq/t+4/yswmhPnpLiVOzbTma+KOf8
VYx9W8Ou71d6zBnYt0lLRLyc5G3Evs3/nVaq1I5W7Nt2JanOnFtox75N2unb
YWd7JrBfNls+e5EbnvP9kN+MznOTy0Jbaux54Iq8NP9X3Uxw5KO5hq4HLyT+
3Ht5+SET/Ax4qDPgxgcFjGtujfzowP3IzH/nrKmubcN5W9ujBd7/EU/Cfm73
V/Es+zxvnLfVXTB8urLjOfZzCnSrfPGqeOznLM/84ry4Own7uaenKk/O/Y3F
fu6Rv93ze06e/+/nih3sIU8yztt6c63P1lS6AudtfcqoNdum0Iz93K2k0IVH
bp3Yz23aGfNBOKYb+7meOLtUzk192M89fLLd/jO9H/u5tjc2qlcHBrCf++gV
HOD3nI39nLp2x9qv6P0k/dwZneWDyRZjBO4n5vXeSH58DPcTg0JHrTfvHie8
bObyTRxaQRGPg5gkep/I/mIq+ap1B66PEaS/63sbYpbWOkKQ/m2D+pIfvWZ1
2L8FKv6KHjrYDMb3XbZ62MCB5q9/l192G5DmfsDn18oJi/1TiP3LmGB2vVY9
s5MLOvLtpD7KYgKBvVMlcwPc8Hbj3eIpND9vKLVqnJrlgalTy99/Rue/6SfE
3sJ5Xii/2X9vpzoT532FOUz8aPKIwnlfUp3dpvy73AnS3z2utuIxePYa+zue
9pyO34GJ2N/lNkRUGH1NwP7OySZndUNxOPZ3O4qSbhD7g3D+V85aSuW4XD7O
/9qZd7Rs6FstIP1dEHdkw+m2duzveCf3XeSRY2F/1/3Dze/iYg/2d0dV36vw
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
lxZ7bw==
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{433, 2775, 2773, 468, 856, 746, 654, 580, 524, 
                874, 764, 672, 598, 892, 782, 690, 910, 800, 927}}], 
               
               PolygonBox[{{2770, 2774, 384, 801, 691, 599, 525, 469, 434, 
                385, 802, 692, 600, 526, 470, 435, 836, 726, 634, 560, 504, 
                386, 803, 693, 601, 527, 471, 436, 837, 727, 635, 561, 505, 
                387, 804, 694, 602, 528, 472, 437}}], 
               PolygonBox[CompressedData["
1:eJwV08lvTWEYB+Bzb2lVSCQiodVWDUvz0BaltrSG29oaa2pRCyIhkaCtljSx
cHuVqiksiIR/QAedLTWWrU5qTAwbrDzf4sn7e3/nnJzc796bf6gmcToeRVGM
9wzNjKJ3JBXNpFieFkXtbjrMAkZ1r7nNCtc6dJVkMaZrp1Q/bL9CYXgBLfqV
+k75CNmM6zoo04/Yr1JEjDv6Vfou+SgLmdB1slP/wV7LRuLc1a/Wv5GPkcOk
bp/uh3yL7XTpdulG5To2cdaezjM5LbxP/mO2kuCCfRYvQ+f5NXK3fJxL8hxy
5RozxhO5wczio/v3mz91yfAZ5XnskM+bmaR4YW8y82gLn8Nzu80x/U2z3rxs
zqWFzfZzZgZJnttvmDm0Mi2cg/nXvEe9PJ9y+aI5m1fhmveslXvkE+Rxxh7n
qTzl+gH5l9xMKd26Pbpx+RrFTA/noftntlERpvvW6XrlKhbxSXdQ91tOUUaP
LqGbCOfGFtK5r1+v75Oryeezrpdy/aS9ka1k8EC/Qd8vn2QxX3R9VITvwn6d
EmbwUF+gH5BPsYSvun726qfCmbKNTB7pC/WDcvjjLOWbboDHFLn2NvwOWMZ3
3SD/AQG6a8s=
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1:eJwVz6lOQ0EYgNGBuqLQVRj2gmdfPIKk4JsgMNCyo9AkoDAkCAw7tPAedF/e
gRrWAgLDueJkZr5/Jrm3J72+uNYZQuhghUY8hCa/wqjBPk3mYyE8aXV+GNH2
aDBn9qjV+Cap7VJn1iyvVWkzrO1QY8Yspz1wzx0Vvhgy36bKtHu3WplPBrUt
KkyZ3Whd0TdyTItlvaQv2J/SJq19aGfWBIdc6yfWGFkGnLutB2zal5mM7nmX
sj/nj1UtHv07R7ywpBXde6ffeYMSE/qVVuCNPi1LkXGzS+2ZV3q1DAXGzC60
f2YjOwQ=
                "]], 
               PolygonBox[CompressedData["
1:eJwV0d0vlmEABvAnaTMdGMlbW7M5CKmjEn+BrzqIzkIq5Ui01Wa1EZmKUniZ
FXPg46C2phPLtz+CE9857+tItgr97oPfruu+nvfheZ83q/bB9caEKIqOMMVy
chStMGDoJ04fvfTwljd0s8gOp/yBWpa4cDSKXtsW+ErMdodFzrv2ynZIofMz
trhqn7eV6f384qZt2zYRHk5vJEO/zQJ5zl2uf9aP60+o0GPyOcP6HnX6gc+d
Cf+bj7YBeYxHFDi/k2m0Bc49clNekXPuHZGZdPPJPiiTaKLUeUim007cuU/+
lNVyy/2n5UvGbXF5KBvkSZkiW7ilz3NO73TPpJ6sP6Zcz5AdDOm/uafv+9wH
PVF/yGW9lQ3KnGddLwnPww+qwveyjekH3A/PLWuYIzc8p+vX9Pfsctf2z5av
P2WdUtuMrVjv5TuVtg3bifDbMUuO7YXtL5ecW1ijxD5tKwrvmm/csK3bRvV9
6sNvEt4hM2SH39X1P1x0bmaVYvsX2xqp4Tsyzdnwvmz/ASk9Xys=
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1HfcjWUYB/DXfO29R7xEJSubUpkvWRGpjIyUrDd7R1GKsopCoaEhlVU2
LaNBg+yZWUoR2eN7ffrje37XfZ3zec557vs6T1KXlFZ9UiUkJIzyElnCyzY5
nSdoSGVSk4a0pCM9iWQgI5nITBayko3s5CAnuchNHvKSj/wUoKTv/FW+RneS
qUJBbvbedvk6T9KIqkH/uPyQYTxMIUrp75Az6EFjqgX9E3I+w3mEwpTW3yln
0pP7qB70f5cfMYJ2FOEW/V1yFr1oQj29c3IZL1Aj6P0hFzCS9nFtvStyLZMo
yq16u+Ub9KaldRrWq5tSX/2fXM6LcZ/WmdmsrhnUJ+XHdFHn4Wl1G5nIt+oO
8TvVV+W6OFd1QSbHezI7g/g5foMsxkhusr5N7pFPyTdlJ5mLIfSxbiXTMoAN
cUayMMNpZt1Anpf95ArZTeZnfJyBzMKW2HtZlFrqWvJP+Qld1XkZpX5QZuA7
dcfYH/U1+QVTKEYZvb1yNik0jxnWuyBXMoE7g95f8lNG8yjFuV1/n5wT90wL
7gr6p+RCnol9IImy+vvlXPpyP7UpQTnvHZBvxf3H2XI3JWOuY1Zj/mKmKO+z
B+Xb9I995Z64lv7fchHP0jlmhgr6h+Q7DOABkvUuylW8xL3xfXr/yMWMoa11
Rr6PeaGZ+rr8kqlx3lTU+02+y8C4tnU6Nqpb00h9Sa7mcXUBXla3k1n5Ud0r
5oc6cR/ydOyPXCIfk/kYyljrh2QmBvKDdQ9ZhBF0jTOMBxP9+UrZXRZiGK/E
LMgcDOYX63igFY//AWWs75CH5bzYP3XumPe4F5meTfF/obH6slzDRNpbZ+Mn
dd3YT/UZuZTn4j5iPuK5ydfqV2N+qGR9RL7H4Jhb6lFH/1/5Gc/TLeaHyvpH
5fsMiTOifsxPzEWcdZxJ3AdVfPaY/IChsXc0iN+nf1Z+zrg4l5hFvdR8o54W
M67OyVZ1ikxK9f9zv5L1DarMofQ=
               "]]}, Annotation[#, "Charting`Private`Tag$190634#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1WW4VFUYBtABpFNAGumQ7u4GaZRSGiwQFBRBUBqL7kY6BSRVGunulkY6
pFNc+/HHer53v3vOvXfO7DM3Q+tO9TtGiUQimaNGIr2FDNEikWVyI+JzRLeU
PmS0t1zXmAQc1S2jkv6o9dfk44muL5n0K6ybkJBjuuVU1h+z7kF+nur6kVm/
0ropiTiuW8HBOJFIfzOL/VX693idE7qVVNEft+5JAZ7pBpBV/5v1+ySmvfVL
cxon7TexviEPpTKrdFV1J+RvKMhz3UCy6X+3bkYSTuma6m7Kw6jCb7pqupPy
txTiha6N7qE8njp8p8uu+0NuTlI6WP9rTue0/fesb8nDqcrvuuq6U3IvCtPZ
+jXmyi/tt5UfyRPoLyejrtzNjMMi+Xuve0teLbcI71NOyBvyp+Yrc4Q5I/yd
Zkr+cs375u3w95gjzL5mUiZQzbqrGYsxLLQeZL7J5PA+XV/DPB3utdk7nDUz
MeMoYt3FjM4o5ln/aKYJ98S17czHuokMkJNTT+5uxmWx/IPX5ZDXyC1JRkfr
CDPlM/abyXfkkVRnte7t8P7kPhTlle5HcurXWrciOWd1a/iJXPbW6VqTgnO6
tQxiMEMYyjCGM4KRjOKQszzaHMNYcvtZ6/2MNqTkvG4d48hjb4OuLam4oFtP
Tf2Z8BlQjEg4W/q8+o1yO1JzUbeBWvqz1v0oTpRwRvT59JvkD0jDJd1GauvP
hTNECaKGe6/Pr/9T/pC0XNY1192VR1GDTbo6uvPhs6IkX1jHYL4cLfw++Yk5
ifrhe8M6HktC5/oC8mb5o/AcyYnCWZI7mVGYFc6xmYq/vb6F+Y9udHiP4Szz
tvyVGZux/GI92EzHlPA+XFfXvBCeX3NgOANmEsZTyvpLMyajWWD9k5mWSeG5
C/fBfGpOZqCcggZyDzM+v4Y9v6egvEX+mHR8Zh2V2fIV+y3le/IYarJZV093
MTyDlCZ6uB+6Z+YU3gnT6wrptsqfkJ6rula6+/JYarFFV193Kdw3yhCDqfrC
+m1yezJwTbeVBvrL4bmiLDH5WV9Ev13uQEau67bxTvgswnNLOWIxTV9UvyN8
t5CJG7rtvKu/Eu4p5YnNdH0x/c7w7Eb9/3/STd0OZlDc3q5wDsjCLd1ODnum
Zpol7O8O95es3NbtYhYl7e3RfU427uh2M5tS9vbqOpOdu7o9NNRftR5EBeKE
z1D3PNw73mWO15XW7ZO70Et+nbfC7zKjMZI54V6aqZkYzqvrWpsP9OOozV5d
I921cFapSFzm6svo94dniRzc0+1jHmXtHQjnlZzc1+1nPgtYyC+U87qD9ruS
iwe6AyyivL1D4ZkhNw/D/10WU8HeYV038vAofI+xhIr2jui6k5fHuiM+j8Nm
Y3vXdUOoRLxwTnUvwlmiIT2tE7A0vM5Mz9Tw7Lj+P7wkGq8=
               "]]}, Annotation[#, "Charting`Private`Tag$190634#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1HccTmUYBuAPiURGUkZm9ohkr+xNhGyyt5Z2qWgrKhpK2XuPkp3snZk9
MkJ2SKiu54/r99zv/Z1zvnHe8+Xq1L9pvySJRCJv0kRidLJEomzyRGLlHYlE
F7JzXredMYxlHOOZwETKOf4Xx3UlBxd0O5hEea+t0nUjJxd1O2mmP2T9JuVJ
xWR9Bf1quTu5uKTbRXP9Yeu3qMDdTNFX1K+Re5Cby7oeusvycBqxW9dCd0R+
m4qkZqq+kn6t3JM8XNH11F2RR9CYPbondUflQVRisPU9zJbT8Lz8rzma1gy1
zsxieZrzK8vr5F58IefkIfkNMyVT5b8c10v+K45hlJyfx+WPzPtYyI/Wk8wS
cZ/4zXktzWP62eZgc2RcnyVUtn7HTBvnMsd6olmcn+N7WA8w/zPnm2PMMWZh
2sjDzCxxrfjNzEeZ7j2rmOt1vflSzkVeeaB5F9Pkq47rLV+NY2jCXl0r3e/x
uahCWl7QJRgrt2WG4x6z3iD3IR/XdPtorT9u/S6PkY6Z+qr6jXJf8nNdt59Z
VPPaJl0/CvC37gCzmcNc5jGfBfzAjyzkJxaxmOqus9n5/SnIDd1BllDDa1t0
T1OIf3SHaKM/Yf0eVUnPUn1N/Vb5GQpzU3eYtvqT1u9TjQws09fSb5OfpQi3
dEdopz9l/QHVuZfl+tr6X+XnKMptXR/dNfkrmnJU1173h/whNcjIi7okjJPb
scJxday3x36nWDy/1qliP8j/er2vfF3+mic4puugOx17mJpxz6zTMVe+j5fk
pIyXx5pFaC9/amZlaTxDZqnYr65X19wR99scEN/DzM3D8f9g3s0CZliPN4ux
PPa3c/uZf+vnmiPN78wC8R40sx5iZuKneNasJ5uPxP9b7FfndzTP6OeYQ8xv
Ys9TK+6tmZ55ciZelpMxQe7AZ3I2lskrXauevDP2PcVJxJ7S3Yjr0pzjjntK
d1b+mNrczy/6+vpdcZ8oQRJO6FfRwGu747flEZJyUt9J/6f8CXV4gNX6hvo9
8ZkpSbLYw7p/zG9pwSnHddadk4dSN/andQbmy5l5Rb6DifI4sygd5c/NB+M+
yNPN0qxxvUbx/6WbZb4S+8bME/+b8T9j/baZmh+YaT0h7jMr4n3iuTFvmvPM
Ueb3ZsH4jXkyfjPzfhbFPbWeYpaMve69u5jndcPiO8r5qBfPkHlv7CE5C6/K
yZkkP8VwOXt8Bnmt6zSW98ZxlGKQdRpmycnjWZVvxV5jtFyIlnEPzAfis8mn
XaerfCH2PfXjWbTOGN9dzspr8p1MljuxzjmPW++L1yjNnfGs627Hb0Erzjiu
m+5i7EEakI31+ib6/fLrlCEFZ/UbaOq1A9ZvUJaU/KnfyCY2s4WtbOMJxx90
zEDKcRfn9N31l2IP0JAH4/10KZgid2aEnCOeb3mGWYZV8d/l/P8BJBAjnQ==

               "]]}, Annotation[#, "Charting`Private`Tag$190634#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1GXYVFUYBdChBQmREmlpRERBGkEUaUS6G0npRqQkFJBulJJG6W6kpbu7
pREBKdf5sZ5373fO3JlvvrmTrmGbiq2jRCKRAlEjkW0xIpHusSKRmMyIGYlU
JBlP7CfaZeJPvT152W7fwy4Wv+mVeIen9jvYyS52850zbzDT45VJzjP7SXaZ
2ap3IB9/2fe0i80svQrv8p/9ZLssbNM7kp899t/bxWG2XpUUPLf/xS4r2/VO
FGCvfS+7N5mjVyMly/XPOCcP5YVzv+rZ2KF3piD77HvbxWWuXp1UrNCLcV7+
mZfOTdHfZ6fehULst+9jF495eg1Ss1L/nAvyMF45N1XPzi69K4U5YN/XLj7z
9Zqk4bX9NLsP2K1341MO2vezS8ACvRZpiTDdLgd/yd0pwiHnf7B7i9/12qQj
CjPsPmSP3IOiHHa+v11C/tDr8B6r9C+4KA8nKr/pOdkrf8dnHPH8AXZvs1Cv
S3qiMdPuI/bJPSnGUecH2iVikV6PDETnmMcG2SdmsV6fjMTguMd+tE/CEr0B
mYjJCY+d5BSnOcNZznGeC1zkEpe5wlWu8ZPrJWWp6zQkM7G47rHB9slYpjci
C28wy+5j9svf8zk3nB9i9w7L9cZkZbVenEvyCGIzW8/FAbkXX/Cn/hW35Unc
dL2henJW6E3CvSVX4x85G2vkL7ksjyQOc/TcHJR7h++PXIf/5OJslStwR75i
tmWyfNJswmOi8jdduOV9/Gy+y11WOnvWbM4Tvgn3sFmdh+H5+jWzPc/D/aOv
NUtwnyv6RfNbnjEq/N/NhuHv4rV+y+wc7nF5rvkJh+TzZkv6hO+5WTe8hvwl
2+Svw3uUf+FUeG9EC3+Lv2GYmYJVHmsafkfkGvwrZ2edXJKr8mjiMk/Pw2G5
LyXYrlfknvwrt117uJ6S1Xqz8Bsj1wyfT/gemR14Ee5tfb1ZimvyGOIxX8/L
EbkfJbnjuiPsUrFGb04O4rPALh9H5R8oxV3nR9qlZq3egg9JwO92+Tkm96c0
95wfZZeGdXpLcvIWf9gV4Lg8gDLcd360XVrW6634iIQstCvICXkgZXng/Bi7
dGzQv+VjNuiluS6P5W0W6YU4KQ+iHA89f6zde2zUW5OLjXoZbsjjSMRivTCn
5B85LNcLn7lcnh1ypfD9k6fwyLXH6enZpLdhv1yLp3JuNslluSlfMlszXj5u
NiJCYn2J+Smn5QtmK36Sj5j1ecTLcD+bncI9Lu80K/Mg0K+a7cI9ylT9tNk0
fDeJzm26huuEe8R7H29mCN9BNjt/zmwR3jtt9QNm7XB/hd8ls2O4h+TNZjlu
yZfNNkyQT5iNiUISfalZhDPyYI7KDXglV2CXXIWH8jQee08T9Ixs0duRhy16
+XD/yRNJyjK9KGflIXzNbr1q+Kzk6ZyRmxGDO3QLrx0+D6/zP7YxQjY=
               "]]}, Annotation[#, "Charting`Private`Tag$190634#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1GcYjmUAhuHP3qtUtEVLw6ZB2kNLdqWFFkJlE4omLZuMaGihFAkNlRKa
KqNhtTeloqLz/nEd93i+8b7PqtGpZ6seRQqFwuqihcLuUoVC1bKFQt8yhcLf
pQuFiWiLejhOP1m/P5bIA1DAXvp+uh38JLRDe91LuhPxmVwfx+sekg/Ay/JA
XKdbIZ+Hn+Qi2FvXX97JT0Zv+VO5A9rLHeRFfFNM5v+ln+tv57/lr8fTfAU0
0J9Ap+gOxHj+b/qK/hZ+Q56FXkWfoGWxCoOMX09X6hfS8+l0WgTL8bPxUfQX
/eu0F51DK+N9FDW+Dx2gn0f/kUfTP+SH+D78Gv5iPMKXQAf9xXSxrlk+x/9H
v9DfwX/Hd0VD+UR5Kn8QXpWHyBv5Thgsd8178BfgF7kYqukGyv/yU/JfuES3
RHcSvpQboalumnwwXss8oTiqZ150//FT8100RjP9dH0NLM2zoAT21Q/W7eKn
4VI0QUmUQmmUQVmUw34+f4vP7+ano2P2HMpjf2NDjBXwsHxZ9hMq4ABjQ/VF
MEO+PGuOk/QP6w7JGslDUREH6ofpimKmfEXmE831M3Q18YY8DJVwkP5WXbGs
lXxl5ggn62fqauFN+VZUxsH623TF8ah8Vd5d97LcHBsyZzhF94h8KJbJt6EK
auiH60rgMblT5kL3inwyNubdcKruUfkwvJX3kzfxnTFc7ia/y1+IX+V75V/5
G7GHfIg8gi+JMfx2+ri+L7+WvyTPz5dE58w5fVW3gJ5Cp9BddJOxO/nvs19o
N/oMrYj30Nz4afQx/Xx6OJ1Ad+S56duZa7o555J2oU/Scnn+PKPx7vkt/Uu0
ZfZAzhh+M3ZfVHcT9pRryrfzpTBL7iev4y9Fl+wP+TX+VGzOOuJ03ePyEVie
uwQ35CzLF2GrXBW1dHfIpXNfyFdnHXGGfpbuSLyT85p7EYfq79SVyTvJ12Td
csfhMGN36cviKfnazFPujZzVnLecoZyL7P/s8+zd7Ecc7rt3+1653HW5R/MO
OFP/hK42VmRdsh9xhP4eXfmsTe62PDPO0j+pOwor5buy/3CkfqSuAmbnPsk5
0S2VT8OW/BfO1j0lH41V8t3ooftAboVt2WeorRslV8w9KfeX1/Md0S1nSn6d
Px1f5TnkH/juOEs+R36aPwYT+Z303Zw5fkvuQHp15pGWz7sa60k/1C2irXM3
0GJ4B78bv59uzVmnN9O5tEqeHTWNH0Xv1T9PK9Gx9M+cdTrX+AD6mbyYXpaz
Skuhe848fUN3Bqbyu+nXmR/+R/4GnC23kJ/hj8V7uQPkr/hrMFLuJX/Et8Ef
2X84WnefXBnPZp/mjtC9KZ+JbzJfOFc3W66D9+VR2Y84Rn+/rgqey3qhs25Z
5hrf5rlwnm6OXBcf5P7InsWx+gdyh2CePFD+nL889wdfGivQ01gX+lbeFd/l
mXB+5k+uhw9zfrOfUUf/YM5w5jzvnmfABfpndfXxUdYt+xl19aN1VfGCfGN+
Gxfqn9M1wGr5gexn1NOP0e2Ve0i+Kb+Nlvp5uob4WH4w+xX19WN1e+fOk2/O
b+Mi/fO6RvhEHp29ggb6cbp98KLcO7+NVvoXdI3xqTwma4iG+vG6algo98lv
o7V+vq4J1shjs2ZopJ+gq557UO6b+yf3p3wOvs9/oY1ugXwc1srjMje61XJb
bM8aorFuorxvzog8SP6CvwL9clfJy/kW+EG+R/6J74HWclv5Rf54rJOHy1/z
12J85lf+mG+HmXzxnJ+sB92m6539y++BOvomdFLWku5Hx9G/6DK62Phg+qW8
hF5JZ9EyWIn+uT9ztjP39Fw6jRYyPzlzxkfSn/VLszdzr+Vco42xdnSh7gRM
4v+h6/Uj+G/46zAhe0D+hG+Pv7JXcpfwfXKW+D1z56Cusf8BHoxxiw==
               "]]}, 
             Annotation[#, "Charting`Private`Tag$190634#5"]& ]}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"LQR feedback solution\"", TraditionalForm], 
         PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1c\"", "\"u1c\"", "\"x1c\"", "\"\[Theta]dot1c\"", 
           "\"xdot1c\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.8663109480511103`*^9, 3.8663109548219194`*^9}, {
  3.8663110103439465`*^9, 3.8663110410939927`*^9}, {3.866311204431121*^9, 
  3.8663112114568467`*^9}, {3.8663118768634553`*^9, 3.8663119511404123`*^9}, {
  3.866312604436941*^9, 3.8663126430494423`*^9}, {3.866563616806991*^9, 
  3.866563622540164*^9}},
 CellLabel->
  "Out[1248]=",ExpressionUUID->"6ea968fb-95a4-45be-b91a-7314af2c2faf"]
}, Open  ]],

Cell["Plot the timing wrt n for a fixed initial condition", "Text",
 CellChangeTimes->{{3.86491957909173*^9, 3.864919591628652*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"39878c2c-e942-4347-a752-27bba723a924"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"TestTiming", "[", 
    RowBox[{
    "n_", ",", "ICs_", ",", "order_", ",", "A_", ",", "maxIter_", ",", 
     "maxError_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "uMax_", ",", 
     "maxCount_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "t1", ",", "t2", ",", "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", 
       "\[Theta]dot1a", ",", "u1a", ",", "\[Lambda]1ff0", ",", 
       "\[Lambda]2ff0", ",", "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", 
       "x1c", ",", "xdot1c", ",", "\[Theta]1c", ",", "\[Theta]dot1c", ",", 
       "u1c", ",", "J", ",", "K", ",", "InitGuess"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"t1", ",", 
         StyleBox[
          RowBox[{"{", 
           RowBox[{
           "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",",
             "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
            "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "J", ",", "K"}], "}"}],
          FontWeight->"Plain"]}], 
        StyleBox["}",
         FontWeight->"Plain"]}], 
       StyleBox["=",
        FontWeight->"Plain"], 
       StyleBox[
        RowBox[{"AbsoluteTiming", "[", 
         RowBox[{"ffCartPendulum", "[", 
          RowBox[{
          "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", 
           "order", ",", "maxIter", ",", "maxError", ",", "uMax", ",", 
           "maxCount"}], "]"}], "]"}],
        FontWeight->"Plain"]}], 
      StyleBox[";",
       FontWeight->"Plain"], 
      StyleBox[" ",
       FontWeight->"Plain"], "\[IndentingNewLine]", "t1"}]}], 
    "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ICs", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ICs", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", "0.5299673880107454`"}], ",", 
     RowBox[{"-", "1.8812572134750898`"}], ",", 
     RowBox[{"-", "0.6808113420271384`"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ICs", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "1.684020641268611`", ",", "1.9548442211134827`", ",", 
     "1.8410749066439154`"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{"\[Tau]", "=", "5"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Tau]1", "=", 
    RowBox[{"\[Tau]", "*", "1.25"}]}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"A", "=", "0.2"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"order", " ", "=", " ", "4"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"maxIter", " ", "=", " ", "30"}],
   FontWeight->"Plain"], ";", 
  StyleBox[
   RowBox[{"maxError", " ", "=", " ", "0.01"}],
   FontWeight->"Plain"], ";", 
  RowBox[{"uMax", " ", "=", " ", "2"}], ";", 
  RowBox[{"maxCount", " ", "=", " ", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n1", " ", "=", " ", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n2", " ", "=", " ", "50"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data1", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"TestTiming", "[", 
      RowBox[{
      "n", ",", "ICs", ",", "order", ",", "A", ",", "maxIter", ",", 
       "maxError", ",", "uMax", ",", "maxCount", ",", "\[Tau]", ",", 
       "\[Tau]1"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "n1", ",", "n2", ",", "5"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data2", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"TestTiming", "[", 
      RowBox[{
      "n", ",", "ICs", ",", "order", ",", "A", ",", "maxIter", ",", 
       "maxError", ",", "uMax", ",", "maxCount", ",", "\[Tau]", ",", 
       "\[Tau]1"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "n1", ",", "n2", ",", "5"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data3", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"TestTiming", "[", 
      RowBox[{
      "n", ",", "ICs", ",", "order", ",", "A", ",", "maxIter", ",", 
       "maxError", ",", "uMax", ",", "maxCount", ",", "\[Tau]", ",", 
       "\[Tau]1"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "n1", ",", "n2", ",", "5"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"{", 
   RowBox[{"data1", ",", "data2", ",", "data3"}], "}"}], "]"}]}], "Input",
 CellChangeTimes->{{3.86491975170458*^9, 3.8649200747844825`*^9}, {
   3.8649201193449864`*^9, 3.8649201277452536`*^9}, {3.864920161157383*^9, 
   3.8649201804041224`*^9}, {3.8649202316614504`*^9, 
   3.8649202570341964`*^9}, {3.8649202887668743`*^9, 3.8649203111236*^9}, {
   3.8649203998797293`*^9, 3.864920406429599*^9}, 3.864920690003351*^9, {
   3.8649207565047197`*^9, 3.8649207687887225`*^9}, {3.865443836032448*^9, 
   3.8654439001889315`*^9}, {3.865443943847969*^9, 3.8654439516324787`*^9}, {
   3.865444005309313*^9, 3.8654440126169777`*^9}, {3.865444117090568*^9, 
   3.865444129382637*^9}, 3.865444205232381*^9, {3.8654487745611453`*^9, 
   3.865448794117893*^9}, {3.8654493307732735`*^9, 3.8654494059632287`*^9}},
 CellLabel->
  "In[529]:=",ExpressionUUID->"00a37dc2-62ae-4dae-b415-9099fdf1317c"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
     LineBox[{{1., 0.5801234}, {2., 1.3931291}, {3., 2.0573704}, {4., 
      2.879207}, {5., 3.7488331}, {6., 4.619808}, {7., 5.5689755}, {8., 
      6.5179724}, {9., 5.9206332}}]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
      NCache[
       Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
     LineBox[{{1., 0.6558979}, {2., 1.4056329}, {3., 2.007635}, {4., 
      2.7655901}, {5., 3.4780036}, {6., 4.4364822}, {7., 5.361985}, {8., 
      6.3502002}, {9., 7.6669694}}]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
      NCache[
       Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
     LineBox[{{1., 0.9342993}, {2., 1.422374}, {3., 2.0171202}, {4., 
      2.7667796}, {5., 3.6646655}, {6., 4.4807373}, {7., 5.515782}, {8., 
      6.3943324}, {9., 7.7256335}}]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 9.}, {0, 7.7256335}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8654440903271246`*^9, 3.8654441524952445`*^9, 
  3.865444998743621*^9, 3.8654490003749323`*^9, 3.865449534716054*^9},
 CellLabel->
  "Out[539]=",ExpressionUUID->"c48e2050-8d10-451f-b104-0d216a786bc6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"tempfile", " ", "=", " ", 
  RowBox[{"FileNameJoin", "[", 
   RowBox[{"{", 
    RowBox[{"$TemporaryDirectory", ",", "\"\<saved.wl\>\""}], "}"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Save", "[", 
  RowBox[{"tempfile", ",", 
   RowBox[{"{", 
    RowBox[{"data1", ",", "data2", ",", "data3"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8654450594542084`*^9, 3.8654450658101754`*^9}, {
  3.865445097341092*^9, 3.865445128001289*^9}},
 CellLabel->"In[84]:=",ExpressionUUID->"b093ee39-dd32-444d-9179-98c9db25b0cb"],

Cell[BoxData["\<\"C:\\\\Users\\\\Administrator\\\\AppData\\\\Local\\\\Temp\\\\\
saved.wl\"\>"], "Output",
 CellChangeTimes->{3.8654451302915535`*^9},
 CellLabel->"Out[84]=",ExpressionUUID->"e6ed3ba0-0036-4061-9283-289e12e8d71d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Get", "[", "tempfile", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"data1", ",", "data2", ",", "data3"}], "}"}], ",", 
   RowBox[{"PlotLegends", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<data1\>\"", ",", "\"\<data2\>\"", ",", "\"\<data3\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotLabel", "->", "\"\<Time of Computation vs N\>\""}], ",", 
   RowBox[{"AspectRatio", "->", 
    RowBox[{"2", "/", "3"}]}], ",", 
   RowBox[{"ImageSize", "->", "400"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.865445145808591*^9, 3.8654451951498137`*^9}, {
  3.865445286170705*^9, 3.865445373405808*^9}},
 CellLabel->"In[98]:=",ExpressionUUID->"5d6d656e-289b-47f2-843f-38ea3bde5006"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGBQB2IQDQEf7LW3avw9t4DVASrgYPLBI7GZSwDK53CQigrm
b5/90h7CF3CIOntfs3PiOyhfxEF+YZqH6NEPUL6Ewy6BgDb//Z+gfBkHk9Pr
DfqqP0P5Cg46yz9PPzNfCGq+kkOEdLL6HhcYX8XB49382JIb/FC+mkPSs49Z
+X0w92g45GgHBgb8hfG1HLYIzmT2S4DxdRx+mjS9WNIF4+s5GLdw3D11H8Y3
cDBQZjuttE0Qyjd0uHOkvuCLPsx+IweZnSeZ38gJQ/nGDhdFt23YoSgK5Zs4
yM3LD1XWhfFNHWxezdNmSJGA8s0cfGNuPLHqF4fyzR0CNn/T1VSVgvItHPa5
Ft44vkUayrd0+CKvq3lJAca3crgwkdH14g05KN/agdF+pmm6tzyUb+Pwmzfv
2JG3ilC+rcPxiJhL7K5KUL6dg3vi2e1fzsH49g6P8wTWim5VhvIdHFhT90/e
fUQVwm9wcNi1+1zbn8lqUHlHB4eTl1eUnVCHyjs6ZAaX9ufIaUDlnRz2S76+
yDVLCyrv5MA04/q2s381ofLODge2z3dKidaFyjs7dPj8FAh5qO0AABhsm6c=

         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGBQB2IQDQEf7POfublryLA6QAUcUjUX346RE4DyORzeLFT6
nLvspT2EL+DwrdLQMqrqHZQv4lC51Ty45vsHKF/Cwcqk7HK5xicoX8ahxN4n
/UzmFyhfweHNOZXfhv1CUPOVHG74tmRw7BKE8lUc9l3IvfxyFT+Ur+YQtnjT
HrYTMPdoOMgqzFh83BymXsvhwsG+qD3dMHkdB4sNaetkn8H4eg5GJROfz18L
U2/gsIzrdTbTRBjf0EH+4AvfBc3CUL6Rg5ebZo3gChjf2OFASdR2x1gxKN/E
IWK2QEupqziUb+qguNbwRcsCCSjfzMGq5cHyBGYpKN/cwSqu8YWnpwyUb+EQ
sdv8Qq+TLJRv6eDuGXnhqAeMb+UgWSYx+d8xeSjf2iG0+7F06goFKN/GYZK7
2jSvb0pQvq2DboHc52XJylC+nUNcyWGGy/yqUL69Q/u7xSnNk1SgfAeHXvbo
N9881SD8BgcH8bz1u/VXQvkMjg7OPFoJH6+pQ+UdHVINXmdN19eCyjs5+L+7
9LDmKpTf4OTAqZ/2YY6eNlTe2eHfoTYmQU9dqLyzg9TkLRffF+o5AABIN5nF

         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGBQB2IQDQEf7EUTr/xvzmR1gAo4GE7ZYbxDSQDK53Awf+2U
VLjupT2EL+Cwh3uKSETDOyhfxOHLQSOzks8foHwJh03Z10pmaH2C8mUcontO
M5n/+QzlKzjsqW//+9NTCGq+koOb0VeWy6cEoXwVh+5Jrxn9gmD2qzlcyF85
5cU6GF/DQUagJp0/HaZey0GsWWdDzm+YvI7Du/33Kz9fhfH1HM7M/SK5+geM
b+CwUDAn5r8czH5Dh0ItjiuBPcJQvpFDy9SQ7Ue4RaB8YwdtntsJny6IQvkm
Dm9PVSwtS5CA8k0dhK4brtuhAeObObzazrU3cp8UlG/uMDPmGt+EmdJQvoWD
W7mAdbCADJRv6VBglt73rVIWyrdy+BP5aPv1HAUo39phh0PTo+MxML6NQ0OW
uB6bkiKUb+vwyc3Re1OgEpRv5xCuFs6z6YwylG/v0J3EbPxhqyqU7+Cgtaig
fXollN/g4OATv2/1lXfqUHlHB45u/XqtYii/wdFh46P1KlektaDyTg5Jii0T
V+zUhso7OZx9/fjPikxdqLyzw/Edjx6t+KMDlXd2sHhbfMyx1sABAPyroAY=

         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[
       Rational[2, 3], 0.6666666666666666], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Time of Computation vs N\"", TraditionalForm], 
     PlotRange -> {{0., 39.}, {0, 16.4892849}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"data1\"", "\"data2\"", "\"data3\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8654451469612217`*^9, 3.865445196024532*^9, {3.865445351728739*^9, 
   3.865445374046602*^9}},
 CellLabel->"Out[99]=",ExpressionUUID->"903ec73a-0648-4868-ae92-a47c15aafc30"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Min", " ", "=", " ", 
    RowBox[{"-", "\[Pi]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Max", " ", "=", " ", "\[Pi]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]dotMin", " ", "=", " ", 
    RowBox[{"-", "2"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{"\[Theta]dotMax", " ", "=", " ", "2"}],
   FontWeight->"Plain"], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"xdotMin", ",", "xdotMax"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Init", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]Min", ",", "\[Theta]Max"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]dotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]dotMin", ",", "\[Theta]dotMax"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "xdotInit", ",", "\[Theta]Init", ",", "\[Theta]dotInit"}], 
     "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Tau]", "=", "5"}], ";", 
   RowBox[{"\[Tau]1", "=", 
    RowBox[{"\[Tau]", "*", "1.25"}]}], ";", 
   RowBox[{"A", "=", "0.2"}], ";", 
   RowBox[{"order", " ", "=", " ", "4"}], ";", 
   RowBox[{"maxIter", " ", "=", " ", "30"}], ";", 
   RowBox[{"maxError", " ", "=", " ", "0.01"}], ";"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n1", " ", "=", " ", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n2", " ", "=", " ", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"TestTiming", "[", 
      RowBox[{
      "n", ",", "ICs", ",", "order", ",", "A", ",", "maxIter", ",", 
       "maxError", ",", "\[Tau]", ",", "\[Tau]1"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "n1", ",", "n2", ",", "5"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", "data", "]"}]}], "Input",
 CellChangeTimes->{{3.864920781117711*^9, 3.864920799837621*^9}},
 CellLabel->
  "In[421]:=",ExpressionUUID->"21dbe1b5-6466-4952-9587-d4bdc27c8f51"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBmIQDQEf7F/GfJsw1YTFASrgMG3Vv6CA1xxQPoeDwszM
MMFMNihfwGHtZoHLJTZcUL6Ig9p73W8rXsL4Eg662Wv4TpnyQPkyDroqCSWV
yjC+gsMZnjK5AglOKF/JYYPeDgOZTG4oX8VhUpTGzDlaML6aw7Ybk36Fr4a5
R8Nh0mmVfp817FC+lkOGT3mvzzOYvI5DW2TGcxNvmH49h1ddyXkc+jD7DRzi
jjE3SG7ihfINHfbkfjgfFi4A5Rs5eHy5fqForSCUb+zQknZ9r+hLYQcA9SxG
5w==
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 2.3894566722222272`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 19}, {2.3894566722222272`, 4.977622}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8649218432941856`*^9},
 CellLabel->
  "Out[433]=",ExpressionUUID->"b8dc6135-5b4b-4819-8d59-1be07f569c48"]
}, Open  ]]
},
WindowSize->{1428., 735.75},
WindowMargins->{{-6, Automatic}, {Automatic, 0}},
TaggingRules-><|"TryRealOnly" -> False|>,
FrontEndVersion->"13.1 for Microsoft Windows (64-bit) (June 16, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"dbf89052-0529-4a5a-9aea-3964104c39a4"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 261, 5, 51, "Text",ExpressionUUID->"3b2a17b4-431c-4b4f-ac9a-98cb6e212d71"],
Cell[822, 27, 2474, 73, 222, "Input",ExpressionUUID->"3a837bbe-2f32-4725-94f8-caa99023f58a"],
Cell[CellGroupData[{
Cell[3321, 104, 219, 4, 28, "Input",ExpressionUUID->"225162e1-1b89-4d67-aa78-0ebe5393fff1"],
Cell[3543, 110, 233, 5, 32, "Output",ExpressionUUID->"3b996981-4e5a-4676-9931-2010bbe37bb0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3813, 120, 235, 5, 28, "Input",ExpressionUUID->"99ba7cdf-63b8-4cd7-bd1a-aea8622d4369"],
Cell[4051, 127, 494, 13, 32, "Output",ExpressionUUID->"65145334-39c1-4a17-8565-f4107373bf17"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4582, 145, 221, 4, 28, "Input",ExpressionUUID->"639ea55d-1ed8-487a-b4b2-4715ac15be0e"],
Cell[4806, 151, 2721, 62, 239, "Output",ExpressionUUID->"5c83dd94-cba8-4a24-9fa9-40b6c8906d0c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7564, 218, 377, 10, 28, "Input",ExpressionUUID->"138d0aaa-982e-413f-a726-bb90b1073a40"],
Cell[7944, 230, 3479, 76, 233, "Output",ExpressionUUID->"2a9e3e78-eaec-4350-b80e-8dfff663140e"]
}, Open  ]],
Cell[11438, 309, 271, 6, 51, "Text",ExpressionUUID->"e1d1232c-86cc-4804-8aba-9808e8088f82"],
Cell[CellGroupData[{
Cell[11734, 319, 164429, 4045, 4806, "Code",ExpressionUUID->"3f696a03-1a42-4c5d-a991-badf9523303d"],
Cell[176166, 4366, 386, 9, 28, "Message",ExpressionUUID->"4ed6fa7a-d776-4cb0-a10a-a7be33ace634"]
}, Open  ]],
Cell[176567, 4378, 56805, 1109, 640, "Input",ExpressionUUID->"580f172d-8037-47c3-b83f-1fe6df9c977b"],
Cell[233375, 5489, 3082, 79, 181, "Input",ExpressionUUID->"e4a00a5f-0f4d-44bd-8fd8-356f3e97c1c4"],
Cell[236460, 5570, 225, 3, 51, "Text",ExpressionUUID->"74e82f71-7d3c-4f7a-b18d-cc3109df4131"],
Cell[CellGroupData[{
Cell[236710, 5577, 15077, 361, 600, "Input",ExpressionUUID->"c47d3c4e-60ca-4c63-8b5c-ced31cd89cdf"],
Cell[251790, 5940, 4111, 56, 32, "Output",ExpressionUUID->"b84415a4-d48a-4238-995a-3f462afa7d6f"],
Cell[255904, 5998, 231783, 4085, 209, "Output",ExpressionUUID->"a1cb6995-9f0c-4dcc-a4e9-389375f15ca3"]
}, Open  ]],
Cell[487702, 10086, 569, 10, 52, "Text",ExpressionUUID->"69635ce1-2bd0-4048-a821-d10e9209db8b"],
Cell[CellGroupData[{
Cell[488296, 10100, 4330, 112, 238, "Input",ExpressionUUID->"c527e034-dc28-4127-ba8a-d72f69a3351b"],
Cell[492629, 10214, 85828, 1429, 387, "Output",ExpressionUUID->"42a70722-2679-4446-97fd-44d919b6162b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[578494, 11648, 303, 6, 28, "Input",ExpressionUUID->"2bcea045-de16-4714-a162-cf2dd2432fb7"],
Cell[578800, 11656, 171, 3, 32, "Output",ExpressionUUID->"852e028c-065e-4820-8aa5-86715aa9711a"]
}, Open  ]],
Cell[578986, 11662, 192, 4, 28, "Input",ExpressionUUID->"b3628257-2d5a-4de6-80ee-b0f4238b7453"],
Cell[CellGroupData[{
Cell[579203, 11670, 6622, 183, 295, "Input",ExpressionUUID->"85bc551a-4b91-4c90-8cc6-0e1dfbbf40c4"],
Cell[585828, 11855, 439, 10, 28, "Message",ExpressionUUID->"141a4bbe-b075-4ab3-af0d-5b936eacb216"],
Cell[586270, 11867, 628, 12, 46, "Message",ExpressionUUID->"fdca1bba-02ae-46f4-a3cd-0b215f5e2dfd"],
Cell[586901, 11881, 445, 7, 32, "Output",ExpressionUUID->"e8d3095b-0d6e-4a2e-8139-3e26da2476e3"],
Cell[587349, 11890, 127315, 2269, 207, "Output",ExpressionUUID->"e7dd54f8-9940-408e-bad4-6bed731d5925"]
}, Open  ]],
Cell[714679, 14162, 220, 3, 51, "Text",ExpressionUUID->"babf6ace-7c59-4428-a267-e74cf670ecf8"],
Cell[CellGroupData[{
Cell[714924, 14169, 2884, 65, 124, "Input",ExpressionUUID->"b9cd0173-657c-4653-9d1b-b1d172b2172d"],
Cell[717811, 14236, 223, 4, 32, "Output",ExpressionUUID->"c6bdce7f-dc38-4887-92bd-ff2cb6d9da44"],
Cell[718037, 14242, 223, 4, 32, "Output",ExpressionUUID->"731384d3-0bda-4e58-a666-53d8e039173b"],
Cell[718263, 14248, 223, 4, 32, "Output",ExpressionUUID->"a5b78502-7477-4f93-9b49-69b258772eb9"],
Cell[718489, 14254, 225, 4, 32, "Output",ExpressionUUID->"9c80e7a4-072b-48df-9242-7b3b5a078c7a"],
Cell[718717, 14260, 225, 4, 32, "Output",ExpressionUUID->"51eef66b-dc2c-46b2-a954-452519f744dc"]
}, Open  ]],
Cell[718957, 14267, 227, 3, 51, "Text",ExpressionUUID->"6dcbb24e-a9ef-443e-b5e2-a43dfa73ff1f"],
Cell[CellGroupData[{
Cell[719209, 14274, 9525, 272, 561, "Input",ExpressionUUID->"4586b62f-1931-41f8-b45d-20c47c3c2d76"],
Cell[728737, 14548, 553, 11, 32, "Output",ExpressionUUID->"f609e647-0941-46a3-84e6-74dea5982a11"],
Cell[729293, 14561, 433, 8, 32, "Output",ExpressionUUID->"c9c5cfca-9d8a-422f-8c07-34a018db6d95"],
Cell[729729, 14571, 420, 7, 32, "Output",ExpressionUUID->"c4c3a4d3-c052-432b-a0be-e1f24f246559"],
Cell[730152, 14580, 151384, 2664, 207, "Output",ExpressionUUID->"318f4db0-9f01-4012-b6b1-3af1446145a5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[881573, 17249, 6529, 179, 295, "Input",ExpressionUUID->"fa5c8a58-d8d5-48e1-a656-4765e0d09f5b"],
Cell[888105, 17430, 441, 10, 28, "Message",ExpressionUUID->"5e10b99f-7cd7-4da0-b41b-ea3c4c0b2845"],
Cell[888549, 17442, 443, 10, 28, "Message",ExpressionUUID->"cfa28793-beac-4099-8093-3778958ee089"],
Cell[888995, 17454, 443, 7, 32, "Output",ExpressionUUID->"6532e93b-6b4d-4255-9325-bb5b7224d600"],
Cell[889441, 17463, 130254, 2319, 207, "Output",ExpressionUUID->"6ea968fb-95a4-45be-b91a-7314af2c2faf"]
}, Open  ]],
Cell[1019710, 19785, 228, 3, 51, "Text",ExpressionUUID->"39878c2c-e942-4347-a752-27bba723a924"],
Cell[CellGroupData[{
Cell[1019963, 19792, 5606, 150, 314, "Input",ExpressionUUID->"00a37dc2-62ae-4dae-b415-9099fdf1317c"],
Cell[1025572, 19944, 2207, 53, 249, "Output",ExpressionUUID->"c48e2050-8d10-451f-b104-0d216a786bc6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1027816, 20002, 550, 12, 48, "Input",ExpressionUUID->"b093ee39-dd32-444d-9179-98c9db25b0cb"],
Cell[1028369, 20016, 228, 3, 32, "Output",ExpressionUUID->"e6ed3ba0-0036-4061-9283-289e12e8d71d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1028634, 20024, 766, 17, 48, "Input",ExpressionUUID->"5d6d656e-289b-47f2-843f-38ea3bde5006"],
Cell[1029403, 20043, 11321, 253, 337, "Output",ExpressionUUID->"903ec73a-0648-4868-ae92-a47c15aafc30"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1040761, 20301, 2638, 76, 257, "Input",ExpressionUUID->"21dbe1b5-6466-4952-9587-d4bdc27c8f51"],
Cell[1043402, 20379, 1663, 45, 236, "Output",ExpressionUUID->"b8dc6135-5b4b-4819-8d59-1be07f569c48"]
}, Open  ]]
}
]
*)

