(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    249041,       4712]
NotebookOptionsPosition[    247084,       4675]
NotebookOutlinePosition[    247537,       4693]
CellTagsIndexPosition[    247494,       4690]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
Cart-pendulum, general case (finite m/M) and set m/(M+m)=A, d=0.\
\>", "Text",
 CellChangeTimes->{{3.716613652345023*^9, 3.716613661762876*^9}, {
   3.7166171500953703`*^9, 3.716617173133562*^9}, {3.716626783084096*^9, 
   3.7166267858131742`*^9}, 3.845482883460244*^9, 3.8454853041527863`*^9, {
   3.845760420182111*^9, 3.8457604544848833`*^9}, {3.845763009817131*^9, 
   3.845763018369501*^9}, 3.846817631961025*^9, {3.8468354608154197`*^9, 
   3.8468355366775727`*^9}, {3.8468371469057636`*^9, 3.846837147527102*^9}, {
   3.8469225318599663`*^9, 3.8469225347617073`*^9}},
 FontSize->16,
 Background->GrayLevel[
  0.85],ExpressionUUID->"03ab1604-8f5f-4e95-a959-cee0ebbb150a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ffCartPendulumGeneral", "[", 
   RowBox[{"n_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "A_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x", ",", "xdot", ",", "f", ",", "\[Theta]", ",", "\[Theta]dot", ",", 
      "\[Lambda]1", ",", "\[Lambda]2", ",", "\[Lambda]3", ",", "\[Lambda]4", 
      ",", "\[CapitalDelta]t", ",", "bcs", ",", "eqns", ",", "sv", ",", 
      "froot", ",", "xff", ",", "xdotff", ",", "xff0", ",", "xdotff0", ",", 
      "\[Theta]ff0", ",", "\[Theta]dotff0", ",", "uff0", ",", "\[Theta]ff", 
      ",", "\[Theta]dotff", ",", "uff"}], "}"}], ",", 
    RowBox[{
     RowBox[{"\[CapitalDelta]t", "=", 
      FractionBox["\[Tau]", "n"]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"{", 
        RowBox[{
        "x_", ",", "xdot_", ",", "\[Theta]_", ",", "\[Theta]dot_", ",", 
         "\[Lambda]1_", ",", "\[Lambda]2_", ",", "\[Lambda]3_", ",", 
         "\[Lambda]4_"}], "}"}], "]"}], ":=", 
      RowBox[{"{", 
       RowBox[{"xdot", ",", 
        RowBox[{
         FractionBox["1", 
          RowBox[{"1", "-", 
           RowBox[{"A", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"A", " ", 
            SuperscriptBox["\[Theta]dot", "2"], 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
           RowBox[{
            FractionBox["1", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Lambda]4", " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", "\[Lambda]2"}], 
             ")"}]}], "+", 
           RowBox[{"A", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", 
        "\[Theta]dot", ",", 
        RowBox[{
         FractionBox["1", 
          RowBox[{"1", "-", 
           RowBox[{"A", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", 
              RowBox[{"1", "-", 
               RowBox[{"A", " ", 
                SuperscriptBox[
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]]}], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "\[Lambda]2"}], " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
              RowBox[{"\[Lambda]4", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], "-", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "-", 
           RowBox[{"A", " ", 
            SuperscriptBox["\[Theta]dot", "2"], " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", "0", ",", 
        RowBox[{"-", "\[Lambda]1"}], ",", 
        RowBox[{
         FractionBox["2", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"A", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A", "-", "2"}], 
            ")"}], "3"]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"4", " ", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"A", " ", 
                  SuperscriptBox["\[Lambda]4", "2"], " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
                 RowBox[{"4", " ", "A", " ", 
                  SuperscriptBox["\[Lambda]2", "2"]}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"A", "+", "2"}], ")"}], " ", 
                  SuperscriptBox["\[Lambda]4", "2"]}]}], ")"}]}], "-", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"A", " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "-", 
                 RowBox[{"3", " ", "A"}], "+", "2"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"A", " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A", "-", 
                 "2"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"A", " ", 
                  SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], 
                 "-", "\[Lambda]4"}], ")"}]}]}], ")"}]}], "+", 
           RowBox[{"A", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"A", "-", "2"}], ")"}], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A"}], ")"}], 
            " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"A", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A", "-", "2"}],
              ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"\[Lambda]2", "-", 
              RowBox[{
               SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
             ")"}]}], "-", 
           RowBox[{"4", " ", "\[Lambda]2", " ", "\[Lambda]4", " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"3", " ", "A", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
              RowBox[{"3", " ", "A"}], "+", "2"}], ")"}]}]}], ")"}]}], ",", 
        RowBox[{
         RowBox[{
          FractionBox[
           RowBox[{"4", " "}], 
           RowBox[{
            RowBox[{"A", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A", "-", "2"}]], 
          RowBox[{"(", 
           RowBox[{"A", " ", "\[Theta]dot", " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{"\[Lambda]2", "-", 
              RowBox[{"\[Lambda]4", " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}]}], ")"}]}], 
         "-", "\[Lambda]3"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"bcs", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         SubscriptBox["x", "0"], "\[Equal]", 
         SubscriptBox["xdot", "0"], "\[Equal]", 
         SubscriptBox["x", "n"], "\[Equal]", 
         SubscriptBox["xdot", "n"], "\[Equal]", 
         SubscriptBox["\[Theta]", "0"], "\[Equal]", 
         SubscriptBox["\[Theta]dot", "0"], "\[Equal]", 
         SubscriptBox["\[Theta]dot", "n"], "\[Equal]", "0"}], ",", 
        RowBox[{
         SubscriptBox["\[Theta]", "n"], "\[Equal]", "\[Pi]"}]}], "}"}]}], ";", 
     RowBox[{"eqns", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Join", "[", 
        RowBox[{"bcs", ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Thread", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               SubscriptBox["x", "i"], ",", 
               SubscriptBox["xdot", "i"], ",", 
               SubscriptBox["\[Theta]", "i"], ",", 
               SubscriptBox["\[Theta]dot", "i"], ",", 
               SubscriptBox["\[Lambda]1", "i"], ",", 
               SubscriptBox["\[Lambda]2", "i"], ",", 
               SubscriptBox["\[Lambda]3", "i"], ",", 
               SubscriptBox["\[Lambda]4", "i"]}], "}"}], "\[Equal]", 
             RowBox[{
              RowBox[{
               FractionBox["1", "2"], " ", "\[CapitalDelta]t", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"f", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}], "]"}], "+", 
                 RowBox[{"f", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "]"}]}], 
                ")"}]}], "+", 
              RowBox[{"{", 
               RowBox[{
                SubscriptBox["x", 
                 RowBox[{"i", "-", "1"}]], ",", 
                SubscriptBox["xdot", 
                 RowBox[{"i", "-", "1"}]], ",", 
                SubscriptBox["\[Theta]", 
                 RowBox[{"i", "-", "1"}]], ",", 
                SubscriptBox["\[Theta]dot", 
                 RowBox[{"i", "-", "1"}]], ",", 
                SubscriptBox["\[Lambda]1", 
                 RowBox[{"i", "-", "1"}]], ",", 
                SubscriptBox["\[Lambda]2", 
                 RowBox[{"i", "-", "1"}]], ",", 
                SubscriptBox["\[Lambda]3", 
                 RowBox[{"i", "-", "1"}]], ",", 
                SubscriptBox["\[Lambda]4", 
                 RowBox[{"i", "-", "1"}]]}], "}"}]}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
       "]"}]}], ";", 
     RowBox[{"sv", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              SubscriptBox["x", "i"], ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              SubscriptBox["xdot", "i"], ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              SubscriptBox["\[Theta]", "i"], ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              SubscriptBox["\[Theta]dot", "i"], ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              SubscriptBox["\[Lambda]1", "i"], ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              SubscriptBox["\[Lambda]2", "i"], ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              SubscriptBox["\[Lambda]3", "i"], ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              SubscriptBox["\[Lambda]4", "i"], ",", "0"}], "}"}]}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", "1"}], 
       "]"}]}], ";", 
     RowBox[{"froot", "=", 
      RowBox[{"FindRoot", "[", 
       RowBox[{"eqns", ",", "sv"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"xff0", "=", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           SubscriptBox["x", "i"], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", 
         "\[VeryThinSpace]", "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"xdotff0", "=", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           SubscriptBox["xdot", "i"], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", 
         "\[VeryThinSpace]", "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}], ";", 
     RowBox[{"\[Theta]ff0", "=", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "i"], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", 
         "\[VeryThinSpace]", "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}], ";", 
     RowBox[{"\[Theta]dotff0", "=", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           SubscriptBox["\[Theta]dot", "i"], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", 
         "\[VeryThinSpace]", "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}], ";", 
     RowBox[{"uff0", "=", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            FractionBox["1", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 SubscriptBox["\[Theta]", "i"], "]"}], "2"]}]}]], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SubscriptBox["\[Lambda]4", "i"], 
               RowBox[{"Cos", "[", 
                SubscriptBox["\[Theta]", "i"], "]"}]}], "-", 
              SubscriptBox["\[Lambda]2", "i"]}], ")"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", 
         "\[VeryThinSpace]", "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"xff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
          "}"}], "}"}], ",", "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xdotff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
          "}"}], "}"}], ",", "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
          "}"}], "}"}], ",", "\[Pi]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
          "}"}], "}"}], ",", "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"uff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"uff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
          "}"}], "}"}], ",", "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
       "uff"}], "}"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.847315752742555*^9, 3.847315753847568*^9}, {
  3.8473157938483944`*^9, 3.8473159015697536`*^9}, {3.847431662895845*^9, 
  3.847431709065241*^9}, {3.8474318028315053`*^9, 3.847431895441939*^9}, {
  3.847431945039482*^9, 3.847431957199132*^9}, {3.8474322756435733`*^9, 
  3.847432290767656*^9}, {3.8474326674177647`*^9, 3.8474326698622293`*^9}, {
  3.847432865792571*^9, 3.847432870851078*^9}, {3.8474329265860815`*^9, 
  3.8474329281340303`*^9}, {3.847433011691191*^9, 3.847433014963825*^9}, {
  3.8474336025939693`*^9, 3.84743361233008*^9}, {3.847433649868322*^9, 
  3.8474336501597157`*^9}, {3.847433694086319*^9, 3.8474336984878674`*^9}, {
  3.8474343988259664`*^9, 3.847434399069317*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"f1c573d6-66a6-443e-a536-78c2a7ddcebb"],

Cell["Test the approximate solution on the open-loop dynamics", "Text",
 CellChangeTimes->{{3.716613652345023*^9, 3.716613661762876*^9}, {
   3.7166171500953703`*^9, 3.716617173133562*^9}, {3.716626783084096*^9, 
   3.7166267858131742`*^9}, 3.845482883460244*^9, 3.8454853041527863`*^9},
 FontSize->16,
 Background->GrayLevel[
  0.85],ExpressionUUID->"9064276b-1fef-4a94-baca-71c953dfb3ed"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TestSwingUpGeneral", "[", 
   RowBox[{"\[Tau]_", ",", "\[Tau]1_", ",", "uff0_", ",", "A_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "eq", ",", "init", ",", "x", ",", "xdot", ",", "\[Theta]", ",", 
      "\[Theta]dot", ",", "xs", ",", "xdots", ",", "\[Theta]s", ",", 
      "\[Theta]dots", ",", "t"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"eq", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"x", "'"}], "[", "t", "]"}], "\[Equal]", 
         RowBox[{"xdot", "[", "t", "]"}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"xdot", "'"}], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          FractionBox["1", 
           RowBox[{"1", "-", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "2"]}]}]], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"uff0", "[", "t", "]"}], "+", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"\[Theta]dot", "[", "t", "]"}], "2"], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
            RowBox[{"A", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "\[Equal]", 
         RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Theta]dot", "'"}], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          FractionBox["1", 
           RowBox[{"1", "-", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "2"]}]}]], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"uff0", "[", "t", "]"}], "+", 
               RowBox[{"A", " ", 
                SuperscriptBox[
                 RowBox[{"\[Theta]dot", "[", "t", "]"}], "2"], 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
           ")"}]}]}]}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"init", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x", "[", "0", "]"}], "\[Equal]", 
        RowBox[{"xdot", "[", "0", "]"}], "\[Equal]", 
        RowBox[{"\[Theta]", "[", "0", "]"}], "\[Equal]", 
        RowBox[{"\[Theta]dot", "[", "0", "]"}], "\[Equal]", "0"}], "}"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
       "}"}], "=", 
      RowBox[{"NDSolveValue", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"eq", ",", "init"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
        RowBox[{"Method", "->", 
         RowBox[{"{", 
          RowBox[{"\"\<DiscontinuityProcessing\>\"", "->", "None"}], 
          "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"xs", ",", "\[Theta]s"}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.847432177105632*^9, 3.847432191792672*^9}, {
  3.847432227303192*^9, 3.8474322510192895`*^9}, {3.847432297525694*^9, 
  3.847432298632705*^9}, {3.8474323527213573`*^9, 3.847432415875557*^9}, {
  3.8474326801642494`*^9, 3.84743268179489*^9}, {3.847433214299324*^9, 
  3.847433249104309*^9}, {3.848285200264236*^9, 3.8482852134434357`*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"93693239-7e2a-4f89-8cf7-a8f2b46766e2"],

Cell["\<\
Show that linear feedback can stabilize against \[OpenCurlyDoubleQuote]bad\
\[CloseCurlyDoubleQuote] numerics\
\>", "Text",
 CellChangeTimes->{{3.716613652345023*^9, 3.716613661762876*^9}, {
  3.7166171500953703`*^9, 3.716617173133562*^9}, {3.716626783084096*^9, 
  3.7166267858131742`*^9}, {3.716631401415011*^9, 3.716631413565827*^9}},
 FontSize->16,
 Background->GrayLevel[
  0.85],ExpressionUUID->"5ad487c6-1d01-4bb4-8677-158c0fdc7a46"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TestSwingUpGeneralFB", "[", 
   RowBox[{
   "\[Tau]_", ",", "\[Tau]1_", ",", "xff0_", ",", "xdotff0_", ",", 
    "\[Theta]ff0_", ",", "\[Theta]dotff0_", ",", "uff0_", ",", "A_"}], "]"}], 
  ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "eq", ",", "init", ",", "\[Theta]", ",", "\[Theta]dot", ",", 
      "\[Theta]ff", ",", "\[Theta]dotff", ",", "x", ",", "xdot", ",", "xff", 
      ",", "xdotff", ",", "uff", ",", "t", ",", "\[Kappa]1", ",", "\[Kappa]2",
       ",", "\[Kappa]3", ",", "\[Kappa]4", ",", "ufb", ",", "u", ",", 
      "\[Theta]s", ",", "\[Theta]dots", ",", "xs", ",", "xdots", ",", "us"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Kappa]1", "=", 
      RowBox[{"\[Kappa]2", "=", "3"}]}], ";", "  ", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"lqr", " ", "for", " ", "q"}], "=", 
       RowBox[{"r", " ", "for", " ", "balancing", " ", "pendulum"}]}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\[Kappa]3", " ", "=", " ", 
      RowBox[{"-", "0.1"}]}], ";", 
     RowBox[{"\[Kappa]4", " ", "=", " ", 
      RowBox[{"-", "0.65"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"xff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
          "}"}], "}"}], ",", "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xdotff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
          "}"}], "}"}], ",", "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
          "}"}], "}"}], ",", "\[Pi]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
          "}"}], "}"}], ",", "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"uff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"uff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
          "}"}], "}"}], ",", "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ufb", "[", "t_", "]"}], ":=", 
      RowBox[{
       RowBox[{"\[Kappa]1", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
          RowBox[{"\[Theta]", "[", "t", "]"}]}], ")"}]}], "+", 
       RowBox[{"\[Kappa]2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
          RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ")"}]}], "+", 
       RowBox[{"\[Kappa]3", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"xff", "[", "t", "]"}], "-", 
          RowBox[{"x", "[", "t", "]"}]}], ")"}]}], "+", 
       RowBox[{"\[Kappa]4", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"xdotff", "[", "t", "]"}], "-", 
          RowBox[{"xdot", "[", "t", "]"}]}], ")"}]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"u", "[", "t_", "]"}], ":=", 
      RowBox[{
       RowBox[{"uff", "[", "t", "]"}], "+", 
       RowBox[{"ufb", "[", "t", "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"eq", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"x", "'"}], "[", "t", "]"}], "\[Equal]", 
         RowBox[{"xdot", "[", "t", "]"}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"xdot", "'"}], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          FractionBox["1", 
           RowBox[{"1", "-", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "2"]}]}]], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"u", "[", "t", "]"}], "+", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"\[Theta]dot", "[", "t", "]"}], "2"], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
            RowBox[{"A", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "\[Equal]", 
         RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Theta]dot", "'"}], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          FractionBox["1", 
           RowBox[{"1", "-", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "2"]}]}]], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"u", "[", "t", "]"}], "+", 
               RowBox[{"A", " ", 
                SuperscriptBox[
                 RowBox[{"\[Theta]dot", "[", "t", "]"}], "2"], 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
           ")"}]}]}]}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"init", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x", "[", "0", "]"}], "\[Equal]", 
        RowBox[{"xdot", "[", "0", "]"}], "\[Equal]", 
        RowBox[{"\[Theta]", "[", "0", "]"}], "\[Equal]", 
        RowBox[{"\[Theta]dot", "[", "0", "]"}], "\[Equal]", "0"}], "}"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
       "}"}], "=", 
      RowBox[{"NDSolveValue", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"eq", ",", "init"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
        RowBox[{"Method", "->", 
         RowBox[{"{", 
          RowBox[{"\"\<DiscontinuityProcessing\>\"", "->", "None"}], 
          "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"us", "[", "t_", "]"}], ":=", 
      RowBox[{
       RowBox[{"uff", "[", "t", "]"}], "+", 
       RowBox[{"\[Kappa]1", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
          RowBox[{"\[Theta]s", "[", "t", "]"}]}], ")"}]}], "+", 
       RowBox[{"\[Kappa]2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
          RowBox[{"\[Theta]dots", "[", "t", "]"}]}], ")"}]}], "+", 
       RowBox[{"\[Kappa]3", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"xff", "[", "t", "]"}], "-", 
          RowBox[{"xs", "[", "t", "]"}]}], ")"}]}], "+", 
       RowBox[{"\[Kappa]4", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"xdotff", "[", "t", "]"}], "-", 
          RowBox[{"xdots", "[", "t", "]"}]}], ")"}]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"xs", ",", "\[Theta]s", ",", "us"}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8478517379388494`*^9, 3.847851752075812*^9}, 
   3.847851813122394*^9, {3.847851944474966*^9, 3.8478519581402545`*^9}, {
   3.847852070532321*^9, 3.847852120587901*^9}, {3.847852172636479*^9, 
   3.8478521950335903`*^9}, {3.847852252955641*^9, 3.847852298857153*^9}, {
   3.8478523552461233`*^9, 3.8478523610991964`*^9}, {3.847852488458049*^9, 
   3.84785262961858*^9}, {3.8478527884153085`*^9, 3.8478528838911724`*^9}, {
   3.8478529224244995`*^9, 3.8478529646315303`*^9}, {3.847853020161805*^9, 
   3.847853022380752*^9}, 3.8478532239841413`*^9, {3.847853428714581*^9, 
   3.847853525939581*^9}, {3.8478535563657465`*^9, 3.847853578817807*^9}, {
   3.8478536213438377`*^9, 3.8478536412170115`*^9}, {3.8478537916572657`*^9, 
   3.8478539245561676`*^9}, {3.847854001162655*^9, 3.847854005007567*^9}, {
   3.847854222502963*^9, 3.84785426131371*^9}, {3.847854291737336*^9, 
   3.847854325648571*^9}, 3.8478543850394273`*^9, 3.8478545025479116`*^9, {
   3.8478545370165124`*^9, 3.8478545518986883`*^9}, 3.847854591645032*^9, {
   3.8478546300943804`*^9, 3.847854635377248*^9}, {3.8478547341074843`*^9, 
   3.847854737590539*^9}, {3.8478548345213757`*^9, 3.847854907962556*^9}, {
   3.847855051388082*^9, 3.847855330296096*^9}, {3.8478553677987213`*^9, 
   3.847855372657921*^9}, {3.847855453653699*^9, 3.847855457544405*^9}, {
   3.847855600419648*^9, 3.8478556364733057`*^9}, {3.847855668936566*^9, 
   3.8478556745691566`*^9}, {3.8478559381246843`*^9, 3.847855952708763*^9}, {
   3.847856029643019*^9, 3.847856042165248*^9}, {3.847939980955227*^9, 
   3.8479400323626356`*^9}, {3.8479400815521574`*^9, 
   3.8479400847994795`*^9}, {3.847940173940426*^9, 3.8479402311035585`*^9}, {
   3.8479403156813807`*^9, 3.8479403865209236`*^9}, {3.847940520243255*^9, 
   3.847940523326828*^9}, {3.847956180698263*^9, 3.847956201518607*^9}, {
   3.847956682776015*^9, 3.847956699011285*^9}, {3.8479578937325544`*^9, 
   3.8479578973070107`*^9}, {3.847995700898568*^9, 3.8479957059066153`*^9}, {
   3.8480001411363993`*^9, 3.848000160227478*^9}, {3.8480833500048523`*^9, 
   3.848083353228476*^9}, {3.848083393786998*^9, 3.848083396258761*^9}, {
   3.8480834916112137`*^9, 3.848083501037628*^9}, {3.848084843059586*^9, 
   3.848084866547575*^9}, {3.848084969118318*^9, 3.8480849948039*^9}, {
   3.848284074270567*^9, 3.8482840795660563`*^9}, {3.848284656105207*^9, 
   3.8482846882527*^9}, {3.8482847703982*^9, 3.8482847739735003`*^9}, {
   3.848284812761745*^9, 3.84828481726508*^9}, {3.848284886710032*^9, 
   3.848284902301626*^9}, {3.848284940693275*^9, 3.8482849619159193`*^9}, {
   3.848285006396286*^9, 3.848285082533411*^9}, {3.848285235385049*^9, 
   3.848285239529561*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"bc2dd642-d8d4-420f-9e33-32c9a25fbf5c"],

Cell["Test example", "Text",
 CellChangeTimes->{{3.716613652345023*^9, 3.716613661762876*^9}, {
  3.7166171500953703`*^9, 3.716617173133562*^9}, {3.716626783084096*^9, 
  3.7166267858131742`*^9}, {3.716631401415011*^9, 3.716631413565827*^9}, {
  3.847958278702722*^9, 3.847958285232273*^9}},
 FontSize->16,
 Background->GrayLevel[
  0.85],ExpressionUUID->"4bf8405d-f174-4744-b89e-d9a99d7ce373"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "9"}], ";", 
  RowBox[{"\[Tau]", "=", "4"}], ";", 
  RowBox[{"\[Tau]1", "=", " ", 
   RowBox[{"\[Tau]", "*", "1.25"}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"A", "=", "0.5"}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
      "u1a"}], "}"}], "=", 
    RowBox[{"ffCartPendulumGeneral", "[", 
     RowBox[{"n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A"}], "]"}]}], ";"}], 
  "  "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x1b", ",", "\[Theta]1b"}], "}"}], "=", 
    RowBox[{"TestSwingUpGeneral", "[", 
     RowBox[{"\[Tau]", ",", "\[Tau]1", ",", "u1a", ",", "A"}], "]"}]}], ";"}],
   " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x1c", ",", "\[Theta]1c", ",", "u1c"}], "}"}], "=", 
   RowBox[{"TestSwingUpGeneralFB", "[", 
    RowBox[{
    "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", "\[Theta]1a", 
     ",", "\[Theta]dot1a", ",", "u1a", ",", "A"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.847957894930352*^9, 3.847957895217608*^9}, {
   3.8479582145796533`*^9, 3.847958263924788*^9}, 3.8479589821668615`*^9, {
   3.847979696070838*^9, 3.847979696197056*^9}, 3.848086065814939*^9, {
   3.848284094112486*^9, 3.848284094228133*^9}, 3.848284728851212*^9, 
   3.848284790872182*^9, 3.848284985455407*^9, 3.8482852570120163`*^9, 
   3.8607683225782323`*^9, {3.860768452659197*^9, 3.8607685097197566`*^9}, {
   3.860772062935492*^9, 3.8607720902606606`*^9}, 3.860772250065019*^9, {
   3.8607723472286196`*^9, 3.8607723484572225`*^9}, {3.86077241551655*^9, 
   3.8607724602151055`*^9}, {3.8607725783389335`*^9, 3.8607725793216143`*^9}, 
   3.8607726194626436`*^9, {3.8607726806808605`*^9, 3.8607726809807653`*^9}},
 CellLabel->
  "In[226]:=",ExpressionUUID->"bf40c848-fe53-419b-adfb-b3a4c1314970"],

Cell[BoxData[
 TemplateBox[{
  "FindRoot", "cvmit", 
   "\"Failed to converge to the requested accuracy or precision within \\!\\(\
\\*RowBox[{\\\"100\\\"}]\\) iterations.\"", 2, 228, 14, 17507172307868866147, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.86077262101714*^9, 3.860772742092013*^9},
 CellLabel->
  "During evaluation of \
In[226]:=",ExpressionUUID->"57d69169-f5da-4c9b-a698-d74373e46ce6"]
}, Open  ]],

Cell["Graphics", "Text",
 CellChangeTimes->{{3.716613652345023*^9, 3.716613661762876*^9}, {
   3.7166171500953703`*^9, 3.716617173133562*^9}, {3.716626783084096*^9, 
   3.7166267858131742`*^9}, 3.845482883460244*^9, {3.8454833355827293`*^9, 
   3.845483336286716*^9}},
 FontSize->16,
 Background->GrayLevel[
  0.85],ExpressionUUID->"8e7d718b-d732-4b68-96ac-404c9c835ceb"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"p1a", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Theta]1a", "[", "t", "]"}], ",", 
       RowBox[{"u1a", "[", "t", "]"}], ",", 
       RowBox[{"x1a", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
     RowBox[{"Filling", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"2", "\[Rule]", "Axis"}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "->", "\"\<Expressions\>\""}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<Feedforward solution\>\""}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", 
      RowBox[{"1", "/", "3"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
     RowBox[{"GridLines", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p1b", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Theta]1b", "[", "t", "]"}], ",", 
       RowBox[{"u1a", "[", "t", "]"}], ",", 
       RowBox[{"x1b", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
     RowBox[{"Filling", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"2", "\[Rule]", "Axis"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "->", "\"\<Expressions\>\""}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<Test on dynamics\>\""}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", 
      RowBox[{"1", "/", "3"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
     RowBox[{"GridLines", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p1c", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Theta]1c", "[", "t", "]"}], ",", 
       RowBox[{"u1c", "[", "t", "]"}], ",", 
       RowBox[{"x1c", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
     RowBox[{"Filling", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"2", "\[Rule]", "Axis"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "->", "\"\<Expressions\>\""}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<Linear feedback solution\>\""}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", 
      RowBox[{"1", "/", "3"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
     RowBox[{"GridLines", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{"p1a", ",", "p1b", ",", "p1c"}], "}"}], "}"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8478417108000236`*^9, 3.8478417322160244`*^9}, {
   3.847841809368429*^9, 3.8478418254156103`*^9}, {3.8478418828236513`*^9, 
   3.847841987623787*^9}, {3.8478420231210403`*^9, 3.847842049264311*^9}, {
   3.847842285076926*^9, 3.8478423167342157`*^9}, {3.8478424011347485`*^9, 
   3.847842427463358*^9}, {3.8478424640792336`*^9, 3.847842464550971*^9}, {
   3.847851607751497*^9, 3.8478516102704554`*^9}, {3.8479561090576763`*^9, 
   3.8479561098096666`*^9}, {3.8479566566198616`*^9, 3.8479567069633026`*^9}, 
   3.8479573313099127`*^9, {3.8479574113091908`*^9, 3.8479574239172983`*^9}, {
   3.847957552381538*^9, 3.847957557626554*^9}, {3.8479576661758423`*^9, 
   3.8479576731836634`*^9}, {3.84795773840973*^9, 3.8479577604869475`*^9}, {
   3.8479578088670626`*^9, 3.847957842800346*^9}},
 CellLabel->
  "In[204]:=",ExpressionUUID->"4c581364-528b-4e73-b15c-9b3ec1dfef06"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
BYj1gj/8v5//AwCQeP8=
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{402, 1096, 342, 343, 344, 345, 633, 555, 491, 440,
                 401, 377, 649, 571, 507, 456, 417, 662, 584, 520, 469, 346, 
                634, 556, 492, 679, 601, 441, 669, 591, 694, 527, 685, 607, 
                700}}], 
               PolygonBox[CompressedData["
1:eJwV0dtPj3EcB/Cnhou4wLhwLvwBSBQqRb9IFzTWlrWlm+iIP0CpHOdwwZyH
MYccKstWs5XT5sbhIlfOxz8Alct4fS5e+7w/7+/v93t+z/Nk1bZUNKcnSZLG
C0onJEmKlYo6B7N4J9/knFxGBq32Y2YB4/Jts4qX8hVzC/1Mo4cd1DnbZy7h
lzzIGXLZqZvNe/kWbdGRxypWs8v5HD7E9dgfHWuo18/lo9xFe3TkU0AhDc7n
8Um+Q0d0tOqW8lse4iyn7CVMZNh+zdzKDNbaG8359PHZfsOs5BF37efNTUym
037cLOSf/Cq+H/doX8Yf+XE8X4ooZh1NzhbwRb7HgejivnXZjMhP4lqsJ15k
Jl/l+1yQy5nCQfuJ+O/xsuliO6/1V80KBphOL7UM0RzP0lzOqPw0fpcSWnRZ
fJO7ORQdKUrZ7Wwh3+UeDkcXz12Xw5j8jItsYI9uET/kXo5w0l5EGm/iM3TK
K/grP+eyvJmpdFPDIJecnTZTPGRSvBuqeevsurmNmWy07zUX81N+wNHoKOM/
u7xifA==
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{307, 1097, 1094, 405, 444, 495, 559, 637, 358, 
                382, 421, 472, 536, 614, 310, 309, 308, 357, 381, 420, 471, 
                535, 613}}], 
               PolygonBox[CompressedData["
1:eJwVzbkuhFEYBuBjRqIyjStQWG/AUlKMxD5DMoUoSJQUDHMDlsQ2iqkYS6MQ
jWWIKDSWksItWG8AU3lO8eR7v/f85/yNU3OZ2UQIoYYZ0rUh9DGuGCNLgSLX
fNPuQoGMfMgTVbp1ayzJd+Y0ZzRwQ5YjXpxPmCck6WWHbX3KHGKPK/sXbfFN
RuUDHvmjS7fKorxFhU9aY8eIPEyeTS75oMVZPv5H3ueBXzp1KyzIzyTkHops
2CfNU+qpMMguF85uzRzHvNub4zvxG/mVOjlNibL9nh867MvMy+uc80ZT7BiQ
+/kHn4c1jg==
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl0ne8j1UcwPGLBlcSUsjMzK2bFWkoZCYzIlGuyF4pTZRRMrKFbGUre5MZ
srLJXhVRWqLl/X35430/53nu+Z3zO8/zy5fSsW6HVAkJCSX8if7MYj6kOZUp
SWrScBO/sIR+vEwVShELfC2j6cpz3MxllvIRLahKenN361TyGn+vPchufEKT
dL4W1J/0oVjeeLOO4TUacgu3kpZfWUZ/WlKN0vHdfW6LjuV1GpGO31jOAF6h
OreZu0c/oydl4tzubdVP6cbdro9pUf1SC+gFLa7Pa0bdr9PpTSK/s4KBtOJp
Ho7nEHuSgT9YySBaU4Oy8cyt942O4w0ac4d7B3QGfbjH9SldyO38ySqKuP+x
5tIzmqxtNIse1tk8E/u73quf8x6PxLtzb5uO501eiLPF3mTiCqsZTFtq8mi8
E5/brhN4iyZk5i/WMIR23GnedzqHWvG9Xe/TaeQz/kHfJ4fxSb1fF2ghvZhw
4zf7WLx/3aETeZumcT6u8hVDaU9tHo99ycpd8S7JRvbYh2usZRgdqEM50tpj
p07iHV6MZ87frGM4uc05qx1jfeMjOpe6PEHOeA8xjzzkjXNyL/n5h/WMoBP1
eJJ01tqlk3k3vq/r4zqPl+JduD6oM2Mt4x/1Qe0be+ppfUAXaWG9pAX4lw2M
pDPPUp6C8YxjLv+xkVF0oT4VSLTOtzqF7jSLd+zeIZ3FBxThfzbxSZzZ/8/p
q/HsjY/qffpFnF/PazFtoL2oSErM4SmKkhS/gzgPyXHO+AzFqRS/Ca4D7beG
lQ==
               "]]}, Annotation[#, "Charting`Private`Tag$23702#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1He8jmUcBvD3SIsikVGRkULT3mTvdezNkZGthZCyyx6hKJLsnZVdkYoG
oiiVrWiq7Pj+Pv3xPb/rvu53Ps/9nlwpvZJ7JiUSiYn+FKZjqkQiC9/IcxkU
HUUoSjE62c/Kt/K7vBhdPFb3GL/Lm3iNqqkTieJmZ302DsrzmC7XJA2DrceY
5fhPXmC2YJc8y2zAOjKwnPZ0jvc1H+cPeTNTKUEX3d0ckufzUnSUpBSlecr+
PXwX78fL0VGGrvp7+V5eyJDoKEs5ytPNfnYOy4sYGh2DdQX5U97CNCZbV+FG
9lrPMRuRiSesu5s5eI8f4pqaTdnAYuvXzVqkZZj1WLM81+Td8fz4jtaF+Eve
GteXClSkEj3s3ceP8hKGRxffW1eYc/K2eC8q01OXk5/kpbwh1+Y2RliPi89O
goW05HP9bDOZ9dzJClLYQhy0IWYR/pY/iNelCr10uTgiL2NkdHF+qEZve7k5
Ki9nVHRx3XVF+Uf+kBlUp48uD8fkFbzCeOsKJPFFPIZhcjH+lT/iLbk+d7CM
dmxmpr0pZlVWc1PcG1qzz947ZmPuoob10+b9HJdX8mp01Izv4zdRy6zNMx6T
lxPyKkZHF/dHV5zz8nbejN+TdTVu5mvrOjwrP8DJ+F2ZzdgYZymuhVmHNdzO
Etowxt4EsyKp+DJehxFyCS7IO+JaUJfndA9ySl4d5y866lGf5+3l47S8Js5G
dHEPdSW5KH8cv2Ua0FeXn5/ltcyU65KO8dYTzUrcwCJa8ZX+bbMh75ORlXRg
K33jTJiluCTvjLNIMv10BfhFXhffPToa0ojGcWbckyZmU5rRnP6e8xBn5PVJ
//+P7B9nSVeay/In8bmYal2dW9hv3YIX5Ic5K883m8dnj3tp1mMt6VlKWzYx
yf4kszKp2ROvE+dHLsMV+VPm0JIBukf4Vd7A5OhoRWva0JZ2tCeFDgz0nEf5
Td4YZzu6OH+6slyVP4tzzbQ409zKAeu5ZhMys4on2RbT3nU2JMhb
               "]]}, Annotation[#, "Charting`Private`Tag$23702#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1He8V2McB/BzRzsaIkp7IFpKoiIRpRIhq0HDCF0zLSuyExqamjaVrSjt
vfeue9tD1G3v9/eP9+/zfb7nOc/5nXOe1ynTLqNF55QkSXr7mZaaJP+mJcko
2lGNvGTrT2cGMzmgN5r2VCcfh/XT05PkT3U37qAMs/T/k2PowLWUMm+F7E9+
LjKeI9+jijpLtqSier2sI4fK6+QeecSaOdQT1d1pRFlm689hLvP4X28sHanB
BRRx3lz5Pg9w1LycepPUPWhMBeN1cgg11btlA1lOFpOLZV9aM9/5B+WXPB7z
uZBj+gtYyCIO6X3FE3EfFOC4fi7r/aXuyZ2Up7jeEvkJbbjKeJP8gsXOyZZf
c4P+k/IauVXeLGvJ0nKlHEBBLjaeJz/gQU5YI7fe3+pXaRL3zBL9w/IbnuJ6
CnFSfynLOGL8LZ2oTWFO6eex3mT1azSNd8dy/aPyO56O/xt7wrxVcmC8dy4x
ni8/pKp6m3yIK9QbZF05TNaSe+Wt8rR188opxq/TLOazQv+Y/J5nuDHeN2f0
V7KK1axhLetYz3FzfuDZ2GvxvDirn881/lG/wV1cyeV6S+WntGWDeSfkj3Sm
suOZsr6sG/tSro7/Ij+P/S93xn1TVL1AfsTDnLNWfr2p6jdpHu+ejfon5Tgy
qBfnkrDJsc2cUo/nOW7iUlJiz1tvmuzF3VRii/mn5QSej31DOfPWyEFcFucb
L5R9qKbeLh+JZ6DeGP9BDo89IvfJ22Rq7H05Xb7FPVzNVtc7I3/ihXg2FCON
TMey2MZZ4595kVsoTjoFrDlDvk2L2O+U0FsmP6O6eod8NO5PvTmegRwht1v3
nPyFl2gQ75Ac7HBsJ7tIzP9V7+XYY7E+OSmoP1P25t54v+w2P0X/N3WXuHfK
G6+Vg6mh3hX3IEvG85SL5Me0IheF9GbJd7iPKuyxbqr+7+pXaEgpcrPXsX3s
j290fIPjuxrfuPj+kOa8P8zryu2UJg+F9WfLd7mfqpTUWy778Vi8I+MtciS1
1fvj2vKQdc8DfGTG3w==
               "]]}, 
             Annotation[#, "Charting`Private`Tag$23702#3"]& ]}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"Feedforward solution\"", TraditionalForm], 
         PlotRange -> {{0., 4.999999897959183}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
           RowBox[{"\[Theta]1a", "(", 
             TagBox["t", HoldForm], ")"}], 
           RowBox[{"u1a", "(", 
             TagBox["t", HoldForm], ")"}], 
           RowBox[{"x1a", "(", 
             TagBox["t", HoldForm], ")"}]}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   TagBox[#, HoldForm], ",", 
                   TagBox[#2, HoldForm], ",", 
                   TagBox[#3, HoldForm]}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
ncwKZys3q5xdWAJUdptvP2tZ4X2VLTe1gklQfmbf0deaHNCs+JwZfS8Jypzc
HH9HlBOGtA/F/uj9B7Bfy2besvspSqZiv8b9w16N29irr1xvVWTtZYUyF5bf
W6g0ggcnJnmWJ3oB+Ussn5BXGyise24VezSb4dXaBouLdeH1DI+ePnf2Yvpg
KcOjc0dzZ5ONixjeLOb2KCT2x3eGN3drlj1tUM9gePKoi7CCotg0w5P3uO0n
ba1bYHhyeKGw2+5MOsOPSWISDQ/N6Sgwh6/qjjoTZIuSe19wkI5Oh9LlL/Ix
wxZDI113/Vn04VHFr3OPWGCe9/HtWyWnwekB5X8JOqwQHJs8VPuKmD9h61+5
iLDBs9pS3M7EPLbM/HvbvoodLl2xC1g5SYKbQsTy80M4YHqc31EgS4KNTa7C
vLc4YZ/iNtl3eXSAPdr8qOgNt70kKvZoZ/2Ac16/WKjYo/H7xr6M2zvi4ks0
9JpBzO+Lm1pKa8DFrsDi8MFOkF0Y8sL6fQPDgxNVEl/GhmUyPJjKZ2XQcL2W
4b3BXwbJXJOzDO8dpi7meZTRUb7Auyux7SRo8exq3JQWHblGUZd+fWKCV3KS
+SJl6Ohu/akZi0EWeE5q0tpBiQ5UlUyLvL6xwj3K1Q4S4STYsKlgve9uDnjW
eZK19AAJTl0SdtRi4YRHC0/K/SL2BdiHyVFXbz15wUzFPoz7hz0Yt+VORt5o
2dcBHvqM8Oc/rmd4bqhZ68GTj4pQP8nW6aL2MnDqjD2wRo/YfyRdM495wATT
Em0u71Kko5O+p3s2erDC5J27XlW/I0HPByIinNUc8J+G17PVrSSG5+L7YZ+1
Fyr0i2XPQHT/Da/ZO5igK1ee0f6iBWTwz5tsJ8IKw+4e55LI/Qewz+pUPrn9
L4NMxT6Lr4d99n1/n1OcChssLbMU+dTUAOyyOqobtfvB/oo/D2mb2sDJu0xX
w+ITGT77dTtL4Prseoa/JrttTSiSKmP467HFwCaN10UMX93toxwquS2L4ast
Fgclu7rTGH7aRHdVWl88xfDTD3Kdty1vLTD8VL7g6XL4NzrDS6fTIr5zWdGR
MlKxGthP1Gd9Q3uZI3TkEtB1PIeZGcYk3N7KfmQODd1eOldjywJv7d99VFlt
Cvg92u3Od5wVpg+uDbLcToJ/xKuCm/jYYGyZXcpLHxL8fnLvlUkqO5w4QDWh
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
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{602, 1467, 542, 543, 544, 545, 833, 755, 691, 640,
                 601, 577, 849, 771, 707, 656, 617, 862, 784, 720, 669, 546, 
                834, 756, 692, 879, 801, 641, 869, 791, 894, 727, 885, 807, 
                900}}], 
               PolygonBox[CompressedData["
1:eJwV0ktTjnEYB+Cn0pFCWpRhjIyZ2ISIfACEHBqHRU0Rg2EIIUYzGTMdaIkW
WoWc8gF0YBkWLGiBycIh5w9AIde9uOb3u+/ned/nff7zLmxorD6WmiRJCiMM
pifJAFMWpWlJ8t7FXuKmPeZ8Xurr2aFnMKIfl8Vc0Q/KIlp5Y26WSyjV18lf
8iFt1MXDWWb/Qd6gkQ2xI4VU0ljuno/yZjyPytgxjRWufZK3OMHG2JFOBpmU
uWdc9nGSTbGLd7H/LQdop54au1ye69c5rM9jTM9ipf5Znpe35VG5gIs0mffK
ObzSN7NTz+SJfjU+H+9onpCDdMT5kk0O01nl+hd5h1NUxS7e235SDtEZz2IG
5fZf5V1O02AuYFTfwi49i6dxRnIR1/RDci4XeGs+K5fSTnmcpfwjh7kU30su
q+2/yXucYWvsyGMma1z/Lu/Hf4BtsYtzt/8rH3GZfcyiwv6H7I/fwHZ222Xz
TO+Oe+I8zf/kY7o4YC7kdfwOWUIb+821Mo8WXpib5GJ69CNyPu/02azVf8oH
nKM6duTzH83jWSg=
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{507, 1468, 1465, 605, 644, 695, 759, 837, 558, 
                582, 621, 672, 736, 814, 510, 509, 508, 557, 581, 620, 671, 
                735, 813}}], 
               PolygonBox[CompressedData["
1:eJwV0LkuRGEYBuB/ZqKhmAJjGRIS0biEGTNuwBJjGYXGMmhGIhp7RKEZlBRu
wVpSWEoKFY1rsN4Az188ed/vPSc5yemeWR6tJkMICSrc1IVwS6exgywDlNnh
mt+4pUJol4sc8UjSNkJR35d9rPHu3pVZljhx98gVnvUGOcWk/kZGn2Nbv+KH
ortNLnDIAwnbMAV9gi0u+aZgb5Ut9DPOJhd8xc3zjKxwwH38CbYh8voxT9S7
y4zpvXKV1/gt2cwsG+492UWVc/cn+fiOPOWFtHuaeb3GHX8M2nKyxDpnfJCz
N8lG/gFdoC3t
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1WWUVmUUBtChU+nOIaW7kS5JGVIlB1B6AKWRMCkTVAwwsUVFxaC7u1NC
wcIAFMHAfZY/9pznOe8smHu/e9eXmJySNDJVQkLCdT9izvCjIN+xUT9kpnCJ
GfpGsw8XycRpJnK7s6VmO/6Qj5v3sVTebQ4mFzX0RWYdzkZmuzyQbIzQV5rd
4+9hpZ6aB+RCbIpMZz7R23M1MjV5Wa/LuciMJA0P2hVmc2SSqEVa0pGeh5wX
YUtkulCbDDxsX5StkelKHTLyiH0xtkWmG3V5xa4e30QmhUw8alec7ZHpTj1e
tavPt5EZRWZm2iWyIzI9qM9rdg04H5nRZGGWXQl2RqYnn+od+DMyDXhdb8iF
yIxhld6D1KzSszJbLsmuyGyS+5KZO/TPzI5ci0xD3tBvjecoMjvkQWTnXn21
2ZM0nGI8q+33mcPIG/eBqdxkP8csxffs1g+bo7jMHH2z2Y+fycIZJsWzyJ3O
l5md+JHr+glzLFdYpu8xh/ArueMz4/64X3EdzhebjeL/l4+aY1gs7zTvJkc8
7/qauCekZY2+3xxOPm7W55ql2ROZLXJ/snKX/nm8S/wVmUa8qTfmh8iMZW1c
F+lYq2fjMbkMeyPTiy/0zvwdmca8pTeJexGZcWTncbuy7ItMb77Uk/gnMk14
W2/KT5EZTw6esLuF/ZHpQ1PesWvGxchMICdP2pXjQGT60ox37ZrHZxmZieTi
KbvyHIxMP5rznl0LfonMJHLztF0FDkWmPy3Iwzz7ihyOTDItyUs+8lOAghSi
MEUoSjGKk0gJSlKK+f69ShyJzABaUZpn7CtzNDIDac37di3juYvMZMrwrF0V
jkVmEF/pXfg3Mm34QG/Fb5GZwrp4lkjPOr0sz8lVOR6ZrXJyvFvx/OrLza7c
kE+a41gu7zWHkofb9CVmay7Jx+JdZom8y7wnPgNyco4pXI33yPl6s1c8M2Tg
aybwO+udHzBHxHWQn/NM41o8U84XmNXiHeCEfsQczQJ5mzkg3i/OMjn+FvsV
Zjfii22F0ZYP5TZcjsxUyvG8XXVORmYw7fgorpsrkZlGeV6wq8GpyAyhPRV4
0b5mXGNkhtKBirxkX4vTkRlGRypRmSpUpRoL/V5tzkRmOJ342K5t3LvITGeD
3puMbNAPmvHFXoALTE/1/3d8dWf/AUw4/bk=
               "]]}, Annotation[#, "Charting`Private`Tag$23778#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV03WAFVUUB+DZXZbubli6wULMNcBADBClO0XYVRAVSekyEEQFTMomlDYA
pSRUTBAlxW46/c4f3/7OOTPvvZl772Z0z26VlZIkyTR/TlM/LUn2pibJi/Sn
GfU549pZztHAPfvMXmIAN9Ag7jU/Llcwlk6sSk+S8z7T0LX9+pfJoqu+KDvV
N9JanZON6vtkFaar+8gyjGSX/iFZm4bxu/KEXMk4OpPQyPyAfIVsbooZKaSS
xgXuOSjnxu9xc8zIwYWuHZLzuJ/mMSOdnOTiIvf8KOczkFtiFu9ifjLem/F0
oYNZAbarZ9FPXZ496txcrD4sh8oFsaayEqMZpO8mi/GFugV3qXOxST0jPh/v
qD8lVzMh1pc85CUfl7j+k1zIA9was3hv89NyDRPjt8hPY/Of5asMpru+OF+q
b+NudW42xxrJqjyt7ivLMord+odlHcbTONZSnpHvMSm+lwJcav6LfI0HuT1m
FKQQTVz/Vb4eZ4A7Yhbrbn5Wvs9kelCYy8x/k2/EM9CSNmZ52KKeGffEeurP
yQ+YQm99ab6N55C1GEdPfUdZkGHs0A+S1ZmtvldW4Ht1ES5X/y7fZAitYkbR
2CP/E8Vkca5w3x/yLR7hzpjF/piflx8ylV50MivEp+o5lOBK/Z/ybbLUlRnD
0FgLWYLhfBX7LmvQWt1W5uUT9TPxPbGv+oS16sdiLSjJVWZ/yUUMi/MXM0pR
mqtd/1suZnicjZjFHpqnsE79OH0oQ6bZP3IJI+ipL8nXsUe0U+djq3qgrMaz
6ntkOR7lu1hXWZcJZMaZkKmsVz8RZ5GyXGP2r1zKyHj3mFGO8lSI829PKspK
VCaDa33uP/kOo+K5YhZnyTyNj9RPxnPRWV+Yz9TPU4Xr9Efku2SrM+LZYy9l
KUbwjX6wrMlY2uvby/xsUz8X3xPnR5+Dj9XT6EdVrjc7Kpcxmg4xoxrVqUFN
alGbOtSlqc8dk8sZE2c7ZnH+zNPZoH4qzjVd9EX4XP0C/dUV+SHOrKzHxEj9
/+l4sPg=
               "]]}, Annotation[#, "Charting`Private`Tag$23778#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1WW4FWUUBtBDK6E0SKd0d0mLdHeDdGO3lIIgIS3dDdIg3SCdUtIgKSVI
4/p+rGe/+52ZezlzZi7p2/So0z1KJBLJGzUSGRQtEskeIxJZFj0SmW7WMX8y
E7KEN+0fmc/NueYEc5yZjj9d28y8ouvPcDk5JeQ+4Vrmyeuc9758QO5OZr60
R2W6/NDxTvJ9eQQfhH+DLoduuVyX2JzUNdddlQdQkvW6SrqDcg/e5V/dYHLq
V9jrEYdTug0M4WeGMozhjOAXRjKK0Ywhl5+x0rX1ictp3UY+0B+y9yQLj3Rj
ya1fZW9APM7oWuiuyT9Qik26yrrDci+y8ljXWfdA/oXK4T7r8uhWyw15i4/t
L8yJnHW8pf1v+cdw7+R3eE/ua8ZmvrzZeVXkI3JvhspJySZ/ZUYL5zEj/Fwz
U7hv/Oe6LuZD/WxzpDnaTM1SqoTPZL7FQhbbJ5vvhnvAeNfnNdfoZ5iNzMFm
It6WPzFfmpMYL6fnL9e0Mq/rBoZ7IaegtNzPjMMCeYvzqspHw/NJdr62R2em
/MTxrvK/8iiq8qsun26t3Jj4nNO11t2QB1GGrbpqumPhfpODp7oJ5Nf/bm9C
As7rtlFdfzx8JnLyTDeRAvp19qYk5IJuOzX0J+yfkovnukkU1K+3NyMRF3U7
mMwUpjKNQs7b4HhzEnNJt5Oa4b20f0ZuXuimU1i/0d6CJFzW7aKW/qT9c/Lw
UjeDIvpN9pYk5YpuN7X1p+xfkJdXupkU1W+2tyIZV3VtdDfDu0xZ9ujq6E6H
9598fGOPwSz5tePd5EfhOaMas3TFdFvk1iQP98z+KjxrXHO8rf1WeLYYKaek
nNzfjBueTfkP59WVz4RnnmFyMvLL35oxw3PF7PA8mpnDe0/E3t18bM4xx5hj
zDThbybVw7sXnmcWhb+Z9ilmlvDehp/n9xY3t+pnmm3MIWbi8K6G78l8Ha4J
z6ecIbzPrvnQvB3ODc+vnIry8gAzXvhd8l7n1ZPPhmefAnxnj8UcOQo9wnts
jqVG+AyuKaHbJrclBdd17XR35J+pwD5d/fA+hu+IgkRlrr6kfrv8ISm5odvP
PEo5tkPXjlTc1B1gPgtYyCLec95Ox9uTmlu6gzTQnwvfCYWIxmJ9af0uuQNp
uK07REP9+fC5KUx0lujL6HfLHUkbnu/wXTJVvuN4e/kfeSgVOaxrpLsgf0+R
MO1vMFeOQU/5iTku3E85LTXlgWb88PeP3+xTzawh+5llzT3hOTY7hftrJgnH
SBfeIzMK85hmn2BmZHn497m+g3k3PK+8zxFdY91FuQ9FiUkv3VNzPLVY6rxy
uj/kzqTnrq6j7p48nEoc1TXRXZL7UoxYLNOX1++Vu5CBe7pjLKeCY/t0XcnI
fd1xVrCSVaxmDWup6Pz9zutGJh7oTtBUf9nej+K8QW/ds/A+UJtB9gQslaeZ
2cL/KeHvsOv/B+PxKA8=
               "]]}, 
             Annotation[#, "Charting`Private`Tag$23778#3"]& ]}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"Test on dynamics\"", TraditionalForm], 
         PlotRange -> {{0., 4.999999897959183}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
           RowBox[{"\[Theta]1b", "(", 
             TagBox["t", HoldForm], ")"}], 
           RowBox[{"u1a", "(", 
             TagBox["t", HoldForm], ")"}], 
           RowBox[{"x1b", "(", 
             TagBox["t", HoldForm], ")"}]}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   TagBox[#, HoldForm], ",", 
                   TagBox[#2, HoldForm], ",", 
                   TagBox[#3, HoldForm]}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1:eJwUmnk4VO8bxsfMWIYxzaL6piwlUkT7qs5DoURJaJOislXKFkUSUdlCkqVE
UVRUImve1xIh+76Vfd+37H7z++v8dc57rufcz31/7us6a41v6lwlk0gkeV4S
6f/XV87GfFuvOB4kke5rH3CFH5GFr636JVKJDFm21Em7Vyj+85PG6wqFxMyH
VumPrlnIlCgPGbCuJIz7Cn4vmVcjy86N7Ynx9cTvrqS4a4c6kODahxv+7mkh
bMWU4vWiR5Avs2hT5KV24qh71BvOwX/IuFEXUX53EWPREatvnllEVj8fGt/c
0EckSHm+KN9Lxl9v0U/9d3SQEJuVRmgFFUc6XuvbcnqEKIruCKzwpmLX1/Mn
JwZGiY1lmk6nPlEwqbIFMu6OEw8lZiNVaGQsY2vioLtpkni6XcJs89sl1DH5
Ql/oxxQhWxH7Z5XYHNLotLgXYDVNLD7fRwguTqLjHX5y4uKzRMNnpaezVSOo
L8fY5VfcHLH98PJvUpQepMCqETt0cYF4vP3zi5i4JiRITBo1jS8S90b/O62o
WY7UB8/9W6dHggtab18Wq9WjuuwrPOfkeSA5zHFvA3UEJT3ONZSc5AHLlulX
rQfmkQmvXUtJCRmGVx3/o9lMwZetHZPooRR44GtC7Z+lYkVTuRJNIyr4X1fW
Csc8uJQtL2S3lxfspajCmcwZlB7vGiZP4QPdPKNv6UpDyJFnk/bvZj6IYI3B
zdg/SLDp7hHLRH7oHok9cie1B3W+Wxv42kkAtpzviHhlNIsCZVdRU/VoYBcm
5L/YQ8F+oSb5RpKCcI15p3BoCwWfC7xQQu8WhJ7UO3SS8ByaPhw98zpTCNK2
L6Of8utH7Z0qDtmP6HDaUx1mC9rQmwNbVxcbCcP6Vwb9Ndv+oTh3O5bpZgZs
TH0mEK5AwY/0Lh+jTDLAotztwscjZLyzKTL2UfEyyCmtKfq2YxIFbwyLKz7G
hMfnNrY6/+hA97FP8LFUJrxf8fTok4+TSGu1XnThehaYW/CPJeyjYGXL/POs
JyxYJhNhduvmEnq9xnj970kWdKd69Z7q60frc94HHT/Phogzx/gyJUeR3+bs
TRWZbIja/0+J3saDTcap5QWbOLDzxzp/N5NFZPx1TPLJUw5oauTFNcX1ocxx
mZmlJQ6QRDrDp0/NIP7Gtg2DErHEfeu97oreTuh+obzG1os5xLUH+ISqcgJ6
LVTkxlItI1S2PhHVsvuNLALuZZb51RDBo2mP1bf8QVmcVSF7mc3EF4+/xQe8
+5BF2YBf6p0e4lvq7POrhSTMCvvVcCiln5CSPBvrp03Bs99GOT/mhoiKhq1p
+R5UHCC8I5y9bpTI57/WWXSAipVTLY/WfRsj1E8ypO0HyPjZ27cGj3UmiO3S
kensfyTsbbGm1N1jnjgy/W6j0b82tCamEz3duEgcvRTttBhejX5768mySpcI
wdPdrS1+5YhZd9EpE5Pgz6r4J1ZxHSgvWmTLDz8e+Oy16ZAtfQox8l++/mdE
huwmVxO9Ezy4Y/904Y0dFCh52VOgvJoXF1yvzPq0QAGpXcyUXakUvJTxceBS
MRV+yY51U60W0c9Lpyu1w3nBW9xCyJpnAq0+U2PndIsPbmWt25LF04myLXU0
xY7yg79GTeqMeAtyUD4+5PGfAKi2LycX9o+hDFMxTfleAah89WU3YwUPDmhF
V4XTaaCl/t2gwo+K7Va2aSS7CcKmyKLjJmEkHHud50qNjhCcED4uXys9gSyX
T+zZKkWH0dKJ9nq9dpTNSivIn6DDfym3jw2sG0QxRqdWhOYLg1rp0U/305ZQ
6I3rCjv9GXD7fNLrASYV/wl2vatqtAxEDs1MhJ5ZQPVCu7KOrGLCV5ZB7F7v
AUS3E3nr7cqEBPfozbbDvajrxqi40DAT7jUKah4NW0L5h31JQ/oskGEfMlsY
IeNbP0WwJWLByn3tcf2bp1Db8MMLPrJsKOiwiDWa7kLnphMvMX3YMHXp2K5T
I7PI0a99oXiCDafDDuUr1ZDxlYo5h40XOMCns5V7xgTyq6D75OZzgKVqeTBy
aABVzpkFjkiEEHjc7oO4nAEq+zxP3jCMCMVd5xk7VGPQ7fano+oGxUSnQZ2v
SGAe6jHb8OkPTzXhUuRprfKiHgU7rT1of7GROPnMcNxSrxt1VUvG/HnTTcjI
FRyyWVpCyl/ehdcP9xE/Y9rDD5SQsT77/jeLdUPEGyMhaxMDKg7NPZEbmTFC
CO5wVXhpScXGn5K0TLTHCIXNugYvTlKwxv7s42+6xomieN45UTcevP8F2rBB
dJ64F0CBTttOFN3UbGmeu0BUF4zrGnfUof6r0j9vGy0RP7yurlv5rgx9Mm5O
HfEkQZbOywp/6RZ0IjEj2MuQBw4VRI3bzI+htvdblrzkyLD66oCcycMlFB3x
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
dP8Ufg==
          "], {{{}, {}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{1163, 1165, 1166, 1167, 1323, 1176, 1182, 1189, 
                1196, 1170, 1173, 1179, 1186, 1193, 1164, 1177, 1183, 1190, 
                1197, 1171, 1174, 1180, 1187, 1194, 1168, 1175, 1181, 1188, 
                1195, 1169, 1184, 1191, 1198, 1172, 1178, 1185, 
                1192}}]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
QlzDH+O76uJ+J1uS//8fUXHb/g+5WC4D
               "]]}, Annotation[#, "Charting`Private`Tag$23854#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              
              LineBox[{1163, 1192, 1185, 1178, 1172, 1198, 1191, 1184, 1169, 
               1195, 1188, 1181, 1175, 1168, 1194, 1187, 1180, 1174, 1171, 
               1197, 1190, 1183, 1177, 1164, 1193, 1186, 1179, 1173, 1170, 
               1196, 1189, 1182, 1176, 1323}]}, 
             Annotation[#, "Charting`Private`Tag$23854#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwNyWVWlQEUBdDvwQPpLulH42I0DsEBwASYEx2LTjFoUBHpRro79o+9zjn3
Rr40fK4PBUHQSFM4CFJjguBW1sgNWSmT+MS0HZFx1HJpV8sURvRCGc2JXiWT
+adXyERu9B7y9Dd5yB/K7QSu9R+U6LGc62s0k2bfyU1mKLPjudJHKdLDnOor
9PLRDvivL/GTUvsDF/o6LaTb93KLWcYodovhTF+lj3w7xJH+l0layXB7kNvM
MU4/Be5RHOvLTNFGptuj3GGerwzQTgdZ/k9ylwUmGKSTbL9nucci3xiiixy/
F7nPL74zTDe5fq/ygN/U2e9zMUtN
               "]]}, 
             Annotation[#, "Charting`Private`Tag$23854#3"]& ]}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"Linear feedback solution\"", TraditionalForm], 
         PlotRange -> {{0., 4.999999897959183}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
           RowBox[{"\[Theta]1c", "(", 
             TagBox["t", HoldForm], ")"}], 
           RowBox[{"u1c", "(", 
             TagBox["t", HoldForm], ")"}], 
           RowBox[{"x1c", "(", 
             TagBox["t", HoldForm], ")"}]}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   TagBox[#, HoldForm], ",", 
                   TagBox[#2, HoldForm], ",", 
                   TagBox[#3, HoldForm]}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.8474325208316765`*^9, 3.847432688518258*^9, {3.8474333002387867`*^9, 
   3.847433307527204*^9}, 3.8474334800362697`*^9, 3.8474337849399347`*^9, 
   3.847433848223626*^9, 3.847433901488467*^9, {3.8474339998835306`*^9, 
   3.8474340112287436`*^9}, 3.8474341315824823`*^9, {3.8474341878817286`*^9, 
   3.8474342803438168`*^9}, 3.8474343474188814`*^9, 3.847434411172822*^9, 
   3.847434491313815*^9, {3.847434524997076*^9, 3.847434536697801*^9}, 
   3.8474346380275626`*^9, 3.8474346989775953`*^9, 3.847501420159277*^9, 
   3.847501775353243*^9, {3.84750184925498*^9, 3.847501863698392*^9}, 
   3.847501903868791*^9, 3.847501953402946*^9, 3.847502034165146*^9, {
   3.847502090397184*^9, 3.847502176779285*^9}, {3.8475022174022837`*^9, 
   3.847502226562303*^9}, {3.8475022714627323`*^9, 3.847502313695093*^9}, 
   3.84750245677687*^9, 3.847503120617349*^9, 3.847503354615906*^9, 
   3.8478416334894047`*^9, {3.847841748118735*^9, 3.8478417739242597`*^9}, 
   3.8478418364344006`*^9, {3.847841969990379*^9, 3.847842013727602*^9}, 
   3.8478420570984793`*^9, {3.8478421017647657`*^9, 3.8478421429619265`*^9}, 
   3.8478424407451625`*^9, 3.847842481207882*^9, 3.847851616816584*^9, {
   3.8478518365259714`*^9, 3.847851853382827*^9}, 3.8478519620039616`*^9, 
   3.8478520826545067`*^9, 3.8478521241571245`*^9, 3.847852204131076*^9, {
   3.847852259673651*^9, 3.847852302012787*^9}, 3.8478523655722494`*^9, 
   3.847852896492925*^9, 3.847852939650871*^9, 3.8478530606839647`*^9, 
   3.847853229912284*^9, {3.8478535228297687`*^9, 3.8478535292251053`*^9}, 
   3.8478535827726526`*^9, {3.8478536310763297`*^9, 3.8478536453699007`*^9}, 
   3.8478539295503006`*^9, 3.847854007690994*^9, 3.8478540377530956`*^9, {
   3.8478540772981405`*^9, 3.847854091656337*^9}, {3.847854497084237*^9, 
   3.8478545064514456`*^9}, {3.847854542010563*^9, 3.847854555751459*^9}, 
   3.847854595750501*^9, {3.8478546392195387`*^9, 3.8478546634707384`*^9}, 
   3.847854742429864*^9, 3.8478548862084246`*^9, 3.847855377258591*^9, 
   3.847855460717775*^9, 3.847855575626688*^9, 3.8478556395444975`*^9, 
   3.847855689692645*^9, 3.8478559563176765`*^9, {3.8478560331764584`*^9, 
   3.8478560589168653`*^9}, 3.847856722008868*^9, {3.847940061661275*^9, 
   3.847940110381261*^9}, {3.847940180305273*^9, 3.847940226002468*^9}, 
   3.847940289507101*^9, {3.8479403249500313`*^9, 3.8479403905118237`*^9}, 
   3.847940526878337*^9, {3.847956028524613*^9, 3.847956040866868*^9}, 
   3.847956081929837*^9, 3.847956113790062*^9, {3.8479561677389145`*^9, 
   3.8479562549502926`*^9}, {3.847956286697558*^9, 3.8479563204155016`*^9}, 
   3.847956633484584*^9, 3.847956664057021*^9, {3.8479573234080286`*^9, 
   3.8479573501596003`*^9}, {3.8479574181598835`*^9, 3.847957431152962*^9}, 
   3.847957563895768*^9, 3.8479576801490297`*^9, {3.8479577455329905`*^9, 
   3.8479577670976553`*^9}, 3.847957835544321*^9, 3.84795790551081*^9, {
   3.847958219760807*^9, 3.847958247999346*^9}, {3.847979677189508*^9, 
   3.8479797004015627`*^9}, 3.8480001643140297`*^9, 3.8480833045598917`*^9, 
   3.848083358132495*^9, 3.848083477372958*^9, 3.848083535097123*^9, {
   3.8480848355632677`*^9, 3.84808485126954*^9}, 3.8480849049211903`*^9, {
   3.848084977163497*^9, 3.848084998990686*^9}, 3.848086070578807*^9, {
   3.848284086163145*^9, 3.848284098257366*^9}, 3.848284674860358*^9, 
   3.848284706479249*^9, 3.848284739709588*^9, {3.848284778987702*^9, 
   3.848284794839643*^9}, 3.8482848456047773`*^9, 3.848284927847268*^9, {
   3.848284976965191*^9, 3.8482849969408503`*^9}, 3.848285105361579*^9, {
   3.8482852279292517`*^9, 3.848285249703771*^9}, 3.848285281104505*^9, 
   3.850654447195098*^9, 3.860768233227106*^9, 3.8607683296799364`*^9, 
   3.8607685186068826`*^9, 3.860772264607318*^9, 3.8607723539444475`*^9, {
   3.860772454006111*^9, 3.8607724653214545`*^9}, 3.860772585749537*^9, 
   3.860772629596367*^9},
 CellLabel->
  "Out[207]=",ExpressionUUID->"c830cfb2-640b-4a59-bb7c-851fb580af92"]
}, Open  ]],

Cell["Animation with General Cart-Pendulum swing up", "Text",
 CellChangeTimes->{{3.716613652345023*^9, 3.716613661762876*^9}, {
   3.7166171500953703`*^9, 3.716617173133562*^9}, {3.716626783084096*^9, 
   3.7166267858131742`*^9}, 3.845482883460244*^9, {3.8454833355827293`*^9, 
   3.845483336286716*^9}, {3.847433954599126*^9, 3.847433968468281*^9}, {
   3.8474344191285405`*^9, 3.847434424821303*^9}},
 FontSize->16,
 Background->GrayLevel[
  0.85],ExpressionUUID->"09e0bf8d-0fbb-4418-b194-8ee43d4c5bc0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"AnimatePendulum", "[", "rules_", "]"}], ":=", 
  RowBox[{"Animate", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{"DrawSinglePendulum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"x", "[", "t", "]"}], "/.", "rules"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Theta]", "[", "t", "]"}], "/.", "rules"}], ",", "1", ",",
          "1"}], "}"}], ",", "t"}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
    RowBox[{"DefaultDuration", "\[Rule]", "5"}], ",", 
    RowBox[{"AnimationRunning", "\[Rule]", "False"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DrawSinglePendulum", "[", 
    RowBox[{"cart_", ",", 
     RowBox[{"{", 
      RowBox[{"angle1_", ",", "length1_", ",", "mass1_"}], "}"}], ",", "t_"}],
     "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"width1", ",", 
       RowBox[{"density", "=", "30"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"width1", "=", 
       RowBox[{
        RowBox[{"mass1", "/", "length1"}], "/", "density"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Graphics", "[", 
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Blue", ",", 
            RowBox[{"Rectangle", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"cart", "-", 
                 RowBox[{"1", "/", "4"}]}], ",", 
                RowBox[{
                 RowBox[{"-", "1"}], "/", "15"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"cart", "+", 
                 RowBox[{"1", "/", "4"}]}], ",", 
                RowBox[{"1", "/", "15"}]}], "}"}]}], "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"Orange", ",", 
            RowBox[{"Translate", "[", 
             RowBox[{
              RowBox[{"Rotate", "[", 
               RowBox[{
                RowBox[{"Rectangle", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", "width1"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"length1", ",", 
                    RowBox[{"-", "width1"}]}], "}"}]}], "]"}], ",", 
                RowBox[{"angle1", "-", 
                 RowBox[{"\[Pi]", "/", "2"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"cart", ",", "0"}], "}"}]}], "]"}]}], "}"}]}], 
         "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"PlotRange", "\[Rule]", "2"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "280"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"Axes", "\[Rule]", "True"}], ",", 
        RowBox[{"AxesStyle", "\[Rule]", "Dashed"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"PlotLabel", "\[Rule]", 
         RowBox[{"\"\<t\>\"", "\[Equal]", 
          RowBox[{"NumberForm", "[", 
           RowBox[{"t", ",", 
            RowBox[{"{", 
             RowBox[{"4", ",", "2"}], "}"}]}], "]"}]}]}]}], "]"}]}]}], 
    "]"}]}], "    "}], "\[IndentingNewLine]", 
 RowBox[{"anim", "=", 
  RowBox[{"Animate", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{"DrawSinglePendulum", "[", 
      RowBox[{
       RowBox[{"x1b", "[", "t", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Theta]1b", "[", "t", "]"}], ",", "1", ",", "1"}], "}"}], 
       ",", "t"}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
    RowBox[{"DefaultDuration", "\[Rule]", "5"}], ",", 
    RowBox[{"AnimationRunning", "\[Rule]", "False"}], ",", 
    RowBox[{"AnimationRepetitions", "\[Rule]", "1"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.8474334026753283`*^9, 3.847433403008462*^9}, {
   3.847433433543202*^9, 3.8474334675097246`*^9}, {3.8474337748561916`*^9, 
   3.8474337809669757`*^9}, 3.8474338451570363`*^9, {3.8474340570191107`*^9, 
   3.847434108373478*^9}, {3.847434153821231*^9, 3.8474341562594447`*^9}, {
   3.847434207216559*^9, 3.8474342224532022`*^9}, 3.847434288455736*^9, {
   3.8474343381485023`*^9, 3.847434344353918*^9}, {3.8474344879581165`*^9, 
   3.847434533952104*^9}, 3.84750202915766*^9, {3.847502087246366*^9, 
   3.847502135130405*^9}, 3.8475031178075657`*^9, 3.847503350830954*^9, {
   3.847842090655676*^9, 3.8478421364550157`*^9}, {3.847854024328363*^9, 
   3.8478540348261814`*^9}, {3.847854073711717*^9, 3.847854088482562*^9}, {
   3.8478546533550863`*^9, 3.8478546738614874`*^9}, {3.8478560553610106`*^9, 
   3.8478560562905273`*^9}, {3.847856717812004*^9, 3.8478567193832455`*^9}, {
   3.8479401050604453`*^9, 3.8479401074002285`*^9}, {3.847956073175027*^9, 
   3.847956075358217*^9}, {3.86076842114338*^9, 3.8607684235106163`*^9}, {
   3.8607726570355015`*^9, 3.8607726600105405`*^9}},
 CellLabel->
  "In[214]:=",ExpressionUUID->"3c0ffa17-1538-4b36-838e-10c6b32685c8"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 0, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0, 5.}}, Typeset`size$$ = {
    308., {160., 164.58012661499674`}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Graphics[{{
          RGBColor[0, 0, 1], 
          
          Rectangle[{
           Rational[-1, 4] + 
            InterpolatingFunction[{{0., 5.}}, {
              5, 7, 1, {542}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
               False}, CompressedData["
1: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
HNYPcXsvi//7yyGH/wcebLsv
              "], {Developer`PackedArrayForm, CompressedData["
1:eJwd1QFHIIgWBtC2TZIkSZL02iRJkiRJkiRJkiRJkiRJ2iRjJEmSJEmSJEmS
JEmSZIwkSZIkSZIkSZIkSUb29C7H/QHfd91/Gv+tbP8rICDgf4EB/5/vFUQw
IYQSRjgRRBJFNDHEEkc8CSSSRDIppJJGOhlkkkU2OeSSRz4FFFJEMSWUUkY5
FVRSRTU11FJHPQ000kQzLbTSRjsddNLFD37STQ+99NHPAIMMMcwIo4wxzgST
TDHNDLPMMc8CiyyxzAqrrLHOBptssc0vfrPDLnvsc8AhRxxzwilnnHPBJVdc
c8Mtd9zzwCNPPPPCK2+888Enf/giQBECCSKYEEIJI5wIIokimhhiiSOeBBJJ
IpkUUkkjnQwyySKbHHLJI58CCimimBJKKaOcCiqpopoaaqmjngYaaaKZFlpp
47vkHXTSxQ9+0k0PvfTRzwCDDDHMCKOMMc4Ek0wxzQyzzDHPAossscwKq6yx
zgabbLHNL36zwy577HPAIUccc8IpZ5xzwSVXXHPDLXfc88AjTzzzwitvvPPB
J3/44vv4AwkimBBCCSOcCCKJIpoYYokjngQSSSKZFFJJI50MMskimxxyySOf
AgopopgSSimjnAoqqaKaGmqpo54GGmmimRZaaaOdDjrp4gc/6aaHXvroZ4BB
hhhmhFHGGGeCSaaYZoZZ5phngUWWWGaFVdZYZ4NNttjmF7/ZYZc99jngkCOO
OeGUM8654JIrrrnhljvueeCRJ5554ZU33vngkz98EfC3/AkimBBCCSOcCCKJ
IpoYYokjngQSSSKZFFJJI50MMskimxxyySOfAgopopgSSimjnAoqqaKaGmqp
o54GGmmimRZaaaOdDjrp4gc/6aaHXvroZ4BBhhhmhFHGGGeCSaaYZoZZ5phn
gUWWWGaFVdZYZ4NNttjmF7/ZYZc99jngkCOOOeGUM8654JIrrrnhljvueeCR
J5554ZU33vngkz988f34AwkimBBCCSOcCCKJIpoYYokjngQSSSKZFFJJI50M
MskimxxyyeM/vasHAg==
               "], CompressedData["
1:eJxl13k4Vd/XAHBCksoUKWSI0iAKKdNCRCiZx0REo2SokPoaopIGU+aZiEjJ
zCYyVIZc170uZb6ma86s27v9/n3Pf59nn7XP2vvss86zRC/fNrrCyMDAoMzM
8P8ui56U3T/+Sqsm2lryhDPsg/sdDFcV6NqqXv0cO28wyAL/DtepIuVe1XFW
n+rman/gfKqap6ZAVxV4r2madCMMtuX+PCnwnRMEKuvCsm/FgfGXnUbqvZwQ
o+LguulhHLjPn3dyn+eEBrK6tPWLONBav+ZZwMoF349Xt35KjIO4GINHawJc
0K7x23BbfhyoPxkLMJThAiaG+M+OKA4K/Sz9eS25QL7MTI23Lw48Mkevs/lz
wc6Jl4ZfGeLhfM+QslQOF4id1h7zEI2HqyzRjL8v8MBMpUH5iasJkH4q548G
Gy8ov3HhbcpLBAZhOXvLDj4QqX21eHghCdbMjV7u/cgP/1h+5uUnJMOmfX6k
gLwDcJIUmhi1lAnWe3+LiBrJwlvOOEd5nffAkSpS+CBWGSrIWrN1DQVg5RRd
Qew8Dd2fNdYaqYVgW9tl+GPYGs4dPLSt9lINXH7d059lcQOunr6qmSLYCAZ9
0U3Geh6gR1UqZj/SDNz9tjHJkg8gpd7v8lOOn8Asv50akegPUdrH7H54E+AF
X4veRHUwCDB21VaRiDDudu1Dm+wrWJtActNKXfA2fuBy5b5IQOdKPrn81wOR
Ys66Du9iITAkpXclvRfeKD5OmrJLhoVAxdU0k34Ya1YREPyYBrYllWWP6weA
J2x8YKnmLdxcK6kcMBmC+uO7RyzFcmEhTlqBuWUYiG1VIdecP0CyTkb6+2Mj
oDoyseLe/xHaBXUr0h6NgtDhm/e3+H6G0/flpPOKx8D+LkP6L4USUDeCGzFd
41CREX+ed2slsLa1NR4NpcEFE6lFHa4aMCiIlIljnIJxCRfZ+QO1MC6nMyCz
OgWD69VNZ89/Bes8gz7P79PwoLBuPd6vAVI2ScX/UJyB/DGmCnXUBCIi8d1e
D2ZgUyavZwTzD2gmG79nypmB6VN9xLXzLXA1Vj+4qn4GhP9quwo9aINzv2+V
DbTOwIsxw0T/tp8Q1vTXXqhmBuwLElLaxAjgez2TRTFuBqrydtsp3ekAhl3M
6tyXZmDJfJMoBVu7tVRrxnYGCPopfffdOiBCskurBbv34mLiLvcOYCHwqOdi
Z1kz2hRh245cU3iGXcH3ZZepRwdce9gteRU7NivveZhnB5xYX2AUx5YodF1v
vdsB9VceNfRenIGRys3O2+93APXJfa847BwdGXe3wA5IVu4+RbOageqj9e7E
Vx1Qcv6UpbzFDDTs3eJwIqEDKksjKXdNZ6B49JhSZDaeL2Gx+oPRDMyJRjT+
FCeCU4rTdhP5GTDJPiZlo0IEmsWz5D3SM3BHsGvbL1MimDHmONZKzsDvg3cU
TVyIILhOvHNebAZ6hlie1gQRgZ2bo69cYAYMt7RuD3xFhC7DU+Hcu2fAK+HM
H81YIphW5+U68s2ADEcIgzn2lgzax0vYExNN265h0x2OlFphv5dl2u2D/bDu
JjLFvks9IRGKHVL//usFbC3mK8eSsA9dn/6uh73AW3S2FjvojztZHbuJMGM/
gq3EsjakgF2vwuvNHkcEq/jAWSlsbYfPTh7xRHB0v337G+8MmPXH6/5KIML8
bvMpJ2zWlu8SZ5KIcJik5MKE/Rw0lvOSiWA9JzSdtHMGKDbGhl/ziCDvkHS0
khOfN5dCDXIFETRJuu2UbTMQV1r5Y+QbEU5Ly3Uvb5kBhzuN0/NkIuQm3tLd
xYLjS4/mrlOJEJXFKnqCcQZmCvt0Y9w6AQ2kKTN9noaomD8ug+ud8FF0e/W8
8zQsiVoX9DwmAfHnybNaAtOwMt/wLWg7GU66/yHTW6agQjjq9WA4GbaHf17a
HzAFBttrlv7wd0FiUWBprcIUfCtlMW7ro4BRjS/7B9lJ6Ih2Hz4T0wNhEga/
VU7QoCN4fG+txm9QWS8yZlSbAF8T076iX73Q6WTdfMlwHKTuVXnof+6DeZ38
xDfXx2D9IMV61qMfjJ1al+tDRmFka9H8Je0BmHx+2vv1mxE45H5IIp1rEMLO
/3cp6T0VDJSfkfk6BoH0Il2pvHkYxnQMa3e8HIKmwvzncUtDIG3b09GrMQzO
r6hio4eGgMX8fhNlehjUGxtuqToPwpdnsq/2zwyD3mr5v1GnQeDdm2Lqhr1T
3C88HLt4V83uKuxrrXRJVWy7h+E9bLPDkD4nVz16ZRAaLfgTTbGFAvdZhmMH
bQreO4md4HTnxajjIPz7gGIC54bhU3byNxXs2ZgvHILzw+Dx98P2cIdBWLZ+
FMqyMgxv52/tH7MZBA4vMaZJ+jCE8jZOqpsNghan9512Ziqs6alcSDAYhAEG
va7PW6nAYColtKYzCATxG/zL2LWyb30+YHNOPDNTZKfCrUXt7ivYL83fhT/A
vh/FoSyAreXS1FqF/WU7PaFNexAkZEe3Mm6jgoQZD2MQ9n5RiUePsYvvhjTN
nBkE7xG7abbtVDBMS4yyxq7PiLN+gS2ZrX+1XmsQnEYbS0u5qZBwWi5qHgah
13LXk8FdVCCE170UUxyEnDLGBnYhKpAXVEyM5fD6BJjuHRejwlBW78Djo4MQ
Jyy9zc6UCo8irFT6/wzA8H9qXfPBVDgrMaRLKx+AROGCgulSKlRFhG1JDxiA
swKjdqYTVFBtD7rOoj8A1GHOd/sFR2D5EN/F7bwDcKZ6L+1O7giwmR4UDHTr
B5seZs8chVFwjB866UvsA6pTVjK9chT8JroHk1X6oNvlGWMEjIEUn9Gto6a9
sHVp0v51xRjkBx2p4Tr5G6TIzN93y4/D1xCRi7DvF6TuvckbQRiH+pXPHrc+
dcO3+x+lpK9PQLPmTK7JBQoE3XYOlVqZgOskf0ObZTJwOJH+Nv5Hg+cjgWwM
70jQWPSlg47N4Bt1xSubBIX5Pu/k/GhwXJ6xdi6LBDTjTY+uYwuyN4rexH6S
aWaUjE2ijvsNvyVB0rv74p3Y3h+uDdpizwtY1Kv706CXtDfbMJME0zdcHN5j
vyJoeGhmkED3U/kafwANHvZ1aCqkk+CIefqIXjANZEpeRBTGkCCx4/bCgxAa
+AtzMsi9JMHPe74SuS9psPu2R+DnQBIw3T5yvyucBnOVxL2nvEnw5iOjx8lK
GnzRr3Ju5iLBHeFZt3PY9676i0dj3+P+cOcy9p5fXv2XsTtDVF3vYbN/TU+U
wkYh8S7PsVv2Mtksc5LAjvvbzRTsidGI3bXYt6Xqrn7HvmYpHGmB3eG47rCA
reF7j2uKgwSby9xshatocF0n4UUA9pW63Ybu2MlJhiF5O0jgZ16q1oAds1k5
pGs7CQqsDKUEEA2ktzp6M2Pv9N/5OhHbKK/PqYgdP9/oyqRoNQ24gxeznLeS
4CCDmkYGdm1/qho/GwkctU8t1H3F+TCefdG11glr596/7/9GgyEtXVWLqU7g
ESXarLXSIO4kaEX0dcIOZ9I8F5EGzIIP3oS2d8IneaHjO5gmIZxmWLyu1QlC
v9ddidKTwAwdr66mEWHlW0yKovUk9CaPeKWNd4B7whVDzseTYCV7rfu+QAd8
9JqLlXw/CU6Fne9y5QnAcZVt686pSVAXXAo2cv0Jhw940lQlp4BV1k2+uLEF
xMaGGHOtpsAs7fT+dOFvkHav/z+zwCnwibg8+bWvDjYHq36USZ+CefJeYaPt
VaB75renWOkU+LpMNM3zFoCZXOcRtS9TcFr7zNKrW5fReuuNvJdlU9AnpCnv
3fIBUd9pmaek4XiRuZSD2jUooiG6+2nQFPxlmfX8XNCIlOob837YTkGJutek
1/k21HJjeP7j4SnQanmR7RLcgSIcJX4uLk/CllPBk3rSZHSCd8mwqBKvz3HE
d421Bw0ImBgmYy90/bxtwdaDvmomGTzDtusquPp5aw8SCyHre2BX98Y5c2/r
QYrj/3Rssc/+e3nz9vYeZHiRV1MHW0b3xb0fO3rQpsuCJwWxTW4lxQRx9aAv
r7oPzFRMggShi6C2swel1xrx1GEf5lfdv8bXg9LqHay2lk/CppWUl9rHe9Bh
0a8tBWWT0FDyyK5KoQcRRujHLLE5zSyC5VV6UJMSZyADdp7IEWquRg/Kv3Rv
3L50Ekrfi12+o9+D3Ep499SWTMI8g43uCbMeVLA0yi2OXeO2KWvtUg8KCJrq
CCyeBKXXQj4113qQ582qZLWCSfjjUPA34nsPOkgQXaG+w/ELLkFRUr8QWYih
4176JLxpVpevf/kLmdWcOjCfMAmiK12S4nO/kM8mnvHn9ybh99RD5lDOPsQ7
2+Zz+/wkyIXd0fhzqB8JscREh4tNQkT/Yvw5nQFUdCBzbnaeBgFqKc/jrg4i
uzcpigFfaKDtWPGpJ2QIjeu/b3hxjwYefDem+qWoqII70Jq4nwabLlpNvyWO
oAupIeKn2ybA5q5pzoL/GPLwyNT66j4Bb3acXLgrP4GKhq6BLtcE/PRMEimh
0RBbnZDTl6xxEO68Gi+aNYUOJQWcVeYbhydLlOp8rxmk/fEAv4DXGEh+vnbx
QMoseh2ZNmz8cxQeyjqe42+aQ5br7AMV2qNwgv3ugkDePCpAC5S64hG4/oLn
jvfrP2hqL5z0ER2Beknr14fcFtBjHrrUUiAVWHQCZbYYLCLlfzduWwwMgysI
85D3LyEl9sLqhlPDcCKIVHlueQnFRrPvv+Q1BFeIq18Pdy6jplUtCf2Pg6BU
/qpiPGsFVZ+lzrlsHQTrMwHzYvqraGHTtzuvbQdgdFosrHt4FWVsPhc5n9cP
ECpwV99zDT0pSfrXtdYHFwS4U76vrKFzvH1HQrX6QPAaqmx3W0dfipvWP/D3
wskpASmmvnV0852dA3fKLxhkoNyUVP+L9pyCHYc6usHgVdG+pMy/SKI7xPAN
IwWkPGgMKat/UenZg1rOh8hwcTY2skqFjhx9ZgOrD5KhJCbNnIAtqqZdtxu7
Zpco/yj2XOohJndJMtgnJ3WuY5Pz4tR/HCCDjapwOJcqHXW4xD6SwHZbTzq3
H3vl5qdVkgQZ+LvSqgywvcOZPJ6Jk0ErKveAF7alYsiE8j4y0ELLnqRiF0vt
kJfnI0OGaV68qhodhd8qaz7CRob3q6IRJHWcn/1w0b51ErAOObveOk1HT/SG
Z3dPk2BpmnicQYuO7mxOcGAmkuCvuLuroA4dHR6wkOJsIMGjCdbjNWfpiONE
1rHqKhIYhl1hKtOlo9Xjb19+KCHBfaV5NRc9OkrwLmpK/kiC98RBJVF9OhIP
5+t7lUuCo16ef9qxg59/TnVNJoHywP2k4+fpSPH12y6DCBKUhChrhhrQEfXg
UNDRJyRg5icMDVygI/5vN3O3PSBBbJxNgKwRHRE0+j4mbiJB9bMGIR1bOjIV
VlRmftoJ/GqP9O5cpaM4I6VhTY5OCODz6Ct2paOd9uv7r0YSgar9eFH8Hh3J
pcWaegoQQYtBmFrjQ0d2luYXzPII0GZ4i1fgER39alZQuabeDvQe1/dv3Oko
8ajX2CmBn1BDOc5+yI6Oimpqw3onWqG/al+mriYdMa7KvPuU1gwq5Ks9wSJ0
tLvxjXOA7XcI+/dy7ebCXyTPdLSMJNgEJdHfx/6r/YuUnhwLl+6tB6sLJXxa
IX/RnTgDVbWoWniRm17qJvUX+RRd0fO0qAaVj4VGenXrKCtBQJbhfBlUWrYM
CBuuI/cf1pE9LIWQRkghCxHX0LhV2b+iwhyQrflXZmC4hmQ2D1kGyCVBmlra
t8T6VRR53VHj74ov0MM0xIjyq0hZkP3Spv/CkRLzvW/yQSuIq33P75H+TNTQ
ZUcValtG+RUa7mk/C9B4Rqzv2Z3L6M5yuU86QwnaGfrBw8B4CTWPnLmTv16J
gl1OPM0MXUQt0SaM+gM1aJtf+I/s2gX0jcdRMS2nDtnxy6fEL/xBhclnF8mW
DWif58VTefv+oMaqK1YnFb+jFupY+eueOfT6RJ9QKbkFUVYtyH3PZ9F187qp
9t0/UZb9iPIzuRn04MUml+T0drRZCjnHZk6ipyVV5mcz2vE5eN5tmTGJfK5b
KM5hKwub6O1On0Q8L1t54zLb0Z4m+2Jy6iTi5RIfP/22HRkf/iwcnTKJTneb
FtOwG2TOB5on43ii+2nV7HaENNjPdCZMItczmz+9fNeOTpn8XjaJm0SHA7dt
7s9pR/Hp9fGE6ElUsCNBdEtpO6JGdbd8eTSJ6hNCeMTr21E3zfZQrtMkMhJU
75IjtCM548+5L89NotcBYq6Kfe3IRkHJ+JbcJLL6UcDMZkdAFKvz2j8VaGiX
s42rFvaOeXTcHFs8irHbb2PcL0Po1wkasrRI0azCXi5lwI0+Db3MVXq/in0w
9ufsqDwNJbxu26lgT8D/Sf5uF+xdPtP9+di7vV7lesvRUF7i8jvJywT0yqHX
J0iWhkTmJ26nYJsTmc+GHach5aXPahbOBPR7/imR9SANvRYk3N9+k4CUmz48
fSBMQ3tNhPlrXAnI2NToygwvDRXY393r7klA7qbaVx220ZB+Udyl9ocE1PHb
ffDMygT6e2XqJEcAATl3f8pMmJlAehJyX3SDCWjt1MnxPyMTSGXT07XAEALS
80oVPtc7gW4MMj9aCCcgy++9tgwtE0j2gkedXTwBJdvIXS6umEBGsms/6tMJ
SH5V64BbzgSSf/uBnraE11vd+PjZv3GEggWUvXU6UEbbVCyn6TiKTOVpPPem
A6nFvUleyxlDq/oZrWJDHUjEzZfpNPMY4vviJ6bzlIg+n3R8MvBqBOUuPt6X
Kd6JrG7ZM3Xuo6J7TufeORV1Iknn9k2NFUOoTZDuVKBKQvyBYeHO1oPokxBh
MqeShJ5tnRK++q8fFVf+ZBvzIiNP/+/Vvsm9SESSX3r33i7EK6jrKGvdjfjV
+b7WvOtCvsNfPzUfIaGwWNHPNiIUdNF+q4gJDwHZOIxftHxEQU2b7ftHdreg
8w9VzYQaKWiH16vCJel6xKl/Rf84azcyk08aHMsoRpF2Qv0HRbpRzmq6XYLn
M7TQuTkon6cbfffZ7e3+8QNkhHoPmw9QkHSuv+MHuS9wUtz8ZupzCvp+jQLh
M99h/8SVsFVuCkozWfy5vakdNCXch0o8u1Dv+dWPorj/SOdWq7XFVtu7LSPi
NQlE/fOjmbHnzQQjWXGdFnlQ4/jOowsJlKz6e0eRgIXt7oEL2Ivhb10mo0lw
7Fhz34J7FypV3mdhF0cCSmO1mjr2p72l+8/gup/MCT7P3bpQNPU57TDuj+7q
6bwi3cHxhinZXLg/Cy8vMqu63oUk0u9LsXWT4HHsswdRDl3o8fZUw7/sZDBw
qN1kZ9OFLJb4RKaUySCaYTu+x7QLKcSSU7tvkUGve/2TJlsXavKz23bXjAJ7
3P1OCGOvMO16YmtOgZqD5cUrW7qQJfJj0ragQMK/bIUObPNbOQ+lLSmwdeFc
UR72Pu6IlV1WFLiy9a3sU+yxAiUPBmsK5HvWHlbFnpzfcu2nDQUiHAr3zrN2
Iapmu02qLQWWOr22ZWHfb3xj4G5HAYJb96kS5i50qismPN6NAvVJ5y7XM3Yh
6+p8t6+BFJitoj5up5ORvNbYKi2KArSosfSeNTLypcvPcWZTIG2pe6humYzo
MpxBc+UU0GkQXXi3QEa0mQ7L1hYKZIZod76YI6OPlT4ub/spcJWZ8sR1mox+
98nUef+hgDD9nqPUGBlVud6Q5dnTDT4O9s/7B8hI8Ov3rGjohszINebQHjJi
zQqTYL/SDUdzc9qlO8lo8efqu+vPuiEr49LYxwgyEsmaKOFZ7wGvmJe7qAZk
9NZAs9rC6TdMcRDuU1jJiK86aqtKUy+0deqJpVSQcF1QfGgf1geyi+Hiei4k
1GdbtfWucj/cvp2/lOrZiY6hAJlBwUEw0ZKcOOJIRBx87Nxyv4bgd9oOhRSl
DrRQ/ynzlC8V0j4du1b+F9dX5eEb6esj4L9mJ6Wc+xMNyEs/Y7YegwPj91gm
dNrQnWvla01vxiHIlcMisv0H2jKfVai2PgHh7Zv3OVEb0e9bAsu2+yehvPlm
wi1iHYrXXpDh2DkFFYxehcJZ1YiD6GJMw31X+73giCCvMiTRcvCSksg0OKdJ
aDOHf0IuYipf3hhOw55LPZzy57KR1iD/luum0xC8ZBCZopON+PTrwxywT9E/
79mhmY1cmn7wXcRek+VI8QZ8v3JOpBl2tKWN5IhiNpKNtOe4gP1LOvGD8Yls
1Fg3HXAW2wptqz0ilY3WU8svK2Oz8Jt0sYhnI0Ej6hFp7CA17/nfe7KRiuHt
AVFsUjK13QplId6O9GfRJtPQxmRrQHbIQppKCaKs2J3mVv+Zb8lCZWr3M24Z
T8PtYx6+5Ny3SO+K8c4fRtPgH5n72nJPOpK72HOmSncajr23PBHmkIbEH7cc
q9aZBj/ykd7O3FSUkd3EkXJmGjRFPl2QXExBv/YmB13SnAY035237VIKmhU6
WuOkMQ27M161rjYkIy6Rix9M1aZBpui05LxMMnrJoKFzRHUaPIqcLtJkk9CY
l+OjcaVpaBL0OaVMjkdb/Q0zhBSmwVzmUBTtQSzKWN/cOXVsGm5+k+thFotG
LC7Xv148Mg2zU3u8nzdEopAGpwPX90/Dpn/Z+wSbH6LzPkddQ1en4OSJsKa8
A17g5Ef98bR6CjaNLZuHH4yA1TypNeH7U8AicaMkdC4Z4ouo3VyiU3DkMbFt
rOwtWEryT4vhvpNfvjYmbfADnAtzaU1hnoR661BKUsNnoO8x2/X3EA1S/Sx7
LQLKQCvD8fUzqQlYMW8IT+VE8Be5vyxiHwfrrJt/4gtroPuMbOGWr6Pg9yh0
zrG2Fgxd4+5IWo5AVPzkV/LderhwpvB9K88wDB5o8d/d2wh3p4Moi/4DEBGr
kMI8/w2SCpb0s8/3Ql154WkRyx8wtlj7bN2EAl/28i6pP2qGNue8ZHUGIqh0
cwly27eA6Z8yd4W3LXAq33vNcbUFNrsi34WML8BeZkPU1G6F26clAzl2Z0Gr
jmHOk/OtEM3qqng0MByFuAZ/+w/7dz4h+HdZODreTyXcx9aqF1p/ORuONknc
bnDFnnY0fqMhGYFU64UzrmKznXCyXLSNQNIGyzftsJsHtDVyIiOQsNZymwH2
twlf+11Mkcj3SMQvVewj190EnrhGov0WjWFSG/GOubf//opED5+ay4pjp1zf
JSbBH4XcQxTL92A/+Vcqct4oCn3jexvDiu1sdbYotR6P+9ry/jnXCoeMVR+s
K75B8RY2R/uwDZ6yulnnv0E+zjUsndgPHkYXp469QWf6HOq+Yy+VNZ6d2BeN
DoaIcRZjL0drsD6KjkaJ7u3LKdjqR6sXd22PQV3Stx8+x+Y/nL+ryC8Gefs7
Xg3BbtmBeEKDY9AupT1Gz7BzSft4HENj0DPLV0pPsWv8f/Eqhceggl/14k+w
Y9hpAtwxMci5oXJ7MHblLQOJscQYBBMiDBv+FTjLczwpBpmPBswFYXtlRG7y
wd4SeZa04Y6F/t5tyTGoPHNHxYY9HE9UJmK7ChGSN2wxGxYrkxKDmtxtXz3e
yGduSn0wMwbxBnYFbVgzNeU43jrk7Wfiu2H3C6b7zmJ7mule33DZ2yrmfGxC
L5hvuPPPYerOrBgUKSSvueGvCgkN3ti6/0B5w4wPFawysL8TdOX+N79nO60V
2+mynfiGSV/ZuCWyY9CxCs+dGw6inFbwxj7S/4x5w0af/rNpxeaS1fwbuBE/
3K+9iM23+HltwwksrLF07NiSA6sbfiB7hLb5XQxK+rbrfz44bqfOip3ew/o/
88dGRm04e2ppZcPsut8mNpzHMPo/M67S1bZgf+Qm/88GTW3aGy4/UfI/jzh7
mG64zir6f/bdzO+w4eaH9//nnRnlrhsWHTm1vOGxTuGVDbsYrC1uOHdLoB8b
dmFxxcKGbRRH2bZib2nSHduw6oH2ixzYDSRyz4Z/b6so2Ik9O+jUtmHliQyW
PdjerXPGG65kb9A3wM4q8SUFYLuZDYcHYj9IYrXesNV3hu5SbHsx2YcPsW/d
uJfSkov3t2wl2Qtb26fdaTAvBvE4W9d6YJfPch1e/hCD9A5aDN/Gtq+Vn9r2
KQbJ+j/dB9jnnqVe6GmIQUx8FxR3YP/4wquZ04PfR3HuwV/6rSCk4dToNYvP
+8nk2RxsjZ7rv7Q3x6JF7dO6xbqtYL7cm6rcGYtEO5zVP+ng+cZdVFgy45Bd
sAUl6Qz+nuL82FM841H31A1+X81WeC69/QaHVgLyTmL+p6vRCu/Ry1KDnYnI
RklabfvBVnhayMItw5WGhmQjNPrZWqG+/0J1x/a3yOdDuDVpqAU6JI0VGunv
0BMNuU7GshZgLnuyUjCQh06o5DB5Pm0BaSa2HbtsClDXcra+tnEL+PZ6OlBV
P6GhLMoOmdJmqPW5wtaUU4yynUx6ZBia4cyB/BUPSjkqfOD/8fihH7CXyn2f
WoUQEpdMunfqOxxUDWWSzKxB/seLdyXLfAPvWkJojGItenjQwzufuwn0Kwjy
NZF1yDUg3Y9jsAHOG9yscfzwFbmdI0aGZdSDXltz5qGAeqQfFc3qafsVZBvS
nHI3NyBLNnnbi9x1oLps9iZQtgHZszIOikR+gRrPK8rec/Vo142fyfYiNXBM
QeWm0KF6VG3QauXkjWDuzErRmdY6tIUn0EnwdSWINui0xtyoRct/WC3amsuh
iueHUM77GvR/hEu2NQ==
               "]}, {Automatic}][$CellContext`t$$], 
            Rational[-1, 15]}, {
           Rational[1, 4] + 
            InterpolatingFunction[{{0., 5.}}, {
              5, 7, 1, {542}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
               False}, CompressedData["
1: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
HNYPcXsvi//7yyGH/wcebLsv
              "], {Developer`PackedArrayForm, CompressedData["
1:eJwd1QFHIIgWBtC2TZIkSZL02iRJkiRJkiRJkiRJkiRJ2iRjJEmSJEmSJEmS
JEmSZIwkSZIkSZIkSZIkSUb29C7H/QHfd91/Gv+tbP8rICDgf4EB/5/vFUQw
IYQSRjgRRBJFNDHEEkc8CSSSRDIppJJGOhlkkkU2OeSSRz4FFFJEMSWUUkY5
FVRSRTU11FJHPQ000kQzLbTSRjsddNLFD37STQ+99NHPAIMMMcwIo4wxzgST
TDHNDLPMMc8CiyyxzAqrrLHOBptssc0vfrPDLnvsc8AhRxxzwilnnHPBJVdc
c8Mtd9zzwCNPPPPCK2+888Enf/giQBECCSKYEEIJI5wIIokimhhiiSOeBBJJ
IpkUUkkjnQwyySKbHHLJI58CCimimBJKKaOcCiqpopoaaqmjngYaaaKZFlpp
47vkHXTSxQ9+0k0PvfTRzwCDDDHMCKOMMc4Ek0wxzQyzzDHPAossscwKq6yx
zgabbLHNL36zwy577HPAIUccc8IpZ5xzwSVXXHPDLXfc88AjTzzzwitvvPPB
J3/44vv4AwkimBBCCSOcCCKJIpoYYokjngQSSSKZFFJJI50MMskimxxyySOf
AgopopgSSimjnAoqqaKaGmqpo54GGmmimRZaaaOdDjrp4gc/6aaHXvroZ4BB
hhhmhFHGGGeCSaaYZoZZ5phngUWWWGaFVdZYZ4NNttjmF7/ZYZc99jngkCOO
OeGUM8654JIrrrnhljvueeCRJ5554ZU33vngkz98EfC3/AkimBBCCSOcCCKJ
IpoYYokjngQSSSKZFFJJI50MMskimxxyySOfAgopopgSSimjnAoqqaKaGmqp
o54GGmmimRZaaaOdDjrp4gc/6aaHXvroZ4BBhhhmhFHGGGeCSaaYZoZZ5phn
gUWWWGaFVdZYZ4NNttjmF7/ZYZc99jngkCOOOeGUM8654JIrrrnhljvueeCR
J5554ZU33vngkz988f34AwkimBBCCSOcCCKJIpoYYokjngQSSSKZFFJJI50M
MskimxxyyeM/vasHAg==
               "], CompressedData["
1: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
iueHUM77GvR/hEu2NQ==
               "]}, {Automatic}][$CellContext`t$$], 
            Rational[1, 15]}]}, {
          RGBColor[1, 0.5, 0], 
          Translate[
           Rotate[
            Rectangle[{0, 
              Rational[1, 30]}, {1, 
              Rational[-1, 30]}], Rational[-1, 2] Pi + 
            InterpolatingFunction[{{0., 5.}}, {
              5, 7, 1, {542}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
               False}, CompressedData["
1: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
HNYPcXsvi//7yyGH/wcebLsv
              "], {Developer`PackedArrayForm, CompressedData["
1:eJwd1QFHIIgWBtC2TZIkSZL02iRJkiRJkiRJkiRJkiRJ2iRjJEmSJEmSJEmS
JEmSZIwkSZIkSZIkSZIkSUb29C7H/QHfd91/Gv+tbP8rICDgf4EB/5/vFUQw
IYQSRjgRRBJFNDHEEkc8CSSSRDIppJJGOhlkkkU2OeSSRz4FFFJEMSWUUkY5
FVRSRTU11FJHPQ000kQzLbTSRjsddNLFD37STQ+99NHPAIMMMcwIo4wxzgST
TDHNDLPMMc8CiyyxzAqrrLHOBptssc0vfrPDLnvsc8AhRxxzwilnnHPBJVdc
c8Mtd9zzwCNPPPPCK2+888Enf/giQBECCSKYEEIJI5wIIokimhhiiSOeBBJJ
IpkUUkkjnQwyySKbHHLJI58CCimimBJKKaOcCiqpopoaaqmjngYaaaKZFlpp
47vkHXTSxQ9+0k0PvfTRzwCDDDHMCKOMMc4Ek0wxzQyzzDHPAossscwKq6yx
zgabbLHNL36zwy577HPAIUccc8IpZ5xzwSVXXHPDLXfc88AjTzzzwitvvPPB
J3/44vv4AwkimBBCCSOcCCKJIpoYYokjngQSSSKZFFJJI50MMskimxxyySOf
AgopopgSSimjnAoqqaKaGmqpo54GGmmimRZaaaOdDjrp4gc/6aaHXvroZ4BB
hhhmhFHGGGeCSaaYZoZZ5phngUWWWGaFVdZYZ4NNttjmF7/ZYZc99jngkCOO
OeGUM8654JIrrrnhljvueeCRJ5554ZU33vngkz98EfC3/AkimBBCCSOcCCKJ
IpoYYokjngQSSSKZFFJJI50MMskimxxyySOfAgopopgSSimjnAoqqaKaGmqp
o54GGmmimRZaaaOdDjrp4gc/6aaHXvroZ4BBhhhmhFHGGGeCSaaYZoZZ5phn
gUWWWGaFVdZYZ4NNttjmF7/ZYZc99jngkCOOOeGUM8654JIrrrnhljvueeCR
J5554ZU33vngkz988f34AwkimBBCCSOcCCKJIpoYYokjngQSSSKZFFJJI50M
MskimxxyyeM/vasHAg==
               "], CompressedData["
1:eJxl13k8VF8bAHBm7GUXSYtkL0mFRM5NSgtCyVLqV4oUJZFCJVFIG1pkK3up
kGQpHntk1wxjX8a+jG0sE/Ie/fve/76fc849zz333Oc+Z+O5q2YX2NnY2HQ4
2P7vsmx9J1m5qJoXddpKNIRtE1ys/2Gv+dcgj0sCRC+z7YDo8idJGTodeb7c
1jOV+T6wuNtqq67m37yHrs84Iy8HA5eB+qfVFUJQSvptHeMUDhu15Qp0O4Qg
4I/Llvnb4VC3lVzrPCUEPck97ceehIMgJavpM7cwNOv3u3yMCofSVtX2OSlh
KEv3GOBICQfqH9M2423CINgfhWwgHHaXQK2IlTBcfceTxt8ZDobXFT5z+QjD
x4mvSblsEUALbnBVThYGFa1YeaeNEZAuLJ/fbCIK0TmJgyoXI6G4KVwJ8a6C
uDyhtfA5Cl5Ztv05ThGHz4zs79LT0cDK8veQ/LIaMs7r2r6PfAtUhTtCnp8V
QGBlv8qD2QTY+F/Y51VmOwBE3u4XPfgJ3Ibja2zf6IDV5Kx2ws80aGpDTbkN
+4BTzqPsZd9XcGhvlrvcexI2t++lHzlTAPN90+9GLS6D41dufQupMjC0t/P3
PewK+kMu/l+UqkBd0kVCQMELGs8Va7zhr4OnpOq9apE+MF54S4Tq/hvaFlYP
vct7CP9Rj+y6+psKnw/omyWoPQMr+dH/WDubYKWKEXN+wwsor/nPdMitFc63
tj49EvcGBn1HKlpfdMC9/kAe3VNvYdfJk/t3HO6ClFWKKtuSY8FssPJ5UFY3
eJC5DZMyEyHpuv8XAb0euO4r7xQo+hHYNl/iP5HRC76CBfKrbVJh7Qz7TmGR
frBcVeB37fcXOK+oETZhMQAhj6NmnS5lQNkbx2+fHgzCL/EAWsyGLAgdUlEh
Rw2B0EKGe17vD7A0yQvr1BmBsfa+AInZfDi62FeZ/XoUHLfBNSpnEXg47pDT
8mRAc6NUUqJMCYjXCN7l3jkGmhVCrhmHf8LXrF0nHIrGwD2o6cMWz3Kw9Qt1
HhEbB7GsFuP9aRXQZz95n7RzHJqYFWL7h6pgUKVF2h6NQ/D17416urXgJWJi
9w23C/Adt3riVwdhQtRwU+FxcMtnvltTXg8xwWcP+H0cA+UMFwlRbgp8O3rt
+mHeMbhQWPf8PTbL2qF/gmcM9hrd5yN4KNCdoGQWho3kH95rwHbnW59OYHeu
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
b4Ex+B9JmTqX
               "]}, {Automatic}][$CellContext`t$$], {0, 0}], {
            
            InterpolatingFunction[{{0., 5.}}, {
             5, 7, 1, {542}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
              False}, CompressedData["
1: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
HNYPcXsvi//7yyGH/wcebLsv
             "], {Developer`PackedArrayForm, CompressedData["
1:eJwd1QFHIIgWBtC2TZIkSZL02iRJkiRJkiRJkiRJkiRJ2iRjJEmSJEmSJEmS
JEmSZIwkSZIkSZIkSZIkSUb29C7H/QHfd91/Gv+tbP8rICDgf4EB/5/vFUQw
IYQSRjgRRBJFNDHEEkc8CSSSRDIppJJGOhlkkkU2OeSSRz4FFFJEMSWUUkY5
FVRSRTU11FJHPQ000kQzLbTSRjsddNLFD37STQ+99NHPAIMMMcwIo4wxzgST
TDHNDLPMMc8CiyyxzAqrrLHOBptssc0vfrPDLnvsc8AhRxxzwilnnHPBJVdc
c8Mtd9zzwCNPPPPCK2+888Enf/giQBECCSKYEEIJI5wIIokimhhiiSOeBBJJ
IpkUUkkjnQwyySKbHHLJI58CCimimBJKKaOcCiqpopoaaqmjngYaaaKZFlpp
47vkHXTSxQ9+0k0PvfTRzwCDDDHMCKOMMc4Ek0wxzQyzzDHPAossscwKq6yx
zgabbLHNL36zwy577HPAIUccc8IpZ5xzwSVXXHPDLXfc88AjTzzzwitvvPPB
J3/44vv4AwkimBBCCSOcCCKJIpoYYokjngQSSSKZFFJJI50MMskimxxyySOf
AgopopgSSimjnAoqqaKaGmqpo54GGmmimRZaaaOdDjrp4gc/6aaHXvroZ4BB
hhhmhFHGGGeCSaaYZoZZ5phngUWWWGaFVdZYZ4NNttjmF7/ZYZc99jngkCOO
OeGUM8654JIrrrnhljvueeCRJ5554ZU33vngkz98EfC3/AkimBBCCSOcCCKJ
IpoYYokjngQSSSKZFFJJI50MMskimxxyySOfAgopopgSSimjnAoqqaKaGmqp
o54GGmmimRZaaaOdDjrp4gc/6aaHXvroZ4BBhhhmhFHGGGeCSaaYZoZZ5phn
gUWWWGaFVdZYZ4NNttjmF7/ZYZc99jngkCOOOeGUM8654JIrrrnhljvueeCR
J5554ZU33vngkz988f34AwkimBBCCSOcCCKJIpoYYokjngQSSSKZFFJJI50M
MskimxxyyeM/vasHAg==
              "], CompressedData["
1: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
iueHUM77GvR/hEu2NQ==
              "]}, {Automatic}][$CellContext`t$$], 0}]}}, PlotRange -> 2, 
        ImageSize -> 280, Frame -> True, Axes -> True, AxesStyle -> 
        Dashing[{Small, Small}], PlotLabel -> 
        "t" == NumberForm[$CellContext`t$$, {4, 2}]], 
      "Specifications" :> {{$CellContext`t$$, 0, 5., DefaultDuration -> 5, 
         AnimationRunning -> False, AnimationRepetitions -> 1, 
         AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
        "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
        True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{362., {197.84743637626525`, 204.15256362373475`}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.847433480322504*^9, 3.8474337850994763`*^9, 3.847433848333333*^9, 
   3.847433901589203*^9, {3.8474339999663086`*^9, 3.8474340113723564`*^9}, 
   3.8474341316483016`*^9, {3.8474341880074*^9, 3.8474342804585104`*^9}, 
   3.847434347506673*^9, 3.84743441126062*^9, 3.8474344914155383`*^9, {
   3.8474345251047897`*^9, 3.84743453678154*^9}, 3.8474346381023307`*^9, 
   3.8474346990494113`*^9, 3.8475014202304773`*^9, 3.847501775421412*^9, {
   3.847501849363008*^9, 3.847501863807088*^9}, 3.847501903978651*^9, 
   3.847501953517728*^9, 3.84750203430855*^9, {3.847502090524619*^9, 
   3.847502176848399*^9}, {3.8475022174800663`*^9, 3.847502226686206*^9}, {
   3.847502271583479*^9, 3.847502313821563*^9}, 3.847502456926992*^9, 
   3.8475031208237977`*^9, 3.847503354734557*^9, 3.847841633627068*^9, {
   3.847841748287282*^9, 3.8478417740958014`*^9}, 3.8478418366045628`*^9, {
   3.847841970196323*^9, 3.847842013925067*^9}, 3.8478420572949524`*^9, {
   3.847842101922344*^9, 3.8478421431564054`*^9}, 3.8478424412757063`*^9, 
   3.847842481737465*^9, 3.8478516170738597`*^9, {3.847851836655625*^9, 
   3.8478518535055304`*^9}, 3.8478519621804814`*^9, 3.84785208276624*^9, 
   3.847852124346649*^9, 3.8478522043125954`*^9, {3.84785225985118*^9, 
   3.8478523021952972`*^9}, 3.8478523657597485`*^9, 3.8478528966564875`*^9, 
   3.847852939817425*^9, 3.847853060849557*^9, 3.8478532300808325`*^9, {
   3.8478535229564323`*^9, 3.847853529333849*^9}, 3.8478535829213743`*^9, {
   3.8478536312189484`*^9, 3.8478536455204916`*^9}, 3.847853929671974*^9, 
   3.847854007886502*^9, 3.8478540379256535`*^9, {3.847854077463707*^9, 
   3.847854091791974*^9}, {3.847854497211898*^9, 3.847854506562147*^9}, {
   3.847854542118281*^9, 3.8478545558611603`*^9}, 3.847854595859212*^9, {
   3.847854639326253*^9, 3.8478546635814333`*^9}, 3.847854742543559*^9, 
   3.8478548863809953`*^9, 3.847855377366303*^9, 3.8478554608714323`*^9, 
   3.84785557578249*^9, 3.84785563965324*^9, 3.8478556898053465`*^9, 
   3.8478559564722977`*^9, {3.8478560333300533`*^9, 3.847856059016578*^9}, 
   3.84785672214949*^9, {3.847940061895616*^9, 3.8479401104859467`*^9}, {
   3.8479401804209647`*^9, 3.8479402261141443`*^9}, {3.847940306836896*^9, 
   3.847940390627516*^9}, 3.8479405269991207`*^9, {3.84795602866823*^9, 
   3.8479560410174656`*^9}, 3.8479560820535073`*^9, 3.847956113914726*^9, {
   3.847956167859581*^9, 3.8479562550759563`*^9}, {3.847956286827216*^9, 
   3.8479563205501394`*^9}, 3.8479566336092463`*^9, 3.847956664179693*^9, {
   3.847957323727208*^9, 3.847957350453846*^9}, {3.847957418302535*^9, 
   3.8479574312946157`*^9}, 3.8479575640404024`*^9, 3.84795768032559*^9, {
   3.8479577456845865`*^9, 3.847957767251273*^9}, 3.847957835699912*^9, 
   3.8479579056743736`*^9, {3.8479582199054403`*^9, 3.847958248157957*^9}, 
   3.8479796774014807`*^9, 3.848000164518021*^9, 3.8480833047283297`*^9, 
   3.848083358333102*^9, 3.848083477564786*^9, 3.8480835353037577`*^9, {
   3.848084835722597*^9, 3.848084851468354*^9}, 3.848084905119177*^9, {
   3.8480849773545837`*^9, 3.8480849992035933`*^9}, 3.848086070795807*^9, {
   3.848284086351359*^9, 3.848284098458041*^9}, 3.8482846750512037`*^9, 
   3.8482847066861134`*^9, 3.84828473991366*^9, {3.848284779183134*^9, 
   3.848284795032816*^9}, 3.848284845857038*^9, 3.8482849280495157`*^9, {
   3.848284977138186*^9, 3.848284997134636*^9}, 3.848285105470495*^9, {
   3.8482852281179256`*^9, 3.84828524990379*^9}, 3.848285281299542*^9, 
   3.850654447302698*^9, 3.8607683530553827`*^9, 3.8607685649908934`*^9, 
   3.860772274809021*^9, 3.860772368502743*^9, 3.8607724786321535`*^9, 
   3.8607725920994854`*^9, {3.860772644171657*^9, 3.860772673819076*^9}},
 CellLabel->
  "Out[216]=",ExpressionUUID->"e265995c-d8ac-4a58-b715-0d252b8796c9"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"SetDirectory", "[", "\"\<D:\\\\\>\"", "]"}], ";", "\n", 
   RowBox[{"Export", "[", 
    RowBox[{"\"\<General_anim.avi\>\"", ",", "anim"}], "]"}], ";"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.8474346255483975`*^9, 3.847434634778217*^9}, {
  3.8474347407728615`*^9, 3.847434742041478*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"f06f50d6-7373-4bb5-bcfd-8266288ecad3"]
},
WindowSize->{1440., 747.75},
WindowMargins->{{-6, Automatic}, {Automatic, -6}},
DockedCells->{},
Magnification:>1.1 Inherited,
FrontEndVersion->"13.0 for Microsoft Windows (64-bit) (February 4, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"9225d114-8260-4293-a454-552d9342e297"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 687, 12, 57, "Text",ExpressionUUID->"03ab1604-8f5f-4e95-a959-cee0ebbb150a"],
Cell[1248, 34, 18004, 445, 803, "Input",ExpressionUUID->"f1c573d6-66a6-443e-a536-78c2a7ddcebb"],
Cell[19255, 481, 390, 6, 57, "Text",ExpressionUUID->"9064276b-1fef-4a94-baca-71c953dfb3ed"],
Cell[19648, 489, 4259, 105, 207, "Input",ExpressionUUID->"93693239-7e2a-4f89-8cf7-a8f2b46766e2"],
Cell[23910, 596, 450, 9, 57, "Text",ExpressionUUID->"5ad487c6-1d01-4bb4-8677-158c0fdc7a46"],
Cell[24363, 607, 11222, 259, 441, "Input",ExpressionUUID->"bc2dd642-d8d4-420f-9e33-32c9a25fbf5c"],
Cell[35588, 868, 394, 7, 57, "Text",ExpressionUUID->"4bf8405d-f174-4744-b89e-d9a99d7ce373"],
Cell[CellGroupData[{
Cell[36007, 879, 1989, 46, 115, "Input",ExpressionUUID->"bf40c848-fe53-419b-adfb-b3a4c1314970"],
Cell[37999, 927, 433, 10, 30, "Message",ExpressionUUID->"57d69169-f5da-4c9b-a698-d74373e46ce6"]
}, Open  ]],
Cell[38447, 940, 371, 7, 57, "Text",ExpressionUUID->"8e7d718b-d732-4b68-96ac-404c9c835ceb"],
Cell[CellGroupData[{
Cell[38843, 951, 4293, 107, 157, "Input",ExpressionUUID->"4c581364-528b-4e73-b15c-9b3ec1dfef06"],
Cell[43139, 1060, 121213, 2192, 226, "Output",ExpressionUUID->"c830cfb2-640b-4a59-bb7c-851fb580af92"]
}, Open  ]],
Cell[164367, 3255, 506, 8, 57, "Text",ExpressionUUID->"09e0bf8d-0fbb-4418-b194-8ee43d4c5bc0"],
Cell[CellGroupData[{
Cell[164898, 3267, 5229, 122, 263, "Input",ExpressionUUID->"3c0ffa17-1538-4b36-838e-10c6b32685c8"],
Cell[170130, 3391, 76511, 1270, 422, "Output",ExpressionUUID->"e265995c-d8ac-4a58-b715-0d252b8796c9"]
}, Open  ]],
Cell[246656, 4664, 424, 9, 52, "Input",ExpressionUUID->"f06f50d6-7373-4bb5-bcfd-8266288ecad3"]
}
]
*)

